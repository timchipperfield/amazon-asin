---
http_interactions:
- request:
    method: post
    uri: http://127.0.0.1:9523/session
    body:
      encoding: UTF-8
      string: '{"desiredCapabilities":{"browserName":"chrome","version":"","platform":"ANY","javascriptEnabled":true,"cssSelectorsEnabled":true,"takesScreenshot":false,"nativeEvents":false,"rotatable":false,"goog:chromeOptions":{"args":["--headless","--disable-gpu"]}},"capabilities":{"firstMatch":[{"browserName":"chrome","goog:chromeOptions":{"args":["--headless","--disable-gpu"]}}]}}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.4 (ruby macosx)
      Content-Length:
      - '372'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '688'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"77.0.3865.90","chrome":{"chromedriverVersion":"77.0.3865.40
        (f484704e052e0b556f8030b65b953dce96503217-refs/branch-heads/3865@{#442})","userDataDir":"/var/folders/jt/sw87myz574l4x42760rl5fy80000gn/T/.com.google.Chrome.k6bjrY"},"goog:chromeOptions":{"debuggerAddress":"localhost:51289"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"mac
        os x","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss
        and notify"},"sessionId":"e1fb2be20d6413aab405d07a58ff2196"}}'
    http_version: 
  recorded_at: Sun, 29 Sep 2019 00:50:02 GMT
- request:
    method: post
    uri: http://127.0.0.1:9523/session/e1fb2be20d6413aab405d07a58ff2196/url
    body:
      encoding: UTF-8
      string: '{"url":"http://www.amazon.com/dp/B06XD3LXXK"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.4 (ruby macosx)
      Content-Length:
      - '45'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Sun, 29 Sep 2019 00:50:06 GMT
- request:
    method: post
    uri: http://127.0.0.1:9523/session/e1fb2be20d6413aab405d07a58ff2196/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"var source = document.documentElement.outerHTML;if (!source)
        { source = new XMLSerializer().serializeToString(document); }return source;","args":[]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.4 (ruby macosx)
      Content-Length:
      - '159'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '1692826'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {"value":"\u003Chtml lang=\"en-us\" class=\" a-js a-audio a-video a-canvas a-svg a-drag-drop a-geolocation a-history a-webworker a-autofocus a-input-placeholder a-textarea-placeholder a-local-storage a-gradients a-hires a-transform3d -scrolling a-text-shadow a-text-stroke a-box-shadow a-border-radius a-border-image a-opacity a-transform a-transition null\" data-19ax5a9jf=\"dingo\" data-aui-build-date=\"3.19.6-2019-09-27\">\u003C!-- sp:feature:head-start -->\u003Chead>\u003Cscript async=\"\" src=\"https://m.media-amazon.com/images/G/01/csm/showads.v2.js\" crossorigin=\"anonymous\">\u003C/script>\u003Cscript async=\"\" src=\"https://images-na.ssl-images-amazon.com/images/G/01/AUIClients/ClientSideMetricsAUIJavascript@jserrorsForester.10f2559e93ec589d92509318a7e2acbac74c343a._V2_.js\" crossorigin=\"anonymous\">\u003C/script>\u003Cstyle class=\"vjs-styles-defaults\">\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid {\n        padding-top: 56.25%\n      }\n    \u003C/style>\u003Cscript>var aPageStart = (new Date()).getTime();\u003C/script>\u003Cmeta charset=\"utf-8\">\n\u003Cscript type=\"text/javascript\">var ue_t0=ue_t0||+new Date();\u003C/script>\u003C!-- sp:feature:cs-optimization -->\n\u003Cmeta http-equiv=\"x-dns-prefetch-control\" content=\"on\">\u003Clink rel=\"dns-prefetch\" href=\"//images-na.ssl-images-amazon.com\">\u003Clink rel=\"dns-prefetch\" href=\"//m.media-amazon.com\">\u003Clink rel=\"dns-prefetch\" href=\"//completion.amazon.com\">\u003Cscript type=\"text/javascript\">\nwindow.ue_ihb = (window.ue_ihb || window.ueinit || 0) + 1;\nif (window.ue_ihb === 1) {\n\nvar ue_csm = window,\n    ue_hob = +new Date();\n(function(d){var e=d.ue=d.ue||{},f=Date.now||function(){return+new Date};e.d=function(b){return f()-(b?0:d.ue_t0)};e.stub=function(b,a){if(!b[a]){var c=[];b[a]=function(){c.push([c.slice.call(arguments),e.d(),d.ue_id])};b[a].replay=function(b){for(var a;a=c.shift();)b(a[0],a[1],a[2])};b[a].isStub=1}};e.exec=function(b,a){return function(){try{return b.apply(this,arguments)}catch(c){ueLogError(c,{attribution:a||\"undefined\",logLevel:\"WARN\"})}}}})(ue_csm);\n\n\n    var ue_err_chan = 'jserr-rw';\n(function(d,e){function h(f,b){if(!(a.ec>a.mxe)&&f){a.ter.push(f);b=b||{};var c=f.logLevel||b.logLevel;c&&c!==k&&c!==m&&c!==n&&c!==p||a.ec++;c&&c!=k||a.ecf++;b.pageURL=\"\"+(e.location?e.location.href:\"\");b.logLevel=c;b.attribution=f.attribution||b.attribution;a.erl.push({ex:f,info:b})}}function l(a,b,c,e,g){d.ueLogError({m:a,f:b,l:c,c:\"\"+e,err:g,fromOnError:1,args:arguments},g?{attribution:g.attribution,logLevel:g.logLevel}:void 0);return!1}var k=\"FATAL\",m=\"ERROR\",n=\"WARN\",p=\"DOWNGRADED\",a={ec:0,ecf:0,\npec:0,ts:0,erl:[],ter:[],mxe:50,startTimer:function(){a.ts++;setInterval(function(){d.ue&&a.pec\u003Ca.ec&&d.uex(\"at\");a.pec=a.ec},1E4)}};l.skipTrace=1;h.skipTrace=1;h.isStub=1;d.ueLogError=h;d.ue_err=a;e.onerror=l})(ue_csm,window);\n\n\nvar ue_id = 'WY2K06V7WEMKTC0K2H7W',\n    ue_url = '/gp/uedata',\n    ue_navtiming = 1,\n    ue_mid = 'ATVPDKIKX0DER',\n    ue_sid = '137-0530487-6192152',\n    ue_sn = 'www.amazon.com',\n    ue_furl = 'fls-na.amazon.com',\n    ue_surl = 'https://unagi-na.amazon.com/1/events/com.amazon.csm.nexusclient.prod',\n    ue_int = 0,\n    ue_fcsn = 1,\n    ue_urt = 3,\n    ue_rpl_ns = 'cel-rpl',\n    ue_ddq = 1,\n    ue_fpf = '//fls-na.amazon.com/1/batch/1/OP/ATVPDKIKX0DER:137-0530487-6192152:WY2K06V7WEMKTC0K2H7W$uedata=s:',\n    ue_sbuimp = 1,\n\n    ue_swi = 1;\nfunction ue_viz(){(function(c,e,a){function k(b){if(c.ue.viz.length\u003Cp&&!l){var a=b.type;b=b.originalEvent;/^focus./.test(a)&&b&&(b.toElement||b.fromElement||b.relatedTarget)||(a=e[m]||(\"blur\"==a||\"focusout\"==a?\"hidden\":\"visible\"),c.ue.viz.push(a+\":\"+(+new Date-c.ue.t0)),\"visible\"==a&&(ue.isl&&uex(\"at\"),l=1))}}for(var l=0,f,g,m,n=[\"\",\"webkit\",\"o\",\"ms\",\"moz\"],d=0,p=20,h=0;h\u003Cn.length&&!d;h++)if(a=n[h],f=(a?a+\"H\":\"h\")+\"idden\",d=\"boolean\"==typeof e[f])g=a+\"visibilitychange\",m=(a?a+\"V\":\"v\")+\"isibilityState\";\nk({});d&&e.addEventListener(g,k,0);c.ue&&d&&(c.ue.pageViz={event:g,propHid:f})})(ue_csm,document,window)};\n\n(function(d,k,J){function C(a){return a&&a.replace&&a.replace(/^\\s+|\\s+$/g,\"\")}function q(a){return\"undefined\"===typeof a}function D(a,b){for(var c in b)b[r](c)&&(a[c]=b[c])}function E(a){try{var b=J.cookie.match(RegExp(\"(^| )\"+a+\"=([^;]+)\"));if(b)return b[2].trim()}catch(c){}}function K(p,b){p&&(d.ue_id=a.id=a.rid=p,t=t.replace(/((.*?:){2})(\\w+)/,function(a,b){return b+p}));b&&(t=t.replace(/(.*?:)(\\w|-)+/,function(a,d){return d+b}),d.ue_sid=b);d.ue_fpf=t;d.ue.tag(\"accelerated-experience\")}function L(){var a=\n{};return function(b){b&&(a[b]=1);b=[];for(var c in a)a[r](c)&&b.push(c);return b}}function u(d,b,c,e){e=e||+new z;var f,k;if(b||q(c)){if(d)for(k in f=b?h(\"t\",b)||h(\"t\",b,{}):a.t,f[d]=e,c)c[r](k)&&h(k,b,c[k]);return e}}function h(d,b,c){var e=b&&b!=a.id?a.sc[b]:a;e||(e=a.sc[b]={});\"id\"===d&&c&&(N=1);return e[d]=c||e[d]}function O(d,b,c,e,f){c=\"on\"+c;var h=b[c];\"function\"===typeof h?d&&(a.h[d]=h):h=function(){};b[c]=function(a){f?(e(a),h(a)):(h(a),e(a))};b[c]&&(b[c].isUeh=1)}function P(p,b,c,e){function w(b,\nc){var d=[b],g=0,e={},f,k;c?(d.push(\"m=1\"),e[c]=1):e=a.sc;for(k in e)if(e[r](k)){var l=h(\"wb\",k),m=h(\"t\",k)||{},w=h(\"t0\",k)||a.t0,n;if(c||2==l){l=l?g++:\"\";d.push(\"sc\"+l+\"=\"+k);for(n in m)3>=n.length&&!q(m[n])&&null!==m[n]&&d.push(n+l+\"=\"+(m[n]-w));d.push(\"t\"+l+\"=\"+m[p]);if(h(\"ctb\",k)||h(\"wb\",k))f=1}}!F&&f&&d.push(\"ctb=1\");return d.join(\"&\")}function M(b,c,g,e){if(b){var f=d.ue_err;d.ue_url&&!e&&b&&0\u003Cb.length&&(e=new Image,a.iel.push(e),e.src=b,a.count&&a.count(\"postbackImageSize\",b.length));if(t){var h=\nk.encodeURIComponent;h&&b&&(e=new Image,b=\"\"+d.ue_fpf+h(b)+\":\"+(+new z-d.ue_t0),a.iel.push(e),e.src=b)}else a.log&&(a.log(b,\"uedata\",{n:1}),a.ielf.push(b));f&&!f.ts&&f.startTimer();a.b&&(f=a.b,a.b=\"\",M(f,c,g,1))}}function v(b){var c=x?x.type:A,d=c&&2!=c,e=a.bfini;N||(e&&1\u003Ce&&(b+=\"&bfform=1\",d||(a.isBFT=e-1)),2==c&&(b+=\"&bfnt=1\",a.isBFT=a.isBFT||1),a.ssw&&a.isBFT&&(q(a.isNRBF)&&(c=a.ssw(a.oid),c.e||q(c.val)||(a.isNRBF=1\u003Cc.val?0:1)),q(a.isNRBF)||(b+=\"&nrbf=\"+a.isNRBF)),a.isBFT&&!a.isNRBF&&(b+=\"&bft=\"+\na.isBFT));return b}if(!a.paused&&(b||q(c))){for(var m in c)c[r](m)&&h(m,b,c[m]);u(\"pc\",b,c);m=h(\"id\",b)||a.id;var g=a.url+\"?\"+p+\"&v=\"+a.v+\"&id=\"+m,F=h(\"ctb\",b)||h(\"wb\",b),l,s;F&&(g+=\"&ctb=\"+F);1\u003Cd.ueinit&&(g+=\"&ic=\"+d.ueinit);if(!(\"ld\"!=p&&\"ul\"!=p||b&&b!=m)){if(\"ld\"==p){try{k[G]&&k[G].isUeh&&(k[G]=null)}catch(E){}if(k.chrome)for(s=0;s\u003CH.length;s++)Q(B,H[s]);(s=J.ue_backdetect)&&s.ue_back&&s.ue_back.value++;d._uess&&(l=d._uess());a.isl=1}a._bf&&(g+=\"&bf=\"+a._bf());d.ue_navtiming&&f&&(h(\"ctb\",m,\"1\"),\nu(\"tc\",A,A,I));y&&!R&&(f&&D(a.t,{na_:f.navigationStart,ul_:f.unloadEventStart,_ul:f.unloadEventEnd,rd_:f.redirectStart,_rd:f.redirectEnd,fe_:f.fetchStart,lk_:f.domainLookupStart,_lk:f.domainLookupEnd,co_:f.connectStart,_co:f.connectEnd,sc_:f.secureConnectionStart,rq_:f.requestStart,rs_:f.responseStart,_rs:f.responseEnd,dl_:f.domLoading,di_:f.domInteractive,de_:f.domContentLoadedEventStart,_de:f.domContentLoadedEventEnd,_dc:f.domComplete,ld_:f.loadEventStart,_ld:f.loadEventEnd,ntd:(\"function\"!==typeof y.now||\nq(I)?0:new z(I+y.now())-new z)+a.t0}),x&&D(a.t,{ty:x.type+a.t0,rc:x.redirectCount+a.t0}),R=1);D(a.t,{hob:d.ue_hob,hoe:d.ue_hoe});a.ifr&&(g+=\"&ifr=1\")}u(p,b,c,e);c=\"ld\"==p&&b&&h(\"wb\",b);var n;c||b&&b!==m||Z(b);c||m==a.oid||$((h(\"t\",b)||{}).tc||+h(\"t0\",b),+h(\"t0\",b));(e=d.ue_mbl)&&e.cnt&&!c&&(g+=e.cnt());c?h(\"wb\",b,2):\"ld\"==p&&(a.lid=C(m));for(n in a.sc)if(1==h(\"wb\",n))break;if(c){if(a.s)return;g=w(g,null)}else e=w(g,null),e!=g&&(e=v(e),a.b=e),l&&(g+=l),g=w(g,b||a.id);g=v(g);if(a.b||c)for(n in a.sc)2==\nh(\"wb\",n)&&delete a.sc[n];l=0;a._rt&&(g+=\"&rt=\"+a._rt());c||(a.s=0,(l=d.ue_err)&&0\u003Cl.ec&&l.pec\u003Cl.ec&&(l.pec=l.ec,g+=\"&ec=\"+l.ec+\"&ecf=\"+l.ecf),l=h(\"ctb\",b),h(\"t\",b,{}));a.tag&&a.tag().length&&(g+=\"&csmtags=\"+a.tag().join(\"|\"),a.tag=L());n=a.viz||[];(e=n.length)&&(g+=\"&viz=\"+n.splice(0,e).join(\"|\"));q(d.ue_pty)||(g+=\"&pty=\"+d.ue_pty+\"&spty=\"+d.ue_spty+\"&pti=\"+d.ue_pti);a.tabid&&(g+=\"&tid=\"+a.tabid);a.aftb&&(g+=\"&aftb=1\");!a._ui||b&&b!=m||(g+=a._ui());a.a=g;M(g,p,l,c)}}function Z(a){var b=k.ue_csm_markers||\n{},c;for(c in b)b[r](c)&&u(c,a,A,b[c])}function v(a,b,c){c=c||k;if(c[S])c[S](a,b,!1);else if(c[T])c[T](\"on\"+a,b)}function Q(a,b,c){c=c||k;if(c[U])c[U](a,b,!1);else if(c[V])c[V](\"on\"+a,b)}function W(){function a(){d.onUl()}function b(a){return function(){c[a]||(c[a]=1,P(a))}}var c={},e,f;d.onLd=b(\"ld\");d.onLdEnd=b(\"ld\");d.onUl=b(\"ul\");e={stop:b(\"os\")};k.chrome?(v(B,a),H.push(a)):e[B]=d.onUl;for(f in e)e[r](f)&&O(0,k,f,e[f]);d.ue_viz&&ue_viz();v(\"load\",d.onLd);u(\"ue\")}function $(f,b){var c=d.ue_mbl;\nc&&c.ajax&&c.ajax(f,b);a.tag(\"ajax-transition\")}d.ueinit=(d.ueinit||0)+1;var a=d.ue=d.ue||{};a.t0=k.aPageStart||d.ue_t0;a.id=d.ue_id;a.url=d.ue_url;a.rid=d.ue_id;a.a=\"\";a.b=\"\";a.h={};a.s=1;a.t={};a.sc={};a.iel=[];a.ielf=[];a.viz=[];a.v=\"0.205341.0\";a.paused=!1;var r=\"hasOwnProperty\",B=\"beforeunload\",G=\"on\"+B,S=\"addEventListener\",U=\"removeEventListener\",T=\"attachEvent\",V=\"detachEvent\",z=k.Date,y=k.performance||k.webkitPerformance,f=(y||{}).timing,x=(y||{}).navigation,I=(f||{}).navigationStart,t=d.ue_fpf,\nN=0,R=0,H=[],A;a.oid=C(a.id);a.lid=C(a.id);a._t0=a.t0;a.tag=L();a.ifr=k.top!==k.self||k.frameElement?1:0;a.attach=v;a.detach=Q;if(\"000-0000000-8675309\"===d.ue_sid){var X=E(\"cdn-rid\"),Y=E(\"session-id\");X&&Y&&K(X,Y)}d.uei=W;d.ueh=O;d.ues=h;d.uet=u;d.uex=P;a.reset=K;a.pause=function(d){a.paused=d};W()})(ue_csm,window,ue_csm.document);\n\n\nue.stub(ue,\"event\");ue.stub(ue,\"onSushiUnload\");ue.stub(ue,\"onSushiFlush\");\n\nue.stub(ue,\"log\");ue.stub(ue,\"onunload\");ue.stub(ue,\"onflush\");\n(function(c){var a=c.ue;a.cv={};a.cv.scopes={};a.count=function(d,c,b){var e={},f=a.cv,g=b&&0===b.c;e.counter=d;e.value=c;e.t=a.d();b&&b.scope&&(f=a.cv.scopes[b.scope]=a.cv.scopes[b.scope]||{},e.scope=b.scope);if(void 0===c)return f[d];f[d]=c;d=0;b&&b.bf&&(d=1);ue_csm.ue_sclog||!a.clog||0!==d||g?a.log&&a.log(e,\"csmcount\",{c:1,bf:d}):a.clog(e,\"csmcount\",{bf:d})};a.count(\"baselineCounter2\",1);a&&a.event&&(a.event({requestId:c.ue_id||\"rid\",server:c.ue_sn||\"sn\",obfuscatedMarketplaceId:c.ue_mid||\"mid\"},\n\"csm\",\"csm.CSMBaselineEvent.4\"),a.count(\"nexusBaselineCounter\",1,{bf:1}))})(ue_csm);\n\n\n\nvar ue_hoe = +new Date();\n}\nwindow.ueinit = window.ue_ihb;\n\u003C/script>\n\n\u003C!-- 2guqw04ia36m -->\u003C!-- sp:feature:aui-assets -->\n\u003Cstyle>\n.a-icon,.a-link-emphasis:after{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-sprite_1x-003a05344e6a5263c945684c66748394b4cbb9a2._V2_.png);-webkit-background-size:400px 900px;background-size:400px 900px;background-repeat:no-repeat;display:inline-block;vertical-align:top}.a-hires .a-icon,.a-hires .a-link-emphasis:after{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-sprite_2x-c5d99e3ff59fde7b73c3a6270cadf470da4d9f64._V2_.png)}.a-addon-badge,.a-icon-addon{background-image:none!important;border-radius:3px 0 0 3px;background-color:#3F6998;font-size:11px;line-height:1.05;padding:4px 5px 4px 6px;color:#fff;font-style:normal;font-weight:700;position:relative;top:1px}.a-addon-badge:after,.a-addon-badge:before,.a-icon-addon:after,.a-icon-addon:before{content:\"\";position:absolute;right:-5px;border-left-width:0}.a-addon-badge:after,.a-icon-addon:after{top:0;border-style:dashed;border-width:6px;border-color:rgba(255,255,255,0);border-top:6px solid #3F6998;border-bottom-width:0;width:0;height:0;font-size:0;line-height:0;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0);border-top-width:10px}.a-addon-badge:before,.a-icon-addon:before{bottom:0;border-style:dashed;border-width:6px;border-color:rgba(255,255,255,0);border-bottom:6px solid #3F6998;border-top-width:0;width:0;height:0;font-size:0;line-height:0;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0);border-bottom-width:10px}.a-icon-nav-cart,.a-nav-cart{position:relative}.a-icon-arrow{width:11px;height:15px;background-position:-5px -35px}.a-icon-collapse,.a-icon-expand{width:7px;height:7px;background-position:-366px -86px;position:absolute;top:50%;margin-top:-4px;left:0}.a-no-js .a-icon-expand{background-position:-382px -86px}.a-icon-collapse{background-position:-382px -86px}.a-icon-section-collapse,.a-icon-section-expand{width:15px;height:12px;opacity:.64;position:relative}.a-icon-section-expand{background-position:-5px -59px}.a-icon-section-collapse{background-position:-5px -82px}.a-icon-extender-collapse,.a-icon-extender-expand{position:relative;vertical-align:baseline;margin-right:.385em}.a-icon-star,.a-icon-star-medium,.a-icon-star-mini,.a-icon-star-small{position:relative;vertical-align:text-top}.a-icon-star-medium{width:95px;height:21px;margin-right:1px;top:-2px}.a-star-medium-5{background-position:-5px -396px}.a-star-medium-4{background-position:-24px -396px}.a-star-medium-3{background-position:-43px -396px}.a-star-medium-2{background-position:-62px -396px}.a-star-medium-1{background-position:-81px -396px}.a-star-medium-0{background-position:-100px -396px}.a-star-medium-4-5{background-position:-205px -396px}.a-star-medium-3-5{background-position:-224px -396px}.a-star-medium-2-5{background-position:-243px -396px}.a-star-medium-1-5{background-position:-262px -396px}.a-star-medium-0-5{background-position:-281px -396px}.a-star-brand-medium-5{background-position:-5px -455px}.a-star-brand-medium-4{background-position:-24px -455px}.a-star-brand-medium-3{background-position:-43px -455px}.a-star-brand-medium-2{background-position:-62px -455px}.a-star-brand-medium-1{background-position:-81px -455px}.a-star-brand-medium-0{background-position:-100px -455px}.a-star-brand-medium-4-5{background-position:-205px -455px}.a-star-brand-medium-3-5{background-position:-224px -455px}.a-star-brand-medium-2-5{background-position:-243px -455px}.a-star-brand-medium-1-5{background-position:-262px -455px}.a-star-brand-medium-0-5{background-position:-281px -455px}.a-icon-star-small{width:80px;height:18px}.a-star-small-5{background-position:-5px -368px}.a-star-small-4{background-position:-21px -368px}.a-star-small-3{background-position:-37px -368px}.a-star-small-2{background-position:-53px -368px}.a-star-small-1{background-position:-69px -368px}.a-star-small-0{background-position:-85px -368px}.a-star-small-4-5{background-position:-175px -368px}.a-star-small-3-5{background-position:-191px -368px}.a-star-small-2-5{background-position:-207px -368px}.a-star-small-1-5{background-position:-223px -368px}.a-star-small-0-5{background-position:-239px -368px}.a-star-brand-small-5{background-position:-5px -427px}.a-star-brand-small-4{background-position:-21px -427px}.a-star-brand-small-3{background-position:-37px -427px}.a-star-brand-small-2{background-position:-53px -427px}.a-star-brand-small-1{background-position:-69px -427px}.a-star-brand-small-0{background-position:-85px -427px}.a-star-brand-small-4-5{background-position:-175px -427px}.a-star-brand-small-3-5{background-position:-191px -427px}.a-star-brand-small-2-5{background-position:-207px -427px}.a-star-brand-small-1-5{background-position:-223px -427px}.a-star-brand-small-0-5{background-position:-239px -427px}.a-icon-star-mini{width:60px;height:12px;top:3px}.a-star-mini-5{background-position:-100px -590px}.a-star-mini-4{background-position:-112px -590px}.a-star-mini-3{background-position:-124px -590px}.a-star-mini-2{background-position:-136px -590px}.a-star-mini-1{background-position:-148px -590px}.a-star-mini-0{background-position:-160px -590px}.a-star-mini-4-5{background-position:-230px -590px}.a-star-mini-3-5{background-position:-242px -590px}.a-star-mini-2-5{background-position:-254px -590px}.a-star-mini-1-5{background-position:-266px -590px}.a-star-mini-0-5{background-position:-278px -590px}.a-star-brand-mini-5{background-position:-100px -610px}.a-star-brand-mini-4{background-position:-112px -610px}.a-star-brand-mini-3{background-position:-124px -610px}.a-star-brand-mini-2{background-position:-136px -610px}.a-star-brand-mini-1{background-position:-148px -610px}.a-star-brand-mini-0{background-position:-160px -610px}.a-star-brand-mini-4-5{background-position:-230px -610px}.a-star-brand-mini-3-5{background-position:-242px -610px}.a-star-brand-mini-2-5{background-position:-254px -610px}.a-star-brand-mini-1-5{background-position:-266px -610px}.a-star-brand-mini-0-5{background-position:-278px -610px}a.a-icon-link-emphasis:after,a.a-link-emphasis:after{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-sprite_1x-003a05344e6a5263c945684c66748394b4cbb9a2._V2_.png);-webkit-background-size:400px 900px;background-size:400px 900px;background-repeat:no-repeat;pointer-events:none;content:\"\";display:block;position:absolute;width:3px;right:1px;top:50%;height:6px;margin-top:-3px;background-position:-346px -86px;vertical-align:top}.a-hires a.a-icon-link-emphasis:after,.a-hires a.a-link-emphasis:after{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-sprite_2x-c5d99e3ff59fde7b73c3a6270cadf470da4d9f64._V2_.png)}.a-icon-previous{width:11px;height:15px;background-position:-123px -7px}.a-icon-next{width:11px;height:15px;background-position:-105px -7px}.a-icon-restart{width:15px;height:19px;background-position:-142px -5px}.a-icon-popover{margin:5px 0 0 .385em;vertical-align:text-top;width:7px;height:5px;background-position:-90px -5px;opacity:.6}.a-size-small .a-icon-popover{margin-top:4px}.a-icon-search{opacity:.55;width:13px;height:13px;background-position:-271px -86px}.a-icon-checkmark-inverse{width:15px;height:17px;background-position:-172px -82px;opacity:.6;margin-right:.6em;vertical-align:baseline}.a-icon-gridview{width:11px;height:11px;background-position:-162px -5px}.a-icon-listview{width:11px;height:11px;background-position:-178px -5px}.a-icon-text-separator,.a-text-separator{display:inline-block;margin:-2px .67375em 0;width:1px;background-color:#ddd;line-height:0;height:14px;vertical-align:middle}.a-size-small .a-icon-text-separator,.a-size-small .a-text-separator{height:13px}.a-size-mini .a-icon-text-separator,.a-size-mini .a-text-separator{height:12px}.a-icon-row{display:block;line-height:0}.a-icon-row.a-spacing-none{padding-bottom:0}.a-icon-row.a-size-base{line-height:19px}.a-icon-row.a-size-small{line-height:1.5}.a-icon-row .a-row{margin-top:1px}.a-alert-error .a-icon-alert,.a-icon-error{background-position:-248px -35px}.a-alert-info .a-icon-alert,.a-icon-info{background-position:-350px -35px}.a-alert-success .a-icon-alert,.a-icon-success{width:27px;background-position:-318px -35px}.a-alert-warning .a-icon-alert,.a-icon-warning{background-position:-283px -35px}.a-alert-subtle-warning .a-icon-alert{background-position:-356px -168px}.a-icon-error,.a-icon-info,.a-icon-success,.a-icon-warning{height:27px;width:30px}.a-icon-error.a-icon-small,.a-icon-info.a-icon-small,.a-icon-success.a-icon-small,.a-icon-warning.a-icon-small{height:13px;width:14px}.a-alert-inline-error .a-icon-alert,.a-icon-error.a-icon-small{width:5px;background-position:-141px -130px}.a-alert-inline-info .a-icon-alert,.a-icon-info.a-icon-small{width:6px;background-position:-166px -130px}.a-alert-inline-success .a-icon-alert,.a-icon-success.a-icon-small{background-position:-117px -130px}.a-alert-inline-warning .a-icon-alert,.a-icon-warning.a-icon-small{background-position:-148px -86px}.a-alert-inline-subtle-warning .a-icon-alert{background-position:-356px -168px}.a-alert-inline-large-warning .a-icon-alert{background-position:-283px -35px}.a-icon-alt{position:absolute;left:-9999px;top:auto;display:block;width:1px;height:1px;line-height:1px;font-size:1px;overflow:hidden}.a-icon-calendar{background-position:-300px -480px;width:15px;height:15px}.a-icon-calendar-focus{background-position:-300px -500px;width:15px;height:15px}.a-icon-time{background-position:-320px -480px;width:16px;height:16px}.a-icon-time-focus{background-position:-320px -500px;width:16px;height:16px}.a-profile[data-a-type=enthusiast] .a-profile-avatar:after{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-sprite_1x-003a05344e6a5263c945684c66748394b4cbb9a2._V2_.png);-webkit-background-size:400px 900px;background-size:400px 900px;background-repeat:no-repeat;background-position:-293px -664px;width:27px;height:27px}.a-hires .a-profile[data-a-type=enthusiast] .a-profile-avatar:after{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-sprite_2x-c5d99e3ff59fde7b73c3a6270cadf470da4d9f64._V2_.png)}.a-profile[data-a-size=small] .a-profile-avatar:after{background-position:-267px -664px;width:17px;height:17px}.a-profile-verified-badge{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-sprite_1x-003a05344e6a5263c945684c66748394b4cbb9a2._V2_.png);-webkit-background-size:400px 900px;background-size:400px 900px;background-repeat:no-repeat;background-position:-345px -480px;padding-left:15px;padding-top:15px;line-height:15px;font-size:0}.a-hires .a-profile-verified-badge{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-sprite_2x-c5d99e3ff59fde7b73c3a6270cadf470da4d9f64._V2_.png)}.a-profile[data-a-size=small] .a-profile-verified-badge{background-position:-345px -500px;padding-left:13px;padding-top:13px;line-height:13px}.a-icon-wrapper{display:inline-block;vertical-align:top}.a-checkbox-fancy .a-icon.a-icon--checkbox,.a-checkbox-fancy .a-icon.a-icon--radio,.a-radio-fancy .a-icon.a-icon--checkbox,.a-radio-fancy .a-icon.a-icon--radio{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-sprite_1x-003a05344e6a5263c945684c66748394b4cbb9a2._V2_.png);-webkit-background-size:400px 900px;background-size:400px 900px;background-repeat:no-repeat}.a-hires .a-checkbox-fancy .a-icon.a-icon--checkbox,.a-hires .a-checkbox-fancy .a-icon.a-icon--radio,.a-hires .a-radio-fancy .a-icon.a-icon--checkbox,.a-hires .a-radio-fancy .a-icon.a-icon--radio{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-sprite_2x-c5d99e3ff59fde7b73c3a6270cadf470da4d9f64._V2_.png)}.a-no-js .a-checkbox-fancy i,.a-no-js .a-checkbox.a-checkbox-fancy i,.a-no-js .a-radio-fancy i,.a-no-js .a-radio.a-radio-fancy i{display:none}.a-no-js .a-checkbox-fancy input,.a-no-js .a-checkbox.a-checkbox-fancy input,.a-no-js .a-radio-fancy input,.a-no-js .a-radio.a-radio-fancy input{position:relative!important;z-index:auto!important;opacity:1}.a-domain,.a-icon-amazon-app,.a-icon-autorip,.a-icon-domain,.a-icon-fba,.a-icon-fresh,.a-icon-kindle-unlimited-headphones,.a-icon-logo,.a-icon-logo-china,.a-icon-premium,.a-icon-premium-nav,.a-icon-prime,.a-icon-prime-campus,.a-icon-prime-fresh,.a-icon-prime-headphones,.a-icon-prime-nav,.a-icon-prime-pass,.a-icon-prime-wardrobe-badge,.a-icon-prime-wardrobe-logo,.a-icon-primefresh-nav,.a-icon-share-douban,.a-icon-share-email,.a-icon-share-facebook,.a-icon-share-kaixin001,.a-icon-share-line,.a-icon-share-link,.a-icon-share-mixi,.a-icon-share-pengyou,.a-icon-share-pinterest,.a-icon-share-qq,.a-icon-share-qzone,.a-icon-share-renren,.a-icon-share-sina,.a-icon-share-sms,.a-icon-share-tencent,.a-icon-share-twitter,.a-icon-share-wechat,.a-icon-share-whatsapp,.a-icon-smile,.a-logo,.a-logo-china,.a-premium-logo,.a-premium-nav-logo,.a-prime-logo,.a-prime-nav-logo,.a-share-douban,.a-share-email,.a-share-facebook,.a-share-kaixin001,.a-share-line,.a-share-link,.a-share-mixi,.a-share-pengyou,.a-share-pinterest,.a-share-qq,.a-share-qzone,.a-share-renren,.a-share-sina,.a-share-sms,.a-share-tencent,.a-share-twitter,.a-share-wechat,.a-share-whatsapp{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-beacon_light_1x-6d11bd1ecd21789f53270cbd462c4451efaccf78._V2_.png);-webkit-background-size:512px 256px;background-size:512px 256px;background-repeat:no-repeat}.a-hires .a-domain,.a-hires .a-icon-amazon-app,.a-hires .a-icon-autorip,.a-hires .a-icon-domain,.a-hires .a-icon-fba,.a-hires .a-icon-fresh,.a-hires .a-icon-kindle-unlimited-headphones,.a-hires .a-icon-logo,.a-hires .a-icon-logo-china,.a-hires .a-icon-premium,.a-hires .a-icon-premium-nav,.a-hires .a-icon-prime,.a-hires .a-icon-prime-campus,.a-hires .a-icon-prime-fresh,.a-hires .a-icon-prime-headphones,.a-hires .a-icon-prime-nav,.a-hires .a-icon-prime-pass,.a-hires .a-icon-prime-wardrobe-badge,.a-hires .a-icon-prime-wardrobe-logo,.a-hires .a-icon-primefresh-nav,.a-hires .a-icon-share-douban,.a-hires .a-icon-share-email,.a-hires .a-icon-share-facebook,.a-hires .a-icon-share-kaixin001,.a-hires .a-icon-share-line,.a-hires .a-icon-share-link,.a-hires .a-icon-share-mixi,.a-hires .a-icon-share-pengyou,.a-hires .a-icon-share-pinterest,.a-hires .a-icon-share-qq,.a-hires .a-icon-share-qzone,.a-hires .a-icon-share-renren,.a-hires .a-icon-share-sina,.a-hires .a-icon-share-sms,.a-hires .a-icon-share-tencent,.a-hires .a-icon-share-twitter,.a-hires .a-icon-share-wechat,.a-hires .a-icon-share-whatsapp,.a-hires .a-icon-smile,.a-hires .a-logo,.a-hires .a-logo-china,.a-hires .a-premium-logo,.a-hires .a-premium-nav-logo,.a-hires .a-prime-logo,.a-hires .a-prime-nav-logo,.a-hires .a-share-douban,.a-hires .a-share-email,.a-hires .a-share-facebook,.a-hires .a-share-kaixin001,.a-hires .a-share-line,.a-hires .a-share-link,.a-hires .a-share-mixi,.a-hires .a-share-pengyou,.a-hires .a-share-pinterest,.a-hires .a-share-qq,.a-hires .a-share-qzone,.a-hires .a-share-renren,.a-hires .a-share-sina,.a-hires .a-share-sms,.a-hires .a-share-tencent,.a-hires .a-share-twitter,.a-hires .a-share-wechat,.a-hires .a-share-whatsapp{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-beacon_light_2x-f21f15607b8bab8880f1efe348e5af00a6db5671._V2_.png)}.a-domain-jp,.a-icon-domain-jp,.a-icon-jp{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-beacon_light_jp_1x-6c4c869ead3ddc5f2cfa07e0edfeb881781370af._V2_.png);-webkit-background-size:256px 32px;background-size:256px 32px}.a-hires .a-domain-jp,.a-hires .a-icon-domain-jp,.a-hires .a-icon-jp{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-beacon_light_jp_2x-7aea37b75372e7842c3586350a34345a25273658._V2_.png)}.a-icon-amazon-app{width:55px;height:55px;background-position:-2px -68px}.a-icon-autorip{width:62px;height:15px;background-position:-70px -49px;vertical-align:baseline;position:relative;bottom:-2px}.a-icon-smile{width:50px;height:21px;background-position:-256px -201px}.a-icon-freetime,.a-icon-freetime-med,.a-icon-freetime-sm{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-beacon_light_1x-6d11bd1ecd21789f53270cbd462c4451efaccf78._V2_.png);-webkit-background-size:512px 256px;background-size:512px 256px;background-repeat:no-repeat;vertical-align:baseline}.a-hires .a-icon-freetime,.a-hires .a-icon-freetime-med,.a-hires .a-icon-freetime-sm{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-beacon_light_2x-f21f15607b8bab8880f1efe348e5af00a6db5671._V2_.png)}.a-icon-freetime-sm,.a-icon-freetime.a-icon-small{background-position:-130px -209px;height:10px;width:101px}.a-icon-freetime,.a-icon-freetime-med{background-position:-144px -237px;height:14px;width:142px}.a-icon-kindle-unlimited{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-beacon_light_1x-6d11bd1ecd21789f53270cbd462c4451efaccf78._V2_.png);-webkit-background-size:512px 256px;background-size:512px 256px;background-repeat:no-repeat}.a-hires .a-icon-kindle-unlimited{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-beacon_light_2x-f21f15607b8bab8880f1efe348e5af00a6db5671._V2_.png)}.a-icon-kindle-unlimited{width:110px;height:14px;background-position:-144px -221px;vertical-align:baseline}.a-icon-kindle-unlimited.a-icon-small{width:80px;height:16px;background-position:-2px -20px}.a-icon-kindle-unlimited-fr{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-beacon_light_fr_1x-6bf640e51c2221a1ef0dcbc529cb8608904fa4a7._V2_.png);-webkit-background-size:128px 16px;background-size:128px 16px;width:86px;height:10px;background-position:-2px -2px;vertical-align:baseline}.a-hires .a-icon-kindle-unlimited-fr{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-beacon_light_fr_2x-314114bcede74dfae18b3de8a30f467d0624e1fd._V2_.png)}.a-icon-premium,.a-icon-prime,.a-premium-logo,.a-prime-logo{width:53px;height:15px;background-position:-84px -2px;vertical-align:baseline}.a-icon-premium.a-icon-small,.a-icon-prime.a-icon-small,.a-premium-logo.a-icon-small,.a-prime-logo.a-icon-small{width:42px;height:12px;background-position:-308px -192px}.a-icon-premium.a-icon-mini,.a-icon-prime.a-icon-mini,.a-premium-logo.a-icon-mini,.a-prime-logo.a-icon-mini{width:35px;height:10px;background-position:-438px -207px}.a-icon-text{padding-left:3px;position:relative;bottom:3px}.a-icon-premium-with-text,.a-icon-prime-jp-with-text,.a-icon-prime-with-text{vertical-align:top;font-style:normal;color:#111}.a-icon-premium-with-text.a-icon-small .a-icon-text,.a-icon-prime-jp-with-text.a-icon-small .a-icon-text,.a-icon-prime-with-text.a-icon-small .a-icon-text{font-size:10px;bottom:3px}.a-icon-prime-jp-with-text .a-icon-text,.a-icon-prime-with-text .a-icon-text{bottom:2px}.a-icon-prime-pass{background-position:-91px -134px;height:15px;width:77px}.a-icon-prime-campus{background-position:-401px -219px;height:16px;width:102px;vertical-align:baseline}.a-icon-prime-campus.a-icon-small{background-position:-107px -151px;height:14px;width:88px}.a-icon-pantry,.a-icon-prime-jp,.a-icon-prime-jp-nav,.a-icon-prime-pantry,.a-prime-jp-logo,.a-prime-jp-nav-logo{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-beacon_light_1x-6d11bd1ecd21789f53270cbd462c4451efaccf78._V2_.png);-webkit-background-size:512px 256px;background-size:512px 256px;background-repeat:no-repeat}.a-hires .a-icon-pantry,.a-hires .a-icon-prime-jp,.a-hires .a-icon-prime-jp-nav,.a-hires .a-icon-prime-pantry,.a-hires .a-prime-jp-logo,.a-hires .a-prime-jp-nav-logo{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-beacon_light_2x-f21f15607b8bab8880f1efe348e5af00a6db5671._V2_.png)}.a-icon-prime-pantry{background-position:-91px -116px;height:16px;width:74px;vertical-align:baseline}.a-icon-prime-pantry.a-icon-small{background-position:-84px -83px;height:14px;width:69px}.a-icon-pantry{background-position:-308px -206px;width:43px;height:14px}.a-icon-pantry.a-icon-small{background-position:-191px -124px;width:37px;height:11px}.a-icon-prime-jp-nav,.a-prime-jp-nav-logo{width:34px;height:12px;background-position:-387px -192px}.a-icon-prime-jp,.a-prime-jp-logo{width:53px;height:15px;background-position:-84px -2px;vertical-align:baseline}.a-icon-prime-jp.a-icon-small,.a-prime-jp-logo.a-icon-small{width:42px;height:12px;background-position:-308px -192px}.a-icon-prime-jp.a-icon-mini,.a-prime-jp-logo.a-icon-mini{width:35px;height:10px;background-position:-438px -207px}.a-icon-fresh{background-position:-401px -206px;height:11px;width:35px;vertical-align:baseline}.a-icon-prime-fresh{background-position:-2px -2px;height:16px;width:80px;vertical-align:baseline}.a-icon-prime-fresh.a-icon-small{width:72px;height:15px;background-position:-84px -99px}.a-icon-prime-headphones{width:63px;height:15px;background-position:-84px -66px}.a-icon-prime-headphones.a-icon-small{width:50px;height:12px;background-position:-321px -222px}.a-icon-kindle-unlimited-headphones{width:126px;height:14px;background-position:-2px -216px;vertical-align:baseline}.a-icon-kindle-unlimited-headphones.a-icon-small{width:91px;height:10px;background-position:-127px -197px}.a-button.a-icon-premium,.a-button.a-icon-prime,.a-button.a-icon-prime-jp,.a-button.a-premium-logo,.a-button.a-prime-jp-logo,.a-button.a-prime-logo{position:relative;top:1px}.a-icon-premium-nav,.a-icon-prime-jp-nav,.a-icon-prime-nav,.a-icon-primefresh-nav,.a-premium-nav-logo,.a-prime-jp-nav-logo,.a-prime-nav-logo{position:absolute;left:73px;bottom:0}.a-icon-premium-nav,.a-icon-prime-nav,.a-premium-nav-logo,.a-prime-nav-logo{width:34px;height:12px;background-position:-387px -192px}.a-icon-primefresh-nav{width:63px;height:10px;background-position:-256px -224px}.a-icon-prime-wardrobe-badge-with-text,.a-icon-prime-wardrobe-logo-with-text{vertical-align:top;font-style:normal;color:#767676}.a-icon-prime-wardrobe-badge-with-text.a-icon-small .a-icon-text,.a-icon-prime-wardrobe-logo-with-text.a-icon-small .a-icon-text{font-size:10px;bottom:3px}.a-icon-prime-wardrobe-badge-with-text.a-icon-mini .a-icon-text,.a-icon-prime-wardrobe-logo-with-text.a-icon-mini .a-icon-text{font-size:12px;bottom:2px}.a-icon-prime-wardrobe-logo-with-text .a-icon-text{bottom:0}.a-icon-prime-wardrobe-badge-with-text .a-icon-text{bottom:2px}.a-icon-prime-wardrobe-logo{width:140px;height:19px;background-position:-2px -232px}.a-icon-prime-wardrobe-badge{width:123px;height:16px;background-position:-2px -198px}.a-icon-prime-wardrobe-badge.a-icon-small{background-position:-288px -236px;height:15px;width:111px}.a-icon-prime-wardrobe-badge.a-icon-mini{background-position:-401px -237px;height:14px;width:105px}.a-hires .a-icon-premium-with-text.a-icon-small .a-icon-text{bottom:3px}.a-domain,.a-icon-domain{height:28px}.a-domain-uk,.a-icon-domain-uk{width:32px;background-position:-353px -192px}.a-domain-ca,.a-icon-domain-ca{width:15px;background-position:-134px -36px}.a-domain-de,.a-icon-domain-de{width:17px;background-position:-59px -95px}.a-domain-it,.a-icon-domain-it{width:13px;background-position:-241px -191px}.a-domain-es,.a-icon-domain-es{width:16px;background-position:-241px -131px}.a-domain-fr,.a-icon-domain-fr{width:12px;background-position:-387px -206px}.a-domain-jp,.a-icon-domain-jp{width:28px;background-position:-217px -2px}.a-domain-br,.a-icon-domain-br{width:42px;background-position:-197px -137px}.a-domain-in,.a-icon-domain-in{width:14px;background-position:-495px -189px}.a-icon-domain-mx{width:48px;background-position:-84px -19px}.a-icon-domain-au{width:44px;background-position:-185px -167px}.a-icon-domain-ru{width:16px;background-position:-259px -133px}.a-icon-domain-nl{width:13px;background-position:-241px -161px}.a-icon-share-line,.a-share-line{width:17px;height:17px;background-position:-277px -144px;position:relative;top:1px}.a-icon-share-douban,.a-icon-share-email,.a-icon-share-facebook,.a-icon-share-kaixin001,.a-icon-share-link,.a-icon-share-mixi,.a-icon-share-pengyou,.a-icon-share-pinterest,.a-icon-share-qq,.a-icon-share-qzone,.a-icon-share-renren,.a-icon-share-sina,.a-icon-share-sms,.a-icon-share-tencent,.a-icon-share-twitter,.a-icon-share-wechat,.a-icon-share-whatsapp,.a-share-douban,.a-share-email,.a-share-facebook,.a-share-kaixin001,.a-share-link,.a-share-mixi,.a-share-pengyou,.a-share-pinterest,.a-share-qq,.a-share-qzone,.a-share-renren,.a-share-sina,.a-share-sms,.a-share-tencent,.a-share-twitter,.a-share-wechat,.a-share-whatsapp{position:relative;top:1px}.a-icon-share-facebook,.a-share-facebook{width:17px;height:17px;background-position:-256px -163px}.a-icon-share-twitter,.a-share-twitter{width:18px;height:17px;background-position:-256px -182px}.a-icon-share-pinterest,.a-share-pinterest{width:17px;height:17px;background-position:-423px -187px}.a-icon-share-email,.a-share-email{width:19px;height:17px;background-position:-170px -132px}.a-icon-share-mixi,.a-share-mixi{width:19px;height:17px;background-position:-167px -113px}.a-icon-share-kaixin001,.a-share-kaixin001{width:17px;height:17px;background-position:-275px -163px}.a-icon-share-tencent,.a-share-tencent{width:17px;height:17px;background-position:-158px -94px}.a-icon-share-pengyou,.a-share-pengyou{width:17px;height:17px;background-position:-277px -125px}.a-icon-share-renren,.a-share-renren{width:17px;height:17px;background-position:-207px -105px}.a-icon-share-douban,.a-share-douban{width:17px;height:17px;background-position:-276px -182px}.a-icon-share-qzone,.a-share-qzone{width:17px;height:17px;background-position:-188px -105px}.a-icon-share-sina,.a-share-sina{width:17px;height:17px;background-position:-139px -2px}.a-icon-share-wechat,.a-share-wechat{width:17px;height:17px;background-position:-155px -75px}.a-icon-share-qq,.a-share-qq{width:17px;height:17px;background-position:-442px -188px}.a-icon-share-sms,.a-share-sms{width:19px;height:19px;background-position:-59px -74px}.a-icon-share-link,.a-share-link{width:18px;height:18px;background-position:-475px -199px}.a-icon-share-whatsapp,.a-share-whatsapp{width:17px;height:17px;background-position:-151px -56px}.a-icon-fba-with-text{background-image:none!important;border-radius:2px 0 0 2px;background-color:#3e4650;line-height:1.05;font-size:12px;color:#fff;padding:3px 4px 3px 5px;font-style:normal;position:relative;top:1px;letter-spacing:.08em;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.a-icon-fba-with-text:after{content:\"\";position:absolute;right:-5px;top:0;border-style:dashed;border-width:6px;border-color:rgba(255,255,255,0);border-top:6px solid #3e4650;border-bottom-width:0;width:0;height:0;font-size:0;line-height:0;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0);border-left-width:0;border-top-width:10px}.a-icon-fba-with-text:before{content:\"\";position:absolute;right:-5px;bottom:0;border-style:dashed;border-width:6px;border-color:rgba(255,255,255,0);border-bottom:6px solid #3e4650;border-top-width:0;width:0;height:0;font-size:0;line-height:0;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0);border-left-width:0;border-bottom-width:10px}.a-icon-fba{background-position:-134px -21px;height:13px;width:13px}.a-icon-text-fba{font-family:'Arial Narrow',Arial,sans-serif;font-stretch:condensed;padding-left:3px;vertical-align:bottom}.a-icon-logo,.a-logo{background-position:-2px -165px;height:31px;width:103px}.a-icon-logo-china,.a-logo-china{background-position:-2px -125px;height:38px;width:87px}.a-icon-nav-cart,.a-nav-cart{width:38px;height:26px;background-position:-157px -245px}.a-icon-1click{height:25px;width:25px;background-position:-5px -5px}.a-icon-cart{height:25px;width:25px;background-position:-35px -5px}.a-icon-sns{height:25px;width:25px;background-position:-88px -35px}.a-icon-supplemental{opacity:.64;width:8px;height:11px;background-position:-77px -5px}.a-icon-dropdown{width:10px;height:8px;background-position:-7px -102px}.a-icon-arrow-up{background-position:-354px -5px;width:7px;height:4px;opacity:.64}.a-icon-radio-active,.a-icon-radio-inactive{vertical-align:middle;width:19px;height:19px}.a-icon-radio-inactive{background-position:-6px -294px}.a-icon-radio-inactive.a-icon-radio-disabled{background-position:-360px -560px}.a-icon-radio-inactive:hover{background-position:-54px -294px}.a-icon-radio-active{background-position:-30px -294px}.a-icon-radio-active.a-icon-radio-disabled{background-position:-380px -560px}.a-radio-fancy:hover .a-icon-radio-inactive{background-position:-54px -294px}.a-radio-fancy:hover .a-icon-radio-inactive.a-icon-radio-disabled{background-position:-360px -560px}.a-checkbox-fancy .a-icon-checkbox{vertical-align:middle;height:16px;width:16px}.a-checkbox-fancy:hover .a-icon-checkbox{background-position:-54px -274px}.a-checkbox-fancy .a-icon-checkbox,.a-checkbox-fancy.a-hover-disable:hover .a-icon-checkbox{background-position:-6px -274px}.a-checkbox-fancy :checked+.a-icon-checkbox{background-position:-30px -274px}.a-checkbox-fancy:hover :checked+.a-icon-checkbox{background-position:-30px -274px}.a-checkbox-fancy :disabled+.a-icon-checkbox{background-position:-360px -530px}.a-checkbox-fancy :checked:disabled+.a-icon-checkbox{background-position:-380px -530px}.a-radio-fancy .a-icon-radio{vertical-align:middle;height:17px;width:17px}.a-radio-fancy:hover .a-icon-radio{background-position:-54px -294px}.a-radio-fancy .a-icon-radio,.a-radio-fancy.a-hover-disable:hover .a-icon-radio{background-position:-6px -294px}.a-radio-fancy :checked+.a-icon-radio{background-position:-30px -294px}.a-radio-fancy:hover :checked+.a-icon-radio{background-position:-30px -294px}.a-radio-fancy :disabled+.a-icon-radio{background-position:-360px -560px}.a-radio-fancy :checked:disabled+.a-icon-radio{background-position:-380px -560px}.a-icon-extender-collapse,.a-icon-extender-expand{width:7px;height:9px;background-position:-82px -293px}.a-icon-extender-collapse{background-position:-94px -293px}.a-icon-star{width:80px;height:18px}[class*=a-icon-star]>.a-icon-alt{left:auto;width:100%;height:100%;font-size:inherit;line-height:normal;opacity:0}.a-star-5{background-position:-5px -368px}.a-star-4{background-position:-21px -368px}.a-star-3{background-position:-37px -368px}.a-star-2{background-position:-53px -368px}.a-star-1{background-position:-69px -368px}.a-star-0{background-position:-85px -368px}.a-star-4-5{background-position:-175px -368px}.a-star-3-5{background-position:-191px -368px}.a-star-2-5{background-position:-207px -368px}.a-star-1-5{background-position:-223px -368px}.a-star-0-5{background-position:-239px -368px}.a-star-brand-5{background-position:-5px -427px}.a-star-brand-4{background-position:-21px -427px}.a-star-brand-3{background-position:-37px -427px}.a-star-brand-2{background-position:-53px -427px}.a-star-brand-1{background-position:-69px -427px}.a-star-brand-0{background-position:-85px -427px}.a-star-brand-4-5{background-position:-175px -427px}.a-star-brand-3-5{background-position:-191px -427px}.a-star-brand-2-5{background-position:-207px -427px}.a-star-brand-1-5{background-position:-223px -427px}.a-star-brand-0-5{background-position:-239px -427px}a.a-icon-link-emphasis:hover:after,a.a-link-emphasis:hover:after{background-position:-346px -101px}.a-icon-close{opacity:.64;width:10px;height:9px;background-position:-297px -5px}.a-icon-remove{width:13px;height:12px;background-position:-311px -5px;opacity:.64}.a-icon-row{padding-top:1px;padding-bottom:1px}.a-icon-row:hover a{text-decoration:none}.a-icon-checkout{background-position:-58px -35px;height:25px;width:25px}.a-icon-buynow{width:25px;height:25px;background-position:-35px -60px}.a-icon-star-large,.a-icon-star-large-full,.a-icon-star-large-hover{height:35px;width:38px}.a-icon-star-large{background-position:-350px -705px}.a-icon-star-large-full{background-position:-300px -705px}.a-icon-star-large-hover{background-position:-250px -705px}.a-icon.a-icon-heart-hollow-dark,.a-icon.a-icon-heart-hollow-light,.a-icon.a-icon-heart-solid-red{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-sprite_heart_desktop_1x-47cb93caf555dd4d64702d0c40e014aedf47b107._V2_.png);-webkit-background-size:26px 78px;background-size:26px 78px}.a-hires .a-icon.a-icon-heart-hollow-dark,.a-hires .a-icon.a-icon-heart-hollow-light,.a-hires .a-icon.a-icon-heart-solid-red{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-sprite_heart_desktop_2x-684318a2ed228ea69a25480cd3c659f28c4cff45._V2_.png)}.a-icon-heart-hollow-light{width:26px;height:26px;background-position:0 0}.a-icon-heart-hollow-dark{width:26px;height:26px;background-position:0 -52px}.a-icon-heart-solid-red{width:26px;height:26px;background-position:0 -26px}.a-icon-VOB-blocked,.a-icon-VOB-info,.a-icon-VOB-preferred,.a-icon-VOB-restricted{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-sprite3_light_1x-573799d7904561453f5383f796f7974349a42e27._V2_.png);-webkit-background-size:512px 64px;background-size:512px 64px;background-repeat:no-repeat}.a-hires .a-icon-VOB-blocked,.a-hires .a-icon-VOB-info,.a-hires .a-icon-VOB-preferred,.a-hires .a-icon-VOB-restricted{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@spritePackerImages-sprite3_light_2x-f97e694c8a40797412560a6b157b7d46e4767cab._V2_.png)}.a-icon-VOB-info{background-position:-57px -2px;height:53px;width:53px}.a-icon-VOB-info.a-icon-small{background-position:-222px -13px;height:20px;width:21px}.a-icon-VOB-blocked{background-position:-2px -2px;height:53px;width:53px}.a-icon-VOB-blocked.a-icon-small{background-position:-222px -35px;height:20px;width:21px}.a-icon-VOB-restricted{background-position:-167px -2px;height:53px;width:53px}.a-icon-VOB-restricted.a-icon-small{background-position:-245px -13px;height:20px;width:21px}.a-icon-VOB-preferred{background-position:-112px -2px;height:53px;width:53px}.a-icon-VOB-preferred.a-icon-small{background-position:-245px -35px;height:20px;width:21px}*{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box}body{min-height:100%}article,aside,details,figcaption,figure,footer,header,hgroup,nav,section{display:block}audio,canvas,video{display:inline-block}audio:not([controls]){display:none}html{font-size:100%;-webkit-text-size-adjust:100%}pre{margin:0}a:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}a:active,a:hover{outline:0}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}abbr{border-bottom:0 none}img{max-width:100%;border:0}button,input,select,textarea{margin:0;font-size:100%;vertical-align:middle}button,input{line-height:normal}button::-moz-focus-inner,input::-moz-focus-inner{padding:0;border:0}button,input[type=button],input[type=reset],input[type=submit]{cursor:pointer;-webkit-appearance:button}input[type=search]{-webkit-appearance:textfield}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}textarea{overflow:auto;vertical-align:top}body{padding:0;margin:0;background:#fff}.a-box-group>.a-box{margin-top:-1px;border-radius:0}.a-box-group>.a-box.a-first,.a-box-group>.a-box:first-child{border-radius:4px 4px 0 0;margin-top:0}.a-box-group>.a-box.a-first>.a-box-inner,.a-box-group>.a-box:first-child>.a-box-inner{border-radius:4px 4px 0 0}.a-box-group>.a-box.a-last,.a-box-group>.a-box:last-child{border-radius:0 0 4px 4px}.a-box-group>.a-box.a-last>.a-box-inner,.a-box-group>.a-box:last-child>.a-box-inner{border-radius:0 0 4px 4px}.a-box-group>.a-box.a-onlychild,.a-box-group>.a-box:only-child{border-radius:4px}.a-box-group>.a-box.a-onlychild>.a-box-inner,.a-box-group>.a-box:only-child>.a-box-inner{border-radius:4px}.a-box{display:block;border-radius:4px;border:1px #ddd solid;background-color:#fff}.a-box .a-box-inner{border-radius:4px;position:relative;padding:14px 18px}.a-box-thumbnail{display:inline-block}.a-box-thumbnail .a-box-inner{padding:0!important}.a-box-thumbnail .a-box-inner img{border-radius:4px}.a-box-title{overflow:hidden}.a-box-title .a-box-inner{overflow:hidden;padding:12px 18px 11px;background:#f0f0f0;box-shadow:0 1px 0 rgba(255,255,255,.5) inset;background:#f3f3f3;background:-webkit-linear-gradient(top,#f8f8f8,#eee);background:linear-gradient(to bottom,#f8f8f8,#eee)}.a-box-title h4{text-transform:uppercase;font-size:11px;font-weight:700;color:#111;line-height:1}.a-box-title+.a-box{border-top-color:#d8d8d8}.a-addon-box-title{background-color:#3F6998;border-color:#3F6998;position:relative;overflow:visible}.a-addon-box-title .a-box-inner{padding:6px 14px;color:#fff;font-weight:700;text-align:center}.a-addon-box-title:after{border-style:dashed;border-width:6px;border-color:rgba(255,255,255,0);border-top:6px solid #3F6998;border-bottom-width:0;width:0;height:0;font-size:0;line-height:0;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0);position:absolute;bottom:-7px;left:50%;margin-left:-3px;content:\"\"}.a-text-center .a-box,.a-text-center .a-box-group{margin-left:auto;margin-right:auto}.a-box-inner>.a-box:only-of-type{margin:4px 0}.a-color-base-background{background-color:#fff!important}.a-color-alternate-background{background-color:#f3f3f3!important}.a-color-offset-background{background-color:#f6f6f6!important}.a-color-base{color:#111!important}.a-color-secondary{color:#555!important}.a-color-tertiary{color:#767676!important}.a-color-state{color:#c45500!important}.a-color-link{color:#0066c0!important}.a-color-price{color:#B12704!important}.a-color-success{color:#007600!important}.a-color-error{color:#d00!important}.a-color-attainable{color:#008a00!important}.a-row{width:100%}.a-row:after,.a-row:before{display:table;content:\"\";line-height:0;font-size:0}.a-row:after{clear:both}.a-ws div.a-column,div.a-column{margin-right:2%;float:left;min-height:1px;overflow:visible}td.a-span1,td.a-span10,td.a-span11,td.a-span12,td.a-span2,td.a-span3,td.a-span4,td.a-span5,td.a-span6,td.a-span7,td.a-span8,td.a-span9,th.a-span1,th.a-span10,th.a-span11,th.a-span12,th.a-span2,th.a-span3,th.a-span4,th.a-span5,th.a-span6,th.a-span7,th.a-span8,th.a-span9{float:none;margin-right:0}.a-span12 input{float:none;margin-right:0}.a-pull1,.a-pull10,.a-pull11,.a-pull12,.a-pull2,.a-pull3,.a-pull4,.a-pull5,.a-pull6,.a-pull7,.a-pull8,.a-pull9,.a-push1,.a-push10,.a-push11,.a-push12,.a-push2,.a-push3,.a-push4,.a-push5,.a-push6,.a-push7,.a-push8,.a-push9{position:relative}.a-row .a-span1,.a-ws .a-row .a-ws-span1{width:6.448%}.a-row .a-push1{left:8.448%}.a-row .a-pull1{left:-8.448%}td.a-span1,th.a-span1{width:8.68%;float:none!important}.a-row .a-span2,.a-ws .a-row .a-ws-span2{width:14.948%}.a-row .a-push2{left:16.948%}.a-row .a-pull2{left:-16.948%}td.a-span2,th.a-span2{width:17.43%;float:none!important}.a-row .a-span3,.a-ws .a-row .a-ws-span3{width:23.448%}.a-row .a-push3{left:25.448%}.a-row .a-pull3{left:-25.448%}td.a-span3,th.a-span3{width:26.18%;float:none!important}.a-row .a-span4,.a-ws .a-row .a-ws-span4{width:31.948%}.a-row .a-push4{left:33.948%}.a-row .a-pull4{left:-33.948%}td.a-span4,th.a-span4{width:34.93%;float:none!important}.a-row .a-span5,.a-ws .a-row .a-ws-span5{width:40.448%}.a-row .a-push5{left:42.448%}.a-row .a-pull5{left:-42.448%}td.a-span5,th.a-span5{width:43.68%;float:none!important}.a-row .a-span6,.a-ws .a-row .a-ws-span6{width:48.948%}.a-row .a-push6{left:50.948%}.a-row .a-pull6{left:-50.948%}td.a-span6,th.a-span6{width:52.43%;float:none!important}.a-row .a-span7,.a-ws .a-row .a-ws-span7{width:57.448%}.a-row .a-push7{left:59.448%}.a-row .a-pull7{left:-59.448%}td.a-span7,th.a-span7{width:61.18%;float:none!important}.a-row .a-span8,.a-ws .a-row .a-ws-span8{width:65.948%}.a-row .a-push8{left:67.948%}.a-row .a-pull8{left:-67.948%}td.a-span8,th.a-span8{width:69.93%;float:none!important}.a-row .a-span9,.a-ws .a-row .a-ws-span9{width:74.448%}.a-row .a-push9{left:76.448%}.a-row .a-pull9{left:-76.448%}td.a-span9,th.a-span9{width:78.68%;float:none!important}.a-row .a-span10,.a-ws .a-row .a-ws-span10{width:82.948%}.a-row .a-push10{left:84.948%}.a-row .a-pull10{left:-84.948%}td.a-span10,th.a-span10{width:87.43%;float:none!important}.a-row .a-span11,.a-ws .a-row .a-ws-span11{width:91.448%}.a-row .a-push11{left:93.448%}.a-row .a-pull11{left:-93.448%}td.a-span11,th.a-span11{width:96.18%;float:none!important}.a-row .a-span12,.a-ws .a-row .a-ws-span12{width:99.948%}.a-row .a-push12{left:101.948%}.a-row .a-pull12{left:-101.948%}td.a-span12,th.a-span12{width:104.93%;float:none!important}.a-column.a-span-last{margin-right:0;float:right}.a-row .a-span12,.a-span12,.a-ws .a-row .a-ws-span12,.a-ws .a-ws-span12{width:100%;margin-right:0}.a-row .a-right{float:right!important;margin-left:2%!important;margin-right:0!important}.a-ws .a-ws-row>.a-column.a-span-last{float:left;margin-right:2%}.a-ws .a-ws-span12,div.a-column.a-span-last{margin-right:0;float:right}.a-ws .a-ws-row .a-ws-span-last,.a-ws .a-ws-span-last{margin-right:0!important;float:right!important}.a-fixed-left-grid-inner,.a-fixed-right-grid-inner{position:relative;padding:0}.a-fixed-left-grid-inner:after,.a-fixed-left-grid-inner:before,.a-fixed-right-grid-inner:after,.a-fixed-right-grid-inner:before{display:table;content:\"\";line-height:0;font-size:0}.a-fixed-left-grid-inner:after,.a-fixed-right-grid-inner:after{clear:both}.a-fixed-left-grid-col,.a-fixed-right-grid-col{position:relative;overflow:visible;zoom:1;min-height:1px}.a-fixed-right-grid{position:relative}.a-fixed-right-grid .a-col-left{width:100%;padding-right:3.5%}.a-fixed-right-grid .a-fixed-left-flipped-grid .a-col-left,.a-fixed-right-grid .a-fixed-left-grid .a-col-left{padding-right:0}.a-fixed-left-grid{position:relative}.a-fixed-left-grid .a-col-right{width:100%;padding-left:3.5%}.a-fixed-left-grid .a-fixed-right-flipped-grid .a-col-right,.a-fixed-left-grid .a-fixed-right-grid .a-col-right{padding-left:0}.a-grid-vertical-align.a-fixed-left-grid-inner,.a-grid-vertical-align.a-fixed-right-grid-inner{display:table!important;table-layout:fixed;zoom:1;border-collapse:collapse;width:100%}.a-grid-vertical-align.a-fixed-left-grid-inner>.a-fixed-left-grid-col,.a-grid-vertical-align.a-fixed-right-grid-inner>.a-fixed-right-grid-col{float:none!important;display:table-cell!important;zoom:1}.a-fixed-right-flipped-grid .a-col-left{overflow:hidden;zoom:1;width:auto}.a-container{min-width:998px;padding:14px 18px 18px;margin:0 auto}.a-grid-vertical-align.a-row{display:table!important;table-layout:fixed;zoom:1;border-collapse:collapse}.a-grid-vertical-align.a-row:after,.a-grid-vertical-align.a-row:before{display:none}.a-grid-vertical-align.a-row>div.a-column{float:none!important;display:table-cell!important;zoom:1;padding-right:14px}.a-grid-vertical-align.a-row>div.a-column.a-span-last{padding-right:0}.a-grid-vertical-align.a-row>div.a-span1{width:8.68%}.a-grid-vertical-align.a-row>div.a-span2{width:17.43%}.a-grid-vertical-align.a-row>div.a-span3{width:26.18%}.a-grid-vertical-align.a-row>div.a-span4{width:34.93%}.a-grid-vertical-align.a-row>div.a-span5{width:43.68%}.a-grid-vertical-align.a-row>div.a-span6{width:52.43%}.a-grid-vertical-align.a-row>div.a-span7{width:61.18%}.a-grid-vertical-align.a-row>div.a-span8{width:69.93%}.a-grid-vertical-align.a-row>div.a-span9{width:78.68%}.a-grid-vertical-align.a-row>div.a-span10{width:87.43%}.a-grid-vertical-align.a-row>div.a-span11{width:96.18%}.a-grid-vertical-align.a-row>div.a-span12{width:104.93%}.a-grid-vertical-align.a-row div.a-span12{padding-right:0}.a-grid-vertical-align.a-row div.a-width-micro{width:1px}.a-grid-vertical-align.a-row div.a-width-mini{width:49px}.a-grid-vertical-align.a-row div.a-width-small{width:91px}.a-grid-vertical-align.a-row div.a-width-base{width:127px}.a-grid-vertical-align.a-row div.a-width-medium{width:175px}.a-grid-vertical-align.a-row div.a-width-large{width:250px}.a-grid-vertical-align.a-row div.a-width-extra-large{width:400px}.a-grid-bottom.a-fixed-left-grid-inner>.a-fixed-left-grid-col,.a-grid-bottom.a-fixed-right-grid-inner>.a-fixed-right-grid-col,.a-grid-bottom.a-row>div.a-column{vertical-align:bottom}.a-grid-top.a-fixed-left-grid-inner>.a-fixed-left-grid-col,.a-grid-top.a-fixed-right-grid-inner>.a-fixed-right-grid-col,.a-grid-top.a-row>div.a-column{vertical-align:top}.a-grid-center.a-fixed-left-grid-inner>.a-fixed-left-grid-col,.a-grid-center.a-fixed-right-grid-inner>.a-fixed-right-grid-col,.a-grid-center.a-row>div.a-column{vertical-align:middle}.a-span4 div.a-span1,.a-ws .a-span4 .a-ws-row .a-ws-span1,.a-ws .a-ws-span4 .a-ws-row .a-ws-span1,.a-ws .a-ws-span4 div.a-span1{width:2.53787%}.a-span5 div.a-span1,.a-ws .a-span5 .a-ws-row .a-ws-span1,.a-ws .a-ws-span5 .a-ws-row .a-ws-span1,.a-ws .a-ws-span5 div.a-span1{width:3.72%}.a-span6 div.a-span1,.a-ws .a-span6 .a-ws-row .a-ws-span1,.a-ws .a-ws-span6 .a-ws-row .a-ws-span1,.a-ws .a-ws-span6 div.a-span1{width:4.62933%}.a-span7 div.a-span1,.a-ws .a-span7 .a-ws-row .a-ws-span1,.a-ws .a-ws-span7 .a-ws-row .a-ws-span1,.a-ws .a-ws-span7 div.a-span1{width:5.084%}.a-span8 div.a-span1,.a-ws .a-span8 .a-ws-row .a-ws-span1,.a-ws .a-ws-span8 .a-ws-row .a-ws-span1,.a-ws .a-ws-span8 div.a-span1{width:5.53867%}.a-span9 div.a-span1,.a-ws .a-span9 .a-ws-row .a-ws-span1,.a-ws .a-ws-span9 .a-ws-row .a-ws-span1,.a-ws .a-ws-span9 div.a-span1{width:5.81147%}.a-span10 div.a-span1,.a-ws .a-span10 .a-ws-row .a-ws-span1,.a-ws .a-ws-span10 .a-ws-row .a-ws-span1,.a-ws .a-ws-span10 div.a-span1{width:6.08427%}.a-span4 div.a-span2,.a-ws .a-span4 .a-ws-row .a-ws-span2,.a-ws .a-ws-span4 .a-ws-row .a-ws-span2,.a-ws .a-ws-span4 div.a-span2{width:11.3962%}.a-span5 div.a-span2,.a-ws .a-span5 .a-ws-row .a-ws-span2,.a-ws .a-ws-span5 .a-ws-row .a-ws-span2,.a-ws .a-ws-span5 div.a-span2{width:12.47%}.a-span6 div.a-span2,.a-ws .a-span6 .a-ws-row .a-ws-span2,.a-ws .a-ws-span6 .a-ws-row .a-ws-span2,.a-ws .a-ws-span6 div.a-span2{width:13.296%}.a-span7 div.a-span2,.a-ws .a-span7 .a-ws-row .a-ws-span2,.a-ws .a-ws-span7 .a-ws-row .a-ws-span2,.a-ws .a-ws-span7 div.a-span2{width:13.709%}.a-span8 div.a-span2,.a-ws .a-span8 .a-ws-row .a-ws-span2,.a-ws .a-ws-span8 .a-ws-row .a-ws-span2,.a-ws .a-ws-span8 div.a-span2{width:14.122%}.a-span9 div.a-span2,.a-ws .a-span9 .a-ws-row .a-ws-span2,.a-ws .a-ws-span9 .a-ws-row .a-ws-span2,.a-ws .a-ws-span9 div.a-span2{width:14.3698%}.a-span10 div.a-span2,.a-ws .a-span10 .a-ws-row .a-ws-span2,.a-ws .a-ws-span10 .a-ws-row .a-ws-span2,.a-ws .a-ws-span10 div.a-span2{width:14.6176%}.a-span4 div.a-span3,.a-ws .a-span4 .a-ws-row .a-ws-span3,.a-ws .a-ws-span4 .a-ws-row .a-ws-span3,.a-ws .a-ws-span4 div.a-span3{width:20.25453%}.a-span5 div.a-span3,.a-ws .a-span5 .a-ws-row .a-ws-span3,.a-ws .a-ws-span5 .a-ws-row .a-ws-span3,.a-ws .a-ws-span5 div.a-span3{width:21.22%}.a-span6 div.a-span3,.a-ws .a-span6 .a-ws-row .a-ws-span3,.a-ws .a-ws-span6 .a-ws-row .a-ws-span3,.a-ws .a-ws-span6 div.a-span3{width:21.96267%}.a-span7 div.a-span3,.a-ws .a-span7 .a-ws-row .a-ws-span3,.a-ws .a-ws-span7 .a-ws-row .a-ws-span3,.a-ws .a-ws-span7 div.a-span3{width:22.334%}.a-span8 div.a-span3,.a-ws .a-span8 .a-ws-row .a-ws-span3,.a-ws .a-ws-span8 .a-ws-row .a-ws-span3,.a-ws .a-ws-span8 div.a-span3{width:22.70533%}.a-span9 div.a-span3,.a-ws .a-span9 .a-ws-row .a-ws-span3,.a-ws .a-ws-span9 .a-ws-row .a-ws-span3,.a-ws .a-ws-span9 div.a-span3{width:22.92813%}.a-span10 div.a-span3,.a-ws .a-span10 .a-ws-row .a-ws-span3,.a-ws .a-ws-span10 .a-ws-row .a-ws-span3,.a-ws .a-ws-span10 div.a-span3{width:23.15093%}.a-span4 div.a-span4,.a-ws .a-span4 .a-ws-row .a-ws-span4,.a-ws .a-ws-span4 .a-ws-row .a-ws-span4,.a-ws .a-ws-span4 div.a-span4{width:29.11287%}.a-span5 div.a-span4,.a-ws .a-span5 .a-ws-row .a-ws-span4,.a-ws .a-ws-span5 .a-ws-row .a-ws-span4,.a-ws .a-ws-span5 div.a-span4{width:29.97%}.a-span6 div.a-span4,.a-ws .a-span6 .a-ws-row .a-ws-span4,.a-ws .a-ws-span6 .a-ws-row .a-ws-span4,.a-ws .a-ws-span6 div.a-span4{width:30.62933%}.a-span7 div.a-span4,.a-ws .a-span7 .a-ws-row .a-ws-span4,.a-ws .a-ws-span7 .a-ws-row .a-ws-span4,.a-ws .a-ws-span7 div.a-span4{width:30.959%}.a-span8 div.a-span4,.a-ws .a-span8 .a-ws-row .a-ws-span4,.a-ws .a-ws-span8 .a-ws-row .a-ws-span4,.a-ws .a-ws-span8 div.a-span4{width:31.28867%}.a-span9 div.a-span4,.a-ws .a-span9 .a-ws-row .a-ws-span4,.a-ws .a-ws-span9 .a-ws-row .a-ws-span4,.a-ws .a-ws-span9 div.a-span4{width:31.48647%}.a-span10 div.a-span4,.a-ws .a-span10 .a-ws-row .a-ws-span4,.a-ws .a-ws-span10 .a-ws-row .a-ws-span4,.a-ws .a-ws-span10 div.a-span4{width:31.68427%}.a-span4 div.a-span5,.a-ws .a-span4 .a-ws-row .a-ws-span5,.a-ws .a-ws-span4 .a-ws-row .a-ws-span5,.a-ws .a-ws-span4 div.a-span5{width:37.9712%}.a-span5 div.a-span5,.a-ws .a-span5 .a-ws-row .a-ws-span5,.a-ws .a-ws-span5 .a-ws-row .a-ws-span5,.a-ws .a-ws-span5 div.a-span5{width:38.72%}.a-span6 div.a-span5,.a-ws .a-span6 .a-ws-row .a-ws-span5,.a-ws .a-ws-span6 .a-ws-row .a-ws-span5,.a-ws .a-ws-span6 div.a-span5{width:39.296%}.a-span7 div.a-span5,.a-ws .a-span7 .a-ws-row .a-ws-span5,.a-ws .a-ws-span7 .a-ws-row .a-ws-span5,.a-ws .a-ws-span7 div.a-span5{width:39.584%}.a-span8 div.a-span5,.a-ws .a-span8 .a-ws-row .a-ws-span5,.a-ws .a-ws-span8 .a-ws-row .a-ws-span5,.a-ws .a-ws-span8 div.a-span5{width:39.872%}.a-span9 div.a-span5,.a-ws .a-span9 .a-ws-row .a-ws-span5,.a-ws .a-ws-span9 .a-ws-row .a-ws-span5,.a-ws .a-ws-span9 div.a-span5{width:40.0448%}.a-span10 div.a-span5,.a-ws .a-span10 .a-ws-row .a-ws-span5,.a-ws .a-ws-span10 .a-ws-row .a-ws-span5,.a-ws .a-ws-span10 div.a-span5{width:40.2176%}.a-span4 div.a-span6,.a-ws .a-span4 .a-ws-row .a-ws-span6,.a-ws .a-ws-span4 .a-ws-row .a-ws-span6,.a-ws .a-ws-span4 div.a-span6{width:46.82953%}.a-span5 div.a-span6,.a-ws .a-span5 .a-ws-row .a-ws-span6,.a-ws .a-ws-span5 .a-ws-row .a-ws-span6,.a-ws .a-ws-span5 div.a-span6{width:47.47%}.a-span6 div.a-span6,.a-ws .a-span6 .a-ws-row .a-ws-span6,.a-ws .a-ws-span6 .a-ws-row .a-ws-span6,.a-ws .a-ws-span6 div.a-span6{width:47.96267%}.a-span7 div.a-span6,.a-ws .a-span7 .a-ws-row .a-ws-span6,.a-ws .a-ws-span7 .a-ws-row .a-ws-span6,.a-ws .a-ws-span7 div.a-span6{width:48.209%}.a-span8 div.a-span6,.a-ws .a-span8 .a-ws-row .a-ws-span6,.a-ws .a-ws-span8 .a-ws-row .a-ws-span6,.a-ws .a-ws-span8 div.a-span6{width:48.45533%}.a-span9 div.a-span6,.a-ws .a-span9 .a-ws-row .a-ws-span6,.a-ws .a-ws-span9 .a-ws-row .a-ws-span6,.a-ws .a-ws-span9 div.a-span6{width:48.60313%}.a-span10 div.a-span6,.a-ws .a-span10 .a-ws-row .a-ws-span6,.a-ws .a-ws-span10 .a-ws-row .a-ws-span6,.a-ws .a-ws-span10 div.a-span6{width:48.75093%}.a-span4 div.a-span7,.a-ws .a-span4 .a-ws-row .a-ws-span7,.a-ws .a-ws-span4 .a-ws-row .a-ws-span7,.a-ws .a-ws-span4 div.a-span7{width:55.68787%}.a-span5 div.a-span7,.a-ws .a-span5 .a-ws-row .a-ws-span7,.a-ws .a-ws-span5 .a-ws-row .a-ws-span7,.a-ws .a-ws-span5 div.a-span7{width:56.22%}.a-span6 div.a-span7,.a-ws .a-span6 .a-ws-row .a-ws-span7,.a-ws .a-ws-span6 .a-ws-row .a-ws-span7,.a-ws .a-ws-span6 div.a-span7{width:56.62933%}.a-span7 div.a-span7,.a-ws .a-span7 .a-ws-row .a-ws-span7,.a-ws .a-ws-span7 .a-ws-row .a-ws-span7,.a-ws .a-ws-span7 div.a-span7{width:56.834%}.a-span8 div.a-span7,.a-ws .a-span8 .a-ws-row .a-ws-span7,.a-ws .a-ws-span8 .a-ws-row .a-ws-span7,.a-ws .a-ws-span8 div.a-span7{width:57.03867%}.a-span9 div.a-span7,.a-ws .a-span9 .a-ws-row .a-ws-span7,.a-ws .a-ws-span9 .a-ws-row .a-ws-span7,.a-ws .a-ws-span9 div.a-span7{width:57.16147%}.a-span10 div.a-span7,.a-ws .a-span10 .a-ws-row .a-ws-span7,.a-ws .a-ws-span10 .a-ws-row .a-ws-span7,.a-ws .a-ws-span10 div.a-span7{width:57.28427%}.a-span4 div.a-span8,.a-ws .a-span4 .a-ws-row .a-ws-span8,.a-ws .a-ws-span4 .a-ws-row .a-ws-span8,.a-ws .a-ws-span4 div.a-span8{width:64.5462%}.a-span5 div.a-span8,.a-ws .a-span5 .a-ws-row .a-ws-span8,.a-ws .a-ws-span5 .a-ws-row .a-ws-span8,.a-ws .a-ws-span5 div.a-span8{width:64.97%}.a-span6 div.a-span8,.a-ws .a-span6 .a-ws-row .a-ws-span8,.a-ws .a-ws-span6 .a-ws-row .a-ws-span8,.a-ws .a-ws-span6 div.a-span8{width:65.296%}.a-span7 div.a-span8,.a-ws .a-span7 .a-ws-row .a-ws-span8,.a-ws .a-ws-span7 .a-ws-row .a-ws-span8,.a-ws .a-ws-span7 div.a-span8{width:65.459%}.a-span8 div.a-span8,.a-ws .a-span8 .a-ws-row .a-ws-span8,.a-ws .a-ws-span8 .a-ws-row .a-ws-span8,.a-ws .a-ws-span8 div.a-span8{width:65.622%}.a-span9 div.a-span8,.a-ws .a-span9 .a-ws-row .a-ws-span8,.a-ws .a-ws-span9 .a-ws-row .a-ws-span8,.a-ws .a-ws-span9 div.a-span8{width:65.7198%}.a-span10 div.a-span8,.a-ws .a-span10 .a-ws-row .a-ws-span8,.a-ws .a-ws-span10 .a-ws-row .a-ws-span8,.a-ws .a-ws-span10 div.a-span8{width:65.8176%}.a-span4 div.a-span9,.a-ws .a-span4 .a-ws-row .a-ws-span9,.a-ws .a-ws-span4 .a-ws-row .a-ws-span9,.a-ws .a-ws-span4 div.a-span9{width:73.40453%}.a-span5 div.a-span9,.a-ws .a-span5 .a-ws-row .a-ws-span9,.a-ws .a-ws-span5 .a-ws-row .a-ws-span9,.a-ws .a-ws-span5 div.a-span9{width:73.72%}.a-span6 div.a-span9,.a-ws .a-span6 .a-ws-row .a-ws-span9,.a-ws .a-ws-span6 .a-ws-row .a-ws-span9,.a-ws .a-ws-span6 div.a-span9{width:73.96267%}.a-span7 div.a-span9,.a-ws .a-span7 .a-ws-row .a-ws-span9,.a-ws .a-ws-span7 .a-ws-row .a-ws-span9,.a-ws .a-ws-span7 div.a-span9{width:74.084%}.a-span8 div.a-span9,.a-ws .a-span8 .a-ws-row .a-ws-span9,.a-ws .a-ws-span8 .a-ws-row .a-ws-span9,.a-ws .a-ws-span8 div.a-span9{width:74.20533%}.a-span9 div.a-span9,.a-ws .a-span9 .a-ws-row .a-ws-span9,.a-ws .a-ws-span9 .a-ws-row .a-ws-span9,.a-ws .a-ws-span9 div.a-span9{width:74.27813%}.a-span10 div.a-span9,.a-ws .a-span10 .a-ws-row .a-ws-span9,.a-ws .a-ws-span10 .a-ws-row .a-ws-span9,.a-ws .a-ws-span10 div.a-span9{width:74.35093%}.a-span4 div.a-span10,.a-ws .a-span4 .a-ws-row .a-ws-span10,.a-ws .a-ws-span4 .a-ws-row .a-ws-span10,.a-ws .a-ws-span4 div.a-span10{width:82.26287%}.a-span5 div.a-span10,.a-ws .a-span5 .a-ws-row .a-ws-span10,.a-ws .a-ws-span5 .a-ws-row .a-ws-span10,.a-ws .a-ws-span5 div.a-span10{width:82.47%}.a-span6 div.a-span10,.a-ws .a-span6 .a-ws-row .a-ws-span10,.a-ws .a-ws-span6 .a-ws-row .a-ws-span10,.a-ws .a-ws-span6 div.a-span10{width:82.62933%}.a-span7 div.a-span10,.a-ws .a-span7 .a-ws-row .a-ws-span10,.a-ws .a-ws-span7 .a-ws-row .a-ws-span10,.a-ws .a-ws-span7 div.a-span10{width:82.709%}.a-span8 div.a-span10,.a-ws .a-span8 .a-ws-row .a-ws-span10,.a-ws .a-ws-span8 .a-ws-row .a-ws-span10,.a-ws .a-ws-span8 div.a-span10{width:82.78867%}.a-span9 div.a-span10,.a-ws .a-span9 .a-ws-row .a-ws-span10,.a-ws .a-ws-span9 .a-ws-row .a-ws-span10,.a-ws .a-ws-span9 div.a-span10{width:82.83647%}.a-span10 div.a-span10,.a-ws .a-span10 .a-ws-row .a-ws-span10,.a-ws .a-ws-span10 .a-ws-row .a-ws-span10,.a-ws .a-ws-span10 div.a-span10{width:82.88427%}.a-span4 div.a-span11,.a-ws .a-span4 .a-ws-row .a-ws-span11,.a-ws .a-ws-span4 .a-ws-row .a-ws-span11,.a-ws .a-ws-span4 div.a-span11{width:91.1212%}.a-span5 div.a-span11,.a-ws .a-span5 .a-ws-row .a-ws-span11,.a-ws .a-ws-span5 .a-ws-row .a-ws-span11,.a-ws .a-ws-span5 div.a-span11{width:91.22%}.a-span6 div.a-span11,.a-ws .a-span6 .a-ws-row .a-ws-span11,.a-ws .a-ws-span6 .a-ws-row .a-ws-span11,.a-ws .a-ws-span6 div.a-span11{width:91.296%}.a-span7 div.a-span11,.a-ws .a-span7 .a-ws-row .a-ws-span11,.a-ws .a-ws-span7 .a-ws-row .a-ws-span11,.a-ws .a-ws-span7 div.a-span11{width:91.334%}.a-span8 div.a-span11,.a-ws .a-span8 .a-ws-row .a-ws-span11,.a-ws .a-ws-span8 .a-ws-row .a-ws-span11,.a-ws .a-ws-span8 div.a-span11{width:91.372%}.a-span9 div.a-span11,.a-ws .a-span9 .a-ws-row .a-ws-span11,.a-ws .a-ws-span9 .a-ws-row .a-ws-span11,.a-ws .a-ws-span9 div.a-span11{width:91.3948%}.a-span10 div.a-span11,.a-ws .a-span10 .a-ws-row .a-ws-span11,.a-ws .a-ws-span10 .a-ws-row .a-ws-span11,.a-ws .a-ws-span10 div.a-span11{width:91.4176%}.a-span4 div.a-span12,.a-ws .a-span4 .a-ws-row .a-ws-span12,.a-ws .a-ws-span4 .a-ws-row .a-ws-span12,.a-ws .a-ws-span4 div.a-span12{width:99.97953%}.a-span5 div.a-span12,.a-ws .a-span5 .a-ws-row .a-ws-span12,.a-ws .a-ws-span5 .a-ws-row .a-ws-span12,.a-ws .a-ws-span5 div.a-span12{width:99.97%}.a-span6 div.a-span12,.a-ws .a-span6 .a-ws-row .a-ws-span12,.a-ws .a-ws-span6 .a-ws-row .a-ws-span12,.a-ws .a-ws-span6 div.a-span12{width:99.96267%}.a-span7 div.a-span12,.a-ws .a-span7 .a-ws-row .a-ws-span12,.a-ws .a-ws-span7 .a-ws-row .a-ws-span12,.a-ws .a-ws-span7 div.a-span12{width:99.959%}.a-span8 div.a-span12,.a-ws .a-span8 .a-ws-row .a-ws-span12,.a-ws .a-ws-span8 .a-ws-row .a-ws-span12,.a-ws .a-ws-span8 div.a-span12{width:99.95533%}.a-span9 div.a-span12,.a-ws .a-span9 .a-ws-row .a-ws-span12,.a-ws .a-ws-span9 .a-ws-row .a-ws-span12,.a-ws .a-ws-span9 div.a-span12{width:99.95313%}.a-span10 div.a-span12,.a-ws .a-span10 .a-ws-row .a-ws-span12,.a-ws .a-ws-span10 .a-ws-row .a-ws-span12,.a-ws .a-ws-span10 div.a-span12{width:99.95093%}.a-span4 .a-column,.a-ws .a-span4 .a-column,.a-ws .a-ws-span4 .a-column{margin-right:6.3%;float:left;min-height:1px}.a-span4 div.a-span12,.a-ws .a-span4 div.a-span12,.a-ws .a-ws-span4 div.a-span12{margin-right:0}.a-span4 div.a-span-last,.a-ws .a-span4 div.a-span-last,.a-ws .a-ws-span4 div.a-span-last{margin-right:0;float:right}.a-span5 .a-column,.a-ws .a-span5 .a-column,.a-ws .a-ws-span5 .a-column{margin-right:5%;float:left;min-height:1px}.a-span5 div.a-span12,.a-ws .a-span5 div.a-span12,.a-ws .a-ws-span5 div.a-span12{margin-right:0}.a-span5 div.a-span-last,.a-ws .a-span5 div.a-span-last,.a-ws .a-ws-span5 div.a-span-last{margin-right:0;float:right}.a-span6 .a-column,.a-ws .a-span6 .a-column,.a-ws .a-ws-span6 .a-column{margin-right:4%;float:left;min-height:1px}.a-span6 div.a-span12,.a-ws .a-span6 div.a-span12,.a-ws .a-ws-span6 div.a-span12{margin-right:0}.a-span6 div.a-span-last,.a-ws .a-span6 div.a-span-last,.a-ws .a-ws-span6 div.a-span-last{margin-right:0;float:right}.a-span7 .a-column,.a-ws .a-span7 .a-column,.a-ws .a-ws-span7 .a-column{margin-right:3.5%;float:left;min-height:1px}.a-span7 div.a-span12,.a-ws .a-span7 div.a-span12,.a-ws .a-ws-span7 div.a-span12{margin-right:0}.a-span7 div.a-span-last,.a-ws .a-span7 div.a-span-last,.a-ws .a-ws-span7 div.a-span-last{margin-right:0;float:right}.a-span8 .a-column,.a-ws .a-span8 .a-column,.a-ws .a-ws-span8 .a-column{margin-right:3%;float:left;min-height:1px}.a-span8 div.a-span12,.a-ws .a-span8 div.a-span12,.a-ws .a-ws-span8 div.a-span12{margin-right:0}.a-span8 div.a-span-last,.a-ws .a-span8 div.a-span-last,.a-ws .a-ws-span8 div.a-span-last{margin-right:0;float:right}.a-span9 .a-column,.a-ws .a-span9 .a-column,.a-ws .a-ws-span9 .a-column{margin-right:2.7%;float:left;min-height:1px}.a-span9 div.a-span12,.a-ws .a-span9 div.a-span12,.a-ws .a-ws-span9 div.a-span12{margin-right:0}.a-span9 div.a-span-last,.a-ws .a-span9 div.a-span-last,.a-ws .a-ws-span9 div.a-span-last{margin-right:0;float:right}.a-span10 .a-column,.a-ws .a-span10 .a-column,.a-ws .a-ws-span10 .a-column{margin-right:2.4%;float:left;min-height:1px}.a-span10 div.a-span12,.a-ws .a-span10 div.a-span12,.a-ws .a-ws-span10 div.a-span12{margin-right:0}.a-span10 div.a-span-last,.a-ws .a-span10 div.a-span-last,.a-ws .a-ws-span10 div.a-span-last{margin-right:0;float:right}.a-ws .a-column .a-ws-row>.a-span-last{float:left}.a-ws .a-span4 .a-ws-row>.a-span-last,.a-ws .a-ws-span4 .a-ws-row>.a-span-last{margin-right:6.3%}.a-ws .a-span5 .a-ws-row>.a-span-last,.a-ws .a-ws-span5 .a-ws-row>.a-span-last{margin-right:5%}.a-ws .a-span6 .a-ws-row>.a-span-last,.a-ws .a-ws-span6 .a-ws-row>.a-span-last{margin-right:4%}.a-ws .a-span7 .a-ws-row>.a-span-last,.a-ws .a-ws-span7 .a-ws-row>.a-span-last{margin-right:3.5%}.a-ws .a-span8 .a-ws-row>.a-span-last,.a-ws .a-ws-span8 .a-ws-row>.a-span-last{margin-right:3%}.a-ws .a-span9 .a-ws-row>.a-span-last,.a-ws .a-ws-span9 .a-ws-row>.a-span-last{margin-right:2.7%}.a-ws .a-span10 .a-ws-row>.a-span-last,.a-ws .a-ws-span10 .a-ws-row>.a-span-last{margin-right:2.4%}.a-last{margin-bottom:0!important}.a-spacing-none,.a-ws .a-ws-spacing-none{margin-bottom:0!important}.a-spacing-micro,.a-ws .a-ws-spacing-micro{margin-bottom:4px!important}.a-spacing-top-micro{margin-top:4px!important}.a-spacing-top-micro.a-button-stack,.a-spacing-top-micro.a-section{padding-top:4px;margin-top:0!important}.a-spacing-mini,.a-ws .a-ws-spacing-mini{margin-bottom:6px!important}.a-spacing-top-mini{margin-top:6px!important}.a-spacing-top-mini.a-button-stack,.a-spacing-top-mini.a-section{padding-top:6px;margin-top:0!important}.a-spacing-small,.a-ws .a-ws-spacing-small{margin-bottom:10px!important}.a-spacing-top-small{margin-top:10px!important}.a-spacing-base,.a-ws .a-ws-spacing-base{margin-bottom:14px!important}.a-spacing-top-base{margin-top:14px!important}.a-spacing-medium,.a-ws .a-ws-spacing-medium{margin-bottom:18px!important}.a-spacing-top-medium{margin-top:18px!important}.a-spacing-large,.a-ws .a-ws-spacing-large{margin-bottom:22px!important}.a-spacing-top-large{margin-top:22px!important}.a-spacing-extra-large,.a-ws .a-ws-spacing-extra-large{margin-bottom:26px!important}.a-spacing-top-extra-large{margin-top:26px!important}.a-spacing-double-large,.a-ws .a-ws-spacing-double-large{margin-bottom:44px!important}.a-spacing-top-double-large{margin-top:44px!important}.a-spacing-block-top{margin-top:4px}.a-spacing-block{margin:4px 0}.a-spacing-tight{line-height:0}.a-padding-none{padding:0!important}.a-padding-mini{padding:4px 6px!important}.a-padding-small{padding:6px 10px!important}.a-padding-base{padding:10px 14px!important}.a-padding-medium{padding:14px 18px!important}.a-padding-large{padding:18px 22px!important}.a-padding-double-large{padding:44px!important}.a-text-left{text-align:left!important}.a-text-center{text-align:center!important}.a-text-right{text-align:right!important}.a-width-micro{width:1px!important}.a-width-mini{width:35px}.a-width-small{width:77px}.a-width-base{width:113px}.a-width-medium{width:175px!important}.a-width-large{width:250px!important}.a-width-extra-large{width:400px!important}.a-width-limited{max-width:100%}.a-span-flex{width:auto!important}.a-span-small{width:30px!important}.a-span-base{width:56px!important}.a-span-medium{width:72px!important}.a-section{margin-bottom:22px}.a-section:last-child{margin-bottom:0}.a-letter-space{display:inline-block;width:.385em}.a-padding-extra-large{padding:20px 26px!important}body{font-size:13px;line-height:19px;color:#111;font-family:Arial,sans-serif}button,input,select,textarea{font-family:inherit}h1,h2,h3,h4,h5,h6{padding:0;margin:0}h1,h2,h3,h4{padding-bottom:4px}h1,h2,h3,h4{text-rendering:optimizeLegibility}h1:last-child,h2:last-child,h3:last-child,h4:last-child{padding-bottom:0}h1.a-spacing-none,h2.a-spacing-none,h3.a-spacing-none,h4.a-spacing-none{padding-bottom:0}h1 .a-size-base,h1 .a-size-mini,h1 .a-size-small,h1.a-size-base,h1.a-size-mini,h1.a-size-small,h2 .a-size-base,h2 .a-size-mini,h2 .a-size-small,h2.a-size-base,h2.a-size-mini,h2.a-size-small,h3 .a-size-base,h3 .a-size-mini,h3 .a-size-small,h3.a-size-base,h3.a-size-mini,h3.a-size-small,h4 .a-size-base,h4 .a-size-mini,h4 .a-size-small,h4.a-size-base,h4.a-size-mini,h4.a-size-small{padding-bottom:0}h1,h2{padding-bottom:4px}h3,h4{padding-bottom:4px}.a-size-medium .a-row.a-size-base,h1 .a-row.a-size-base,h2 .a-row.a-size-base,h3 .a-row.a-size-base,h4 .a-size-large .a-row.a-size-base{padding-top:1px}.a-size-base .a-row.a-size-base{padding-top:0}.a-box h4:last-child{padding-bottom:0}h1{font-weight:400;font-size:28px;line-height:1.2}h2{font-weight:700;font-size:21px;line-height:1.3}h3{font-weight:700;font-size:17px;line-height:1.255}h4{font-weight:700;font-size:17px;line-height:1.255}h5{font-weight:700;font-size:13px;line-height:19px}h6{font-weight:700;text-transform:uppercase;font-size:11px;line-height:1.465;padding-bottom:1px}p{padding:0;margin:0 0 14px 0}p:last-child{margin-bottom:0}p+p{margin-top:-4px}b,strong{font-weight:700}em,i{font-style:italic}blockquote{margin:13px}small{font-size:12px}.a-size-mini{font-size:11px!important;line-height:1.465!important}.a-size-small{font-size:12px!important;line-height:1.5!important}.a-size-base{font-size:13px!important;line-height:19px!important}.a-size-base-plus{font-size:15px!important;line-height:1.4!important}.a-size-medium{font-size:17px!important;line-height:1.255!important}.a-size-medium{text-rendering:optimizeLegibility}.a-size-large{font-size:21px!important;line-height:1.3!important}.a-size-large{text-rendering:optimizeLegibility}.a-size-extra-large{font-size:28px!important;line-height:1.2!important}.a-size-extra-large{text-rendering:optimizeLegibility}.a-text-strike{text-decoration:line-through!important}.a-text-normal{font-weight:400!important;font-style:normal!important;text-transform:none!important;text-decoration:none!important}.a-text-bold{font-weight:700!important}.a-text-italic{font-style:italic!important}.a-text-underline{text-decoration:underline!important}.a-text-caps{text-transform:uppercase!important}.a-text-ellipsis{text-overflow:ellipsis;overflow:hidden!important;white-space:nowrap;display:block}span.a-nowrap{display:block}.a-text-quote{position:relative;display:block;font-family:Georgia,serif;font-size:14px;font-style:italic;padding-left:.5em}.a-text-quote:before{content:\"\\201C\";position:absolute;margin-top:-3px;color:#767676;left:0}.a-text-quote:after{content:\"\\201D\";position:absolute;margin-top:-3px;margin-left:3px;color:#767676}.a-text-beside-button{display:inline-block;position:relative;top:1px;padding:4px 0 0 6px}.clearfix:after,.clearfix:before{display:table;content:\"\";line-height:0;font-size:0}.clearfix:after{clear:both}.hide-text{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.offscreen{position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden}.a-visible-phone{display:none!important}.a-visible-tablet{display:none!important}.a-hidden-desktop{display:none!important}@media (max-width:767px){.a-visible-phone{display:inherit!important}.a-hidden-phone{display:none!important}.a-hidden-desktop{display:inherit!important}.a-visible-desktop{display:none!important}}@media (min-width:768px) and (max-width:979px){.a-visible-tablet{display:inherit!important}.a-hidden-tablet{display:none!important}.a-hidden-desktop{display:inherit!important}.a-visible-desktop{display:none!important}}hr{background-color:transparent;display:block;height:1px;border-width:0;border-top:1px solid #e7e7e7;line-height:19px;margin-top:0;margin-bottom:14px}.a-color-alternate-background .a-divider.a-divider-break:after{border-top:1px solid #ddd}.a-color-alternate-background .a-divider.a-divider-break h5{background-color:#f3f3f3;color:#4d4d4d}.a-box.a-color-offset-background .a-divider.a-divider-break:after,.a-color-offset-background .a-divider.a-divider-break:after{border-top:1px solid #ddd}.a-box.a-color-offset-background .a-divider.a-divider-break h5,.a-color-offset-background .a-divider.a-divider-break h5{background-color:#f6f6f6;color:#4d4d4d}.a-box.a-color-offset-background .a-divider.a-divider-section .a-divider-inner:after,.a-color-offset-background .a-divider.a-divider-section .a-divider-inner:after{background-color:transparent;background:-webkit-linear-gradient(to right,#f6f6f6,rgba(255,255,255,0),#f6f6f6);background:linear-gradient(to right,#f6f6f6,rgba(255,255,255,0),#f6f6f6)}.a-box .a-divider.a-divider-section .a-divider-inner,.a-color-base-background .a-divider.a-divider-section .a-divider-inner,.a-divider.a-divider-section .a-divider-inner{height:44px;margin-bottom:-18px;background:-webkit-linear-gradient(to bottom,rgba(0,0,0,.14),rgba(0,0,0,.03) 3px,transparent);background:linear-gradient(to bottom,rgba(0,0,0,.14),rgba(0,0,0,.03) 3px,transparent);z-index:0;zoom:1}.a-box .a-divider.a-divider-section .a-divider-inner:after,.a-color-base-background .a-divider.a-divider-section .a-divider-inner:after,.a-divider.a-divider-section .a-divider-inner:after{display:block;width:100%;height:44px;background-color:transparent;background:-webkit-linear-gradient(to right,#fff,rgba(255,255,255,0),#fff);background:linear-gradient(to right,#fff,rgba(255,255,255,0),#fff);z-index:1;content:\"\"}.a-box .a-divider.a-divider-break,.a-color-base-background .a-divider.a-divider-break,.a-divider.a-divider-break{text-align:center;position:relative;top:2px;padding-top:1px;margin-bottom:14px;line-height:0}.a-box .a-divider.a-divider-break:after,.a-color-base-background .a-divider.a-divider-break:after,.a-divider.a-divider-break:after{content:\"\";width:100%;background-color:transparent;display:block;height:1px;border-top:1px solid #e7e7e7;position:absolute;top:50%;margin-top:-1px;z-index:1}.a-box .a-divider.a-divider-break h5,.a-color-base-background .a-divider.a-divider-break h5,.a-divider.a-divider-break h5{line-height:1;font-size:12px;color:#767676;font-weight:400;z-index:2;position:relative;display:inline-block;background-color:#fff;padding:0 8px 0 7px}.a-global-nav-wrapper{background:#f7f7f7;background:-webkit-linear-gradient(top,#fff,#eee);background:linear-gradient(to bottom,#fff,#eee);border-bottom:1px solid rgba(0,0,0,.17)}.a-global-nav-subnav{background-color:#eee;border-bottom:1px solid rgba(0,0,0,.17);padding:8px 18px 7px}.a-footer table{max-width:996px}.a-footer ul a{text-decoration:none}.a-footer ul a:hover{text-decoration:underline}.a-subheader:after,.a-subheader:before{display:table;content:\"\";line-height:0;font-size:0}.a-subheader:after{clear:both}.a-subheader.a-breadcrumb ul li{margin-right:.4235em;float:left}.a-subheader.a-breadcrumb ul li.a-breadcrumb-divider{color:#949494;position:relative;top:-1px}.a-subheader.a-breadcrumb ul li a{color:#555}.a-subheader.a-breadcrumb ul li a:hover{color:#c45500}.a-subheader.a-breadcrumb ul li.a-selected a{color:#c45500}#a-draggables-mousedown-layer{top:0;left:0;width:100%;height:100%;position:fixed}.a-scroller{width:100%;height:100%;overflow:auto}.a-scroller-vertical{overflow-x:hidden}.a-scroller-horizontal{overflow-y:hidden}.a-scroller-none{overflow:hidden}.a-alert .a-icon-alert{height:27px;width:30px;position:absolute;left:18px;top:11px}.a-alert-error{border-color:#c40000}.a-alert-error .a-alert-container{background-color:#fff;box-shadow:0 0 0 4px #fcf4f4 inset;padding-left:63px}.a-alert-error .a-alert-container .a-alert-heading{color:#c40000}.a-alert-info{border-color:#BBD3DE}.a-alert-info .a-alert-container{background-color:#f6f6f6;padding-left:60px}.a-alert-info .a-alert-container .a-alert-heading{color:#2b2b2b}.a-alert-success{border-color:#7fc87f}.a-alert-success .a-alert-container{background-color:#fff;box-shadow:0 0 0 4px #dff7df inset;padding-left:60px}.a-alert-success .a-alert-container .a-alert-heading{color:#007600}.a-alert-warning{border-color:#8c6e00}.a-alert-warning .a-alert-container{background-color:#fff;box-shadow:0 0 0 4px #fffae7 inset;padding-left:63px}.a-alert-warning .a-alert-container .a-alert-heading{color:#7c6200}.a-alert-inline .a-icon-alert{height:13px;width:14px;position:absolute;left:2px;top:2px}.a-alert-inline{display:inline-block;border:none;vertical-align:middle;background-color:transparent}.a-alert-inline .a-alert-container{padding:0}.a-alert-inline .a-alert-container .a-alert-content{margin-bottom:0;text-align:left;font-size:12px;line-height:15px}.a-alert-inline-error .a-alert-container{padding-left:16px;color:#c40000}.a-alert-inline-info .a-alert-container{padding-left:16px;color:#2b2b2b}.a-alert-inline-success .a-alert-container{padding-left:22px;color:#007600}.a-alert-inline-warning .a-alert-container{padding-left:22px;color:#111}.a-badge{text-decoration:none;display:inline-block}.a-badge .a-badge-label{position:relative;height:26px;z-index:1;float:left}.a-badge .a-badge-label .a-badge-label-inner{line-height:26px;height:26px;font-size:12px}a.a-badge:focus,a.a-badge:hover{color:#c45500}[data-a-badge-type=status] .a-badge-label{max-width:130px;background-color:#232F3E;color:#232F3E;padding:0 6px 0 10px}[data-a-badge-type=status] .a-badge-label .a-badge-label-inner{color:#fff}[data-a-badge-type=status] .a-badge-label .a-badge-label-inner [data-a-badge-color=orange]{color:#F69931}[data-a-badge-type=status] .a-badge-label:after{content:\"\";width:10px;height:26px;border-right:10px solid transparent;border-top:26px solid;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;position:absolute;top:0;right:-10px}[data-a-badge-type=deal] .a-badge-label{max-width:140px;background-color:#232F3E;padding:0 10px}[data-a-badge-type=deal] .a-badge-label[data-a-badge-color=evergreen]{background-color:#97EDFC}[data-a-badge-type=deal] .a-badge-label[data-a-badge-color=evergreen] .a-badge-label-inner{color:#333E48}[data-a-badge-type=deal] .a-badge-label .a-badge-label-inner{color:#fff}.a-badge[data-a-badge-supplementary-position]{float:left}.a-badge[data-a-badge-supplementary-position=right] .a-badge-supplementary-text{display:none;padding-left:16px;line-height:26px;height:26px;position:relative;z-index:1}.a-badge[data-a-badge-supplementary-position=bottom] .a-badge-supplementary-text{background-color:#fff;padding:32px 10px 10px 10px;position:absolute;width:100%;border-bottom:1px solid #DDD;box-shadow:0 1px 2px 0 rgba(0,0,0,.1);display:none}.a-badge:focus .a-badge-supplementary-text,.a-badge:hover .a-badge-supplementary-text{display:block}.a-badge:focus[data-a-badge-supplementary-position=right],.a-badge:hover[data-a-badge-supplementary-position=right]{width:100%}.a-button{background:#e7e9ec;border-radius:3px;border-color:#ADB1B8 #A2A6AC #8D9096;border-style:solid;border-width:1px;cursor:pointer;display:inline-block;padding:0;text-align:center;text-decoration:none!important;vertical-align:middle}.a-button .a-button-inner{background:#eff1f3;background:-webkit-linear-gradient(top,#f7f8fa,#e7e9ec);background:linear-gradient(to bottom,#f7f8fa,#e7e9ec)}.a-button:hover .a-button-inner{background:#e0e3e8;background:-webkit-linear-gradient(top,#e7eaf0,#d9dce1);background:linear-gradient(to bottom,#e7eaf0,#d9dce1)}.a-button:active .a-button-inner{box-shadow:0 1px 3px rgba(0,0,0,.2) inset;background-color:#e7e9ec;background-image:none}.a-button:active .a-button-inner{background-color:#dcdfe3}.a-button:active,.a-button:active:hover{border-color:#adb1b8 #a2a6ac #a2a6ac}.a-button:hover{border-color:#a2a6ac #979aa1 #82858a}.a-button.a-button-focus,.a-button:focus{outline:0;border-color:#e77600;box-shadow:0 0 3px 2px rgba(228,121,17,.5)}.a-button.a-button-pressed,.a-button.a-button-pressed:hover{border-color:#adb1b8 #a2a6ac #a2a6ac}.a-button.a-button-pressed .a-button-inner,.a-button.a-button-pressed:hover .a-button-inner{background-color:#dcdfe3;background-image:none;box-shadow:0 0 3px 2px rgba(228,121,17,.5)}.a-button.a-button-error{border-color:#d00}.a-button .a-button-text{color:#111}.a-button .a-icon-previous{margin:5px 6px 5px 5px}.a-button .a-icon-next{margin:5px 5px 5px 6px}.a-button .a-icon-restart{margin:3px 3px 3px 4px}.a-button-text{background-color:transparent;border:0;display:block;font-size:13px;line-height:29px;margin:0;outline:0;padding:0 10px 0 11px;text-align:center;white-space:nowrap}.a-button-text:focus{outline:0}a.a-button-text,button.a-button-text{width:100%;height:100%}.a-button-inner{display:block;position:relative;overflow:hidden;height:29px;box-shadow:0 1px 0 rgba(255,255,255,.6) inset;border-radius:2px}.a-button-input{position:absolute;background-color:transparent;color:transparent;border:0;cursor:pointer;height:100%;width:100%;left:0;top:0;opacity:.01;outline:0;overflow:visible;z-index:20}.a-button a,.a-button:hover a{color:#111;text-decoration:none!important}.a-button-image{height:auto}.a-button-image .a-button-inner{padding:6px;line-height:0;height:auto}.a-button-image.a-button-small .a-button-inner{height:33px}.a-button-icon .a-icon{position:absolute}.a-button-icon .a-icon-1click,.a-button-icon .a-icon-buynow,.a-button-icon .a-icon-cart,.a-button-icon .a-icon-sns{top:2px;left:2px}.a-button-icon .a-button-text{padding-left:35px;position:relative;z-index:10}.a-button-stretch{width:100%}.a-button-beside-text{margin-top:-3px}.a-button-text img{min-width:5px}.a-button+.a-button{margin-left:.385em}@-moz-document url-prefix(){.a-button .a-button-text{line-height:29px}.a-button-small .a-button-text{line-height:21px}}.a-button.a-button-small{height:22px}.a-button.a-button-small .a-button-text{font-size:11px;height:20px;line-height:20px;padding:0 6px 0 7px}.a-button.a-button-small .a-button-inner,.a-button.a-button-small.a-button-disabled .a-button-inner,.a-button.a-button-small.a-button-disabled.a-button-focus .a-button-inner,.a-button.a-button-small.a-button-disabled:active .a-button-inner,.a-button.a-button-small.a-button-disabled:focus .a-button-inner,.a-button.a-button-small.a-button-disabled:hover .a-button-inner,.a-button.a-button-small.a-button-focus .a-button-inner,.a-button.a-button-small.a-button-focus:active .a-button-inner,.a-button.a-button-small:active .a-button-inner,.a-button.a-button-small:focus .a-button-inner,.a-button.a-button-small:focus:active .a-button-inner,.a-button.a-button-small:hover .a-button-inner{height:20px!important}.a-button-toggle{border-color:#adb1b8 #a2a6ac #8d9096;background-color:#fff}.a-button-toggle .a-button-inner{box-shadow:0 1px 0 rgba(255,255,255,.6) inset;background-color:#fff;background-image:none;height:auto}.a-button-toggle .a-button-text{white-space:normal;text-align:left;padding:5px 10px 5px 11px;line-height:19px}.a-button-toggle.a-button-focus,.a-button-toggle:focus,.a-button-toggle:hover{border-color:#a2a6ac #979aa1 #82858a}.a-button-toggle.a-button-focus .a-button-inner,.a-button-toggle:focus .a-button-inner,.a-button-toggle:hover .a-button-inner{background-color:#f3f3f3;background-image:none}.a-button-toggle.a-button-thumbnail.a-button-unavailable,.a-button-toggle.a-button-unavailable{border-color:#adb1b8 #a2a6ac #8d9096;border-style:dashed}.a-button-toggle.a-button-thumbnail.a-button-unavailable:hover:not(.a-button-selected),.a-button-toggle.a-button-unavailable:hover:not(.a-button-selected){border-color:#a2a6ac #979aa1 #82858a}.a-button-toggle.a-button-thumbnail.a-button-unavailable:active,.a-button-toggle.a-button-thumbnail.a-button-unavailable:active:hover:not(.a-button-selected),.a-button-toggle.a-button-unavailable:active,.a-button-toggle.a-button-unavailable:active:hover:not(.a-button-selected){border-color:#8c8c8c;border-style:solid}.a-button-toggle.a-button-thumbnail.a-button-unavailable .a-button-text,.a-button-toggle.a-button-unavailable .a-button-text{color:#767676}.a-button-toggle:active,.a-button-toggle:active:hover{border-color:#adb1b8 #a2a6ac #a2a6ac}.a-button-toggle:active .a-button-inner{background-image:none;background-color:#eaecee}.a-button-toggle.a-button-selected{background-color:#fff;overflow:visible}.a-button-toggle.a-button-selected,.a-button-toggle.a-button-selected.a-button-unavailable{border-color:#e77600}.a-button-toggle.a-button-selected .a-button-inner,.a-button-toggle.a-button-selected.a-button-focus .a-button-inner,.a-button-toggle.a-button-selected.a-button-focus:hover .a-button-inner,.a-button-toggle.a-button-selected:focus .a-button-inner,.a-button-toggle.a-button-selected:focus:hover .a-button-inner,.a-button-toggle.a-button-selected:hover .a-button-inner{background-color:#fef8f2;background-image:none}.a-button-toggle.a-button-selected .a-button-text{font-weight:700}.a-button-toggle.a-button-error .a-button-text{color:#d00}.a-button-toggle.a-button-thumbnail{border-radius:2px;height:auto;overflow:visible;border-color:#a2a6ac;border-radius:2px}.a-button-toggle.a-button-thumbnail.a-button-focus,.a-button-toggle.a-button-thumbnail:focus,.a-button-toggle.a-button-thumbnail:hover{border-color:#a2a6ac #979aa1 #82858a}.a-button-toggle.a-button-thumbnail:hover .a-button-inner{background-color:#fff}.a-button-toggle.a-button-thumbnail:active{border-color:#adb1b8 #a2a6ac #a2a6ac}.a-button-toggle.a-button-thumbnail.a-button-selected{border-color:#e77600}.a-button-toggle.a-button-thumbnail .a-button-inner{border-radius:2px;height:auto;overflow:hidden;padding:0}.a-button-toggle.a-button-thumbnail .a-button-inner img{border-radius:2px}.a-button-toggle.a-button-thumbnail .a-button-text{padding:0}.a-button-toggle.a-button-thumbnail button.a-button-text{height:auto}.a-button-toggle.a-button-thumbnail.a-button-disabled{background:#fff!important;border-color:#e7e7e7!important}.a-button-toggle.a-button-thumbnail.a-button-disabled .a-button-inner{background:0 0!important}.a-button-toggle.a-button-thumbnail.a-button-disabled img{opacity:.32}.a-button-toggle-section{height:auto}.a-button-toggle-section .a-button-inner{padding:14px 18px}.a-button-toggle-section .a-button-text{line-height:19px}.a-button-toggle-group:after,.a-button-toggle-group:before{display:table;content:\"\";line-height:0;font-size:0}.a-button-toggle-group:after{clear:both}.a-button-dropdown .a-button-text{padding-right:26px;text-align:left;overflow:hidden;text-overflow:ellipsis;position:relative;z-index:10}.a-button-dropdown.a-button-small .a-button-text{padding-right:20px}.a-button-group .a-button-dropdown,.a-button-group .a-button-splitdropdown{width:26px!important;min-width:26px!important}.a-button .a-icon-dropdown{position:absolute;top:10px;right:8px}.a-button.a-button-small .a-icon-dropdown{top:6px}.a-button.a-button-small.a-button-dropdown .a-icon-dropdown{right:5px}.a-button-disabled{background:#f7f8fa;background-image:none!important;border-color:#e0e0e0!important;cursor:default!important}.a-button-disabled .a-button-inner .a-icon{opacity:.4!important}.a-button-disabled .a-button-primary{background-color:#f9f3e5!important}.a-button-disabled:active .a-button-inner,.a-button-disabled:focus .a-button-inner,.a-button-disabled:hover .a-button-inner{background-color:#f7f8fa;background-image:none!important;box-shadow:none!important}.a-button-disabled .a-button-text{color:#555!important;cursor:default!important;font-weight:400;text-shadow:none!important}.a-button-disabled .a-button-inner{background-image:none!important;background-color:#f7f8fa!important;box-shadow:none!important}.a-button-disabled .a-button-input{display:none}.a-button-primary{background:#f0c14b;border-color:#a88734 #9c7e31 #846a29;color:#111}.a-button-primary .a-button-inner{background:#f4d078;background:-webkit-linear-gradient(top,#f7dfa5,#f0c14b);background:linear-gradient(to bottom,#f7dfa5,#f0c14b)}.a-button-primary:hover .a-button-inner{background:#f1c861;background:-webkit-linear-gradient(top,#f5d78e,#eeb933);background:linear-gradient(to bottom,#f5d78e,#eeb933)}.a-button-primary:active .a-button-inner{background-color:#f0c14b;background-image:none}.a-button-primary.a-button-focus,.a-button-primary:focus,.a-button-primary:hover,.a-button-primary:hover:active{border-color:#a88734 #9c7e31 #846a29}.a-button-primary:active{border-color:#a88734 #9c7e31 #9c7e31}.a-button-primary.a-button-focus,.a-button-primary:focus{border-color:#e77600}.a-button-primary.a-button-disabled{background-color:#f9f3e5!important;border-color:#e8e0cd!important}.a-button-primary.a-button-disabled .a-button-inner{background-color:#f9f3e5!important}.a-button-primary.a-button-disabled .a-button-text{color:a_nullable_with_important()}.a-button-primary.a-button-pressed,.a-button-primary.a-button-pressed:hover{border-color:#a88734 #9c7e31 #9c7e31}.a-button-primary.a-button-pressed .a-button-inner,.a-button-primary.a-button-pressed:hover .a-button-inner{background-image:none;box-shadow:0 1px 3px rgba(0,0,0,.2) inset;background-color:#f0c14b}.a-button-primary .a-button-inner{box-shadow:0 1px 0 rgba(255,255,255,.4) inset}.a-button-primary .a-button-text{color:#111}.a-button-disabled>.a-button-primary .a-button-inner{background-color:#f9f3e5!important}.a-button-dark,.a-button-search{background:#444C55;border-color:#3d444c #2f353b #2c3137;color:#fff}.a-button-dark .a-button-inner,.a-button-search .a-button-inner{background:#5b626a;background:-webkit-linear-gradient(top,#72787F,#444C55);background:linear-gradient(to bottom,#72787F,#444C55)}.a-button-dark:hover .a-button-inner,.a-button-search:hover .a-button-inner{background:#4f555c;background:-webkit-linear-gradient(top,#666b72,#393f47);background:linear-gradient(to bottom,#666b72,#393f47)}.a-button-dark:active .a-button-inner,.a-button-search:active .a-button-inner{background-color:#444C55;background-image:none}.a-button-dark.a-button-focus,.a-button-dark:focus,.a-button-dark:hover,.a-button-dark:hover:active,.a-button-search.a-button-focus,.a-button-search:focus,.a-button-search:hover,.a-button-search:hover:active{border-color:#32373e #24282d #212429}.a-button-dark:active,.a-button-search:active{border-color:#3d444c #2f353b #2c3137}.a-button-dark .a-button-text,.a-button-search .a-button-text{font-weight:700;color:#fff}.a-button-dark.a-button-disabled .a-button-text,.a-button-search.a-button-disabled .a-button-text{color:a_nullable_with_important()}.a-button-dark .a-button-inner,.a-button-search .a-button-inner{box-shadow:0 1px 0 rgba(255,255,255,.15) inset;text-shadow:0 -1px 0 rgba(0,0,0,.25)}.a-button-oneclick{background:#ed9220;border-color:#ca7c1b #be751a #a56616}.a-button-oneclick .a-button-inner{background:#f2ad58;background:-webkit-linear-gradient(top,#f6c88f,#ed9220);background:linear-gradient(to bottom,#f6c88f,#ed9220)}.a-button-oneclick:hover .a-button-inner{background:#eba145;background:-webkit-linear-gradient(top,#f4bc77,#e18512);background:linear-gradient(to bottom,#f4bc77,#e18512)}.a-button-oneclick:active .a-button-inner{background-color:#ed9220;background-image:none}.a-button-oneclick.a-button-focus,.a-button-oneclick:focus,.a-button-oneclick:hover,.a-button-oneclick:hover:active{border-color:#be751a #b26d18 #9a5f15}.a-button-oneclick:active{border-color:#ca7c1b #be751a #be751a}.a-button-oneclick.a-button-disabled .a-button-text{color:a_nullable_with_important()}.a-button-preorder{background:#CDCDA1;border-color:#8f8f70 #858569 #717158}.a-button-preorder .a-button-inner{background:#dadab9;background:-webkit-linear-gradient(top,#e6e6d0,#CDCDA1);background:linear-gradient(to bottom,#e6e6d0,#CDCDA1)}.a-button-preorder:hover .a-button-inner{background:#d1d1a8;background:-webkit-linear-gradient(top,#ddddbf,#c4c490);background:linear-gradient(to bottom,#ddddbf,#c4c490)}.a-button-preorder:active .a-button-inner{background-color:#CDCDA1;background-image:none}.a-button-preorder.a-button-focus,.a-button-preorder:focus,.a-button-preorder:hover,.a-button-preorder:hover:active{border-color:#858569 #7b7b61 #666650}.a-button-preorder:active{border-color:#8f8f70 #858569 #858569}.a-button-preorder.a-button-disabled .a-button-text{color:a_nullable_with_important()}.a-button-supplemental .a-button-text{text-align:left;z-index:10;padding-right:23px}.a-button-supplemental .a-icon-supplemental{position:absolute;top:50%;right:9px;margin-top:-6px}.a-button-span1{width:8%!important}.a-button-span2{width:17%!important}.a-button-span3{width:25%!important}.a-button-span4{width:33%!important}.a-button-span5{width:42%!important}.a-button-span6{width:50%!important}.a-button-span7{width:58%!important}.a-button-span8{width:67%!important}.a-button-span9{width:75%!important}.a-button-span10{width:83%!important}.a-button-span11{width:92%!important}.a-button-span12{width:100%!important}.a-button-group{display:table;font-size:0;line-height:0;outline:0;position:relative;white-space:nowrap}.a-button-group .a-button{border-radius:0;border:1px solid;border-color:#adb1b8 #a2a6ac #8d9096;border-left-width:0;vertical-align:top;display:table-cell;width:auto}.a-button-group .a-button:after{border-radius:0}.a-button-group .a-button .a-button-text{white-space:nowrap}.a-button-group .a-button .a-button-inner{border-radius:0}.a-button-group .a-button:hover{border-color:#a2a6ac #979aa1 #82858a}.a-button-group .a-button:active{border-color:#adb1b8 #a2a6ac #a2a6ac}.a-button-group .a-button.a-button-focus,.a-button-group .a-button:focus{box-shadow:0 0 3px 2px rgba(228,121,17,.5);outline:0;z-index:1;border-color:#e77600}.a-button-group .a-button .a-button-group-first,.a-button-group .a-button:first-child{border-radius:3px 0 0 3px;border-left-width:1px}.a-button-group .a-button .a-button-group-first .a-button-inner,.a-button-group .a-button:first-child .a-button-inner{border-radius:3px 0 0 3px}.a-button-group .a-button .a-button-group-last,.a-button-group .a-button:last-child{border-radius:0 3px 3px 0}.a-button-group .a-button .a-button-group-last .a-button-inner,.a-button-group .a-button:last-child .a-button-inner{border-radius:0 3px 3px 0}.a-button-group .a-button:only-child{border-radius:3px}.a-button-group .a-button:only-child .a-button-inner{border-radius:3px}.a-button-group .a-button-selected{border-color:#adb2bb #bababa #bababa;position:relative;overflow:visible}.a-button-group .a-button-selected .a-button-inner{background-image:none;background-color:#767676;box-shadow:0 1px 3px rgba(0,0,0,.2) inset}.a-button-group .a-button-selected .a-button-inner .a-button-text{color:#fff}.a-text-center .a-button-group{margin-left:auto;margin-right:auto}.a-button-stack .a-button{margin-bottom:10px;display:block}.a-button-stack .a-button:last-child{margin-bottom:0}.a-button-stack .a-button-list .a-button{display:inline-block}.a-button-stack .a-button-group{width:100%}.a-button-stack .a-button-group .a-button{margin-bottom:0;width:auto;display:table-cell}.a-button-stack .a-button+.a-button{margin-left:0}.a-button-stack .a-button-toggle.a-button-thumbnail{display:inline-block}@-webkit-keyframes rotate360{from{transform:rotate(0)}to{transform:rotate(360deg)}}@keyframes rotate360{from{transform:rotate(0)}to{transform:rotate(360deg)}}.a-image-container{position:relative}.a-image-container img{position:absolute;margin:auto;top:0;right:0;bottom:0;left:0;max-width:100%;max-height:100%}img{vertical-align:top}img.a-auto-scale{max-width:100%!important;max-height:100%;height:auto}img.a-scale{width:100%}.a-dynamic-image.a-stretch-vertical{height:100%!important;width:auto!important}.a-dynamic-image.a-stretch-horizontal{width:100%!important;height:auto!important}div.a-lazy-loaded,div.a-manually-loaded{background:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUISpinner-spinner_gray_2x-305997434ebd5a72cd3aa598a019fcc6e1efe23a._V2_.gif) 50% 50% no-repeat;min-height:50px;min-width:50px}@media only screen and (-webkit-min-device-pixel-ratio:1.5),only screen and (min-resolution:144dpi){div.a-lazy-loaded,div.a-manually-loaded{background:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUISpinner-spinner_gray_4x-1700c97a80998ee10f8d972a4c89b6eb64ccfdb1._V2_.gif) 50% 50% no-repeat;background-size:50px}}.a-no-js img.a-lazy-loaded{display:none}div.a-image-wrapper{display:inline-block}img.a-thumbnail-left{float:left;margin:0 14px 4px 0}img.a-thumbnail-right{float:right;margin:0 0 4px 14px}.a-loading-static{background:#f3f3f3;border:1px solid #f0f0f0;border-top-color:#eee;width:80%;height:120px;max-width:120px;margin:0 auto;border-radius:3px;box-shadow:0 1px 7px rgba(0,0,0,.05) inset;position:relative;top:20%}.a-loading-static-inner{width:51px;height:50px;background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIIcon@legacyImages-sprite_1x-6c462f5dc3bc3e40d0788502814fa7043355712a._V2_.png);background-repeat:no-repeat;background-position:-143px -296px;margin:-23px auto 0;position:relative;top:50%}a,a:active,a:link,a:visited{text-decoration:none;color:#0066c0}a.a-color-base,a:active.a-color-base,a:link.a-color-base,a:visited.a-color-base{color:#111}p a,p a:active,p a:link,p a:visited{text-decoration:underline}a.a-link-emphasis{position:relative;padding-right:9px}a.a-link-child{display:inline-block;position:relative;padding-left:8px}a.a-link-child:before{content:\"\\203A\";color:#949494;display:block;font-weight:700;position:absolute;left:0;top:-1px}a.a-link-expander{display:inline-block;position:relative;padding-left:11px}.a-expander-inner{margin-top:4px;padding-left:11px}.a-expander-header{outline:0}.a-section-expander-container{border:1px solid #ddd;margin-top:-1px;overflow:hidden;border-radius:0}.a-section-expander-container:first-child{border-radius:4px 4px 0 0;margin-top:0}.a-section-expander-container:first-child a.a-link-section-expander{border-radius:4px 4px 0 0}.a-section-expander-container:last-child{border-radius:0 0 4px 4px}.a-section-expander-container:only-of-type{border-radius:4px}.a-expander-borderless{border:none}a.a-link-section-expander{font-size:17px;line-height:1.255;display:block;position:relative;color:#111;background-color:#f3f3f3;-webkit-transition:all .1s linear;transition:all .1s linear}a.a-link-section-expander{text-rendering:optimizeLegibility}a.a-link-section-expander .a-icon-section-collapse,a.a-link-section-expander .a-icon-section-expand{position:absolute;right:16px;top:50%;margin:0;margin-top:-6px}a.a-link-section-expander:focus,a.a-link-section-expander:hover{text-decoration:none}a.a-link-section-expander:focus .a-icon-section-expand,a.a-link-section-expander:hover .a-icon-section-expand{opacity:.64}a.a-link-section-expander:focus .a-icon-section-collapse,a.a-link-section-expander:hover .a-icon-section-collapse{opacity:.96}a.a-link-section-expander:hover{color:#111;background-color:#e9e9e9}a.a-link-section-expander:focus{color:#111;background-color:#e9e9e9}.a-expander-borderless a.a-link-section-expander{box-shadow:none;padding:0 39px 0 0;background-color:transparent}.a-expander-borderless a.a-link-section-expander:hover{background-color:transparent}.a-section-expander-inner{border-top:1px solid #ddd;padding:12px 18px}.a-expander-borderless .a-section-expander-inner{border-top:none;padding:4px 0 0 0}.a-extender-trigger{display:block}.a-extender-trigger .a-extender{padding-top:2px;text-decoration:none;display:block}.a-expander-prompt{word-wrap:break-word}a:hover{text-decoration:underline;cursor:pointer;color:#c45500}a:hover.a-color-base,a:hover.a-color-secondary,a:hover.a-color-tertiary{color:#c45500!important}a.a-link-section-expander{padding:11px 54px 11px 18px}.a-meter{overflow:hidden;background:#f2f2f2;background:-webkit-linear-gradient(top,#eee,#f6f6f6);background:linear-gradient(to bottom,#eee,#f6f6f6);background-color:#f3f3f3;height:17px}.a-meter .a-meter-bar{-webkit-transition:width .5s ease;transition:width .5s ease;float:left;font-size:0;height:100%;width:0}.a-meter .a-meter-bar:before{content:\"\";display:block;font-size:0;height:1px;margin:1px}.a-meter .a-meter-bar{border-radius:1px;background:#fb0;background:-webkit-linear-gradient(top,#ffce00,#ffa700);background:linear-gradient(to bottom,#ffce00,#ffa700);background-color:#ffce00}.a-meter .a-meter-bar:before{background-color:rgba(255,255,255,.25)}.a-meter.a-inactive .a-meter-bar{background:#b3b3b3;background:-webkit-linear-gradient(top,#bcbcbc,#aaa);background:linear-gradient(to bottom,#bcbcbc,#aaa);background-color:#ddd}.a-meter-with-txt{overflow:hidden;background:#f2f2f2;background:-webkit-linear-gradient(top,#eee,#f6f6f6);background:linear-gradient(to bottom,#eee,#f6f6f6);background-color:#f3f3f3;height:17px;position:relative}.a-meter-with-txt .a-meter-bar{-webkit-transition:width .5s ease;transition:width .5s ease;float:left;font-size:0;height:100%;width:0}.a-meter-with-txt .a-meter-bar:before{content:\"\";display:block;font-size:0;height:1px;margin:1px}.a-meter-with-txt .a-meter-bar{border-radius:1px;background:#fb0;background:-webkit-linear-gradient(top,#ffce00,#ffa700);background:linear-gradient(to bottom,#ffce00,#ffa700)}.a-meter-with-txt .a-meter-bar:before{background-color:rgba(255,255,255,.25)}.a-meter-with-txt .a-meter-progress-txt{color:#111;line-height:17px;overflow:hidden;position:absolute;text-align:center;text-overflow:ellipsis;white-space:nowrap;width:100%}.a-meter-with-txt .a-meter-progress-txt:hover{text-decoration:none}.a-meter-with-txt.a-inactive .a-meter-bar{background:#b3b3b3;background:-webkit-linear-gradient(top,#bcbcbc,#aaa);background:linear-gradient(to bottom,#bcbcbc,#aaa);background-color:#ddd}tr.a-histogram-row{color:#767676}tr.a-histogram-row td{padding:1px 3px}tr.a-histogram-row td:first-child{padding-left:0}tr.a-histogram-row td:last-child{padding-right:0}tr.a-histogram-row:first-child td{padding-top:0}tr.a-histogram-row:last-child td{padding-bottom:0}tr.a-histogram-row:active a,tr.a-histogram-row:hover a{color:#c45500;text-decoration:underline}tr.a-histogram-row:active .a-meter{background-color:#faf1da;background:#faf1da;background:-webkit-linear-gradient(top,#faf1da,#faf1da);background:linear-gradient(to bottom,#faf1da,#faf1da)}tr.a-histogram-row.a-active{color:#111}tr.a-histogram-row.a-active a{color:#c45500;font-weight:700}tr.a-histogram-row.a-active .a-meter{background-color:#faf1da;background:#faf1da;background:-webkit-linear-gradient(top,#faf1da,#faf1da);background:linear-gradient(to bottom,#faf1da,#faf1da)}tr.a-histogram-row.a-inactive .a-meter{background-color:#f3f3f3;background:#f2f2f2;background:-webkit-linear-gradient(top,#eee,#f6f6f6);background:linear-gradient(to bottom,#eee,#f6f6f6)}tr.a-histogram-row.a-inactive .a-meter .a-meter-bar{background-color:#ffa700;background:#ffd076;background:-webkit-linear-gradient(top,#ffd88f,#ffc75c);background:linear-gradient(to bottom,#ffd88f,#ffc75c)}tr.a-histogram-row.a-disabled .a-meter{background-color:#f3f3f3;background:#f2f2f2;background:-webkit-linear-gradient(top,#eee,#f6f6f6);background:linear-gradient(to bottom,#eee,#f6f6f6)}tr.a-histogram-row.a-disabled .a-meter .a-meter-bar{visibility:hidden}.a-meter{border-radius:1px;box-shadow:inset 0 1px 2px rgba(0,0,0,.4),inset 0 0 0 1px rgba(0,0,0,.1)}.a-meter .a-meter-bar{box-shadow:inset 0 0 0 1px rgba(0,0,0,.25),inset 0 -1px 0 rgba(0,0,0,.05)}.a-meter-with-txt{border-radius:1px;box-shadow:inset 0 1px 2px rgba(0,0,0,.4),inset 0 0 0 1px rgba(0,0,0,.1)}.a-meter-with-txt .a-meter-bar{box-shadow:inset 0 0 0 1px rgba(0,0,0,.25),inset 0 -1px 0 rgba(0,0,0,.05)}.a-js.a-transition .a-meter-animate .a-meter-unfilled{-webkit-transition:none;transition:none;width:0!important}.a-js.a-transition .a-meter-animate .a-popover-content .a-meter-bar:not(.a-manual-animation){visibility:hidden}.a-js.a-transition .a-meter-animate .a-popover-content .a-meter-bar.a-meter-filled,.a-js.a-transition .a-meter-animate .a-popover-content .a-meter-bar.a-meter-unfilled{visibility:visible}table{margin-bottom:18px;border-collapse:collapse;width:100%}table:last-child{margin-bottom:0!important}table.a-align-top td,table.a-align-top th{vertical-align:top}table.a-align-center td,table.a-align-center th{vertical-align:middle}table.a-align-bottom td,table.a-align-bottom th{vertical-align:bottom}table.a-bordered{margin-bottom:22px;border:1px solid #e7e7e7;border-top-color:#eaeaea;border-bottom:none;border-spacing:0}table.a-bordered td,table.a-bordered th{border-bottom:1px solid #eaeaea}table.a-bordered tr:first-child th{background:#f0f0f0;background:#f3f3f3;background:-webkit-linear-gradient(top,#f8f8f8,#eee);background:linear-gradient(to bottom,#f8f8f8,#eee);box-shadow:0 1px 0 rgba(255,255,255,.5) inset;border-color:#e7e7e7;border-bottom:1px solid #ddd}table.a-bordered tr:last-child td{border-color:#e7e7e7}table.a-bordered.a-vertical-stripes{border-right:none}table.a-bordered.a-vertical-stripes tr td,table.a-bordered.a-vertical-stripes tr th{border-right:1px solid #eaeaea}table.a-bordered.a-vertical-stripes tr td:last-child,table.a-bordered.a-vertical-stripes tr th:last-child{border-right:1px solid #e7e7e7}table.a-bordered.a-vertical-stripes td:nth-child(even),table.a-bordered.a-vertical-stripes th:nth-child(even){background-color:#f6f6f6}table.a-bordered.a-vertical-stripes tr:nth-child(even){background-color:transparent}table.a-keyvalue{margin-bottom:22px;border-bottom:1px solid #e7e7e7}table.a-keyvalue th{background-color:#f3f3f3;color:#111;font-weight:400}table.a-keyvalue td,table.a-keyvalue th{border-top:1px solid #e7e7e7}td,th{vertical-align:top}td:first-child,th:first-child{padding-left:0}td:last-child,th:last-child{padding-right:0}th{text-align:left}tr:last-child td,tr:last-child th{padding-bottom:0}tr:first-child td,tr:first-child th{padding-top:0}.a-text-center table{margin-left:auto;margin-right:auto}td,th{padding:3px}table.a-bordered td,table.a-bordered th{padding:7px 14px 6px}table.a-bordered tr:nth-child(even){background-color:#f6f6f6}table.a-lineitem td,table.a-lineitem th{padding:0 3px}table.a-lineitem td:first-child,table.a-lineitem th:first-child{padding-left:0}table.a-lineitem td:last-child,table.a-lineitem th:last-child{padding-right:0}table.a-keyvalue td,table.a-keyvalue th{padding:7px 14px 6px}.a-unordered-list,ul{margin:0 0 0 18px;color:#111}.a-unordered-list li,ul li{list-style:disc}.a-unordered-list .a-unordered-list li,.a-unordered-list ul li,ul .a-unordered-list li,ul ul li{list-style:circle}.a-ordered-list,ol{margin:0 0 0 20px;color:#111}.a-ordered-list li,ol li{list-style:decimal}.a-ordered-list .a-ordered-list li,.a-ordered-list ol li,ol .a-ordered-list li,ol ol li{list-style:lower-alpha}.a-ordered-list .a-ordered-list .a-ordered-list li,.a-ordered-list .a-ordered-list ol li,.a-ordered-list ol .a-ordered-list li,.a-ordered-list ol ol li,ol .a-ordered-list .a-ordered-list li,ol .a-ordered-list ol li,ol ol .a-ordered-list li,ol ol ol li{list-style:lower-roman}.a-ordered-list .a-unordered-list li,.a-ordered-list ul li,ol .a-unordered-list li,ol ul li{list-style-type:disc}.a-ordered-list .a-unordered-list .a-unordered-list li,.a-ordered-list .a-unordered-list ul li,.a-ordered-list ul .a-unordered-list li,.a-ordered-list ul ul li,ol .a-unordered-list .a-unordered-list li,ol .a-unordered-list ul li,ol ul .a-unordered-list li,ol ul ul li{list-style-type:circle}.a-ordered-list,.a-unordered-list,ol,ul{padding:0}.a-ordered-list .a-list-item,.a-unordered-list .a-list-item,ol .a-list-item,ul .a-list-item{color:#111}.a-ordered-list li,.a-unordered-list li,ol li,ul li{word-wrap:break-word;margin:0}.a-ordered-list li.a-list-more,.a-unordered-list li.a-list-more,ol li.a-list-more,ul li.a-list-more{list-style:none}.a-ordered-list.a-nostyle,.a-unordered-list.a-nostyle,ol.a-nostyle,ul.a-nostyle{margin-left:0;color:#111}.a-ordered-list.a-nostyle li,.a-unordered-list.a-nostyle li,ol.a-nostyle li,ul.a-nostyle li{list-style:none}.a-ordered-list.a-nostyle .a-unordered-list,.a-ordered-list.a-nostyle ul,.a-unordered-list.a-nostyle .a-unordered-list,.a-unordered-list.a-nostyle ul,ol.a-nostyle .a-unordered-list,ol.a-nostyle ul,ul.a-nostyle .a-unordered-list,ul.a-nostyle ul{margin-left:14px}.a-ordered-list.a-nostyle .a-unordered-list li,.a-ordered-list.a-nostyle ul li,.a-unordered-list.a-nostyle .a-unordered-list li,.a-unordered-list.a-nostyle ul li,ol.a-nostyle .a-unordered-list li,ol.a-nostyle ul li,ul.a-nostyle .a-unordered-list li,ul.a-nostyle ul li{list-style:none}.a-ordered-list.a-list-link,.a-unordered-list.a-list-link,ol.a-list-link,ul.a-list-link{margin:-2px 0 0}.a-ordered-list.a-list-link a,.a-unordered-list.a-list-link a,ol.a-list-link a,ul.a-list-link a{color:#111;display:block}.a-ordered-list.a-list-link li,.a-unordered-list.a-list-link li,ol.a-list-link li,ul.a-list-link li{display:block;position:relative}.a-ordered-list.a-list-link li a,.a-unordered-list.a-list-link li a,ol.a-list-link li a,ul.a-list-link li a{padding:2px 0}.a-ordered-list.a-list-link li.a-selected a,.a-unordered-list.a-list-link li.a-selected a,ol.a-list-link li.a-selected a,ul.a-list-link li.a-selected a{color:#c45500}.a-ordered-list.a-list-link hr,.a-unordered-list.a-list-link hr,ol.a-list-link hr,ul.a-list-link hr{margin:7px 0}.a-ordered-list.a-horizontal,.a-unordered-list.a-horizontal,ol.a-horizontal,ul.a-horizontal{display:block;margin-left:0}.a-ordered-list.a-horizontal:after,.a-ordered-list.a-horizontal:before,.a-unordered-list.a-horizontal:after,.a-unordered-list.a-horizontal:before,ol.a-horizontal:after,ol.a-horizontal:before,ul.a-horizontal:after,ul.a-horizontal:before{display:table;content:\"\";line-height:0;font-size:0}.a-ordered-list.a-horizontal:after,.a-unordered-list.a-horizontal:after,ol.a-horizontal:after,ul.a-horizontal:after{clear:both}.a-ordered-list.a-horizontal li,.a-unordered-list.a-horizontal li,ol.a-horizontal li,ul.a-horizontal li{display:inline-block;margin:0 10px 0 0}.a-ordered-list.a-horizontal li.a-last,.a-ordered-list.a-horizontal li:last-child,.a-unordered-list.a-horizontal li.a-last,.a-unordered-list.a-horizontal li:last-child,ol.a-horizontal li.a-last,ol.a-horizontal li:last-child,ul.a-horizontal li.a-last,ul.a-horizontal li:last-child{margin-right:0}.a-ordered-list.a-horizontal.a-size-small li,.a-unordered-list.a-horizontal.a-size-small li,ol.a-horizontal.a-size-small li,ul.a-horizontal.a-size-small li{line-height:14px}.a-unordered-list+p,ul+p{margin-top:-4px}.a-ordered-list+p,ol+p{margin-top:-4px}.a-definition-list+p,dl+p{margin-top:-4px}.a-unordered-list.a-box-list .a-touch-multi-select,.a-unordered-list.a-box-list a,ul.a-box-list .a-touch-multi-select,ul.a-box-list a{display:block;padding:14px 18px;text-decoration:none}.a-unordered-list.a-box-list .a-touch-multi-select:active,.a-unordered-list.a-box-list a:active,ul.a-box-list .a-touch-multi-select:active,ul.a-box-list a:active{background-color:#f6f6f6!important}.a-unordered-list.a-box-list a.a-touch-link-noborder,ul.a-box-list a.a-touch-link-noborder{padding:0}.a-unordered-list.a-box-list li,ul.a-box-list li{border-bottom:1px solid #e7e7e7}.a-unordered-list.a-box-list li .a-box,.a-unordered-list.a-box-list li .a-box-inner,ul.a-box-list li .a-box,ul.a-box-list li .a-box-inner{border-radius:0}.a-unordered-list.a-box-list li.a-last,.a-unordered-list.a-box-list li:last-child,ul.a-box-list li.a-last,ul.a-box-list li:last-child{border-bottom:none}.a-unordered-list.a-box-list li.a-last .a-box,.a-unordered-list.a-box-list li.a-last .a-box-inner,.a-unordered-list.a-box-list li.a-last>a,.a-unordered-list.a-box-list li:last-child .a-box,.a-unordered-list.a-box-list li:last-child .a-box-inner,.a-unordered-list.a-box-list li:last-child>a,ul.a-box-list li.a-last .a-box,ul.a-box-list li.a-last .a-box-inner,ul.a-box-list li.a-last>a,ul.a-box-list li:last-child .a-box,ul.a-box-list li:last-child .a-box-inner,ul.a-box-list li:last-child>a{border-radius:0 0 3px 3px}.a-unordered-list.a-box-list li:first-child .a-box,.a-unordered-list.a-box-list li:first-child .a-box-inner,.a-unordered-list.a-box-list li:first-child>a,ul.a-box-list li:first-child .a-box,ul.a-box-list li:first-child .a-box-inner,ul.a-box-list li:first-child>a{border-radius:3px 3px 0 0}.a-definition-list,dl{display:block;padding:0;margin:0 0 18px 0}.a-definition-list:after,.a-definition-list:before,dl:after,dl:before{display:table;content:\"\";line-height:0;font-size:0}.a-definition-list:after,dl:after{clear:both}.a-definition-list:last-child,dl:last-child{margin-bottom:0!important}.a-definition-list dd,.a-definition-list dt,dl dd,dl dt{display:inline-block;float:left;padding:0;margin:0}.a-definition-list dd+dd,.a-definition-list dd+dt,dl dd+dd,dl dd+dt{clear:both}.a-definition-list dd,dl dd{margin-left:.385em;zoom:1}.a-definition-list dt,dl dt{font-weight:700}.a-ordered-list.a-horizontal.a-button-list,.a-unordered-list.a-horizontal.a-button-list,ol.a-horizontal.a-button-list,ul.a-horizontal.a-button-list{margin-left:-6px}.a-ordered-list.a-horizontal.a-button-list li,.a-unordered-list.a-horizontal.a-button-list li,ol.a-horizontal.a-button-list li,ul.a-horizontal.a-button-list li{margin-left:6px;margin-right:0}.a-ordered-list.a-horizontal li a:hover,.a-unordered-list.a-horizontal li a:hover,ol.a-horizontal li a:hover,ul.a-horizontal li a:hover{text-decoration:underline}.a-ordered-list.a-list-link a:hover,.a-unordered-list.a-list-link a:hover,ol.a-list-link a:hover,ul.a-list-link a:hover{color:#c45500;text-decoration:none}ul.a-pagination{display:inline-block;margin-left:0}ul.a-pagination:after,ul.a-pagination:before{display:table;content:\"\";line-height:0;font-size:0}ul.a-pagination:after{clear:both}ul.a-pagination li{background-color:#fff;display:block;float:left;line-height:16px;list-style:none;position:relative}ul.a-pagination li.a-last,ul.a-pagination li:last-child{margin-right:none}ul.a-pagination li a,ul.a-pagination li.a-disabled{display:block;text-decoration:none}ul.a-pagination li.a-selected{background-color:#fff;border-color:#e77600}ul.a-pagination li.a-selected a{font-weight:700;background-color:#fff;background-image:none;color:#c45500;border-color:#e77600}ul.a-pagination li a{border-radius:3px;box-shadow:0 1px 0 rgba(255,255,255,.6) inset;background:#eff1f3;background:-webkit-linear-gradient(top,#f7f8fa,#e7e9ec);background:linear-gradient(to bottom,#f7f8fa,#e7e9ec);border:1px solid #6c6e73;border-color:#adb1b8 #a2a6ac #8d9096}ul.a-pagination li.a-disabled{color:#999;border:1px solid transparent}ul.a-pagination li{margin-right:4px}ul.a-pagination li a,ul.a-pagination li.a-disabled{padding:8px 12px 7px 13px}ul.a-pagination li a{color:#111}ul.a-pagination li a:hover{background:#e0e3e9;background:-webkit-linear-gradient(top,#e7eaf0,#d9dce1);background:linear-gradient(to bottom,#e7eaf0,#d9dce1);border-color:#a2a6ac #979aa1 #82858a}ul.a-pagination li a:focus{box-shadow:0 0 3px 2px rgba(228,121,17,.5);outline:0}ul.a-pagination li a:active{border-radius:3px;border-color:#e77600;box-shadow:0 1px 3px rgba(0,0,0,.2) inset;background-color:#e7e9ec;background-image:none}@font-face{font-family:'Amazon Ember';src:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIFont-amazonember_rg-cc7ebaa05a2cd3b02c0929ac0475a44ab30b7efa._V2_.woff2) format(\"woff2\"),url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIFont-amazonember_rg-8a9db402d8966ae93717c348b9ab0bd08703a7a7._V2_.woff) format(\"woff\")}@font-face{font-family:'Amazon Ember';font-style:italic;src:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIFont-amazonember_rgit-9cc1bb64eb270135f1adf3a4881c2ee5e7c37be5._V2_.woff2) format(\"woff2\"),url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIFont-amazonember_rgit-a4dc98d644ff2aedd41da3da462f09ffce86eafb._V2_.woff) format(\"woff\")}@font-face{font-family:'Amazon Ember';font-weight:700;src:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIFont-amazonember_bd-46b91bda68161c14e554a779643ef4957431987b._V2_.woff2) format(\"woff2\"),url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIFont-amazonember_bd-b605252f87b8b3df5ae206596dac0938fc5888bc._V2_.woff) format(\"woff\")}@font-face{font-family:'Amazon Ember';font-style:italic;font-weight:700;src:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIFont-amazonember_bdit-80ff7aba37dd1ff5a6b90233a19e3a780a96dc2f._V2_.woff2) format(\"woff2\"),url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUIFont-amazonember_bdit-57598ce426a612be5a1d15eee08252668fca5e7a._V2_.woff) format(\"woff\")}.a-ember body{font-family:\"Amazon Ember\",Arial,sans-serif}.a-ember .a-text-quote{font-family:\"Amazon Ember\",Arial,sans-serif}form{margin-bottom:14px}form.a-nostyle{margin-bottom:0}form.a-nostyle fieldset{border:none;padding:0}label,legend{display:block;padding-left:2px;padding-bottom:2px;font-weight:700}.a-form-label{font-weight:700}label .a-spacing-none{padding-bottom:0}.a-text-center>label{margin-right:8px}fieldset{border:none;padding:0;margin:0}fieldset label:last-child{margin-bottom:0}input:not([type=hidden])+input{margin-left:.385em}.a-input-text,input[type=text],input[type=search],input[type=number],input[type=tel],input[type=password],select.a-select-multiple,textarea{border:1px solid #a6a6a6;border-top-color:#949494;border-radius:3px;box-shadow:0 1px 0 rgba(255,255,255,.5),0 1px 0 rgba(0,0,0,.07) inset;outline:0}.a-input-text.a-form-focus,.a-input-text:focus,input[type=text].a-form-focus,input[type=text]:focus,input[type=search].a-form-focus,input[type=search]:focus,input[type=number].a-form-focus,input[type=number]:focus,input[type=tel].a-form-focus,input[type=tel]:focus,input[type=password].a-form-focus,input[type=password]:focus,select.a-select-multiple.a-form-focus,select.a-select-multiple:focus,textarea.a-form-focus,textarea:focus{border-color:#e77600;box-shadow:0 0 3px 2px rgba(228,121,17,.5)}.a-input-text input.a-form-error,.a-input-text.a-form-error,input[type=text] input.a-form-error,input[type=text].a-form-error,input[type=search] input.a-form-error,input[type=search].a-form-error,input[type=number] input.a-form-error,input[type=number].a-form-error,input[type=tel] input.a-form-error,input[type=tel].a-form-error,input[type=password] input.a-form-error,input[type=password].a-form-error,select.a-select-multiple input.a-form-error,select.a-select-multiple.a-form-error,textarea input.a-form-error,textarea.a-form-error{border-color:#d00;box-shadow:0 0 0 3px rgba(221,0,0,.1) inset}.a-input-text input.a-form-warning,.a-input-text.a-form-warning,input[type=text] input.a-form-warning,input[type=text].a-form-warning,input[type=search] input.a-form-warning,input[type=search].a-form-warning,input[type=number] input.a-form-warning,input[type=number].a-form-warning,input[type=tel] input.a-form-warning,input[type=tel].a-form-warning,input[type=password] input.a-form-warning,input[type=password].a-form-warning,select.a-select-multiple input.a-form-warning,select.a-select-multiple.a-form-warning,textarea input.a-form-warning,textarea.a-form-warning{border-color:#8c6e00;box-shadow:0 0 0 3px rgba(255,214,63,.1) inset}.a-input-text.a-form-disabled,input[type=text].a-form-disabled,input[type=search].a-form-disabled,input[type=number].a-form-disabled,input[type=tel].a-form-disabled,input[type=password].a-form-disabled,select.a-select-multiple.a-form-disabled,textarea.a-form-disabled{border-color:rgba(186,186,186,.5);background-color:#f3f3f3;box-shadow:none;cursor:not-allowed}.a-input-text.a-form-disabled input,input[type=text].a-form-disabled input,input[type=search].a-form-disabled input,input[type=number].a-form-disabled input,input[type=tel].a-form-disabled input,input[type=password].a-form-disabled input,select.a-select-multiple.a-form-disabled input,textarea.a-form-disabled input{color:#767676}input,select,textarea{-webkit-transition:all .1s linear;transition:all .1s linear;line-height:19px;color:#111}textarea{background-color:#fff;width:100%;padding:5px 7px;resize:vertical}.a-input-text,input[type=text],input[type=search],input[type=number],input[type=tel],input[type=password],input[type=date],input[type=email]{background-color:#fff;height:31px;padding:3px 7px;line-height:normal}select.a-select-multiple{height:auto;width:100%;padding:7px}.a-search{position:relative;display:inline-block}.a-search .a-icon-search{position:absolute;top:50%;margin-top:-7px;left:10px}.a-search input{padding-left:29px}.a-form-actions{border-top:1px solid #ddd;background-color:#f3f3f3;background:#f9f9f9;background:-webkit-linear-gradient(top,#f3f3f3,#fff);background:linear-gradient(to bottom,#f3f3f3,#fff);box-shadow:0 1px 1px rgba(0,0,0,.05) inset;padding:14px;text-align:right}.a-form-disabled{color:#767676}.a-form-disabled:-moz-placeholder{color:#767676!important}.a-form-disabled::-webkit-input-placeholder{color:#767676!important}input:-moz-placeholder{color:#555}input::-webkit-input-placeholder{color:#555}textarea:-moz-placeholder{color:#555}textarea::-webkit-input-placeholder{color:#555}.a-checkbox.a-checkbox-fancy,.a-radio.a-radio-fancy{position:relative}.a-checkbox.a-checkbox-fancy input,.a-radio.a-radio-fancy input{opacity:.02;border:0 none;margin:0;outline:0 none;overflow:hidden;padding:0;position:absolute;bottom:auto;left:0;z-index:-1}.a-checkbox.a-checkbox-fancy .a-label,.a-radio.a-radio-fancy .a-label{font-weight:400}.a-checkbox.a-checkbox-fancy input:focus+.a-icon,.a-radio.a-radio-fancy input:focus+.a-icon{box-shadow:0 0 3px 2px rgba(228,121,17,.5)}.a-checkbox.a-checkbox-fancy input:focus+.a-icon:after,.a-radio.a-radio-fancy input:focus+.a-icon:after{border:1px solid #e77600;content:' ';position:absolute;top:0;left:0}.a-checkbox.a-checkbox-fancy .a-icon.a-icon-checkbox,.a-checkbox.a-checkbox-fancy .a-icon.a-icon-checkbox:after{border-radius:2px}.a-radio.a-radio-fancy .a-icon.a-icon-radio,.a-radio.a-radio-fancy .a-icon.a-icon-radio:after{border-radius:50%}input[type=radio]{height:14px;width:14px;vertical-align:top;position:relative;bottom:-3px}input[type=checkbox]{height:13px;width:13px;vertical-align:top;position:relative;bottom:-3px}.a-checkbox label,.a-radio label{position:relative;font-weight:400;color:#111;padding-left:15px;text-indent:-15px;margin-left:3px;top:-2px;padding-bottom:0}.a-form-horizontal .a-checkbox,.a-form-horizontal .a-radio{display:inline-block;margin-right:14px}.a-form-horizontal .a-checkbox:last-child,.a-form-horizontal .a-radio:last-child{margin-right:0}.a-form-horizontal .a-checkbox label,.a-form-horizontal .a-radio label{padding-left:0;text-indent:0}.a-checkbox-fancy:focus,.a-radio-fancy:focus{outline:0}.a-checkbox-fancy .a-checkbox-label,.a-checkbox-fancy .a-radio-label,.a-radio-fancy .a-checkbox-label,.a-radio-fancy .a-radio-label{top:1px;vertical-align:middle}.a-checkbox-fancy label,.a-radio-fancy label{padding-left:19px;text-indent:-19px}.a-checkbox-fancy label input:focus+.a-icon,.a-radio-fancy label input:focus+.a-icon{position:relative}.a-checkbox-fancy label input:focus+.a-icon:after,.a-radio-fancy label input:focus+.a-icon:after{top:0;left:0}.a-checkbox-label,.a-radio-label{position:relative;padding-left:5px;text-indent:0;display:inline-block}.a-checkbox-fancy input{height:16px;width:16px}.a-checkbox-fancy input:focus+.a-icon:after{height:14px;width:14px}.a-radio-fancy input{height:17px;width:17px}.a-radio-fancy input:focus+.a-icon:after{height:15px;width:15px}@-moz-document url-prefix(){label .a-checkbox-label{top:1px}}@-webkit-keyframes rotate360{from{transform:rotate(0)}to{transform:rotate(360deg)}}@keyframes rotate360{from{transform:rotate(0)}to{transform:rotate(360deg)}}.a-spinner{display:inline-block}.a-spinner-small{width:16px;height:16px;-webkit-animation:rotate360 1s linear infinite;animation:rotate360 1s linear infinite;background:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUISpinner-spinner_simple_1x-deb550696ad5fa5af9d82ef559fffa7fe3f10f54._V2_.png) 50% 50% no-repeat}.a-hires .a-spinner-small{background:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUISpinner-spinner_simple_2x-feb7df32f9e911dfefeed80d0548b616c17b017f._V2_.png) 50% 50% no-repeat;background-size:16px}.a-spinner-medium{width:32px;height:32px;-webkit-animation:rotate360 1s linear infinite;animation:rotate360 1s linear infinite;background:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUISpinner-spinner_simple_2x-feb7df32f9e911dfefeed80d0548b616c17b017f._V2_.png) 50% 50% no-repeat}.a-hires .a-spinner-medium{background:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUISpinner-spinner_simple_4x-62292e00f61d8b139497122ccee9cfce8d2b4057._V2_.png) 50% 50% no-repeat;background-size:32px}.a-spinner-wrapper{width:100%;height:100%;display:table}.a-spinner-wrapper .a-spinner{margin:0 auto;display:table-cell;vertical-align:middle}.a-price{text-decoration:none;position:relative;line-height:normal}.a-price[data-a-strike=true]:after{border-top:1px solid;position:absolute;content:\"\";right:0;top:50%;left:0}.a-price .a-price-fraction+.a-price-symbol{left:.2em}.a-price .a-offscreen{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.a-price[data-a-color=base]{color:#111}.a-price[data-a-color=price]{color:#B12704}.a-price[data-a-color=secondary]{color:#555}.a-price[data-a-color=tertiary]{color:#767676}.a-price[data-a-size$=l] .a-price-fraction,.a-price[data-a-size$=l] .a-price-symbol{position:relative}.a-price[data-a-size$=l] .a-price-decimal{position:absolute;opacity:0}.a-price[data-a-size=xxl]{font-size:38px;line-height:normal}.a-price[data-a-size=xxl] .a-price-symbol{top:-1.28em;font-size:13px}.a-price[data-a-size=xxl] .a-price-fraction{top:-1.28em;font-size:13px}.a-price[data-a-size=xl]{font-size:28px}.a-price[data-a-size=xl] .a-price-symbol{top:-.75em;font-size:13px}.a-price[data-a-size=xl] .a-price-fraction{top:-.75em;font-size:13px}.a-price[data-a-size=l]{font-size:21px}.a-price[data-a-size=l] .a-price-symbol{top:-.5em;font-size:12px}.a-price[data-a-size=l] .a-price-fraction{top:-.5em;font-size:12px}.a-price[data-a-size=m]{font-size:17px}.a-price[data-a-size=m] .a-price-symbol{position:relative;top:-.3em;font-size:11px}.a-price[data-a-size=b]{font-size:13px}.a-price[data-a-size=s]{font-size:12px}.a-price-range{font-size:0}.a-price-dash[data-a-color=base]{color:#111}.a-price-dash[data-a-color=price]{color:#B12704}.a-price-dash[data-a-color=secondary]{color:#555}.a-price-dash[data-a-color=tertiary]{color:#767676}.a-price-dash[data-a-size=m]{font-size:17px;padding-left:1px;padding-right:1px}.a-price-dash[data-a-size=l]{font-size:21px;padding-left:4px;padding-right:4px}.a-price-dash[data-a-size=xl]{font-size:28px;padding-left:4px;padding-right:4px}.a-price-dash[data-a-size=xxl]{font-size:38px;padding-left:4px;padding-right:4px}.a-text-price{color:inherit}@-webkit-keyframes rotate360{from{transform:rotate(0)}to{transform:rotate(360deg)}}@keyframes rotate360{from{transform:rotate(0)}to{transform:rotate(360deg)}}.a-icon.a-icon-next-rounded,.a-icon.a-icon-previous-rounded{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUICarousel-arrows-c495a9b59afd9b35a08c12513d40b8c7e7771499._V2_.png)}.a-carousel-container{position:relative;overflow:hidden}.a-carousel-state{margin:0;padding:0}.a-carousel-header-row{margin-bottom:20px}.a-carousel-header-row .a-span-last{float:right!important}.a-carousel-header-row .a-column,.a-carousel-header-row h1,.a-carousel-header-row h2,.a-carousel-header-row h3,.a-carousel-header-row h4,.a-carousel-header-row h5,.a-carousel-header-row h6{line-height:inherit;font-size:inherit}.a-carousel-row-inner{position:relative;height:100%}.a-carousel-row-inner:after,.a-carousel-row-inner:before{display:table;content:\"\";line-height:0;font-size:0}.a-carousel-row-inner:after{clear:both}.a-carousel-col{overflow:visible;min-height:1px;position:relative;zoom:1}.a-carousel-has-buttons .a-carousel-center{margin:0 40px}.a-carousel-has-buttons.a-carousel-overlay-buttons .a-carousel-center{margin:0}.a-carousel-center{overflow:hidden}.a-carousel-left{left:0;padding-left:3px}.a-carousel-right{text-align:right;right:0;padding-right:3px}.a-carousel-left,.a-carousel-right{width:40px;height:100%;position:absolute;top:0;z-index:1}.a-carousel-left,.a-carousel-pagination,.a-carousel-right{visibility:hidden}.a-carousel-viewport{width:100%;overflow:hidden}.a-carousel-viewport:focus{outline:0}.a-carousel-button{position:relative;top:40%;margin-top:-16px}ol.a-carousel{margin:0;list-style-type:none;height:100%;white-space:nowrap;overflow-x:visible;color:#111;letter-spacing:-4px}.a-carousel-card{vertical-align:top;text-align:left;overflow:hidden;margin-left:16px;width:160px;min-height:100%;list-style-type:none;display:inline-block;white-space:normal;letter-spacing:normal}.a-carousel-card-empty{max-height:175px;height:100%;background:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUISpinner-spinner_gray_2x-305997434ebd5a72cd3aa598a019fcc6e1efe23a._V2_.gif) 50% 50% no-repeat}@media only screen and (-webkit-min-device-pixel-ratio:1.5),only screen and (min-resolution:144dpi){.a-carousel-card-empty{background:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUISpinner-spinner_gray_4x-1700c97a80998ee10f8d972a4c89b6eb64ccfdb1._V2_.gif) 50% 50% no-repeat;background-size:50px}}.a-carousel-transition-slide .a-carousel{position:relative}.a-carousel-transition-slide .a-carousel,.a-carousel-transition-slide .a-carousel-viewport{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.a-carousel-display-single .a-carousel-card{width:100%;text-align:center;margin:0}.a-carousel-display-single .a-carousel-card img{max-width:100%;max-height:100%}.a-carousel-transition-freeScroll .a-carousel-viewport,.a-carousel-transition-none .a-carousel-viewport{overflow-x:scroll;overflow-y:visible}.a-carousel-init-empty .a-carousel-viewport{height:150px}.a-carousel-row .a-carousel-photo{display:table;table-layout:fixed;width:100%;margin-bottom:6px}.a-carousel-row .a-carousel-photo-inner{display:table-cell;vertical-align:middle;overflow:hidden}.a-carousel-display-variableWidth .a-carousel-card{width:auto;vertical-align:middle;min-width:110px;max-width:270px;margin-left:8px;margin-right:8px}.a-icon.a-icon-next-rounded,.a-icon.a-icon-previous-rounded{background-size:68px 52px;width:34px;height:52px;outline:0}.a-icon.a-icon-previous-rounded{background-position:0 0}.a-icon.a-icon-next-rounded{background-position:-34px 0}.a-carousel-rounded-buttons .a-carousel-left,.a-carousel-rounded-buttons .a-carousel-right{width:80px;position:absolute}.a-carousel-rounded-buttons .a-carousel-goto-nextpage,.a-carousel-rounded-buttons .a-carousel-goto-prevpage{position:absolute;top:0;left:0;right:0;bottom:0;outline:0}.a-carousel-rounded-buttons .a-icon-next-rounded,.a-carousel-rounded-buttons .a-icon-previous-rounded{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.a-carousel-transition-slide .a-carousel,.a-carousel-transition-slide .a-carousel-viewport{-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d;transform-style:preserve-3d}.a-carousel-transition-slide .a-carousel,.a-carousel-transition-slide .a-carousel-card,.a-carousel-transition-slide .a-carousel-viewport{-webkit-backface-visibility:hidden}.a-viewoptions-section{position:relative;display:block;border-bottom:1px solid #ddd;font-size:0}ul.a-viewoptions-list{list-style-type:none;margin:0;font-size:0;line-height:1;display:inline-block}ul.a-viewoptions-list li.a-viewoptions-list-item{list-style-type:none;display:inline-block}ul.a-viewoptions-list li.a-viewoptions-list-item a,ul.a-viewoptions-list li.a-viewoptions-list-item.a-viewoptions-list-info{color:#111;text-decoration:none;font-size:13px;display:block;line-height:1;padding:8px 6px;border-bottom:2px solid transparent;position:relative;bottom:-1px}ul.a-viewoptions-list li.a-viewoptions-list-item a .a-icon{position:relative;bottom:-1px;margin-right:.4235em;opacity:.4}ul.a-viewoptions-list li.a-viewoptions-list-item a:active,ul.a-viewoptions-list li.a-viewoptions-list-item a:hover{color:#c45500}ul.a-viewoptions-list li.a-viewoptions-list-item a:active .a-icon,ul.a-viewoptions-list li.a-viewoptions-list-item a:hover .a-icon{opacity:.7}ul.a-viewoptions-list li.a-viewoptions-list-item.a-viewoptions-list-info{color:#555}ul.a-viewoptions-list li.a-viewoptions-list-item.a-selected a{font-weight:700;color:#111;border-bottom-color:#e77600}ul.a-viewoptions-list li.a-viewoptions-list-item.a-selected a .a-icon{opacity:1}ul.a-viewoptions-list li.a-viewoptions-list-item.a-viewoptions-list-dropdown a{padding-right:16px}ul.a-viewoptions-list li.a-viewoptions-list-item.a-viewoptions-list-dropdown a .a-icon-dropdown{position:absolute;right:6px;top:10px;opacity:1;margin-right:0;bottom:auto}ul.a-viewoptions-list li.a-viewoptions-list-item.a-viewoptions-list-dropdown a:hover .a-icon-dropdown{opacity:.7}ul.a-viewoptions-list li.a-viewoptions-list-item.a-viewoptions-list-icon .a-icon{margin-right:0}ul.a-viewoptions-list li.a-viewoptions-list-item+li.a-viewoptions-list-item{margin:0 0 0 4px}ul.a-viewoptions-list+ul.a-viewoptions-list{margin-left:18px;padding-left:18px;border-left:1px solid #ddd}ul.a-viewoptions-list+ul.a-viewoptions-list .a-viewoptions-list-label{font-size:13px;font-weight:400;color:#555;margin-right:.385em}.a-box-group>.a-box .a-box-tab{border-radius:0 0 4px 4px}.a-box-group>.a-box .a-box-tab>.a-box-inner{border-radius:0 0 4px 4px}.a-box-tab{border-radius:0 0 4px 4px;margin-top:-1px}ul.a-tabs{margin:0;list-style-type:none;border:1px solid #ddd;padding:0;background-color:#f3f3f3}ul.a-tabs:after,ul.a-tabs:before{display:table;content:\"\";line-height:0;font-size:0}ul.a-tabs:after{clear:both}ul.a-tabs .a-tab-heading,ul.a-tabs li{float:left;margin-bottom:-1px;margin-top:-1px;list-style-type:none}ul.a-tabs .a-tab-heading a,ul.a-tabs li a{-webkit-transition:all .1s linear;transition:all .1s linear;text-decoration:none;line-height:1;padding:15px 17px 15px 18px;display:block;border:1px solid transparent;border-bottom:0;position:relative;background-color:transparent}ul.a-tabs .a-tab-heading a:after,ul.a-tabs li a:after{content:\"\";width:100%;height:1px;position:absolute;bottom:0;left:0;-webkit-transition:background-color .1s linear;transition:background-color .1s linear}ul.a-tabs .a-tab-heading a:hover,ul.a-tabs li a:hover{border-top-color:#e77600;text-decoration:none}ul.a-tabs .a-tab-heading.a-active a,ul.a-tabs li.a-active a{border-color:#ddd;background-color:#fff;color:#c45500;border-top-color:#e77600;font-weight:700}ul.a-tabs .a-tab-heading.a-active a:hover:after,ul.a-tabs li.a-active a:hover:after{background-color:transparent}ul.a-tabs .a-tab-heading:first-child a,ul.a-tabs li:first-child a{border-left:none}.a-accordion .a-box{overflow:hidden}.a-accordion .a-box:first-child .a-accordion-row{border-radius:4px 4px 0 0}.a-accordion .a-accordion-row-container{padding:0}.a-accordion .a-accordion-row{position:relative;background-color:#f3f3f3;-webkit-transition:all .1s linear;transition:all .1s linear;display:block;color:inherit;text-decoration:none;outline:0;cursor:pointer;padding:10px 18px 10px 43px}.a-accordion .a-accordion-row h5{font-weight:400}.a-accordion .a-accordion-row .a-icon-radio-active,.a-accordion .a-accordion-row .a-icon-radio-inactive{position:absolute;top:50%;left:17px;height:17px;width:17px;margin-top:-8.5px}.a-accordion .a-accordion-row:hover{background-color:#e9e9e9}.a-accordion .a-accordion-row:hover .a-icon-radio-inactive{background-position:-54px -294px}.a-accordion .a-accordion-inner{padding:0 18px;margin-bottom:14px;display:none;overflow:hidden}.a-accordion .a-accordion-active .a-accordion-row{cursor:default;background-color:#fff}.a-accordion .a-accordion-active .a-accordion-row h5{font-weight:700}.a-accordion .a-accordion-active .a-accordion-inner{display:block;background-color:#fff}.a-accordion .a-box:not(.a-accordion-active) .a-accordion-row:hover{box-shadow:0 0 0 1px transparent inset}.a-accordion .a-box:not(.a-accordion-active) .a-accordion-row:active{box-shadow:0 0 0 1px transparent inset;background-color:#e9e9e9}.a-accordion .a-accordion-row:active .a-icon-radio-inactive{box-shadow:0 0 3px 2px rgba(228,121,17,.5);border-radius:50%}.a-accordion .a-accordion-row:active .a-icon-radio-inactive:after{border:1px solid #e77600;border-radius:50%;content:' ';display:block;height:15px;width:15px}.a-accordion .a-accordion-row:active .a-icon-radio-active{box-shadow:0 0 3px 2px rgba(228,121,17,.5);border-radius:50%}.a-accordion .a-accordion-row:active .a-icon-radio-active:after{border:1px solid #e77600;border-radius:50%;content:' ';display:block;height:15px;width:15px}.a-accordion .a-accordion-row:focus .a-icon-radio-inactive{box-shadow:0 0 3px 2px rgba(228,121,17,.5);border-radius:50%}.a-accordion .a-accordion-row:focus .a-icon-radio-inactive:after{border:1px solid #e77600;border-radius:50%;content:' ';display:block;height:15px;width:15px}.a-accordion .a-accordion-row:focus .a-icon-radio-active{box-shadow:0 0 3px 2px rgba(228,121,17,.5);border-radius:50%}.a-accordion .a-accordion-row:focus .a-icon-radio-active:after{border:1px solid #e77600;border-radius:50%;content:' ';display:block;height:15px;width:15px}.a-accordion-a11y:focus{outline:0}.a-expander-partial-collapse-container,.a-expander-partial-collapse-content{overflow:hidden;position:relative}.a-expander-partial-collapse-header{position:absolute;bottom:0;width:100%;background-color:#fff;-webkit-transition:opacity .4s ease-out;transition:opacity .4s ease-out}.a-expander-content-fade{height:16px;width:100%;position:absolute;top:-16px;left:0;background:-webkit-linear-gradient(top,rgba(255,255,255,0),#fff);background:linear-gradient(to bottom,rgba(255,255,255,0),#fff)}.a-alert.a-alert-info .a-expander-partial-collapse-header{background-color:#f6f6f6}.a-alert.a-alert-info .a-expander-content-fade{background:-webkit-linear-gradient(top,rgba(246,246,246,0),#f6f6f6);background:linear-gradient(to bottom,rgba(246,246,246,0),#f6f6f6)}.a-alert.a-alert-success .a-expander-partial-collapse-header{background-color:#fff}.a-alert.a-alert-success .a-expander-content-fade{background:-webkit-linear-gradient(top,rgba(255,255,255,0),#fff);background:linear-gradient(to bottom,rgba(255,255,255,0),#fff)}.a-alert.a-alert-warning .a-expander-partial-collapse-header{background-color:#fff}.a-alert.a-alert-warning .a-expander-content-fade{background:-webkit-linear-gradient(top,rgba(255,255,255,0),#fff);background:linear-gradient(to bottom,rgba(255,255,255,0),#fff)}.a-alert.a-alert-error .a-expander-partial-collapse-header{background-color:#fff}.a-alert.a-alert-error .a-expander-content-fade{background:-webkit-linear-gradient(top,rgba(255,255,255,0),#fff);background:linear-gradient(to bottom,rgba(255,255,255,0),#fff)}.a-switch-row{display:inline-block;padding-right:31px;position:relative}.a-switch-row:after,.a-switch-row:before{display:table;content:\"\";line-height:0;font-size:0}.a-switch-row:after{clear:both}.a-switch-row .a-switch-label{-webkit-transition:all .3s ease;transition:all .3s ease;display:inline-block;margin-right:6px;line-height:21px!important;color:#767676;cursor:pointer}.a-switch-row.a-disabled{opacity:.5}.a-switch-row.a-disabled .a-switch-col,.a-switch-row.a-disabled .a-switch-control,.a-switch-row.a-disabled .a-switch-label{cursor:default}.a-switch-row.a-disabled .a-switch-control:active{border-color:#d2d5db #b7babe #b7babe}.a-switch-row:hover .a-switch-control{border-color:#ad5800 #b95e00 #cf6a00}.a-switch-row:hover.a-active .a-switch-control{border-color:#a95b0e #c06710 #c06710}.a-switch-row.a-disabled:hover .a-switch-control{border-color:#d2d5db #b7babe #b7babe}.a-switch-row.a-disabled:hover.a-active .a-switch-control{border-color:#a95b0e #c06710 #c06710}.a-switch{display:block;float:right;position:absolute;top:0;right:0;height:21px;width:31px;border-radius:3px;border:1px solid #adb1b8;border-top-color:#8d9096;background-color:#f0f0f0;box-shadow:0 1px 2px rgba(0,0,0,.07) inset;-webkit-transition:background-color .3s ease;transition:background-color .3s ease;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;user-select:none}.a-switch:after,.a-switch:before{display:table;content:\"\";line-height:0;font-size:0}.a-switch:after{clear:both}.a-switch-control{position:absolute;left:-1px;top:-1px;display:block;z-index:1;cursor:pointer;height:21px;width:21px;border-radius:3px;border:1px solid #a2a6ac;border-top-color:#adb1b8;border-bottom-color:#8d9096;background:#f5f6f9;background:-webkit-linear-gradient(top,#eff1f3,#fff);background:linear-gradient(to bottom,#eff1f3,#fff);box-shadow:0 1px 0 0 #fff inset,0 1px 3px rgba(0,0,0,.1) inset,0 0 1px #fff inset,0 1px 2px rgba(0,0,0,.15)}.a-switch-control:active{border-color:#ad5800 #b95e00 #cf6a00}.a-active .a-switch{background-color:#e77600;border-color:#ad5800 #b95e00 #cf6a00}.a-active .a-switch-control{border-color:#ad5800 #b95e00 #cf6a00;left:10px}.a-active .a-switch-label{color:#c45500}.a-switch-input.a-focus+label .a-switch,.a-switch-input:focus+label .a-switch{box-shadow:0 0 3px 2px rgba(228,121,17,.5)}.a-transition .a-switch-control{left:0;-webkit-transform:translateX(-1px);-moz-transform:translateX(-1px);transform:translateX(-1px)}.a-transition .a-active .a-switch-control{left:0;-webkit-transform:translateX(10px);-moz-transform:translateX(10px);transform:translateX(10px)}ul.a-box-list a.a-switch-col,ul.a-box-list a.a-switch-control{padding:0}.a-no-js .a-switch-row .a-switch{display:none}.a-no-js .a-switch-row .a-switch-label{color:#555}.a-js .a-switch-row input{position:absolute!important;left:0!important;bottom:-1px!important;z-index:-1!important;opacity:0}.a-progress-bar{position:relative}.a-progress-bar .a-meter,.a-progress-bar .a-meter-with-txt{height:15px}.a-progress-bar .a-meter .a-meter-progress-txt,.a-progress-bar .a-meter-with-txt .a-meter-progress-txt{display:none}.a-progress-bar .a-meter .a-meter-bar,.a-progress-bar .a-meter-with-txt .a-meter-bar{background:linear-gradient(to bottom,#75E375,#2BAC2B);background-color:#75E375}.a-progress-indicator{margin-bottom:1px}.a-progress-indicator .a-tooltip{position:relative;visibility:visible;max-width:100%;min-width:50px;padding:0;visibility:hidden;opacity:0;-webkit-transition:.5s opacity ease;transition:.5s opacity ease}.a-progress-indicator .a-tooltip.a-progress-tooltip-revealed{visibility:visible;opacity:1}.a-progress-indicator .a-tooltip.a-progress-tooltip{z-index:1}.a-progress-indicator .a-tooltip.a-progress-tooltip .a-tooltip-inner{background-color:#444c56;padding:1px 10px;vertical-align:bottom;border-radius:3px;box-shadow:inset 0 1px 2px 0 rgba(255,255,255,.2)}.a-progress-indicator .a-tooltip.a-progress-tooltip .a-arrow{right:-9px;bottom:1px;border-width:10px 9px 0;border-top-color:#444c56}.a-progress-indicator .a-tooltip.a-progress-tooltip .a-arrow-border{bottom:-9px;left:49%;border-width:10px 9px 0;border-top-color:#2f353b}.a-progress-prompt{margin:8px 0}@-webkit-keyframes rotate360{from{transform:rotate(0)}to{transform:rotate(360deg)}}@keyframes rotate360{from{transform:rotate(0)}to{transform:rotate(360deg)}}.a-popover-loading{min-width:75px;height:75px;border:0;width:75px;background:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUISpinner-spinner_gray_2x-305997434ebd5a72cd3aa598a019fcc6e1efe23a._V2_.gif) 50% 50% no-repeat}@media only screen and (-webkit-min-device-pixel-ratio:1.5),only screen and (min-resolution:144dpi){.a-popover-loading{background:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonUISpinner-spinner_gray_4x-1700c97a80998ee10f8d972a4c89b6eb64ccfdb1._V2_.gif) 50% 50% no-repeat;background-size:50px}}.a-popover-loading-wrapper{min-width:120px}.a-popover-preload{display:none}.a-popover-hidden{visibility:hidden!important}.a-popover-transparent{opacity:0}.a-popover{display:inline-block;position:absolute;visibility:hidden;top:0;left:0;z-index:1010;padding:8px;max-width:440px}.a-popover:focus{outline:0}.a-popover-wrapper{overflow:hidden;border:1px solid #cdcdcd;border-color:rgba(0,0,0,.2);height:100%;width:100%;border-radius:4px;box-shadow:0 2px 4px rgba(0,0,0,.13);background-color:#fff}.a-popover-inner{background-color:#fff;padding:14px 18px;text-align:left;overflow-x:hidden}.a-popover-inner .a-button-close{position:static;margin:-10px -14px 6px 6px}.a-popover-inner.a-padding-none .a-button-close{margin:0}.a-popover-inner dl:last-child,.a-popover-inner ol:last-child,.a-popover-inner p:last-child,.a-popover-inner ul:last-child{margin-bottom:0}.a-popover.a-arrow-top .a-arrow{border-top-color:#fff}.a-popover.a-arrow-right .a-arrow{border-right-color:#fff}.a-popover.a-arrow-bottom .a-arrow{border-bottom-color:#fff}.a-popover.a-arrow-left .a-arrow{border-left-color:#fff}.a-popover-header{position:relative;text-align:left;background:#f2f2f2;background:#f1f1f1;background:-webkit-linear-gradient(top,#f7f7f7,#eaeaea);background:linear-gradient(to bottom,#f7f7f7,#eaeaea);border-radius:4px 4px 0 0;border-bottom:1px solid #cdcdcd;border-bottom-color:rgba(0,0,0,.2);box-shadow:0 1px 0 rgba(255,255,255,.5) inset,0 -1px 0 rgba(255,255,255,.4) inset;padding:0 14px;margin:0;z-index:10}.a-popover-header .a-popover-header-content{min-height:35px;line-height:16px;padding:10px 0 9px;font-size:13px;font-weight:700;margin-right:20px}.a-popover .a-arrow,.a-popover .a-arrow-border{border:8px solid transparent}.a-popover .a-arrow{width:0;height:0;position:absolute;display:block;z-index:1011}.a-popover .a-arrow-border{position:absolute}.a-popover.a-arrow-right .a-arrow-border{left:0;margin-top:-8px;border-left:0;border-right-color:rgba(0,0,0,.2)}.a-popover.a-arrow-right .a-arrow{top:-8px;left:1px;border-left:0}.a-popover.a-arrow-left .a-arrow-border{right:0;margin-top:-8px;border-right:0;border-left-color:rgba(0,0,0,.2)}.a-popover.a-arrow-left .a-arrow{top:-8px;right:1px;border-right:0}.a-popover.a-arrow-top .a-arrow-border{bottom:0;margin-left:-8px;border-bottom:0;border-top-color:rgba(0,0,0,.2)}.a-popover.a-arrow-top .a-arrow{bottom:1px;right:-8px;border-bottom:0}.a-popover.a-arrow-bottom .a-arrow-border{top:0;margin-left:-8px;border-top:0;border-bottom-color:rgba(0,0,0,.2)}.a-popover.a-arrow-bottom .a-arrow{top:1px;right:-8px;border-top:0}.a-popover:focus{outline:0}.a-popover .a-popover-a11y-offscreen{opacity:0;overflow:hidden!important;display:block!important;width:1px!important;height:1px!important;margin:0!important;padding:0!important;border:0!important;position:absolute!important;left:0!important}.a-popover .a-popover-start{top:1px!important}.a-popover .a-popover-end{bottom:1px!important}.a-popover-trigger:hover{cursor:pointer}.a-popover-trigger:hover .a-icon-popover{opacity:.85}.a-button-close{display:block;zoom:1;background-color:transparent;border-radius:3px;border:1px solid;border-color:transparent;float:right;padding:8px;position:absolute;top:50%;right:5px;margin:-13px 0 0;line-height:0}.a-button-close:active{background-color:#e9e9e9}.a-button-close:focus{background-color:transparent;border-color:#e77600;box-shadow:0 0 3px 2px rgba(228,121,17,.5);outline:0;padding:8px}.a-button-close:hover{cursor:pointer}.a-button-close:hover .a-icon-close{opacity:.8}.a-button-close-a11y{opacity:0;width:1px;height:1px;padding:0}.a-button-close-a11y:focus{padding:0}.a-button-close-a11y .a-icon-close{display:none}#a-popover-lgtbox,.a-modal{opacity:.75;display:none;position:fixed;top:0;left:0;height:100%;width:100%;background:#000}#a-popover-offset-tracker{opacity:.01;position:absolute;height:1px;width:1px;top:0;left:0}.a-dropdown-common{padding:0;margin:1px 0 0;max-width:none}.a-dropdown-common .a-popover-inner{padding:8px 0}.a-dropdown-common .a-list-link{position:relative;left:-1px;margin-right:-1px}.a-dropdown-common .a-dropdown-item:focus .a-dropdown-link{border-color:#a6a6a6;background-color:#f3f3f3;color:inherit}.a-dropdown-common .a-dropdown-item:focus .a-dropdown-link.a-active{background-color:#f3f3f3;border-color:#a6a6a6}.a-dropdown-common .a-dropdown-item{margin:0;outline:0}.a-dropdown-common .a-dropdown-item.a-color-tertiary .a-dropdown-link{color:inherit}.a-dropdown-common .a-dropdown-link{padding:2px 12px 1px 13px;display:block;white-space:nowrap;outline:0;border:1px solid transparent;margin-left:1px}.a-dropdown-common .a-dropdown-link.a-active{background-color:#f3f3f3;border-color:#e7e7e7;border-top-color:#e7e7e7;border-left-color:#e77600!important}.a-dropdown-common .a-dropdown-link img{margin-right:5px}.a-dropdown-common .a-dropdown-link .a-size-base,.a-dropdown-common .a-dropdown-link .a-size-mini,.a-dropdown-common .a-dropdown-link .a-size-small{line-height:1}.a-dropdown-common .a-dropdown-link .a-list-anno{display:block;margin-top:6px;color:#555;font-size:11px}.a-dropdown-common .a-dropdown-link .a-prime-logo{margin-top:-3px}.a-dropdown-common .divider{background-color:#fff;padding:7px 0}.a-dropdown-common .divider hr{margin:0!important}.a-dropdown-common .a-dropdown-item:active .a-dropdown-link,.a-dropdown-common .a-dropdown-item:hover .a-dropdown-link{border-color:#a6a6a6;background-color:#f3f3f3;color:inherit}.a-lgtbox-vertical-scroll{overflow-y:scroll}.a-dropdown-label{margin-right:6px}.a-rich-option-image{vertical-align:middle}.a-no-js .a-button-group-splitdropdown,.a-no-js .a-dropdown-container .a-button-dropdown{display:none}.a-dropdown-container{position:relative}.a-js .a-native-dropdown,.a-js .a-native-splitdropdown{position:absolute;z-index:-1;opacity:.01;max-width:100%;left:0}.a-tooltip{padding:6px;min-width:60px}.a-tooltip .a-arrow,.a-tooltip .a-arrow-border{border-width:6px}.a-tooltip.a-arrow-right .a-arrow-border{left:-;margin-top:-6px;border-right-color:#2f353b}.a-tooltip.a-arrow-right .a-arrow{top:-6px;border-right-color:#444C55}.a-tooltip.a-arrow-left .a-arrow-border{right:-;margin-top:-6px;border-left-color:#2f353b}.a-tooltip.a-arrow-left .a-arrow{top:-6px;border-left-color:#444C55}.a-tooltip.a-arrow-top .a-arrow-border{bottom:0;margin-left:-6px;border-top-color:#2f353b}.a-tooltip.a-arrow-top .a-arrow{right:-6px;border-top-color:#444C55}.a-tooltip.a-arrow-bottom .a-arrow-border{top:-;margin-left:-6px;border-bottom-color:#2f353b}.a-tooltip.a-arrow-bottom .a-arrow{right:-6px;border-bottom-color:#444C55}.a-tooltip-inner{display:inline-block;font-size:13px;color:#fff;line-height:1.4;background-color:#444C55;border:1px solid #2f353b;padding:5px 10px;border-radius:4px}.a-modal-scroller{height:100%;width:100%;right:0;top:0;overflow:auto;position:fixed;visibility:hidden;z-index:1009}.a-popover-modal{position:absolute;min-width:0;max-width:80%;padding:0}.a-popover-modal .a-popover-wrapper{border:1px solid;border-color:rgba(0,0,0,.75);box-shadow:0 4px 6px rgba(0,0,0,.25);height:100%}.a-popover-modal .a-popover-footer{text-align:right;background-color:#f3f3f3;background:#f9f9f9;background:-webkit-linear-gradient(top,#f3f3f3,#fff);background:linear-gradient(to bottom,#f3f3f3,#fff);box-shadow:0 1px 1px rgba(0,0,0,.05) inset;border-top:1px solid #ddd;padding:14px;margin:0;border-radius:0 0 4px 4px}.a-popover-modal .a-button-top-right{position:static;margin:6px 6px 0 0}.a-popover-modal .a-button-a11y-top-right{margin:0;right:0;top:0}.a-popover-modal .a-modal-close-nohead-top{position:static;float:none;width:100%;text-align:right;margin:0;padding:8px 8px 0 0}.a-popover-modal.a-modal-modeless{position:fixed}:not(.a-lt-ie9) .a-popover-modal.a-modal-modeless .a-popover-wrapper{border:none}.a-popover-modal-fixed-height .a-popover-wrapper{position:relative}.a-popover-modal-fixed-height .a-popover-footer{position:absolute;bottom:0;left:0;right:0}@-webkit-keyframes bubble-pop{0%{-webkit-transform:translateX(0) translateZ(-350px) scale3d(1,1,1);opacity:0}8%{-webkit-transform:translateX(0) translateZ(55px) scale3d(1,1,1);opacity:.8}12%{-webkit-transform:translateX(0) translateZ(0) scale3d(1,1,1);opacity:1}78%{-webkit-transform:translateX(0) translateZ(0) scale3d(1,1,1);opacity:1}82%{-webkit-transform:translateX(0) translateZ(55px) scale3d(1,1,1);opacity:.8}90%{-webkit-transform:translateX(0) translateZ(-350px) scale3d(1,1,1);opacity:0;top:40%}100%{-webkit-transform:translateX(0) translateZ(-350px) scale3d(1,1,1);opacity:0;top:-9999px}}@keyframes bubble-pop{0%{transform:translateX(0) translateZ(-350px) scale3d(1,1,1);opacity:0}8%{transform:translateX(0) translateZ(55px) scale3d(1,1,1);opacity:.8}12%{transform:translateX(0) translateZ(0) scale3d(1,1,1);opacity:1}78%{transform:translateX(0) translateZ(0) scale3d(1,1,1);opacity:1}82%{transform:translateX(0) translateZ(55px) scale3d(1,1,1);opacity:.8}90%{transform:translateX(0) translateZ(-350px) scale3d(1,1,1);opacity:0;top:40%}100%{transform:translateX(0) translateZ(-350px) scale3d(1,1,1);opacity:0;top:-9999px}}.a-changeover{position:fixed;top:15px;right:15px;overflow:visible;z-index:1200;-webkit-backface-visibility:visible;backface-visibility:visible;-webkit-perspective:500px;-webkit-transform-style:preserve-3d;perspective:500px;transform-style:preserve-3d}.a-changeover-manual{position:absolute;height:auto;width:200px;left:50%;margin-left:-100px}.a-changeover-manual .a-changeover-inner{-webkit-animation:none;animation:none;top:0;left:0;margin-left:0;position:static}.a-changeover-inner{width:200px;background-color:#444C55;border:1px solid #2f353b;border-radius:4px;font-size:15px;line-height:1.35;font-weight:700;color:#fff;padding:11px 13px 11px 14px;text-align:center;-webkit-transform-origin:0 0;-webkit-transform-style:preserve-3d;-webkit-animation:bubble-pop 2.2s ease 0s 1 normal;-webkit-animation-fill-mode:forwards;-webkit-transform:translate3d(0,0,0);transform-origin:0 0;transform-style:preserve-3d;animation:bubble-pop 2.2s ease 0s 1 normal;animation-fill-mode:forwards;transform:translate3d(0,0,0)}.a-profile{display:table;text-decoration:none;color:inherit}.a-profile:hover{text-decoration:none}.a-profile-avatar-wrapper{display:table-cell;width:66px;padding-right:10px}.a-profile[data-a-size=small] .a-profile-avatar-wrapper{padding-right:9px;width:43px}.a-profile-avatar{position:relative;height:56px;width:56px}.a-profile-avatar img{border-radius:56px;background-color:#FFF;border:3px solid #FFF;width:100%}[data-a-size=small] .a-profile-avatar{height:34px;width:34px}[data-a-size=small] .a-profile-avatar img{border-radius:34px;border:2px solid #FFF}.a-profile[data-a-type=enthusiast] .a-profile-avatar:after{position:absolute;content:'';display:block;top:auto;bottom:0;left:auto;right:-6px}.a-profile[data-a-size=small] .a-profile-avatar:after{top:auto;bottom:0;left:auto;right:-6px}.a-profile-content{display:table-cell;vertical-align:middle;min-height:56px}.a-profile[data-a-size=small] .a-profile-content{min-height:34px}.a-profile-name{position:relative;color:#111;font-size:17px;line-height:1.255;unicode-bidi:isolate}.a-profile[data-a-descriptor] .a-profile-name,.a-profile[data-a-type] .a-profile-name{margin-right:9px}.a-profile[data-a-size=small] .a-profile-name{font-size:13px;line-height:19px}.a-profile[data-a-size=small][data-a-descriptor] .a-profile-name,.a-profile[data-a-size=small][data-a-type] .a-profile-name{margin-right:8px}.a-profile[data-a-size=base][data-a-descriptor] .a-profile-name,.a-profile[data-a-size=base][data-a-type] .a-profile-name{display:block}.a-profile-verified-badge{display:inline-block;overflow:hidden;vertical-align:baseline;margin-left:8px}.a-profile[data-a-size=small] .a-profile-verified-badge{margin-left:6px}.a-profile-verified-text{position:absolute!important;left:0!important;bottom:-1px!important;z-index:-1!important;opacity:0}.a-profile-descriptor{display:inline-block;color:#6C7778;font-size:12px;line-height:1.5}.a-profile[data-a-type=enthusiast] .a-profile-descriptor{color:#538000}.a-profile[data-a-type=seller] .a-profile-descriptor{color:#A91D67}.a-profile[data-a-size=small] .a-profile-descriptor{font-size:12px;line-height:1.5}.a-truncate{display:inline-block;position:relative;width:100%;overflow:hidden}.a-truncate[data-a-word-break=normal]{word-break:normal}.a-truncate[data-a-word-break=break-all]{word-break:break-all}.a-truncate[data-a-word-break=break-word]{word-wrap:break-word;overflow-wrap:break-word}.a-truncate[data-a-word-break=keep-all]{word-break:keep-all}.a-truncate-calc,.a-truncate-cut,.a-truncate-full{display:inline-block;width:100%;white-space:normal}.a-cardui-deck{background-color:transparent;padding-top:.1px;padding-bottom:.1px}.a-cardui-deck:after,.a-cardui-deck:before{display:block;content:'.';visibility:hidden;height:0}.a-cardui-deck:before{margin-bottom:20px}.a-cardui-deck:after{margin-top:20px}.a-cardui-deck[data-a-remove-top-gutter]:before{margin-bottom:-20px;content:''}.a-cardui-deck[data-a-remove-bottom-gutter]:after{margin-top:-20px;content:''}.a-lt-ie10 .a-cardui[data-a-card-type=peekToggle] .a-cardui-content,.a-lt-ie10 .a-cardui[data-a-card-type=peekToggle] .a-cardui-teaser{visibility:visible}.a-cardui{margin-top:20px;margin-bottom:20px;background-color:#FFF;overflow:auto;padding:20px 0 15px 0}.a-cardui .a-cardui-header{padding:0 20px;padding-bottom:10px}.a-cardui .a-cardui-body{padding:0 20px;position:relative}.a-cardui .a-cardui-body:last-child{padding-bottom:5px}.a-cardui .a-cardui-footer{padding:0 20px;padding-top:10px}.a-cardui .a-cardui-expand-control-title:focus{outline:0}.a-cardui .a-cardui-expand-control-footer:focus{outline:0}.a-cardui[data-a-card-type=peekToggle] .a-cardui-expand-control-title,.a-cardui[data-a-card-type=peekExpand] .a-cardui-expand-control-title{cursor:pointer;-webkit-tap-highlight-color:transparent}.a-cardui[data-a-card-type=peekToggle] .a-cardui-expand-control-title:active,.a-cardui[data-a-card-type=peekExpand] .a-cardui-expand-control-title:active{color:#c45500}.a-cardui[data-a-card-type=peekToggle] .a-cardui-expand-control-footer,.a-cardui[data-a-card-type=peekExpand] .a-cardui-expand-control-footer{cursor:pointer;-webkit-tap-highlight-color:transparent}.a-cardui[data-a-card-type=peekToggle] .a-cardui-expand-control-footer .a-expander-icon,.a-cardui[data-a-card-type=peekExpand] .a-cardui-expand-control-footer .a-expander-icon{display:inline-block;position:relative}.a-cardui[data-a-card-type=peekToggle] .a-cardui-expand-control-footer .a-see-more,.a-cardui[data-a-card-type=peekExpand] .a-cardui-expand-control-footer .a-see-more{font-weight:400;display:inline-block;margin-left:21px}.a-cardui[data-a-card-type=fullBleed]{padding:0}.a-cardui[data-a-card-type=fullBleed] .a-cardui-header{padding:0}.a-cardui[data-a-card-type=fullBleed] .a-cardui-body{padding:0}.a-cardui[data-a-card-type=fullBleed] .a-cardui-body:last-child{padding-bottom:0}.a-cardui[data-a-card-type=fullBleed] .a-cardui-footer{padding:0}.a-cardui[data-a-card-type=peekExpand] .a-reactive-container-gradient{transition:height .4s cubic-bezier(.4,0,.6,1);position:absolute;right:0;bottom:0;left:0;height:40px;background:-webkit-linear-gradient(rgba(255,255,255,0),#FFF);background:linear-gradient(rgba(255,255,255,0),#FFF)}.a-cardui[data-a-card-type=peekExpand] .a-cardui-content:focus{outline:0}.a-cardui[data-a-card-type=peekExpand] .a-cardui-teaser+.a-cardui-content.a-cardui-uninitialized{height:0;overflow:hidden}.a-cardui[data-a-card-type=peekExpand][data-a-expanded=true] .a-cardui-content.a-cardui-uninitialized{max-height:none!important}.a-cardui[data-a-card-type=peekExpand][data-a-expanded=true] .a-cardui-teaser+.a-cardui-content.a-cardui-uninitialized{height:auto;overflow:none}.a-cardui[data-a-card-type=peekExpand][data-a-expanded=true] .a-reactive-container-gradient{height:0}.a-cardui[data-a-card-type=peekToggle] .a-cardui-content,.a-cardui[data-a-card-type=peekToggle] .a-cardui-teaser{transition:visibility .2s,opacity .2s cubic-bezier(.4,0,.6,1)}.a-cardui[data-a-card-type=peekToggle] .a-cardui-content:focus,.a-cardui[data-a-card-type=peekToggle] .a-cardui-teaser:focus{outline:0}.a-cardui[data-a-card-type=peekToggle] .a-cardui-content{opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";visibility:hidden}.a-cardui[data-a-card-type=peekToggle] .a-cardui-content.a-cardui-uninitialized{position:absolute;top:0;left:0}.a-cardui[data-a-card-type=peekToggle] .a-cardui-teaser{opacity:1;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=100)\";visibility:visible;transition-delay:.2s}.a-cardui[data-a-card-type=peekToggle] .a-cardui-teaser.a-cardui-uninitialized{position:static}.a-cardui[data-a-card-type=peekToggle][data-a-expanded=true] .a-cardui-content{opacity:1;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=100)\";visibility:visible;transition-delay:.2s}.a-cardui[data-a-card-type=peekToggle][data-a-expanded=true] .a-cardui-content.a-cardui-uninitialized{position:static}.a-cardui[data-a-card-type=peekToggle][data-a-expanded=true] .a-cardui-teaser{opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";visibility:hidden;transition-delay:0s}.a-cardui[data-a-card-type=peekToggle][data-a-expanded=true] .a-cardui-teaser.a-cardui-uninitialized{position:absolute;top:0;left:0}.a-reactive-container{position:relative;overflow:hidden;min-height:0}.a-reactive-container.a-reactive-container-transition{transition:height .4s cubic-bezier(.4,0,.2,1)}.a-cardui-absolute-position{position:absolute;top:0;left:0;width:100%}.a-css-icon-draw{border:solid #0066c0;border-width:0 2px 2px 0;display:inline-block;padding:4.5px;position:absolute}.a-css-icon-draw.a-css-icon-expand{transform:rotate(45deg);-webkit-transform:rotate(45deg);bottom:2px}.a-css-icon-draw.a-css-icon-collapse{transform:rotate(-135deg);-webkit-transform:rotate(-135deg);bottom:-4px}.a-css-icon-draw:active{border-color:#c45500}.a-css-icon-draw:focus{border-color:#0066c0}.a-cardui .a-truncate{display:block}.a-hidden,.aok-hidden{display:none!important;visibility:hidden!important}.a-block,.aok-block{display:block;position:relative}.a-inline-block,.aok-inline-block{display:inline-block}.a-offscreen,.aok-offscreen{position:absolute!important;left:a_px(0)!important;bottom:a_px(-1)!important;z-index:-1!important;opacity:0}.a-relative,.aok-relative{position:relative}.a-float-right,.aok-float-right{float:right!important}.a-float-left,.aok-float-left{float:left!important}.a-align-top,.aok-align-top{vertical-align:top!important}.a-align-center,.aok-align-center{vertical-align:middle!important}.a-align-bottom,.aok-align-bottom{vertical-align:bottom!important}.a-align-center-horizontally,.aok-align-center-horizontally{margin-left:auto;margin-right:auto}.a-nowrap,.aok-nowrap{white-space:nowrap}.a-break-word,.aok-break-word{word-break:break-all}.a-clearfix:after,.a-clearfix:before,.aok-clearfix:after,.aok-clearfix:before{display:table;content:\"\";line-height:0;font-size:0}.a-clearfix:after,.aok-clearfix:after{clear:both}.a-hide-text,.aok-hide-text{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.a-pre-line,.aok-pre-line{white-space:pre-line}.a-no-select,.aok-no-select{-webkit-touch-callout:none;-webkit-user-select:safe_unquote(none);-moz-user-select:safe_unquote(none);user-select:safe_unquote(none)}\n\u003C/style>\n\u003Cscript>\n(function(f,h,Q,A){function G(a){x&&x.tag&&x.tag(q(\":\",\"aui\",a))}function v(a,b){x&&x.count&&x.count(\"aui:\"+a,0===b?0:b||(x.count(\"aui:\"+a)||0)+1)}function l(a){try{return a.test(navigator.userAgent)}catch(b){return!1}}function y(a,b,c){a.addEventListener?a.addEventListener(b,c,!1):a.attachEvent&&a.attachEvent(\"on\"+b,c)}function q(a,b,c,e){b=b&&c?b+a+c:b||c;return e?q(a,b,e):b}function H(a,b,c){try{Object.defineProperty(a,b,{value:c,writable:!1})}catch(e){a[b]=c}return c}function ta(a,b){var c=a.length,\ne=c,g=function(){e--||(R.push(b),S||(setTimeout(T,0),S=!0))};for(g();c--;)ca[a[c]]?g():(B[a[c]]=B[a[c]]||[]).push(g)}function ua(a,b,c,e,g){var d=h.createElement(a?\"script\":\"link\");y(d,\"error\",e);g&&y(d,\"load\",g);a?(d.type=\"text/javascript\",d.async=!0,c&&/AUIClients|images[/]I/.test(b)&&d.setAttribute(\"crossorigin\",\"anonymous\"),d.src=b):(d.rel=\"stylesheet\",d.href=b);h.getElementsByTagName(\"head\")[0].appendChild(d)}function da(a,b){function c(c,e){function g(){ua(b,c,h,function(b){!I&&h?(h=!1,v(\"resource_retry\"),\ng()):(v(\"resource_error\"),a.log(\"Asset failed to load: \"+c,I?\"WARN\":A));b&&b.stopPropagation?b.stopPropagation():f.event&&(f.event.cancelBubble=!0)},e)}if(ea[c])return!1;ea[c]=!0;v(\"resource_count\");var h=!0;return!g()}if(b){var e=0,g=0;c.andConfirm=function(a,b){return c(a,function(){e++;b&&b.apply(this,arguments)})};c.confirm=function(){g++};c.getCsriCounters=function(){return{reqs:e,full:g}}}return c}function va(a,b,c){for(var e={name:a,guard:function(c){return b.guardFatal(a,c)},logError:function(c,\nd,e){b.logError(c,d,e,a)}},g=[],d=0;d\u003Cc.length;d++)J.hasOwnProperty(c[d])&&(g[d]=U.hasOwnProperty(c[d])?U[c[d]](J[c[d]],e):J[c[d]]);return g}function C(a,b,c,e,g){return function(d,h){function m(){var a=null;e?a=h:\"function\"===typeof h&&(p.start=D(),a=h.apply(f,va(d,k,l)),p.end=D());if(b){J[d]=a;a=d;for(ca[a]=!0;(B[a]||[]).length;)B[a].shift()();delete B[a]}p.done=!0}var k=g||this;\"function\"===typeof d&&(h=d,d=A);b&&(d=d?d.replace(fa,\"\"):\"__NONAME__\",V.hasOwnProperty(d)&&k.error(q(\", reregistered by \",\nq(\" by \",d+\" already registered\",V[d]),k.attribution),d),V[d]=k.attribution);for(var l=[],n=0;n\u003Ca.length;n++)l[n]=a[n].replace(fa,\"\");var p=ga[d||\"anon\"+ ++wa]={depend:l,registered:D(),namespace:k.namespace};c?m():ta(l,k.guardFatal(d,m));return{decorate:function(a){U[d]=k.guardFatal(d,a)}}}}function ha(a){return function(){var b=Array.prototype.slice.call(arguments);return{execute:C(b,!1,a,!1,this),register:C(b,!0,a,!1,this)}}}function W(a,b){return function(c,e){e||(e=c,c=A);var g=this.attribution;\nreturn function(){z.push(b||{attribution:g,name:c,logLevel:a});var d=e.apply(this,arguments);z.pop();return d}}}function K(a,b){this.load={js:da(this,!0),css:da(this)};H(this,\"namespace\",b);H(this,\"attribution\",a)}function ia(){h.body?p.trigger(\"a-bodyBegin\"):setTimeout(ia,20)}function E(a,b){a.className=X(a,b)+\" \"+b}function X(a,b){return(\" \"+a.className+\" \").split(\" \"+b+\" \").join(\" \").replace(/^ | $/g,\"\")}function ja(a){try{return a()}catch(b){return!1}}function L(){if(M){var a={w:f.innerWidth||\nm.clientWidth,h:f.innerHeight||m.clientHeight};5\u003CMath.abs(a.w-Y.w)||50\u003Ca.h-Y.h?(Y=a,N=4,(a=k.mobile||k.tablet?450\u003Ca.w&&a.w>a.h:1250\u003C=a.w)?E(m,\"a-ws\"):m.className=X(m,\"a-ws\")):0\u003CN&&(N--,ka=setTimeout(L,16))}}function xa(a){(M=a===A?!M:!!a)&&L()}function ya(){return M}function t(a,b){return\"sw:\"+(b||\"\")+\":\"+a+\":\"}function la(){ma.forEach(function(a){G(a)})}function r(a){ma.push(a)}function na(a,b,c,e){if(c){b=l(/Chrome/i)&&!l(/Edge/i)&&!l(/OPR/i)&&!a.capabilities.isAmazonApp&&!l(new RegExp(Z+\"bwv\"+\nZ+\"b\"));var g=t(e,\"browser\"),d=t(e,\"prod_mshop\"),f=t(e,\"beta_mshop\");!a.capabilities.isAmazonApp&&c.browser&&b&&(r(g+\"supported\"),c.browser.action(g,e));!b&&c.browser&&r(g+\"unsupported\");c.prodMshop&&r(d+\"unsupported\");c.betaMshop&&r(f+\"unsupported\")}}\"use strict\";var O=Q.now=Q.now||function(){return+new Q},D=function(a){return a&&a.now?a.now.bind(a):O}(f.performance),za=D(),u=f.AmazonUIPageJS||f.P;if(u&&u.when&&u.register)throw Error(\"A copy of P has already been loaded on this page.\");var x=f.ue;\nG();G(\"aui_build_date:3.19.6-2019-09-27\");var R=[],S=!1,T;T=function(){for(var a=setTimeout(T,0),b=O();R.length;)if(R.shift()(),50\u003CO()-b)return;clearTimeout(a);S=!1};var ca={},B={},ea={},I=!1;y(f,\"beforeunload\",function(){I=!0;setTimeout(function(){I=!1},1E4)});var fa=/^prv:/,V={},J={},U={},ga={},wa=0,Z=String.fromCharCode(92),F,z=[],oa=f.onerror;f.onerror=function(a,b,c,e,g){g&&\"object\"===typeof g||(g=Error(a,b,c),g.columnNumber=e,g.stack=b||c||e?q(Z,g.message,\"at \"+q(\":\",b,c,e)):A);var d=z.pop()||\n{};g.attribution=q(\":\",g.attribution||d.attribution,d.name);g.logLevel=d.logLevel;g.attribution&&console&&console.log&&console.log([g.logLevel||\"ERROR\",a,\"thrown by\",g.attribution].join(\" \"));z=[];oa&&(d=[].slice.call(arguments),d[4]=g,oa.apply(f,d))};K.prototype={logError:function(a,b,c,e){b={message:b,logLevel:c||\"ERROR\",attribution:q(\":\",this.attribution,e)};if(f.ueLogError)return f.ueLogError(a||b,a?b:null),!0;console&&console.error&&(console.log(b),console.error(a));return!1},error:function(a,\nb,c,e){a=Error(q(\":\",e,a,c));a.attribution=q(\":\",this.attribution,b);throw a;},guardError:W(),guardFatal:W(\"FATAL\"),guardCurrent:function(a){var b=z[z.length-1];return b?W(b.logLevel,b).call(this,a):a},log:function(a,b,c){return this.logError(null,a,b,c)},declare:C([],!0,!0,!0),register:C([],!0),execute:C([]),AUI_BUILD_DATE:\"3.19.6-2019-09-27\",when:ha(),now:ha(!0),trigger:function(a,b,c){var e=O();this.declare(a,{data:b,pageElapsedTime:e-(f.aPageStart||NaN),triggerTime:e});c&&c.instrument&&F.when(\"prv:a-logTrigger\").execute(function(b){b(a)})},\nhandleTriggers:function(){this.log(\"handleTriggers deprecated\")},attributeErrors:function(a){return new K(a)},_namespace:function(a,b){return new K(a,b)}};var p=H(f,\"AmazonUIPageJS\",new K);F=p._namespace(\"PageJS\",\"AmazonUI\");F.declare(\"prv:p-debug\",ga);p.declare(\"p-recorder-events\",[]);p.declare(\"p-recorder-stop\",function(){});H(f,\"P\",p);ia();if(h.addEventListener){var pa;h.addEventListener(\"DOMContentLoaded\",pa=function(){p.trigger(\"a-domready\");h.removeEventListener(\"DOMContentLoaded\",pa,!1)},!1)}var m=\nh.documentElement,aa=function(){var a=[\"O\",\"ms\",\"Moz\",\"Webkit\"],b=h.createElement(\"div\");return{testGradients:function(){b.style.cssText=\"background-image:-webkit-gradient(linear,left top,right bottom,from(#1E4),to(white));background-image:-webkit-linear-gradient(left top,#1E4,white);background-image:linear-gradient(left top,#1E4,white);\";return~b.style.backgroundImage.indexOf(\"gradient\")},test:function(c){var e=c.charAt(0).toUpperCase()+c.substr(1);c=(a.join(e+\" \")+e+\" \"+c).split(\" \");for(e=c.length;e--;)if(\"\"===\nb.style[c[e]])return!0;return!1},testTransform3d:function(){var a=!1;f.matchMedia&&(a=f.matchMedia(\"(-webkit-transform-3d)\").matches);return a}}}(),u=m.className,qa=/(^| )a-mobile( |$)/.test(u),ra=/(^| )a-tablet( |$)/.test(u),k={audio:function(){return!!h.createElement(\"audio\").canPlayType},video:function(){return!!h.createElement(\"video\").canPlayType},canvas:function(){return!!h.createElement(\"canvas\").getContext},svg:function(){return!!h.createElementNS&&!!h.createElementNS(\"http://www.w3.org/2000/svg\",\n\"svg\").createSVGRect},offline:function(){return navigator.hasOwnProperty&&navigator.hasOwnProperty(\"onLine\")&&navigator.onLine},dragDrop:function(){return\"draggable\"in h.createElement(\"span\")},geolocation:function(){return!!navigator.geolocation},history:function(){return!(!f.history||!f.history.pushState)},webworker:function(){return!!f.Worker},autofocus:function(){return\"autofocus\"in h.createElement(\"input\")},inputPlaceholder:function(){return\"placeholder\"in h.createElement(\"input\")},textareaPlaceholder:function(){return\"placeholder\"in\nh.createElement(\"textarea\")},localStorage:function(){return\"localStorage\"in f&&null!==f.localStorage},orientation:function(){return\"orientation\"in f},touch:function(){return\"ontouchend\"in h},gradients:function(){return aa.testGradients()},hires:function(){var a=f.devicePixelRatio&&1.5\u003C=f.devicePixelRatio||f.matchMedia&&f.matchMedia(\"(min-resolution:144dpi)\").matches;v(\"hiRes\"+(qa?\"Mobile\":ra?\"Tablet\":\"Desktop\"),a?1:0);return a},transform3d:function(){return aa.testTransform3d()},touchScrolling:function(){return l(/Windowshop|android|OS ([5-9]|[1-9][0-9]+)(_[0-9]{1,2})+ like Mac OS X|Chrome|Silk|Firefox|Trident.+?; Touch/i)},\nios:function(){return l(/OS [1-9][0-9]*(_[0-9]*)+ like Mac OS X/i)&&!l(/trident|Edge/i)},android:function(){return l(/android.([1-9]|[L-Z])/i)&&!l(/trident|Edge/i)},mobile:function(){return qa},tablet:function(){return ra},rtl:function(){return\"rtl\"===m.dir}},n;for(n in k)k.hasOwnProperty(n)&&(k[n]=ja(k[n]));for(var ba=\"textShadow textStroke boxShadow borderRadius borderImage opacity transform transition\".split(\" \"),P=0;P\u003Cba.length;P++)k[ba[P]]=ja(function(){return aa.test(ba[P])});var M=!0,ka=0,\nY={w:0,h:0},N=4;L();y(f,\"resize\",function(){clearTimeout(ka);N=4;L()});var sa={getItem:function(a){try{return f.localStorage.getItem(a)}catch(b){}},setItem:function(a,b){try{return f.localStorage.setItem(a,b)}catch(c){}}};m.className=X(m,\"a-no-js\");E(m,\"a-js\");!l(/OS [1-8](_[0-9]*)+ like Mac OS X/i)||f.navigator.standalone||l(/safari/i)||E(m,\"a-ember\");u=[];for(n in k)k.hasOwnProperty(n)&&k[n]&&u.push(\"a-\"+n.replace(/([A-Z])/g,function(a){return\"-\"+a.toLowerCase()}));E(m,u.join(\" \"));m.setAttribute(\"data-aui-build-date\",\n\"3.19.6-2019-09-27\");p.register(\"p-detect\",function(){return{capabilities:k,localStorage:k.localStorage&&sa,toggleResponsiveGrid:xa,responsiveGridEnabled:ya}});l(/UCBrowser/i)||k.localStorage&&E(m,sa.getItem(\"a-font-class\"));p.declare(\"a-event-revised-handling\",!1);var w;try{w=navigator.serviceWorker}catch(a){G(\"sw:nav_err\")}w&&(y(w,\"message\",function(a){a&&a.data&&v(a.data.k,a.data.v)}),w.controller&&w.controller.postMessage(\"MSG-RDY\"));var ma=[];n={reg:{},unreg:{}};n.unreg.browser={action:function(a,\nb){var c=w.getRegistrations();c&&c.then(function(c){c.forEach(function(c){c.unregister().then(function(){v(a+\"success\")}).catch(function(c){p.logError(c,\"[AUI SW] Failed to \"+b+\" service worker: \");v(a+\"failure\")})})})}};(function(a){var b=a.reg,c=a.unreg;w&&w.getRegistrations?(F.when(\"A\",\"a-util\").execute(function(a,b){na(a,b,c,\"unregister\")}),y(f,\"load\",function(){F.when(\"A\",\"a-util\").execute(function(a,c){na(a,c,b,\"register\");la()})})):(b&&(b.browser&&r(t(\"register\",\"browser\")+\"unsupported\"),b.prodMshop&&\nr(t(\"register\",\"prod_mshop\")+\"unsupported\"),b.betaMshop&&r(t(\"register\",\"beta_mshop\")+\"unsupported\")),c&&(c.browser&&r(t(\"unregister\",\"browser\")+\"unsupported\"),c.prodMshop&&r(t(\"unregister\",\"prod_mshop\")+\"unsupported\"),c.betaMshop&&r(t(\"unregister\",\"beta_mshop\")+\"unsupported\")),la())})(n);p.declare(\"a-fix-event-off\",!1);v(\"pagejs:pkgExecTime\",D()-za)})(window,document,Date);\n(function(a){\"use strict\";if(!a.mix_d){var q=[],r={},t=!a.Promise;t&&P.when(\"3p-promise\").register(\"@p/promise-is-ready\",function(e){a.Promise=e});a.mix_d=function(e,d,k){\"string\"!==typeof e&&a.P.error(\"CardJS C001\");if(!r[e]){var c=e.split(\":\",2),h=c.length,b=1===h,f=c[h-1].replace(/@capability\\//,\"@c/\"),l=0===f.indexOf(\"@c/\"),h=k?d:q,u=k||d,g=b?a.P:a.P._namespace(c[0]),m,v=[],n=[];d=[];k=h.length;for(c=0;c\u003Ck;c++)b=h[c],\"module\"!==b&&\"require\"!==b||g.error(\"CardJS C002\"),\"exports\"===b?(b=\"mix:\"+\nf+\"-exports\",g.declare(b,m={}),d.push(b)):\"@p/\"===b.substr(0,3)?d.push(b.substr(3)):\"@c/\"===b.substr(0,3)?(n.push(c),v.push(b)):d.push(\"mix:\"+b);var p=0;t&&(d.unshift(\"@p/promise-is-ready\"),p+=1);l&&(d.unshift(\"mix:@amzn/mix.client-runtime\"),p+=1);g.when.apply(g,d).register(\"mix:\"+f,function(){var b=q.slice.call(arguments,p);if(l||0\u003Cn.length){var a={capabilities:v,cardModuleFactory:function(a){for(var d=b,e=a.length,c=0;c\u003Ce;c++)d.splice(n[c],0,a[c]);a=u.apply(null,d);a=m||a;a.P=g;return a}};l&&arguments[0].registerCapabilityModule(f,\na);return a}a=u.apply(null,b);return m||a});g.when(\"mix:\"+f).register(\"xcp:\"+f,function(a){return a});r[e]=!0}};a.xcp_d=a.mix_d;P.when(\"mix:@amzn/mix.client-runtime\").execute(function(a){P.declare(\"xcp:@xcp/runtime\",a)})}})(window);\n(window.AmazonUIPageJS ? AmazonUIPageJS : P).when('sp.load.js').execute(function() {\n  (window.AmazonUIPageJS ? AmazonUIPageJS : P).load.js('https://images-na.ssl-images-amazon.com/images/I/614ihxQDWpL._RC|11-BZEJ8lnL.js,61GQ9IdK7HL.js,21Of0-9HPCL.js,012FVc3131L.js,119KAWlHU6L.js,51xL2QLv4YL.js,11AHlQhPRjL.js,016iHgpF74L.js,11aNYFFS5hL.js,116tgw9TSaL.js,211-p4GRUCL.js,01PoLXBDXWL.js,61UCC86QXoL.js,11BOgvnnntL.js,31UWuPgtTtL.js,01rpauTep4L.js,01iyxuSGj4L.js,01oGoEUF1PL.js_.js?AUIClients/AmazonUI#218320-T1.192338-T1.202051-T1');\n  (window.AmazonUIPageJS ? AmazonUIPageJS : P).load.js('https://images-na.ssl-images-amazon.com/images/I/41IMQGjpgmL.js?AUIClients/CardJsRuntimeBuzzCopyBuild');\n});\n\u003C/script>\n\u003C!-- sp:feature:nav-inline-css -->\n\u003Cstyle>.nav-sprite-v1 .nav-sprite, .nav-sprite-v1 .nav-icon {\n  background-image: url(https://images-na.ssl-images-amazon.com/images/G/01/gno/sprites/nav-sprite-global_bluebeacon-1x_optimized_layout1._CB468670774_.png);\n  background-position: 0 1000px;\n  background-repeat: repeat-x;\n}\n.nav-spinner {\n  background-image: url(https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/popover/images/snake._CB192571611_.gif);\n  background-position: center center;\n  background-repeat: no-repeat;\n}\n.nav-timeline-icon, .nav-access-image, .nav-timeline-prime-icon {\n  background-image: url(https://images-na.ssl-images-amazon.com/images/G/01/gno/sprites/timeline_sprite_1x._CB276239408_.png);\n  background-repeat: no-repeat;\n}\n\u003C/style>\u003C!-- NAVYAAN CSS -->\n\u003Clink rel=\"stylesheet\" href=\"https://images-na.ssl-images-amazon.com/images/I/21rQMjhzuzL._RC|71BrVwtVCCL.css,11WnO6PP7GL.css,310-M-Za+ML.css,21+aU+R3IiL.css,31wWWC6YAvL.css,11G4HxMtMSL.css,31OvHRW+XiL.css,01XHMOHpK1L.css_.css?AUIClients/AmazonNavigationDesktopMetaAsset#desktop.222470-T1\">\n\u003C!-- sp:feature:host-assets -->\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n  \n\n\n\n\n\n\n\n    \n\n    \n\n\n\n\n\n \n \n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n \n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003C!-- htmlBeginMarker -->\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n    \n    \n\n\n\n\n\n\n\n\n  \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n            \n\n\n            \n\n\n\n\n\n\n            \n\n        \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n        \n        \n        \n\n  \n\n\n\n\n\n\n\n\n    \n\n\n            \n\n\n            \n\n\n\n\n\n\n            \n\n        \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n        \n        \n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n   \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cstyle>\n.ap_popover_unsprited .ap_body .ap_left{background-image:url(https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/popover/images/po_left_17._V1_.png)}.ap_popover_unsprited .ap_body .ap_right{background-image:url(https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/popover/images/po_right_17._V1_.png)}.ap_popover_unsprited .ap_header .ap_left{background-image:url(https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/popover/images/po_top_left._V1_.png)}.ap_popover_unsprited .ap_header .ap_right{background-image:url(https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/popover/images/po_top_right._V1_.png)}.ap_popover_unsprited .ap_header .ap_middle{background-image:url(https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/popover/images/po_top._V1_.png)}.ap_popover_unsprited .ap_footer .ap_left{background-image:url(https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/popover/images/po_bottom_left._V1_.png)}.ap_popover_unsprited .ap_footer .ap_right{background-image:url(https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/popover/images/po_bottom_right._V1_.png)}.ap_popover_unsprited .ap_footer .ap_middle{background-image:url(https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/popover/images/po_bottom._V1_.png)}.ap_popover_sprited .ap_body .ap_left,.ap_popover_sprited .ap_body .ap_right{background-image:url(https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/popover/images/light/sprite-v._V1_.png)}.ap_popover_sprited .ap_closebutton,.ap_popover_sprited .ap_footer .ap_left,.ap_popover_sprited .ap_footer .ap_middle,.ap_popover_sprited .ap_footer .ap_right,.ap_popover_sprited .ap_header .ap_left,.ap_popover_sprited .ap_header .ap_middle,.ap_popover_sprited .ap_header .ap_right{background-image:url(https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/popover/images/light/sprite-h._V1_.png)}.ap_popover_sprited .ap_body .ap_left-arrow,.ap_popover_sprited .ap_body .ap_right-arrow{background-image:url(https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/popover/images/light/sprite-arrow-v._V1_.png)}.ap_popover{position:absolute;outline:0}.ap_body{height:100%;min-height:36px;position:relative;background-color:#fff;margin:0 17px}.ap_body .ap_left,.ap_popover_sprited .ap_body .ap_left-arrow{width:17px;height:100%;position:absolute;top:0;left:-17px;background-attachment:scroll;background-repeat:repeat-y}.ap_popover_sprited .ap_body .ap_left{background-position:0 top}.ap_body .ap_right,.ap_popover_sprited .ap_body .ap_right-arrow{width:17px;height:100%;position:absolute;top:0;right:-17px;background-attachment:scroll;background-repeat:repeat-y}.ap_popover_sprited .ap_body .ap_right{background-position:-51px top}.ap_footer,.ap_header{position:relative;width:100%}.ap_footer *,.ap_header *{height:26px}.ap_header .ap_left{position:absolute;top:0;left:0;width:34px;background-attachment:scroll;background-repeat:no-repeat}.ap_popover_sprited .ap_header .ap_left{background-position:left -2px}.ap_header .ap_right{width:34px;position:absolute;top:0;right:0;background-attachment:scroll;background-repeat:no-repeat}.ap_popover_sprited .ap_header .ap_right{background-position:right -2px}.ap_header .ap_middle{margin:0 34px;background-attachment:scroll;background-repeat:repeat-x}.ap_popover_sprited .ap_header .ap_middle{background-position:0 -70px}.ap_footer .ap_left{position:absolute;top:0;left:0;width:34px;background-attachment:scroll;background-repeat:no-repeat}.ap_popover_sprited .ap_footer .ap_left{background-position:left -40px}.ap_footer .ap_right{width:34px;position:absolute;top:0;right:0;background-attachment:scroll;background-repeat:no-repeat}.ap_popover_sprited .ap_footer .ap_right{background-position:right -40px}.ap_footer .ap_middle{margin:0 34px;background-attachment:scroll;background-repeat:repeat-x}.ap_popover_sprited .ap_footer .ap_middle{background-position:0 -108px}.ap_popover .ap_titlebar{display:none;position:absolute;left:0;top:0;background-color:#EAF3FE;border-bottom:1px solid #C2DDF2;font-size:14px;font-weight:700;margin:8px 18px;white-space:nowrap;overflow:hidden}.ap_popover .ap_titlebar.multiline{white-space:normal;overflow:visible}.ap_popover .ap_titlebar .ap_title{padding:4px 0;margin-left:10px;overflow:hidden}#ap_overlay,#ap_overlay div{background-color:#3F4C58;width:100%;position:absolute;top:0;left:0;z-index:99}.ap_popover .ap_close{position:absolute;right:18px;top:13px}.ap_popover .ap_close a{padding:5px;text-decoration:none;outline:0}.ap_popover .ap_close .ap_closetext{display:none;margin-right:5px;line-height:1em}.ap_popover .ap_closebutton{display:-moz-inline-box;display:inline-block;width:15px;height:15px;background-repeat:no-repeat;background-position:0 -136px;position:relative;overflow:hidden;vertical-align:top}.ap_popover .ap_closebutton span{position:absolute;top:-9999px}.ap_popover .ap_close img{vertical-align:top}.ap_classic{border-top:1px solid #ccc;border-left:1px solid #ccc;border-bottom:1px solid #2F2F1D;border-right:1px solid #2F2F1D;background-color:#EFEDD4;padding:3px}.ap_classic .ap_titlebar{color:#86875D;font-size:12px;padding:0 0 3px 0;line-height:1em}.ap_classic .ap_close{float:right}.ap_classic .ap_content{clear:both;background-color:#fff;border:1px solid #ACA976;padding:8px;font-size:11px}\n.sims-vtph-currency{margin-right:2px;position:relative;top:-.4rem}.sims-vtph-cents{margin-left:2px;position:relative;top:-.4rem}.sims-vtph-price-badge{margin-left:5px}.sims-vtph-map-details{white-space:nowrap}.sims-vtph-grid-row{max-width:1240px}div.sims-vtph-grid-column div.sims-vtph-product-details{margin-left:15px;width:inherit}.sims-vtph-image{margin-left:auto;margin-right:auto;display:block}.sims-fbt-image-row{width:auto}.sims-fbt-image-box{float:left;margin-right:25px;line-height:116px;vertical-align:middle}.sims-fbt-image{vertical-align:middle}.sims-fbt-price-box{padding-right:10px;padding-top:10px;padding-bottom:10px}.sims-fbt-details-link{clear:left;padding-bottom:10px}.sims-fbt-this-item{margin-right:3px}.sims-fbt-unselected-item{opacity:.2;filter:alpha(opacity=20)}.sims-fbt-price-ppu{margin-left:5px;white-space:nowrap}.sims-fbt-points-value{margin-left:3px;margin-right:3px}fieldset.forScreenreaders legend span{position:absolute;left:-10000px;top:auto;width:1px;height:1px;padding:0;overflow:hidden}.sims-fbt-rows{clear:left}.sims-fbt-buttons{display:inline-block;padding-top:6px}.sims-fbt-checkbox span{margin-right:2px}.sims-fbt-checkbox input{display:none}.sims-fbt-seller-info{display:none}.sims-fbt-price-badges{display:inline-block;margin-left:5px;margin-right:13px}.fbt-aui-checkbox-label{position:relative;top:-3px}#fbt_w_check,#fbt_x_check,#fbt_y_check,#fbt_z_check{top:0}.fbt_item_details_no_left_padding{padding:0 0 .75em 0!important}#fbt_w_img img{max-width:none}#fbt_w_check{position:absolute;left:-21px;margin-bottom:3px}#fbt-bestseller-badge a:hover{text-decoration:none!important}#fbt_buttons{display:inline-block}#sims-fbt-form{margin-bottom:0}.sims-carousel-heading{clear:left}a:hover span.p13n-best-seller-store-name{color:#E47911!important;text-decoration:underline}a.p13n-best-seller:hover{text-decoration:none}.p13n-best-seller-badge{margin-right:4px;background-color:#E47911!important;font-size:12px;padding-top:2px;padding-bottom:2px}.p13n-best-seller-badge:before{border-bottom-color:#E47911!important}.p13n-best-seller-badge:after{border-top-color:#E47911!important}.p13n-cash-on-delivery{color:#FFF;background-color:#D0002B;padding:2px 5px 2px 5px;border-radius:3px;position:relative;top:-2px}.sims-only-show-prime-eligible-text{margin-left:5px}.sims-vtp-heading{clear:left}.p13n-sc-vtp-binding,.p13n-sc-vtp-platform{padding-left:5px}.vtp-xaiv-doublelists{max-width:50%;padding-right:30px;float:left}.vtp-container{display:inline-block;max-width:650px}.vtp-footer{clear:left}#view_to_purchase-sims-feature{margin-bottom:0}.sims-lpo-vtph-grid-column{min-width:305px;padding-right:25px;height:auto;display:inline-block;padding-bottom:500em;margin-bottom:-500em}.sims-lpo-vtph-grid-column:not(:last-child){border-right:1px solid #DDD}.sims-lpo-vtph-header{font-weight:400}.sims-lpo-vtph-row{margin-left:25px;overflow:hidden}.sims-lpo-section{padding:18px;min-width:996px;border-bottom:1px solid #DDD;position:relative}.sims-lpo-hue-shield{width:100%;top:0;left:0;bottom:0;right:0;position:absolute;background:rgba(0,0,0,.02);z-index:100;pointer-events:none}.sims-lpo-grid-column{min-width:305px;padding-right:25px;height:auto;display:inline-block;padding-bottom:500em;margin-bottom:-500em}.sims-lpo-grid-column:not(:last-child){border-right:1px solid #DDD}.sims-lpo-header{font-weight:400}div.sims-lpo-section div.sims-lpo-product-details{margin-left:25px;width:inherit}div.sims-lpo-section div.sims-vtph-product-details{margin-left:25px;width:inherit}.sims-lpo-row{margin-left:25px;overflow:hidden}.sims-lpo-header-title{font-weight:700}.sims-lpo-image{margin-left:auto;margin-right:auto;display:block}\n.bRecPlusSign{font-family:Arial;font-size:48px;color:#DDD}.bRecUseWith{white-space:nowrap}.bRecSwappableCenter{float:left;width:50%}.bRecNarrowElastic{width:5%;float:left}.bRecContentCompartment{width:29%;float:left}.bRecCentered{margin-left:auto;margin-right:auto}.bRecPlusContainer{width:30px;text-align:center;margin-top:55px}.bRecDisabled{opacity:.5}.bRecVerticalContent{padding-left:15px;padding-right:10px}.bRecChevronIcon{vertical-align:middle}.bRecToggleText{font-size:14px}.bRecQuotePush{margin-left:12px}.bRecEditorialBox{padding-left:20px;border-left:solid 2px #EEE;padding-bottom:10px;margin-bottom:10px;display:inline-block;padding-top:30px;margin-top:10px}.bRecCuratorPhotoWrapper{float:right;margin-right:25px;margin-top:10px;max-width:150px;overflow:hidden}.bRecBuyBox{float:left}.bRecExpanderFix.a-expander-inner{position:absolute}#bRecForm{max-width:1300px}#beautyRecommendations.minimizedSpacing .headerRow.a-fixed-left-grid .a-fixed-left-grid-inner{display:inline-table}#beautyRecommendations .headerRow.a-fixed-left-grid .a-fixed-left-grid-inner .a-fixed-left-grid-col.editorial{display:block}.bRecInvisible{visibility:hidden}.bRecUseWithWrapper{padding-top:25px;text-align:center;float:left;margin:35px 10px 0 10px;height:70px;width:70px;cursor:pointer}.bRecImage{cursor:pointer;display:block}#beautyRecommendations .headerRow{position:static}#beautyRecommendations .clearFloatDivider{clear:both}#beautyRecommendations.minimizedSpacing .clearFloatDivider{clear:none}@media(max-width:1450px){#beautyRecommendations.minimizedSpacing #bRecHorizontalView.bRecSwappableCenter{width:40%}}@media(max-width:1275px){#beautyRecommendations.minimizedSpacing #bRecHorizontalView.bRecSwappableCenter{width:50%}#beautyRecommendations.minimizedSpacing .clearFloatDivider{clear:both}#beautyRecommendations.minimizedSpacing .headerRow.a-fixed-left-grid .a-fixed-left-grid-inner .a-fixed-left-grid-col.editorial{display:block}}.burj .bRecImageWidth{width:220px}.burj .bRecImageHeight{height:220px}@media screen and (max-width:1279px){.burj .bRecImageWidth{width:160px}.burj .bRecImageHeight{height:160px}}\n#prodDetails .prodDetTable{table-layout:fixed;border-spacing:0;padding:0}#prodDetails .prodDetLabel{background-color:#F5F5F5;width:35%;color:#666;vertical-align:top}#prodDetails .prodDetSectionEntry{width:50%!important;white-space:normal;word-wrap:break-word}#prodDetails .prodDet-expander-header{float:right}#prodDetails .prodDet-summaryText-visible{display:none}#prodDetails .prodDet-heading-alignment{float:left}.uilm-section img{display:block;margin:0 auto;min-width:650px}#medslogo_header_web{padding-bottom:0;color:#C60;font-size:medium;font-family:verdana,arial,helvetica,sans-serif}.burj-body #medslogo_header_web{color:#333;font-weight:400;padding-bottom:0;font-size:21px;font-family:arial,verdana,helvetica,sans-serif}#mllStaticLearnMore{padding-left:14px}#mll-tab-divider{padding-top:30px}#medsLegalLogo_feature_div{margin-bottom:14px!important}#energyEfficiencyLabel{display:inline-block;width:50px;height:23px}.energyEfficiencyArrow{position:relative;width:36px;height:22px;margin-right:22px;color:#FFF;text-align:center;line-height:22px;font-size:15px}.energyEfficiencyArrow:after{content:\"\";position:absolute;left:100%;top:0;width:0;height:0;border-top:11px solid transparent;border-left-width:10px;border-left-style:solid;border-bottom:11px solid transparent}.energyEfficiencySymbol{position:relative;top:-2px}.energyEfficiencyTextPlacement{position:relative;left:2px}.technicalData .h3color,.technicalData font,.technicalData ul{color:#333!important}.technicalData b,.technicalData strong{font-weight:400!important}#dealprice_shippingmessage i.a-icon.a-icon-popover,#ourprice_shippingmessage i.a-icon.a-icon-popover,#saleprice_shippingmessage i.a-icon.a-icon-popover,.buyboxShippingLabel i.a-icon.a-icon-popover{display:none!important}\n#WLNEW_section_wlType .a-box{min-height:115px}#WLNEW_section_wlType .type-radio-contents{margin-left:0}#WLNEW_section_wlType .a-icon-radio{vertical-align:top;margin-right:5px;margin-left:-5px}#WLNEW_occ_month{margin-right:10px}.privacy_buttons_margin{margin-left:0!important;margin-bottom:5px!important}.fix-width-x-large{width:293px!important}.fix-width-large{width:150px!important}#WLNEW_section_wlType .a-icon-radio{margin-top:2px}\n#atwl-popover-inner{max-height:220px;overflow-y:auto;overflow-x:hidden;border-bottom-left-radius:0;border-bottom-right-radius:0}#atwl-popover-inner li{position:relative}.atwl-dd-list-name{display:inline-block;width:170px;height:13px;line-height:13px;overflow:hidden;text-overflow:ellipsis;vertical-align:middle}.atwl-dd-list-name-kbp{width:133px}.atwl-dd-list-privacy{display:inline-block;position:absolute;right:3px;top:12px}.atwl-dd-list-privacy.a-size-mini{line-height:4px!important}#atwl-rich-content{padding:14px 18px;border-top-left-radius:0;border-top-right-radius:0;border-left-width:0;border-right-width:0;margin-bottom:0}#atwl-rich-content-divider{margin-top:10px}#kbp-promo{display:block;margin-bottom:10px}.atwl-button{vertical-align:middle;display:inline-block;margin-left:10px}.atwl-button-wide{vertical-align:middle;display:block;margin-bottom:10px}.atwl-button-wide #wishListDropDown .a-button-text{padding:0}#atwl-error-holder{vertical-align:middle}.atwl-text{display:inline-block;max-width:150px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;vertical-align:middle}div[class~=atwl-text-white] span{color:#fff;text-decoration:underline}.atwl-text-white{color:#fff}.atwl-text-black{color:#000}span.uwl-response-text>a,span.uwl-response-text>span{font-size:13;margin-left:5px}.uwl-response-text{display:inline-block;max-width:210px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;vertical-align:middle;margin-top:-5px}.inline{display:inline-block}.text-normal{text-decoration:none!important}.aui-link{color:#0066c0!important;text-decoration:none!important}.aui-link:hover{color:#e47911!important;text-decoration:underline!important}#atwl-inline-link-text{position:relative;top:1px}#wl-inline-wrapper #wishListDropDown{border:none}.wr-modal-add-to-reg-action-button{margin-top:8px;width:100%}.wr-modal-add-to-reg-product-price{margin-right:20px;color:#b12704}.wr-modal-add-to-reg-product-prime-icon{vertical-align:top}.wr-modal-add-to-reg-rec-item-title{display:block;display:-webkit-box;line-height:16px;height:32px;width:150px;margin-bottom:0;-webkit-line-clamp:2;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis}.wr-modal-add-to-reg-rec-item-detail-info{width:150px;margin:5px 0}.wr-modal-add-to-reg-rec-item-image-wrapper{width:150px;height:150px}.wr-modal-add-to-reg-rec-button{width:150px}.wr-modal-add-to-reg-primary-product-detail{padding:0 25px}.wr-modal-add-to-reg-product-variation{padding-right:15px;font-weight:700}.wr-modal-add-to-reg-product-variation-label{font-weight:400}#wr-modal-add-to-reg-wrapper{min-width:450px}.atwl-hz-dd-list-name{text-overflow:ellipsis;display:inline-block;white-space:nowrap;overflow:hidden}.atwl-hz-dd-list-privacy{display:block}.atwl-hz-dd-image{width:30px;height:30px}.atwl-hz-dd-image-circle{border-radius:50%}.atwl-hz-dd-image-empty{border:1px dashed #767676}.atwl-hz-popover-secondary-title{margin-bottom:6px;margin-left:10px}.atwl-hz-popover-secondary{line-height:1!important}.atwl-hz-popover-divider-section{margin:10px 10px 6px 10px}.atwl-hz-rich-content-plus-icon{font-size:30px!important;margin-right:10px}.atwl-hz-vertical-align-middle{vertical-align:middle}#wl-huc-image-holder{max-width:100px;max-height:100px}.br-smodal-item-details{display:inline-block;width:1100px;height:150px;margin-bottom:5px}.br-smodal-item-details-image{display:inline-block;margin-right:25px;width:150px;height:150px;vertical-align:top}.br-smodal-item-details-main-info{display:inline-block;width:500px}.br-smodal-update-item-result-message{display:inline-block;padding-left:5px}.br-smodal-item-details-more-items{display:inline-block;vertical-align:top;padding-top:10px;float:right}.br-smodal-more-items-btn{width:190px}.br-smodal-more-items-btn-section{margin-bottom:10px}.br-smodal-item-details-info-row{margin-bottom:5px}.br-smodal-rec-section{margin-top:25px;margin-bottom:5px;width:1000px}.br-smodal-rec-item-row{margin-bottom:5px}.br-smodal-rec-item-element{position:relative;height:300px}.br-smodal-item-details-title,.br-smodal-rec-item-title{display:-webkit-box;display:box;box-orient:vertical;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis;-webkit-line-clamp:2}.br-smodal-rec-item-sponsor-tag{height:15px}.br-item-sponsored-text{position:relative;top:-4px}.br-smodal-rec-add-to-br-btn-row{position:absolute;bottom:0}.br-smodal-rec-image{height:150px;display:table-cell;margin-left:auto;margin-right:auto}.br-smodal-rec-spin{margin-left:600px}\n.a-lt-ie9 #recommendations .ctlCarousel .a-carousel-card{min-height:1%}.a-lt-ie9 #recommendations .ctlCarousel li.a-carousel-card-empty{min-height:200px}.a-ie7 #recommendations .ctlCarousel li{min-width:160px;display:block}#recommendations .ctlCarousel ol{max-height:310px;height:auto;min-height:200px;min-width:300px;width:100%;overflow:hidden}#recommendations .ctlCarousel li{min-width:50px;float:none;margin:0 1.25%;padding-bottom:0;max-width:none;width:22.5%}#recommendations .ctlCarousel .item-title{margin-top:2.5%}#recommendations .ctlCarousel li.a-carousel-card-empty{max-width:none;min-height:200px}#recommendations .ctlCarousel .a-button{border-style:none;border:none;background:0 0}#recommendations .ctlCarousel .a-button:after{border-width:0}#recommendations .ctlCarousel .a-button .a-button-inner{background:0 0;box-shadow:none;filter:none}#recommendations .ctlCarousel .a-button .a-button-inner:active{border:none;background:0 0}#recommendations .ctlCarousel .a-button.a-button-pressed .a-button-inner,#recommendations .ctlCarousel .a-button.a-button-pressed:hover .a-button-inner{border:none;background:0 0;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none}#recommendations .ctlCarousel .a-button.a-button-focus,#recommendations .ctlCarousel .a-button:focus{outline:0;border:none;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none}#recommendations .ctlCarousel .a-button i{filter:alpha(opacity=80);zoom:1;opacity:.8;-moz-transition:opacity .26s ease-in-out;-webkit-transition:opacity .26s ease-in-out;transition:opacity .26s ease-in-out}#recommendations .ctlCarousel .a-button:hover i{filter:alpha(opacity=100);zoom:1;opacity:1}#recommendations .ctlCarousel .a-icon-next,#recommendations .ctlCarousel .a-icon-previous{margin:0}#recommendations .ctlCarousel .a-button-image .a-button-inner{padding:0}#recommendations .ctlCarousel .a-carousel-left,#recommendations .ctlCarousel .a-carousel-right{width:0}#recommendations .ctlCarousel .a-carousel-has-buttons .a-carousel-center{margin:0 0}#recommendations .ctlCarousel .stretchable{position:relative;white-space:nowrap;max-width:160px;max-height:200px;margin:0 auto;width:100%}#recommendations .ctlCarousel .stretchable .aspectRatioContainer{padding-top:170%}#recommendations .ctlCarousel .stretchable .imageContainer{position:absolute;top:0;left:0;bottom:0;right:0;text-align:center;font:0/0 a;white-space:normal}#recommendations .ctlCarousel .stretchable .imageContainer .centerableContainer{display:inline-block;vertical-align:middle;height:100%}#recommendations .ctlCarousel .stretchable .imageContainer .image.placeHolderImage{vertical-align:middle}#recommendations .ctlCarousel .stretchable .imageContainer .image{vertical-align:middle;display:inline-block;max-height:100%;max-width:100%;height:auto;width:auto}#recommendations .multipleLooks .a-carousel-left{width:9%!important}#recommendations .multipleLooks .a-carousel-right{width:9%!important}#recommendations .multipleLooks .a-carousel-has-buttons .a-carousel-center{margin:0 9%!important}#recommendations .ctlHeadingLeftAlign{float:left}#recommendations .outfitBuilderButton{float:right}#recommendations .clearFloats{clear:both}#recommendations ul{height:214px;overflow:hidden}#recommendations li{width:22.99%;height:100%;min-width:115px;max-width:200px;padding-bottom:100px;vertical-align:top}#recommendations .reviewsLink:hover{color:transparent}#recommendations .empty{margin-bottom:21px}#recommendations .leftFloat{float:left}#recommendations .visibleFeedbackBlock{visibility:visible;display:block}#recommendations .hiddenFeedbackBlock{visibility:hidden;display:block}#recommendations .hidden{visibility:hidden;display:none}#recommendations .ctlFeedback{min-height:22px}#recommendations #ctlButtonYes{margin-left:9px}#recommendations #ctlButtonNo{margin-left:4px}#recommendations .brand-store-link-override{display:inline-block;margin-bottom:24px!important;white-space:nowrap}#recommendations .brand-store-carousel-override{display:inline-block;margin-bottom:16px!important;margin-right:10px}#recommendations .recommendations-classic-spacing{height:154px}#recommendations .recommendations-prime-icon{vertical-align:sub}@media screen and (max-width:1280px){#recommendations.search-stripe-override li:not(.a-carousel-card){width:30%;min-width:111px}}@media screen and (min-width:1366px) and (max-width:1440px){#recommendations.search-stripe-override li:not(.a-carousel-card){min-width:116px}}.recommendations-feature-edp-container_carousel_fix{display:block!important}.recommendations-edp-container_carousel_fix{right:0!important;top:10px!important}\n.pw-accordion .pw-accordion-row{padding-right:5px}.pw-accordion-header-subtitle{margin-right:1px}.pw-hidden{display:none}.pwEligibleCity{display:inline-block;padding:5px}.pwEligibleCity.pwEligibleCityMobile{width:49%}.pwEligibleCity.pwEligibleCityDesktop{width:175px}.pwEligibleCitiesPopoverTrigger+i.a-icon-popover{display:none}.pw-popover-wrapper .a-icon-popover,.pwOnboardingHide{display:none}.pw-popover-wrapper .a-declarative{display:block}.pwOnboardingHintPopoverInner{background:#febd69;width:244px;text-align:center;overflow-y:auto!important}.pwOnboardingHintPopoverWrapper{width:244px;height:auto}.pwOnboardingHintPopoverWrapper .a-arrow-border .a-arrow{border-top-color:#febd69}.pwOnboardingHintContent{text-transform:none}\n.csxfs_normal{width:106px;height:106px;float:left;border:1px solid #aaa;border-radius:4px;cursor:pointer}.csxfs_normal.csxfs_highlight{border-color:#e47911}.csxfs_normal:hover{border-color:#888}.csxfs_highlight:hover{border-color:#e47911}.csxfs_sampleimages{overflow:auto;margin-top:10px;position:relative;padding-bottom:20px}.csxfs_selectedsample_text{width:60%;min-width:60%;line-height:16px;left:0;margin-top:10px;float:left;position:relative;padding-top:15px}.csxfs_nosampleselected_text{padding-top:25px}.csxfs_selectedsample_text div{margin-bottom:2px}.csxfs_featurecontainer{overflow:hidden;display:none}#csxfsYourGiftText{position:relative}#csxfsImageSelected{cursor:pointer}.csxfs_hidden_elements{display:none}.csxfs_image{width:100px;height:100px;margin:2px 2px 2px 2px}.csxfs_faded_image{opacity:.5;filter:alpha(opacity=50)}.csxfs_selectedsample_image_container{width:100px;height:100px;float:left;position:relative;margin-right:6px}.csxfs_selectedsample_image{width:100px;height:100px;float:left;margin-top:-50px;margin-left:-50px;position:absolute;top:50%;left:50%}.blank_h{height:3px;float:left}.blank_w{width:20px;float:left}.burj .csxfs_selectedsample_text{width:60%;line-height:16px;left:0;margin-top:0;float:left;position:relative;padding-top:10px}.burj .csxfs_selectedsample_image_container{width:50px;height:50px;float:left;position:relative;margin:10px 10px 10px 0;padding:10px 18px}.burj .csxfs_selectedsample_image{width:50px;height:50px;float:left;margin-top:-25px;margin-left:-25px;position:absolute;top:50%;left:50%}.burj .csxfs_selectedsample_button{position:relative;float:right;padding-top:15px;padding-right:10px}.burj .csxfs_sample_button{width:80px}.burj .csxfs_normal{width:100px;height:100px;float:left;border:1px solid #e6e6e6;border-radius:2px;cursor:pointer;margin:0 22px 22px 0;color:#767676;background:#fff}.burj .csxfs_normal.csxfs_highlight{border-color:#f90;color:#f90}.burj .csxfs_normal:hover{border-color:#ccc;color:#000}.burj .csxfs_highlight:hover{border-color:#f90;color:#f90}.burj .csxfs_image{width:80px;height:80px;margin:10px}.burj .csxfs_sampleimages{margin-left:38px}.burj #csxfsNoThanks{display:table;text-align:center}.burj .csxfs_declinetext{display:table-cell;vertical-align:middle}\n#contextualIngressPt{cursor:pointer;display:flex}#contextualIngressPtPin{min-width:16px;height:14px;float:left;background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/DeliveryStaticPackard-pin_desktop_1x-c944b6819f9e5642fdfd4ff3d1109d60d66d8f87._V2_.png);background-repeat:no-repeat;background-size:auto;background-position:center;margin-right:5px;margin-top:2px}@media only screen and (-webkit-min-device-pixel-ratio:2),only screen and (min-resolution:192dpi),only screen and (min-resolution:2dppx){#contextualIngressPtPin{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/DeliveryStaticPackard-pin_desktop_2x-180f59a1b475c745a0ed67623d406c57aa5d0392._V2_.png);background-size:contain}#contextualIngressPtPinMobile{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/DeliveryStaticPackard-pin_mobile_2x-5cdcc5e9083b2302421c35dc6914580cc3074087._V2_.png);background-size:contain}}#contextualIngressPtMobileApp{display:table}#contextualIngressPtPinMobile{min-width:16px;height:20px;float:left;background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/DeliveryStaticPackard-pin_mobile_1x-411d9ad241152b8c2362b94bce39debd899ad411._V2_.png);background-repeat:no-repeat;background-size:auto;background-position:center;margin-bottom:1px;margin-right:6px}#contextualIngressPtMobileApp #contextualIngressPtPinMobile{width:16px;height:20px;float:left;background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/DeliveryStaticPackard-pin_mobile_1x-411d9ad241152b8c2362b94bce39debd899ad411._V2_.png);background-repeat:no-repeat;background-size:auto;background-position:center;margin-bottom:1px;margin-right:6px;display:table-cell}#contextualIngressPtMobileApp #contextualIngressPtLabel{display:table-cell;vertical-align:middle}\n.unifiedLocationMobileButton{margin-left:0!important;margin-right:0!important}li #unifiedLocationCountrySelectionLink .a-box-inner{padding:0}.unifiedLocationMarginLeftClass{margin-left:10px}.ddm-cust-addr-btn .a-button-inner{background:#fff}.ddm-cust-addr-btn.a-button-small .a-button-text{font-size:13px}.ddm-cust-addr-btn:hover{border-color:#e47911}.ddm-cust-addr-btn:hover .a-button-inner{background:#fefaf6}.ddm-country-select{padding:2px}.ddm-sbr-undeliverable-alert{color:#d00000;font-weight:700}#ftMessage b,#ftMessage strong{color:#333}#ftMessage #ftCountdown,#ftMessage b a:link{font-weight:700!important}#ftMessage span.rddTitle{color:#090;font-weight:700}\n.add-to-shopping-list-modal .atl-dropdown,.atl-dropdown-option,.truncate-to-one-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.add-to-shopping-list-modal{max-width:280px}.add-to-shopping-list-modal .atl-asin-title-max-height{max-height:3em}.add-to-shopping-list-modal .hide-overflow{overflow:hidden}.atfc-conflict-dialog{max-width:270px}.atfc-slot-conflict-dialog{max-width:330px}#freshAddToCart #quantitySection #quantitySelect select{width:58px}#freshAddToCart #quantitySection #quantityText label{display:inline-block;font-weight:400}#freshAddToCart #quantitySection #quantityText #quantityTextInput{height:25px;width:58px}#freshAddToCart #quantitySection #quantityTextErrors{height:20px}#freshAddToCart #quantitySection .a-native-dropdown{opacity:1;filter:alpha(opacity=100);z-index:auto;position:static;display:inline;font-weight:400}#freshAddToCart #quantitySection label.a-native-dropdown{padding-right:5px}#freshAddToCart #quantitySection .a-dropdown-container .a-button-dropdown{display:none!important}#desktop_buybox .prime-now-info-icon{margin-top:2px}#desktop_buybox .prime-now-uom-dropdown{min-width:40px;max-width:55px;height:40px}#desktop_buybox .prime-now-quantity-row{border-bottom:1px solid #E7E7E7;padding-bottom:15px}#desktop_buybox #selectVariableWeight{float:right}\n.mbb__mdb{position:relative;background:#008577;padding-left:.5em;color:#fff;white-space:nowrap;max-width:min-content;margin-bottom:.75em}.mbb__mdb:after{content:\"\";position:absolute;right:0;bottom:0;width:0;height:0;border-right:.5em solid #fff;border-top:.7em solid transparent;border-bottom:.7em solid transparent}.mbb__mdb .mbb__mdbi{display:block;padding-right:3em}@supports (max-width:-moz-min-content){.mbb__mdb{max-width:-moz-min-content}}.comparison_image_title_cell{padding-top:20px;padding-left:10px;width:auto;font-weight:400;background:0 0!important;border-bottom:hidden!important}.comparison_baseitem_column{background-color:#ffe;padding-left:10px}.comparison_table tr:nth-child(even) td.comparison_baseitem_column{background-color:#ffffde;padding-left:10px}.comparison_attribute_name_column{padding-left:10px}.comparison_sim_items_column{padding-left:10px}.comparison_table{table-layout:fixed;width:100%}#HLCXComparisonTable td,#HLCXComparisonTable th{padding:6px 14px 5px;word-wrap:break-word}.comparison_sim_asin{visibility:hidden}a:hover span.comparison_zeitgeist_badge_store_name{color:#E47911!important;text-decoration:underline}.comparison_zeitgeist:hover{text-decoration:none}.comparison_zeitgeist_badge{margin-right:4px;background-color:#E47911!important;padding-top:2px;padding-bottom:2px}.comparison_zeitgeist_badge:before{border-bottom-color:#E47911!important}.comparison_zeitgeist_badge:after{border-top-color:#E47911!important}.comparison_table_first_col{width:14.28%!important}tr.comparison_table_image_row td{border-bottom:hidden}.comparable_item3,.comparable_item4{display:none}.comparison_table tr:nth-child(odd) .base_read_more{background-color:#ffe!important}.comparison_table tr:nth-child(even) .base_read_more{background-color:#ffffde!important}.comparison_table tr:nth-child(even) .sim_read_more{background-color:#f6f6f6!important}.comparison_table tr:nth-child(odd) .base_fade{background:-webkit-linear-gradient(top,rgba(255,255,255,0),#FFE);background:-moz-linear-gradient(top,rgba(255,255,255,0),#FFE);background:-o-linear-gradient(top,rgba(255,255,255,0),#FFE);background:linear-gradient(to bottom,rgba(255,255,255,0),#FFE)}.comparison_table tr:nth-child(even) .base_fade{background:-webkit-linear-gradient(top,rgba(255,255,255,0),#FFFFDE);background:-moz-linear-gradient(top,rgba(255,255,255,0),#FFFFDE);background:-o-linear-gradient(top,rgba(255,255,255,0),#FFFFDE);background:linear-gradient(to bottom,rgba(255,255,255,0),#FFFFDE)}.comparison_table tr:nth-child(even) .sim_fade{background:-webkit-linear-gradient(top,rgba(255,255,255,0),#F6F6F6);background:-moz-linear-gradient(top,rgba(255,255,255,0),#F6F6F6);background:-o-linear-gradient(top,rgba(255,255,255,0),#F6F6F6);background:linear-gradient(to bottom,rgba(255,255,255,0),#F6F6F6)}@media screen and (min-width:1630px){.comparable_item3{display:table-cell}}@media screen and (min-width:1900px){.comparable_item3,.comparable_item4{display:table-cell}}.comparison_detail_expander{text-align:center;border-bottom:1px solid #e7e7e7;border-right:1px solid #e7e7e7;border-left:1px solid #e7e7e7;background-color:#f6f6f6;padding:5px}.comparison_page_ingress_button{background-color:#0066c0;color:#fff!important;text-decoration:none!important;cursor:pointer;text-align:center;border-style:solid;border-radius:3px;border-color:#0066c0;padding:3px 10px}.comparison_zeitgeist_badge{margin-right:4px;background-color:#E47911!important;padding-top:2px;padding-bottom:2px}.comparison_zeitgeist_badge:before{border-bottom-color:#E47911!important}.comparison_zeitgeist_badge:after{border-top-color:#E47911!important}.recently_viewed_items_image_title_cell_auto_width{padding-top:20px;padding-left:10px;width:auto}.recently_viewed_items_image_title_cell_fixed_width{padding-top:20px;padding-left:10px;width:21.43%}.recently_viewed_baseitem_column{background-color:#ffe;padding-left:10px}.recently_viewed_table tr:nth-child(even) td.recently_viewed_baseitem_column{background-color:#ffffde;padding-left:10px}.recently_viewed_table_attribute_name_column{padding-left:10px}.recently_viewed_items_column{padding-left:10px}.recently_viewed_table{table-layout:fixed}.one_viewed_item_table_width{width:57.14%}.two_viewed_item_table_width{width:78.57%}.full_recently_viewed_table_width{width:100%}#HLCXComparisonRecentlyViewedTable td,#HLCXComparisonRecentlyViewedTable th{padding:6px 14px 5px;word-wrap:break-word}a:hover span.comparison_zeitgeist_badge_store_name{color:#E47911!important;text-decoration:underline}.comparison_zeitgeist:hover{text-decoration:none}.recently_viewed_table_first_col{width:14.28%!important}tr.recently_viewed_table_image_row td{border-bottom:hidden}.recently_viewed_items3,.recently_viewed_items4{display:none}.recently_viewed_table tr:nth-child(odd) .base_read_more{background-color:#ffe!important}.recently_viewed_table tr:nth-child(even) .base_read_more{background-color:#ffffde!important}.recently_viewed_table tr:nth-child(even) .sim_read_more{background-color:#f6f6f6!important}.recently_viewed_table tr:nth-child(odd) .base_fade{background:-webkit-linear-gradient(top,rgba(255,255,255,0),#FFE);background:-moz-linear-gradient(top,rgba(255,255,255,0),#FFE);background:-o-linear-gradient(top,rgba(255,255,255,0),#FFE);background:linear-gradient(to bottom,rgba(255,255,255,0),#FFE);top:-19px}.recently_viewed_table tr:nth-child(even) .base_fade{background:-webkit-linear-gradient(top,rgba(255,255,255,0),#FFFFDE);background:-moz-linear-gradient(top,rgba(255,255,255,0),#FFFFDE);background:-o-linear-gradient(top,rgba(255,255,255,0),#FFFFDE);background:linear-gradient(to bottom,rgba(255,255,255,0),#FFFFDE);top:-19px}.recently_viewed_table tr:nth-child(odd) .sim_fade{top:-19px}.recently_viewed_table tr:nth-child(even) .sim_fade{background:-webkit-linear-gradient(top,rgba(255,255,255,0),#F6F6F6);background:-moz-linear-gradient(top,rgba(255,255,255,0),#F6F6F6);background:-o-linear-gradient(top,rgba(255,255,255,0),#F6F6F6);background:linear-gradient(to bottom,rgba(255,255,255,0),#F6F6F6);top:-19px}@media screen and (min-width:1630px){.recently_viewed_items3{display:table-cell}}@media screen and (min-width:1900px){.recently_viewed_items3,.recently_viewed_items4{display:table-cell}}\n.monthly-warranty-text-disabled{opacity:.5}\n.measureGuideCenteredImage{text-align:center;margin-top:0;margin-bottom:0;padding:0}.heightG2S2SizeChartPC{width:100%;overflow-x:auto;overflow-y:overlay}.leftAlignment{padding-left:4%}.sizeChartPcBrandLogo{max-height:60px}#wrapper{overflow:auto}#tabContent{position:relative}#spinnerContainer{display:none;z-index:1000;top:0;left:0;height:100%;width:100%;position:absolute;background:rgba(255,255,255,.8) center 30px no-repeat}.rightAlignment{padding-right:4%}#tabContent.loadingSpinnerSizeChart{overflow:hidden}#tabContent.loadingSpinnerSizeChart #spinnerContainer{display:block}\n.tradein-modal-footer{background:linear-gradient(to bottom,#f3f3f3,#fff) repeat scroll 0 0 transparent;border-radius:0 0 4px 4px;border-top:1px solid #DDD;box-shadow:0 1px 1px rgba(0,0,0,.05) inset;margin-left:-18px;margin-right:-18px;margin-bottom:-14px;padding:14px;width:auto!important}.tradein-modal-footer:last-child{margin-bottom:-14px}.tradein-hidden{display:none!important}.no-border{border:none!important}.tradein-grading-header{background-image:-webkit-gradient(linear,left top,left bottom,color-stop(0,#2f597c),color-stop(1,#6aa4d4));background-image:-o-linear-gradient(bottom,#2f597c 0,#6aa4d4 100%);background-image:-moz-linear-gradient(bottom,#2f597c 0,#6aa4d4 100%);background-image:-webkit-linear-gradient(bottom,#2f597c 0,#6aa4d4 100%);background-image:-ms-linear-gradient(bottom,#2f597c 0,#6aa4d4 100%);background-image:linear-gradient(to bottom,#2f597c 0,#6aa4d4 100%);color:#fff;font-family:Helvetica Neue Thin,Helvetica Neue,Helvetica,Arial,sans-serif;font-size:26px;font-style:normal;font-variant:normal;font-weight:100;line-height:28.6px;height:60px;width:auto!important;padding:14px 18px;margin-top:-14px;margin-bottom:0;margin-right:-18px;margin-left:-18px;overflow:hidden}.tradein-checkmark{height:27px;width:30px;background-position:-318px -35px}.tradein-grading-close{font-size:16px}.tradein-grading-close button{color:#fff}.tradein-box{cursor:pointer;border-color:#ADB1B8 #A2A6AC #8D9096!important}.tradein-box .tradein-checkmark{display:none}.a-box.tradein-box .a-box-inner{padding-top:10px;padding-bottom:10px}.tradein-box.tradein-active{background-color:#fef8f2;border:1px solid #E77600!important}.tradein-box.tradein-active .tradein-checkmark{display:inline-block!important;position:absolute;top:4px;left:0}.tradein-box.tradein-active .tradein-graded-option-header{color:#111!important}.tradein-box.tradein-active .tradein-graded-option-price{color:#111!important}.tradein-question-text.disabled:not(.shorted){color:#767676!important;opacity:.5}.tradein-gate.disabled:not(.shorted){color:#767676!important;opacity:.5;pointer-events:none}.tradein-gate.disabled:not(.shorted) .a-checkbox-label{color:#767676!important;opacity:.5}.tradein-box:not(.tradein-active):hover{background-color:#F5F5F5;border-width:1px}.tradein-question{border-bottom:1px dashed #E7E7E7}div.tradein-question:last-of-type{border-bottom:none}.tradein-toggles{height:30px;margin:auto 0}.tradein-type-disabled{display:none!important}\n.universal_hqp_grid_clear_fix .a-fixed-left-grid-inner:after{clear:left}.improvedMOQQuantitySelectCss{width:68%;text-overflow:ellipsis}.highlightQuantityDropdownBorder{border:1px solid #E8281E;border-radius:4px}.buyboxQuantityMessageLabel b,.buyboxQuantityMessageLabel strong{color:#E8281E}select.quantityBarGrayOut{background-color:#d3d3d3}.cursorDisabled{cursor:not-allowed!important}.a-accordion .mobb-css .a-accordion-row{padding:10px 11px 11px 35px}.a-accordion .mobb-css .a-accordion-row .a-accordion-radio{top:12px;left:11px;margin-top:0}.a-accordion .a-accordion-active .mobb-header-css{padding-bottom:0}.mobb-css form{margin-bottom:0}.a-accordion .mobb-css .a-accordion-inner{padding:0 11px 0 35px}.show-on-unselected{display:block;transition:all .3s ease-in}.a-accordion-active .show-on-unselected{transition:none;display:none}.fade-on-unselected{opacity:.5}.a-accordion-active .fade-on-unselected{opacity:1}.a-accordion .mobb-css .a-accordion-row .a-icon-prime{opacity:.5}\n@charset \"UTF-8\";div.sdBuyBox{position:relative;padding:10px 0 4px;margin-top:13px;margin-bottom:6px;margin-right:0;background-repeat:repeat-x;background-position:0 -34px;width:98%}select.sdbuybox{white-space:normal;width:13.5em;margin:.3em 0}.sd-error{color:#c40000}.sd-dialog,.sdXuiVisibilityWrapper{display:none}.sdCorner{position:absolute;width:17px;height:6px}.sdCornerTL{top:-4px;left:-1px;background-position:0 0}.sdBorderMid{position:absolute;height:6px;width:90%;top:-3px;left:6px;right:6px;background-color:#E5F4FB}.sdCornerTR{top:-4px;right:-1px;background-position:17px 0}.sd_buybox_align{padding-left:.3em;float:left}#sd_divUI{position:relative;padding-left:.5em}.sdInlineImage{margin-bottom:.7em}.sd_bb_warn_pop{padding:7px;border:1px solid #5c9ebf;background-color:#fff;text-transform:none;text-align:center;font-size:.86em}.sdMessage_buybox p,.sdMessage_service_buybox p{margin:.5em 0 .5em 0;padding:0;font-size:.916em;font-weight:700}.sd_calicon .dpSprite{margin-right:4px}#sd_buybox_root{text-align:left}.sd_bb_link{text-decoration:underline;font:12px verdana,arial bold;color:#004b91;cursor:pointer}.sd_bb_emphasis{font-style:italic;font-weight:700}.sd_bb_error{color:red}.sd_bb_postal_input{border-style:solid;border-width:1px;height:1.6rem;width:100%;font:12px verdana,arial;padding:.3em .3em 0;margin:.8rem 0 0}.sd_bb_slot_string{color:green}.sd_bb_postal_default{color:gray}.sd_bb_time_button{width:100%}.sd_bb_fyi_note{text-align:left;padding-top:.4em}.sd_bold{font-weight:700}.sd_bb_learnmore{padding-left:2em}.sd_bb_hidden{display:none}.sd_bb_ineligible_postal{padding-top:.5em}.sd_bb_services{list-style-type:disc;list-style-position:inside;text-indent:-1em;padding-left:1em}.sd-button{background:#d8dde6;display:inline-block;padding:0;vertical-align:middle;height:1.6rem;border:.1rem solid;border-color:#bcc1c8 #bababa #adb2bb;text-align:center;overflow:hidden;text-decoration:none!important;cursor:pointer;-webkit-border-radius:.3rem;-moz-border-radius:.3rem;border-radius:.3rem;width:100%}.sd-button:hover{border-color:#aeb4bd #adadad #9fa5af}.sd-button:focus{outline:0;border-color:#e47911;-webkit-box-shadow:0 0 .3rem rgba(228,121,17,.5);-moz-box-shadow:0 0 .3rem rgba(228,121,17,.5);box-shadow:0 0 .3rem rgba(228,121,17,.5)}.sd-button:active{border-color:#adb2bb #bababa #bababa}.sd-button:hover .sd-button-inner{background:#e0e3e8;background:-moz-linear-gradient(top,#e7eaf0,#d9dce1);background:-webkit-gradient(linear,left top,left bottom,color-stop(0,#e7eaf0),color-stop(100%,#d9dce1));background:-webkit-linear-gradient(top,#e7eaf0,#d9dce1);background:-o-linear-gradient(top,#e7eaf0,#d9dce1);background:-ms-linear-gradient(top,#e7eaf0,#d9dce1);background:linear-gradient(top,#e7eaf0,#d9dce1);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#e7eaf0', endColorstr='#d9dce1', GradientType=0)}.sd-button:active .sd-button-inner{-webkit-box-shadow:0 .1rem .3rem rgba(0,0,0,.2) inset;-moz-box-shadow:0 .1rem .3rem rgba(0,0,0,.2) inset;box-shadow:0 .1rem .3rem rgba(0,0,0,.2) inset;background-color:#e7e9ec;background-image:none;filter:none}.sd-button .sd-button-inner{background:#eff0f3;background:-moz-linear-gradient(top,#f7f8fa,#e7e9ec);background:-webkit-gradient(linear,left top,left bottom,color-stop(0,#f7f8fa),color-stop(100%,#e7e9ec));background:-webkit-linear-gradient(top,#f7f8fa,#e7e9ec);background:-o-linear-gradient(top,#f7f8fa,#e7e9ec);background:-ms-linear-gradient(top,#f7f8fa,#e7e9ec);background:linear-gradient(top,#f7f8fa,#e7e9ec);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#f7f8fa', endColorstr='#e7e9ec', GradientType=0);position:relative;height:2.9rem;overflow:hidden;-webkit-border-radius:.3rem;-moz-border-radius:.3rem;border-radius:.3rem;-webkit-box-shadow:0 .1rem 0 rgba(255,255,255,.6) inset;-moz-box-shadow:0 .1rem 0 rgba(255,255,255,.6) inset;box-shadow:0 .1rem 0 rgba(255,255,255,.6) inset;display:block}.sd-button .sd-button-input{position:absolute;z-index:20;height:100%;width:100%;left:0rem;top:0rem;background-color:#fff;opacity:.01;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=1)\";filter:alpha(opacity=1);outline:0;border:0;overflow:visible;cursor:pointer;-webkit-transition:all .1s linear;-moz-transition:all .1s linear;-ms-transition:all .1s linear;-o-transition:all .1s linear;transition:all .1s linear;font-family:Arial,sans-serif;font-size:1.3rem;line-height:1.9rem}.sd-button .sd-button-text{color:#111;text-align:center;font-size:.8rem;line-height:1.6rem;display:block;font-family:Arial,sans-serif;white-space:nowrap;background-color:transparent;margin:0;border:0;outline:0;padding:0 1rem 0 1.6rem}.sd-button-disabled{border-color:#e0e0e0!important;background-image:none!important;filter:none!important;background:#f7f8fa!important;cursor:default!important}.sd-button-disabled:active,.sd-button-disabled:focus,.sd-button-disabled:hover{border-color:#e0e0e0!important}.sd-button-disabled .sd-button-text{color:#b7b7b7!important;text-shadow:none!important;font-weight:400;cursor:default!important}.sd-button-disabled .sd-button-inner{background-image:none!important;filter:none!important;background-color:#f7f8fa!important;-webkit-box-shadow:none!important;-moz-box-shadow:none!important;box-shadow:none!important}.sd-button-disabled .sd-button-inner .sd-button-input{display:none}.sd-button-disabled .sd-button-input{display:none}.sd-button-disabled:active .sd-button-inner,.sd-button-disabled:focus .sd-button-inner,.sd-button-disabled:hover .sd-button-inner{background-image:none!important;filter:none!important;-webkit-box-shadow:none!important;-moz-box-shadow:none!important;box-shadow:none!important;background-color:#f7f8fa!important}.sdBox{position:relative;width:100%;margin-bottom:15px;border:1px solid #EAF3FE;background-color:#EAF3FE;border-right:none;border-bottom:none}.sdBoxBL,.sdBoxBR,.sdBoxTL,.sdBoxTR{position:absolute;display:block;width:10px;height:10px;z-index:1}.sdBoxTL{background-position:0 -330px;top:-1px;left:-1px}.sdBoxTR{background-position:-10px -330px;top:-1px;right:-1px}.sdBoxBL{background-position:0 -340px;bottom:-1px;left:-1px}.sdBoxBR{background-position:-10px -340px;bottom:-1px;right:-1px}.sdBoxR{position:absolute;display:block;width:1px;height:100%;top:-1px;right:-1px;background-color:#E5F4FB}.sdBoxB{position:absolute;display:block;width:100%;height:1px;bottom:-1px;background-color:#E5F4FB}.sdBoxInner{padding:9px}.sd_enabled_icon{border:0}.sosp .a-box-group .fake-label.a-box.sd-disabled{cursor:default!important}.sd_dummy_calicon{margin-left:1ex}.a-container a.sd_calendar_link.sd-disabled:hover{color:#007eb9}a.sd_calendar_link.sd-disabled:active{color:#004B91}.a-container a.sd_calendar_link.sd-disabled:active{color:#007eb9}.sd_widget_root,.sosp .sd_widget_root{width:100%;display:none}.sd_widget_root .learnmore,.sd_widget_root .sd_calicon,.sosp .sd_widget_root .learnmore,.sosp .sd_widget_root .sd_calicon{margin-top:5px;display:inline}.sd_widget_root .v1 .learnmore,.sd_widget_root .v1 .sd_calicon,.sosp .sd_widget_root .v1 .learnmore,.sosp .sd_widget_root .v1 .sd_calicon{margin-left:12px;display:inline}.sd_widget_root ul.sd_promises,.sosp .sd_widget_root ul.sd_promises{margin-left:0;margin-bottom:0;color:#333;display:none;list-style-type:none}.sd_widget_root .sd_promise_date,.sosp .sd_widget_root .sd_promise_date{color:#090;font-weight:700}.sd_widget_root .sd_call_date_msg .sd_promise_date,.sosp .sd_widget_root .sd_call_date_msg .sd_promise_date{color:#333}.sd_widget_root .sd_phone_number,.sd_widget_root .sd_services,.sosp .sd_widget_root .sd_phone_number,.sosp .sd_widget_root .sd_services{font-weight:700}.sd_widget_root .sd_note_message,.sosp .sd_widget_root .sd_note_message{font-size:10px}.sd_widget_root .sd_delivery_note,.sosp .sd_widget_root .sd_delivery_note{margin-bottom:5px}.sd_widget_root .a-box,.sosp .sd_widget_root .a-box{margin-top:8px}.sd_widget_root .a-box .a-box-inner,.sosp .sd_widget_root .a-box .a-box-inner{-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;padding:14px 18px!important}.sd_widget_root .a-box.a-alert .a-box-inner,.sosp .sd_widget_root .a-box.a-alert .a-box-inner{padding:14px 18px 14px 60px!important}.sd_widget_root .sd_no_slot_selection_msg,.sosp .sd_widget_root .sd_no_slot_selection_msg{font-weight:700;color:#333}.sdBuyBox .learnmore,.sd_widget_root .learnmore{font-size:x-small;margin-left:1em}.sdlearnmore{font-size:10px;margin-left:1em}.sdWarn{background-color:#FFD;border:1px solid #DDDAC0;font-size:.916em;line-height:140%;margin:.834em 0;padding:.417em .417em .417em .834em;position:relative;width:auto;max-width:500px;color:#000;text-align:left}.sdWarn span{top:.5em;left:.5em;position:absolute}.sdWarn p{margin:0 0 .25em 3em;padding:0;font-size:.916em}.sdWarn h6{margin:0 0 .25em 2.5em;padding:0;font-weight:700;font-size:.916em}.sdMessage,.sdMessage_service{font-size:.916em;line-height:140%;position:relative;width:auto}.sdMessage p,.sdMessage_service p{margin:.5em 0 .5em 2.5em;padding:0;font-size:.916em;font-weight:700}span.calendar-swatch{text-align:center;border:1px solid #C1DCF2;padding:0 .5em;margin:0 .5em}.sd_widget_root .calendar-header{font-size:10px;cursor:default}.calendar-header{text-align:center;margin:.7em 0}.calendar-not-available{background-color:#F0F0F0}.calendar-available{background-color:#FFF}.calendar-promotion-available{background-color:#DFFFDD}.calendar-selected{background-color:#E47911}.sd_reload{cursor:pointer;margin:0 1em;text-decoration:underline}.sd_calendar_link{text-decoration:none}.sd_optgroupLabel{font-weight:700;height:1.5em}.sd-calendar-button{width:205px}.sd-calendar-button-container{padding-top:5px}#ap_container .sd-timeslot-calendar-title{text-align:left;padding-left:12px;font:15pt arial}#ap_container span.sd-timeslot-rowindex-date{white-space:nowrap;font:8pt verdana}.sdCalendarPopover{text-align:left;text-align:start;font-family:Verdana,Arial,Helvetica,sans-serif;width:470px}.sdCalendarPopover *{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box}.sdCalendarPopover table{border-collapse:separate;border-spacing:0;margin-bottom:0;empty-cells:show}.sdCalendarPopover td{font-size:small}.sdCalendarPopover td,.sdCalendarPopover th{vertical-align:inherit;padding:2px}.sdCalendarPopover .sd-timeslot-table td,.sdCalendarPopover .sd-timeslot-table th{padding:1px}.sdCalendarPopover .sd_notice{font:10pt verdana;text-align:left}.sdCalendarPopover table.sd-timeslot-header,.sdCalendarPopover table.sd-timeslot-table{width:470px}.sdCalendarPopover table.sd-timeslot-header{text-align:center;margin-bottom:5px}.sdCalendarPopover .sd-timeslot-header .sd-timeslot-weekday-date-small{background-color:#EEE;text-align:center;width:1.5em;height:1em;border:1px solid #C1DCF2}.sdCalendarPopover #sd-timeslot .sd-timeslot-weekday-date-small{background-color:#F0F0F0;text-align:center;width:1.5em;height:1em;border:1px solid #C1DCF2}.sdCalendarPopover .sd-timeslot-highlight-date-small{background-color:#FFF;text-align:center;width:1.5em;height:1em;border:1px solid #C1DCF2}.sdCalendarPopover .sd-timeslot-promotion-date-small{background-color:#DFFFDD;text-align:center;width:1.5em;height:1em;border:1px solid #C1DCF2}.sdCalendarPopover .sd-timeslot-selected-date-small{background-color:#E47911;text-align:center;width:1.5em;height:1em;border:1px solid #C1DCF2}.sdCalendarPopover span.sd-legend{font:10pt verdana}.sdCalendarPopover hr.sd_line{-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;border-top:1px solid #e7e7e7;height:1px;margin:3px 0}.sdCalendarPopover hr.sd_dashed{-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;border:1px dashed #000;border-top:1px solid #ccc;height:1px;margin:3px 0}.sdCalendarPopover td.sd-timeslot-scroll-title{font:700 12px verdana;width:391px}.sdCalendarPopover span.sd-timeslot-scroll-title{line-height:35px;cursor:default}.sdCalendarPopover .sd-timeslot-scroll-title{text-align:center}.sdCalendarPopover .sd-timeslot-scroll-title-left,.sdCalendarPopover .sd-timeslot-scroll-title-left-disabled,.sdCalendarPopover .sd-timeslot-scroll-title-left-enabled,.sdCalendarPopover .sd-timeslot-scroll-title-right,.sdCalendarPopover .sd-timeslot-scroll-title-right-disabled,.sdCalendarPopover .sd-timeslot-scroll-title-right-enabled{text-align:center;font-weight:700;text-decoration:none;width:45px;font-family:verdana,arial,helvetica,sans-serif}.sdCalendarPopover span.sd-timeslot-scroll-title-left,.sdCalendarPopover span.sd-timeslot-scroll-title-left-disabled,.sdCalendarPopover span.sd-timeslot-scroll-title-left-enabled,.sdCalendarPopover span.sd-timeslot-scroll-title-right,.sdCalendarPopover span.sd-timeslot-scroll-title-right-disabled,.sdCalendarPopover span.sd-timeslot-scroll-title-right-enabled{line-height:30px;font-size:14px}.sdCalendarPopover span.sd-timeslot-scroll-title-left-disabled,.sdCalendarPopover span.sd-timeslot-scroll-title-left-enabled{float:left}.sdCalendarPopover span.sd-timeslot-scroll-title-right-disabled,.sdCalendarPopover span.sd-timeslot-scroll-title-right-enabled{float:right}.sdCalendarPopover .sd-timeslot-scroll-title-left-disabled,.sdCalendarPopover .sd-timeslot-scroll-title-right-disabled{cursor:default;border:1px solid #F0F0F0;color:#D0D0D0}.sdCalendarPopover .sd-timeslot-scroll-title-left-enabled,.sdCalendarPopover .sd-timeslot-scroll-title-right-enabled{cursor:pointer;border:1px solid #CCC;color:#E47911}.sdCalendarPopover .sd-timeslot-scroll-title-left-enabled:hover,.sdCalendarPopover .sd-timeslot-scroll-title-right-enabled:hover{border:1px solid #E47911}.sdCalendarPopover .sd-timeslot-scroll-title-left-enabled:active,.sdCalendarPopover .sd-timeslot-scroll-title-right-enabled:active{background-color:#FCFCFC}.sdCalendarPopover table#sd-timeslot td.sdleft,.sdCalendarPopover table#sd-timeslot th.sdleft{width:25%}.sdCalendarPopover table#sd-timeslot th{background-color:#EAF3FE;font-weight:700}.sdCalendarPopover table.sd-timeslot-table{text-align:center;border-left:1px solid #C1DCF2;border-bottom:1px solid #C1DCF2;font-size:12px;margin-bottom:17px}.sdCalendarPopover .sd-timeslot-table td,.sdCalendarPopover .sd-timeslot-table th{text-align:center;border-right:1px solid #C1DCF2;border-top:1px solid #C1DCF2;height:40px;width:11%;font-size:9px}.sdCalendarPopover table.sd-timeslot-table td.sdleft,.sdCalendarPopover table.sd-timeslot-table th.sdleft{width:25%}.sdCalendarPopover table.sd-timeslot-table th{background-color:#EAF3FE;font-weight:700}.sdCalendarPopover tr.sd-timeslot-index-date{background-color:#EAF3FE;font-weight:700;cursor:default}.sdCalendarPopover td.sd-timeslot-rowindex-date{width:2.8em;height:2.8em;text-align:center;cursor:default}.sdCalendarPopover .sd_widget_root span.sd-timeslot-rowindex-date{white-space:nowrap;font:10px verdana}.sdCalendarPopover .sd-message{white-space:nowrap;background-color:#fff;color:red;text-align:center}.sdCalendarPopover td.sd-message{border-left:1px solid #aaa;border-right:1px solid #aaa;border-top:1px solid #aaa}.sdCalendarPopover span.sd-message{font-size:12px}.sdCalendarPopover .sd-timeslot-slot td{width:2.8em;height:2.8em}.sdCalendarPopover .sd-timeslot-slot button{line-height:2em;text-align:center;vertical-align:middle;width:100%;height:100%}.sdCalendarPopover .sd-timeslot-slot div{text-align:center;vertical-align:middle;width:90%;height:90%}.sdCalendarPopover .sd-timeslot-slot button.span1Rows{height:100%}.sdCalendarPopover td.sdcal-avail:hover{border:2px solid #E47911}.sdCalendarPopover td.sdcal-avail:active{background-color:#FFF;border:1px solid #C1DCF2;color:#039}.sdCalendarPopover .sd-timeslot-slot .sdcal-avail{background-color:#FFF;border:1px outset #C1DCF2;color:#039;cursor:pointer}.sdCalendarPopover .sd-timeslot-slot .sdcal-avail button{background-color:#FFF;border:1px outset #C1DCF2;color:#039;cursor:pointer}.sdCalendarPopover td.sdcal-promavail:hover{border:2px solid #E47911}.sdCalendarPopover td.sdcal-promavail:active{background-color:#DFFFDD;border:1px solid #C1DCF2;color:#039}.sdCalendarPopover .sd-timeslot-slot .sdcal-promavail{background-color:#DFFFDD;border:1px outset #C1DCF2;color:#039;cursor:pointer}.sdCalendarPopover .sd-timeslot-slot .sdcal-promavail button{background-color:#DFFFDD;border:1px outset #C1DCF2;color:#039;cursor:pointer}.sdCalendarPopover .sd-timeslot-slot .sdcal-select{background-color:#E47911;border:1px inset #C1DCF2;color:#039;cursor:pointer}.sdCalendarPopover .sd-timeslot-slot .sdcal-select button{background-color:#E47911;border:1px inset #C1DCF2;color:#039;cursor:pointer}.sdCalendarPopover .sd-timeslot-slot .sdcal-noavail{background-color:#F0F0F0;border:1px solid #95A8A6;color:#95a8a6;cursor:default}.sdCalendarPopover .sd-timeslot-slot .sdcal-noavail button{background-color:#F0F0F0;border:1px solid #95A8A6;color:#95A8A6}.sdCalendarPopover table.sdcal-table{text-align:center;border-left:1px solid #C1DCF2;border-bottom:1px solid #C1DCF2;font-size:12px}.sdCalendarPopover .sdcal-table td,.sdCalendarPopover .sdcal-table th{text-align:center;border-right:1px solid #C1DCF2;border-top:1px solid #C1DCF2;height:25px;width:14%}.sdCalendarPopover table.sdcal-table th{background-color:#EAF3FE;font-weight:700}.sdCalendarPopover .sdcal-head{background-color:#EAF3FE;font-weight:700}.sdCalendarPopover td.sdcal-dayname{color:#fff;width:20px;background-color:#9DC4D8}.sdCalendarPopover .sdcal-table td.sdcal-noavail{color:#666;background-color:#F0F0F0;cursor:default}.sdCalendarPopover .sd-timeslot-table td.sdcal-noavail{color:#666;background-color:#EEE;cursor:default}.sdCalendarPopover td.sdcal-avail{background-color:#FFF;color:#004B91;font-weight:700;cursor:pointer}.sdCalendarPopover td.sdcal-promavail{background-color:#DFFFDD;color:#004B91;font-weight:700;cursor:pointer}.sdCalendarPopover td.sdcal-select{background-color:#E47911;color:#FFF;cursor:pointer;font-weight:bolder}.sdCalendarPopover td.sdcal-today{border:1px solid #000;font-weight:bolder}.sdCalendarPopover .sd-no-text-select{-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:moz-none;-ms-user-select:none;user-select:none}\n.js-hidden{display:none!important;visibility:hidden!important}.js-subcat-section .br-subcat-hide{display:none}#jumpstart-owner-view-meter{height:5px;background-color:#ccc}#jumpstart-owner-view-meter .a-meter-bar{background-color:#8fbe5f;background:#8fbe5f}.js-widget-subcat-row{display:none}.subcat-description-col{text-align:left}.subcat-description-col .subcat-section-padding{margin-bottom:0}.subcat-img-col{width:10%;margin-right:0}#subcat-carousel-next-button{width:1px}#js-widget-box{background-image:url(https://images-na.ssl-images-amazon.com/images/G/01/baby/registry/jumpstart/jumpstart-bg.png);background-repeat:no-repeat}.subcat-section-padding{margin-bottom:0}#js-subcat-informational{padding-top:15px;padding-left:10px}#js-popover-arrow{position:absolute;top:-7px}.jumpstart-category-item{margin-top:-14px;padding-top:14px;height:90px}@media only screen and (min-width:1124px){#jumpstart-container{width:800px;margin-right:auto;margin-left:auto}}#jumpstart-close{position:absolute;right:10px;cursor:pointer}#jumpstart-close .a-icon-popover{display:none}.jumpstart-toggle{position:absolute;right:10px;cursor:pointer}.jumpstart-category-item-name{line-height:1;margin-top:7px}.jumpstart-left-section{text-align:left}.js-hidden{display:none!important;visibility:hidden!important}#jumpstart-spinner{height:216px}#jumpstart-error{padding-top:70px}.category-selected{background:#f1f3f2;box-shadow:inset 0 1px 2px #e3e3e3}.category-image-small-wrapper{height:30px}.jumpstart-category-image-small{display:inline-block;background:url(https://images-na.ssl-images-amazon.com/images/G/01/baby/registry/jumpstart/js-badges-sprite.png);background-repeat:no-repeat;height:30px;width:30px}#jumpstart-cat-img-small-essentials{background-position:-35px 0}#jumpstart-cat-img-small-nursery{background-position:-70px 0}#jumpstart-cat-img-small-out_and_about{background-position:-120px 0}#jumpstart-cat-img-small-diapering{background-position:-155px 0}#jumpstart-cat-img-small-feeding{background-position:-205px 0}#jumpstart-cat-img-small-clothing{background-position:-240px 0}#jumpstart-cat-img-small-play_and_learn{background-position:-290px 0}#jumpstart-cat-img-small-healthcare_and_safety{background-position:-325px 0}#jumpstart-cat-img-small-bathtime{background-position:-375px 0}#jumpstart-cat-img-small-for_mom{background-position:-410px 0}.category-image-big-wrapper{height:80px}.jumpstart-category-image-big{display:inline-block;background:url(https://images-na.ssl-images-amazon.com/images/G/01/baby/registry/jumpstart/js-badges-sprite.png);background-repeat:no-repeat;height:80px;width:80px}#jumpstart-cat-img-big-essentials{background-position:-35px -35px}#jumpstart-cat-img-big-out_and_about{background-position:-120px -35px}#jumpstart-cat-img-big-feeding{background-position:-205px -35px}#jumpstart-cat-img-big-play_and_learn{background-position:-290px -35px}#jumpstart-cat-img-big-bathtime{background-position:-375px -35px}#jumpstart-cat-img-big-nursery{background-position:-35px -120px}#jumpstart-cat-img-big-diapering{background-position:-120px -120px}#jumpstart-cat-img-big-clothing{background-position:-205px -120px}#jumpstart-cat-img-big-healthcare_and_safety{background-position:-290px -120px}#jumpstart-cat-img-big-for_mom{background-position:-375px -120px}.jumpstart-subcategory-image{display:inline-block;background:url(https://images-na.ssl-images-amazon.com/images/G/01/baby/registry/jumpstart/js-subcat-sprite.png);background-repeat:no-repeat;height:50px;width:50px}#jumpstart-subcat-img-stroller{background-position:0 0}#jumpstart-subcat-img-travel_system{background-position:0 -55px}#jumpstart-subcat-img-carseat{background-position:0 -110px}#jumpstart-subcat-img-carriers{background-position:0 -165px}#jumpstart-subcat-img-playard{background-position:0 -220px}#jumpstart-subcat-img-diapers{background-position:-55px 0}#jumpstart-subcat-img-cloth_diapers{background-position:-55px -55px}#jumpstart-subcat-img-diaper_pail{background-position:-55px -110px}#jumpstart-subcat-img-diaper_bag{background-position:-55px -165px}#jumpstart-subcat-img-wipes{background-position:-55px -220px}#jumpstart-subcat-img-diaper_caddie{background-position:-55px -275px}#jumpstart-subcat-img-changing_mat{background-position:-55px -330px}#jumpstart-subcat-img-bottles{background-position:-110px 0}#jumpstart-subcat-img-feeding_pillow{background-position:-110px -55px}#jumpstart-subcat-img-bottle_sterilizer{background-position:-110px -110px}#jumpstart-subcat-img-breast_pump{background-position:-110px -165px}#jumpstart-subcat-img-high_chair{background-position:-110px -220px}#jumpstart-subcat-img-pacifier{background-position:-110px -275px}#jumpstart-subcat-img-burp_cloths{background-position:-110px -330px}#jumpstart-subcat-img-layette_set{background-position:-165px 0}#jumpstart-subcat-img-sleepwear{background-position:-165px -55px}#jumpstart-subcat-img-hat{background-position:-165px -110px}#jumpstart-subcat-img-socks{background-position:-165px -165px}#jumpstart-subcat-img-bodysuit{background-position:-165px -220px}#jumpstart-subcat-img-rompers{background-position:-165px -275px}#jumpstart-subcat-img-crib{background-position:-220px 0}#jumpstart-subcat-img-mattress{background-position:-220px -55px}#jumpstart-subcat-img-glider{background-position:-220px -110px}#jumpstart-subcat-img-changing_table{background-position:-220px -165px}#jumpstart-subcat-img-changing_pad{background-position:-220px -220px}#jumpstart-subcat-img-bedding{background-position:-220px -275px}#jumpstart-subcat-img-swaddle{background-position:-220px -330px}#jumpstart-subcat-img-bouncer{background-position:-275px 0}#jumpstart-subcat-img-swing{background-position:-275px -55px}#jumpstart-subcat-img-activity_centers{background-position:-275px -110px}#jumpstart-subcat-img-gyms{background-position:-275px -165px}#jumpstart-subcat-img-toys{background-position:-275px -220px}#jumpstart-subcat-img-books{background-position:-275px -275px}#jumpstart-subcat-img-baby_monitor{background-position:-330px 0}#jumpstart-subcat-img-humidifier{background-position:-330px -55px}#jumpstart-subcat-img-thermometer{background-position:-330px -110px}#jumpstart-subcat-img-safety_latches{background-position:-330px -165px}#jumpstart-subcat-img-baby_gate{background-position:-330px -220px}#jumpstart-subcat-img-outlet_plugs{background-position:-330px -275px}#jumpstart-subcat-img-bath_tub{background-position:-385px 0}#jumpstart-subcat-img-baby_shampoo{background-position:-385px -55px}#jumpstart-subcat-img-baby_lotion{background-position:-385px -110px}#jumpstart-subcat-img-towels{background-position:-385px -165px}#jumpstart-subcat-img-tub_toys{background-position:-385px -220px}#jumpstart-subcat-img-nursing_bra{background-position:-440px 0}#jumpstart-subcat-img-nursing_clothes{background-position:-440px -55px}#jumpstart-subcat-img-nursing_cover{background-position:-440px -110px}#jumpstart-subcat-img-prenatal_vitamins{background-position:-440px -165px}#jumpstart-subcat-img-robe{background-position:-440px -220px}#jumpstart-subcat-img-stretch_mark_cream{background-position:-440px -275px}#jumpstart-subcat-img-nipple_cream{background-position:-440px -330px}#js-widget-popover-box{background-image:url(https://images-na.ssl-images-amazon.com/images/G/01/baby/registry/jumpstart/jumpstart-bg.png);background-repeat:no-repeat;height:92px;background-size:90px 70px;margin-top:15px}#jumpstart-popover-widget-container{width:900px;margin-left:auto;margin-right:auto}.jumpstart-divider-class{margin-top:-20px}.jumpstart-width-fix.jumpstart-popover-subcat-item.a-column.a-span1{width:60px}.jumpstart-popover-subcat-image{height:50px}.jumpstart-category-item-section{height:100%}.subcat-item{display:inline-block;width:70px;vertical-align:top;margin-top:-14px;padding-top:14px}.subcat-item:hover{cursor:pointer;background-color:#f1f3f2}.subcat-title{text-align:center;line-height:1;margin-top:5px;height:40px}.subcat-image{text-align:center;height:50px}.a-section.a-padding-none{margin-bottom:0}.subcat-popover-complete{line-height:50px}.subcat-popover-complete .subcat-popover-complete-image{vertical-align:middle}#js-widget-popover-main-row{display:inline-block;width:800px}#registry-link{display:inline-block;position:absolute;margin-left:20px;border-left-color:#e7e7e7;border-left-style:solid;border-left-width:1px;padding-left:20px}#jumpstart-popover-description{border-right-color:#e7e7e7;border-right-width:1px;border-right-style:solid;padding-right:20px}.jumpstart-popover-category-title{line-height:1;margin-top:2px}#js-registry-link-text:hover{text-decoration:underline}.js-carousel-card{height:55px}.jumpstart-carousel-pagination-buttons{cursor:pointer;z-index:2;position:absolute;top:40px}.jumpstart-carousel-pagination-buttons.a-carousel-goto-prevpage{left:0;margin-top:-40px;padding-top:40px!important;padding-bottom:50px!important}.jumpstart-carousel-pagination-buttons.a-carousel-goto-nextpage{right:0;margin-top:-40px;padding-top:40px!important;padding-bottom:50px!important}.jumpstart-carousel-pagination-buttons:hover{cursor:pointer;background-color:#f1f3f2}.jumpstart-carousel-element{padding-top:20px}.jumpstart-carousel-element:hover{cursor:pointer;background-color:#f1f3f2}.jumpstart-carousel-element:hover .subcat-name{text-decoration:underline}.jumpstart-category-item:hover{cursor:pointer;background-color:#f1f3f2}.subcat-name{line-height:1}.subcat-name-text.subcat-line-height{line-height:1.2!important}.subcat-regular-link{color:#0066c0!important}.baby-reg-logo-modal{position:absolute;right:0}.itemWrapperModal{-webkit-border-radius:4px!important;background:#fff;cursor:pointer;position:relative;width:250px;display:inline-block;height:135px;margin:3px 4px 3px 4px;margin-bottom:4px!important;padding:5px 5px 5px 5px}.markItemWrapperModal{-webkit-border-radius:4px!important;background:#fff;cursor:pointer;position:relative;display:inline-block;height:135px;margin:3px 4px 3px 4px;margin-bottom:4px!important;padding:5px 5px 5px 5px}.item-mark-modal-gray{border:1px solid #d8d8d8!important}.item-mark-modal-orange{border:1px solid #8fbe5f!important}.show-msg-checkmark{margin-left:32px!important}.show-msg-checkbox{margin-left:26px!important;width:130px!important}.markModalCheckmarkBox{-webkit-border-radius:4px 0 4px 0!important;position:absolute;margin-top:104px;margin-left:135px;width:25px;height:25px;text-align:center;line-height:25px}.checkmark-box-orange{background:#8fbe5f!important;border:1px solid #8fbe5f!important}.a-box .checkmark-box-gray{border:none}.checkmark-box-gray{background:#f8f8f8!important;border-left:1px solid #d8d8d8!important;border-top:1px solid #d8d8d8!important;border-right:1px solid #8fbe5f!important;border-bottom:1px solid #8fbe5f!important}.checkmark-gray,.checkmark-orange{position:absolute;margin-top:111px;margin-left:140px}.item-list-wrapper{display:block;width:815px;background:#f8f8f8!important;padding-top:15px;padding-bottom:10px}.item-list-modal{height:331px;margin-left:auto;margin-right:auto;margin-bottom:0!important;overflow-y:auto;padding-left:16px}.itemModalTextWrapper{position:relative;height:116px}.itemModalImg{padding-top:28px;padding-bottom:28px}.itemModalContent{position:relative;top:50%;transform:translateY(-50%);-webkit-transform:translateY(-50%)}.pop-mark-purch .a-popover-wrapper{min-height:431px!important}.remove-a-icon .a-icon{display:none}.remove-a-icon:hover{text-decoration:none}.tablet-popover-fix{position:absolute;bottom:0;left:0;min-width:99.8%;margin-left:1px}.mark-as-completed{cursor:pointer}.mark-as-completed:hover{text-decoration:underline}.mark-complete-carousel{position:relative;height:175px;padding-top:15px}.mark-complete-box{position:relative;height:200px}\n#actionPanel #clippedCoupon.ccx_dpv2.sns_radio_button,#actionPanel #clippedCouponSns.ccx_dpv2.sns_radio_button,#actionPanel #couponSnsWithOneTimeSelected.ccx_dpv2.sns_radio_button,#actionPanel #errorInClipping.ccx_dpv2.sns_radio_button,#actionPanel #unclippedCoupon.ccx_dpv2.sns_radio_button,#actionPanel #unclippedCouponSns.ccx_dpv2.sns_radio_button{display:none}#actionPanel .vpc_clip_error #errorInClipping.ccx_dpv2{display:inline}#actionPanel #couponFeature .a-section{margin-bottom:0}#actionPanel.ap-fresh .regularVpc.vpc_clipped #clippedCoupon.ccx_dpv2.sns_radio_button,#actionPanel.ap-fresh .regularVpc.vpc_unclipped #unclippedCoupon.ccx_dpv2.sns_radio_button,#actionPanel.ap-mom .regularVpc.vpc_clipped #clippedCouponSns.ccx_dpv2.sns_radio_button,#actionPanel.ap-mom .regularVpc.vpc_unclipped #unclippedCouponSns.ccx_dpv2.sns_radio_button,#actionPanel.ap-mom .snsVpc.vpc_clipped #clippedCouponSns.ccx_dpv2.sns_radio_button,#actionPanel.ap-mom .snsVpc.vpc_unclipped #unclippedCouponSns.ccx_dpv2.sns_radio_button,#actionPanel.ap-onetime .regularVpc.vpc_clipped #clippedCoupon.ccx_dpv2.sns_radio_button,#actionPanel.ap-onetime .regularVpc.vpc_unclipped #unclippedCoupon.ccx_dpv2.sns_radio_button,#actionPanel.ap-onetime .snsVpc #couponSnsWithOneTimeSelected.ccx_dpv2.sns_radio_button,#actionPanel.ap-sns .regularVpc.vpc_clipped #clippedCouponSns.ccx_dpv2.sns_radio_button,#actionPanel.ap-sns .regularVpc.vpc_unclipped #unclippedCouponSns.ccx_dpv2.sns_radio_button,#actionPanel.ap-sns .snsVpc.vpc_clipped #clippedCouponSns.ccx_dpv2.sns_radio_button,#actionPanel.ap-sns .snsVpc.vpc_unclipped #unclippedCouponSns.ccx_dpv2.sns_radio_button{display:inline}#actionPanel.ap-pospromo .regularVpc.vpc_clipped #clippedCoupon.ccx_dpv2.sns_radio_button,#actionPanel.ap-pospromo .regularVpc.vpc_clipped.vpc_oneTimeBuy #clippedCoupon.ccx_dpv2.sns_optin,#actionPanel.ap-pospromo .regularVpc.vpc_clipped.vpc_sns #clippedCouponSns.ccx_dpv2.sns_optin,#actionPanel.ap-pospromo .regularVpc.vpc_unclipped #unclippedCoupon.ccx_dpv2.sns_radio_button,#actionPanel.ap-pospromo .regularVpc.vpc_unclipped.vpc_oneTimeBuy #unclippedCoupon.ccx_dpv2.sns_optin,#actionPanel.ap-pospromo .regularVpc.vpc_unclipped.vpc_sns #unclippedCouponSns.ccx_dpv2.sns_optin,#actionPanel.ap-pospromo .snsVpc #couponSnsWithOneTimeSelected.ccx_dpv2.sns_radio_button,#actionPanel.ap-pospromo .snsVpc.vpc_clipped.vpc_oneTimeBuy #couponSnsWithOneTimeSelected.ccx_dpv2.sns_optin,#actionPanel.ap-pospromo .snsVpc.vpc_clipped.vpc_sns #clippedCouponSns.ccx_dpv2.sns_optin,#actionPanel.ap-pospromo .snsVpc.vpc_unclipped.vpc_oneTimeBuy #couponSnsWithOneTimeSelected.ccx_dpv2.sns_optin,#actionPanel.ap-pospromo .snsVpc.vpc_unclipped.vpc_sns #unclippedCouponSns.ccx_dpv2.sns_optin{display:inline}#actionPanel #clickableSnsVpcButton,#actionPanel #clickableVpcButton{font-weight:700}#actionPanel #clippedCoupon.ccx_dpv2.sns_optin,#actionPanel #clippedCouponSns.ccx_dpv2.sns_optin,#actionPanel #couponSnsWithOneTimeSelected.ccx_dpv2.sns_optin,#actionPanel #errorInClipping.ccx_dpv2.sns_optin,#actionPanel #unclippedCoupon.ccx_dpv2.sns_optin,#actionPanel #unclippedCouponSns.ccx_dpv2.sns_optin{display:none}#actionPanel .vpc_clip_error #errorInClipping.ccx_dpv2.sns_optin{display:inline}#actionPanel.ap-onetime .regularVpc.vpc_clipped.vpc_oneTimeBuy #clippedCoupon.ccx_dpv2.sns_optin,#actionPanel.ap-onetime .regularVpc.vpc_clipped.vpc_sns #clippedCouponSns.ccx_dpv2.sns_optin,#actionPanel.ap-onetime .regularVpc.vpc_unclipped.vpc_oneTimeBuy #unclippedCoupon.ccx_dpv2.sns_optin,#actionPanel.ap-onetime .regularVpc.vpc_unclipped.vpc_sns #unclippedCouponSns.ccx_dpv2.sns_optin,#actionPanel.ap-onetime .snsVpc.vpc_clipped.vpc_oneTimeBuy #couponSnsWithOneTimeSelected.ccx_dpv2.sns_optin,#actionPanel.ap-onetime .snsVpc.vpc_clipped.vpc_sns #clippedCouponSns.ccx_dpv2.sns_optin,#actionPanel.ap-onetime .snsVpc.vpc_unclipped.vpc_oneTimeBuy #couponSnsWithOneTimeSelected.ccx_dpv2.sns_optin,#actionPanel.ap-onetime .snsVpc.vpc_unclipped.vpc_sns #unclippedCouponSns.ccx_dpv2.sns_optin{display:inline}#actionPanel #clickableSnsVpcButton.vpc_green_button,#actionPanel #clickableVpcButton.vpc_green_button{border-style:dashed;border-width:1px;border-color:#424242}#actionPanel #clickableSnsVpcButton.vpc_green_button .a-button-inner,#actionPanel #clickableVpcButton.vpc_green_button .a-button-inner{background:#87e36e;background:-moz-linear-gradient(top,#87e36e 0,#38a02b 100%);background:-webkit-gradient(linear,left top,left bottom,color-stop(0,#87e36e),color-stop(100%,#38a02b));background:-webkit-linear-gradient(top,#87e36e 0,#38a02b 100%);background:-o-linear-gradient(top,#87e36e 0,#38a02b 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#87e36e', endColorstr='#38a02b', GradientType=0 );background:-ms-linear-gradient(top,#87e36e 0,#38a02b 100%);background:linear-gradient(to bottom,#87e36e 0,#38a02b 100%);-webkit-box-shadow:0 .1rem 0 rgba(121,194,111,.6) inset;box-shadow:0 .1rem 0 rgba(121,194,111,.6) inset}#actionPanel #clickableSnsVpcButton.a-button.vpc_green_button::after,#actionPanel #clickableVpcButton.a-button.vpc_green_button::after{border-style:none!important}#couponBook{text-align:center;word-spacing:100px;border:1px dashed #80A439;width:70px;padding:5px 0;margin-right:12px}.clippedMessage{color:#068310}.cbText{color:#80A439}[id$=errorInClipping]{display:none}.couponTable{width:auto}.couponRow{padding-top:4px!important}.couponBadge{color:#fff;font-weight:700;background-color:#e47911;white-space:nowrap}.couponBadge:before{border-bottom:10px solid #e47911}.couponBadge:after{border-top:10px solid #e47911}.autoOverflow{overflow:auto}@media only screen and (min-width:800px){.vpcApplyCoupon{display:inline}}#priceBlockCoupon .vpcApplyCoupon{padding-top:0}#priceBlockCoupon .vpcApplyCoupon i{top:0;margin-top:0rem}.vpcApplyCoupon label{display:inline;padding-left:0;top:0}#vpcButton .a-declarative,#vpcButtonSns .a-declarative{position:relative;top:2px}.ccx_dpv2 #vpcButton .a-declarative,.ccx_dpv2 #vpcButtonSns .a-declarative{position:relative;top:0}.vpcCouponAppliedMark .a-box-inner.a-alert-container{padding-left:22px}.vpcCouponAppliedMark.a-alert-inline .a-icon-alert{display:inherit}#clippedCoupon,#clippedCouponOneTimeBuy,#clippedCouponSns,#oneTimeBuyVpcButton,#snsVpcButton,#unclippedCoupon,#unclippedCouponSns{display:none}.vpc_clip_error #errorInClipping,.vpc_oneTimeBuy .vpc_clipped.regularVpc #clippedCoupon,.vpc_oneTimeBuy .vpc_clipped.regularVpc #clippedCouponOneTimeBuy,.vpc_oneTimeBuy .vpc_clipped.snsVpc #clippedCoupon,.vpc_oneTimeBuy .vpc_clipped.snsVpc #clippedCouponOneTimeBuy,.vpc_oneTimeBuy .vpc_unclipped.regularVpc #oneTimeBuyVpcButton,.vpc_oneTimeBuy .vpc_unclipped.regularVpc #unclippedCoupon,.vpc_oneTimeBuy .vpc_unclipped.snsVpc #oneTimeBuyVpcButton,.vpc_oneTimeBuy .vpc_unclipped.snsVpc #unclippedCoupon,.vpc_sns .vpc_clipped.regularVpc #clippedCouponSns,.vpc_sns .vpc_clipped.snsVpc #clippedCouponSns,.vpc_sns .vpc_unclipped.regularVpc #snsVpcButton,.vpc_sns .vpc_unclipped.regularVpc #unclippedCouponSns,.vpc_sns .vpc_unclipped.snsVpc #snsVpcButton,.vpc_sns .vpc_unclipped.snsVpc #unclippedCouponSns{display:inline}.standaloneCoupon .couponBadge{vertical-align:middle;margin:0 .7rem 0 0;top:0}.standaloneCoupon .a-size-small{line-height:1!important}.standaloneCoupon.vpc_clip_error [id$=errorInClipping],.standaloneCoupon.vpc_clipped #clippedCoupon,.standaloneCoupon.vpc_clipped #clippedCouponOneTimeBuy,.standaloneCoupon.vpc_clipped #clippedCouponSns,.standaloneCoupon.vpc_unclipped #oneTimeBuyVpcButton,.standaloneCoupon.vpc_unclipped #snsVpcButton,.standaloneCoupon.vpc_unclipped #unclippedCoupon,.standaloneCoupon.vpc_unclipped #unclippedCouponSns{display:inline-block;margin:0}.standaloneCoupon .vpcApplyCoupon{display:inline-block;padding:0;margin-right:.4rem}.standaloneCoupon .vpcApplyCoupon.a-checkbox *{left:0;margin:0}.standaloneCoupon .vpcApplyCoupon.a-checkbox i{position:relative;margin-right:.4rem}.standaloneCoupon.vpc_unclipped .couponDetailsLink{vertical-align:middle}.standaloneCoupon .vpcCouponAppliedMark{margin:0 .2rem 0 0;vertical-align:top}.standaloneCoupon #clippedCouponSns .vpcCouponAppliedMark{display:block}.standaloneCoupon.vpc_clipped .couponBadge{float:left}.standaloneCoupon.vpc_clipped #clippedCouponSns{display:block;overflow:hidden}#superleafActionPanel.ap-offer-selector-digital .vpc_oneTimeBuy,#superleafActionPanel.ap-offer-selector-used .vpc_oneTimeBuy{display:none}#superleafActionPanel .couponRow.a-nowrap{width:40px}#superleafActionPanel .couponFeature #clippedCoupon,#superleafActionPanel .couponFeature #errorInClipping,#superleafActionPanel .couponFeature #unclippedCoupon{padding-left:4px}.hideCoupon{display:none}\n.oneclick-guide{background:#d1f7e7;color:#002F36}.oneclick-guide-grey{background:#f6f6f6;color:#002F36}\n#octane-aui-example-id{color:red}\n.a-no-js .gc-requires-js{display:none!important}.a-no-js .gc-requires-no-js{display:block!important}.a-js .gc-requires-js{display:block!important}.a-js .gc-requires-no-js{display:none!important}#giftcardcustomtwister_feature_div #twister #gc-amount-wrapper{overflow:hidden}#giftcardcustomtwister_feature_div #twister #gc-amount-picker .gc-amount-swatch .gc-select-amount-button{min-width:50px;min-height:31px;text-align:center}#giftcardcustomtwister_feature_div #twister #gc-amount-picker .gc-amount-swatch .gc-select-amount-button .gc-select-amount-button-text{text-align:center}#giftcardcustomtwister_feature_div #twister #gc-amount-picker li{margin-left:7px}#giftcardcustomtwister_feature_div #twister #gc-order-form-amount-wrapper{position:relative}#giftcardcustomtwister_feature_div #twister #gc-order-form-amount-wrapper #gc-order-form-custom-amount{border:1px solid #a6a6a6;border-top-color:#949494;height:32px;padding:0 10px}#giftcardcustomtwister_feature_div #twister #gc-order-form-amount-wrapper .gc-amount-padding{padding-left:15px}#giftcardcustomtwister_feature_div #twister #gc-order-form-amount-wrapper .gc-currency-symbol{display:inline;font-style:normal;left:6px;position:absolute;top:50%;margin-top:-9px}#gc-tablet-app-amount-picker #gc-amount-wrapper{margin:24px 19px}#gc-tablet-app-amount-picker #gc-amount-wrapper .gc-amount-button{width:110px}#gc-tablet-app-amount-picker #gc-amount-wrapper .gc-amount-column{padding-right:15px}#gc-tablet-app-amount-picker #gc-custom-amount-list-item{position:relative;font-size:1.5rem}#giftcardcustomtwister_feature_div #twister .imageSwatches li{padding:2px 1px 2px 2px!important;margin-left:7px;border-radius:2px;text-align:center;border-width:1px}#giftcardcustomtwister_feature_div #twister .imageSwatches li.swatchSelect{border-color:#FF8F00}.a-no-js #giftcardcustomtwister_feature_div .gc-swatch-url{height:100%;width:100%}#giftcardcustomtwister_feature_div #twister #gc-order-form-amount-wrapper .gc-amount-padding{padding-left:15px}#giftcardcustomtwister_feature_div #twister #variation_design_name #vgc_swatches li{border-style:solid}#giftcardcustomtwister_feature_div #twister #variation_design_name #vgc_swatches li img{opacity:1}@media only screen and (max-width:1280px){#gc-amount-picker .gc-amount-swatch:nth-child(n+6){display:none}}@media only screen and (max-width:1209px){#gc-amount-picker .gc-amount-swatch:nth-child(n+5){display:none}}@media only screen and (max-width:1191px){#gc-amount-picker .gc-amount-swatch:nth-child(n+4){display:none}}@media only screen and (max-width:1066px){#gc-amount-picker .gc-amount-swatch:nth-child(n+3){display:none}}.gc-buybox{position:relative}#gc-disable-atc{position:absolute;top:0;right:0;left:0;bottom:0;z-index:100;cursor:not-allowed}#giftcardcustomtwister_feature_div #twister #gc-custom-amount-list-item .a-button-toggle.a-button-selected.gc-input-error{border-color:#d00;box-shadow:none}#giftcardcustomtwister_feature_div #twister #gc-custom-amount-list-item .gc-input-error{border-color:#d00;box-shadow:0 0 0 3px rgba(221,0,0,.1)}#giftcardcustomtwister_feature_div #twister #gc-order-form-amount-wrapper #gc-order-form-custom-amount.a-input-text.gc-input-error{border-color:#d00;box-shadow:0 0 0 3px rgba(221,0,0,.1)}#gc-custom-amount-list-item .gc-input-error{border-color:#d00;box-shadow:0 0 0 3px rgba(221,0,0,.1)}#twister .a-button-dropdown.gc-dropdown-error{border:2px solid #d00}#gc-tablet-app-amount-picker .a-input-text-addon-group-wrapper,#giftcardcustomtwister_feature_div .a-input-text-addon-group-wrapper{display:inline-block;vertical-align:middle}#gc-tablet-app-amount-picker .a-input-text-addon-group,#giftcardcustomtwister_feature_div .a-input-text-addon-group{position:relative;display:table;border-collapse:separate}#gc-tablet-app-amount-picker .a-input-text-addon-group .a-input-text,#giftcardcustomtwister_feature_div .a-input-text-addon-group .a-input-text{position:relative;z-index:2;width:100%;margin-bottom:0;border-radius:3px}#gc-tablet-app-amount-picker .a-ie9 .a-input-text-addon-group .a-input-text,#giftcardcustomtwister_feature_div .a-ie9 .a-input-text-addon-group .a-input-text{float:left}#gc-tablet-app-amount-picker .a-input-text-addon,#gc-tablet-app-amount-picker .a-input-text-addon-group .a-input-text,#giftcardcustomtwister_feature_div .a-input-text-addon,#giftcardcustomtwister_feature_div .a-input-text-addon-group .a-input-text{display:table-cell;vertical-align:middle}#gc-tablet-app-amount-picker .a-input-text-addon-group .a-input-text:not(:first-child):not(:last-child),#gc-tablet-app-amount-picker .a-input-text-addon:not(:first-child):not(:last-child),#giftcardcustomtwister_feature_div .a-input-text-addon-group .a-input-text:not(:first-child):not(:last-child),#giftcardcustomtwister_feature_div .a-input-text-addon:not(:first-child):not(:last-child){border-radius:0}#gc-tablet-app-amount-picker .a-input-text-addon,#giftcardcustomtwister_feature_div .a-input-text-addon{background-color:#f6f6f6;padding:3px 7px;line-height:1;text-align:center;border:1px solid #a6a6a6;border-top-color:#949494;border-radius:3px;width:1%;white-space:nowrap}#gc-tablet-app-amount-picker .a-input-text-addon-group .a-input-text-wrapper:first-child,#gc-tablet-app-amount-picker .a-input-text-addon-group .a-input-text:first-child,#gc-tablet-app-amount-picker .a-input-text-addon:first-child,#giftcardcustomtwister_feature_div .a-input-text-addon-group .a-input-text-wrapper:first-child,#giftcardcustomtwister_feature_div .a-input-text-addon-group .a-input-text:first-child,#giftcardcustomtwister_feature_div .a-input-text-addon:first-child{border-top-right-radius:0;border-bottom-right-radius:0}#gc-tablet-app-amount-picker .a-input-text-addon:first-child,#giftcardcustomtwister_feature_div .a-input-text-addon:first-child{border-right:0}#gc-tablet-app-amount-picker .a-input-text-addon-group .a-input-text-wrapper:last-child,#gc-tablet-app-amount-picker .a-input-text-addon-group .a-input-text:last-child,#gc-tablet-app-amount-picker .a-input-text-addon:last-child,#giftcardcustomtwister_feature_div .a-input-text-addon-group .a-input-text-wrapper:last-child,#giftcardcustomtwister_feature_div .a-input-text-addon-group .a-input-text:last-child,#giftcardcustomtwister_feature_div .a-input-text-addon:last-child{border-top-left-radius:0;border-bottom-left-radius:0}#gc-tablet-app-amount-picker .a-input-text-addon:last-child,#giftcardcustomtwister_feature_div .a-input-text-addon:last-child{border-left:0}#gc-tablet-app-amount-picker .a-input-text-addon-group .a-input-text-wrapper:not(:first-child):not(:last-child),#giftcardcustomtwister_feature_div .a-input-text-addon-group .a-input-text-wrapper:not(:first-child):not(:last-child){border-radius:0}#gc-tablet-app-amount-picker .a-form-disabled .a-input-text-addon,#giftcardcustomtwister_feature_div .a-form-disabled .a-input-text-addon{color:#767676;border-color:rgba(186,186,186,.5);background-color:#f3f3f3;box-shadow:none}#gc-tablet-app-amount-picker .a-input-text-addon-group.a-form-error,#giftcardcustomtwister_feature_div .a-input-text-addon-group.a-form-error{border-color:#d00;border-radius:3px;box-shadow:0 0 0 3px rgba(221,0,0,.1) inset}#gc-tablet-app-amount-picker .a-input-text-addon-group.a-form-error .a-input-text-addon,#giftcardcustomtwister_feature_div .a-input-text-addon-group.a-form-error .a-input-text-addon{position:relative;border-color:#d00;box-shadow:none}#gc-tablet-app-amount-picker .a-input-text-addon-group.a-form-error .a-input-text-addon:after,#giftcardcustomtwister_feature_div .a-input-text-addon-group.a-form-error .a-input-text-addon:after{content:none}#gc-tablet-app-amount-picker .a-input-text-addon-group.a-form-error .a-input-text-wrapper,#giftcardcustomtwister_feature_div .a-input-text-addon-group.a-form-error .a-input-text-wrapper{box-shadow:none}#gc-tablet-app-amount-picker .a-input-text-addon-group.a-form-error .a-input-text-wrapper,#giftcardcustomtwister_feature_div .a-input-text-addon-group.a-form-error .a-input-text-wrapper{background:0 0}#giftcardcustomtwister_feature_div #twister #gc-amount-picker .gc-select-amount-button.gc-occasion-filter-amount-picker{min-width:60px;min-height:24px;text-align:center}#giftcardcustomtwister_feature_div #twister #gc-amount-picker .gc-select-amount-button.gc-occasion-filter-amount-picker .gc-select-amount-button-text{text-align:center}#giftcardcustomtwister_feature_div #twister #gc_dropdown_selected_occasion_type{margin-left:1px}#giftcardcustomtwister_bottom_sheet{padding-top:10px;overflow:auto;top:0;bottom:0;left:0;right:0;position:inherit}#giftcardcustomtwister_bottom_sheet .customBottomSheet-image-swatch .customBottomSheet-row-item .customBottomSheet-swatch{width:260px}#giftcardcustomtwister_bottom_sheet .customBottomSheet-image-swatch .customBottomSheet-row-item .customBottomSheet-swatch .a-button-text{padding:0}#giftcardcustomtwister_bottom_sheet .customBottomSheet-image-swatch .customBottomSheet-row-item .customBottomSheet-image{width:260px;height:240px;margin-bottom:0}#giftcardcustomtwister_bottom_sheet .customBottomSheet-image-swatch .customBottomSheet-first-shown-design{margin-left:15px}#giftcardcustomtwister_bottom_sheet .customBottomSheet-image-swatch .customBottomSheet-last-shown-design{margin-right:10px}\n.burj-action-panel-modified-popover{padding:0}.burj-action-panel-modified-popover .a-popover-wrapper{box-shadow:0 2px 3px #E4E4E4;border-radius:2px;border:1px solid #DDD}.burj-action-panel-modified-popover .a-arrow-border{display:none}.burj-action-panel-modified-popover .a-popover-inner{padding:0}#actionPanel #mom,#actionPanel #momPrice,#actionPanel #momUpsell_feature_div,#actionPanel #sampling-availability,#actionPanel #samplingPrice,#actionPanel #sns-availability,#actionPanel #snsPrice,#actionPanel #used,#actionPanel #used-availability,#actionPanel #usedPrice,#actionPanel .noJs-toggleBB,#actionPanel .sns-addon,#actionPanel .sns-pe-buyboxheader,#actionPanel .sns-price{display:none}#actionPanel.ap-fresh .mbcDivider,#actionPanel.ap-mom #actionPanelOfferSelector_feature_div,#actionPanel.ap-mom #availability-brief,#actionPanel.ap-mom #burjOneTimePrice,#actionPanel.ap-mom #dynamicDeliveryMessage,#actionPanel.ap-mom #fast-track,#actionPanel.ap-mom #onetime,#actionPanel.ap-mom #primenote,#actionPanel.ap-mom #promiseBasedBadge_feature_div,#actionPanel.ap-mom #sampling,#actionPanel.ap-mom #sns,#actionPanel.ap-mom #snsPrice,#actionPanel.ap-mom #usedToggleButtonDetails,#actionPanel.ap-onetime #sampling,#actionPanel.ap-onetime #sns,#actionPanel.ap-onetime #usedToggleButtonDetails,#actionPanel.ap-oos #apDivider-top,#actionPanel.ap-sampling #availability-brief,#actionPanel.ap-sampling #digital-dash-widget,#actionPanel.ap-sampling #dpFastTrack_feature_div,#actionPanel.ap-sampling #fast-track,#actionPanel.ap-sampling #onetime,#actionPanel.ap-sampling #outOfStock,#actionPanel.ap-sampling #priceblock_ourprice_row,#actionPanel.ap-sampling #primenote_feature_div,#actionPanel.ap-sampling #promiseBasedBadge_feature_div,#actionPanel.ap-sampling #sns,#actionPanel.ap-sns #apEligibility_feature_div,#actionPanel.ap-sns #availability-brief,#actionPanel.ap-sns #burjOneTimePrice,#actionPanel.ap-sns #dynamicDeliveryMessage,#actionPanel.ap-sns #fast-track,#actionPanel.ap-sns #onetime,#actionPanel.ap-sns #primenote,#actionPanel.ap-sns #promiseBasedBadge_feature_div,#actionPanel.ap-sns #sampling,#actionPanel.ap-sns #usedToggleButtonDetails,#actionPanel.ap-sns .default-addon,#actionPanel.ap-sns .default-price,#actionPanel.ap-used #availability-brief,#actionPanel.ap-used #burjOneTimePrice,#actionPanel.ap-used #dpFastTrack_feature_div,#actionPanel.ap-used #onetime,#actionPanel.ap-used #primenote_feature_div,#actionPanel.ap-used #sampling,#actionPanel.ap-used #sns{display:none}#actionPanel.ap-mom #momPrice,#actionPanel.ap-mom #momUpsell_feature_div,#actionPanel.ap-mom #sns-availability,#actionPanel.ap-mom .sns-pe-buyboxheader,#actionPanel.ap-sampling #sampling-availability,#actionPanel.ap-sampling #samplingPrice,#actionPanel.ap-sns #momUpsell_feature_div,#actionPanel.ap-sns #sns-availability,#actionPanel.ap-sns #snsPrice,#actionPanel.ap-sns .sns-addon,#actionPanel.ap-sns .sns-pe-buyboxheader,#actionPanel.ap-sns .sns-price,#actionPanel.ap-used #used-availability,#actionPanel.ap-used #usedPrice{display:inline;display:initial}#actionPanel.ap-mom #mom,#actionPanel.ap-onetime #pe-regular-sampling-price-block #samplingPrice,#actionPanel.ap-used #used{display:block}#actionPanel.ap-onetime #onetimeOption .buybox-price,#actionPanel.ap-sampling #samplingOption .buybox-price,#actionPanel.ap-sns #snsOption .buybox-price,#actionPanel.ap-used #usedOption .buybox-price{font-weight:700}#actionPanel #onetimeOption .buybox-price #priceBadging_feature_div,#actionPanel #usedOption .buybox-price #priceBadging_feature_div{font-weight:400}#actionPanel.ap-used #usedToggleButtonDetails{padding-left:30px}.a-no-js #actionPanel #onetime,.a-no-js #actionPanel #sampling,.a-no-js #actionPanel #sns,.a-no-js #actionPanel #used,.a-no-js #actionPanel .default-addon,.a-no-js #actionPanel .default-price,.a-no-js #actionPanel .noJs-toggleBB{display:inline;display:initial}.a-no-js #actionPanel #buybox-options,.a-no-js #actionPanel #momUpsell_feature_div,.a-no-js #actionPanel .sns-addon,.a-no-js #actionPanel .sns-price{display:none}#apDivider-top{margin-top:10px}#actionPanel{padding-left:18px;z-index:1;position:relative;width:420px}#actionPanelWrapper.burj{overflow:hidden!important;background:none repeat scroll 0 0 rgba(255,255,255,.85);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#D9FFFFFF, endColorstr=#D9FFFFFF)}#actionPanelContainer.burj{float:right;position:relative;margin-left:18px;z-index:3}.prestige_beauty #actionPanelWrapper.burj{background:none repeat scroll 0 0 rgba(255,255,255,.95)}.amazon_elements #actionPanelWrapper.burj,.amazon_elements #leftCol.burj,.prestige_beauty #actionPanelWrapper.burj,.prestige_beauty #leftCol.burj{min-height:645px}.burjActionPanelDivider{margin-left:-18px;margin-bottom:0}.burj .action-panel-overlay{background-color:#FFF;position:absolute;display:none;left:0;z-index:199;opacity:.8;filter:alpha(opacity=80);-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\";filter:alpha(Opacity=80)}#actionPanel{padding-top:18px}#actionPanel .a-icon-prime{border-radius:0}.font-smoothing,.font-smoothing *{-webkit-font-smoothing:antialiased;font-family:HelveticaNeue-Light,Helvetica-Light,HelveticaNeue,Helvetica,Arial,sans-serif}#actionPanel #apos #onetimeOption .a-icon-radio-active,#actionPanel #apos #onetimeOption .a-icon-radio-inactive,#actionPanel #apos #samplingOption .a-icon-radio-inactive,#actionPanel #apos #snsOption .a-icon-radio-active,#actionPanel #apos #snsOption .a-icon-radio-inactive{vertical-align:top!important}#actionPanel #apos #onetimeOption .a-radio-label,#actionPanel #apos #samplingOption .a-radio-label,#actionPanel #apos #snsOption .a-radio-label,#actionPanel #apos #usedOption .a-radio-label{margin-left:5px}#actionPanel #apos label{cursor:pointer}#actionPanel #andonCord_feature_div .a-box{border:none}#actionPanel #andonCord_feature_div .a-box-inner.a-alert-container{box-shadow:none;padding-left:18px!important}#actionPanel #andonCord_feature_div h4{color:#111;padding-bottom:10px}#actionPanel #andonCord_feature_div .a-alert-heading{padding-left:45px}#actionPanel #availability-brief{margin-bottom:6px!important;margin-top:10px}#actionPanel #sns-availability>.a-section.a-spacing-mini{margin-bottom:6px!important;margin-top:10px}#actionPanel #availability{font-size:17px!important;font-weight:400!important}#actionPanel #availability p#pa_other_website_text{color:#888!important;margin-top:6px}#actionPanel #merchant-info{font-size:13px;color:#333}#actionPanel #pa_avaliability_message{font-size:12px!important;font-weight:400!important}#actionPanel #pa_avaliability_message a{white-space:normal!important}#actionPanel #pa_avaliability_message span{color:#888!important}#actionPanel #availability-brief #availability+br{display:none}#actionPanel #bbop-sbbop-container{margin-bottom:0}#actionPanel .buybox-main{padding:0 40px}#actionPanel #priceblock_ourprice_row span.feature img{padding-top:8px!important}#actionPanel #onetimeOption .a-radio-label #priceBadging_feature_div a:not(.a-popover-trigger),#actionPanel #usedOption .a-radio-label #priceBadging_feature_div a:not(.a-popover-trigger){display:none}#actionPanel #pa_feedbackForm_rootmain{text-align:center}.burj #buybox_feature_div #deal #regularBuybox{margin-bottom:14px!important}.burj #hero-quick-promo hr{display:none}#actionPanel #hqp{margin-top:26px}#actionPanel #hqp #amsDetailRight{margin-bottom:18px}#actionPanel #hqp #amsDetailRightWide{margin-bottom:18px}#actionPanel #hqp #hqp-left{margin-bottom:18px}div#hqp-bottom.a-section.burj{margin-bottom:0}.burj #instantOrderUpdate_feature_div>.a-section{margin-bottom:18px!important}.amazon_elements .burj #instantOrderUpdate_feature_div>.a-section,.prestige_beauty .burj #instantOrderUpdate_feature_div>.a-section{margin-top:18px}.burj #instantOrderUpdate_feature_div .a-alert-info .a-alert-container{background:#f3f3f3}.burj #instantOrderUpdate_feature_div .a-link-normal,.burj #instantOrderUpdate_feature_div .a-size-mini{font-size:12px!important;line-height:1.5!important}#actionPanel.ap-used #usedPrice #usedpriceblock_ourprice_lbl,#actionPanel:not(.ap-deal):not(.ap-pospromo):not(.ap-b2brd) #price #priceblock_ourprice_lbl,#actionPanel:not(.ap-deal):not(.ap-pospromo):not(.ap-b2brd) #price #priceblock_saleprice_lbl{padding-top:7px!important;font-size:13px!important}#actionPanel.ap-used #usedPrice #usedpriceblock_ourprice,#actionPanel:not(.ap-deal):not(.ap-pospromo):not(.ap-b2brd) #price #priceblock_ourprice,#actionPanel:not(.ap-deal):not(.ap-pospromo):not(.ap-b2brd) #price #priceblock_saleprice{font-size:21px!important}#actionPanel:not(.ap-deal):not(.ap-pospromo):not(.ap-b2brd) #price.burj-medium-font #priceblock_ourprice_lbl,#actionPanel:not(.ap-deal):not(.ap-pospromo):not(.ap-b2brd) #price.burj-medium-font #priceblock_saleprice_lbl{padding-top:0!important}#actionPanel:not(.ap-deal):not(.ap-pospromo):not(.ap-b2brd) #price.burj-medium-font #priceblock_ourprice{font-size:17px!important}#actionPanel:not(.ap-deal):not(.ap-pospromo):not(.ap-b2brd) #price.burj-medium-font #priceblock_saleprice{font-size:13px!important}#actionPanel:not(.ap-deal):not(.ap-pospromo):not(.ap-b2brd) #price{margin-bottom:0!important}#actionPanel #price #priceBadging_feature_div a{white-space:nowrap}.burj #ae-returnless_refund{margin-bottom:14px;padding-bottom:6px;border-bottom:1px solid #E7E7E7}#actionPanel #toggleBuyBox #oneClickSignIn hr,#actionPanel #toggleBuyBox .pads-primary-offer-container+hr{display:none}#actionPanel #toggleBuyBox #pa_buybox_display_url{display:inline}#actionPanel #toggleBuyBox #outOfStock span.a-size-small,#actionPanel #toggleBuyBox #pa_buybox_display_url{color:#767676!important}#actionPanel #toggleBuyBox #outOfStock span.a-size-medium.a-color-base,#actionPanel #toggleBuyBox #pa_buybox_title{font-weight:700;font-size:13px!important}#actionPanel #toggleBuyBox #add-to-registry-baby-button+.a-button-text.a-text-left,#actionPanel #toggleBuyBox #add-to-registry-baby-button-submit+.a-button-text.a-text-left,#actionPanel #toggleBuyBox #add-to-registry-wedding-button+.a-button-text.a-text-left,#actionPanel #toggleBuyBox #outOfStock,#actionPanel #toggleBuyBox #wishListMainButton-announce{text-align:center!important}#actionPanel #toggleBuyBox .a-button-icon .a-button-text{padding-left:12.5px}#actionPanel #toggleBuyBox #outOfStock a{font-size:12px!important}#actionPanel #toggleBuyBox #onetime #diodeAddressDropdown{margin-bottom:7px!important}#actionPanel #toggleBuyBox #onetime #oneClickAvailable #diode_feature_div #diode-delivery-options-button .a-box-inner{padding:7px 18px}#actionPanel #toggleBuyBox #productAds .a-box{border:none}#actionPanel #price_feature_div #snsPrice{margin-bottom:0!important}#actionPanel #snsOption .toggleBuyboxMessage .a-size-small{color:green}#actionPanel #sns-frequency-button .a-padding-base{padding-top:4px!important;padding-bottom:4px!important}#actionaPanel #couponFeature{padding-top:0!important}#actionPanel #onetimeOption-a-radio-label span.feature img{padding-top:1px!important}#actionPanel #snsOption .buybox-price #snsPricePerUnit{font-size:12px!important;line-height:1.5!important}#actionPanelContainer.burj #actionPanel #buybox_feature_div #toggleBuyBox #outOfStock{margin-top:13px}#actionPanelContainer.burj #actionPanel #buybox_feature_div #toggleBuyBox #outOfStock .a-section.a-spacing-small.a-text-center .a-color-price.a-text-bold{color:#111!important}#burjActionPanelAddOnBadge{float:left}.burj #addOnItem_feature_div #addon-offer-text{line-height:20px}\n.burj-body #AUI_A9AdsMiddleBoxTop h2,.burj-body #CustomerDiscussions h2,.burj-body #comparison_table_title,.burj-body #customer-discussions_feature_div h2,.burj-body #customerReviewsHeader,.burj-body #detailpage-click2call-header,.burj-body #giveaway h2,.burj-body #hmdFormDiv h2,.burj-body #need-help-deciding .secHeader,.burj-body #pf-fitment-wrapper h2,.burj-body #prodDetails h2,.burj-body #revMHLContainer h2,.burj-body #reviewBucketHeader,.burj-body #reviewContainer h2,.burj-body #rhfMainHeading,.burj-body #sponsored-products-dp_feature_div h2,.burj-body .bucket h2,.burj-body .cdInlineAskBoxTitle,.burj-body .cdQuestionAnswerHeader,.burj-body .pa_componentTitleTest h2,.burj-body h2.amtcmp,.burj-body h2.askWidgetHeader,.burj-body h2.featureHeading,.prestige_beauty.burj-body #cm_cr_dpwidget>h2{color:#333!important;font-size:21px!important;font-weight:400!important;font-family:arial,verdana,helvetica,sans-serif!important}.prestige_beauty.burj-body #AUI_A9AdsMiddleBoxTop h2,.prestige_beauty.burj-body #CustomerDiscussions h2,.prestige_beauty.burj-body #cm_cr_dpwidget>h2,.prestige_beauty.burj-body #customer-discussions_feature_div h2,.prestige_beauty.burj-body #customerReviewsHeader,.prestige_beauty.burj-body #detailpage-click2call-header,.prestige_beauty.burj-body #giveaway h2,.prestige_beauty.burj-body #need-help-deciding .secHeader,.prestige_beauty.burj-body #pf-fitment-wrapper h2,.prestige_beauty.burj-body #revMHLContainer>h2,.prestige_beauty.burj-body #reviewBucketHeader,.prestige_beauty.burj-body #reviewContainer h2,.prestige_beauty.burj-body #sponsored-products-dp_feature_div h2,.prestige_beauty.burj-body .bucket h2,.prestige_beauty.burj-body .cdInlineAskBoxTitle,.prestige_beauty.burj-body .cdQuestionAnswerHeader,.prestige_beauty.burj-body .pa_componentTitleTest h2,.prestige_beauty.burj-body h2.amtcmp,.prestige_beauty.burj-body h2.askWidgetHeader,.prestige_beauty.burj-body h2.featureHeading{color:#111!important;font-size:28px!important;text-align:center!important;padding-top:44px!important;padding-bottom:44px!important;font-weight:400!important;font-family:arial,verdana,helvetica,sans-serif!important}.prestige_beauty.burj-body #purchase-sims-feature .a-carousel-header-row .a-column.a-span-last.a-text-right,.prestige_beauty.burj-body #session-sims-feature .a-carousel-header-row .a-column.a-span-last.a-text-right{padding-top:44px!important;padding-bottom:44px!important}#addon-stripe{padding:4px 10px 6px;color:#767676;margin-left:-10px}.burj-body #addon-offer-text{padding:2px 0 2px 12px}#zoomWindow{box-shadow:0 2px 10px #d7d7d7}.burj #moreAboutThisProductRPDLink{display:none}.burj .badge-wrapper{margin:0 0 0}\n.burj .collapsedFeatureBullets{max-width:680px;margin-left:18px}.burj #feature-bullets{padding:5px 0;font-size:13px;line-height:1.5}.burj .fadeTextforFB{height:16px;width:100%;position:absolute;z-index:3;display:none}.burj .fadeTextBottomforFB{bottom:0;background:-moz-linear-gradient(top,rgba(255,255,255,0),#fff);background:-webkit-gradient(linear,left top,left bottom,color-stop(0,rgba(255,255,255,0)),color-stop(100%,#fff));background:-webkit-linear-gradient(top,rgba(255,255,255,0),#fff);background:-o-linear-gradient(top,rgba(255,255,255,0),#fff);background:-ms-linear-gradient(top,rgba(255,255,255,0),#fff);background:linear-gradient(to bottom,rgba(255,255,255,0),#fff)}.burj .fadeTextTopforFB{background:-moz-linear-gradient(bottom,rgba(255,255,255,0),#fff);background:-webkit-gradient(linear,left bottom,left top,color-stop(0,rgba(255,255,255,0)),color-stop(100%,#fff));background:-webkit-linear-gradient(bottom,rgba(255,255,255,0),#fff);background:-o-linear-gradient(bottom,rgba(255,255,255,0),#fff);background:-ms-linear-gradient(bottom,rgba(255,255,255,0),#fff);background:linear-gradient(to top,rgba(255,255,255,0),#fff);top:28px}.burj #fbSection h1{margin-left:10px;padding-top:8px}.burj #fbSection #aboutTheProductText{margin-left:10px;padding-top:8px;display:block}.burj .showAllFeatureBullets{max-height:460px;overflow-y:auto;margin-left:-6px;margin-right:10px;clear:left}.burj .expandedFBHeader{float:left;display:inline}.burj .expandedFeatureBullets{position:absolute;box-shadow:0 2px 10px #d7d7d7;background-color:#fff;z-index:1;max-height:490px}.burj .showHiddenFeatureBullets{margin-left:14px}.burj .closeFB{float:right;margin-right:10px;margin-top:-16px;opacity:.4}.burj #feature-bullets li{line-height:17px;margin-bottom:6px}.burj .moreFB{color:#767676;margin-left:22px}.burj #fbExpandableSectionContent.expandableSection,.burj .closeFB{cursor:pointer}.burj .moreButtonforFB{margin-left:7px;margin-right:3px;font-size:11px;line-height:1.465;color:#767676}.burj .closeFB:hover{opacity:.7}.burj .moreFB:hover{background-color:#fff}.burj .closeFB,.burj .fbHeader{display:inline}.burj .downArrowInMoreButton{width:15px;height:15px;background-position:-86px 1px;margin-top:2px;opacity:.4}.burj .downArrowInMoreButton:hover{opacity:.7}.burj .FBplaceholder{height:185px;width:680px}.burj .FBContent{padding-bottom:0}.burj #feature-bullets .caretnext{display:none}.burj #feature-bullets #seeMoreDetailsLink{padding-left:33px}.burj #fbExpandableSection{max-height:146px;overflow:hidden;position:relative}.burj #fbExpandableSection.expanded{height:auto;max-height:none}.burj #fbExpanderMoreButtonSection{position:absolute;bottom:0;width:100%;background-color:#fff}.burj #fbMoreButton .a-button-inner{background:#fff}.burj #fbMoreButton .a-button-text{height:20px;padding:0}.burj #fbAboveMoreButtonFadeOut{height:16px;width:100%;position:absolute;top:-16px;left:0;background:-moz-linear-gradient(top,rgba(255,255,255,0),#fff);background:-webkit-gradient(linear,left top,left bottom,color-stop(0,rgba(255,255,255,0)),color-stop(100%,#fff));background:-webkit-linear-gradient(top,rgba(255,255,255,0),#fff);background:-o-linear-gradient(top,rgba(255,255,255,0),#fff);background:-ms-linear-gradient(top,rgba(255,255,255,0),#fff);background:linear-gradient(to bottom,rgba(255,255,255,0),#fff)}.burj #fbToggleButton{padding-top:3px;padding-left:16px}.burj #fbRuler{width:35%;display:block;min-width:250px;max-width:350px}.burj #fbExpander{max-width:680px}.burj #featurebullets_feature_div+#olpTwoColBottom-left-bottom_feature_div>div:first-of-type:before{content:\"\";position:absolute;left:0;height:1px;width:40%;margin-top:-5px;border-top:1px solid #e7e7e7}.burj #imageBlock{max-height:500px;margin-bottom:10px;overflow:hidden}.burj #imageBlock #main-image-container{max-height:500px!important}@media screen and (max-height:768px){.burj #imageBlock{max-height:350px}.burj #imageBlock #main-image-container{max-height:350px!important}}.burj #imageBlock_feature_div{margin-top:26px}.burj #imageBlock #video-canvas-caption #canvasCaption{display:none}.burj #imageBlock #main-image-container .imgTagWrapper{vertical-align:middle;height:inherit!important}.a-lt-ie9 .burj #imageBlock #main-image-container .imgTagWrapper img{height:auto!important;width:auto!important}.burj #newer-version hr{display:none!important}.burj #newerVersion_feature_div{width:95%}.burj #ask_feature_div{padding-right:10px}.burj #zeitgeistBadge_feature_div{display:inline-block}.burj #acBadge_feature_div{display:inline-block}.burj #title_feature_div{overflow:hidden;max-height:55px;margin-bottom:4px}.burj #title_feature_div.expandedTitle{max-height:none}.burj #titleSection{z-index:25}.burj #title_feature_div.expandedTitle #titleSection{position:absolute;width:98%}.burj #titlePlaceholder{height:0}.burj #title_feature_div.expandedTitle #titlePlaceholder{height:55px}.burj #titleOverlay{z-index:1}.burj #title_feature_div.expandedTitle #titleOverlay{position:absolute;left:-10px;width:100%;background:#fff;box-shadow:0 2px 10px #d7d7d7}.burj #title{display:inline}.burj #title.showPointerOnHover:hover{cursor:pointer}.burj #productTitle{font-size:20px!important}.burj #expandTitleToggle{width:21px;height:21px;position:relative;display:inline-block;margin:0 5px;cursor:pointer;background-size:130px 20px;background-repeat:no-repeat;background-position:0 0}.burj #expandTitleToggle.expand{background-position:-199px -1px}.burj #expandTitleToggle.expand:hover{background-position:-199px -29px}.burj #expandTitleToggle.expand.titleToggleClickedState{background-position:-199px -57px}.burj #expandTitleToggle.collapse{background-position:-171px -1px}.burj #expandTitleToggle.collapse:hover{background-position:-171px -29px}.burj #expandTitleToggle.collapse.titleToggleClickedState{background-position:-171px -57px}.burj #brandBylineWrapper{display:inline-block}.burj .brandFrom{color:#333}.burj #socialFabric .ctxPics{float:none}.burj #socialFabric table{display:inline-table}#leftCol.burj{z-index:2;float:none;margin-right:438px;position:relative}.amazon_elements #leftCol.burj,.prestige_beauty #leftCol.burj{padding-top:0}#leftCol.burj{padding-top:18px}#actionPanelContainer.burj #actionPanel #qpeTitleTag_feature_div .unified_widget.rcmBody{margin-top:13px;margin-bottom:13px}\n@charset \"UTF-8\";#hsx-rpp-stripeContainer{margin-bottom:0}.hsx-rpp-hidden{display:none}.hsx-rpp-spacing-left-small{margin-left:10px}.hsx-rpp-spacing-left-medium{margin-left:30px}.hsx-rpp-stack-horizontal{float:left;vertical-align:top;text-align:left;margin-top:5px;margin-bottom:3px}.hsx-rpp-splitImage{margin-top:0;margin-left:30px;margin-right:30px;min-width:1px;min-height:70px;background-color:#fff}.hsx-rpp-splitImageSmall{margin-top:0;margin-left:30px;margin-right:30px;min-width:1px;min-height:70px;background-color:#fff}#hsx-rpp-checkFitmentContainer{margin-top:0!important;padding-top:0;height:60px}#hsx-rpp-checkFitmentInnerContainer{min-height:70px;max-height:70px;overflow:hidden}.hsx-rpp-resultContainerColumn1{text-align:center}.hsx-rpp-resultContainerColumn2{min-width:30%}.centerResultMessage{display:inline-block}.hsx-rpp-centerResultMessage{margin-top:6px!important}#hsx-rpp-checkFitmentContainerSelectModelSeries,#hsx-rpp-enterModelNumberContainer{margin-top:13px!important}.hsx-rpp-centerResultMessage{display:inline-block}#hsx-rpp-resultContainer{margin-top:0;padding-top:0;height:70px}#hsx-rpp-resultInnerContainer{height:70px;overflow:hidden}.hsx-rpp-popover-icon{position:absolute;height:27px;left:24px;top:25px;width:30px}.hsx-rpp-result-icon{height:27px;left:24px;top:25px;width:30px;margin-right:14px}#hsx-rpp-resultModelNumber{color:#004B91;max-width:500px}.hsx-rpp-modelnumber-popover-content{padding-left:32px}.hsx-rpp-modelnumber-popover-text{margin-top:10px}.hsx-rpp-modelseries-popover-content{padding-left:32px}.hsx-rpp-modelseries-popover-text{margin-top:10px}.hsx-rpp-splitImageModelNumberHelper{margin-top:0;margin-left:30px;margin-right:30px;min-width:1px;min-height:548px;background-color:#ccc;display:none}.hsx-rpp-modelnumber-badge{width:323px;height:91px}.hsx-rpp-modelnumber-badge-big{width:332px;height:238px}.hsx-rpp-modelnumber-badge-small{width:271px;height:136px}.hsx-rpp-modelnumber-badge-container{margin-top:20px;margin-left:26px}.hsx-rpp-modelnumber-camera-modelname-guide-image-big{width:850px;height:325px}.hsx-rpp-modelnumber-camera-lens-mount-image-big{max-width:800px}.hsx-rpp-pc-model-tag-image{width:306px;height:274px}.hsx-rpp-pc-location-image{width:410px;height:288px}.hsx-rpp-helpFindModelnumberContent{min-width:920px}#hsx-rpp-modelNumberMarkersContainer{width:415px}.hsx-rpp-modelHelpLeftPanel{width:415px}.hsx-rpp-modelHelpLeftPanel .hsx-rpp-bulletPoint{margin-bottom:5px;margin-top:50px}.hsx-rpp-modelHelpLeftPanel img{width:90%}.hsx-rpp-modelHelpRightPanel{padding-top:10px;width:349px;height:349px;overflow:hidden}.hsx-rpp-modelHelpRightPanel ul{color:#111;margin-bottom:10px}#hsx-rpp-modelNumberMarkersApplianceSelectContainer{min-width:425px;max-width:425px;border-left:solid 1px #ccc;padding-left:30px}#hsx-rpp-modelNumberMarkerVideoContainer{padding-top:10px;width:349px;height:349px;overflow:hidden}#hsx-rpp-modelNumberMarkerImageContainer{width:349px;height:349px;overflow:hidden}#hsx-rpp-modelNumberMarkerImage{width:349px;height:349px}#hsx-rpp-stripeContainer .hsx-rpp-sx-feedbackButton{position:relative;float:right;max-width:300px;margin-top:-27px;color:#fff;padding:4px 12px;background:grey;cursor:pointer;border-radius:5px 0 0 0}.hsx-rpp-ac-results{padding:0;border-radius:3px;border:1px solid #d0d0d0;background-color:#fff;min-width:164px;overflow:hidden}.hsx-rpp-ac-results ul{width:100%;list-style-position:outside;list-style:none;background-color:#fff;padding:0;margin:0}.hsx-rpp-ac-results iframe{display:none;display:block;position:absolute;top:0;left:0;z-index:-1;filter:mask();width:3000px;height:3000px}.hsx-rpp-ac-results li{padding:3px 5px;cursor:pointer;display:block;width:100%;color:#000;font-size:13px;overflow:hidden}.hsx-rpp-ac-over{background-color:#ccc;color:#000;font-weight:700}.hsx-rpp-popover-trigger{width:125px;margin-right:5px}a.hsx-rpp-modal-scroll-to,a.hsx-rpp-modal-scroll-to:hover,a.hsx-rpp-unstyled-anchor,a.hsx-rpp-unstyled-anchor:hover{text-decoration:inherit;color:#555;cursor:auto}div.hsx-rpp-popover-container-wrapper{max-height:250px;overflow:auto}.hsx-rpp-float-right{float:right}.hsx-rpp-info-icon{display:block;float:left;margin-right:10px;background:url(https://images-na.ssl-images-amazon.com/images/G/01/replacement-parts/rpp-info-icon.png);height:30px;width:27px}.hsx-rpp-learn-more-ink-and-toner-tabs ul{color:#555}.hsx-rpp-checkFitmentContainerColumn{margin-top:5px}.hsx-rpp-newSplitImage{min-width:1px;min-height:45px;background-color:#c9c9c9;margin:4px 0 5px 14px}.hsx-rpp-checkFitmentContainerColumn2{margin-left:10px}.hsx-rpp-icon{min-width:30px;float:left;margin-top:10px}#hsx-rpp-btnCheckFitment{margin-left:5px}.hsx-rpp-moreInfoModelNumberContainer,.hsx-rpp-moreInfoSpacing{margin-top:3px;margin-bottom:3px}.dropdown-class #hsx-rpp-fitsBorder{border:1px solid #7FC87F;box-shadow:0 10px 10px -10px #ddd}.dropdown-class #hsx-rpp-noFitsBorder{border:1px solid #8B6E00;box-shadow:0 10px 10px -10px #ddd}.hsx-rpp-fitsBorder{border:1px solid #7FC87F;box-shadow:0 10px 10px -10px #ddd}.hsx-rpp-noFitsBorder{border:1px solid #8B6E00}.hsx-rpp-notFitsContainerColumn{float:left;margin:10px 0 0 0}.hsx-rpp-ac-summary{background:#F3F3F3;color:#555;font-size:14px;padding:3px;padding-left:7px}.hsx-rpp-ac-see-more{color:#0066c0;font-size:16px;padding:5px;padding-left:7px}#hsx-rpp-btnCheckAnother{float:right}#hsx-rpp-stripeContainer{margin-bottom:0}.hsx-rpp-fitment-focus{text-decoration:underline!important}div#hsx-rpp-bullet-fits-message .a-alert-inline .a-alert-content{top:-1px;font-size:13px}#hsx-rpp-bullet-fits-message{display:inline}div.hsx-rpp-fitment-bullets i.a-icon.a-icon-alert{margin:-1px}.hsx-rpp-bullet-model-info{font-weight:700}.hsx-rpp-checkFitmentContainer{margin-top:0!important;height:60px;min-width:90%;text-align:center}.hsx-rpp-valignTextBottom{vertical-align:text-bottom}.hsx-rpp-valignBottom{vertical-align:bottom}.hsx-rpp-valignTop{vertical-align:top}.hsx-rpp-valignSuper{vertical-align:super}.hsx-rpp-fitsContainer{margin-top:0!important;height:61px;min-width:90%;text-align:center;border-top:#89CD89 1px solid;border-bottom:#89CD89 1px solid;box-shadow:0 4px 0 #EBFAEB inset,0 -4px 0 #EBFAEB inset}.hsx-rpp-notfitsContainer{margin-top:0!important;height:61px;min-width:90%;text-align:center;border-top:#8B6E00 1px solid;border-bottom:#8B6E00 1px solid;box-shadow:0 4px 0 #FFFAE7 inset,0 -4px 0 #FFFAE7 inset}.hsx-rpp-check-mark-green{position:absolute;height:27px;left:24px;top:25px;width:30px;background-position:-318px -35px}.hsx-rpp-warning-icon{position:absolute;height:27px;left:24px;top:25px;width:30px;background-position:-283px -35px}.hsx-rpp-fits-icon{height:27px;left:24px;top:25px;width:30px;display:inline-block;background-position:-318px -35px;vertical-align:text-bottom;margin-right:14px}.hsx-rpp-fits-label{color:#090}.hsx-rpp-not-fits-icon{height:27px;left:24px;top:25px;width:30px;display:inline-block;background-position:-283px -35px;vertical-align:text-bottom;margin-right:14px}#hsx-rpp-stripeContainer .hsx-rpp-dp-feedbackButton{position:relative;float:right;max-width:300px;right:0;margin-top:-28px;color:#fff;padding:4px 12px;background:grey;cursor:pointer;border-radius:5px 0 0 0}.hsx-rpp-popover-trigger{margin-right:5px}.hsx-rpp-popover-filter{display:block;margin-bottom:10px}.hsx-rpp-popover-option{width:160px;text-align:left;padding:0;padding-left:5px;vertical-align:middle;text-decoration:none!important;text-overflow:ellipsis;overflow:hidden;cursor:pointer;display:inline-block;margin-bottom:5px;border:1px solid #fff}.hsx-rpp-model-popover-option,.hsx-rpp-series-popover-option{width:95%}#hsx-rpp-brand-popover{min-height:375px;margin-bottom:15px}.hsx-rpp-brand-popover-option{width:25%}.hsx-rpp-popover-option:not(.hsx-rpp-popover-option-empty):hover{background:#eee;border:1px solid #aaa;cursor:pointer}.hsx-rpp-brand-popover-favorite{width:80px;margin-left:.2em!important;margin-bottom:10px}.hsx-rpp-brand-popover-favorite>span>button.a-button-text{padding-left:5px!important;padding-right:5px}.hsx-rpp-brand-popover-favorite-margin{margin-right:2px}#hsx-rpp-checkFitmentContainer h1{margin-bottom:0;font-size:24px}#hsx-rpp-checkFitmentContainer h4{font-size:17px}#hsx-rpp-checkFitmentLabel-sub-brand,#hsx-rpp-checkFitmentLabel-sub-series-number{padding-bottom:5px}.hsx-rpp-brand-popover-favorite{text-align:center}div.hsx-rpp-learn-more-ink-and-toner-tabs>.a-box-inner{overflow:auto}#hsx-rpp-model-popover-filter,#hsx-rpp-series-popover-filter{width:95%}#hsx-rpp-enterModelNumberContainer{margin-bottom:0}.hsx-rpp-horizontal{float:left;vertical-align:top;text-align:left;display:inline-block}.hsx-rpp-spacing-left{margin-left:14px}#hsx-rpp-noResultsMessage{margin-left:180px}.dropdown-redesign-class #hsx-rpp-stripeContainer{margin-top:6px}.dropdown-redesign-class #hsx-rpp-checkFitmentContainer{border-bottom:1px solid #14A2DD;border-top:1px solid #14A2DD;margin-left:auto;margin-right:auto;margin:-2px;-webkit-box-shadow:0 10px 10px -10px #ddd;-moz-box-shadow:0 10px 10px -10px #ddd}.hsx-rpp-fitsBorder{border:1px solid #7FC87F}#hsx-rpp-brand-selection{display:inline-block}.dropdown-redesign-class .hsx-rpp-noFitsBorder{border:1px solid #8B6E00}.dropdown-redesign-class #hsx-rpp-checkFitmentInnerContainer{min-height:55px;overflow:hidden}.dropdown-redesign-class #hsx-rpp-checkFitmentContainer #hsx-rpp-checkFitmentInnerContainer{padding:16px 18px 0}.dropdown-redesign-class #hsx-rpp-fitsContainer,.dropdown-redesign-class #hsx-rpp-notfitsContainer{height:60px;padding:0 18px;margin-left:auto;margin-right:auto;margin:0 0 0;border-radius:0;margin-top:0!important}.dropdown-redesign-class .pcp-icon-text-separator{height:16px;width:1px;margin-left:10px;margin-right:10px;background-color:#000;display:inline-block;position:relative}.dropdown-redesign-class .pcp-icon-no-result-text-separator{height:16px;width:1px;margin-top:7px;margin-left:10px;margin-right:10px;background-color:#000;display:inline-block;position:relative}.dropdown-redesign-class #hsx-rpp-fitsContainer #hsx-rpp-checkFitmentInnerContainer,.dropdown-redesign-class #hsx-rpp-notfitsContainer #hsx-rpp-checkFitmentInnerContainer{min-height:70px;max-height:70px}.dropdown-redesign-class .hsx-rpp-resultContainerColumn1{margin:10px}.dropdown-redesign-class #hsx-rpp-enterModelNumberContainer{margin-top:0!important}.dropdown-redesign-class .hsx-rpp-stack-horizontal{margin-bottom:0;padding-top:0}.dropdown-redesign-class #hsx-rpp-checkFitmentContainerSelectModelSeries{margin-top:0!important}.dropdown-redesign-class #hsx-rpp-checkFitmentContainer h4{font-size:14px}.dropdown-redesign-class #hsx-rpp-checkFitmentLabel{padding-top:6px;font-size:17px}.dropdown-redesign-class .hsx-rpp-check-another-margin{margin-top:6px}.dropdown-redesign-class .hsx-rpp-help-alignment{display:inline-block;float:right;margin:8px 0 0 20px}.dropdown-redesign-class .hsx-rpp-logo{width:154px;height:20px;margin-left:-19px;margin-top:-1px;vertical-align:middle;float:left}.dropdown-redesign-class .hsx-rpp-noFits-logo{width:154px;height:20px;margin-left:-2px;margin-top:6px;vertical-align:middle;float:left}.dropdown-redesign-class .hsx-rpp-spacing-top-micro{margin-top:4px}.dropdown-redesign-class #hsx-rpp-stripeContainer .hsx-rpp-dp-feedbackButton{position:relative;float:right;max-width:300px;margin-top:-27px;margin-right:10px;color:#0066c0;padding:4px 12px;background:0 0;cursor:pointer}@media screen and (max-width:1200px){.dropdown-redesign-class #hsx-rpp-checkFitmentContainer #hsx-rpp-checkFitmentInnerContainer{padding:5px 5px 0!important}.dropdown-redesign-class .dropdown-class .hsx-rpp-stack-horizontal{padding-bottom:5px!important}.dropdown-redesign-class .hsx-rpp-logo{margin-left:0!important}}.hsx-rpp-smartbox-ac-hover{background-color:#f3f3f3}.hsx-rpp-smartbox-list-header{padding:0 5px!important;cursor:default!important;border-bottom:1px solid #767676}.hsx-rpp-smartbox-list-header-text{font-size:13px;float:left}.hsx-rpp-smartbox-list-header:first-letter{text-transform:capitalize}.hsx-rpp-smartbox-search{position:relative;display:inline-block}.hsx-rpp-smartbox-search-margin{margin-bottom:0}.hsx-rpp-smartbox-search input{padding-left:30px}.hsx-rpp-smartbox-search .a-icon-search{position:absolute;top:50%;margin-top:-7px;left:10px}.hsx-rpp-smartbox-search div{position:absolute;top:50%;margin-top:-10px;left:30px}.hsx-rpp-smartbox-highlight-entity{background-color:#3066A2;color:#fff!important;padding-left:3px;padding-right:3px}.hsx-rpp-smartbox-unselectable{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none}#hsx-rpp-smartbox-entityfilters:focus{outline:0}.hsx-rpp-smartbox-popover-button{width:80%}.hsx-rpp-smartbox-popover-text{padding-left:10px}.hsx-rpp-smartbox-checkfitment-spacing{padding-right:40px}.hsx-rpp-smartbox-autocomplete-lilabel{font-size:10px;float:right}#hsx-rpp-smartbox-seeallparts{margin-left:15px}.hsx-rpp-ac-results.hsx-rpp-smartbox-suggestion li{padding:3px 6px}.hsx-rpp-smartbox-list-suggestion-autoPrefilled-li{margin-left:15px}.hsx-rpp-smartbox-list-suggestion-autoPrefilled-ul{padding-bottom:5px!important}.hsx-rpp-ac-results.hsx-rpp-smartbox-ac-results{border-radius:0 0 3px 3px}.hsx-rpp-smartbox-partsearch{padding-left:50px;margin-top:0!important}#hsx-rpp-stripeContainer.hsx-rpp-stripeContainer-smartbox .hsx-rpp-dp-feedbackButton.hsx-rpp-smartbox-feedback{margin-top:-27px;margin-right:10px;color:#0066c0;background:0 0}#hsx-rpp-stripeContainer{padding:7px 0}.hsx-rpp-stripeContainer-smartbox #hsx-rpp-resultContainer{margin-top:0;padding-top:0;height:55px!important}.hsx-rpp-stripeContainer-smartbox #hsx-rpp-checkFitmentInnerContainer{min-height:55px;max-height:55px;overflow:hidden}.hsx-rpp-stripeContainer-smartbox #hsx-rpp-fitsContainer,.hsx-rpp-stripeContainer-smartbox #hsx-rpp-notfitsContainer{height:70px;padding:0 18px;margin:8px 8px 0;border-radius:5px;margin-top:0!important}.hsx-rpp-stripeContainer-smartbox #hsx-rpp-fitsContainer #hsx-rpp-checkFitmentInnerContainer,.hsx-rpp-stripeContainer-smartbox #hsx-rpp-notfitsContainer #hsx-rpp-checkFitmentInnerContainer{padding-top:7px}.hsx-rpp-stripeContainer-smartbox .hsx-rpp-resultContainerColumn1{min-width:280px;margin:10px 0 0 0;text-align:left}.hsx-rpp-stripeContainer-smartbox #hsx-rpp-enterModelNumberContainer{margin-top:0!important}.hsx-rpp-stripeContainer-smartbox .hsx-rpp-stack-horizontal{margin-bottom:0;padding-top:0}.hsx-rpp-stripeContainer-smartbox #hsx-rpp-checkFitmentContainerSelectModelSeries{margin-top:0!important}.hsx-rpp-stripeContainer-smartbox #hsx-rpp-checkFitmentContainer h4{font-size:14px}.hsx-rpp-stripeContainer-smartbox #hsx-rpp-lnkModelNumberPrompt{padding-left:5px}.hsx-rpp-stripeContainer-smartbox{margin-bottom:0}\n.cerberus-no-wrap{white-space:nowrap}.cerberus-asin.p13n-sc-truncate{display:inline-block;padding-right:10px}.cerberus-isthishelpful-button{display:inline-block}#cerberusVoteThankYou{display:none}\n#digital-dash-create #digital-dash-create-success-message{display:none}#digital-dash-create #digital-dash-create-error-message{display:none}#digital-dash-create.success #digital-dash-create-success-message{display:block}#digital-dash-create.success .digital-dash-create-button{display:none}#digital-dash-create.error #digital-dash-create-error-message{display:block}#digital-dash-create #digital-dash-create-success-changeover .a-changeover-inner{width:25rem;margin-left:-12.5rem}#actionPanel #toggleBuyBox #digital-dash-create-high-prominence .a-button-text.a-text-left{text-align:center!important}.digital-dash-ilm-boundary{margin:-1.2rem -1.4rem 0}.digital-dash-ilm-wrapper{width:320px;height:45px;overflow:hidden;position:relative;margin-right:auto;margin-left:auto;margin-top:-13px}.digital-dash-ilm-button-outer-wrapper{position:absolute;top:10px;right:19px;-webkit-border-radius:43%/100%;-moz-border-radius:43%/100%;-ms-border-radius:43%/100%;border-radius:43%/100%;border:solid #879495 1px;background:#a9b6b7;padding:2px}.digital-dash-ilm-button-image{-webkit-border-radius:43%/100%;-moz-border-radius:43%/100%;-ms-border-radius:43%/100%;border-radius:43%/100%}.digital-dash-ilm-button-wrapper{position:absolute;top:8px;left:83px;background:#eaeded;background:-webkit-linear-gradient(45deg,#eaeded 0,#fff 100%);background:-moz-linear-gradient(45deg,#eaeded 0,#fff 100%);background:linear-gradient(45deg,#eaeded 0,#fff 100%);-webkit-border-radius:50%/50%;-moz-border-radius:50%/50%;-ms-border-radius:50%/50%;border-radius:50%;border:2px solid #ced6d7;width:33%;height:73%}.digital-dash-ilm-text{height:34px;width:146px;margin-top:8px;text-align:right;font-size:13px;line-height:17px}.digital-dash-ilm-text-first-line{color:#3e4546}.digital-dash-ilm-text-second-line{color:#fb0567}\na.sh-wrap{border:none;outline:0;background:0 0;color:inherit;text-decoration:none}a.sh-wrap:active,a.sh-wrap:hover,a.sh-wrap:link,a.sh-wrap:visited{border:none;outline:0;color:inherit;text-decoration:none}button.sh-wrap{padding:0;border:none;outline:0;background:0 0;color:inherit;font-family:inherit;font-size:inherit;line-height:inherit}.sh-wrap{display:block}.sh-wrap.sh-option-inline{display:inline-block}body.sh-option-no-scroll{height:100%;overflow:hidden}.sh-price{color:#b12704}.sh-list-horizontal{*zoom:1}.sh-list-horizontal:after{content:\"\";display:block;clear:both;height:0}.sh-list-horizontal,.sh-list-horizontal-row,.sh-list-vertical{list-style:none;color:inherit;margin-top:0;margin-right:0;margin-left:0}.sh-list-horizontal li,.sh-list-horizontal-row li,.sh-list-vertical li{list-style:none}.sh-list-horizontal li{float:left}.sh-list-horizontal-row{display:table;border-collapse:collapse;width:100%}.sh-list-horizontal-row li{display:table-cell}.sh-option-addition.sh-list-horizontal-row.a-button-toggle-group,.sh-option-addition.sh-list-horizontal.a-button-toggle-group{font-size:13px}.sh-option-addition.sh-list-horizontal li,.sh-option-addition.sh-list-horizontal-row li{vertical-align:middle}.sh-option-addition.sh-list-horizontal li+li,.sh-option-addition.sh-list-horizontal-row li+li{position:relative;padding-left:1.5em}.sh-option-addition.sh-list-horizontal li+li:before,.sh-option-addition.sh-list-horizontal-row li+li:before{content:\"+\";position:absolute;left:0;width:1.5em;text-align:center}.sh-option-addition.sh-list-horizontal-row{width:auto}.sh-option-addition.sh-list-horizontal-row li+li:before{top:50%;line-height:0}.sh-option-addition.sh-option-addition-wide.sh-list-horizontal li+li,.sh-option-addition.sh-option-addition-wide.sh-list-horizontal-row li+li{padding-left:3em}.sh-option-addition.sh-option-addition-wide.sh-list-horizontal li+li:before,.sh-option-addition.sh-option-addition-wide.sh-list-horizontal-row li+li:before{width:3em}.sh-carousel-devices-container{margin-bottom:14px}.sh-a-container .sh-carousel-devices-container{margin-bottom:14px}.sh-carousel-devices-container.sh-option-size-small .sh-carousel-devices-device{width:12rem}.sh-carousel-devices-container.sh-option-size-small .sh-carousel-devices-device .sh-img{height:8rem}.sh-carousel-devices-device{text-align:center;overflow:visible;width:15rem}.sh-carousel-devices-device .sh-form{margin-top:10px}.sh-carousel-devices-device .sh-btn{margin-bottom:.3rem}.sh-carousel-devices-device .sh-btn.a-button-icon .a-icon{display:none}.sh-carousel-devices-device .sh-btn.a-button-icon .a-button-text{position:static;z-index:auto;text-align:center;padding-left:18px;padding-right:18px}.sh-carousel-devices-device .sh-img{height:15rem;margin-bottom:6px}.sh-carousel-devices-device .sh-title{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.sh-carousel-devices-device .sh-price-offers,.sh-carousel-devices-device .sh-title,.sh-carousel-devices-device p.sh-price{display:block;margin:0;font-size:12px;line-height:1.5}.sh-certified-badge{color:#fff;margin-bottom:14px}.sh-certified-badge-header{padding:.3em 6px .3em 10px;float:left;font-size:11px;line-height:1;background:#2f2f2f;margin-bottom:-.1em;position:relative;max-width:80%;max-width:calc(100% - 1em)}.sh-certified-badge-header:after{content:\"\";display:block;position:absolute;height:0;width:.1em;top:0;right:-1em;border-color:#2f2f2f transparent;border-style:solid;border-width:0 1em 1.7em 0}.sh-certified-badge-header .sh-title{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.sh-certified-badge-body{display:table;width:100%;padding:10px;background:#2f2f2f;position:relative}.sh-certified-badge-body .sh-img{max-height:42px}.sh-certified-badge-wwa{display:table-cell;padding-right:14px;vertical-align:top}.sh-certified-badge{max-width:40em}.sh-certified-badge-body{background:#f6f6f6;border:1px solid #ddd;border-radius:0 4px 4px;background-clip:padding-box;color:#111}.sh-certified-badge-wwa{padding-right:22px}.sh-certified-badge-wwa .sh-img{width:100%;min-width:140px;max-width:168px;max-height:none;image-rendering:-webkit-optimize-contrast}.sh-certified-badge-devices{padding-left:22px}.sh-certified-badge-devices .sh-img{margin-top:-25px;width:100%;min-width:84px;max-width:89.6px;max-height:none;min-height:72.8px}.sh-certified-badge-description{display:table-cell;vertical-align:middle;line-height:1.3}.sh-certified-personalized-badge{margin-bottom:14px}.sh-certified-personalized-badge-body{display:table;width:100%;padding:15px 0 15px 0;position:relative}.sh-certified-personalized-badge-wwa{padding-right:10px;width:32px;display:table-cell;vertical-align:top}.sh-certified-personalized-badge-wwa .sh-img{width:32px;min-width:32px;height:32px;vertical-align:top}.sh-certified-personalized-badge-description{display:table-cell;vertical-align:middle;line-height:1.3;max-width:460px;letter-spacing:0}.sh-certified-personalized-badge-description-text{font-size:15px}.sh-certified-personalized-badge-header{font-size:13px}#sh-certified-personalized-badge-popover-trigger{text-decoration:none;color:#767676}#sh-certified-personalized-badge-popover-trigger i{vertical-align:middle;margin-top:0;margin-bottom:0}.sh-certified-personalized-badge-popover{padding:15px 15px 11px 15px;min-width:300px;max-width:400px}.sh-certified-personalized-badge{margin-bottom:0}#sh-badge-v2-rq-device-list>li:not(:last-child){margin-right:13px}.sh-badge-v2-desktop-img-wrapper:before{padding-bottom:100%;display:block;content:\"\";height:0}.sh-badge-v2-desktop-img-wrapper{width:47px;margin:auto}.sh-badge-v2-sign-container{height:47px;line-height:47px}.sh-badge-v2-sign-container .sh-badge-v2-equal-sign,.sh-badge-v2-sign-container .sh-badge-v2-plus-sign{font-size:17px}#sh-badge-v2-utterance-string{font-size:13px;color:#555;text-align:center;display:table-cell;vertical-align:middle;height:47px;width:100%;line-height:initial}.sh-badge-v2-desktop-img{margin:auto;position:absolute;max-width:100%;max-height:100%;top:0;bottom:0;left:0;right:0}.sh-badge-v2-rq-device{white-space:nowrap}#sh-badge-v2-rq-device-list{font-size:11px;letter-spacing:0;text-align:center;display:flex;margin-bottom:18px}#sh-badge-v2-rq-device-list .sh-badge-v2-bundle-product-description{color:#b12704}#sh-badge-v2-rq-device-list .sh-badge-v2-owned-product-description{color:#008a00}.sh-badge-v2-rq-device-expander{padding-left:42px;padding-bottom:10px;overflow:auto}#sh-badge-v2-atc-total-price-container{margin-top:18px}#sh-badge-v2-atc-btn{min-width:117px}.sh-skin-dark{background:#2f2f2f;color:#fff}.sh-skin-dark hr{border-color:#e7e7e7}.sh-skin-dark li{color:#fff}.sh-skin-dark a{color:#45d9ff}.sh-skin-dark a:active,.sh-skin-dark a:hover,.sh-skin-dark a:link,.sh-skin-dark a:visited{color:#45d9ff}.sh-dp-more-details-video-container{display:block;max-width:700px;margin-left:auto;margin-right:auto;display:table;table-layout:fixed}.sh-dp-more-details-video .sh-video{display:inline-block}.sh-dp-more-details-body{border:0;border-radius:0;background-clip:padding-box;display:table-cell;background:0 0;width:40%;vertical-align:top}.sh-dp-more-details-video{overflow:hidden;display:table-cell;width:60%}.sh-dp-more-details-video{overflow:hidden}.sh-dp-more-details-video .sh-video{display:block;max-width:100%;object-fit:cover;background:0 0}.sh-dp-more-details-body{border:0;border-radius:0;background-clip:padding-box;background:0 0}.sh-dp-more-details-body .sh-divider,.sh-dp-more-details-body .sh-img{margin-bottom:14px}.sh-dp-more-details-body .sh-img{max-height:50.4px}.sh-dp-more-details-body .sh-link{text-decoration:none}.sh-dp-more-details-body .sh-link:active,.sh-dp-more-details-body .sh-link:hover,.sh-dp-more-details-body .sh-link:link,.sh-dp-more-details-body .sh-link:visited{text-decoration:none}.sh-dp-btf-widget{border-radius:4px;background-clip:padding-box;border:1px solid #ddd;max-width:1500px;margin:0 auto}.sh-dp-btf-widget .sh-dp-btf-widget-top{position:relative;display:table;table-layout:fixed;width:100%;height:250px;border-bottom:1px solid #ddd;border-radius:4px 4px 0 0;background-clip:padding-box;background-color:#f3f3f3}.sh-dp-btf-widget .sh-dp-btf-widget-top .sh-dp-demo-left,.sh-dp-btf-widget .sh-dp-btf-widget-top .sh-dp-demo-right{position:relative;display:table-cell;width:50%;vertical-align:top}.sh-dp-btf-widget .sh-dp-btf-widget-bottom{display:table;table-layout:fixed;width:100%}.sh-dp-demo-left.overlay-on .sh-dp-overlay{position:absolute;display:block;height:250px;width:100%;border-radius:4px 0 0;background-clip:padding-box;background:#2f2f2f;opacity:.9;z-index:1}.sh-dp-demo-left.overlay-on .sh-text{color:#fff}.sh-dp-demo-left.overlay-on .sh-dp-demo-commands-btn:first-child,.sh-dp-demo-left.overlay-on .sh-text{position:relative;z-index:2}.sh-dp-demo-commands-section{width:300px;height:250px;overflow:hidden}.sh-dp-demo-badge,.sh-dp-device-img{position:absolute;right:0;bottom:0}.sh-dp-device-img{left:0;width:150px;margin:0 auto;z-index:2}.sh-dp-demo-badge{left:-300px;right:0;bottom:0;max-width:140px;margin:0 auto 14px;z-index:2}@media (max-width:1200px){.sh-dp-demo-badge{left:-225px;top:0;margin:10px auto}}.sh-dp-demo-alexa-speech-bubble-wrapper{position:absolute;left:50%}.sh-dp-demo-alexa-speech-bubble-wrapper .sh-dp-demo-alexa-speech-bubble{position:relative;left:-50%;top:40px;min-width:112.5px;margin:0 auto;padding:10px;background:#239ce2;border-radius:4px;background-clip:padding-box;text-align:center;font-size:17px;color:#fff;z-index:2;opacity:1}.sh-dp-demo-alexa-speech-bubble-wrapper .sh-dp-demo-alexa-speech-bubble:after{display:block;position:absolute;left:50%;bottom:-7px;margin:-8px;border-bottom:0;border:8px solid transparent;border-top-color:#239ce2;content:\"\"}.sh-dp-scene-img-wrapper{position:relative;overflow:hidden;height:250px;border-radius:0 4px 0 0;background-clip:padding-box}.sh-dp-scene-img-wrapper .sh-dp-scene-img{z-index:1}.sh-dp-scene-img-wrapper .sh-img-utility{z-index:0}.sh-dp-scene-img-wrapper .sh-dp-scene-img,.sh-dp-scene-img-wrapper .sh-img-utility{position:absolute;left:-100%;right:-100%;bottom:-100%;top:-100%;width:100%;margin:auto;border-radius:0 4px 0 0;background-clip:padding-box}.sh-dp-rq-devices{display:table-cell;position:relative;width:453px;border-right:1px solid #ddd}.sh-dp-rq-devices:after,.sh-dp-rq-devices:before{display:block;position:absolute;top:50%;left:100%;margin-top:-10px;border-top:10px solid transparent;border-bottom:10px solid transparent;border-left:10px solid #ddd;content:\"\"}.sh-dp-rq-devices:after{margin-left:-1px;border-left:10px solid #fff}.sh-dp-rq-devices .sh-dp-rq-device-list{display:table;margin:18px auto}.sh-dp-rq-devices .sh-dp-rq-device-list>li{display:table-cell;text-align:center;vertical-align:top}.sh-dp-rq-devices .sh-dp-rq-device-list>li+li .sh-dp-rq-device{position:relative;padding-left:26px}.sh-dp-rq-devices .sh-dp-rq-device-list>li+li .sh-dp-rq-device:before{content:\"+\";position:absolute;width:26px;left:0;top:50%;line-height:0;color:#767676;font-size:17px;text-align:center}.sh-dp-rq-device{margin-bottom:14px}.sh-dp-rq-device .sh-dp-rq-device-btn{margin-bottom:-2px}.sh-dp-rq-device .sh-img{width:100%;max-width:112px;min-width:84px;padding:18px}.sh-dp-rq-device-subtitle,.sh-dp-rq-device-title{padding-left:26px}.sh-dp-rq-device-subtitle{color:#767676}.sh-dp-rq-devices-carousel-container{display:table-cell;padding:10px 10px 10px 22px;box-shadow:inset 20px 0 20px -20px #ddd}.sh-dp-rq-devices-carousel-container #sh-dp-rq-hubs-carousel{display:none}.sh-dp-rq-devices-carousel-container.sh-option-rq-items #sh-dp-rq-hubs-carousel{display:block}.sh-dp-rq-devices-carousel-container.sh-option-rq-items #sh-dp-rq-alexas-carousel{display:none}.sh-dp-rq-devices-carousel{padding-top:18px}.sh-dp-rq-devices-carousel .sh-dp-carousel-device{text-align:center}.sh-dp-rq-devices-carousel .sh-dp-carousel-device .sh-img{width:100%;max-width:112px;min-width:84px;padding:0 18px 18px}.sh-dp-rq-devices-carousel .sh-dp-carousel-device .sh-title{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.sh-dp-rq-devices-carousel .sh-dp-carousel-device .sh-btn{width:100%}.sh-dp-btf-demo-and-alert-wrapper{margin:0 auto 22px;max-width:1500px}.sh-dp-rq-echo-plus-alert{margin-top:18px;margin-bottom:10px;background:#f6f6f6;border:1px solid;border-color:#BBD3DE;border-radius:4px;background-clip:padding-box;color:#111;display:table;padding-left:22px;padding-right:22px;position:relative}.sh-dp-rq-echo-plus-alert-title{display:table-cell;vertical-align:middle;font-weight:700;padding-right:6px}.sh-dp-rq-echo-plus-alert-description{display:table-cell;vertical-align:middle}.sh-dp-rq-echo-plus-alert-alexa-device{display:table-cell;padding-left:22px}.sh-dp-rq-echo-plus-alert-alexa-device .sh-img{margin-top:-10px;width:100%}\n.msp-layout{width:350px}.save-unsave-suppliers-section .supplier-icon{background:url(https://images-na.ssl-images-amazon.com/images/G/01/B2B/MSP_sprite_standard._V279850476_.png) no-repeat top left;float:left;margin-right:1px;margin-top:-4px;margin-bottom:auto;width:26px;height:26px}.save-unsave-suppliers-section .seller-box-column{width:500px}.save-supplier-section,.unsave-supplier-section{cursor:pointer}.save-supplier-section:hover .supplier-icon,.unsave-supplier-section .supplier-icon{background-position:-26px 0}.unsave-supplier-section:hover .supplier-icon{background-position:-52px 0}.smp-hidden{display:none}.unsave-supplier-section .remove-supplier-link,.unsave-supplier-section:hover .saved-supplier-link{display:none}.unsave-supplier-section:hover .remove-supplier-link{display:inline}\n#buybox #rentalDurationDropdown{display:inline-block!important}#buybox #returnDatesList{padding-left:15px;margin:0}#buybox #rentalDates{text-align:left}#buybox #nativeRentalDurationDropdown{display:none!important}#buybox #durationsDropdownSection{margin-bottom:0}#buybox #rentalDurationDropdown .a-button-text{text-align:center}\n.calendar_container{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:relative;width:100%}.calendar_container:before{content:\"\";display:block;padding-top:94.2%}.calendar_container.sixWeeks:before{padding-top:108.4%}.calendar_container.fourWeeks:before{padding-top:81%}.calendar_container .arrow{background:#f9f9f9 url(https://images-na.ssl-images-amazon.com/images/G/01/ember/merchant/001/nav-arrows._V001_.png) top left no-repeat;border:1px solid #ddd;cursor:pointer;height:27px;margin:0 auto;position:relative;width:27px;z-index:3}.calendar_container .arrow.disabled{border:1px solid transparent;cursor:auto;opacity:.3;filter:\"alpha(opacity=30)\";-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=30)\"}.calendar_container .arrow:hover{border:1px solid #ddd}.calendar_container .arrow.next{background-position:top right}.calendar_container .tooltip_holder{color:#c45500;pointer-events:none;position:absolute;z-index:4}.calendar{height:100%;left:0;overflow:hidden;padding:1px 0 0 1px;position:absolute;top:0;width:100%}.calendar .month_container{position:relative}.calendar .month_container:after{background:#fff;content:\"\";display:block;height:999px;position:absolute;right:0;top:-499px;width:7px;z-index:2}.calendar .month_label{color:#000;display:block;height:41px;line-height:32px;padding:7px 6px 7px 0;position:absolute;text-align:center;width:100%;z-index:2}.calendar .month{left:0;position:absolute;top:0;width:100%}.calendar .day{cursor:default}.calendar .day.feasible{background:#fff;color:#000;cursor:pointer;z-index:2}.calendar .day.feasible:hover{background:silver;border-color:silver}.calendar .day.feasible .price{color:#555}.calendar .day.in_range{background:silver}.calendar .day.in_range .price{color:#fff}.calendar .day.active,.calendar .day.active:hover{background:silver}.calendar .day.active .price,.calendar .day.active:hover .price{color:#fff}.calendar .day.start{background:linear-gradient(90deg,#6c9 50%,silver 50%);position:relative;text-align:center}.calendar .day.start,.calendar .day.start:hover{background:linear-gradient(90deg,#6c9 50%,silver 50%)}.calendar .day.start:before{background:#6c9;-webkit-transform:scaleY(1.5) scaleX(1.5) rotate(45deg);-moz-transform:scaleY(1.5) scaleX(1.5) rotate(45deg);-ms-transform:scaleY(1.5) scaleX(1.5) rotate(45deg);-o-transform:scaleY(1.5) scaleX(1.5) rotate(45deg)}.calendar .day.end{background:linear-gradient(90deg,silver 50%,#fcc 50%);position:relative;text-align:center}.calendar .day.end,.calendar .day.end:hover{background:linear-gradient(90deg,silver 50%,#fcc 50%)}.calendar .day.end:before{background:#fcc;-webkit-transform:scaleY(1.5) scaleX(1.5) rotate(45deg);-moz-transform:scaleY(1.5) scaleX(1.5) rotate(45deg);-ms-transform:scaleY(1.5) scaleX(1.5) rotate(45deg);-o-transform:scaleY(1.5) scaleX(1.5) rotate(45deg)}.calendar .day.disabled,.calendar .day.disabled:hover{cursor:default}.calendar .day .price{color:#ddd;font-size:10px;line-height:10px;margin-top:8px}.calendar .messages{background:#f9f9f9;border:1px solid #ddd;opacity:0;filter:\"alpha(opacity=0)\";-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";position:absolute;height:100%;left:0;text-align:center;top:0;-webkit-transition:opacity .4s ease-in-out .4s;-moz-transition:opacity .4s ease-in-out .4s;transition:opacity .4s ease-in-out .4s;width:100%;z-index:0}.calendar .messages,.calendar .messages li{list-style-type:none;margin:0;padding:0}.calendar .messages:before{content:\"\";display:inline-block;vertical-align:middle;height:100%}.calendar .messages .error,.calendar .messages .loading,.calendar .messages .no_availability{vertical-align:middle;display:none}.calendar .messages.show_error,.calendar .messages.show_loading,.calendar .messages.show_no_availability{z-index:3;opacity:1;filter:\"alpha(opacity=100)\";-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=100)\"}.calendar .messages.show_error .error,.calendar .messages.show_loading .loading,.calendar .messages.show_no_availability .no_availability{display:inline-block}.cell,.cell_spacer,.day_header{float:left;font-size:14px;margin-left:-1px;margin-top:-1px;position:relative;text-align:center;width:14.286%}.cell:before,.cell_spacer:before,.day_header:before{content:\"\";display:block;padding-top:99.99%}.cell span,.cell_spacer span,.day_header span{left:0;margin-top:-7px;position:absolute;top:50%;width:100%}.cell{background:#f9f9f9;color:#ddd;padding:11px;z-index:1}.cell_spacer,.day_header{background:#fff;border-right-width:0;border-left-width:0;border-bottom-width:0;color:#555}.cell_spacer:before,.day_header:before{padding-top:80%}.cell_spacer.first,.day_header.first{border-left-width:1px;border-bottom:1px solid transparent}.cell_spacer.last,.day_header.last{border-right-width:1px;border-bottom:1px solid transparent}.day_header{border-top-width:0}.legend{margin:0}.legend li{float:left;font-size:12px;list-style:none;margin:10px 0 0;width:50%}.legend li .legend_color{border:1px solid #ddd;display:inline-block;height:14px;margin-right:5px;position:relative;top:2px;width:14px}.clear_calendar{display:none;position:relative;z-index:1}.disabled .clear_calendar{opacity:.5;filter:\"alpha(opacity=50)\";-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\"}\n.background_color_0{background-color:#4096EE}.background_color_1{background-color:orange}.background_color_2{background-color:green}.background_color_3{background-color:purple}#boost_feature_rank .bfr_opacity{opacity:.3}#boost_feature_rank .highlightOnHover:hover{opacity:.7;cursor:pointer}#boost_feature_rank .image_background,#boost_feature_rank .image_background_declarative{position:relative;width:125px;height:125px;border-radius:50%}#boost_feature_rank .image_background img,#boost_feature_rank .image_background_declarative img{position:absolute;top:30%;left:30%;height:40%;width:40%}#boost_feature_rank .image_background_declarative{display:inline-block}#boost_feature_rank .feature-description-word-break-desktop{word-wrap:break-word}\n#octane-aui-example-id{color:red}\n.amz-custom-icon{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonCustomAdditionalAssets-sprite-c8f2329bf875c3b97a22d60394bb194ba02a57d0._V2_.png);background-repeat:no-repeat;background-size:16px 80px;display:inline-block;width:16px;height:16px;vertical-align:text-bottom}@media only screen and (-webkit-min-device-pixel-ratio:1.5),(min-resolution:144dpi){.amz-custom-icon{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/AmazonCustomAdditionalAssets-sprite_2x-cfb315d8c234bf2ef0a5f97d2b2fd8dfa3d46e2d._V2_.png)}}.amz-custom-icon--align-left{background-position:0 0}.amz-custom-icon--align-center{background-position:0 -16px}.amz-custom-icon--align-right{background-position:0 -32px}.amz-custom-icon--upload{background-position:0 -48px}.amz-custom-icon--font{background-position:0 -64px}\n.ac-util-align-left{text-align:left}.pc-two-column-layout{position:relative;max-width:950px;overflow:hidden;overflow-x:auto;min-height:600px;max-height:750px}.pc-two-column-layout .pc-input-controls{max-width:530px;min-width:530px;min-height:420px;max-height:600px;overflow-y:auto}.pc-two-column-layout .pc-input-controls.ac-single-text-only{max-width:300px;min-width:300px;max-height:600px;overflow-y:auto}.pc-two-column-layout.ac-single-text-only{min-height:530px}.pc-two-column-layout .pc-preview-section{width:420px;min-height:420px;padding:10px}.pc-two-column-layout .ac-preview-container{margin:10px;overflow:hidden;position:relative;display:none}.pc-two-column-layout .ac-preview-container .ac-mask-image{position:absolute}.pc-two-column-layout .ac-preview-container .ac-parent-canvas{display:none}.pc-two-column-layout .ac-preview-container:nth-child(2){display:block}.pc-two-column-layout .pc-preview-canvas{position:absolute;width:400px;height:400px;top:10px;left:10px}.pc-two-column-layout .ac-delete-button{visibility:hidden;text-align:right;cursor:pointer;margin-bottom:10px;font-size:1.2em}.pc-two-column-layout .canvas-container{position:absolute!important;box-sizing:content-box}.pc-two-column-layout .canvas-container.show-border{margin-top:-2px;margin-left:-2px;border:2px solid #008296}.pc-two-column-layout .pc-single-text-input-container{margin-right:10px;overflow-y:auto;overflow-x:auto;padding-right:10px}.pc-two-column-layout .ac-error-container{display:none;max-width:100%}.pc-two-column-layout .ac-error-container.active{display:block}.pc-two-column-layout .pc-buy-box{margin-bottom:15px}.pc-two-column-layout .pc-buy-box .a-color-base,.pc-two-column-layout .pc-buy-box .a-color-price{visibility:visible}.pc-two-column-layout .pc-buy-box .a-color-base.active,.pc-two-column-layout .pc-buy-box .a-color-price.active{visibility:visible}.pc-two-column-layout .ac-upload-tnC{display:none}.pc-two-column-layout .ac-controls-container{display:none;min-height:480px}.pc-two-column-layout .ac-controls-container.ac-single-text-only{min-height:400px}.pc-two-column-layout .ac-controls-container:first-child{display:block}.pc-two-column-layout .thumbnail-container{text-align:left;position:relative}.pc-two-column-layout .thumbnail-container .ac-thumbnail{display:inline-block;position:relative;top:0;height:82px;width:82px;border:1px solid;overflow:hidden;margin-right:10px}.pc-two-column-layout .thumbnail-container .ac-thumbnail.active{border:1px solid #e47911;box-shadow:0 0 1px 1px #e47911}.pc-two-column-layout .thumbnail-container .ac-thumbnail.error{border:1px solid #d00;box-shadow:0 0 1px 1px #d00}.pc-two-column-layout .thumbnail-container .ac-thumbnail .thumbnail-image{position:absolute;width:100%;height:100%;top:0;left:0}.pc-two-column-layout .thumbnail-container .ac-thumbnail .thumbnail-image .ieThumbnail-mask{position:absolute;top:0;left:0}.pc-two-column-layout .thumbnail-container .ac-thumbnail .ac-thumbnail-text{height:80px;width:80px;max-height:80px;max-width:80px;line-height:18px;text-align:center;padding:5px;word-wrap:break-word;text-overflow:ellipsis;display:table-cell;vertical-align:middle;overflow:hidden}.pc-popover-footer-wrapper{padding-top:0;padding-bottom:0}.ac-image-loader{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);-o-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);display:none;z-index:9999;text-align:center}#ac-dialog-confirm{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);-o-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);display:none;z-index:999999;width:400px;max-width:100%;background-color:#fff;color:#000;border-radius:4px;border:1px solid #aaa;padding:3px;min-height:150px;font-size:14px}#ac-dialog-confirm p{padding:7px 15px;height:80px;border-bottom:1px solid #222;margin-bottom:0}#ac-dialog-confirm .ac-btn{border:1px solid #d3d3d3;background-color:#e6e6e6;color:#555;font-family:Arial,sans-serif;border-radius:4px;display:inline-block;padding:7px 15px;margin:10px 5px;float:right}#ac-dialog-confirm .ac-btn:hover{color:#212121;border:1px solid #999;background-color:#dadada;cursor:pointer}#ac-dialog-confirm .ac-dialog-header{height:20px;font-weight:700;font-size:14px;border:1px solid #aaa;background-color:#ccc;padding:6px 15px;border-radius:4px;box-sizing:content-box;height:20px}.ac-image-backdrop{position:fixed;height:100%;width:100%;background-color:rgba(170,187,204,.3);display:none;top:0;left:0}.amz-custom-hidden{display:none}.amz-custom-list-item{display:list-item}#parentReferenceDiv,.parentReferenceDiv{height:1px;width:1px;overflow:hidden}#referenceDiv,.referenceDiv{visibility:hidden;display:inline;white-space:nowrap}@media only screen and (max-width:1280px){.pc-two-column-layout .pc-input-controls{min-width:330px}.pc-input-controls.ac-single-text-only{min-width:300px}.ac-selected-gallery-name{max-width:150px}}@media only screen and (min-width:1281px){.pc-two-column-layout{max-width:1000px}.pc-two-column-layout .pc-input-controls{margin-left:30px}}.pc-drop-down{margin-left:5px}.pc-custom-fonts{position:absolute;width:0;height:0}.pc-drop-down-error{border-color:red}.pc-label-text{word-wrap:break-word}.ac-configurator-dropdown{display:block;margin-left:5px}.pc-simple-text-input{margin-left:5px;min-width:200px}.pc-input-invalid{display:none;padding:2px}.pc-input-invalid.active{display:block}.pc-customization-enabled{display:block}.pc-customization-disabled{display:none}.pc-customization-disabled.active{display:block}.ac-simplecolorpicker.icon{display:inline-block;border:1px solid #ccc;height:31px;width:31px;margin-left:5px;margin-top:4px;background-color:#FFF;-webkit-box-shadow:inset 0 1px 1px #000;-moz-box-shadow:inset 0 1px 1px #000;-ms-box-shadow:inset 0 1px 1px #000;box-shadow:inset 0 1px 1px #000;-webkit-transition:border linear .2s,box-shadow linear .2s;-moz-transition:border linear .2s,box-shadow linear .2s;-o-transition:border linear .2s,box-shadow linear .2s;transition:border linear .2s,box-shadow linear .2s}.ac-color-picker-trigger:hover{text-decoration:none}.ac-color-picker-trigger i{margin-top:0}#pc-textArea-fontColor a:hover{text-decoration:none}.ac-color-ul{margin-left:0}.ac-color-ul li{list-style-type:none;display:inline-block}.ac-color-ul li:first-child{margin-left:0}.ac-color-ul li:last-child{margin-right:0}.ac-color-li div{margin:2px;height:28px;width:28px;cursor:pointer;border:1px solid #e7e9ec}.theme-image-container{width:100%;height:270px;overflow-y:auto}.ac-gallery-content-container,.customer-image-container{display:inline-block;width:80px;height:80px;position:relative;text-align:center;line-height:78px;margin:5px;border:1px solid #DDD;box-sizing:content-box}.ac-gallery-content-container .swatch-arrow,.customer-image-container .swatch-arrow{background-image:url(http://g-ec2.images-amazon.com/images/G/01/ProductCustomization/ui-images/down-arrow-shadow-v2._V339886439_.png);position:absolute;height:11px;top:-2px;width:100%;background-position:center top;background-repeat:no-repeat;clear:both;display:none}.ac-gallery-content-container img,.customer-image-container img{width:auto;max-width:80px;height:auto;max-height:80px;vertical-align:middle}.ac-gallery-content-container:hover,.customer-image-container:hover{-webkit-box-shadow:0 0 4px 1px #e47911;-moz-box-shadow:0 0 4px 1px #e47911;-ms-box-shadow:0 0 4px 1px #e47911;box-shadow:0 0 4px 1px #e47911;cursor:pointer}.ac-gallery-content-container.selected,.customer-image-container.selected{border:1px solid #e47911;-webkit-box-shadow:0 0 4px 1px #e47911;-moz-box-shadow:0 0 4px 1px #e47911;-ms-box-shadow:0 0 4px 1px #e47911;box-shadow:0 0 4px 1px #e47911}.ac-gallery-content-container.selected .swatch-arrow,.customer-image-container.selected .swatch-arrow{display:block}#ac-gallery{width:320px}#ac-custom-options-container>div{height:400px}li.vendor-category{display:block;margin-right:25px;list-style:none}li.vendor-category .pc-category-name{max-width:250px;display:inline-block;vertical-align:middle;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ac-gallery-categories-popover{float:right;display:inline-block}.ac-selected-gallery-name{max-width:200px;display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}@media only screen and (max-width:1280px){.ac-selected-gallery-name{max-width:150px}}.ac-imageUpload-control{overflow-y:auto;max-height:330px}.ac-uploaded-image{max-width:430px;min-height:130px;overflow-y:auto}.ac-select-uploaded-image{display:none;font-weight:700}.ac-custom-upload-control-container{position:relative;display:inline-block}.ac-custom-upload-control-container .ac-custom-upload-control+span[data-action=asset-upload]{position:absolute;top:0;right:0;bottom:0;left:0;opacity:0}.ac-custom-upload-control-container .ac-custom-upload-control+span[data-action=asset-upload] .ac-custom-upload-file{width:100%;height:100%;cursor:pointer}.ac-textInput-control{display:none}.pc-textArea-textBox{height:50px}.pc-textArea-textBox textarea{resize:none}.pc-textArea-container{position:relative}.pc-text-controls{display:inline-block;margin-right:10px;vertical-align:bottom}.pc-textArea-fontColor-ul{margin-left:0}.pc-textArea-fontColor-ul li{list-style-type:none;display:inline-block}.pc-textArea-fontColor-ul li:first-child{margin-left:0}.pc-textArea-fontColor-ul li:last-child{margin-right:0}.pc-textArea-fontColor-li div{margin:2px;height:28px;width:28px;cursor:pointer;border:1px solid #e7e9ec}.simplecolorpicker.icon{display:inline-block}.simplecolorpicker.icon .a-button-inner{background:0 0}.pc-textArea-overlay{width:100%;height:100%;position:absolute;top:0;left:0;background-image:url(http://g-ec2.images-amazon.com/images/G/01/ProductCustomization/ui-images/WhiteBackground.png);z-index:999;text-align:center}.pc-textArea-overlay span{line-height:230px;font-weight:700}.pc-textArea-overlay .a-icon{position:relative;top:107px;left:5px}.pc-cutomer-text ul li{font-weight:100}.pc-text-layers{display:none}.pc-text-reset-wrapper{width:200px}.pc-text-reset-button{width:150px}.pc-text-reset-button .a-button-text{width:130px;max-width:130px;overflow:hidden;text-overflow:ellipsis;text-align:left}@media only screen and (max-width:410px){#pc-textArea-fontPicker{display:block;margin:0 0 10px 0}}.pc-surface-nav-carousel-container{overflow:hidden;height:50px;border-bottom:1px solid #eee;position:fixed;left:0;z-index:100;margin-top:-12px;width:100%}.pc-surface-nav-carousel-container+.pc-two-column-layout{margin-top:43px;max-width:none}.pc-surface-nav-carousel-container .pc-surface-nav-carousel-viewport::-webkit-scrollbar{display:none;height:0}.pc-surface-nav-carousel-container .pc-surface-nav-carousel-viewport{background-color:#fff;overflow-x:scroll;overflow-y:auto;width:100%;-webkit-overflow-scrolling:touch;-ms-scroll-chaining:chained;-webkit-transform:translateZ(0)}.pc-surface-nav-carousel-container .pc-surface-nav-carousel{display:-ms-flexbox;display:-webkit-flex;display:flex;overflow-x:visible;margin:0 10px}.pc-surface-nav-carousel-container .pc-surface-nav-carousel .pc-surface-nav-carousel-item{display:-ms-flexbox;display:-webkit-flex;display:flex;-ms-flex-positive:1;-webkit-flex-grow:1;flex-grow:1;-ms-flex-align:center;-webkit-align-items:center;align-items:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;height:50px;padding:0 10px}.pc-surface-nav-carousel-container .pc-surface-nav-carousel .pc-surface-nav-carousel-item a{color:#000}.pc-surface-nav-carousel-container .pc-surface-nav-carousel .pc-surface-nav-carousel-item a span{display:none}.pc-surface-nav-carousel-container .pc-surface-nav-carousel .pc-surface-nav-carousel-item.active{border-bottom:3px solid #e47911;font-weight:700 a;font-weight-color:#e47911}.pc-surface-nav-carousel-container .pc-surface-nav-carousel .pc-surface-nav-carousel-item.customized a{color:#008a00}.pc-surface-nav-carousel-container .pc-surface-nav-carousel .pc-surface-nav-carousel-item.customized a span{display:inline}.pc-two-column-layout.ac-mobile-app{max-height:none;overflow:inherit}.pc-two-column-layout.ac-mobile-app .ac-preview-container{width:auto;max-width:400px;margin-top:auto;margin-left:auto;margin-right:auto}.pc-two-column-layout.ac-mobile-app .ac-preview-container img{left:0;top:0}.pc-two-column-layout.ac-mobile-app .pc-single-text-input-container{max-height:none}.pc-two-column-layout.ac-mobile-app .pc-input-controls.ac-single-text-only{max-width:none}.pc-two-column-layout.ac-mobile-app .pc-input-controls{min-height:0;max-height:none;min-width:0;max-width:none;margin-left:0}.pc-two-column-layout.ac-mobile-app .ac-imageUpload-control{overflow:auto;max-height:none;margin-top:0}.pc-two-column-layout.ac-mobile-app .ac-controls-container{min-height:0}.pc-two-column-layout.ac-mobile-app .pc-buybox-warning-close{position:absolute;top:0;right:0;font-size:20px;width:20px;height:20px;line-height:100%;font-family:monospace;color:#b12704}.pc-two-column-layout.ac-mobile-app .ac-gallery-categories-popover{float:none;display:block;margin-top:10px}.pc-two-column-layout.ac-mobile-app .ac-selected-gallery-name{max-width:90%}.pc-two-column-layout.ac-mobile-app #ac-dialog-confirm{position:fixed;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);-o-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);width:90%}.pc-two-column-layout.ac-mobile-app .ac-image-loader{position:fixed;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);-o-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.pc-two-column-layout.ac-mobile-app .ac-uploaded-image{max-width:auto;max-height:auto}.ac-tablet-app.pc-two-column-layout{max-height:none;overflow:auto}.ac-tablet-app.pc-two-column-layout .ac-preview-container{width:auto;max-width:400px;margin-left:auto;margin-right:auto;margin-top:0}.ac-tablet-app.pc-two-column-layout .ac-preview-container img{left:0;top:0}.ac-tablet-app.pc-two-column-layout .ac-preview-guideline{text-align:left}.ac-tablet-app.pc-two-column-layout .pc-single-text-input-container{max-height:none}.ac-tablet-app.pc-two-column-layout .pc-input-controls.ac-single-text-only{max-width:none;max-height:none}.ac-tablet-app.pc-two-column-layout .pc-input-controls{min-height:0;max-width:none;margin-left:0;max-height:none}.ac-tablet-app.pc-two-column-layout .ac-controls-container{min-height:0}.ac-tablet-app.pc-two-column-layout .pc-surface-nav-carousel-container{overflow:hidden;height:40px;border-bottom:1px solid #eee;position:fixed;left:0;z-index:100;margin-top:-12px;width:100%}.ac-tablet-app.pc-two-column-layout .pc-surface-nav-carousel-container .pc-surface-nav-carousel-viewport::-webkit-scrollbar{display:none;height:0}.ac-tablet-app.pc-two-column-layout .pc-surface-nav-carousel-container .pc-surface-nav-carousel-viewport{background-color:#fff;overflow-x:scroll;overflow-y:auto;width:100%;-webkit-overflow-scrolling:touch;-ms-scroll-chaining:chained;-webkit-transform:translateZ(0)}.ac-tablet-app.pc-two-column-layout .pc-surface-nav-carousel-container .pc-surface-nav-carousel{overflow-x:visible;margin:0 10px}.ac-tablet-app.pc-two-column-layout .pc-surface-nav-carousel-container .pc-surface-nav-carousel .pc-surface-nav-carousel-item{float:left;display:inline-block;width:100px;height:40px;display:flex;justify-content:center;align-items:center;margin-right:10px}.ac-tablet-app.pc-two-column-layout .pc-surface-nav-carousel-container .pc-surface-nav-carousel .pc-surface-nav-carousel-item a{color:#000}.ac-tablet-app.pc-two-column-layout .pc-surface-nav-carousel-container .pc-surface-nav-carousel .pc-surface-nav-carousel-item a span{display:none}.ac-tablet-app.pc-two-column-layout .pc-surface-nav-carousel-container .pc-surface-nav-carousel .pc-surface-nav-carousel-item.active{border-bottom:3px solid #e47911;font-weight:700 a;font-weight-color:#e47911}.ac-tablet-app.pc-two-column-layout .pc-surface-nav-carousel-container .pc-surface-nav-carousel .pc-surface-nav-carousel-item.customized a{color:#008a00}.ac-tablet-app.pc-two-column-layout .pc-surface-nav-carousel-container .pc-surface-nav-carousel .pc-surface-nav-carousel-item.customized a span{display:inline}.ac-tablet-app.pc-two-column-layout .preview-block{padding:0 5px}.ac-tablet-app.pc-two-column-layout .pc-buybox-warning-close{position:absolute;top:0;right:0;font-size:20px;width:20px;height:20px;line-height:100%;font-family:monospace;color:#b12704}@media only screen and (max-width:860px){.ac-tablet-app.pc-two-column-layout #amazoncustom-widget-column-container>div{padding-left:0!important}.ac-tablet-app.pc-two-column-layout #amazoncustom-widget-left-column,.ac-tablet-app.pc-two-column-layout #amazoncustom-widget-right-column{margin:0 auto!important;float:none!important;padding-left:0!important}.ac-tablet-app.pc-two-column-layout #amazoncustom-widget-right-column{display:flex;flex-direction:column}.ac-tablet-app.pc-two-column-layout #amazoncustom-widget-right-column-buybox{order:2}.ac-tablet-app.pc-two-column-layout #amazoncustom-widget-right-column-input-box{order:1}}.ac-preview-guideline{text-align:center;padding:5px}\n.pc-buy-box{margin-bottom:0}.pc-buy-box .selectQuantity{height:31px}.pc-buy-box .selectQuantity span{vertical-align:bottom}.amz-padding-togglebuybox{padding:14px 18px}\n#ask_lazy_load_div{font-family:verdana,arial,helvetica,sans-serif}.cdQuestionAnswerHeader{font-weight:700}.cdAskQuestionPostBox .cdAskQuestionPostBoxText{resize:none;width:585px;font-size:12px;margin-bottom:10px;padding:3px 0 3px 5px;min-height:15px;line-height:15px}.cdQuestionAnswerBlock{float:left;width:365px;height:165px;padding:10px 20px 0 0;font-size:14px;overflow:hidden}.cdQuestion{padding-bottom:12px;font-size:14px;font-weight:700}.cdQuestionAnswerBucket{height:229px}.cdQuestionAnswerBucket a{text-decoration:none;color:#124C90!important}.cdAnswer{padding-left:10px;padding-bottom:3px}a.cdAnswerBlock,a.cdAnswerBlock:hover,a.cdAnswerBlock:link{display:block;text-decoration:none;color:#333;font-weight:400}.cdAnswerAuthor{color:#666;font-size:12px;margin-top:15px}.cdUnanswered{padding-left:10px;padding-top:5px}.cdSeeAllQuestionsBlock{padding-bottom:20px;font-size:14px;font-weight:700}.cdQuestionAnswerCTA{font-weight:700;padding-top:10px}.cdQuestionLazySeeAll{float:left;padding:4px 0 8px 24px}.cdFailedQuestionMessage{display:none;color:#990D03;padding-bottom:20px}.cdQuestionExamples{padding:0 0 40px 60px}.cdExampleQuestion,.cdForumSep{padding-top:5px;color:#666}.cdRelatedForumsPrompt{color:#EB7E10;font-weight:700}.cdRelatedForums{padding:10px 0 30px 0}.cdUnansweredBlock{float:left;width:365px;height:165px;padding:30px 20px 0 0;font-size:14px;overflow:hidden}#customer_discussions_lazy_load_div{font-family:Arial,'Helvetica Neue',Helvetica,sans-serif!important}.cdQuestionsContainer{padding-left:25px}.cdQuestionAnswerBucket .btn-prim,.customerForumsBucket .btn-prim{background:#e4e1db;background:-moz-linear-gradient(top,#fbcd5e,#fac237,#f7b42a);background:-webkit-gradient(linear,0 0,0 100%,from(#fbcd5e),to(#f7b42a));background:-webkit-linear-gradient(top,#fbcd5e,#fac237,#f7b42a);background:-o-linear-gradient(top,#fbcd5e,#f7b42a);background:-ms-linear-gradient(top,#fbcd5e,#f7b42a);background:linear-gradient(top,#fbcd5e,#f7b42a);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fbcd5e', endColorstr='#f7b42a');border-color:#f7b42a;text-shadow:#FFDD8C 0 1px 0}.cdQuestionAnswerBucket .dboards-btn input.btn-small,.customerForumsBucket .dboards-btn input.btn-small{font-size:12px;font-weight:700;line-height:12px;padding:1px 6px 2px 6px}.cdQuestionAnswerBucket .rounded-standard,.customerForumsBucket .rounded-standard{-moz-border-radius:4px;-webkit-border-radius:4px;border-radius:4px}.cdQuestionAnswerBucket .dboards-btn,.customerForumsBucket .dboards-btn{color:#000;font-weight:700;text-decoration:none;text-align:center;display:inline-block;vertical-align:top;zoom:1;border-style:solid;border-width:1px;-moz-box-shadow:inset 0 -2px 2px rgba(0,0,0,.12);-webkit-box-shadow:inset 0 -2px 2px rgba(0,0,0,.12);box-shadow:inset 0 -2px 2px rgba(0,0,0,.12);cursor:pointer;margin:0;padding:0;outline:0;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none}.cdQuestionAnswerBucket span.dboards-btn input,.customerForumsBucket span.dboards-btn input{display:block;cursor:pointer;background:0 0;border:0}.cdAskButton{float:right}.cdAskQuestionPostBox{padding-top:20px;width:650px}.cdQuestionAnswerBucket .dboards-btn input.btn-small,.customerForumsBucket .dboards-btn input.btn-small{font-size:12px;line-height:14px;padding:1px 6px 2px 6px}.cdInlineAskBoxTitle{font-weight:700}.cdAskQandA{padding-bottom:10px}.askInlineWidgetV2{padding:10px 0 0 25px}.cdAskAnswerBody a:link,.cdAskQandA a:link,.cdAskQuestion a:link,.cdAskSeeAllLink a:link{color:#124C90}.cdAskQuestion{font-weight:700}.cdAskAnswer{margin-bottom:10px;overflow:hidden}.cdAskAnswer,.cdAskAnywayButton,.cdInlineAskQuestionPostBox #cdEmptyQuestionDiv #cdBannedCustomerDiv #cdPottyMouthDiv{padding-top:5px}.cdAskAnswerBody{margin:0 0 10px 21px}.cdAskAnswerTag{float:left}.cdAskSeeAllLink,.cfNoDiscussionsCTA{font-size:13px;font-weight:700;padding-bottom:10px}.cdInlineAskInputBox,.cdInlineAskQuestionPostBox{padding-top:10px;width:710px}.cdInlineAskQuestionPostBox .cdInlineAskQuestionPostBoxText{-moz-border-bottom-colors:none;-moz-border-left-colors:none;-moz-border-right-colors:none;-moz-border-top-colors:none;border-color:#BBB #D0D0D0 #D0D0D0;border-image:none;border-radius:3px 3px 3px 3px;border-style:solid;border-width:1px;font-size:12px;line-height:1.3em;margin-bottom:5px;margin-top:5px;min-height:2.6em;padding:3px 0 3px 5px;resize:none;width:585px}#buybox_feature_div{position:relative}#buyboxTooltip{border:1px solid #5c9ebf}.a-no-js label.a-native-dropdown{display:inline;font-weight:400;padding-right:2px}.rbbHeader .rbbHeaderLink{color:#000}.rbbHeader a:focus{outline:0}.dp-accordion .dp-accordion-row{position:relative}.dp-accordion-row .a-link-normal.rbbHeaderLink:hover{text-decoration:none}#rbbContainer .rbbSection .a-box-inner{padding:0}#rbbContainer .rbbSection{overflow:hidden}.rbbSection.singleUBB #usedBuySection h5{padding-bottom:5px}.dp-accordion .dp-accordion-row{background:-moz-linear-gradient(center top ,#FCFCFC,#F7F7F7) repeat scroll 0 0 transparent;box-shadow:0 1px 0 rgba(255,255,255,.5) inset,0 -1px 0 rgba(255,255,255,.4) inset;cursor:pointer;padding:0 18px 0 45px}.dp-accordion .dp-accordion-row h5{font-weight:400;line-height:41px}.dp-accordion .dp-accordion-row h5 .a-row .a-span-last{line-height:41px}.dp-accordion .dp-accordion-row .a-icon-radio-active,.dp-accordion .dp-accordion-row .a-icon-radio-inactive{left:17px;margin-top:-10px;position:absolute;top:50%}.dp-accordion .dp-accordion-row:hover .a-icon-radio-inactive{background-position:-53px -293px}.dp-accordion .dp-accordion-inner{display:none;margin-top:-.5em}.dp-accordion .dp-accordion-active .dp-accordion-row{background-color:transparent;background-image:none;cursor:default}.dp-accordion .dp-accordion-active .dp-accordion-row h5{font-weight:700}.dp-accordion .dp-accordion-active .dp-accordion-inner{display:block;padding:0 18px 14px}.dp-accordion .unselected .rbbHeader{background-image:-webkit-linear-gradient(top,#fcfcfc,#f7f7f7);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fcfcfc', endColorstr='#f7f7f7', GradientType=0);background-image:-moz-linear-gradient(center top ,#FCFCFC,#F7F7F7)}#oneClickAvailable .a-button.a-button-preorder .a-button-inner i{height:25px!important;width:25px!important;background-position:-5px -5px!important}.usedItemInfo-spacing{margin-bottom:7px}.accessCode-spacing{margin-bottom:16px;line-height:10px}.displayNone{display:none}.ldtimercont{position:relative;height:8px;margin-bottom:2px;font-size:1px}.ldtimercont .statebar{position:absolute;height:4px;width:100%;margin-top:2px;background-color:#ccc}.ldtimercont .progbar{position:absolute;height:4px;background-color:#000;margin-top:2px}.ldtimercont .progbaralert{position:absolute;height:4px;background-color:#c00;margin-top:2px}.ldtimercont .progbarmissed{position:absolute;height:4px;background-color:#999;margin-top:2px}.ldtimercont .progbartick{position:absolute;height:8px;border-right:1px solid #fff}.ldtimercont .progbartickmissed{position:absolute;height:8px;border-right:1px solid #999}.ldtimeleft{position:relative;height:16px;margin-top:0;float:left;font-size:12px;color:#888}.ldtimetxtalert{color:#C00}.gb_box_info{border-color:#bbd3de}.gb_box_error{border-color:#c40000}.gb_box_warn{border-color:#8b6e00}.gb_box_success{border-color:#89cd89}#need-help-deciding .content{margin-left:2px}#need-help-deciding p{margin:12px 0 14px 0}#clicktocallUpdate table,#need-help-deciding .content{font-family:verdana,arial,helvetica,sans-serif}#clicktocallUpdate table{margin-bottom:5px;font-size:13px}.c2c-inline-sprite{background-repeat:no-repeat}#detail-bullets ul,#feature-bullets-btf ul,#technical-data ul{color:#333;font-size:13px;margin-bottom:1px;font-family:verdana,arial,helvetica,sans-serif}#detail-bullets,#technical-data{padding-bottom:10px}#detail-bullets ul li,#technical-data ul li{list-style-type:none}#detail-bullets ul li,#technical-data ul li{margin-bottom:5.5px}#detail-bullets>table,#productDetailsTable{width:auto}#technical-data ul li{margin-bottom:3.5px}#technical-data .caretnext{padding-left:14px}#detail-bullets .content,#technical-data .content{margin-left:0;margin-top:0}#techSpecContent{margin-bottom:8px!important}.a-stretch-square{height:100%;width:100%}.s_chevron{background-position:-30px -40px;width:11px;height:11px}.s_expandChevron{background-position:-40px -60px;width:9px;height:9px}.s_collapseChevron{background-position:-30px -60px;width:9px;height:9px}.s_primeBadge{background-position:-170px -50px;height:13px;width:45px}.cBoxBL,.cBoxBR,.cBoxTL,.cBoxTR{background-repeat:no-repeat;position:absolute;display:block;width:10px;height:10px;z-index:1}.cBox{position:relative;width:100%;margin-bottom:15px}.tanBox{border:1px solid #CCC;border-right:none;border-bottom:none;background-color:#FCFCF3}.tanBox .cBoxTL{background-position:0 -100px}.tanBox .cBoxTR{background-position:-10px -100px}.tanBox .cBoxR{background-color:#CCC}.tanBox .cBoxB{background-color:#CCC}.tanBox .cBoxBL{background-position:0 -110px}.tanBox .cBoxBR{background-position:-10px -110px}.cBoxTL{top:-1px;left:-1px}.cBoxTR{top:-1px;right:-1px}.cBoxR{position:absolute;display:block;width:1px;height:100%;top:-1px;right:-1px}.cBoxBL{bottom:-1px;left:-1px}.cBoxBR{position:absolute;display:block;width:10px;height:10px;z-index:1;bottom:-1px;right:-1px}.cBoxB{position:absolute;display:block;width:100%;height:1px;bottom:-1px}.cBoxInner{padding:9px}.small{font-size:small;font-family:verdana,arial,helvetica,sans-serif}.price{font-family:verdana,arial,helvetica,sans-serif;color:#900}.availGreen{color:#090;font-weight:400;font-size:13px}div.nvffGrey{margin-top:5px;font-size:.85em;color:#66666B}.s_star_0_0{background-position:-95px 0;width:65px;height:13px}.s_star_0_5{background-position:-82px -20px;width:65px;height:13px}.s_star_1_0{background-position:-82px 0;width:65px;height:13px}.s_star_1_5{background-position:-69px -20px;width:65px;height:13px}.s_star_2_0{background-position:-69px 0;width:65px;height:13px}.s_star_2_5{background-position:-56px -20px;width:65px;height:13px}.s_star_3_0{background-position:-56px 0;width:65px;height:13px}.s_star_3_5{background-position:-43px -20px;width:65px;height:13px}.s_star_4_0{background-position:-43px 0;width:65px;height:13px}.s_star_4_5{background-position:-30px -20px;width:65px;height:13px}.s_star_5_0{background-position:-30px 0;width:65px;height:13px}.s_starBig_0_0{background-position:-98px -259px;width:95px;height:18px}.s_starBig_0_5{background-position:-79px -279px;width:95px;height:18px}.s_starBig_1_0{background-position:-79px -259px;width:95px;height:18px}.s_starBig_1_5{background-position:-60px -279px;width:95px;height:18px}.s_starBig_2_0{background-position:-60px -259px;width:95px;height:18px}.s_starBig_2_5{background-position:-41px -279px;width:95px;height:18px}.s_starBig_3_0{background-position:-41px -259px;width:95px;height:18px}.s_starBig_3_5{background-position:-22px -279px;width:95px;height:18px}.s_starBig_4_0{background-position:-22px -259px;width:95px;height:18px}.s_starBig_4_5{background-position:-3px -279px;width:95px;height:18px}.s_starBig_5_0{background-position:-3px -259px;width:95px;height:18px}.swSprite{display:inline-block}.swSprite span{position:absolute;left:-9999px}.availOrange{color:#c60;font-size:13px;font-weight:400}.availScarce{color:#900;font-size:13px;font-weight:400}.scarceInStock{color:#333;font-size:1.04em}.availRed{color:#900;font-size:13px;font-weight:400}#revDivider .a-divider-inner,hr.bucketDivider{background:0 0!important;border-top:1px solid #CCC!important;margin-bottom:-36px!important;height:44px!important;border:0}.a-ie7 #revDivider .a-divider-inner,.a-ie7 hr.bucketDivider,.a-ie8 #revDivider .a-divider-inner,.a-ie8 hr.bucketDivider,.a-ie9 #revDivider .a-divider-inner,.a-ie9 hr.bucketDivider{height:0!important}.a-ie8 #revDivider .a-divider-inner,.a-ie8 hr.bucketDivider,.a-ie9 #revDivider .a-divider-inner,.a-ie9 hr.bucketDivider{margin-bottom:6px!important}.a-ie7 #revDivider .a-divider-inner,.a-ie7 hr.bucketDivider{margin-bottom:0!important}.a-ie7 #revDivider .a-divider-inner,.a-ie7 hr.bucketDivider,.a-ie8 #revDivider .a-divider-inner,.a-ie8 hr.bucketDivider{height:0!important}#ask_lazy_load_div hr,#customer_discussions_lazy_load_div hr,#reviewsDivider{width:100%}.disclaim{font-size:10px;color:#888;margin-top:3px;font-family:verdana,arial,helvetica,sans-serif}.content{margin-top:6.5px;margin-left:25px}#obReplacement_feature_div{zoom:1!important}#promoGrid table{font-size:12px!important}.olp-padding-right{padding-right:18px}#feature-bullets .caretnext{color:#C60;font-size:1.2em;font-weight:700;text-decoration:none;margin-left:4px}.rebatesPopoverIcon{margin-top:6px!important;margin-left:1px!important}.promo-sticker-padding-bottom{padding-bottom:3.25px}#addOnItemHeader h5{color:#3f6998;font-weight:700}#addOnItemHeader .a-divider{color:#3f6998}#addOnItemHeader .a-divider.a-divider-break:after{border-top:1px solid #3f6998}#addon{border-color:#3f6998;border-style:solid none;border-width:1px;margin:21px 0 14px;padding:15px 0 10px;position:relative;width:100%}#addon .icon{left:0;padding-right:10px;position:absolute;top:-10px}.addOnItem-header{background-color:#3F6998!important;border-bottom:0 none!important;border-color:#3F6998 #3F6998 -moz-use-text-color!important;color:#FFF!important}.addOnItem-header:after{border-color:#3F6998 transparent transparent;border-right:8px dashed transparent;border-style:solid dashed dashed;border-width:8px;content:\"\";display:block;font-size:0;height:0;left:125px;line-height:0;margin-left:-8px;margin-top:-3px;position:absolute;width:0}.cpsiaWarning{font-size:13px;font-family:verdana,arial,helvetica,sans-serif;padding-bottom:4px}#cpsiaMainDiv{background-color:#FFFFCD;border:1px solid #E47911;margin:10px 20px!important;padding:6px 6px 4px}.s_alert{background-position:-60px -190px;height:25px;width:25px}#heroQuickPromo_feature_div br{clear:none}#jumpstart .shoveler-pagination{right:30px;top:-28px}#navJumpstartFrame .standalone{line-height:17px!important}#navJumpstartFrame td{vertical-align:middle}#store-disclaimer_feature_div td{padding:1px}#store-disclaimer_feature_div td table td{padding:5px}#store-disclaimer_feature_div p{margin:13px 0;font-family:verdana,arial,helvetica,sans-serif;line-height:14px}#store-disclaimer_feature_div .tiny{font-size:10px}#store-disclaimer_feature_div a{color:#333}#store-disclaimer_feature_div a:hover{color:#C60;text-decoration:none}#wayfinding-breadcrumbs_container{padding:0 16px!important;margin-top:8px!important}#services-widget-2_feature_div ul li{list-style-type:none}#productAlert_feature_div table{width:auto!important}#quickPromoBucketContent{padding-bottom:8px!important}#quickPromoBucketContent .content{margin-left:25px!important;margin-top:0}#quickPromoBucketContent .content ul li{color:#333}.qpUL{font-family:verdana,arial,helvetica,sans-serif}div.unified_widget{margin-bottom:26px}div.unified_widget .headline{color:#E47911;display:block;font-weight:700;font-size:16px}#productDescription .content{margin-top:-13px}#promoGrid .unified_widget.rcmBody{padding-bottom:10px}.productDescriptionWrapper{font-family:verdana,arial,helvetica,sans-serif}#productDescription h2{margin-bottom:0!important}#promoGrid .unified_widget.rcmBody{padding-bottom:10px}.productDescriptionWrapper{font-family:verdana,arial,helvetica,sans-serif;margin-bottom:13px}#productDescription .aplus .centerImage,#productDescription .aplus .leftImage,#productDescription .aplus .rightImage{margin-bottom:1em;margin-top:0;text-align:center;vertical-align:top}#productDescription .aplus .leftImage{margin-right:15px;float:left;clear:left}#productDescription .aplus .rightImage{margin-left:15px;float:right;clear:right}#productDescription .aplus .imageCaption{clear:both;padding:.5em .5em 0 .5em;font-size:.846em;display:block}#productDescription .aplus table.data{border-collapse:collapse;margin-bottom:25px}#productDescription .aplus table.data th{font-weight:700;background:#f7f7f7;border-style:solid;border-color:#ccc;border-width:0 0 1px 1px}#productDescription .aplus table.data td{border-left:1px solid #CCC;border-bottom:1px dotted #CCC}#productDescription .aplus table.data td,#productDescription .aplus table.data th{padding:3px 10px;text-align:left}#productDescription .aplus table.data tfoot{font-style:italic}#productDescription .aplus table.data caption{background:#eee;font-size:.8125em}#productDescription .aplus table.data tr td:first-child,#productDescription .aplus table.data tr th:first-child{border-left-width:0}#productDescription .aplus .center{text-align:center}#productDescription .aplus .right{text-align:right}#productDescription .aplus .fourth-col,#productDescription .aplus .half-col,#productDescription .aplus .one-col,#productDescription .aplus .sixth-col,#productDescription .aplus .third-col,#productDescription .aplus .three-fourth-col,#productDescription .aplus .two-third-col{float:left;margin-right:1.676%;overflow:hidden}#productDescription .aplus .last{margin-right:0}#productDescription .aplus .sixth-col{width:15.080%}#productDescription .aplus .fourth-col{width:23.4637%}#productDescription .aplus .third-col{width:31.8436%}#productDescription .aplus .half-col{width:48.6034%}#productDescription .aplus .two-third-col{width:65.3631%}#productDescription .aplus .three-fourth-col{width:73.743%}#productDescription .aplus .one-col{width:98.8827%;margin-right:0}#productDescription .aplus .last{margin-right:0}#productDescription .aplus{width:100%;min-width:895px}#productDescription ul{color:#000}#productDescription .aplus table.data td{border-left:1px solid #CCC;border-bottom:1px dotted #CCC}#productDescription .aplus h4{font-weight:700;color:#C60}#productDescription .aplus h4,#productDescription .aplus h5{font-size:12px;font-family:verdana,arial,helvetica,sans-serif}#productDescription .aplus p{font-weight:400;color:#000}#productDescription h3.productDescriptionSource{clear:left;color:#333;font-size:16px;font-weight:400;margin:11px 0 6px -15px}#productDescription .content{margin-top:-13px}#promoGrid .unified_widget.rcmBody{padding-bottom:10px}#productDescription .productDescriptionWrapper ul li{margin:0 0 0 20px}#productDescription .aplus .break{clear:both;height:0;font-size:0}.productDescriptionWrapper table tr td{padding-top:0}#cf-qa-cel .cdUnanswered{padding-top:0}#cf-qa-cel .cdSeeAllQuestionsBlock{padding-top:10px}.tsTable{margin-bottom:8px!important}#AUI_A9AdsMiddleBoxTop h2,#customerReviewsHeader,#detailpage-click2call-header,#hmdFormDiv h2,#need-help-deciding .secHeader,#pf-fitment-wrapper h2,#revMHLContainer h2,#reviewBucketHeader,#rhfMainHeading,#sponsored-products-dp_feature_div h2,.bucket h2,.cdInlineAskBoxTitle,.cdQuestionAnswerHeader,.pa_componentTitleTest h2,h2.amtcmp,h2.featureHeading{color:#C60!important;font-size:16px!important;font-family:verdana,arial,helvetica,sans-serif!important}.advice-quotes-histogram td{border:1px solid #fff;line-height:14px;padding:0}#hmdFormDiv table{font-size:13px;font-family:verdana,arial,helvetica,sans-serif}#hmdFormDiv td{padding-top:1px;padding-bottom:1px}.noLinkDecoration{top:-14px!important}#dp .a-container{margin-top:20px;padding-top:0;min-width:996px}.a-popover-trigger:hover{text-decoration:none}#ftMessage.buying{font-size:13px;margin:6px 0 10px;padding:0}select{border:1px solid #DDD;border-radius:4px 4px 4px 4px;padding:3px}.addonBadgeSmall{background-position:-88px -849px;background-repeat:no-repeat;height:16px;width:73px;display:inline-block}.dpSprite{vertical-align:middle;display:inline-block}.dpSprite span{left:-9999px;position:absolute}.s_add2WishList{background-position:0 -190px;width:160px;height:22px}.s_add2WishListLeft{background-position:0 -220px;width:137px;height:22px}.s_add2WishListRight{background-position:-137px -220px;width:23px;height:22px}.s_add3ToCart{background-position:0 -400px;width:138px;height:22px}.s_addBothToCart{background-position:0 -430px;width:124px;height:22px}.s_addToCart{background-position:0 -460px;width:98px;height:22px}#importantInformation{padding-bottom:10px}#AUI_A9AdsMiddleBoxTop ul li{color:#db9234}#AUI_A9AdsMiddleBoxTop{padding-bottom:0!important}#AUI_A9AdsWidgetAdsWrapper table{margin-left:27px;font-family:verdana,arial,helvetica,sans-serif}#A9AdsMiddleBoxTop .SponsoredLinkSmall{font:10px Verdana,Arial,Helvetica,sans-serif}#A9AdsMiddleBoxTop table a.a-size-medium b{font-size:13px;font-family:verdana,arial,helvetica,sans-serif;text-decoration:underline}.SponsoredFeedbackDiv{font-size:11px}#ShowFeedbackLinkDiv a{text-decoration:underline}div.comparison_sprt{background-repeat:no-repeat;height:50px;width:75px;float:left}table.amtcmp td,table.amtcmp th{font-size:13px}td.amtcmissing{color:#999}tr.amtcmp:hover td,tr.amtcmp:hover th{border-top:1px solid #999;border-bottom:1px solid #999}tr.amtcmp th{background:#f7f7f7;font-weight:400}tr.amtcmp td,tr.amtcmp th{border-top:1px dotted #ccc}span.amtchelp{padding-right:15px}table.amtcmp th{padding:5px 15px 5px 5px}table.amtcmp{margin:10px 10px 0 10px}table.amtcmp td{padding:4px 12px 4px 12px}td.amtcthis{background:#ffd}.amtcmp_info{position:absolute;top:-9999px}.s_add2CartSm{background-position:-170px -70px;width:76px;height:17px}tr.amtcmp td{border-left:1px solid #ddd;width:21%}.amtcmp .swSprite{display:inline-block;vertical-align:middle}.amtcmp.crAvgStars{font-size:11px;line-height:17px}tr.amtcbtm td,tr.amtcbtm th{background:0 0;border-top:1px dotted #ccc;line-height:29px}p.amtcmessage{margin:15px 0 7px 15px!important}.pa_footerRight{font-size:11px!important;margin-bottom:-20px!important}.a-ie7 #wishlistButtonStack div.a-button-group .a-button .a-button-inner{width:180px}.a-ie7 #wishlistButtonStack div.a-button-group #wishListDropDown.a-button .a-button-inner{width:23px}.a-ie7 #moreBuyingChoices_feature_div span.a-list-item div.a-section{float:left}.a-ie7 #moreBuyingChoices_feature_div span.a-list-item div.a-row{float:left}.a-ie7 #moreBuyingChoices_feature_div span.a-list-item{display:inline-block}.a-ie7 #AUI_SlDiv_0,.a-ie8 #AUI_SlDiv_0{height:60px!important}.a-ie7 #AUI_A9AdsWidgetAdsWrapper table ul li,.a-ie8 #AUI_A9AdsWidgetAdsWrapper table ul li{display:inline-block;width:100%;margin-right:30px!important}.a-ie7 #AUI_A9AdsWidgetAdsWrapper table ul,.a-ie8 #AUI_A9AdsWidgetAdsWrapper table ul{margin-bottom:6px!important}.a-ie8 #reports-ads-abuse{margin-top:25px!important}.a-ie7 #reports-ads-abuse{margin-top:40px!important}#imageBlock .item.selected.noflash{filter:alpha(opacity=40);-moz-opacity:.4;opacity:.4}#imageBlock .noFlashContent{left:0;position:absolute;top:50%;z-index:101;display:none;line-height:30px;margin-top:-15px}#imageBlock #noFlashContent{margin:50% 15px;position:absolute;z-index:10;padding-top:8px;padding-bottom:8px;display:block;top:0;left:0}#imageBlock ul.list li{margin:0}#imageBlock .canvas .selected{display:block!important;visibility:visible!important}#imageBlock .canvas .item,#imageBlock .hide,#imageBlock .template{display:none}#imageBlock .variationUnavailable{position:relative;text-align:center;display:none}#imageBlock .variationUnavailable .inner{position:absolute;width:100%;top:200px;left:0}#imageBlock .maintain-height,#imageBlock li.maintain-height div,#imageBlock li.maintain-height span{height:100%;display:block}#main-image-container{max-height:700px!important;position:relative}#imageBlock .stretch-vertical{width:auto!important}#imageBlock .stretch-horizontal{height:auto!important}#imageBlock .chromeful-video .centerslate img{width:100%}#imageBlock .list .chromeful-video div{margin:auto;padding:0;float:none!important}#imageBlock .centerslate{display:table-cell}#altImages li.item img{max-width:none!important}#imageBlock .holder{position:absolute;top:0;left:0}#imageBlock #canvasCaption{display:block;min-height:20px}#imageBlock .holder.video video{overflow:hidden!important}#imageBlock .chromeless-video .holder.video{z-index:2}#imageBlock .chromeless-video img{position:absolute;top:0;left:0;z-index:4}#imageBlock #main-image-container .a-declarative{display:table;width:100%}#imageBlock #main-image-container .imgTagWrapper{display:table-cell;vertical-align:middle}#detailImg{max-width:none}#imageBlock #video-outer-container{position:absolute;top:0;left:0;width:100%;height:100%;z-index:-1}#imageBlock #main-video-container{width:100%;height:100%;margin:auto}#imageBlock #main-video-container.chromeful-container{margin-top:4px;padding-left:19px}#imageBlock #main-video-container #canvasCaption{margin-top:10px}#imageBlock #main-video-container video{max-width:100%}#altIngressSpan{display:table;text-align:center;font-size:16px;color:#000}#altIngressText{display:table-cell;vertical-align:middle}.bucketDivFloat{float:left;padding-top:15px}.shuttleTextTop{color:#777;font-family:verdana,arial,helvetica,sans-serif;font-size:18px;font-weight:700;margin-left:10px}.shuttleTextBottom{color:#777;font-family:verdana,arial,helvetica,sans-serif;font-size:15px;margin-left:10px;margin-top:-2px}.shuttleGradient{background-color:#DDD;background-position:center bottom;background-repeat:repeat-x;float:left;height:43px;line-height:normal;position:relative;text-align:left;width:100%}#amt_services_widget ul li{list-style-type:none!important}#amt_services_widget ul{height:210px}#amt_services_widget div{-moz-box-sizing:content-box!important}#availability_feature_div .availabilityHelpLink{color:#000}#mbc li{cursor:default}#mbc li:hover span.mbcMerchantName{color:#e47911}#mbc .mbc-offer-row:hover span.mbcMerchantName{color:#e47911}#mbc .mbc-addon-small{font-size:9px}#hero-quick-promo img{margin-right:10px}#hero-quick-promo .qpHeadline,#hero-quick-promo h2{font-size:16px;line-height:22px}#hero-quick-promo{margin-bottom:0!important}#hero-quick-promo table{margin-bottom:0}#getItBy .tiny{color:#000!important;font-size:12px;padding:0 5px 0 0!important}#getItBy .oneClickSwatchOuter{cursor:pointer;font-size:12px;margin:2px;outline-style:none}#getItBy .oneClickSwatchAvailable{border-radius:4px;-moz-border-radius:4px;width:54px!important;height:46px!important;border:1px solid #d0d0d0;padding:1px;outline-style:none}#getItBy .oneClickSwatchHover{border-radius:4px;-moz-border-radius:4px;width:54px!important;height:46px!important;border:1px solid #b7b7b7;padding:1px;outline-style:none}#getItBy .oneClickSwatchSelect{width:54px!important;height:46px!important;border-radius:4px;-moz-border-radius:4px;background-color:#fef7f1;border:1px solid #e47911;outline-style:none}#getItBy .oneClickSwatchInnerBorder{color:#000;padding:5px 2px 2px 1px;text-align:center}#getItBy .oneClickFastTrackHover,#getItBy .oneClickFastTrackSelect{font-size:13px;text-align:center;outline-style:none}#getItBy .GIBShipStringOrange{color:#090;font-size:13px;font-weight:700;text-align:center}#getItBy .GIBShipStringOrange~*{text-align:center}#getItBy table{width:auto}#wishlist-dropdown-content .s_plus{background-position:-140px -540px;background-repeat:no-repeat;background-attachment:scroll;background-color:transparent}#wishlist-dropdown-content{background-color:#f0f0f0;border:1px solid #a6a6a6}#wishlist-dropdown-content .ap_content{padding:0!important}#wishlist-dropdown-content .wl-pop-footer,#wishlist-dropdown-content .wl-pop-header,#wishlist-dropdown-content .wl-pop-left,#wishlist-dropdown-content .wl-pop-right{display:none}#wishlist-dropdown-content .wl-pop-wrapper{position:static;width:100%!important}#wishlist-dropdown-content .wl-list-default{color:#333}#wishlist-dropdown-content .wl-create-text,#wishlist-dropdown-content .wl-list-name{color:#333;font-size:11px}#wishlist-dropdown-content .wl-list-type{color:#878787;font-size:11px;margin-right:5px}#wishlist-dropdown-content .wl-create-link{background-color:#e2e2e2}#wishlist-dropdown-content .wl-create-button,#wishlist-dropdown-content .wl-create-inner,#wishlist-dropdown-content .wl-list-button,#wishlist-dropdown-content .wl-list-inner{border:0}#wishlist-dropdown-content .s_plus{display:inline-block;height:8px;vertical-align:middle;width:8px}#wishlist-dropdown-content .s_wlListGradient{background-image:none}#wishlistButtonStack .a-button .a-button-text{text-align:left}.wl-pop-hide{display:none}.wl-pop-body{height:100%;position:relative}.wl-pop-body .wl-pop-left{background-attachment:scroll;background-repeat:repeat-y;height:100%;left:0;position:absolute;top:0;width:5px}.wl-pop-sprited .wl-pop-body .wl-pop-left{background-position:0 top}.wl-pop-sprited .wl-pop-body .wl-pop-right{background-position:-5px top}.wl-pop-body .wl-pop-right{background-attachment:scroll;background-repeat:repeat-y;height:100%;position:absolute;right:0;top:0;width:5px}.wl-pop-footer,.wl-pop-header{font-size:0;line-height:0;position:relative;width:100%;overflow:hidden}.wl-pop-footer *{height:8px}.wl-pop-header *{height:4px}.wl-pop-header .wl-pop-left{background-attachment:scroll;background-repeat:no-repeat;left:0;position:absolute;top:0;width:8px}.wl-pop-sprited .wl-pop-header .wl-pop-left{background-position:0 -10px}.wl-pop-header .wl-pop-right{background-attachment:scroll;background-repeat:no-repeat;position:absolute;right:0;top:0;width:8px}.wl-pop-sprited .wl-pop-header .wl-pop-right{background-position:-10px -10px}.wl-pop-footer .wl-pop-middle,.wl-pop-header .wl-pop-middle{background-attachment:scroll;background-repeat:repeat-x;margin-right:8px;margin-left:8px}.wl-pop-sprited .wl-pop-header .wl-pop-middle{background-position:0 0}.wl-pop-footer .wl-pop-left{background-attachment:scroll;background-repeat:no-repeat;left:0;position:absolute;top:0;width:8px}.wl-pop-sprited .wl-pop-footer .wl-pop-left{background-position:0 -20px}.wl-pop-footer .wl-pop-right{background-attachment:scroll;background-repeat:no-repeat;position:absolute;right:0;top:0;width:8px}.wl-pop-sprited .wl-pop-footer .wl-pop-right{background-position:-10px -20px}.wl-pop-sprited .wl-pop-footer .wl-pop-middle{background-position:0 -30px}.wl-pop-wrapper{left:5px;max-height:191px;overflow-x:hidden;overflow-y:auto;position:relative}* html .wl-pop-wrapper{height:expression(this.scrollHeight>183 ? \"184px\":\"auto\");max-height:184px}.wl-pop-wrapper form{display:inline}.wl-pop-wrapper a.wl-create-link,.wl-pop-wrapper a.wl-list-link{cursor:pointer;display:block;outline:0;text-decoration:none}.wl-pop-wrapper a.wl-create-link{background-color:#e5e5c1}.wl-pop-wrapper a.wl-create-link:hover,.wl-pop-wrapper a.wl-list-link:hover{background-color:#fff;background-image:none}.wl-create-button,.wl-create-button-last,.wl-list-button,.wl-list-button-last{font-family:arial;height:23px;overflow:hidden;line-height:23px}.wl-create-button{border-color:#9d9d74;border-style:solid;border-width:0 0 1px 0}.wl-list-button{border-color:#9d9d74;border-style:solid;border-width:0 0 1px 0}.wl-list-button-last{border-color:#79784a;border-style:solid;border-width:0 0 1px 0}.wl-create-inner,.wl-list-inner{border-style:solid;border-width:1px 0 0 1px}.wl-list-inner{border-color:#fff}.wl-create-inner{border-color:#f4f4e1}.wl-list-type,.wl-list-type-break{color:#9d9d74;float:right;font-size:9px;margin-right:2px;max-height:20px;overflow:hidden;text-align:right}.wl-list-type-break{line-height:9px;margin-top:2px}.wl-list-name-wrapper{height:23px;margin-left:2px;overflow:hidden;white-space:nowrap;width:75px;display:inline}.wl-list-name{color:#004b91;font-size:10px;margin-left:3px}.wl-list-default{color:#004b91;font-size:10px}.wl-create-text{color:#004b91;font-size:10px;margin-left:3px}.s_add2WishListLeft,.s_add2WishListRight{-webkit-appearance:none;-webkit-border-radius:0}#wishListDropDown .a-button-text{padding:0}.s_wlListGradient span{left:0!important;position:static!important}#ratings_id ul{color:#000}.a-ie7 #moreBuyingChoices_feature_div .sdpText{float:left}.a-lt-ie8 #centerCol{display:inline-block}hr.bucketDivider{clear:left}.wishlist-outside-buybox{padding:0 18px}.pa_adID{padding:6px 2px;top:0;left:0;width:100%;text-decoration:none;border-top:1px solid #6daee1;background-color:#f0f7fc;background-color:rgba(240,247,252,.8);border-bottom:1px dotted #6daee1;font-size:12px;position:absolute}.pa_adID a{text-decoration:none;display:block;line-height:12px}.pa_SAP-TabSet .pa_SAP-TabOn{border-bottom:1px solid #363636;border-left:1px solid #363636;border-right:1px solid #fff;border-top:1px solid #363636;margin:-1px 0 1px;padding:0;width:274px}.pa_SAP-Form{background-color:#FFF;border:1px solid #363636;display:inline;float:left;margin:0 0 6px 273px;padding:6px 10px 10px;width:425px;height:370px}.pa_SAP-TabSet{margin:0;padding:1px 0 0;position:absolute;width:210px}.pa_SAP-Form .pa_SAP-Issue .pa_SAP-IssueLabel{font-weight:700;margin:0;padding:0 3px 0 0}.pa_SAP-Offer .pa_offerImg img{border:none;height:44px;margin:0;padding:0;width:44px}.ap_body .ap_left,.ap_popover_sprited .ap_body .ap_left-arrow{width:17px;height:100%;position:absolute;top:0;left:-17px;background-attachment:scroll;background-repeat:repeat-y}.pa_SAP-Form .pa_SAP-IssueList{float:left;margin:8px 0 0;padding:0;width:220px}.pa_SAP-Form .pa_SAP-Title{color:#E47911;font-size:11px;font-weight:700;margin:0;padding:0}.pa_SAP-Form .pa_SAP-Issue{font-size:10px;margin:0;padding:0}.pa_SAP-Form .pa_SAP-Issue input{float:left;margin:0 1px 6px 0;padding:0;width:20px}.pa_SAP-Form .pa_SAP-Issue .pa_SAP-IssueCopy{margin:0 0 6px 6px;padding:0}.pa_SAP-Form .pa_SAP-Comment textarea{font-family:verdana,arial,helvetica,sans-serif;font-size:10px;height:180px;margin:3px 0 10px;padding:3px;width:175px}.pa_SAP-Form .pa_SAP-IssueListSecondary{border-top:1px solid #acacac;display:block;float:left;margin:3px 0 0;padding:6px 0 0;width:auto}.pa_SAP-Offer .pa_title{display:block;font-size:10px;font-weight:400;height:28px;line-height:13px;margin:0 0 0 45px;overflow:hidden;padding-left:4px;padding-right:3px}.pa_SAP-Offer .pa_offerDetails{display:inline;margin:0 0 0 2px;padding:0}.pa_SAP-Offer{margin:0;padding:4px 0 4px 2px}.pa_SAP-Form .pa_SAP-Comment{float:right;font-size:10px;font-weight:700;margin:8px 5px 0 0;padding:0;width:170px}.pa_SAP-TabOn .pa_offerImg{display:inline}.pa_formNav{margin-left:260px}.pa_formNav li{list-style-type:none;display:inline-block}.pa_SAP-Offer .pa_offerImg img{float:left}.pa_offerVertical{position:relative;margin:0 10px 0 0;padding:0}#snsPromo_feature_div hr.a-spacing-top-base{display:none}.s_preorderThis{background-position:0 -740px;height:22px;width:132px}.s_preorderAll3{background-position:0 -680px;height:22px;width:160px}.s_preorderBoth{background-position:-710px;height:22px;width:141px}.autorip_logo_small{background:url(http://g-ec2.images-amazon.com/images/G/01/common/sprites/sprite-autorip-icon._V338213240_.png) no-repeat transparent!important;background-position:0 0;width:18px;height:19px}#purchase-sims-feature .shoveler .shoveler-content .shoveler-cell .byline{color:#000}#albumTrackList table td{padding:0}#albumTrackList table table td{padding:4px;vertical-align:inherit}#albumTrackList table:first-of-type table td{padding:0}#albumTrackList table{border-collapse:separate;margin-bottom:0}#musicTracksFeature table{width:auto}#musicTracksFeature img.icon{display:none}#musicTracksFeature .sampleTracksHeader th{padding-top:1.5em!important}#musicTracksFeature table:last-child{margin-bottom:10px!important}#productAlert_feature_div .headline,#productAlert_feature_div .qpHeadline{color:#333;font-size:16px;font-weight:400;line-height:22px;margin:0;padding-bottom:4px}#productAlert_feature_div{display:table}.bucket .content ul{color:#333}.medSprite{display:-moz-inline-box;display:inline-block;margin:0;padding:0;position:relative;overflow:hidden;vertical-align:middle}.medSprite span{position:absolute;left:-9999px}.s_medVHS{background-position:0 0;width:35px;height:18px}.s_medDVD{background-position:-40px 0;width:35px;height:19px}.s_medHDDVD{background-position:0 -30px;width:35px;height:12px}.s_medBluRay{background-position:-40px -30px;width:34px;height:16px}.s_medDVDR{background-position:-40px 0;width:35px;height:26px}.s_medPS{background-position:0 -100px;width:20px;height:20px}.s_medPS2{background-position:-20px -100px;width:20px;height:20px}.s_medPSP{background-position:-40px -100px;width:20px;height:20px}.s_medPS3{background-position:-60px -100px;width:20px;height:20px}.s_medGB{background-position:0 -120px;width:20px;height:20px}.s_medGBAdv{background-position:-20px -120px;width:20px;height:20px}.s_medDS{background-position:-40px -120px;width:20px;height:20px}.s_medN64{background-position:0 -140px;width:20px;height:20px}.s_medGamecube{background-position:-20px -140px;width:20px;height:20px}.s_medWii{background-position:-40px -140px;width:20px;height:20px}.s_medXbox{background-position:0 -160px;width:20px;height:20px}.s_medXbox360{background-position:-20px -160px;width:20px;height:20px}.s_medDreamcast{background-position:-20px -200px;width:20px;height:20px}.s_medLinux{background-position:-40px -200px;width:20px;height:20px}.s_medVita{background-position:-81px -119px;width:20px;height:20px}.s_med3ds{background-position:-61px -119px;width:20px;height:20px}.s_medUMD{background-position:-80px 0;width:38px;height:20px}.s_medG{background-position:0 -60px;width:12px;height:11px}.s_medPG{background-position:-20px -60px;width:21px;height:11px}.s_medPG13{background-position:-50px -60px;width:35px;height:11px}.s_medR{background-position:-90px -60px;width:12px;height:11px}.s_medNC17{background-position:0 -80px;width:37px;height:11px}.s_medX{background-position:-40px -80px;width:13px;height:11px}.s_medNotRated{background-position:-60px -80px;width:68px;height:11px}.floatOnVgRating{float:left}.bylinePipe{float:left;padding-left:4px;padding-right:4px}#platformInformation_feature_div .bylinePipe{float:right}#textTrackList table{width:auto}.navFooterLinkCol ul li{list-style-type:none}div.content form{margin:0}.burj #imageBlock{margin-bottom:-9px;overflow:hidden}.burj #imageBlock_feature_div{margin-top:26px}.burj #imageBlock #video-canvas-caption #canvasCaption{display:none}.a-lt-ie9 .burj #imageBlock #main-image-container .imgTagWrapper img{height:auto!important;width:auto!important}html[dir=rtl] div.centerColAlign{margin-right:270px}#ppd #leftCol{position:sticky;position:-webkit-sticky;top:4px;height:100%}#leftCol{float:left}@supports (-ms-ime-align:auto){html[dir=rtl] #ppd #leftCol{position:relative}}.airy-container-bottom,.airy-fullscreen,.airy-screen-size-toggle{transform:translate3d(0,0,0)!important;-webkit-transform:translate3d(0,0,0)!important}.centerColAlign{margin-right:270px}.centerColAlign .a-row:after,.centerColAlign ol.a-horizontal:after,.centerColAlign ul.a-horizontal:after{clear:none!important}#hover-zoom-end{clear:left}#rightCol{float:right;width:244px;margin-left:20px}#prodDetails .dpSprite{margin-bottom:6px}#prodDetails{width:100%}#prodDetails .wrapper,#prodDetails td{color:#333;font-family:Arial}#prodDetails h2{margin:3px 0 7px 0;color:#C60!important;font-size:16px!important;font-family:verdana,arial,helvetica,sans-serif!important}#prodDetails .wrapper{padding-top:7px;display:block}#prodDetails table.pd{width:100%}#prodDetails .secHeader{border-bottom:1px solid #CCC;padding:0 0 7px 10px;font-size:16px}#prodDetails .col1{width:50%;float:left}#prodDetails .col2{width:50%;float:right}#prodDetails .col1 .section{padding:0 20px 16px 0}#prodDetails .col2 .section{padding:0 0 16px 20px}#prodDetails .pdTab{margin-left:7px;width:100%;display:none}#prodDetails .pdPM{float:left;padding:2px 0 0 0}#prodDetails .pdSN{padding-left:4px}#prodDetails .attrG{clear:both;border-top:1px dotted #999}#prodDetails a:link{font-family:Arial;text-decoration:none}#prodDetails .firstColumnEmpty{float:left}#prodDetails .content{color:#333;font-size:12px;line-height:16px;margin:10px 0 0 12px}#prodDetails .CNlocale .content{font-size:13px}#prodDetails .content td{font-size:12px}#prodDetails .CNlocale .content td{font-size:13px}#prodDetails .pdSpriteMinus{background-position:-118px -770px}#prodDetails .pdSpritePlus{background-position:-98px -770px}#prodDetails .pdSprite{display:inline-block;overflow:hidden;position:static;height:11px;width:11px}.pdSprite span{left:-9999px;position:absolute}#prodDetails .pdSection a:link,#prodDetails .pdSection a:visited{color:#333}#prodDetails .pdSection{padding:7px 0}#prodDetails .fSec{padding-top:0}#prodDetails table{table-layout:fixed}#prodDetails #weeeLogo{table-layout:auto}#prodDetails .col1 td,#prodDetails .col2 td{padding:3px 1px 3px 10px;border-top:1px dotted #ccc;line-height:18px}#prodDetails #weeeLogo td{border-top:medium none}#prodDetails table td.label{background-color:#F5F5F5;width:35%;color:#666;vertical-align:top}#prodDetails .attrG table{width:97%}#prodDetails .attrG ul li{margin:0}#prodDetails .content a{font-weight:400}#prodDetails .col1 td.lAttr{line-height:0;margin:0;padding:0}.pdClearfix{display:inline-lock}.pdClearfix:after,.pdClearfix:before{clear:both;content:\".\";display:block;height:0;visibility:hidden;font-size:0;zoom:1}#prodDetails .pdFeatures{font-size:14px;list-style-type:disc;margin-left:25px}#prodDetails #wnsPostData{display:none}#prodDetails .collapseFeature{display:none}#prodDetails .expLink{float:right;font-size:12px;line-height:16px;margin:6px 0 0 6px}#prodDetails .expLink:visited{text-decoration:none}#prodDetails ul li{list-style-type:none!important;margin-left:-5px!important}#prodDetails #averageCustomerReviewCount,#prodDetails #averageCustomerReviewStars{display:inline}#prodDetails #SalesRank ul.zg_hrsr{margin-left:6px}#prodDetails #SalesRank ul li span.zg_hrsr_ladder,#prodDetails #SalesRank ul li span.zg_hrsr_rank,#prodDetails .wrapper,#prodDetails td{color:#333}#rhf{color:#C60}#rviColumn .byline{color:#666}#rhf_upsell_div .rating-stars a,#rhf_upsell_div .reason-text,#rviColumn .byline{font-size:11px;font-family:verdana,arial,helvetica,sans-serif}#rhf_upsell_div .reason-text{padding-top:3px}#rhf_upsell_div .asinReviewsSummary img{margin-top:2px}#rhf_shvl_div tr td b a,#rhf_upsell_div .shoveler-pagination{font-size:13px}#finderItFitsWidget ul li{margin:0;padding:0}#finderBoxTop{background-repeat:repeat-x;background-position:0 -15px;clear:both}#finderBoxTopRight{background-repeat:no-repeat;background-position:right -30px}#finderBoxTopLeft{background-repeat:no-repeat;background-position:0 0}#finderBoxTop,#finderBoxTop div{font-size:1px;height:15px}#finderBoxBottom{background-repeat:repeat-x;background-position:0 -5px}#finderBoxBottomRight{background-repeat:no-repeat;background-position:right -10px}#finderBoxBottomLeft{background-repeat:no-repeat;background-position:0 0}#finderBoxBottom,#finderBoxBottom div{font-size:1px;height:5px}#finderBoxRightBorder{background-repeat:repeat-y;background-position:top right}#finderBoxLeftBorder{background-repeat:repeat-y;background-position:top left}#finderBoxRightBorder{padding-right:5px}#finderBoxLeftBorder{padding-left:5px}#finderContent{background-color:#ffd;padding:0 8px 4px}.finder-no{color:#900;font-weight:700}.finder-yes{color:#090;font-weight:700}.finder-device-match .green{color:#090}.finder-device-match .red{color:#900}.finder-device-match strong{font-weight:700}#finderItFitsWidget{margin-top:10px}#finderItFitsWidget.finder-js{width:294px}#finderDynamicContent h2 img{margin-bottom:-4px}#findDevicePanel,#findDevicePanel.showing-found-device #finderPanel,#finderDynamicContent,#finderItFitsWidget.finder-js #finderNoJSContent,#finderMyDevicesPanel,#foundPanel{display:none}#findDevicePanel.showing-found-device #foundPanel,#finderItFitsWidget.finder-js #finderDynamicContent,#finderItFitsWidget.showing-finder #findDevicePanel,#finderItFitsWidget.showing-my-devices #finderMyDevicesPanel{display:block}#finderItFitsWidget h2{font-size:12px;margin:0 0 6px}#finderItFitsWidget label{clear:left;float:left;display:block;width:60px}#finderItFitsWidget .finder-dd{float:left;width:124px;margin-bottom:4px}.finder-device-match{background-color:#fff;border:1px solid #cbccba;padding:6px 8px;font-size:11px}.finder-device-title{font-weight:700}.finder-device-match .product-image{float:left;margin-right:8px}.finder-device-match .finder-carat-link{margin-left:55px}#finderMyDevicesPanel .finder-secondary-device{display:none;margin-top:10px}#finderMyDevicesPanel.show-more-devices .finder-secondary-device{display:block}#finderMyDevicesPanel.show-more-devices #finderHideMoreDevicesLink,#finderShowMoreDevicesLink{display:block}#finderHideMoreDevicesLink,#finderMyDevicesPanel.show-more-devices #finderShowMoreDevicesLink{display:none}#finderShowMoreDevicesLink{background-repeat:no-repeat;background-position:-30px 3px;padding-left:10px}#finderHideMoreDevicesLink{background-repeat:no-repeat;background-position:-30px -14px;padding-left:10px}#finderMoreDevicesContainer,#finderShowMyDevicesContainer{border-top:1px solid #cbccba;padding-top:2px;margin-top:6px}.finder-carat-link{margin-top:4px;font-size:10px}.finder-carat{color:#C60;font-weight:700;margin-right:2px}#finderUpdateButton img{background-repeat:no-repeat;background-position:0 0;width:29px;height:17px;margin-left:8px;margin-top:2px;border:0}#finderUpdateButton.disabled img{background-position:0 -17px}#finderItFitsWidget.finders-hero-quick #finderContent{background-color:#fff;padding:0}#finderNoJSContent img{float:left;margin-right:11px}#finderNoJSContent .finder-small-title{color:#C60;font-weight:700;margin:0}#finderItFitsWidget .ie h2{width:100%;padding-bottom:4px}.ie #finderUpdateButton{margin-top:-28px;zoom:1}#finderItFitsWidget.cBox #finderContent{background-color:transparent;padding:9px 13px}.finders-clearfix{clear:both;height:0;font-size:0;line-height:0}#finderItFitsWidget .finder-dd{float:left;margin-bottom:4px;width:124px}#finderContent{display:inline-block}#finderUpdateButton{position:relative;left:210px;bottom:32px}#finderItFitsWidget ul li{margin:0;padding:0}#finderContent{background-color:#ffd;padding:0 8px 4px}#finderItFitsWidget.finders-hero-quick #finderContent{background-color:#fff;padding:0}.finder-no{color:#900;font-weight:700}.finder-yes{color:#090;font-weight:700}#finderNoJSContent img{float:left;margin-right:11px}#finderNoJSContent .finder-small-title{color:#C60;font-weight:700;margin:0}#finderItFitsWidget .ie h2{width:100%;padding-bottom:4px}.ie #finderUpdateButton{margin-top:-28px;zoom:1}#finderItFitsWidget.cBox #finderContent{background-color:transparent;padding:9px 13px}.finders-clearfix{clear:both;height:0;font-size:0;line-height:0}#finderMoreDevicesContainer,#finderShowMyDevicesContainer{border-top:1px solid #cbccba;padding-top:2px;margin-top:6px}.finder-carat-link{margin-top:4px;font-size:10px}.finder-carat{color:#C60;font-weight:700;margin-right:2px}#finderItFitsWidget .finder-dd{float:left;width:124px;margin-bottom:4px}.finder-device-match{background-color:#fff;border:1px solid #cbccba;padding:6px 8px;font-size:11px}.finder-device-title{font-weight:700}.finder-device-match .product-image{float:left;margin-right:8px}.finder-device-match .finder-carat-link{margin-left:55px}#finderMyDevicesPanel .finder-secondary-device{display:none;margin-top:10px}#finderMyDevicesPanel.show-more-devices .finder-secondary-device{display:block}#finderMyDevicesPanel.show-more-devices #finderHideMoreDevicesLink,#finderShowMoreDevicesLink{display:block}#finderHideMoreDevicesLink,#finderMyDevicesPanel.show-more-devices #finderShowMoreDevicesLink{display:none}#findDevicePanel,#findDevicePanel.showing-found-device #finderPanel,#finderDynamicContent,#finderItFitsWidget.finder-js #finderNoJSContent,#finderMyDevicesPanel,#foundPanel{display:none}#finderPanel{height:90px}#findDevicePanel.showing-found-device #foundPanel,#finderItFitsWidget.finder-js #finderDynamicContent,#finderItFitsWidget.showing-finder #findDevicePanel,#finderItFitsWidget.showing-my-devices #finderMyDevicesPanel{display:block}#finderItFitsWidget h2{font-size:12px;margin:0 0 6px}#finderItFitsWidget.finders-hero-quick{margin-top:0}#finderDynamicContent h2 img{margin-bottom:-4px}#finderItFitsWidget.finder-js{width:294px}.finder-device-match .green{color:#090}.finder-device-match .red{color:#900}.finder-device-match strong{font-weight:700}#finderItFitsWidget{margin-top:10px}#twister input{border:0 none;margin:0}#twister label{display:inline;color:#888;font-weight:400}#twister strong.hover{color:#E47911}#twister .dropdownUnavailable{color:#BBB}#twister .selection{font-weight:700}#twister .evdd-singleton.selection{font-weight:400}#twister .swatches a{left:0;position:absolute;top:0;background-image:url(about:blank);z-index:1}#twister .swatches li{border:1px solid #E0E0E0;cursor:pointer;display:inline-block;margin-bottom:4px;margin-top:4px;position:relative}#twister .swatches li.swatchSelect{border-color:#E47911}#twister .swatches li.swatchHover{border-color:#D0D0D0}#twister .swatches li.swatchUnavailable,#twister .swatches li.swatchUnavailableHover{border-style:dashed;border-color:silver}#twister .swatches li img{height:50px;max-width:none;width:38px}#twister .swatchesSquare li img{height:47px;max-width:none;width:47px}#twister .swatchesRectangle li img{height:50px;max-width:none;width:38px}#twister .swatches li.swatchUnavailable img,#twister .swatches li.swatchUnavailableHover img{opacity:.5}#twister .swatches li.swatchHover .a-button-text,#twister .swatches li.swatchUnavailableHover .a-button-text{background-color:#f3f3f3}#twister .swatches li.swatchSelect .a-button-inner{background-color:#fefaf6}#twister .swatches.imageSwatches li.swatchSelect .a-button-inner{background-color:#fff}#twister .swatches li.swatchUnavailableHover .a-button-text,#twister .swatches.imageSwatches li.swatchHover .a-button-text{background-color:#fff}#twister .swatches li.swatchUnavailable .text{color:#CCC}#twister .swatches li.swatchSelect .arrow{height:11px;left:0;position:absolute;top:-2px;width:100%}#twister .swatches li.swatchUnavailableHover .xoverlay{height:50px;position:absolute;width:38px}#twister .swatches .a-button{border-width:0}#twister .swatches .a-button-text{padding:5px 10px 5px 11px}#twisterPopover{line-height:normal;width:106px}#twisterPopover .ap_body{background-color:#5F5A59;border-radius:4px 4px 4px 4px;margin:0;min-height:0;padding:7px}#twisterPopover .twisterPopoverArrow{height:7px}#twisterPopover.a-text-color-white{color:#FFF}ul.a-list-link li.dropdownUnavailable a{color:#BBB}#twister .imageSwatches li{padding:0!important}#twister .imageSwatches li.swatchSelect{border-width:1px}#twister .imageSwatches .a-button-text{padding:0}#twister .singleton .a-text-beside-button{top:0!important}#twisterPopover .twisterPopoverArrow{background-position:11px 0;background-repeat:no-repeat;background-color:transparent}.a-ie7 #twister .tooltip{padding-top:0;padding-right:0;padding-bottom:0;padding-left:0;margin-top:0;margin-right:0;margin-left:0;float:left;display:block}.a-ie7 #twister .swatchAvailable,.a-ie7 #twister .swatchSelect{padding-top:0;padding-right:0;padding-bottom:0;padding-left:0;margin-right:0;margin-left:0;float:left;display:block}.a-ie7 #twister .swatches li{display:inline!important}.twisterSwatchWrapper{max-width:180px}.twisterImages{display:table}.twisterImageDiv{float:left;padding:5px 3px 5px 10px}.twisterAccess{position:absolute;margin:-1000px;overflow:hidden;width:1px;height:1px}.addTwisterPadding{text-align:center;vertical-align:middle;display:table-cell;padding:5px 10px 5px 3px}.addTwisterMargin{margin-top:10px}.olpMessageWrapper,.priceMessageWrapper{display:inline-block}.twisterImages .olpWrapper,.twisterImages .priceWrapper{width:40px;word-wrap:normal;display:inline-block}.tinyPrimeBadge{background-repeat:no-repeat;background-size:37px 11px;display:inline-block;width:37px;height:1em;vertical-align:middle;background-image:url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAACUAAAALCAMAAADP5rR3AAAAA3NCSVQICAjb4U/gAAAAZlBMVEX/////mQBHosX/mQBHosX/mQDTmy9HosX/mQBHosX/mQBHosX/mQBHosVHosX/mQBHosVHosX/mQBHosX/mQBQortHosX/mQBHosX/mQCdnmlHosX/mQCrnVpHosX/mQDmmhtHosW0cvuDAAAAInRSTlMAEREiIjMzM0REVVVmZneIiJmqqru7u8zM3d3d7u7u////EBID3gAAAAlwSFlzAAALEgAACxIB0t1+/AAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtzIENTNui8sowAAADFSURBVBiVhZDhjgIhDIQrniLHgmVRREHqvP9LXsnm/m3ipCRM+NrSEv3rtNJ3nfrtO3Ts8mLmsDmuZpd6yAdTaRqDtgtdRd4oNqPEHNizdymkYrk4CrVph+NVj8jzDk8ZPOtVuIpNKSIDtHRZaJV+BjhheDR2aD9oZsAWBPVj0G8XWUQufmYOxwgUwBoWhcaIKBytdnuKclSQvDPUYPSqRazyHilg1DF/frjJqmPBzukyE+U0IyYTstOlZE8bdtD3/Q1t+gOTUBI8J3sviAAAAABJRU5ErkJggg==);background-position:0 0}.twisterPrimeBadges{background-image:url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAARgAAAApCAMAAADZAcYCAAAAA3NCSVQICAjb4U/gAAABgFBMVEX///9FosY7aZv8mhhFosZFosZFosZFosZFosZFosZFosZFosZFosZFosZFosbffyR3d3c7aZs7aZtFosZFosZFosY6ZZn8mhj////8mhiXyDv8mhg6ZJb8mhj8mhgwXJH8mhj8mhh3d3d3d3f8mhh3d3f8mhj8mhjffyT8mhj8mhjffyQgUov8mhh3d3d3d3cpWI78mhh3d3d3d3fffyTffyR3d3fffyQfTYV3d3eXyDvffyTffyTffyR3d3fffySXyDt3d3eXyDuXyDv//PorW5LffyR3d3d3d3fffyRAbJsjWZOXyDuXyDuXyDuXyDvj+v8zZpkYSYoJQoE7aZvj2OOXyDuXyDuXyDuXyDvffyTx//++y9wQTY0ANn7ffyR3d3fp8PVIosNNe6UYSISXyDvffySXyDv/9unu3+emobRhg6orX5Q5WJAxVououtApWI7v8/f38O/b7vXW5v/Y4+vr18/N2urlzs22xN+hxuaxv9SurMXvmySSqLihk6lsPAvBAAAAgHRSTlMA////Ee5VMyJ3iJlEu93//7vuZqrM/xH/3f/u/yLM/7uZmXeIIjNmRFWqZv9EZrv/d93uIjOI7v8RM5m7zMzdETO77v//EURViP//IpnM3f////+q/1Vmd4iq/////3eq/////0RVqv////////9Eu////////////////////24pqp8AAAAJcEhZcwAACxIAAAsSAdLdfvwAAAAcdEVYdFNvZnR3YXJlAEFkb2JlIEZpcmV3b3JrcyBDUzbovLKMAAAJ40lEQVRoge1ZB1vbSBPeZdV7IsmWe8HGYBswvfeS0FsgJBASSiqBVAIhOfPXb1YCAoSey9199/l95JV2tSvPvDszK80iVEIJJZTwN8Kf+qcl+HciEmhRFIXxKoJwaddo9S3/pK7iRt3/DXMVCfyxhgE8rQisfWlX0iyKIn/uTfP8Zg9Z4jHKMaeamfP6omvMVboelRtGQw29bjMANYftRvqnvrX3LhHsEkRJENumhiWGBxkkHvEMDwWoqYjmKcn9AfIHPubwDCRsXvwfWUJqZYAki4IoHnMr2BZCFvvT466eq9qaNuM+aq6n1/cbfrSfR8y9+osFuwAR+CUI2cQKsrCJsSbZWNCwhrENUsmsiuWT3eOEdGOJ1zBnSgqHOFkEOxE5mVPgSpQYUUGmKZicKfOmpZwYmCIk6mqqyozoUuveVViWQwxWf5Lryrnqa2ij/Zq7aQmmY9S6DMDZSEO1O11bjlDD/b5uw4CL+vs3pCUeiqBqQhIsy3BY4zGrKljlQSTMcvSwpCNi/Cm/q16dhhmkYR5U42SsYknBmKWHpmBLxByPLdltYI9G0tAC/xEfZgASVkBDCvAO3sK2QC1NOSXUteaqnBJRc+hAz+rT6XrQv62hHCWNPrCk2mR5N7rXgJLNQFYbPd0IYN9R8I4sR6eQVUAvZGITThwWeSxbWJZEz72rAiSBKghJCVjjLGxxWDUFbHOaKmNOxCKHJRnD/CMoNZZRQQNPXX+CpKgHRv20xrAa8gwGm6YKpUDbbEaVbjpXyaTbvcYod00CbAeYum+AKRnpdDJZn0wbbc3PwJZcTlwab4KqEAmQgB8YEE0B2SyDVMzAycKChIEA2z6c9uoAIVVREvfUUmkHBAJLkgKqwgAZ8yy1GbeUqXNA++E/kOoE/AetCDYEDddigDxLEzUWGk1gkGVvOldATA2NLMZRXAUWDompMZ4la5Oou7ybOlB5EoLOjYlB/iwJVSAWU7el88ZADICTKiNZRYKlykfrgR/ciKpng7cIEBZsNyaqKpiKgC2G8iFJ1KXAcngRm1D1BkbiBLgBf2IUmUYU8CCFg6fQ9YgGF05jJUn74U3XnCtQNQ1+VGPQUJPsRmm6PrUZ1JXK61FffRKV10MYetYMd/pu7EquINVIkMRrdKwIAIUCdudWcBcVgeMERRR4UxBEBS4Ek5amiRSTUcTjJTYTIhk4gQ1YtI0BU7BdHnhKHjgUq2n4hwTXmysafGuOlus0hFjXtWrc4NttdDcb9/poU1+9e6f7hsH3ZvDTaecve1e5ABHKC2KO3mDM49cT+uIj0Ipw6qnXmqvamis6tDUcr9u3WK7/d5G+Qtly44f73PYFr4QSSiihhBJK+MvxTn5/5zZ4//7dPy3674U0Eyu7BXz5u/9xYt6HqZ7h1rHRsrLRWH6mbHQbipMYLeTLwr4zxAz913lBD1xehjZHx3y+2OhmOAzFFjDjAy58bhFb32zNh706wGOt9ZLMY9UvinSzRPfvgkvMxqbzpfVt68qaY6ysYMcYG41t5DeGWudmZ9+GZz9/ebs7ujK7kS/MbWzMtbbCgMKdi58Yj/6aRIlfHP8XgRITntt3Bo2Vta87ztb6151BY671SXGnuLFZ3P2+XXiyu7PvHGwvL2+XFZe/F+cP8j5f68WOlCUNtqapXqLg7Hft+MSjiYlHp5oWpxZO1ROkQVVVyf1oZqSz39/+TCJ7rb0QgSbLvcSMYJ/9uq7s6OgYaTrdlqs8XafE5GeWvk0fPFn6uPpxfenVh1ejTzb2nU/Om8/OjnMwB8R8dZZXX0/vFZ1VZ3B1MDwWvnuhQHXkjzVWZbFFKzw+KRLo+igYHAi+PDVgaqD3ZDUD47HNeqkp8XQGl+ZxCHETMldC+rEBwWncmZuPdUDL8MmmJr3jdB8gxje35swvfdl0tssG951t/Oqb4zjfVz6/Xt0bc4orT3b31l6tT8/vvv72cWv6YM3ZnA3fbbtAngpCBrAMGsmSZZqizMBJlUxVBvGwiiaDz3t7x8Fo2hcmBxbRwlR/e7B/ov/58fhIyB0vYVGSRUWSBEmUVEVSecbCLO8PkUSFH2Xi8UQikkql4lV18UwkHo3Gq1Eii+qy/up4nfcgG3OMhkULzMaSGdkSbZmzVUawWE1ALXpjo6435rq6Rh43dnTmujobO/XOFyOdT0dGHg9XPn7hERMbm3Z2d5xl52B/sOi82R/cLBanX28u7U3v5Skxn+fXnKIzvzz/bXDL8YgpnMOJP1FNtyoCKuZ4DSs09e8moG2aktc4zKn4XhAw8RDMZnHg4dQAkNL+KDg1EHzoPqAuQ/dUApY7nnPHyyLWNHqYtmpiKUUSiO4vxAMkkSGBAAlFSTZDolkSiJCsPxSNkKgXuml2kMGs6D5FVTB7uDHAWjKWKvVOVKn3jOhdPXpXk6736C05MKFK+HXoXWBPlR4xhbWlNytjn74VncH5rX1arKysTzuvR/e/b60WN/Jfv607e8UPH95szo9+OlhbXR87L8ZEQEx/HQk1sW7eHpTiOSx6mWcFSxrIpi4GJ1++bH8ZXBgfGJgM9j8PToInof7gOOU1SkIVVUfj6W6BIGFepbsEYC0iDLeVKHWjCLCTIhVxEkmQijpSFSd+4AMuqkhdJBSKuNJAf5kaDBZ5CXMSlUISsCpjFUwJtO9o0XNAT07PPdVzTfpj6knAV+VTvaNR7zlyJV8sP1QY255dDxcK+fWtQjgcbn27WZiNDcVisE7Hhgrro3Pr6xtjQ7QFmsrChZ+zktUBEg+FKmCCaOaZpv7h52aead4f25zMTFEKeoP9CGxlYRHKyfbgI1p3mY2SaMAdb7qZa4Q0jcGWe6gSlkQO7DGUTYGFpEIBP4mjUBRFQ34SyMRJVYDUBUjGf7R5a9N9AZHusCCNZTQWZKFpdY3lOAU8Cayk8gXw0KM3dunDI/qLEX2ksQMspUnv6Wlxw/IDeHULx+jrykw4X4hRjqBWRs9lsRkfvQ7P+PKFcD4PFPliYdoZrOzBOb4UJaQKgSch5Kb+4Se4WtHtDxmzFrUQhB6C5/ROBV2DaZ8Iti8eepK7NZYBDTjXFWQEdmZizjuAYVtB1SFCUhCG4iRVRzJgIRXUpQgJVKEQyUZJVSKUOvIkhqE5cwkWAIt3tx6ALJgkMOZKvWt4mIZbvUXvagS76dGHu3Q919ICI8GtvOXpQeHsS+21EB47G+kp4lQsLzvNeL/Dw2sbX2inp173Gspxr9J7PD6ROOehp8mPnG2JEr9352Qj5+268ZyABE6Ag+F4BLaCTFFBuc6c26ky15hrgoOu1JW5pmE4NT5tOeQFvbszdPc2KJz3TeD/uem3I3Ot1fuaeKr3NF3d6/8Qw8NX9ymhhBL+VvwJuZlhW5bi6j0AAAAASUVORK5CYII=);background-repeat:no-repeat;background-size:280px 41px;display:inline-block}.twisterPremium{width:53px;height:10px;vertical-align:baseline;background-position:-49px -5px}.twisterPrimeJP{width:41px;height:10px;vertical-align:baseline;background-position:-106px -5px}.transparentTwisterDropdownBorder{border:2px solid #fff;display:inline-block;border-radius:4px}.evdd-button{width:100px}.a-touch .a-button.evdd-button{width:90px;height:100%;display:inline-block}.a-button-dropdown.evdd-button .a-button-inner .a-button-text{margin-left:5px;width:75px;padding-left:0;padding-right:0;text-overflow:ellipsis;font-size:12px}.a-touch .a-button-dropdown.evdd-button .a-button-inner .a-button-text{margin-left:0;width:60px;white-space:nowrap}.evdd-table-wrapper{box-shadow:0 2px 4px rgba(0,0,0,.13);border-radius:6px 6px 6px 6px;border:1px solid rgba(0,0,0,.2);padding:8px 0;background-color:#fff;cursor:pointer;min-width:110px}.a-ie8 .evdd-table-wrapper{border:1px solid #AAA;padding:4px 0}.a-ie8 .evdd-table{margin-bottom:0}.evdd-scrollbar{overflow-y:scroll}#twister .evdd-hidden{display:none}.evdd-dim-wrapper{display:inline-block;margin-right:15px}.evdd-row-hidden{display:none}.evdd-row-hovered{background-color:#F3F3F3}.evdd-row-selected{background-color:#F3F3F3;border:1px solid transparent;border-color:#E7E7E7 #D0D0D0 #E7E7E7 #E47911}.a-touch .evdd-table-wrapper .evdd-col,.evdd-table-wrapper .evdd-col{padding:5px 10px 5px 10px;border-collapse:collapse}.evdd-table-wrapper .evdd-col:first-child{max-width:145px}.evdd-prime-badge{background:url(https://images-na.ssl-images-amazon.com/images/G/01/twister/images/twister_books_sprite._V166092224_.gif) no-repeat scroll -40px 0 transparent;height:12px;width:41px;display:inline-block;vertical-align:middle}.evdd-native-select{display:none}.a-lt-ie8 .evdd-native-select,.a-no-js .evdd-native-select{display:inline}.a-lt-ie8 .evdd-button,.a-lt-ie8 .evdd-singleton,.a-no-js .evdd-button,.a-no-js .evdd-singleton{display:none}form#twister.petronas-twister{position:relative;margin-left:5%;width:85%;text-align:center;bottom:110px;z-index:3;min-width:800px;margin-top:2%}form>div.petronas-twister.a-section{display:inline-block;margin-left:10px;margin-right:10px}form>div.petronas-twister>div{text-align:left}div.petronas-twister>div>label{font-weight:700!important;color:#000!important}form>div.petronas-twister>div>span{display:none}div.petronas-twister>span>select{height:30px}div.petronas-twister.variation-dropdown>div{padding-bottom:10px}div.petronas-twister button{padding:11px 17px 11px 17px!important}form.petronas-twister>div>div.singleton{display:none}@media all and (min-width:1200px) and (max-width:1250px){form#twister.petronas-twister{margin-top:4%}}@media all and (min-width:1250px) and (max-width:1300px){form#twister.petronas-twister{margin-top:6%}}@media all and (min-width:1300px){form#twister.petronas-twister{margin-top:8%}}.vodd-button .a-button-inner{height:auto}.vodd-button.highlighted{border-color:#888}.vodd-button{width:auto;border:1px solid #DDD}.vodd-button:hover{border-color:#BBB}#twister .vodd-hidden{display:none}.vodd-button .a-button-inner{min-height:30px}.vodd-table-wrapper{border:0;background-color:#FFF;cursor:pointer;min-width:110px;border-color:#FFF;border-radius:2px}.vodd-dimension-row{border-top:1px solid #DDD;position:relative}.vodd-dimension-row:first-child{border-top:0}.a-size-base.vodd-dimension-row-text{line-height:15px!important;display:block}tr.vodd-dimension-row:first-child td,tr.vodd-dimension-row:first-child th{padding-top:16px}tr.vodd-dimension-row:last-child td,tr.vodd-dimension-row:last-child th{padding-bottom:16px}.vodd-row-selected,.vodd-row-selected.vodd-row-hovered{background-color:#F3F3F3;border-left-width:0;position:relative}.vodd-row-selected.vodd-row-hovered:before,.vodd-row-selected:before{border-left:2px solid #E47911;position:absolute;content:\" \";top:-1px;bottom:-1px}.a-ie8 .vodd-row-selected,.a-ie8 .vodd-row-selected.vodd-row-hovered{border-left:2px solid #E47911}.vodd-row-selected .dimension-display-text{font-weight:700}.vodd-row-hovered{background-color:#F8F8F8}.vodd-dimension-row .hidden{display:none}.vodd-table{overflow-y:hidden;overflow-x:hidden;display:block;width:100%}.vodd-table tbody,.vodd-table tr{display:block;width:100%}.vodd-dim-wrapper{max-width:404px;vertical-align:middle}.vodd-dimension-row .dimension-details{width:100%}.vodd-button .dimension-display-text{text-transform:lowercase}.vodd-dim-wrapper table.dimension-button{table-layout:fixed;width:100%}.vodd-dim-wrapper .dimension-button-label{overflow:hidden;text-overflow:ellipsis;display:block}.vodd-dim-wrapper .dimension-button-label.a-color-secondary{color:#111!important}.vodd-button .vodd-dimension-img-col:after{content:\" \";position:absolute;width:28px;height:28px;top:-6px;left:-6px;background:-moz-linear-gradient(top,rgba(32,46,57,.05),rgba(32,46,57,.11));background:-webkit-gradient(linear,left top,left bottom,from(rgba(32,46,57,.05)),to(rgba(32,46,57,.11)));background:-webkit-linear-gradient(top,rgba(32,46,57,.05),rgba(32,46,57,.11));background:-o-linear-gradient(top,rgba(32,46,57,.05),rgba(32,46,57,.11));background:-ms-linear-gradient(top,rgba(32,46,57,.05),rgba(32,46,57,.11));background:linear-gradient(top,rgba(32,46,57,.05),rgba(32,46,57,.11));filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#0d202e39', endColorstr='#1a202e39', GradientType=0 )}.vodd-button:hover .vodd-dimension-img-col:after{background:-moz-linear-gradient(top,rgba(32,46,57,.11),rgba(32,46,57,.16));background:-webkit-gradient(linear,left top,left bottom,from(rgba(32,46,57,.11)),to(rgba(32,46,57,.16)));background:-webkit-linear-gradient(top,rgba(32,46,57,.11),rgba(32,46,57,.16));background:-o-linear-gradient(top,rgba(32,46,57,.11),rgba(32,46,57,.16));background:-ms-linear-gradient(top,rgba(32,46,57,.11),rgba(32,46,57,.16));background:linear-gradient(top,rgba(32,46,57,.11),rgba(32,46,57,.16));filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#1c202e39', endColorstr='#29202e39', GradientType=0 )}.vodd-button .vodd-dimension-img-col{background-color:transparent}.vodd-dimension-img-col{width:50px;height:40px;padding-right:10px;background-color:#FFF}.vodd-row-selected .vodd-dimension-img-col{border-left:0}.vodd-dimension-img{max-width:40px;max-height:40px}.vodd-button .vodd-dimension-img{max-width:28px;max-height:28px;top:-6px;left:-6px;position:absolute}#twister .selection.vodd-singleton .dimension-display-text{font-weight:400}.vodd-modified-popover{padding:0}.vodd-modified-popover.a-popover{max-width:none}.vodd-modified-popover .a-popover-wrapper{box-shadow:0 2px 3px #E4E4E4;border-radius:2px;border:1px solid #DDD}.vodd-modified-popover .a-arrow-border{display:none}.vodd-modified-popover .a-popover-inner{padding:0}.vodd-dim-wrapper.singleton{vertical-align:middle;display:none!important}.vodd-dimension-row .price{font-family:Arial,sans-serif}.vodd-below-price.dimension-button-label{margin-bottom:3px}.vodd-button.vodd-animated{overflow:hidden}.vodd-button.vodd-animated.uniform-layout{height:50px}.vodd-button.vodd-animated.uniform-layout .a-button-inner,.vodd-button.vodd-animated.uniform-layout .a-button-text{height:inherit}.vodd-button.vodd-animated .vodd-dimension-img{top:0;left:0}.vodd-button.vodd-animated .vodd-dimension-img-col:after{top:0;left:0}.vodd-button.vodd-animated .dimension-button-label-col,.vodd-button.vodd-animated .vodd-dimension-img-col,.vodd-button.vodd-animated .vodd-dropdown-icon{position:absolute}.vodd-button.vodd-animated .vodd-dropdown-icon{right:10px}.vodd-button.vodd-animated .vodd-dimension-img-col{top:5px;left:5px}.vodd-button.vodd-animated .dimension-button-label-col{left:45px;right:15px}.vodd-button.vodd-animated.uniform-layout .dimension-button-label-col{top:5px}.vodd-button.vodd-animated .dimension-button-label-col.vodd-no-image{left:8px}.vodd-button.vodd-animated .dimension-button-label{top:0}.vodd-button.vodd-animated .dimension-button-label-col.animation-start,.vodd-button.vodd-animated .vodd-dimension-img-col.animation-start{top:40px}.vodd-button .large-dimension-img .vodd-dimension-img,.vodd-button .vodd-dimension-img-col.large-dimension-img:after{top:0;left:0}.vodd-button .large-dimension-img .vodd-dimension-img,.vodd-button .vodd-dimension-img-col.large-dimension-img:after,.vodd-button:hover .vodd-dimension-img-col.large-dimension-img:after{width:35px;height:35px;max-width:35px;max-height:35px}.vodd-button .vodd-dimension-img-col.large-dimension-img{width:40px;height:35px;max-width:40px;max-height:35px}.vodd-button.tight-button-spacing .a-button-text{padding:6px}.vodd-dimension-row.tight-row-spacing td{padding:10px 10px}.vodd-button.a-button{display:block}.vodd-button.a-button .a-icon-dropdown{top:20px}.vodd-dimension-row .dimension-slots #ms3slot,.vodd-dimension-row .dimension-slots .fresh,.vodd-dimension-row .dimension-slots .tinyPrimeBadge,.vodd-dimension-row .dimension-slots .twisterPrimeBadges{position:absolute;top:18px;right:10px}.a-lt-ie9 .vodd-dim-wrapper table.dimension-button{top:-20px;position:absolute}.a-lt-ie9 .vodd-dimension-row .dimension-details.dimension-slots{position:relative}.a-ie9 .vodd-row-hovered.vodd-row-selected:before,.a-ie9 .vodd-row-selected:before,.a-lt-ie9 .vodd-row-hovered.vodd-row-selected:before,.a-lt-ie9 .vodd-row-selected:before{content:none}.a-ie9 .vodd-dimension-row.vodd-row-hovered.vodd-row-selected,.a-ie9 .vodd-dimension-row.vodd-row-selected,.a-lt-ie9 .vodd-dimension-row.vodd-row-hovered.vodd-row-selected,.a-lt-ie9 .vodd-dimension-row.vodd-row-selected{border-left:2px solid #E47911}.a-ie9 .dimension-details.dimension-slots,.a-lt-ie9 .dimension-details.dimension-slots{position:relative}.a-lt-ie9 .uniform-layout.vodd-animated.vodd-button .dimension-button-label-col,.a-lt-ie9 .vodd-animated.vodd-button .vodd-dimension-img-col{top:25px!important}.twisterIngressWrapper{display:table;text-align:centre}.ingressLinkWrapper{vertical-align:middle;display:table-cell}.twisterImmersiveBannerHide{display:none}#twisterIngress .a-button-text:hover{background-color:#F3F3F3}.twisterModal_stylerTop{height:35px;position:absolute;z-index:1;margin-top:10px;margin-left:-15px;display:none;background:-moz-linear-gradient(top,#fff 0,rgba(255,255,255,0) 100%);background:-webkit-gradient(linear,left top,left bottom,color-stop(0,#fff),color-stop(100%,rgba(255,255,255,0)));background:-webkit-linear-gradient(top,#fff 0,rgba(255,255,255,0) 100%);background:-o-linear-gradient(top,#fff 0,rgba(255,255,255,0) 100%);background:-ms-linear-gradient(top,#fff 0,rgba(255,255,255,0) 100%);background:linear-gradient(to bottom,#fff 0,rgba(255,255,255,0) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#00ffffff', GradientType=0 )}.twisterModal_stylerBottom{height:35px;position:absolute;width:100%;margin-top:-35px;margin-left:-15px;background:-moz-linear-gradient(top,rgba(255,255,255,0) 0,#fff 100%);background:-webkit-gradient(linear,left top,left bottom,color-stop(0,rgba(255,255,255,0)),color-stop(100%,#fff));background:-webkit-linear-gradient(top,rgba(255,255,255,0) 0,#fff 100%);background:-o-linear-gradient(top,rgba(255,255,255,0) 0,#fff 100%);background:-ms-linear-gradient(top,rgba(255,255,255,0) 0,#fff 100%);background:linear-gradient(to bottom,rgba(255,255,255,0) 0,#fff 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#00ffffff', endColorstr='#ffffff', GradientType=0 )}.twisterModal{position:absolute;box-shadow:#CBCBCB 0 0 20px;padding:15px 15px 0 15px;border:1px solid #D7D7D7;display:none;background-color:#fff;transition-property:width,height,min-width,min-height;transition-duration:.8s}.twisterModal_innerDiv{overflow-y:auto;padding-left:10px;padding-right:10px;margin-top:10px}.twisterModal_stickyHeader{display:inline}.twisterModal .twisterSwatchWrapper{transition-property:width,height,min-width,min-height;transition-duration:1s}.twisterModal .swatches li{border:1px solid #E0E0E0;cursor:pointer;display:inline-block;margin-bottom:4px;margin-top:4px;position:relative;padding:0!important;border-radius:2px}.twisterModal .swatches .a-button{border-width:0}.twisterModal .swatches .a-button-text{padding:5px 10px 5px 11px}.twisterModal .imageSwatches .a-button-text{padding:0}.twisterModal .imageSwatches li.swatchSelect{border-width:1px}.twisterModal .swatches li.swatchSelect{border-color:#e47911}.twisterModal .swatches li.swatchSelect .a-button-inner{background-color:#fefaf6}.twisterModal .swatches.imageSwatches li.swatchSelect .a-button-inner{background-color:#fff}.twisterModal .swatches li.swatchHover .a-button-text{background-color:#f3f3f3}.twisterModal .swatches li.swatchUnavailableHover .a-button-text,.twisterModal .swatches.imageSwatches li.swatchHover .a-button-text{background-color:#fff}.twisterModal .swatches li.swatchHover{border-color:#d0d0d0}.twisterModal .swatches li.swatchUnavailable,.twisterModal .swatches li.swatchUnavailableHover{border-style:dashed;border-color:silver}.twisterModal .swatches li img{height:50px;max-width:none;width:38px}.twisterModal .swatchesSquare li img{height:47px;max-width:none;width:47px}.twisterModal .swatchesRectangle li img{height:50px;max-width:none;width:38px}.twisterModal .swatches li.swatchUnavailable img,.twisterModal .swatches li.swatchUnavailableHover img{opacity:.5}.swatchSelect .twisterSwatchWrapper .twister_swatch_price{color:#b12704!important}@keyframes twisterLoadingSlotZero{0%{background-position:-40px 0}100%{background-position:40px 0}}@-moz-keyframes twisterLoadingSlotZero{0%{background-position:-40px 0}100%{background-position:40px 0}}@-webkit-keyframes twisterLoadingSlotZero{0%{background-position:-40px 0}100%{background-position:40px 0}}@keyframes twisterLoadingSlotOne{0%{background-position:-30px 0}100%{background-position:30px 0}}@-moz-keyframes twisterLoadingSlotOne{0%{background-position:-30px 0}100%{background-position:30px 0}}@-webkit-keyframes twisterLoadingSlotOne{0%{background-position:-30px 0}100%{background-position:30px 0}}@-ms-keyframes twisterLoadingSlotZero{0%{background-position:-40px 0}100%{background-position:40px 0}}@-ms-keyframes twisterLoadingSlotOne{0%{background-position:-30px 0}100%{background-position:30px 0}}@-o-keyframes twisterLoadingSlotZero{0%{background-position:-40px 0}100%{background-position:40px 0}}@-o-keyframes twisterLoadingSlotOne{0%{background-position:-30px 0}100%{background-position:30px 0}}.loadingSlot_0{-webkit-animation-name:twisterLoadingSlotZero;animation-name:twisterLoadingSlotZero;-webkit-animation-timing-function:linear;animation-timing-function:linear;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-duration:1s;animation-duration:1s;background:#F6F7F8 -webkit-linear-gradient(left,#f6f7f8 0,#F2F2F2 60%,#f6f7f8 100%) no-repeat scroll 0 0;background:#F6F7F8 linear-gradient(left,#f6f7f8 0,#F2F2F2 60%,#f6f7f8 100%) no-repeat scroll 0 0;background:#F6F7F8 -moz-linear-gradient(left,#f6f7f8 0,#F2F2F2 60%,#f6f7f8 100%) no-repeat scroll 0 0;background:#F6F7F8 -ms-linear-gradient(left,#f6f7f8 0,#F2F2F2 60%,#f6f7f8 100%) no-repeat scroll 0 0;background:#F6F7F8 -o-linear-gradient(left,#f6f7f8 0,#F2F2F2 60%,#f6f7f8 100%) no-repeat scroll 0 0;background-color:#f6f7f8;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.a-lt-ie10 .loadingSlot_0{background-color:#f6f7f8}.loadingSlot_1{-webkit-animation-name:twisterLoadingSlotOne;animation-name:twisterLoadingSlotOne;-webkit-animation-timing-function:linear;animation-timing-function:linear;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-duration:1s;animation-duration:1s;background:#F6F7F8 -webkit-linear-gradient(left,#f6f7f8 0,#F2F2F2 60%,#f6f7f8 100%) no-repeat scroll 0 0;background:#F6F7F8 linear-gradient(left,#f6f7f8 0,#F2F2F2 60%,#f6f7f8 100%) no-repeat scroll 0 0;background:#F6F7F8 -moz-linear-gradient(left,#f6f7f8 0,#F2F2F2 60%,#f6f7f8 100%) no-repeat scroll 0 0;background:#F6F7F8 -ms-linear-gradient(left,#f6f7f8 0,#F2F2F2 60%,#f6f7f8 100%) no-repeat scroll 0 0;background:#F6F7F8 -o-linear-gradient(left,#f6f7f8 0,#F2F2F2 60%,#f6f7f8 100%) no-repeat scroll 0 0;background-color:#f6f7f8;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.a-lt-ie10 .loadingSlot_1{background-color:#f6f7f8}.immersiveBannerPadding{padding-left:2px}.variation-immersive-dropdown .twister-idd-button .dropdownIcon{vertical-align:middle!important;width:10px;top:40%}.twister-idd-button table.twister-idd-button-table{table-layout:fixed;width:100%;margin-bottom:0}.variation-immersive-dropdown .twister-idd-button{width:300px;max-width:450px;border:1px solid #BCBCBC;border-radius:3px;margin:0!important}.variation-immersive-dropdown .twister-idd-button .a-button-inner{padding:8px}.variation-immersive-dropdown .twister-idd-button.a-button-focus{box-shadow:none}.variation-immersive-dropdown .twister-idd-button .a-button-inner:hover{background:-moz-linear-gradient(top,rgba(174,174,174,.05) 0,rgba(67,67,67,.05) 100%);background:-webkit-gradient(linear,left top,left bottom,color-stop(0,rgba(174,174,174,.05)),color-stop(100%,rgba(67,67,67,.05)));background:-webkit-linear-gradient(top,rgba(174,174,174,.05) 0,rgba(67,67,67,.05) 100%);background:-o-linear-gradient(top,rgba(174,174,174,.05) 0,rgba(67,67,67,.05) 100%);background:-ms-linear-gradient(top,rgba(174,174,174,.05) 0,rgba(67,67,67,.05) 100%);background:linear-gradient(to bottom,rgba(174,174,174,.05) 0,rgba(67,67,67,.05) 100%)}.variation-immersive-dropdown .twister-idd-modal{border:1px solid #E4E4E4;border-radius:2px;width:350px;max-width:450px;z-index:100;max-height:450px;display:none;position:absolute;background-color:#FFF;box-shadow:1px 1px 3px #CBCBCB}.variation-immersive-dropdown .twister-idd-table{max-height:350px;overflow-y:scroll}.twister-idd-row{border-top:1px solid #E4E4E4;cursor:pointer}.idd-first-row{border-top:none}.twister-idd-row-selected{border-left:2px solid #E47911;background:#f6f6f6}.twister-idd-row-selected .dimension-display-text{font-weight:700}.twister-idd-row-unavailable .dimension-display-text,.twister-idd-row-unavailable-hover .dimension-display-text{opacity:.5}.twister-idd-table .twisterDDPrimeSlot{padding:10px 10px 10px 0!important;padding-right:10px!important}.twister-idd-table .dimension-details{padding:10px 10px 10px 10px!important}.twister-idd-modal-header{padding:10px;border-bottom:1px solid #E4E4E4}.notBold{font-weight:400!important}.twister-idd-row-hover{background:#f6f6f6}.twister-idd-modal .twisterModal_stylerTop{height:35px;position:absolute;width:100%;z-index:1;margin-top:0;display:none;margin-left:0;background:-moz-linear-gradient(top,#fff 0,rgba(255,255,255,0) 100%);background:-webkit-gradient(linear,left top,left bottom,color-stop(0,#fff),color-stop(100%,rgba(255,255,255,0)));background:-webkit-linear-gradient(top,#fff 0,rgba(255,255,255,0) 100%);background:-o-linear-gradient(top,#fff 0,rgba(255,255,255,0) 100%);background:-ms-linear-gradient(top,#fff 0,rgba(255,255,255,0) 100%);background:linear-gradient(to bottom,#fff 0,rgba(255,255,255,0) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#00ffffff', GradientType=0 )}.twister-idd-modal .twisterModal_stylerBottom{height:45px;position:absolute;width:100%;margin-top:-45px;margin-left:0;background:-moz-linear-gradient(top,rgba(255,255,255,0) 0,#fff 100%);background:-webkit-gradient(linear,left top,left bottom,color-stop(0,rgba(255,255,255,0)),color-stop(100%,#fff));background:-webkit-linear-gradient(top,rgba(255,255,255,0) 0,#fff 100%);background:-o-linear-gradient(top,rgba(255,255,255,0) 0,#fff 100%);background:-ms-linear-gradient(top,rgba(255,255,255,0) 0,#fff 100%);background:linear-gradient(to bottom,rgba(255,255,255,0) 0,#fff 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#00ffffff', endColorstr='#ffffff', GradientType=0 )}.twister-selection-block{display:block}.twister-selection-inline{display:inline}.twisterCounter_container .swatchSection{white-space:normal;overflow:hidden;height:55px;margin-top:10px}.twisterCounter_container #collapseButton,.twisterCounter_container #expanderButton{width:44px;height:44px;background-size:44px;display:inline-block;background:#E7E7E7;-moz-border-radius:22px;-webkit-border-radius:22px;border-radius:22px;cursor:pointer;margin-left:4px;position:relative;top:5px;left:6px;margin-bottom:16px!important}.twisterCounter_container #expanderButton .expanderBullet{width:6px;height:6px;background-size:6px;float:left;margin-left:3px;background:#888;-moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;position:relative;top:19px;left:7px}.twisterCounter_container #collapseButton .collapseTriangle1{width:0;height:0;z-index:2;border-left:11px solid transparent;border-right:11px solid transparent;border-bottom:13px solid #888;position:relative;top:14px;left:11px}.twisterCounter_container #collapseButton .collapseTriangle2{width:0;height:0;z-index:3;border-left:11px solid transparent;border-right:11px solid transparent;border-bottom:13px solid #E7E7E7;position:relative;top:3px;left:11px}.twisterCounter_container .counterSwatchImg{width:44px;height:44px;border-radius:100%;cursor:pointer;position:absolute;top:5px;left:5px}.twisterCounter_container .counterSwatchImgDNE{background-color:#DDD}.twisterCounter_container .counterSwatch{margin-bottom:10px!important;position:relative;float:left;margin-left:4px;margin-right:-6px}.twisterCounter_container .counterSwatch .innerBorder{border-radius:100%;background-color:transparent;height:44px;width:44px;position:absolute;top:2px;left:2px;z-index:1;border:3px solid #fff;box-sizing:content-box}.twisterCounter_container .counterSwatch .outerBorder{border-radius:100%;background-color:transparent;height:50px;width:50px;position:relative;z-index:0;border:2px solid transparent;box-sizing:content-box}.twisterCounter_container .counterSwatch.hoverSwatch .outerBorder,.twisterCounter_container .counterSwatch.selectedSwatch .outerBorder{border:2px solid #8a8a8a}.twisterCounter_container .counterSwatch.hoverSwatch .outerBorder{opacity:.5}.a-ie8 .twisterCounter_container .counterSwatch{margin-right:3px;vertical-align:top}.a-ie8 .twisterCounter_container .counterSwatchImg{height:36px;width:36px}.a-ie8 .twisterCounter_container .counterSwatch .outerBorder{height:42px;width:42px}.a-ie8 .twisterCounter_container .counterSwatch .innerBorder{height:36px;width:36px}.a-ie8 .twisterCounter_container .counterSwatch .innerBorder{height:36px;width:36px}.a-ie8 .twisterCounter_container #collapseButton,.a-ie8 .twisterCounter_container #expanderButton{top:0}.twisterShelf_label_wrapper{height:36px;display:table-cell;vertical-align:middle}.twisterShelf_dimension_label{overflow:hidden;text-overflow:ellipsis;display:block;display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;max-height:36px;max-width:384px;overflow-wrap:break-word;word-wrap:break-word;word-break:break-word;white-space:normal}.twisterShelf_swatchSection{margin-top:10px;height:89px;white-space:normal;overflow:hidden}.twisterShelf_swatchSection.multiLinePPU{height:99px}.twisterShelf_container::after{content:\"\";border-bottom:1px solid #E7E7E7;position:absolute;left:-10px;right:0}.twisterShelf_swatchSection a:active,.twisterShelf_swatchSection a:link,.twisterShelf_swatchSection a:visited{color:#111}.twisterShelf_swatch{margin:0 7px 4px 0!important;float:left;vertical-align:top;overflow:hidden}@-webkit-keyframes twisterShelf_shrink{from{width:113px}to{width:104px}}@keyframes twisterShelf_shrink{from{width:113px}to{width:104px}}@-webkit-keyframes twisterShelf_grow{from{width:104px}to{width:113px}}@keyframes twisterShelf_grow{from{width:104px}to{width:113px}}@-webkit-keyframes twisterShelf_shrink_text{from{max-width:99px}to{max-width:90px}}@keyframes twisterShelf_shrink_text{from{max-width:99px}to{max-width:90px}}@-webkit-keyframes twisterShelf_grow_text{from{max-width:90px}to{max-width:99px}}@keyframes twisterShelf_grow_text{from{max-width:90px}to{max-width:99px}}.twisterShelf_isCollapsed .twisterShelf_swatch{width:104px}.twisterShelf_isCollapsed.twisterShelf_isCollapsedAnimated .twisterShelf_swatch{width:104px;-webkit-animation-name:twisterShelf_shrink;-webkit-animation-duration:.5s;-webkit-animation-timing-function:ease-in;animation-name:twisterShelf_shrink;animation-duration:.5s;animation-timing-function:ease-in}.twisterShelf_isExpanded .twisterShelf_swatch{width:113px}.twisterShelf_isExpanded.twisterShelf_isExpandedAnimated .twisterShelf_swatch{width:113px;-webkit-animation-name:twisterShelf_grow;-webkit-animation-duration:.5s;-webkit-animation-timing-function:ease;animation-name:twisterShelf_grow;animation-duration:.5s;animation-timing-function:ease}.twisterShelf_displaySection{position:relative;margin-bottom:6px!important;display:table-cell;vertical-align:middle;height:50px;border:2px solid transparent;border-radius:6px;text-align:center}.twisterShelf_isCollapsed .twisterShelf_displaySection{width:104px}.twisterShelf_isCollapsed.twisterShelf_isCollapsedAnimated .twisterShelf_displaySection{width:104px;-webkit-animation-name:twisterShelf_shrink;-webkit-animation-duration:.5s;-webkit-animation-timing-function:ease-in;animation-name:twisterShelf_shrink;animation-duration:.5s;animation-timing-function:ease-in}.twisterShelf_isExpanded .twisterShelf_displaySection{width:113px}.twisterShelf_isExpanded.twisterShelf_isExpandedAnimated .twisterShelf_displaySection{width:113px;-webkit-animation-name:twisterShelf_grow;-webkit-animation-duration:.5s;-webkit-animation-timing-function:ease;animation-name:twisterShelf_grow;animation-duration:.5s;animation-timing-function:ease}.twisterShelf_isText .selectedSwatch .twisterShelf_displaySection{border:2px solid #FBAD0E;padding:5px;color:#C45500}.twisterShelf_isText .twisterShelf_displaySection{border:2px solid #CCC;padding:5px}.twisterShelf_isText .hoverSwatch .twisterShelf_displaySection{border:2px solid #444;padding:5px}.twisterShelf_isImage .selectedSwatch .twisterShelf_displaySection{border:2px solid #FBAD0E}.twisterShelf_isImage .twisterShelf_displaySection{border:2px solid #CCC}.twisterShelf_isImage .hoverSwatch .twisterShelf_displaySection{border:2px solid #444}.selectedSwatch .twisterShelf_displaySection .twisterShelf_overlayWrapper:after,.selectedSwatch .twisterShelf_displaySection span:after{position:absolute;content:\"\";top:0;left:0;width:100%;height:46px;background:rgba(253,165,0,.05)}.twisterShelf_swatch_img{display:block;margin:auto;max-width:40px;max-height:40px;cursor:pointer}.twisterShelf_swatch_text{overflow:hidden;text-overflow:ellipsis;display:block;display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;max-height:36px;overflow-wrap:break-word;word-wrap:break-word;word-break:break-word;display:-moz-box}.twisterShelf_isCollapsed .twisterShelf_swatch_text{max-width:90px}.twisterShelf_isCollapsed.twisterShelf_isCollapsedAnimated .twisterShelf_swatch_text{max-width:90px;-webkit-animation-name:twisterShelf_shrink_text;-webkit-animation-duration:.5s;-webkit-animation-timing-function:ease-in;animation-name:twisterShelf_shrink_text;animation-duration:.5s;animation-timing-function:ease-in}.twisterShelf_isExpanded .twisterShelf_swatch_text{max-width:99px}.twisterShelf_isExpanded.twisterShelf_isExpandedAnimated .twisterShelf_swatch_text{max-width:99px;-webkit-animation-name:twisterShelf_grow_text;-webkit-animation-duration:.5s;-webkit-animation-timing-function:ease;animation-name:twisterShelf_grow_text;animation-duration:.5s;animation-timing-function:ease}.twisterShelf_container .collapseButton,.twisterShelf_container .expanderButton{width:44px;height:44px;background-size:44px;display:inline-block;background:#E7E7E7;-moz-border-radius:22px;-webkit-border-radius:22px;border-radius:22px;cursor:pointer;margin-left:4px;position:relative;top:4px}.twisterShelf_container .expanderButton .expanderBullet{width:6px;height:6px;background-size:6px;float:left;margin-left:3px;background:#888;-moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;position:relative;top:19px;left:7px}.twisterShelf_container .collapseButton .collapseTriangle1{width:0;height:0;z-index:2;border-left:11px solid transparent;border-right:11px solid transparent;border-bottom:13px solid #888;position:relative;top:14px;left:11px}.twisterShelf_container .collapseButton .collapseTriangle2{width:0;height:0;z-index:3;border-left:11px solid transparent;border-right:11px solid transparent;border-bottom:13px solid #E7E7E7;position:relative;top:3px;left:11px}.twisterShelf_infoSection{width:100%;height:39px;text-align:center}.twisterShelf_infoSection.multiLinePPU{height:49px}.twisterShelf_infoSection div{display:inline-block}.twisterShelf_infoSection .shelf_unavailable_stock{color:#767676!important}.twisterShelf_infoSection span{color:#111!important;font-size:12px!important}.selectedSwatch .twisterShelf_infoSection span{color:#b12704!important}.twisterShelf_infoSection .twisterPrime{margin-top:6px}.twisterShelf_infoSection .sns-data-slot{display:none!important}.twisterShelf_infoSection .price_slot_ppu{font-size:10px!important}.twisterShelf_infoSection p{line-height:10px;margin-top:-2px}.twisterShelf_infoSection_slots .deal_slot_ppu,.twisterShelf_infoSection_slots .price_slot_ppu,.twisterShelf_isCollapsed .twisterShelf_infoSection.hasAllItems .deal_slot_ppu,.twisterShelf_isCollapsed .twisterShelf_infoSection.hasAllItems .price_slot_ppu{display:none}.twisterShelf_placeholder_price{width:45px;height:8px;display:inline-block;background:#F0F0F0}.twisterShelf_placeholder_badge{width:30px;height:8px;display:inline-block;margin-left:5px;background:#F0F0F0}#formats .format .a-button-text{white-space:nowrap}#MediaMatrix #twister table,#MediaMatrix #twister td,#MediaMatrix #twister tr{border:none}#MediaMatrix #twister table.alt{background:#f7f7f7}#MediaMatrix #twister .second-level{display:none}#MediaMatrix #twister tr{cursor:pointer}#MediaMatrix #twister tr.active{cursor:auto}#MediaMatrix #twister tr:hover{background-color:#f1f1f1}#MediaMatrix #twister table.title tr{cursor:auto}#MediaMatrix #twister table.title tr:hover{background:0 0}#MediaMatrix #twister td,#MediaMatrix #twister th{padding:3px 5px 3px 0}#MediaMatrix #twister .a-icon-prime{float:right;vertical-align:baseline}#MediaMatrix #twister .a-link-expander{white-space:nowrap}#MediaMatrix #twister{display:none;overflow:hidden}#MediaMatrix #twister .tmm-row-icon{left:5px}#MediaMatrix #twister .dp-edition-col{white-space:normal;overflow:hidden}#formats .a-button-toggle:hover{filter:progid:DXImageTransform.Microsoft.gradient(enabled=false)}#formats .a-row{white-space:nowrap;overflow:hidden}#formats .a-section{overflow:hidden}#formats .tmmHidePrompt{display:none}#formats .tmmShowPrompt{display:inline}.a-no-js #formats .nonJSFormats{white-space:normal}#formats .swatchElement .a-button{width:100%}.a-ie7 #formats .swatchElement .a-button{overflow:visible}#formats .swatchElement{vertical-align:top}#formats .tmm-olp-links{display:block;padding:0 11px}#formats .olp-link{display:block;line-height:15px}#formats .olp-link .olp-from{color:#888}#formats .tmm-olp-links .extra-message{white-space:normal;max-width:100px}#tmmSwatches .disabledSwatch{border-style:dashed;opacity:.6}#MediaMatrix #twister #binding_row_landing,#MediaMatrix #twister .top-level.selected-row{background:none repeat scroll 0 0 #FEFAF6;border:1px solid #E47911}#MediaMatrix #twister .binding-title{padding-left:25px;display:block}#MediaMatrix #twister.no-swatches{display:block!important}#formats .format.a-button-selected .a-icon-prime,#formats .format:hover .a-icon-prime{opacity:1}#formats .hr.unselected-row{border:none;border-top:1px solid #efefef;clear:both;height:0;width:100%}#MediaMatrix #twister .metabinding-expander{display:inline-block}#MediaMatrix #twister a.empty-expander{white-space:nowrap;display:inline-block;position:relative;padding-left:11px}#MediaMatrix #twister .dp-collectible-col,#MediaMatrix #twister .dp-extra-msg-col,#MediaMatrix #twister .dp-new-col,#MediaMatrix #twister .dp-price-col,#MediaMatrix #twister .dp-title-col,#MediaMatrix #twister .dp-used-col{float:none;margin-right:0}#MediaMatrix #twister .dp-price-col{width:22%}.a-ie7 #MediaMatrix #twister .dp-price-col{width:100px}#MediaMatrix #twister .dp-collectible-col{width:15%}#MediaMatrix #twister .dp-disc-col{width:6%}#MediaMatrix #twister .dp-edition-col{width:25%}#MediaMatrix #twister .dp-secondary-title-col{width:30%}#MediaMatrix #twister .dp-new-col,#MediaMatrix #twister .dp-used-col{width:11%}#MediaMatrix #twister .dp-extra-msg-col{width:37%}#MediaMatrix #twister .dp-extra-msg-col.dp-extra-msg-col-mini{width:22%}#MediaMatrix #twister .dp-title-col .title-expander{float:left}#MediaMatrix #twister .dp-title-col .title-text{padding-left:16px;display:block}#MediaMatrix #twister .a-icon-arrow,#MediaMatrix #twister .a-icon-expand,#formats .a-icon-arrow,#formats .a-icon-expand{opacity:.6;-webkit-transition:-webkit-transform .3s linear,opacity .3s linear,top .3s linear,left .3s linear;-moz-transition:-moz-transform .3s linear,opacity .3s linear,top .3s linear,left .3s linear;-o-transition:-o-transform .3s linear,opacity .3s linear,top .3s linear,left .3s linear;-ms-transition:-ms-transform .3s linear,opacity .3s linear,top .3s linear,left .3s linear;transition:transform .3s linear,opacity .3s linear,top .3s linear,left .3s linear}#formatsIcon.rotate{opacity:1;top:9px;-webkit-transform:rotate(90deg);-moz-transform:rotate(90deg);-moz-transform:rotate(90deg);-o-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}#MediaMatrix #twister .rotate{opacity:1;top:9px;-webkit-transform:rotate(90deg);-moz-transform:rotate(90deg);-o-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}#MediaMatrix #twister .a-icon-arrow,#formats .a-icon-arrow{-webkit-transform:scale(.5);-moz-transform:scale(.5);-o-transform:scale(.5);-ms-transform:scale(.5);transform:scale(.5)}#MediaMatrix #twister .a-icon-arrow{position:absolute;top:1px;left:2px}#MediaMatrix #twister .a-icon-arrow.rotate,#formatsIcon.a-icon-arrow.rotate{opacity:1;-webkit-transform:scale(.5) rotate(90deg);-moz-transform:scale(.5) rotate(90deg);-o-transform:scale(.5) rotate(90deg);-ms-transform:scale(.5) rotate(90deg);transform:scale(.5) rotate(90deg)}.mediamatrix-aivlogo{background:url(https://images-na.ssl-images-amazon.com/images/G/01/twister/images/twister_books_sprite._V166092224_.gif) no-repeat scroll 5px -15px transparent!important;height:16px!important;width:130px!important}.sw-aivlogo{background:url(https://images-na.ssl-images-amazon.com/images/G/01/common/sprites/sprite-site-wide-3._V375430972_.png) no-repeat scroll 0 0 transparent;display:inline-block;margin:0;overflow:hidden;padding:0;position:relative;vertical-align:middle}.mediamatrix-swatch-addon-badge{padding:3px 4px 3px 5px;font-size:56%;margin-top:3px}\n.pads-primary-offer-container .pads-cba{border-radius:6px 6px 6px 6px;color:#000;font-size:11px;margin:0 auto;padding:0 5px;width:172px}.pads-primary-offer-container .pads-cba img{margin-top:3px}.pads-primary-offer-container .pads-price{color:#900000;font-family:Arial;font-size:13px;font-style:normal;font-weight:700;margin:0;text-decoration:none}.pads-primary-offer-container .pads-ship{color:#888;font-family:Arial;font-size:13px;font-style:normal;font-weight:400;text-decoration:none}.pads-primary-offer-container .pads-availability{color:#D85C3A;font-family:Arial;font-size:13px;font-style:normal;font-weight:700;margin:0;text-decoration:none}.pads-primary-offer-container .pads-merchant{color:#333;font-family:Arial;font-size:13px;font-style:normal;font-weight:700;margin:0;text-decoration:none}.pads-primary-offer-container .pads-external-link:hover{text-decoration:none}.pads-primary-offer-container #pa_buybox_merchant_name{word-break:break-all}.pads-primary-offer-container #pa_buybox_merchant_name #pa_buybox_display_url{word-break:break-all;white-space:normal}.pads-availability-title{color:#D85C3A;font-family:Arial;font-size:16px;font-style:normal;font-weight:700;text-decoration:none}.pads-availability-title a{color:#05A;font-size:13px;font-weight:400}.pads-availability-disclaimer{color:#888;font-family:Arial;font-size:12px;font-style:normal;font-weight:400;margin-top:10px;text-decoration:none}.pads-feedback{color:#888;font-family:Arial;font-size:12px;font-style:normal;font-weight:400;text-decoration:none}.pads-feedback a{color:#05A;font-size:13px}.pads-crp-description p{font-size:11px;margin:2px 0 4px;padding:0}.pads-crp-tabset{margin:0;padding:1px 0 0;position:absolute;width:210px}.pads-crp-tabset .pads-crp-taboff{background-color:#EFEFEF;border:1px solid #A1A1A1;margin:-1px 0 0 12px;padding:0;width:262px}.pads-crp-tabset .pads-crp-tabon{border-color:#363636 #FFF #363636 #363636;border-style:solid;border-width:1px;margin:-1px 2px 1px;padding:0;width:272px}.pads-crp-tabset a{color:#000;cursor:pointer;display:block;text-decoration:none}.pads-crp-tabset a:active{outline:medium none}.pads-crp-tabset .pads-crp-offer{margin:0;padding:4px 0 4px 2px}.pads-crp-tabset .pads-crp-offer .pads-offer-img{border:medium none;float:left;margin:0 2px 0 0;padding:0;width:45px}.pads-crp-tabset .pads-crp-offer .pads-offer-img img{border:medium none;height:45px;margin:0;padding:0;width:45px}.pads-crp-tabset .pads-crp-offer .pads-offer-details{display:block;margin:0 0 0 2px;padding:0}.pads-crp-tabset .pads-crp-offer .pads-title{display:block;font-size:11px;font-weight:400;height:28px;line-height:13px;margin:0 0 0 45px;overflow:hidden;padding:0}.pads-crp-tabset .pads-crp-offer .pads-price{color:#900;font-size:11px;font-weight:400;margin:0 0 0 45px;padding:2px 0 0;width:207px}.pads-crp-tabset .pads-crp-offer .pads-ship{color:#555;font-size:9px;font-weight:400;margin:0;padding:0 2px 0 0}.pads-crp-form{background-color:#FFF;border:1px solid #363636;display:inline;float:left;margin:0 0 6px 273px;padding:6px 10px 10px;width:425px}.pads-crp-form .pads-crp-title{color:#E47911;font-size:11px;font-weight:700;margin:0;padding:0}.pads-crp-form .pads-crp-issue-list{float:left;margin:8px 0 0;padding:0;width:220px}.pads-crp-form .pads-crp-issue-list-secondary{border-top:1px solid #ACACAC;display:block;float:left;margin:3px 0 0;padding:6px 0 0;width:auto}.pads-crp-form .pads-crp-issue{font-size:11px;margin:0;padding:0}.pads-crp-form .pads-crp-issue input{float:left;margin:0 1px 6px 0;padding:0;width:20px}.pads-crp-form .pads-crp-issue .pads-crp-issue-copy{margin:0 0 6px 6px;padding:0}.pads-crp-form .pads-crp-issue .pads-crp-issue-label{font-weight:700;margin:0;padding:0 3px 0 0}.pads-crp-form .pads-crp-issue .pads-crp-issue-copy-long{margin:0 0 6px 6px;padding:0;width:auto}.pads-crp-form .pads-crp-issue .pads-crp-issue-copy-long .pads-crp-issue-long{font-weight:700}.pads-crp-form .pads-crp-comment{float:right;font-size:10px;font-weight:700;margin:8px 5px 0 0;padding:0;width:170px}.pads-crp-form .pads-crp-comment textarea{font-family:verdana,arial,helvetica,sans-serif;font-size:10px;height:180px;margin:3px 0 10px;padding:3px;width:175px}.pads-crp-form-nav{clear:both;margin:0 0 0 350px;padding:0}.pads-crp-form-nav ul{list-style:none outside none;margin:0;padding:0}.pads-crp-form-nav li{display:inline;margin:0 8px 0 0;padding:0}.pads-crp-form-nav li a img{border:medium none}.sp_offerVertical{position:relative}.sp_offerVertical .sp_adID{padding:6px 2px;top:0;left:0;width:100%;text-decoration:none;border-top:1px solid #6daee1;background-color:#f0f7fc;background-color:rgba(240,247,252,.8);border-bottom:1px dotted #6daee1;font-size:12px;position:absolute}.sp_offerVertical .sp_adID a{text-decoration:none;display:block;line-height:12px;background:url(https://images-na.ssl-images-amazon.com/images/G/01/productAds/pa_feedback_bubble.png) no-repeat 130px 0}.sp_offerVertical .sp_adID a .a-icon-popover{display:none}.sp_offerVertical .sp_adID a:hover{background:url(https://images-na.ssl-images-amazon.com/images/G/01/productAds/pa_feedback_bubble.png) no-repeat 130px -12px}.sp_offerVertical .sp-detail-blurb{line-height:17px}.sp_offerVertical .sp-detail-blurb span{font-family:georgia}a.sp_help_link .a-icon-popover{display:none}div#sponsoredProductsDpShvl ul li{width:160px}.a-ie7 .sp_adID{background:0 0;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#80F0F7FC, endColorstr=#80F0F7FC);zoom:1}.a-lt-ie9 .SP-Ad-Feedback a.dynamicSPFL{padding:0 17px 1px 0;background:url(https://images-na.ssl-images-amazon.com/images/G/01/productAds/ad_feedback_icon_1Xsprite.png) right 0 no-repeat}.a-lt-ie9 .SP-Ad-Feedback a.dynamicSPFL:hover{padding:0 17px 1px 0;background:url(https://images-na.ssl-images-amazon.com/images/G/01/productAds/ad_feedback_icon_1Xsprite.png) right -13px no-repeat}div#sp_dp_fb_image{margin-right:0}.SP-Ad-Feedback{font-family:arial;font-size:11px;text-align:right}.SP-Ad-Feedback a.dynamicSPFL{text-decoration:none;padding:0 19px 2px 0;line-height:11px;margin:0 0 0 2px;display:inline-block;background:url(https://images-na.ssl-images-amazon.com/images/G/01/productAds/ad_feedback_icon_2Xsprite.png) right 0 no-repeat;background-size:15px;color:#0066C0}.SP-Ad-Feedback a.dynamicSPFL:hover{text-decoration:underline;padding:0 19px 2px 0;background:url(https://images-na.ssl-images-amazon.com/images/G/01/productAds/ad_feedback_icon_2Xsprite.png) right -13px no-repeat;background-size:15px;color:#E47911}.sponsored-products-truncator-truncate{max-height:76px;overflow:hidden}.sponsored-products-deal-badge-generic{height:24px;font-size:12px;font-family:\"Amazon Ember\",Arial,sans-serif;letter-spacing:0;line-height:24px;padding-top:5px;padding-bottom:5px;padding-right:10px;padding-left:10px}.sponsored-products-deal-evergreen-badge{background-color:#888;color:#FFF}.sponsored-products-deal-prime-day-badge{background-color:#79F0FF;color:#111}.sponsored-products-deal-sale-day-badge{background-color:#00464F;color:#FFF}.sponsored-products-deal-discount-text{font-family:\"Amazon Ember\",Arial,sans-serif;font-size:12px;color:#555;letter-spacing:0;line-height:18px}.sponsored-products-deal-discount-text-mobile{font-family:\"Amazon Ember\",Arial,sans-serif;font-size:13px;color:#555;letter-spacing:0;line-height:17px}\n#miniATF_imageColumn{margin-right:15px!important;margin-left:15px!important}#miniATFUDP{position:fixed;top:0;left:0;right:0;box-shadow:rgba(0,0,0,.0980392) 3px 3px 3px;width:100%;z-index:50;background:#fefefe;background:-moz-linear-gradient(top,#f6f6f6 0,#fff 100%);background:-webkit-gradient(linear,left top,left bottom,color-stop(0,#f6f6f6),color-stop(100%,#fff));background:-webkit-linear-gradient(top,#f6f6f6 0,#fff 100%);background:-o-linear-gradient(top,#f6f6f6 0,#fff 100%);background:-ms-linear-gradient(top,#f6f6f6 0,#fff 100%);background:linear-gradient(to bottom,#f6f6f6 0,#fff 100%);border-top:solid 1px #d3d3d3;border-bottom:solid 1px #e5e5e5;padding-right:20px;display:none}.miniATF_buyBox{width:200px}#miniATFUDP .a-icon-prime{position:relative;top:2px}#miniATFUDP .a-icon-addon{margin-right:10px}.miniATF_topMargin{margin-top:12px}#miniATF_imageColumn{height:40px}.miniATFImage{max-width:40px;max-height:40px}#miniATF_titleLink{color:#333}#miniATF_titleLink:hover{color:#E47911;text-decoration:none}#miniATFUDP a.pads-external-link:hover{text-decoration:none}#miniATFUDP .firstSection{width:50%}#miniATFUDP .middleSection{width:10%}#miniATFUDP .lastSection{width:30%}#prodDetails .table-padding{margin-left:12px}#ivMain.legacyImmersiveView{padding:0 15px;width:100%;height:100%;display:block}.legacyImmersiveView .placeholder,.legacyImmersiveView .placeholderVideo{display:none!important}.legacyImmersiveView .fullscreen{max-width:none!important}.legacyImmersiveView #ivThumbColumn{float:left;width:235px}.legacyImmersiveView #ivTitle{cursor:pointer;color:#039;text-align:left;margin-top:10px;font-family:verdana,arial,helvetica,sans-serif;font-size:14px;font-weight:700;word-wrap:break-word;width:235px}.legacyImmersiveView #ivTitle:hover{text-decoration:underline;color:orange}.legacyImmersiveView #ivVariationSelection{text-align:left}.legacyImmersiveView #ivMediaSelection{width:235px;border:1px solid #C9E1F4;background-color:#EAF3FD;padding-top:5px;padding-bottom:5px;margin-top:15px;display:none}.legacyImmersiveView #ivMediaSelect{position:relative;left:65px}.legacyImmersiveView #ivThumbs{border:1px solid #C9E1F4;width:235px;height:290px;padding-left:15px;padding-top:15px;padding-bottom:15px;overflow-y:auto;border-top:0;margin-bottom:15px;position:relative;top:0;left:0}.legacyImmersiveView #ivThumbs.noMediaSelection{margin-top:15px;border-top:1px solid #C9E1F4}.legacyImmersiveView #ivVideoList{border:1px solid #C9E1F4;width:235px;height:230px;padding:0;overflow-y:auto;border-top:0;display:none}.legacyImmersiveView .ivThumb{border:1px solid #ddd;float:left;margin-right:12px;margin-bottom:20px;cursor:pointer;padding:1px}.legacyImmersiveView .ivThumb.selected,.legacyImmersiveView .ivThumb.selected:hover,.legacyImmersiveView .ivThumbVideoListOuter.selected .ivThumbVideoList,.legacyImmersiveView .ivThumbVideoListOuter.selected:hover .ivThumbVideoList{border:2px solid #E47911;padding:0}.legacyImmersiveView .ivThumb:hover,.legacyImmersiveView .ivThumbVideoListOuter:hover .ivThumbVideoList{border:2px solid #004B91;padding:0}.legacyImmersiveView .ivThumbImage{float:left;position:relative;width:50px;height:50px;background-color:#fff}.legacyImmersiveView .ivThumbVideoListOuter{float:left;width:100%;padding-top:5px;padding-bottom:5px;cursor:pointer}.legacyImmersiveView .ivThumbVideoListOuter:hover{background-color:#EAF3FD}.legacyImmersiveView .ivThumbVideoList{border:1px solid #ddd;float:left;margin-left:10px;margin-right:10px;cursor:pointer;padding:1px}.legacyImmersiveView .ivThumbText{float:left;word-wrap:break-word;width:130px;margin-top:10px;font-family:verdana,arial,helvetica,sans-serif;font-size:11px}.legacyImmersiveView .ivThumbText:hover{background-color:#EAF3FD}.legacyImmersiveView .ivVariations{padding-top:10px;padding-bottom:3px;font-family:verdana,arial,helvetica,sans-serif;font-size:11px;color:#666}.legacyImmersiveView .ivRow{height:75px}.legacyImmersiveView .ivClearfix{clear:both}.legacyImmersiveView .ivThumbVideoPopover{font-family:verdana,arial,helvetica,sans-serif;font-size:11px}.legacyImmersiveView #ivStage{float:left;height:100%;margin-left:15px}.legacyImmersiveView #ivLargeImage{overflow:hidden;width:100%;align:center;position:relative;height:100%}.legacyImmersiveView #ivLargeVideo{overflow:hidden;width:100%;height:100%;text-align:center}#imageBlock.show-banner{max-height:600px!important}#banner-outer-container{padding-left:19px}#image_block_video_banner,#immersive_view_video_banner{height:60px;visibility:hidden;margin:auto;margin-bottom:5px;width:100%;margin-top:-7px}#image_block_video_banner.show-banner,#immersive_view_video_banner.show-banner{visibility:visible}#image_block_video_banner a,#immersive_view_video_banner a{display:inline-block;cursor:pointer;position:relative;height:100%;width:100%;background:#000;border-bottom-right-radius:10px;border-bottom-left-radius:10px}#image_block_video_banner a>div:first-of-type,#immersive_view_video_banner a>div:first-of-type{position:absolute;top:0;left:0;padding-left:10px;padding-top:7px}#image_block_video_banner img#image-block-banner,#immersive_view_video_banner img#image-block-banner{height:45px}#image_block_video_banner .ibv-banner-captions,#immersive_view_video_banner .ibv-banner-captions{position:absolute;top:0;right:0;bottom:0;margin:auto;height:1em;padding-right:10px}#image_block_video_banner a .ibv-banner-captions span,#immersive_view_video_banner a .ibv-banner-captions span{color:#fff!important;font-size:14px!important;line-height:1.2!important}#image_block_video_banner video{visibility:hidden}#imageBlock #main-image-container.show-banner,.burj #imageBlock #main-image-container.show-banner{max-height:600px!important}#ivLargeVideo.show-banner{overflow:initial}@media screen and (max-height:768px){#imageBlock.show-banner #main-image-container,.burj #imageBlock.show-banner #main-image-container{max-height:430px!important}#imageBlock.show-banner{max-height:430px!important}}@media only screen and (max-width:1075px){#image_block_video_banner a>div:first-of-type,#immersive_view_video_banner a>div:first-of-type{bottom:0;right:0;padding-left:0}#image_block_video_banner .ibv-banner-captions,#immersive_view_video_banner .ibv-banner-captions{display:none}}#altImages .videoBlockIngress .video-count{font-size:9px!important;text-align:center;width:40px;padding-top:2px}#imageBlock #main-image-container #videoCaption a.more-videos.a-declarative{margin-top:5px}#iv-tab-view-container .iv-box{display:block;background-color:#fff}#iv-tab-view-container .iv-box .iv-box-inner{position:relative}#iv-tab-view-container .iv-box-tab{display:none}#iv-tab-view-container ul.iv-tab-views{margin:0 15px;list-style-type:none;border-bottom:2px solid #E7E7E7;padding:0 15px;height:45px}#iv-tab-view-container ul.iv-tab-views:before,#iv-tab-view-container ul.iv-views:after{display:table;content:\"\";line-height:0;font-size:0}#iv-tab-view-container ul.iv-tab-views:after{clear:both}#iv-tab-view-container ul.iv-tab-views .iv-tab-heading,#iv-tab-view-container ul.iv-tab-views li{float:left;list-style-type:none;height:45px}#iv-tab-view-container ul.iv-tab-views .iv-tab-heading a,#iv-tab-view-container ul.iv-tab-views li a{-webkit-transition:all .1s linear;transition:all .1s linear;text-decoration:none;line-height:20px;height:45px;font-size:15px;padding:15px 0;margin:0 15px;display:block;border-bottom:2px solid transparent;position:relative;color:#6C7778}#iv-tab-view-container ul.iv-tab-views .iv-tab-heading a:after,#iv-tab-view-container ul.iv-tab-views li a:after{content:\"\";width:100%;height:1px;position:absolute;bottom:0;left:0;-webkit-transition:background-color .1s linear;transition:background-color .1s linear}#iv-tab-view-container ul.iv-tab-views .iv-tab-heading a:hover,#iv-tab-view-container ul.iv-tab-views li a:hover{border-top-color:transparent;text-decoration:none;color:#002F36}#iv-tab-view-container ul.iv-tab-views .iv-tab-heading.iv-active a,#iv-tab-view-container ul.iv-tab-views li.iv-active a{border-color:#FF8F00;background-color:#fff;color:#002F36;font-weight:400;height:45px}#iv-tab-view-container ul.iv-tab-views .iv-tab-heading.iv-active a:hover:after,#iv-tab-view-container ul.iv-tab-views li.iv-active a:hover:after{background-color:transparent}#iv-tab-view-container .placeholder{display:none!important}#iv-tab-view-container .fullscreen{max-width:none!important}#iv-tab-view-container #ivMain,#iv-tab-view-container #ivMain360{width:100%;height:100%;display:block}#iv-tab-view-container #ivThumbColumn,#iv-tab-view-container #ivThumbColumn360{float:right;width:280px}#iv-tab-view-container #ivTitle,#iv-tab-view-container #ivTitle360{color:#111;text-align:left;margin-top:30px;font-family:verdana,arial,helvetica,sans-serif;font-size:17px;word-wrap:break-word;width:280px;padding-right:15px}#iv-tab-view-container #ivVariationSelection,#iv-tab-view-container #ivVariationSelection360{text-align:left;padding-right:15px}#iv-tab-view-container #ivThumbs,#iv-tab-view-container #ivThumbs360{width:280px;height:290px;padding-top:15px;padding-bottom:15px;overflow-y:auto;margin-bottom:15px;position:relative;top:0;left:0}#iv-tab-view-container #ivThumbs.noMediaSelection,#iv-tab-view-container #ivThumbs360.noMediaSelection{margin-top:15px;border-top:1px solid #C9E1F4}#iv-tab-view-container .ivThumb{border:2px solid #D5DBDB;float:left;margin:0 15px 15px 0;cursor:pointer}#iv-tab-view-container .ivThumb.selected,#iv-tab-view-container .ivThumb.selected:hover{border:2px solid #FF8F00;padding:0}#iv-tab-view-container .ivThumb:hover{border:2px solid #004B91;padding:0}#iv-tab-view-container .ivThumbImage{float:left;position:relative;width:50px;height:50px;background-color:#fff}#iv-tab-view-container .ivThumbText{float:left;word-wrap:break-word;width:130px;margin-top:10px;font-family:verdana,arial,helvetica,sans-serif;font-size:11px}#iv-tab-view-container .ivThumbText:hover{background-color:#EAF3FD}#iv-tab-view-container .ivVariations{padding-top:10px;padding-bottom:3px;font-family:verdana,arial,helvetica,sans-serif;font-size:12px;color:#767676}#iv-tab-view-container .ivRow{height:65px}#iv-tab-view-container .ivClearfix{clear:both}#iv-tab-view-container #ivStage,#iv-tab-view-container #ivStage360{float:left;height:100%;padding-right:15px}#iv-tab-view-container #ivLargeImage{overflow:hidden;width:100%;align:center;position:relative;height:100%}#iv-tab-view-container .iv-box-inner{height:100%}#iv-tab-view-container #ivVideoBlock{padding:25px 0;height:100%}\n.bundle-prime-icon{margin-left:5px}.bundle-comp-preorder,.bundle-comp-prices,.bundle-comp-reviews,.bundle-comp-title{margin-bottom:3px}.bundle-comp-price-qual{font-size:.8em;color:#555}.bundle-comp-bullets{margin-top:7px}.bundle-title{margin-bottom:15px}.bundle-price{color:#555;max-width:500px;min-width:350px}.bundle-divider{border-color:#ccc;margin:15px 0 15px 0}.bundle-comp-price{font-size:1.2em}#bundleV2_feature_div{clear:left;overflow:hidden}#customizable_ingressv2_text{height:75px}\n.actionPanelSecondaryPanel{width:420px;height:100%;position:absolute;top:-1px;left:420px;border-top:1px solid #e7e7e7}.actionPanelSecondaryPanelHeadingSection{width:100%}.actionPanelSecondaryPanelHeadingText{position:relative;top:4px;left:-30px;z-index:-1}.actionPanelSecondaryPanelBackButton{width:30px;height:30px;float:left;margin-left:18px;cursor:pointer}hr.actionPanelSecondaryPanelDivider{border-top:2px solid #f3f3f3;margin-bottom:0}.elevatorBar{height:55px}#elevatorBar{width:104%;padding:0 18px;background:#f3f3f3;position:relative;left:-18px;min-width:1024px}#elevatorBar.stickyBar{position:fixed;top:0;left:0;z-index:99;width:100%}#elevatorHeadingSection{margin-right:18px}.elevatorSection{display:inline-block;height:100%}.elevatorButton{padding:19px 14px 18px;text-align:center;color:#767676;cursor:pointer}.elevatorButton:hover{background:#d7d7d7;color:#666}.elevatorButton.elevatorHighlight{background:#bababa;color:#555}.elevatorTextWrapper{display:inline-table;height:100%}.elevatorText{display:table-cell;vertical-align:middle}.elevatorDividerSection{display:inline-block;margin:0 4px}.elevatorDivider{border-left:1px solid #d7d7d7;height:20px}#elevatorViewBuyingOptionsSection{float:right}#elevatorViewBuyingOptionsButton{margin-top:10px}#elevatorViewBuyingOptionsButton .a-button-inner{width:190px;height:35px}#elevatorViewBuyingOptionsButton-announce{padding-top:3px}#burjPageDivider{border-top:14px solid #f3f3f3}#elevatorBottom.burj{display:none}.prestige_beauty #brandBar{margin-top:10px;height:55px;text-align:left}.burj #brandBar{margin-top:10px;height:55px;text-align:center}.burj #logoByLine,.prestige_beauty #logoByLine{max-width:200px;max-height:55px;padding:0 10px;background:#fff;-webkit-box-sizing:content-box;-ms-box-sizing:content-box;box-sizing:content-box}.burj #brandBarHorizontalLine{height:1px;width:500px;margin:auto;margin-top:-32.5px;background:#ddd;background:-moz-linear-gradient(left,rgba(255,255,255,1) 0,rgba(255,255,255,0) 10%,rgba(255,255,255,0) 90%,rgba(255,255,255,1) 100%),#ddd;background:-webkit-gradient(linear,left top,right top,color-stop(0,rgba(255,255,255,1)),color-stop(10%,rgba(255,255,255,0)),color-stop(90%,rgba(255,255,255,0)),color-stop(100%,rgba(255,255,255,1))),#ddd;background:-webkit-linear-gradient(left,rgba(255,255,255,1) 0,rgba(255,255,255,0) 10%,rgba(255,255,255,0) 90%,rgba(255,255,255,1) 100%),#ddd;background:-o-linear-gradient(left,rgba(255,255,255,1) 0,rgba(255,255,255,0) 10%,rgba(255,255,255,0) 90%,rgba(255,255,255,1) 100%),#ddd;background:-ms-linear-gradient(left,rgba(255,255,255,1) 0,rgba(255,255,255,0) 10%,rgba(255,255,255,0) 90%,rgba(255,255,255,1) 100%),#ddd;background:linear-gradient(to right,rgba(255,255,255,1) 0,rgba(255,255,255,0) 10%,rgba(255,255,255,0) 90%,rgba(255,255,255,1) 100%),#ddd}.burj #brandBarLogoWrapper,.prestige_beauty #brandBarLogoWrapper{display:inline-block;height:55px}.burj #brandteaser,.prestige_beauty #brandteaser{display:table-cell;vertical-align:middle;height:55px;text-decoration:none}.burj #brandBar.aeBrandBar,.prestige_beauty #brandBar.aeBrandBar{padding:4px;height:50px;overflow:visible;white-space:nowrap}.burj #logoByLine.aeLogo,.prestige_beauty #logoByLine.aeLogo{border-right:solid 1px #F90;padding:0 6px 0 0;margin-right:6px;height:42px}.burj #brandBarTagline,.prestige_beauty #brandBarTagline{max-width:400px;padding-top:18px}#sns-frequency-button{cursor:pointer}.sns-frequency-dropdown-icon{position:absolute;right:10px;top:50%;margin-top:-4px}.sns-native-frequency-dropdown{display:block}html.a-js .sns-native-frequency-dropdown{display:none}#actionPanel #toggleBuyBox .sns-frequency-dropdown-popover-button{border:1px #DDD solid}.sns-frequency-dropdown-popover-button{display:none}html.a-js .sns-frequency-dropdown-popover-button{display:block}.sns-frequency-dropdown-popover-button:hover{border-color:#CACACA}.sns-frequency-dropdown-popover-button:active{border-color:#BABABA}.sns-frequency-dropdown-select-box{border-bottom:1px #DDD solid}.sns-selected-frequency{background-color:#E6E6E6;border-left:2px #E47911 solid}.sns-selected-frequency .sns-month-text{font-weight:700}ul.sns-frequency-dropdown-option-list li{border-bottom:1px solid #F3F3F3;cursor:pointer}ul.sns-frequency-dropdown-option-list li:last-child{border-bottom:none}ul.sns-frequency-dropdown-option-list li:hover{background-color:#E6E6E6}#actionPanel #chkMomOuter label{display:inline;padding-left:0;position:initial}#actionPanel .a-mom-checkbox{display:inline;background:#e4e4e4;border-radius:2px;margin-right:10px;padding:5px 10px 5px 2px}#actionPanel .mom-signup-button.a-button .a-button-inner{background:#009DD9;box-shadow:0 1px 0 rgba(255,255,255,.15) inset;filter:none}#actionPanel .mom-signup-button.a-button .a-button-text{color:#fff}#actionPanel .mom-signup-button.a-button:hover .a-button-inner{background:#4A8BA5;filter:none}#actionPanel .a-mom-text-right{float:right}.burj.centered-feature-container,.prestige_beauty.centered-feature-container{margin:auto;margin-top:50px}.burj .bRecPlusSign,.prestige_beauty .bRecPlusSign{font-family:Arial;color:#ddd}.burj .bRecSwappableCenter,.prestige_beauty .bRecSwappableCenter{float:left;width:auto}.burj #bRecHorizontalView .bRecRow:first-child,.burj #rootItemImage,.prestige_beauty #bRecHorizontalView .bRecRow:first-child,.prestige_beauty #rootItemImage{display:inline-block}.burj .bRecNarrowElastic,.prestige_beauty .bRecNarrowElastic{float:left}.burj .bRecContentCompartment,.prestige_beauty .bRecContentCompartment{width:auto;float:left}.burj .bRecPlusContainer,.prestige_beauty .bRecPlusContainer{width:auto;text-align:center;margin-top:93px;float:left}.burj .bRecHeaderRow,.prestige_beauty .bRecHeaderRow{padding-top:44px;max-width:620px}.prestige_beauty .burj .bRecHeaderRow{text-align:center;margin-left:auto;margin-right:auto}.burj .bRecSummary,.prestige_beauty .bRecSummary{font-size:16px;line-height:23px}.burj .bRecTitle,.prestige_beauty .bRecTitle{font-size:21px;line-height:27px;color:#111}.prestige_beauty .burj .bRecTitle{font-size:28px;line-height:34px}.burj .bRecCenteredText,.prestige_beauty .bRecCenteredText{text-align:center}#bRecItemTitle a:link,.burj .bRecGreyText,.prestige_beauty .bRecGreyText{color:#767676}.burj #bRecItemTitle,.prestige_beauty #bRecItemTitle{margin-bottom:4px}.burj .bRecBlurbBox,.prestige_beauty .bRecBlurbBox{padding-left:20px;border-left:solid 2px #EEE;position:relative;height:100%;padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0}.burj .bRecItem,.prestige_beauty .bRecItem{float:left;border-right:solid 1px #e3e3e3}.burj .bRecBuyBox,.prestige_beauty .bRecBuyBox{margin-left:9px;float:left;width:200px}.burj .bRecPricePara,.prestige_beauty .bRecPricePara{font-size:17px;line-height:21px;border-bottom:solid 1px #e3e3e3;margin-top:44px;margin-bottom:14px;padding-bottom:10px}.burj #bRecForm,.prestige_beauty #bRecForm{margin-bottom:44px;display:inline-block}.burj #bRecFormDiv,.prestige_beauty #bRecFormDiv{margin-bottom:44px}.prestige_beauty .burj #bRecFormDiv{text-align:center}.burj #bRecForm,.burj #beautyRecommendations,.prestige_beauty #bRecForm,.prestige_beauty #beautyRecommendations{position:relative}.burj #beautyRecommendations,.prestige_beauty #beautyRecommendations{margin-left:auto;margin-right:auto}.burj .bRecItemPara,.prestige_beauty .bRecItemPara{display:table;margin-left:auto;margin-right:auto}.burj .bRecItemTitleAndPrice,.prestige_beauty .bRecItemTitleAndPrice{display:table-cell}.burj .clear-float,.prestige_beauty .clear-float{clear:both}.burj .bRecHeaderRow,.prestige_beauty .bRecHeaderRow{padding-bottom:44px}.burj .bRecItem,.prestige_beauty .bRecItem{margin-right:22px;padding-right:22px}.burj .bRecPlusSign,.prestige_beauty .bRecPlusSign{font-size:60px;width:35px}.burj .bRecNarrowElastic,.prestige_beauty .bRecNarrowElastic{width:35px}.burj #responsiveHelper,.prestige_beauty #responsiveHelper{display:none}@media screen and (max-width:1279px){.burj .bRecHeaderRow,.prestige_beauty .bRecHeaderRow{padding-bottom:22px}.burj .bRecItem,.prestige_beauty .bRecItem{margin-right:18px;padding-right:18px}.burj .bRecPlusSign,.prestige_beauty .bRecPlusSign{font-size:35px;width:20px}.burj .bRecNarrowElastic,.prestige_beauty .bRecNarrowElastic{width:20px}.burj.centered-feature-container,.prestige_beauty.centered-feature-container{width:927px}.burj #responsiveHelper,.prestige_beauty #responsiveHelper{display:block}}#actionPanel #apos #snsOption .sns-popover-trigger{display:none}html.a-js #actionPanel #apos #snsOption .sns-popover-trigger{display:inline}#actionPanel #apos #snsOption .sns-details-link{display:inline}html.a-js #actionPanel #apos #snsOption .sns-details-link{display:none}#pantry-store-message.burj{display:block}#pantry-store-message.burj:hover{text-decoration:none}#pantry-store-message.burj .pantry-store-message-inner{position:relative}#pantry-store-message.burj .arrow_icon{top:50%;position:absolute;right:1rem;margin-top:-.7rem;font-weight:700;color:#767676!important;font-family:Arial Unicode MS,arial,verdana,helvetica,sans-serif}#pantry-store-message.burj .grid-arrow-icon{margin-top:10px;font-weight:700;color:#767676!important;font-family:Arial Unicode MS,arial,verdana,helvetica,sans-serif}.a-ie8 #pantry-store-message.burj .arrow_icon{position:relative;float:right}#pantry-store-message.burj .pantry-store-message-inner{padding:.5rem 0}#pantry-store-message.burj .pantry-store-message-inner .a-size-base.a-color-base{font-weight:700}#pantry-store-message.burj .pantry-store-message-inner .a-size-base.a-color-tertiary{color:#000!important}.burj #pantryShippingWeight_feature_div #shipWeight{margin-top:10px!important}#colorScenes_feature_div{margin-top:26px;position:relative}#colorScenesStage{height:500px;margin-bottom:26px;position:absolute}@media screen and (max-height:768px){#colorScenesStage{height:350px}}#colorScenesIngressContainer{position:absolute;top:-110px;right:15px}#colorScenesBackButton{text-align:left;margin-bottom:15px}#colorScenesBackArrowImage{width:50px;height:50px;cursor:pointer}#colorScenesIngressButton{width:110px;cursor:pointer}#colorScenesIngressImages{height:53px}#colorScenesIngressLeftImg,#colorScenesIngressMainImg,#colorScenesIngressRightImg{background-color:#E6E6E6;box-shadow:0 0 2pt .3pt #8A8A8A;-webkit-box-shadow:0 0 2pt .3pt #8A8A8A;-moz-box-shadow:0 0 2pt .3pt #8A8A8A;background-repeat:no-repeat}#colorScenesIngressMainImg{width:48px;height:58px;border:#FFF solid 2px;border-radius:3px;margin-top:-49px;background-size:238px 54px;background-position:-97px 0}#colorScenesIngressLeftImg{margin-right:-14px}#colorScenesIngressLeftImg,#colorScenesIngressRightImg{width:35px;height:40px;border:#FFF solid 1px;border-radius:2px;background-size:177px 40px}#colorScenesIngressRightImg{background-position:-143px 0}#counterColorScenesIngress{cursor:pointer}#colorScenesBackArrowImage{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/BurjDesktopAssets-burjSprite-eaed2442e6aae5d847ed1e5f41afdad81193ba35._V2_.png);background-size:284px 715px;background-position:-1px -56px;background-repeat:no-repeat}html[dir=rtl] #colorScenesBackArrowImage{transform:scaleX(-1)}#colorScenesCarouselSection{overflow:hidden;margin-bottom:25px}#colorScenesControls{margin-right:438px;position:relative;text-align:center}#colorSceneSliderSection{display:inline-block}#colorSceneSliderSection,#colorScenesControls,#colorScenesStage{-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none}#colorSceneSkinToneSection{position:absolute;right:0;top:-25px}#colorSceneSkinToneButton{width:80px;height:60px;float:right;font-size:12px;color:#696969;cursor:pointer}#colorSceneSkinToneButtonImage{width:50px;height:50px;margin-left:15px;background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/BurjDesktopAssets-burjSprite-eaed2442e6aae5d847ed1e5f41afdad81193ba35._V2_.png);background-size:284px 715px;background-position:-58px -1px;background-repeat:no-repeat}html[dir=rtl] #colorSceneSkinToneButtonImage{transform:scaleX(-1)}#skinTonePanel{display:inline;cursor:pointer}#skinToneRow{margin-top:12px;margin-right:22px}.skinToneColor{width:37px;height:32px;border-radius:3px;margin-right:3px;margin-left:0;float:left;cursor:pointer}.selectedSkinTone{box-shadow:0 0 2pt .3pt #8A8A8A;-webkit-box-shadow:0 0 2pt .3pt #8A8A8A;-moz-box-shadow:0 0 2pt .3pt #8A8A8A;border:#FFF;border-style:solid;border-width:2px;border-radius:3px;background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/BurjDesktopAssets-burjSprite-eaed2442e6aae5d847ed1e5f41afdad81193ba35._V2_.png);z-index:2;background-size:284px 715px;background-position:-57px -59px;background-repeat:no-repeat}html[dir=rtl] .selectedSkinTone{transform:scaleX(-1)}#skinTone_50{background-color:#835140}#skinTone_40{background-color:#c18462}#skinTone_30{background-color:#d79c82}#skinTone_20{background-color:#e4bea8}#skinTone_10{background-color:#f0d4c3}#colorSceneSliderBar{align-self:center;width:350px;height:5px;background-color:#E6E3E3;border-radius:2px;cursor:pointer}#colorSceneSlider{width:50px;height:10px;border-radius:5px;background-color:#fff;box-shadow:0 1px 5px #888;-webkit-box-shadow:0 1px 5px #888;-moz-box-shadow:0 1px 5px #888;position:relative;top:-3px;cursor:pointer}#colorScenesCarouselContainer,#colorScenesCarouselContainer .a-carousel-viewport{height:344px!important}#colorScenesCarouselContainer .a-carousel{margin-top:30px}.carouselSceneElement{margin-left:5px!important;width:188px!important;height:213px;border-radius:5px}.carouselSceneImage{width:188px;height:213px;background-size:940px 213px;position:absolute;border-radius:5px;background-color:#E6E6E6;background-repeat:no-repeat;background-position:center;cursor:pointer}.sceneImageNamePlate{color:#8E8E94;width:188px;position:absolute;margin-top:228px;text-align:center;vertical-align:top;font-size:medium;cursor:default}.selectedCarouselItem.carouselSceneImage{width:246px;height:277px;margin-left:-27px;margin-top:-27px;background-size:1230px 277px;position:absolute;z-index:1000;border:#FFF;border-style:solid;border-width:4px;border-radius:10px;box-shadow:0 0 2px 1px #8A8A8A;-webkit-box-shadow:0 0 2px 1px #8A8A8A;-moz-box-shadow:0 0 2px 1px #8A8A8A}.selectedCarouselItem.sceneImageNamePlate{color:#000;font-size:large;margin-top:270px}.carouselSceneImage.skinTone_50_position{background-position:0 0}.carouselSceneImage.skinTone_40_position{background-position:-188px 0}.carouselSceneImage.skinTone_30_position{background-position:-376px 0}.carouselSceneImage.skinTone_20_position{background-position:-564px 0}.carouselSceneImage.skinTone_10_position{background-position:-752px 0}.carouselSceneImage.selectedCarouselItem.skinTone_50_position{background-position:-2px 0}.carouselSceneImage.selectedCarouselItem.skinTone_40_position{background-position:-246px 0}.carouselSceneImage.selectedCarouselItem.skinTone_30_position{background-position:-492px 0}.carouselSceneImage.selectedCarouselItem.skinTone_20_position{background-position:-738px 0}.carouselSceneImage.selectedCarouselItem.skinTone_10_position{background-position:-984px 0}@media only screen and (-webkit-min-device-pixel-ratio:1.5),only screen and (min--moz-device-pixel-ratio:1.5),only screen and (min-resolution:240dpi){#colorScenesBackArrowImage{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/BurjDesktopAssets-burjSpriteHighRes-3472c781ac53549c6563a9e61e6859df08f2bf3e._V2_.png);background-size:333px 333px;background-position:0 -63px}#colorSceneSkinToneButtonImage{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/BurjDesktopAssets-burjSpriteHighRes-3472c781ac53549c6563a9e61e6859df08f2bf3e._V2_.png);background-size:300px 300px;background-position:-57px -1px}.selectedSkinTone{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/BurjDesktopAssets-burjSpriteHighRes-3472c781ac53549c6563a9e61e6859df08f2bf3e._V2_.png);background-size:300px 300px;background-position:-57px -59px}}@media screen and (max-width:1366px){#colorScenesCarouselContainer,#colorScenesCarouselContainer .a-carousel-viewport{height:285px!important}#colorScenesCarouselContainer .a-carousel{margin-top:30px}.carouselSceneElement{width:150px!important;height:170px}.carouselSceneImage{width:150px;height:170px;background-size:750px 170px}.sceneImageNamePlate{margin-top:180px;width:150px;font-size:small}.selectedCarouselItem.carouselSceneImage{width:198px;height:223px;margin-left:-27px;margin-top:-27px;background-size:990px 215px}.selectedCarouselItem.sceneImageNamePlate{margin-top:210px;font-size:medium;margin-left:-5px}.carouselSceneImage.skinTone_50_position{background-position:0 0}.carouselSceneImage.skinTone_40_position{background-position:-150px 0}.carouselSceneImage.skinTone_30_position{background-position:-300px 0}.carouselSceneImage.skinTone_20_position{background-position:-450px 0}.carouselSceneImage.skinTone_10_position{background-position:-600px 0}.carouselSceneImage.selectedCarouselItem.skinTone_50_position{background-position:-2px 0}.carouselSceneImage.selectedCarouselItem.skinTone_40_position{background-position:-198px 0}.carouselSceneImage.selectedCarouselItem.skinTone_30_position{background-position:-396px 0}.carouselSceneImage.selectedCarouselItem.skinTone_20_position{background-position:-594px 0}.carouselSceneImage.selectedCarouselItem.skinTone_10_position{background-position:-792px 0}}#burjPpdDividerShadow,.actionPanelSecondaryPanelBackButton,.burj #expandTitleToggle.collapse,.burj #expandTitleToggle.expand,.burjSprite,.burjSprite_noRepeat{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/BurjDesktopAssets-burjSprite-eaed2442e6aae5d847ed1e5f41afdad81193ba35._V2_.png);background-size:284px 715px}.burj html[dir=rtl] #expandTitleToggle.collapse,.burj html[dir=rtl] #expandTitleToggle.expand,html[dir=rtl] #burjPpdDividerShadow,html[dir=rtl] .actionPanelSecondaryPanelBackButton,html[dir=rtl] .burj #expandTitleToggle.collapse,html[dir=rtl] .burj #expandTitleToggle.expand,html[dir=rtl] .burjSprite,html[dir=rtl] .burjSprite_noRepeat{transform:scaleX(-1)}.actionPanelSecondaryPanelBackButton,.burj #expandTitleToggle.collapse,.burj #expandTitleToggle.expand,.burjSprite_noRepeat{background-repeat:no-repeat}.burj #expandTitleToggle.collapse,.burj #expandTitleToggle.expand{position:relative;width:21px;height:21px}.burj #expandTitleToggle.expand{background-position:-199px -1px}.burj #expandTitleToggle.expand:hover{background-position:-199px -29px}.burj #expandTitleToggle.expand.titleToggleClickedState{background-position:-199px -57px}.burj #expandTitleToggle.collapse{background-position:-171px -1px}.burj #expandTitleToggle.collapse:hover{background-position:-171px -29px}.burj #expandTitleToggle.collapse.titleToggleClickedState{background-position:-171px -57px}.actionPanelSecondaryPanelBackButton{background-position:-114px -1px}.actionPanelSecondaryPanelBackButton:hover{background-position:-114px -57px}.actionPanelSecondaryPanelBackButton.backButtonClickedState{background-position:-114px -114px}@media only screen and (-webkit-min-device-pixel-ratio:1.5),only screen and (min--moz-device-pixel-ratio:1.5),only screen and (min-resolution:240dpi){.actionPanelSecondaryPanelBackButton{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/BurjDesktopAssets-burjSpriteHighRes-3472c781ac53549c6563a9e61e6859df08f2bf3e._V2_.png);background-position:-115px 0;background-size:302px 302px;background-repeat:no-repeat}.actionPanelSecondaryPanelBackButton:hover{background-position:-115px -57px}.actionPanelSecondaryPanelBackButton.backButtonClickedState{background-position:-115px -115px}.burj #expandTitleToggle.collapse,.burj #expandTitleToggle.expand{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/BurjDesktopAssets-burjSpriteHighRes-3472c781ac53549c6563a9e61e6859df08f2bf3e._V2_.png);background-size:302px 302px;background-repeat:no-repeat}.burj #expandTitleToggle.expand{background-position:-200px 0}.burj #expandTitleToggle.expand:hover{background-position:-200px -29px}.burj #expandTitleToggle.expand.titleToggleClickedState{background-position:-200px -57px}.burj #expandTitleToggle.collapse{background-position:-171px 0}.burj #expandTitleToggle.collapse:hover{background-position:-171px -29px}.burj #expandTitleToggle.collapse.titleToggleClickedState{background-position:-171px -57px}}#burjPpdDividerShadow{position:absolute;top:0;left:-43px;height:100%;width:42px;pointer-events:none;background-position:-227px 0}#burjPpdDivider{position:absolute;top:0;left:-1px;height:100%;width:1px;background:#ddd;background:-moz-linear-gradient(top,#fff 0,rgba(255,255,255,0) 20%,rgba(255,255,255,0) 80%,#fff 100%),#ddd;background:-webkit-gradient(linear,left top,left bottom,color-stop(0,#fff),color-stop(20%,rgba(255,255,255,0)),color-stop(80%,rgba(255,255,255,0)),color-stop(100%,#fff)),#ddd;background:-webkit-linear-gradient(top,#fff 0,rgba(255,255,255,0) 20%,rgba(255,255,255,0) 80%,#fff 100%),#ddd;background:-o-linear-gradient(top,#fff 0,rgba(255,255,255,0) 20%,rgba(255,255,255,0) 80%,#fff 100%),#ddd;background:-ms-linear-gradient(top,#fff 0,rgba(255,255,255,0) 20%,rgba(255,255,255,0) 80%,#fff 100%),#ddd;background:linear-gradient(to bottom,#fff 0,rgba(255,255,255,0) 20%,rgba(255,255,255,0) 80%,#fff 100%),#ddd}#actionPanel.ap-oos #fast-track-message{padding-top:0}#actionPanel #fast-track-message:not(:empty){padding-bottom:10px;border-bottom:1px #e6e6e6 solid}#actionPanel #fast-track-message{margin-top:18px}.burj .olpDivider{border-top:14px solid #f3f3f3;margin-top:18px}.burj #mbc .a-box.a-text-center{margin-bottom:10px;border-bottom:1px solid #f2f2f2!important;text-align:left!important;padding-top:14px}.burj #mbc .a-box{border:none}.burj #mbc .a-box.mbc-offer-row.pa_mbc_on_amazon_offer:last-of-type{border-bottom:1px solid #f2f2f2}.burj .mbcDivider{border-top:14px solid #f3f3f3}.burj #image-canvas-caption #canvasCaption{display:none}.burj #mbc br{display:none}.burj #mbc .a-size-small.a-color-secondary{color:#111!important}.burj #mbc .mbc-offer-row .a-box-inner{padding:0 10px 10px!important}.burj hr.smartShelfDivider{border-top:10px solid #f3f3f3;margin-bottom:0}.burj .ccxsmartShelf .csxsw_header{position:relative;left:23px}.burj .ccxsmartShelf .csxsw_title{width:241px;float:left;max-height:60px;line-height:20px;overflow:hidden;display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;text-overflow:ellipsis}.burj .ccxsmartShelf .csxsw_price{float:left;padding-right:4px}.burj .csxsw_clear{clear:left}.burj .ccxss_addon_badge{margin-left:4px;margin-right:4px}.burj .csxswWarrantyHeader{margin-left:16.5px;margin-right:16.5px;width:130px;float:left;height:130px;border-style:solid;border-width:1px;border-color:#555;border-radius:5px;opacity:.5}.burj .ccxssWarrantyText{position:relative;top:50%;transform:translateY(-50%)}.burj .csxswWarrantyInfo{float:left}.burj .csxswWarrantyPrice{margin-left:10px;float:left}.burj .ccxsmartShelf_header .headingSuccess{float:left;position:relative;top:50%;transform:translateY(-50%);left:23px;width:45%}.burj .ccxsmartShelf_header .headingSuccessText{padding-left:6px}.burj .ccxsmartShelf_header .headingSuccessText .a-alert-content{font-size:14px}.burj .ccxsmartShelf_header .csxsw_continue_button{width:150px;float:right}.burj .ccxsmartShelf .ccxss_atc_status_container{height:22px}.burj .ccxsmartShelf .accessory_infoT1{float:right;position:relative}.burj .ccxsmartShelf .csxswT1_image{float:left;min-width:135px;margin-left:14px;margin-right:14px}.burj .ccxsmartShelf_header{height:31px}.burj #actionPanel #dynamicDeliveryMessage_feature_div #dynamicDeliveryMessage{padding-bottom:10px;border-bottom:1px #e6e6e6 solid}.burj #actionPanel #dynamicDeliveryMessage_feature_div #dynamicDeliveryMessage #ddmDeliveryMessage{text-align:center;margin-top:6px}.burj #actionPanel #dynamicDeliveryMessage_feature_div #dynamicDeliveryMessage #ddmDeliveryMessage #ddmShippingMessage{display:block;margin-top:6px}.burj #actionPanel #dynamicDeliveryMessage_feature_div #dynamicDeliveryMessage #ddmDeliveryMessage span:nth-child(1){color:#111!important}.burj #actionPanel #dynamicDeliveryMessage_feature_div #dynamicDeliveryMessage #ddmDeliveryMessage b:nth-child(4){font-weight:400}.burj #actionPanel #dynamicDeliveryMessage_feature_div #dynamicDeliveryMessage #ddmDeliveryMessage #ddmShippingMessage #ddmPreciseDeliveryTimeTip>.a-color-secondary{color:#555!important}#actionPanel #messages-AE,.burj#messages{font-size:12px!important;line-height:normal;width:inherit}.burj#messages{margin-bottom:14px!important}.burj#messages #whiteGloveMessage_feature_div{margin-top:14px}.burj#messages #originalPackagingMessage_feature_div{margin-top:14px}.burj#messages #recommendations_feature_div{margin-top:14px}.burj#messages #productAlert_feature_div{margin-top:14px}#actionPanel #messages-AE{margin:14px 41px 20px 42px}.burj #originalPackagingMessage{margin-top:10px}.burj #leftCol-mid-left,.burj #leftCol-mid-right{float:left;width:50%}.burj #socialFabric_feature_div .a-row:after{clear:left}.burj-body #productDescription_feature_div>h2.default{color:#333;font-size:21px;font-weight:400!important;font-family:arial,verdana,helvetica,sans-serif}.burj-body #productDetailsTable{width:100%}#actionPanel #addServices_feature_div .ppdBundlesBackgroundColor{margin-left:-18px;padding-left:18px;width:auto}#actionPanel #addServices_feature_div .ppdBundlesCheckboxRow{margin-right:0!important}#actionPanel #addServices_feature_div .a-divider{margin-left:-18px!important}#actionPanel #onetimeOption #priceBadging_feature_div span,#actionPanel #usedOption #priceBadging_feature_div span{font-size:12px!important}#actionPanel #onetimeOption #priceBadging_feature_div span b,#actionPanel #usedOption #priceBadging_feature_div span b{font-weight:400!important}#actionPanel #apos #onetimeOption #priceBadging_feature_div .a-size-base.a-color-base,#actionPanel #apos #usedOption #priceBadging_feature_div .a-size-base.a-color-base{display:none}.burj #legalWarnings_feature_div #adultWarning{margin-bottom:0}#actionPanel #bbop-sbbop-container{border-top:none!important}#actionPanel #samplingFeature_feature_div hr.a-divider-normal{margin-left:0}#actionPanel #primenote{font-size:12px;margin-bottom:6px!important}.burj #actionPanel #giftCardDiscovery_feature_div #giftCardDiscovery{border:none;padding:0 23px}.burj #actionPanel #giftCardDiscovery_feature_div #giftCardDiscovery>.a-box-inner{padding:0 17px}.burj #actionPanel #giftCardDiscovery_feature_div #giftCardDiscovery>.a-box-inner>.a-spacing-top-small{margin-top:0!important}#actionPanel .snsPriceBlock .snsSavings{margin-left:5px}#actionPanel .snsPriceBlock .snsPricePerUnit{margin-right:5px}.burj #actionPanel #returnable_feature_div{margin-top:6px}.burj #actionPanel #returnable_feature_div>.a-box:first-of-type{padding-bottom:10px;border-bottom:1px #e6e6e6 solid}.burj #actionPanel #availability_feature_div #availability-brief>.a-section{display:inline-block}.burj #actionPanel #clickToContact_feature_div>hr.a-spacing-small.a-spacing-top-small.a-divider-normal:first-of-type{border-top:0;margin-bottom:0!important}.stickybuybox{position:fixed;width:420px;bottom:0;right:16px;height:49px;padding-top:10px;padding-bottom:10px;padding-left:58px;padding-right:40px;margin-bottom:0!important;background:#fff;background-image:url(https://images-na.ssl-images-amazon.com/images/G/01/burj/sticky_shadow._V521692892_.png);background-repeat:no-repeat;background-position:0 -2px;z-index:40;border:#000}\n#invictusAlmMultiOfferEgress .invictus-moe-circle{position:relative;width:25px;height:25px;background:#d2dedb;border-radius:50%;left:50%;margin-bottom:-12.5px;margin-left:-12.5px;text-align:center;line-height:25px}#invictusAlmMultiOfferEgress .invictus-moe-offerBox{border-bottom-width:4px;background-color:#f6fcfa}#invictusAlmMultiOfferEgress .invictus-moe-logo{margin-top:2px;margin-left:-2px;mix-blend-mode:multiply}#invictus-moe-price .currencyINR{background-position:-16px -333px;margin-right:0}.a-button.primary-fresh-btn,.ap-fresh .freshCartButtonPrimary,.universalFreshCartButton{border-color:#690 #466900 #3D5C00;min-width:60px}.a-button.primary-fresh-btn .a-button-inner,.ap-fresh .freshCartButtonPrimary .a-button-inner,.universalFreshCartButton .a-button-inner{background:#cada8a;background:-webkit-linear-gradient(top,#cada8a 0,#9c3 100%);background:linear-gradient(to bottom,#cada8a 0,#9c3 100%)}.a-button.primary-fresh-btn .a-button-inner:active,.ap-fresh .freshCartButtonPrimary .a-button-inner:active,.universalFreshCartButton .a-button-inner:active{background:#8fbe30;border-color:#466900 #466900 #3d5c00;-webkit-box-shadow:inset 0 1px 3px 0 rgba(102,102,102,.5);-moz-box-shadow:inset 0 1px 3px 0 rgba(102,102,102,.5);box-shadow:inset 0 1px 3px 0 rgba(102,102,102,.5)}.a-button.primary-fresh-btn:hover .a-button-inner,.ap-fresh .freshCartButtonPrimary:hover .a-button-inner,.universalFreshCartButton:hover .a-button-inner{background:#bdcf76;background:-webkit-linear-gradient(top,#bdcf76 0,#8fbe30 100%);background:linear-gradient(to bottom,#bdcf76 0,#8fbe30 100%)}.a-button.primary-fresh-btn.a-button-disabled,.ap-fresh .freshCartButtonPrimary.a-button-disabled,.universalFreshCartButton.a-button-disabled{border-color:#D8DECC}.a-button.primary-fresh-btn.a-button-disabled .a-button-inner,.ap-fresh .freshCartButtonPrimary.a-button-disabled .a-button-inner,.universalFreshCartButton.a-button-disabled .a-button-inner{background:#EBF5D6;background-color:#EBF5D6!important}.a-button.primary-fresh-btn.a-button-focus,.ap-fresh .freshCartButtonPrimary.a-button-focus,.universalFreshCartButton.a-button-focus{outline:inherit;border-color:inherit;box-shadow:inherit}.a-button.primary-fresh-btn:after,.ap-fresh .freshCartButtonPrimary:after,.universalFreshCartButton:after{border-color:transparent transparent #3d5c00}#freshAddToList.afx-dp-saveToGroceryList{text-align:center}.freshIngress .link{display:block;padding:10px 0}.freshIngress .freshBadge{margin-left:3px}.freshIngress .arrow{float:right;margin-top:10px}.freshIngress .bottomDivider{margin-top:4px}.almOffer{margin-top:-2px;border-top-left-radius:0;border-top-right-radius:0}.almMultiOfferEgressPrimeLogo{margin-top:3px}.almMultiOfferEgressAmazonLogoScaleDown{-webkit-transform:scale(.55,.55);-ms-transform:scale(.55,.55);transform:scale(.55,.55);margin-left:-21px}.almMultiOfferEgressAmazonLogoScaleDownMobile{-webkit-transform:scale(.73,.73);-ms-transform:scale(.73,.73);transform:scale(.73,.73);margin-left:-10px}.almMultiOfferEgressLogoPadding{padding-right:15px!important}.almMultiOfferEgressBurjContainer{border-left:0;border-right:0;border-radius:0!important;background:0 0}.freshEgress{margin-top:-18px;border-top:none}.freshEgress.mobile{margin-top:0}.freshEgressDivider{top:-11px!important}.freshEgressBottomDivider{margin-top:8px}.freshEgressArrow{margin-top:2px;float:right}.freshWhatIsArrow{margin-top:100%;float:right}.freshEgressLink{text-decoration:none;display:block;margin-top:-20px;padding-bottom:5px}.freshEgressLink.mobile{margin-top:0}.freshShelfLife .text{color:#690}.freshShelfLife .table{border-collapse:collapse;width:auto;border:1px solid #690}.freshShelfLife .td{padding:1px 10px!important}.freshShelfLife .a-popover-trigger .a-icon-popover{display:inline-block}.fresh-dp-alcohol-warning{font-size:21px;line-height:1.255}.fresh-age-warning-de{padding-left:10px;padding-right:10px;margin-top:20px;margin-bottom:20px}.a-box.freshMultiSellerOffer.hidden{display:none}.fresh-oor-glow-ingress{display:inline-block}#universalFreshATC.a-box{border-radius:0;border-bottom-width:5px}#universalFreshATC.a-box form{margin-bottom:0}#universalFreshATC.a-section{margin:0;background-color:#f3f3f3;padding-top:15px;padding-right:18px;padding-bottom:13px;padding-left:18px;border-color:#ddd;border-style:solid;border-width:1px 0 5px 0}#universalFreshATC.a-section form{margin-bottom:0}.universal-freshATFC-mobile{margin-top:17px}#uatfc-or-circle-container{height:30px;text-align:center;margin-top:-27px;margin-left:auto;margin-right:auto}#uatfc-or-circle{background:#777;min-width:30px;display:inline-block;height:100%;border-radius:30px;text-align:center;vertical-align:middle;line-height:30px;font-size:10px;margin-bottom:0;padding:0 5px}.uatfc-or-text{color:#fff}.fresh-prime-offer-desktop{border-width:0 1px 5px 1px;margin-top:-14px}.fresh-prime-offer-desktop #fresh-prime-offer-or-image{margin-top:-27px}.fresh-prime-offer-desktop .a-icon-arrow{float:right;margin-top:5px}.fresh-prime-offer-common form{margin-bottom:0}.fresh-prime-offer-mobile{margin-right:-39px!important;margin-left:-18px!important;border-width:1px 0 5px 0}.fresh-prime-offer-mobile .a-icon-arrow{float:right}.fresh-prime-offer-mobile .fresh-prime-offer-price-mobile{font-size:1.5rem!important;line-height:1.25!important}.fresh-prime-offer-divider{margin-bottom:2rem}\n.a-button.a-button-primary.primary-fresh-btn,.a-button.primary-fresh-btn{background:-moz-linear-gradient(to bottom,#cada8a,#9c3);background:-webkit-gradient(linear,left top,left bottom,color-stop(0,#cada8a),color-stop(100%,#9c3));background:-webkit-linear-gradient(top,#cada8a,#9c3);background:-o-linear-gradient(to bottom,#cada8a,#9c3);background:-ms-linear-gradient(to bottom,#cada8a,#9c3);background:linear-gradient(to bottom,#cada8a,#9c3);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#cada8a', endColorstr='#99cc33', GradientType=0);border-color:#690 #466900 #3d5c00}.a-button.a-button-primary.primary-fresh-btn:hover,.a-button.primary-fresh-btn:hover{border-color:#690 #466900 #3d5c00}.a-button.a-button-primary.primary-fresh-btn:hover .a-button-inner,.a-button.primary-fresh-btn:hover .a-button-inner{background:-moz-linear-gradient(to bottom,#bdcf76,#8fbe30);background:-webkit-gradient(linear,left top,left bottom,color-stop(0,#bdcf76),color-stop(100%,#8fbe30));background:-webkit-linear-gradient(top,#bdcf76,#8fbe30);background:-o-linear-gradient(to bottom,#bdcf76,#8fbe30);background:-ms-linear-gradient(to bottom,#bdcf76,#8fbe30);background:linear-gradient(to bottom,#bdcf76,#8fbe30);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#bdcf76', endColorstr='#8fbe30', GradientType=0)}.a-button.a-button-primary.primary-fresh-btn:active,.a-button.primary-fresh-btn:active{background:#8fbe30;border-color:#466900 #466900 #3d5c00;-webkit-box-shadow:0 1px 3px rgba(102,102,102,.5) inset;-moz-box-shadow:0 1px 3px rgba(102,102,102,.5) inset;box-shadow:0 1px 3px rgba(102,102,102,.5) inset}.a-button.a-button-primary.primary-fresh-btn.a-button-focus,.a-button.a-button-primary.primary-fresh-btn:focus,.a-button.primary-fresh-btn.a-button-focus,.a-button.primary-fresh-btn:focus{border-color:#466900 #466900 #3d5c00;-webkit-box-shadow:0 1px 3px rgba(102,102,102,.5) inset;-moz-box-shadow:0 1px 3px rgba(102,102,102,.5) inset;box-shadow:0 1px 3px rgba(102,102,102,.5) inset}.a-button.a-button-primary.primary-fresh-btn .a-button-inner,.a-button.primary-fresh-btn .a-button-inner{background:-moz-linear-gradient(to bottom,#cada8a,#9c3);background:-webkit-gradient(linear,left top,left bottom,color-stop(0,#cada8a),color-stop(100%,#9c3));background:-webkit-linear-gradient(top,#cada8a,#9c3);background:-o-linear-gradient(to bottom,#cada8a,#9c3);background:-ms-linear-gradient(to bottom,#cada8a,#9c3);background:linear-gradient(to bottom,#cada8a,#9c3);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#cada8a', endColorstr='#99cc33', GradientType=0);border-color:#690 #466900 #3d5c00}.a-button.a-button-primary.primary-fresh-btn.a-button-disabled .a-button-inner,.a-button.primary-fresh-btn.a-button-disabled .a-button-inner{background:#ebf5d6!important;border-color:#d8decc!important}.a-button.a-button-primary.primary-fresh-btn.a-button-primary.a-button-disabled:after,.a-button.primary-fresh-btn.a-button-primary.a-button-disabled:after{border-color:transparent transparent #6fa00d!important}.a-button.a-button-primary.primary-fresh-btn.a-button-focus:after,.a-button.a-button-primary.primary-fresh-btn.a-button-primary:after,.a-button.a-button-primary.primary-fresh-btn.a-button-primary:focus,.a-button.a-button-primary.primary-fresh-btn:after,.a-button.primary-fresh-btn.a-button-focus:after,.a-button.primary-fresh-btn.a-button-primary:after,.a-button.primary-fresh-btn.a-button-primary:focus,.a-button.primary-fresh-btn:after{border-color:transparent transparent #6fa00d}.a-button.a-button-primary.primary-fresh-btn-flat,.a-button.primary-fresh-btn-flat{background:#b5d25e}.a-button.a-button-primary.primary-fresh-btn-flat.a-button-focus,.a-button.a-button-primary.primary-fresh-btn-flat:focus,.a-button.primary-fresh-btn-flat.a-button-focus,.a-button.primary-fresh-btn-flat:focus{box-shadow:0 0 3px 2px rgba(111,160,13,.5)}.a-button.a-button-primary.primary-fresh-btn-flat.a-button-focus:after,.a-button.a-button-primary.primary-fresh-btn-flat.a-button-primary:after,.a-button.a-button-primary.primary-fresh-btn-flat.a-button-primary:focus,.a-button.a-button-primary.primary-fresh-btn-flat:after,.a-button.primary-fresh-btn-flat.a-button-focus:after,.a-button.primary-fresh-btn-flat.a-button-primary:after,.a-button.primary-fresh-btn-flat.a-button-primary:focus,.a-button.primary-fresh-btn-flat:after{border-color:#6fa00d}.a-button.a-button-primary.primary-fresh-btn-flat .a-button-inner,.a-button.primary-fresh-btn-flat .a-button-inner{background:#b5d25e}.a-button.a-button-primary.primary-fresh-btn-flat.a-button-disabled .a-button-inner,.a-button.primary-fresh-btn-flat.a-button-disabled .a-button-inner{background:#ebf5d6!important}.a-button.a-button-primary.primary-fresh-btn-flat.a-button-primary.a-button-disabled:after,.a-button.primary-fresh-btn-flat.a-button-primary.a-button-disabled:after{border-color:#ebf5d6 #ebf5d6 #d8decc!important}.a-button.a-button-primary.primary-fresh-btn-flat.a-button-focus:after,.a-button.a-button-primary.primary-fresh-btn-flat.a-button-primary:after,.a-button.a-button-primary.primary-fresh-btn-flat.a-button-primary:focus,.a-button.a-button-primary.primary-fresh-btn-flat:after,.a-button.primary-fresh-btn-flat.a-button-focus:after,.a-button.primary-fresh-btn-flat.a-button-primary:after,.a-button.primary-fresh-btn-flat.a-button-primary:focus,.a-button.primary-fresh-btn-flat:after{border-color:transparent transparent #6fa00d}.atfc-spinner{background:url(https://images-na.ssl-images-amazon.com/images/G/01/navcart/spinner-white._V4_.gif) 50% 50% no-repeat;background-size:contain}.atfc-conflict-dialog{max-width:270px}.atfc-slot-conflict-dialog{max-width:330px}.atfc-quantity-overflow-dialog{max-width:300px}.display-block{display:block}.width-44{width:44%!important}\n#aloha-carrier-compatibility-modal-table-description{margin-top:10px;margin-bottom:14px}.aloha-carrier-compatibility-sortable-header.carrier{min-width:97px}.aloha-carrier-compatibility-sortable-header.compatibility{min-width:156px}.aloha-carrier-compatibility-sortable-header div{float:left}.aloha-carrier-compatibility-sortable-header i.a-icon{margin-left:10px;margin-top:4px}#aloha-carrier-compatibility-overview-table.a-bordered.a-vertical-stripes td:nth-child(2n),#aloha-carrier-compatibility-overview-table.a-bordered.a-vertical-stripes th:nth-child(2n){background-color:initial}#aloha-carrier-compatibility-modal-table.a-bordered.a-vertical-stripes td:nth-child(2n),#aloha-carrier-compatibility-modal-table.a-bordered.a-vertical-stripes th:nth-child(2n){background-color:initial}#aloha-carrier-compatibility-table.a-bordered.a-vertical-stripes th:nth-child(2n),.aloha-carrier-compatibility-table.a-bordered.a-vertical-stripes td:nth-child(2n){background-color:transparent}.aloha-carrier-compatibility-column-gray{background-color:#f6f6f6}.aloha-carrier-compatibility-modal-table-row .aloha-carrier-compatibility-tech-text,.aloha-carrier-compatibility-modal-table-row .carrier-name,.aloha-carrier-compatibility-modal-table-row .carrier-rating-summary{min-height:27px;display:inline-block;cursor:default}.aloha-carrier-compatibility-modal-table-row .aloha-carrier-compatibility-tech-text:first-line,.aloha-carrier-compatibility-modal-table-row .carrier-name:first-line,.aloha-carrier-compatibility-modal-table-row .carrier-rating-summary:first-line{line-height:27px}.aloha-carrier-compatibility-modal-table-row .aloha-carrier-compatibility-icon{margin-top:6px}.aloha-carrier-compatibility-check-icon{width:30px;height:27px;background-position:-318px -35px;background-image:url(https://images-na.ssl-images-amazon.com/images/G/01/AUIClients/AmazonUIBaseCSS-sprite_2x-8e7ef370dc28a214b3f490c9620f4ac501d5a864._V2_.png);background-repeat:no-repeat;background-size:400px 650px;display:inline-block;vertical-align:top}.aloha-carrier-compatibility-hidden{display:none}.aloha-buybox-spaced-link{margin-top:12px;margin-bottom:7px;text-align:center}.popover-tab>.a-box-inner{max-height:400px;overflow-y:auto}.aloha-simple-bundle-preload-content-container .aloha-simple-bundle-modal-expander-content{margin-top:12px}.aloha-simple-bundle-preload-content-container .aloha-simple-bundle-modal-expander-header-row{display:flex;align-items:center;background-color:#f3f3f3}.aloha-simple-bundle-preload-content-container .a-column.aloha-simple-bundle-modal-expander-header.a-span-last{width:100%}.aloha-simple-bundle-preload-content-container .aloha-simple-bundle-modal-detailed-info-header-row-text{margin-left:20px}.aloha-simple-bundle-preload-content-container .aloha-simple-bundle-expand-header-title.aloha-simple-bundle-expand-header-title-truncate{overflow:hidden;text-overflow:ellipsis;width:475px;white-space:nowrap}.aloha-simple-bundle-preload-content-container .aloha-simple-bundle-modal-expander-header-row .a-checkbox-label{display:none}.aloha-simple-bundle-preload-content-container .simple-bundle-modal-checkbox{margin-left:11px;margin-right:11px}\n.amazon_yum #heroImage,.amazon_yum_pantry #heroImage{overflow:hidden}.amazon_yum #heroVideo,.amazon_yum_pantry #heroVideo{position:absolute}.amazon_yum #imageBlock_feature_div #altImages .a-button-toggle.a-button-thumbnail,.amazon_yum_pantry #imageBlock_feature_div #altImages .a-button-toggle.a-button-thumbnail{border-radius:50px}.amazon_yum #imageBlock_feature_div #altImages .a-button-toggle.a-button-thumbnail .a-button-inner,.amazon_yum_pantry #imageBlock_feature_div #altImages .a-button-toggle.a-button-thumbnail .a-button-inner{border-radius:50px}.amazon_yum #imageBlock_feature_div #altImages .a-button.a-button-thumbnail.a-button-toggle,.amazon_yum_pantry #imageBlock_feature_div #altImages .a-button.a-button-thumbnail.a-button-toggle{box-shadow:none;border:none;background-color:grey}.amazon_yum #imageBlock_feature_div #altImages .a-button.a-button-thumbnail.a-button-toggle::after,.amazon_yum_pantry #imageBlock_feature_div #altImages .a-button.a-button-thumbnail.a-button-toggle::after{border:none}.amazon_yum #imageBlock_feature_div #altImages .a-button.a-button-thumbnail.a-button-toggle.a-button-selected,.amazon_yum_pantry #imageBlock_feature_div #altImages .a-button.a-button-thumbnail.a-button-toggle.a-button-selected{background-color:orange}.amazon_yum #imageBlock_feature_div #altImages .a-button.a-button-thumbnail.a-button-toggle.a-button-selected .a-button-inner,.amazon_yum_pantry #imageBlock_feature_div #altImages .a-button.a-button-thumbnail.a-button-toggle.a-button-selected .a-button-inner{opacity:.8;filter:Alpha(opacity=80)}.amazon_yum #imageBlock_feature_div #altImages .a-button.a-button-thumbnail.a-button-toggle .a-button-inner,.amazon_yum_pantry #imageBlock_feature_div #altImages .a-button.a-button-thumbnail.a-button-toggle .a-button-inner{opacity:.95;filter:Alpha(opacity=95)}.amazon_yum #leftCol.burj,.amazon_yum_pantry #leftCol.burj{text-align:center}.amazon_yum .burj #logoByLine,.amazon_yum_pantry .burj #logoByLine{background:0 0}.amazon_yum .satisfactionGuaranteeText,.amazon_yum_pantry .satisfactionGuaranteeText{display:inline-block}.amazon_yum #richProductDescription_feature_div,.amazon_yum_pantry #richProductDescription_feature_div{max-width:1500px;margin-left:auto;margin-right:auto}.amazon_yum #richProductDescription_feature_div .visualRpdText ul,.amazon_yum_pantry #richProductDescription_feature_div .visualRpdText ul{color:#111!important}.amazon_yum #richProductDescription_feature_div#visual-rich-product-description,.amazon_yum_pantry #richProductDescription_feature_div#visual-rich-product-description{padding-top:26px}.amazon_yum #richProductDescription_feature_div#visual-rich-product-description .visualRpdDivider,.amazon_yum_pantry #richProductDescription_feature_div#visual-rich-product-description .visualRpdDivider{border-color:#555}.amazon_yum #richProductDescription_feature_div#visual-rich-product-description .visualRpdColumnLarge,.amazon_yum_pantry #richProductDescription_feature_div#visual-rich-product-description .visualRpdColumnLarge{max-width:550px;margin:0 auto}.amazon_yum #richProductDescription_feature_div#visual-rich-product-description .visualRpdColumnSmall,.amazon_yum_pantry #richProductDescription_feature_div#visual-rich-product-description .visualRpdColumnSmall{max-width:400px}.amazon_yum #richProductDescription_feature_div#visual-rich-product-description .visualRpdColumnSmall.lastColumn,.amazon_yum_pantry #richProductDescription_feature_div#visual-rich-product-description .visualRpdColumnSmall.lastColumn{margin-right:0;margin-left:auto}.amazon_yum #richProductDescription_feature_div#visual-rich-product-description .visualRpdColumnSmall.unspecifiedColumn,.amazon_yum_pantry #richProductDescription_feature_div#visual-rich-product-description .visualRpdColumnSmall.unspecifiedColumn{margin:0 auto;margin-right:26px}.amazon_yum #richProductDescription_feature_div#visual-rich-product-description .visualRpdColumnSmall.firstColumn,.amazon_yum_pantry #richProductDescription_feature_div#visual-rich-product-description .visualRpdColumnSmall.firstColumn{margin-right:26px}.amazon_yum #richProductDescription_feature_div#visual-rich-product-description .visualRpdImage,.amazon_yum_pantry #richProductDescription_feature_div#visual-rich-product-description .visualRpdImage{max-height:110px}.amazon_yum #richProductDescription_feature_div .icon-description,.amazon_yum_pantry #richProductDescription_feature_div .icon-description{width:35px;height:37px;background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/PrivateLabelDesktopAssets-yumImages-dd0afa951c938e964b12ce982cd0629b36dc3276._V2_.png);background-size:70px 37px;background-position:0 0;background-repeat:no-repeat}.amazon_yum #richProductDescription_feature_div .icon-benefits,.amazon_yum_pantry #richProductDescription_feature_div .icon-benefits{width:35px;height:37px;background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/PrivateLabelDesktopAssets-yumImages-dd0afa951c938e964b12ce982cd0629b36dc3276._V2_.png);background-size:70px 37px;background-position:-35px 0;background-repeat:no-repeat}.amazon_yum #richProductDescription_feature_div .visualRpdColumnSmall.lastColumn .a-fixed-left-grid-inner,.amazon_yum_pantry #richProductDescription_feature_div .visualRpdColumnSmall.lastColumn .a-fixed-left-grid-inner{padding-left:0!important}.amazon_yum #richProductDescription_feature_div .visualRpdColumnSmall.lastColumn .a-fixed-left-grid-inner .a-col-right,.amazon_yum_pantry #richProductDescription_feature_div .visualRpdColumnSmall.lastColumn .a-fixed-left-grid-inner .a-col-right{padding-left:0!important}.amazon_elements #rpd.burj{max-width:1500px;margin-left:auto;margin-right:auto}.amazon_elements #rpd.burj .visualRpdText ul{color:#111!important}.amazon_elements #rpd.burj .visualRpdText img{margin-bottom:10px}.amazon_elements #rpd.burj#visual-rich-product-description{padding-top:26px}.amazon_elements #rpd.burj#visual-rich-product-description .a-fixed-left-grid-inner{padding-left:0!important}.amazon_elements #rpd.burj#visual-rich-product-description .a-fixed-left-grid-inner .a-fixed-left-grid-col .a-col-right{padding-left:0}.amazon_elements #rpd.burj#visual-rich-product-description .visualRpdDivider{border-color:#555}.amazon_elements #rpd.burj#visual-rich-product-description .visualRpdColumnLarge{max-width:550px;margin:0 auto}.amazon_elements #rpd.burj#visual-rich-product-description .visualRpdColumnSmall{max-width:400px}.amazon_elements #rpd.burj#visual-rich-product-description .visualRpdColumnSmall.lastColumn{margin-right:0;margin-left:auto}.amazon_elements #rpd.burj#visual-rich-product-description .visualRpdColumnSmall.unspecifiedColumn{margin:0 auto;margin-right:26px}.amazon_elements #rpd.burj#visual-rich-product-description .visualRpdColumnSmall.firstColumn{margin-right:26px}.amazon_elements #rpd.burj .visualRpdColumnSmall.lastColumn .a-fixed-left-grid-inner{padding-left:0!important}.amazon_elements #rpd.burj .visualRpdColumnSmall.lastColumn .a-fixed-left-grid-inner .a-col-right{padding-left:0!important}.amazon_yum #tell-a-friend .a-icon-share-email,.amazon_yum_pantry #tell-a-friend .a-icon-share-email{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/PrivateLabelDesktopAssets-yumSocialShareIcons-8fffcced43d05c9344ad80cb601b3346c1caf91c._V2_.png);background-position:0 0;background-size:71px 17px}.amazon_yum #tell-a-friend .a-icon-share-facebook,.amazon_yum_pantry #tell-a-friend .a-icon-share-facebook{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/PrivateLabelDesktopAssets-yumSocialShareIcons-8fffcced43d05c9344ad80cb601b3346c1caf91c._V2_.png);background-position:-19px 0;background-size:71px 17px}.amazon_yum #tell-a-friend .a-icon-share-twitter,.amazon_yum_pantry #tell-a-friend .a-icon-share-twitter{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/PrivateLabelDesktopAssets-yumSocialShareIcons-8fffcced43d05c9344ad80cb601b3346c1caf91c._V2_.png);background-position:-36px 0;background-size:71px 17px}.amazon_yum #tell-a-friend .a-icon-share-pinterest,.amazon_yum_pantry #tell-a-friend .a-icon-share-pinterest{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/PrivateLabelDesktopAssets-yumSocialShareIcons-8fffcced43d05c9344ad80cb601b3346c1caf91c._V2_.png);background-position:-54px 0;background-size:71px 17px}.amazon_yum.burj-body #actionPanelWrapper.burj,.amazon_yum.burj-body #leftCol.burj,.amazon_yum_pantry.burj-body #actionPanelWrapper.burj,.amazon_yum_pantry.burj-body #leftCol.burj{min-height:625px}.amazon_yum.burj-body .burj #instantOrderUpdate_feature_div>.a-section,.amazon_yum_pantry.burj-body .burj #instantOrderUpdate_feature_div>.a-section{margin-top:18px}.amazon_yum.burj-body #leftCol.burj,.amazon_yum_pantry.burj-body #leftCol.burj{padding-top:0}.amazon_yum.burj-body #elevatorBottom.burj,.amazon_yum_pantry.burj-body #elevatorBottom.burj{display:block;clear:both}.amazon_yum.burj-body #dp-container,.amazon_yum_pantry.burj-body #dp-container{margin-top:0!important;border-top:none!important;max-width:none!important}.amazon_yum.burj-body #aplus_feature_div .bucketDivider,.amazon_yum_pantry.burj-body #aplus_feature_div .bucketDivider{display:none}.amazon_elements #bulletPointList_feature_div h1{display:none}.amazon_elements #aplus_feature_div .bucketDivider{display:none}#crossSellRecommendations_feature_div{max-width:1300px;margin:auto}.crossSellItem{border-right:solid 1px #CCC}.crossSellImage{cursor:pointer;display:block}#crossSellRecommendations_feature_div .clearFloatDivider{clear:both}#crossSellRecommendations_feature_div .minimizedSpacing .clearFloatDivider{clear:none}.crossSellImageWidth{width:160px}.crossSellImageHeight{height:160px}.crossSellItemPara{display:table;margin-left:auto;margin-right:auto}.crossSellItemInfo{display:table-cell}.crossSellItemInfo a:link{color:#555!important}.crossSellPricePara{border-bottom:solid 1px #CCC;padding-bottom:10px}.crossSellPrimeExclusiveHeader{color:#26586C}.crossSellImageDisabled{opacity:.5}.amazon_yum .aepd_heading,.amazon_yum_pantry .aepd_heading{font-size:21px}.amazon_yum #quickPromoBucketContent .qpUL,.amazon_yum_pantry #quickPromoBucketContent .qpUL{font-family:inherit}\n.burj .twister-overlay{background-color:#FFF;opacity:.8;position:absolute;display:none;left:0;z-index:199}.burj .twister-popover-visible #twister{background-color:#FFF}.burj #twister,.burj form#twister.petronas-twister{z-index:200;display:table;table-layout:fixed;width:100%;position:static;margin-left:0;text-align:left;margin-top:0;border:1px solid transparent;border-top-left-radius:3px;border-top-right-radius:3px}.burj #twister>div{display:table-cell;white-space:nowrap;padding:10px 9px}.burj #twister>div.twisterCounter_container{white-space:normal}.burj #twister.dualDim-Swatch>div{display:block}.burj .vodd-dim-wrapper:first-child{padding-left:10px}.burj .vodd-dim-wrapper:last-child{padding-right:10px}.burj .twister-popover-visible #twister,.burj .twister-popover-visible form#twister.petronas-twister{border:1px solid #DDD;box-shadow:0 2px 3px #e4e4e4;z-index:200}.burj #twisterNonJsData{display:none}.burj .dualDim-Swatch .twisterShelf_label_wrapper{height:18px}.burj .dualDim-Swatch div#shelf-unavailable{width:100%;height:39px;position:relative}.burj .dualDim-Swatch .twister-dualDim-margin-bottom{margin-bottom:0}.burj .dualDim-Swatch .twister-dualDim-padding-bottom{padding-bottom:10px}.burj .dualDim-Swatch .counter_unavailable{opacity:.3}.burj .dualDim-Swatch .counter_unavailable::after{content:\"\";width:45px;height:45px;border-bottom:2px solid #fff;-webkit-transform:translateY(76.1px) translateX(0) rotate(-45deg);-ms-transform:translateY(76.1px) translateX(0) rotate(-45deg);-moz-transform:translateY(76.1px) translateX(0) rotate(-45deg);position:absolute;top:-88px;left:-11px}.burj .dualDim-Swatch .twisterShelf_container::after{border-bottom:0}.burj .dualDim-Swatch .vodd-dim-wrapper::after{border-bottom:0!important}.burj .dualDim-Swatch .shelf_unavailable .twisterShelf_displaySection{border:2px dotted #b2b2b2}.burj .dualDim-Swatch .shelf_unavailable .twisterShelf_swatch_text{color:#b2b2b2}.burj .dualDim-Swatch .shelf_unavailable.hoverSwatch .twisterShelf_displaySection{border:2px solid #111!important}.burj .dualDim-Swatch .shelf_unavailable.hoverSwatch .unavailableV2{color:#111!important}.burj .dualDim-Swatch .shelf-label-variant-name{font-weight:400!important}.burj .dualDim-Swatch .expanderTriangle1{width:0;height:0;z-index:2;border-left:11px solid transparent;border-right:11px solid transparent;border-top:13px solid #888;position:relative;top:18px;left:11px}.burj .dualDim-Swatch .expanderTriangle2{width:0;height:0;z-index:3;border-left:11px solid transparent;border-right:11px solid transparent;border-top:13px solid #E7E7E7;position:relative;top:3px;left:11px}.burj .dualDim-Swatch .twisterShelf_isExpanded .twisterShelf_swatch{width:84px}.burj .dualDim-Swatch .twisterShelf_isCollapsed .twisterShelf_swatch{width:84px;margin-right:11px!important}.burj .dualDim-Swatch .twisterShelf_container .expanderButton{margin-left:15px;margin-bottom:41px!important}.burj .dualDim-Swatch .twisterShelf_container .collapseButton{margin-left:15px}.burj .dualDim-Swatch .twisterShelf_isExpanded .twisterShelf_displaySection{width:84px}.burj .dualDim-Swatch .twisterShelf_infoSection{width:84px}.burj .dualDim-Swatch .twisterShelf_infoSection .twister_swatch_price span{font-size:11.4px!important}.burj .dualDim-Swatch .twisterShelf_swatchSection.twisterShelf_isCollapsed{margin-left:1px;height:74px}.burj .dualDim-Swatch .twisterShelf_swatchSection.twisterShelf_isCollapsed.twisterShelf_isCollapsedAnimated{margin-left:0!important}.burj .dualDim-Swatch .twisterShelf_displaySection{height:42px!important}.burj .dualDim-Swatch .twisterShelf_swatch_text{max-height:38px!important}.burj .dualDim-Swatch .twisterShelf_isText .twisterShelf_displaySection{padding:0}.burj .dualDim-Swatch .twisterShelf_dual_dim_price_long{font-size:10px!important}.burj .dualDim-Swatch .twisterShelf_swatchSection.twisterShelf_isExpanded.twisterShelf_preExpanded{height:74px}.burj .dualDim-Swatch .twisterShelf_swatchSection.twisterShelf_isCollapsed:not(.twisterShelf_isCollapsedAnimated){height:74px!important}.burj .dualDim-Swatch .twisterShelf_isCollapsed.twisterShelf_isCollapsedAnimated .twisterShelf_swatch{width:84px!important;-webkit-animation-name:twisterShelf_shrink_dual;animation-name:twisterShelf_shrink_dual}.burj .dualDim-Swatch .twisterShelf_isExpanded.twisterShelf_isExpandedAnimated .twisterShelf_swatch{width:84px!important;-webkit-animation-name:twisterShelf_grow_dual;animation-name:twisterShelf_grow_dual}.burj .dualDim-Swatch .twisterShelf_isCollapsed.twisterShelf_isCollapsedAnimated .twisterShelf_displaySection{width:84px!important;-webkit-animation-name:twisterShelf_shrink_dual;animation-name:twisterShelf_shrink_dual}.burj .dualDim-Swatch .twisterShelf_isExpanded.twisterShelf_isExpandedAnimated .twisterShelf_displaySection{width:84px!important;-webkit-animation-name:twisterShelf_grow_dual;animation-name:twisterShelf_grow_dual}.burj .dualDim-Swatch .twisterShelf_isCollapsed.twisterShelf_isCollapsedAnimated .twisterShelf_swatch_text{max-width:84px!important;-webkit-animation-name:twisterShelf_shrink_dual_text_dual;animation-name:twisterShelf_shrink_dual_text_dual}.burj .dualDim-Swatch .twisterShelf_isExpanded.twisterShelf_isExpandedAnimated .twisterShelf_swatch_text{max-width:84px!important;-webkit-animation-name:twisterShelf_grow_dual_text_dual;animation-name:twisterShelf_grow_dual_text_dual}.burj #twister.dualDim-Swatch::after{content:\" \";border-bottom:1px solid #e7e7e7;position:absolute;left:-10px;right:0;margin-bottom:4px;padding-bottom:4px}.burj .dualDim-Swatch#twister>div{padding-bottom:0;margin-bottom:0!important}.burj .dualDim-Swatch .unavailableV2{width:84px;position:absolute;padding-left:1px;padding-top:1px;overflow:hidden;text-overflow:ellipsis;text-align:center;-webkit-line-clamp:2;-webkit-box-orient:vertical;word-wrap:break-word;word-break:break-word;line-height:16px;text-align:center;-moz-box-orient:vertical;max-height:35px}.burj .shelf_unavailable{opacity:1}.burj .shelf_unavailable .unavailableV2{font-size:12px!important}.burj .shelf_unavailable .outofstock-text{font-size:12px!important}#actionPanel.twister-popover-visible #twisterContainer{background-color:#FFF}#actionPanel #twister_feature_div{margin-left:-8px;margin-top:10px}#actionPanel #twisterContainer{padding:8px 8px 0;margin-left:-10px}#actionPanel #twister.a-spacing-small{margin-bottom:0!important}#actionPanel form#twister.petronas-twister{min-width:0}#actionPanel #twisterContainer{margin-top:-18px}#actionPanel.twister-popover-visible #twister:only-child .vodd-dim-wrapper::after{border-bottom-color:transparent}#actionPanel #twister:only-child .vodd-dim-wrapper::after{content:\" \";border-bottom:1px solid #e7e7e7;position:absolute;left:-10px;right:0;padding-bottom:10px}#actionPanel #voddSizeChartContainer{padding-left:19px;margin:0 -10px;border-bottom:1px solid #E7E7E7;padding-bottom:10px}\n.vas-hidecomponent{display:none}.sdpRedirect:hover{text-decoration:none}.pdp-service-modal-instance{padding:0!important}#pdp-service-siatc .pdp-service-siatc-alslogo{display:block;margin-left:auto;margin-right:auto}#pdp-service-siatc #vas-siatc-bestoffer{color:#71b2a8}#addProfessionalServicesRow{display:table}.ppdBundlesPaddingRight{padding-right:3px}.ppdBundlesPaddingLeft{padding-left:3px}.pdp-service-siatc-promo #vas-siatc-heading{color:#fff!important}.pdp-service-siatc-promo #pdp-service-siatc-modal-content{padding:8px 26px 25px 100px!important}.pdp-service-siatc-promo #vas-siatc-box{margin-top:15px;border:1px solid #71b2a8}.pdp-service-siatc #pdp-service-siatc-modal-content{padding:18px 24px 24px!important}.pdp-service-siatc #vas-siatc-zip-input{width:61px!important}.pdp-service-siatc #vas-zip-refresh-box{background-color:#fffbdc!important}#pdp-service-modal-content{padding:19px 24px 40px!important;margin-right:19px}#pdp-service-modal-content .service-features-li{list-style-position:inside;color:#e47911}#pdp-service-modal-content .pdp-service-pad-img{padding-left:10px}#pdp-service-modal-footer{background-color:#f3f3f3;box-shadow:0 1px 1px rgba(0,0,0,.05) inset;border-top:1px solid #ddd;padding:14px;text-align:right}#vas-ppdbundles-enhancedwrapper{max-width:538px}#vas-ppdbundles-enhancedwrapper.vas-ppdbundles-orangeborder{border:8px solid #fef8f2;background-color:#fef8f2}#vas-ppdbundles-enhancedwrapper.vas-ppdbundles-grayborder{border:8px solid #f3f3f3;background-color:#f3f3f3}#vas-ppdbundles-enhancedwrapper .ppdBundlesExpanderHeading{margin:3px 0 0 5px}#vas-ppdbundles-enhancedwrapper .vas-ppdbundles-orangebox{border:1px solid #e77600}#vas-ppdbundles-enhancedwrapper #vas-ppdbundles-enhancedcontent{display:-ms-flexbox;display:-webkit-flex;display:flex}#vas-ppdbundles-enhancedwrapper #vas-ppdbundlescheckboxcolumn{width:20px}#vas-ppdbundles-enhancedwrapper #vas-ppdbbundles-whatsincludedrow{width:100%;display:-ms-flexbox;display:-webkit-flex;display:flex;padding-top:14px}#vas-ppdbundles-enhancedwrapper #vas-ppdbundles-whatsincludedbox{padding:10px 17px 0 10px;max-width:75px;background-color:#f3f3f3;margin-bottom:4px}#vas-ppdbundles-enhancedwrapper #vas-ppdbundles-whatsincludedbullets{width:100%;margin-left:10px}#vas-ppdbundles-enhancedwrapper .vas-ppdbundlescheckboxcolumn{max-width:20px}#vas-ppdbundles-enhancedwrapper #vas-ppdbundles-upsellbox{margin-top:20px}#vas-ppdbundles-enhancedwrapper #ppdb-add-service-checkbox,#vas-ppdbundles-enhancedwrapper .vas-ppdbundles-upsell-service-checkbox{margin-top:2px}#vas-ppdbundles-enhancedwrapper .vas-ppdbundles-subquestion{margin-left:20px;display:none}#vas-ppdbundles-enhancedwrapper #ppd-bundles-expander-content{overflow:visible!important}@media screen\\0{#vas-ppdbundles-enhancedwrapper #vas-ppdbundles-enhancedcontent{display:table}#vas-ppdbundles-enhancedwrapper #vas-ppdbundles-whatsincludedbullets{width:auto;float:left;margin-left:10px}#vas-ppdbundles-enhancedwrapper #vas-ppdbundles-whatsincludedbox{padding:10px 17px 0 10px;max-width:75px;background-color:#f3f3f3;float:left}#ppd-bundles-expander-content,#vas-ppdbundles-misc{float:left}#ppd-bundles-expander-content.a-expander-content-expanded{width:100%}}#ppdBundlesEnhancedWrapper{max-width:538px}#ppdBundlesEnhancedWrapper.ppdBundlesOrangeBorder{border:8px solid #fef8f2;background-color:#fef8f2}#ppdBundlesEnhancedWrapper.ppdBundlesGrayBorder{border:8px solid #f3f3f3;background-color:#f3f3f3}#ppdBundlesEnhancedWrapper .ppdBundlesOrangeBox{border:1px solid #e77600}#ppdBundlesEnhancedWrapper .ppdBundlesExpanderHeading{margin:3px 0 0 5px}#ppdBundlesEnhancedWrapper #ppdBundlesEnhancedContent{display:-ms-flexbox;display:-webkit-flex;display:flex}#ppdBundlesEnhancedWrapper #ppdBundlesCheckboxColumn{margin-right:0}#ppdBundlesEnhancedWrapper #ppdBundlesUpsellRow,#ppdBundlesEnhancedWrapper #ppdBundlesWhatsIncludedRow{width:100%;display:-ms-flexbox;display:-webkit-flex;display:flex}#ppdBundlesEnhancedWrapper #ppdBundlesWhatsIncludedRow{padding-top:14px}#ppdBundlesEnhancedWrapper #ppdBundlesWhatsIncludedRow #ppdBundlesWhatsIncludedBox{padding:10px 17px 0 10px;background-color:#f3f3f3;margin-bottom:4px}#ppdBundlesEnhancedWrapper #ppdBundlesWhatsIncludedRow #ppdBundlesWhatsIncludedBullets{width:100%;margin-left:10px}#ppdBundlesEnhancedWrapper #ppdBundlesUpsellCheckboxColumn{max-width:20px}#ppdBundlesEnhancedWrapper #ppdBundlesUpsellBox{height:15px;margin-top:20px}#ppdBundlesEnhancedWrapper #ppdb-add-service-checkbox,#ppdBundlesEnhancedWrapper #ppdb-upsell-service-checkbox{margin-top:2px}#ppdBundlesEnhancedWrapper #ppdBundlesExpanderContent{overflow:visible!important}@media screen\\0{#ppdBundlesEnhancedContent,#ppdBundlesUpsellRow{display:table}#ppdBundlesWhatsIncludedBullets{width:auto;float:left;margin-left:10px}#ppdBundlesWhatsIncludedBox{padding:10px 17px 0 10px;max-width:75px;background-color:#f3f3f3;float:left}#ppdBundlesExpanderContent,#ppdBundlesMisc{float:left}#ppdBundlesExpanderContent.a-expander-content-expanded{width:100%}}#ppdBundlesLearnMorePopover .a-icon{display:none!important}#ppdBundles-popover-content #ppdBundles-popover-img{padding-top:41px;padding-left:20px}#ppdBundles-popover-content .ppdBundles-popover-see-more{padding-left:4px}#ppdBundlesLearnMorePopover{margin-left:0;padding-left:3px}#ppdBundlesWidgetContent{display:table;padding-top:14px}#ppdBundlesWidgetContent #ppdBundlesWidgetRow{display:-webkit-box;margin-left:5px}#ppdBundlesWidgetContent #ppdbCheckboxColumn{margin-right:0;width:27px}#ppdBundlesWidgetContent .ppdBundlesPaddingRightAndLeft{padding-right:3px;padding-left:3px}#ppdBundlesWidgetContent .ppdBundlesCheckboxRow{vertical-align:middle;position:relative;bottom:1px}#ppdBundlesWidgetContent #ppdBundlesFirstRowSecondHalf{display:-webkit-inline-box;display:-moz-inline-box;display:-ms-inline-flexbox}#ppdBundlesWidgetContent .ppdBundles-popover-see-all-services:hover{text-decoration:none}#ppdBundlesWidgetContent .ppdBundlesTerms{font-size:10px}.ppdb_DropdownClass span{font-weight:700!important;font-size:13px;color:#111}.ppdb_DropdownClass .a-button-inner,.ppdb_DropdownClass:hover .a-button-inner{background-color:#fff!important}.ppdb_disabledDropdownClass{opacity:.3;filter:alpha(opacity=30)}.ppdb_disabledDropdownClass span{font-weight:700!important;font-size:13px}.ppdBundlesDivider{margin-bottom:-3px!important}.ppdBundlesDivider-promo{top:0!important}.ppdBundlesDivider-promo.a-divider.a-divider-break:after{border-top:1px solid #e7e7e7!important}#addProfessionalServicesRow{border-bottom:1px solid #e7e7e7}#addProfessionalServicesRow.pdpIconPadding{padding-left:6px}#addProfessionalServicesRow.addServicesForDetailPageView{border-top:1px solid #e7e7e7}#addProfessionalServicesRow .pdpTextPadding{padding:6px}.addProfessionalServicesRow{border-top:1px solid #e7e7e7;border-bottom:1px solid #e7e7e7;padding-top:10px}.addProfessionalServicesRow-alert-on{border-color:red}#sts-pdp-service-siatc{max-width:900px}#sts-pdp-service-siatc-modal-content{padding:24px 48px}#sts-pdp-service-siatc-modal-content .sts-vas-siatc-heading{font-size:62px!important;font-weight:700;line-height:1!important;text-transform:uppercase}#vas-siatc-zip-input{width:55px!important}#vas-ppd-fake-twister .vas-twister-disabled .vas-ppd-swatches .vas-ppd-swatch-select{border-color:#8e8482}#vas-ppd-fake-twister .vas-twister-disabled .vas-ppd-swatches .vas-ppd-swatch-select .a-button-inner{background-color:#fff}#vas-ppd-fake-twister .vas-ppd-swatches li{border:1px solid #e0e0e0;margin-bottom:4px;margin-top:4px;-o-border-radius:2px;-ms-border-radius:2px;-moz-border-radius:2px;-webkit-border-radius:2px;border-radius:2px;cursor:pointer;display:inline-block;position:relative}#vas-ppd-fake-twister .vas-ppd-swatches .a-button{border-width:0}#vas-ppd-fake-twister .vas-ppd-swatches .a-button.a-button-focus{box-shadow:none}#vas-ppd-fake-twister .vas-ppd-swatches .a-button-inner:hover{background-color:#f3f3f3}#vas-ppd-fake-twister .vas-ppd-swatches .a-button-text{padding:5px 10px 5px 11px}#vas-ppd-fake-twister .vas-ppd-swatches .vas-ppd-swatch-select,#vas-ppd-fake-twister .vas-ppd-swatches .vas-ppd-swatchselect{border-color:#e47911}#vas-ppd-fake-twister .vas-ppd-swatches .vas-ppd-swatch-select .a-button-inner,#vas-ppd-fake-twister .vas-ppd-swatches .vas-ppd-swatchselect .a-button-inner{background-color:#fefaf6}#vas-ppd-fake-twister .vas-ppd-swatches .vas-ppd-swatch-select .vas-ppd-twisterslot span,#vas-ppd-fake-twister .vas-ppd-swatches .vas-ppd-swatchselect .vas-ppd-twisterslot span{color:#b12704!important}#vas-ppd-fake-twister .vas-ppd-swatches .vas-ppd-swatch-select .vas-ppd-twister-content span.a-text-bold,#vas-ppd-fake-twister .vas-ppd-swatches .vas-ppd-swatchselect .vas-ppd-twister-content span.a-text-bold{font-weight:700!important}#vas-ppd-fake-twister .vas-ppd-twister-swatchwrapper{min-width:67px;min-height:38px}#vas-ppd-fake-twister .vas-ppd-twister-swatchwrapper span.a-text-bold{font-weight:400!important}#vas-ppd-fake-twister .vas-ppd-twister-swatchwrapper .vas-ppd-twisterslot span{font-weight:700!important}#vas-ppd-fake-twister .vas-ppd-no-service{line-height:38px}#vas-ppd-fake-twister .vas-ppd-twister-content,#vas-ppd-fake-twister .vas-ppd-twisterslot{min-height:19px}#vas-ppd-fake-twister .vas-ppd-secondary-info{font-weight:400}#vas-ppd-fake-twister .vas_twister_label{display:inline;color:#888;font-weight:400}#vas-ppd-fake-twister .vas_service_title_padding{padding-right:3px}#vas-ppd-fake-twister #vas-fake-twister-whatsincluded{margin-top:4px;border-bottom:1px solid #e0e0e0;padding-bottom:10px}#vas-ppd-fake-twister .vas-twister-whatsincluded{margin-top:5px;border-bottom:1px solid #ddd;padding-bottom:10px;display:none}#vas-ppd-fake-twister .vas-twister-product-price-update{display:none}#vas-ppd-fake-twister .vas-twister-disabled{pointer-events:none;opacity:.4}.vas_product_offer_update_description{display:block;margin-top:5px}\n.amazon-certified-badge-container .amazon-certified-trapezoid{background-color:#2f2f2f;color:#fff;padding:4px 5px 5px 7px;position:relative;display:inline-block}.amazon-certified-badge-container .amazon-certified-trapezoid:after{content:'';position:absolute;top:0;right:-10px;width:11px;height:100%;margin-left:5px;background-image:url(data:image/svg+xml,%3Csvg%20xmlns=%27http://www.w3.org/2000/svg%27%20width=%2711%27%20height=%2730%27%20viewBox=%270%200%2011%2030%27%20preserveAspectRatio=%27none%27%3E%3Cpolygon%20points=%270,0%202,0%2011,30%200,30%27%20fill=%27%232f2f2f%27%3E%3C/polygon%3E%3C/svg%3E);background-repeat:no-repeat;background-size:100% 100%}.amazon-certified-badge-container{margin:0 auto;text-align:left;display:inline-block;min-height:36px}.amazon-certified-badge-container .amazon-certified-logo{width:36px;position:absolute;left:0;overflow:hidden}.amazon-certified-badge-container .amazon-certified-content{position:relative;border-radius:0 7px 7px 7px;padding:2.5% 2.5%;z-index:1}.amazon-certified-badge-container .amazon-certified-content-wrapper{position:relative;min-height:36px;padding-left:46px;overflow:hidden}.amazon-certified-badge-container.amazon-certified-layout-2 .amazon-certified-content-wrapper{padding-left:196px}.amazon-certified-badge-container.amazon-certified-layout-2 .amazon-certified-title-image-sprite{position:absolute;left:46px;margin-top:3px;margin-right:30px;background-repeat:no-repeat;background-size:120px 60px;background-position:0 -30px;height:30px;width:120px}.amazon-certified-badge-container .amazon-certified-learn-more{color:#57adcb}.amazon-certified-badge-container:hover{cursor:pointer}.amazon-certified-badge-container:hover .amazon-certified-learn-more{text-decoration:underline}.amazon-certified-badge-container.design-2 .amazon-certified-logo{width:23px}.amazon-certified-badge-container.design-2 .amazon-certified-content{border-radius:0}.amazon-certified-badge-container.design-2 .amazon-certified-content-wrapper{min-height:36px;padding-left:36px}#amazon-certified-content .a-declarative{display:inline-block;max-width:100%}#amazonCertifiedDesktopWrapper{max-width:100%}.amazon-certified-badge-container{width:525px;max-width:100%}.amazon-certified-badge-container .amazon-certified-content{background-color:#efefef}.amazon-certified-badge-container.amazon-certified-layout-2 .amazon-certified-learn-more{display:none}.amazon-certified-badge-container.amazon-certified-layout-2:hover{cursor:auto}.amazon-certified-badge-container.design-2 .amazon-certified-content{background-color:#fafafa;padding-left:20px!important}\n.edpIngressIcon{background-image:url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABwAAAAMCAYAAABx290PAAAA20lEQVQ4y2Ngzj7oxZF96BVD2oH/hDBIHUg9AxCciGL2OhbF8epIKMN/QhikDqQepI8BZMjWy2//EwO2XHoLthSkD2TIu3NbidL37uwWsKVgC0EuJwWAfQsEIJeTAkDqRy0cJhaCUh0o9ZGVSoGpj+RUijsfHvzXsePxb7iviMyHR0MZ/j3Z0PEb5iuMfIgTZByTBlpwLWHBje+wYCQGHAtlkD4ezXHt9rSE74h4IxaUXORmyzq0nRQLQeBiLAP3sUi27aRbCAIN/5lEi4/OJ1Xb/wYGplPJohj6AGLXLKmrpibWAAAAAElFTkSuQmCC);display:inline-block;position:relative;width:13px;top:1px;height:11px;background-position:0 0}#edpIngressContainer:hover>.edpIngressIcon{background-position:-42px 0}@media only screen and (-webkit-min-device-pixel-ratio:1.5),only screen and (min--moz-device-pixel-ratio:1.5),only screen and (-o-min-device-pixel-ratio:3 / 2),only screen and (min-device-pixel-ratio:1.5),only screen and (min-resolution:192dpi){.edpIngressIcon{background-image:url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAADcAAAAYCAYAAABeIWWlAAABvklEQVRYw+2Xz0oCURTGD7hw4xvoA7j0DVwLbiehwOUoxUBvILho1Srat1IhamUP4J8Ua5GBCNEu/wxETS3cNDR4O+c2o+bILOzegeJ+cLffOT+/43AOAMnoJaDQqILenILeYGIeepEnea+ptweJzg5U8U2vNWAiHnmRJ3kvK1FxvWmJg/JBWquAHEwDSxSUDxK9l4B6o0ZNZE4GbPxuM1EavX1wTw5ICbrCX7dGTQyPMsy2xsLq2a8j7umm6NbTmyY1IBLME3m66ZkeHBY3qQGRYAtA9HQTNL3keAOytBjPJRxvQJY8fwWn4BScglNwCk7B/W24/7x+8VPne3GmZTeExbm6WJxx2ZW7OG9x8kQPWqxy87x5/CScPN3dKHtpVzaOX/DJ84tjtXz1FACHoyj4WB1flIPgTP+xuo0KLQMBHILInz0w25n7Phwi1cmBgc07BPF4mmfzT3vtwyFaxXYWk5kRUPr4XiocqZuDLMLMCGhQSkuGI+13Ugg4+TGOEoX/pxS+yeo4glQVu3GE6ocBxxPUII6A/XDgeILDGCZYDwOONNQghoD1cOBI5yySLN1eQkhiGkTuDpOB9b4AhZmO2SqlXEkAAAAASUVORK5CYII=);display:inline-block;position:relative;width:13px;top:1px;height:11px;background-position:0 0;background-size:200% 100%;background-repeat:no-repeat}#edpIngressContainer:hover>.edpIngressIcon{background-position:-13px 0}}\n#ask_feature_div,#averageCustomerReviews,#averageCustomerReviews_feature_div{display:inline-block}.askPipe{color:#666;padding:0 5px 0 5px}.askATFLink{display:inline-block}\n#attach-desktop-sideSheet{position:fixed;right:-700px;width:675px;bottom:0;z-index:5001;margin:0;background-color:#E7E7E7;border-width:0;top:0;box-shadow:-4px 0 5px rgba(0,0,0,.25);background-color:#E7E7E7}#attach-desktop-sideSheet #attach-warranty-pane{position:absolute;width:100%;background-color:#FFF;height:100%}#attach-desktop-sideSheet #attach-accessory-pane{opacity:0;display:none;height:100%}#attach-desktop-sideSheet .huc-v2-order-row-image{max-height:50px}#attach-desktop-sideSheet .huc-image-wrapper{height:60px;width:60px;display:inline-block;margin-left:3px;margin-right:3px}#attach-desktop-sideSheet #attach-close_sideSheet-link{cursor:pointer;padding:2px;z-index:500}#attach-desktop-sideSheet .attach-spinner{margin-left:40px}#attach-desktop-sideSheet .added-to-cart-message-box{border-width:0;padding-right:10px;display:inline-block}#attach-desktop-sideSheet .added-to-cart-message-box .a-alert-container{box-shadow:none;padding:14px 18px 6px 50px}#attach-desktop-sideSheet #attach-base-item-added-symbol-top-offset{margin-top:-5px}#attach-desktop-sideSheet #attachAccessoryModal_feature_div{height:0}#attach-desktop-sideSheet #attach-added-to-cart-message{width:100%}#attach-desktop-sideSheet #attachAccessoryCreditCardArea:hover{cursor:pointer}#attach-desktop-sideSheet #accessoryInfo div.a-span-3{width:450px}#attach-desktop-sideSheet div.attach-product-detail-section{width:450px}#attach-desktop-sideSheet .attach-accessory-image{width:auto;height:auto;max-width:180px;max-height:180px;margin:0 10px}#attach-desktop-sideSheet .attach-warranty-upsell-image{width:675px;height:250px;max-width:675px;max-height:250px;margin-left:-20px;margin-top:-15px;margin-bottom:25px}#attach-desktop-sideSheet .attach-accessory-display-row{max-height:180px;margin:0 14px 18px 14px}#attach-desktop-sideSheet .attach-accessory-display-row .a-link-normal.a-size-base{display:inline-block;overflow:hidden;max-height:76px}#attach-desktop-sideSheet .attach-accessory-divider{margin:0 4px 100px 4px}#attach-desktop-sideSheet div.attach-sidesheet-card{background-color:#FFF;margin:10px;padding:10px 10px 10px 10px}#attach-desktop-sideSheet div.attach-sidesheet-card form{margin:0}#attach-desktop-sideSheet div.attach-sidesheet-card .a-carousel .attach-accessory-image{width:auto;height:auto;max-width:160px;max-height:160px;margin:auto;display:block}#attach-desktop-sideSheet div.card-expandable .card-toggle-see-less .a-icon,#attach-desktop-sideSheet div.card-expandable .card-toggle-see-more .a-icon{margin-right:5px}#attach-desktop-sideSheet div.card-expandable .a-icon-section-collapse,#attach-desktop-sideSheet div.card-expandable .a-icon-section-expand{vertical-align:middle}#attach-desktop-sideSheet div.attach-accessory-tile{position:relative;z-index:25}#attach-desktop-sideSheet div.attach-accessory-tile .image-centering-container{width:160px;height:160px;margin:auto;position:relative;background:#fff}#attach-desktop-sideSheet div.attach-accessory-tile .image-centering-container .attach-accessory-image{max-width:100%;max-height:100%;margin:auto;padding:10px 0;position:absolute;top:0;bottom:0;right:0;left:0}#attach-desktop-sideSheet div.attach-accessory-tile .image-centering-container::before{z-index:1}#attach-desktop-sideSheet div.attach-accessory-tile .tile-default-content{display:block;height:160px}#attach-desktop-sideSheet div.attach-accessory-tile .tile-default-content .tile-add-accessory-badge{position:absolute;z-index:25;top:70px;left:0;right:0;color:#fff;font-weight:700;font-size:14px;line-height:20px;text-align:center}#attach-desktop-sideSheet div.attach-accessory-tile .tile-default-content .tile-add-accessory-badge .tile-add-accessory-badge-inner{display:inline-block;background:#444;opacity:.95;height:32px;min-width:125px;border-radius:3px;padding:5px 10px}#attach-desktop-sideSheet div.attach-accessory-tile .tile-default-content .tile-add-accessory-badge .tile-add-accessory-badge-inner .a-icon,#attach-desktop-sideSheet div.attach-accessory-tile .tile-default-content .tile-add-accessory-badge .tile-add-accessory-badge-inner span{position:relative;top:-3px;vertical-align:middle}#attach-desktop-sideSheet div.attach-accessory-tile .tile-hover-content{display:none;height:160px}#attach-desktop-sideSheet div.attach-accessory-tile .tile-review-prime-container{position:relative;display:inline-block;vertical-align:top}#attach-desktop-sideSheet div.attach-accessory-tile .tile-review-prime-container .tile-prime-badge{position:absolute}#attach-desktop-sideSheet div.attach-accessory-tile:hover .tile-default-content{display:none}#attach-desktop-sideSheet div.attach-accessory-tile:hover .tile-hover-content{display:block}#attach-desktop-sideSheet div.attach-accessory-tile .image-centering-container::before,#attach-desktop-sideSheet div.attach-accessory-tile::before{content:\"\";position:absolute;top:0;right:0;bottom:0;left:0;background:rgba(153,153,153,.08)}#attach-desktop-sideSheet div.attach-accessory-tile.in-cart .image-centering-container::before,#attach-desktop-sideSheet div.attach-accessory-tile.in-cart::before{background:rgba(153,153,153,.16)}#attach-desktop-sideSheet .attach-base-product-image{max-height:85px;max-width:85px;margin-left:-10px;padding-bottom:6px}#attach-desktop-sideSheet .attach-primary-atc-confirm-box{background-color:#FFF;margin:0;position:relative;z-index:25}#attach-desktop-sideSheet .attach-atc-button{min-width:150px}#attach-desktop-sideSheet #attach-accessory-view-cart-cell{text-align:right;padding-right:15px}#attach-desktop-sideSheet #attach-accessory-proceed-cell{padding-left:15px}#attach-desktop-sideSheet #attach-warranty{padding-top:0}#attach-desktop-sideSheet #attach-warranty .si-whats-covered{padding:12px 4px 14px 8px}#attach-desktop-sideSheet #attach-warranty .attach-warranty-button-row{min-height:32px}#attach-desktop-sideSheet #attach-warranty .attach-warranty-add-protection-button{margin-bottom:0}#attach-desktop-sideSheet #attach-warranty #attachWarrantyButtonWrapper{border-radius:4px;border-color:#ddd;border-width:1px;border-style:solid;float:right;margin-top:-50px;padding:14px 16px 14px 16px;text-align:center}#attach-desktop-sideSheet #attach-warranty .a-alert-inline{max-width:200px;padding-top:6px;padding-bottom:6px}#attach-desktop-sideSheet #attach-warranty #attach_add_accessory_spinner_warranty{margin-left:0;padding-top:15px;padding-bottom:15px}#attach-desktop-sideSheet #attach-warranty #attach-accessory-price-warranty{display:block}#attach-desktop-sideSheet #attachSiAddCoverage{width:180px}#attach-desktop-sideSheet #warrantyBulletRowWrapper .a-row{width:410px;float:left}#attach-desktop-sideSheet #attach-sidesheet-view-cart-button{min-width:85px}#attach-desktop-sideSheet #attach-view-cart-button-form{display:inline-block}#attach-desktop-sideSheet .attach-width-fit-content{display:inline-block}#attach-desktop-sideSheet #attach-sidesheet-checkout-button{margin-left:10px;min-width:236px}#attach-desktop-sideSheet .attach-button-large{height:40px}#attach-desktop-sideSheet .attach-button-large .a-button-inner{height:38px}#attach-desktop-sideSheet .attach-button-large .a-button-text{line-height:38px;font-size:14px;padding-top:0}#attach-desktop-sideSheet .close-button{position:absolute;right:14px;top:14px;width:20px;height:20px;opacity:.6}#attach-desktop-sideSheet .close-button:after,#attach-desktop-sideSheet .close-button:before{position:absolute;left:15px;content:' ';height:23px;width:2px;background-color:#111}#attach-desktop-sideSheet .close-button:before{transform:rotate(45deg);margin-left:-6px;margin-top:-4px}#attach-desktop-sideSheet .close-button:after{transform:rotate(-45deg);margin-left:-6px;margin-top:-4px}#attach-desktop-sideSheet div.attach-add-to-cart-message-card{padding:0;background:0 0}#attach-desktop-sideSheet #attachAddedToCartBox{border-right:solid 1px #ddd;padding-right:18px}#attach-desktop-sideSheet #attach-add-to-cart-message-spinner{margin:0 auto;padding-top:40px}#attach-desktop-sideSheet #attach-added-to-cart-message{min-height:116px}#attach-desktop-sideSheet div.attach-accessory-button-row{min-height:41px}\n.dpr-sample-images .dpr-anchor,.dpr-summary-widget.dpr-v2 .dpr-anchor{position:relative;top:-50px}.dpr-sample-images hr.bucketDivider,.dpr-summary-widget.dpr-v2 hr.bucketDivider{background:0 0!important;border-top:1px solid #ccc!important;margin-bottom:-36px!important;height:44px!important;border:0}.dpr-sample-images h2,.dpr-summary-widget.dpr-v2 h2{color:#c60!important;font-size:16px!important;margin-bottom:10px}.dpr-sample-images div.dpr-widget-content,.dpr-summary-widget.dpr-v2 div.dpr-widget-content{margin:0 0 25px 20px}.dpr-summary-widget.dpr-v2 td.dpr-main-columns{width:100%}.dpr-summary-widget.dpr-v2 td.dpr-left-column{vertical-align:top}.dpr-summary-widget.dpr-v2 td.dpr-right-column{vertical-align:top;max-width:440px;padding-left:15px}.dpr-summary-widget.dpr-v2 .dpr-badge-and-quote{position:relative;background-color:#eee;border-radius:10px;margin-top:15px;margin-bottom:25px;padding:15px 25px}.dpr-summary-widget.dpr-v2 .dpr-badge-and-quote .dpr-badge{position:absolute;top:-15px;bottom:-15px;left:15px;min-height:160px;width:170px;border:1px solid #ddd;border-radius:5px;background-color:#fff}.dpr-summary-widget.dpr-v2 .dpr-badge-and-quote .dpr-badge img.dpr-award{position:absolute;top:50%;left:10px;margin-top:-70px}.dpr-summary-widget.dpr-v2 .dpr-badge-and-quote .dpr-badge .dpr-review-date{position:absolute;top:50%;line-height:1;left:0;right:0;margin-top:55px;text-align:center}.dpr-summary-widget.dpr-v2 .dpr-badge-and-quote .dpr-quote{margin-left:195px;min-height:100px}.dpr-summary-widget.dpr-v2 .dpr-badge-and-quote .dpr-quote .dpr-quote-text-container{position:relative}.dpr-summary-widget.dpr-v2 .dpr-badge-and-quote .dpr-quote .dpr-quote-text-container span.dpr-quote-text{font-size:13px;line-height:24px;color:#444}.dpr-summary-widget.dpr-v2 .dpr-badge-and-quote .dpr-quote .dpr-quote-text-container span.dpr-left-quotation-mark,.dpr-summary-widget.dpr-v2 .dpr-badge-and-quote .dpr-quote .dpr-quote-text-container span.dpr-right-quotation-mark{font-size:36px;font-family:Georgia,serif;font-style:italic;color:#444;line-height:0}.dpr-summary-widget.dpr-v2 .dpr-badge-and-quote .dpr-quote .dpr-quote-text-container span.dpr-left-quotation-mark{position:absolute;top:13px;left:-23px}.dpr-summary-widget.dpr-v2 .dpr-badge-and-quote .dpr-quote .dpr-quote-text-container span.dpr-right-quotation-mark{position:relative;top:13px;left:5px;vertical-align:baseline}.dpr-summary-widget.dpr-v2 .dpr-badge-and-quote .dpr-quote .dpr-review-link{margin-top:10px}.dpr-summary-widget.dpr-v2 .dpr-badge-and-quote .dpr-quote .dpr-review-link a span.dpr-link-offsite{color:#888}.dpr-summary-widget.dpr-v2 .dpr-personal-takes{margin-top:40px}.dpr-summary-widget.dpr-v2 .dpr-personal-takes h3{border-bottom:1px solid #ddd;font-size:medium;font-weight:400}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container{margin:0 0}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container .dpr-personal-take{position:relative;margin-top:20px;margin-bottom:20px;min-height:110px}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container .dpr-personal-take .dpr-author{position:absolute;top:0;width:100px;text-align:center}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container .dpr-personal-take.dpr-personal-take-odd .dpr-author{right:0}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container .dpr-personal-take.dpr-personal-take-even .dpr-author{left:0}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container .dpr-personal-take .dpr-author span.dpr-name{margin-top:3px;display:block}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container .dpr-personal-take .dpr-author span.dpr-role{display:block;color:#888;font-size:11px;line-height:1.5}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container .dpr-personal-take div.dpr-text{position:relative;border-radius:5px;padding:10px 15px;border:1px solid #ccc;box-shadow:8px 5px 10px rgba(0,0,0,.08)}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container .dpr-personal-take div.dpr-text table.dpr-text{margin:0;width:auto}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container .dpr-personal-take div.dpr-text table.dpr-text td.dpr-text{height:50px;vertical-align:middle}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container .dpr-personal-take.dpr-personal-take-odd .dpr-text{margin-right:110px}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container .dpr-personal-take.dpr-personal-take-even .dpr-text{margin-left:110px}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container .dpr-personal-take div.dpr-text span.dpr-arrow-tip{position:absolute;top:20px;width:15px;height:30px}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container .dpr-personal-take.dpr-personal-take-odd div.dpr-text span.dpr-arrow-tip{right:-15px}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container .dpr-personal-take.dpr-personal-take-odd div.dpr-text span.dpr-arrow-tip span.dpr-arrow-tip-outer{position:absolute;right:0;top:0;width:0;height:0;border-left:15px solid #ccc;border-top:15px solid transparent;border-bottom:15px solid transparent}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container .dpr-personal-take.dpr-personal-take-odd div.dpr-text span.dpr-arrow-tip span.dpr-arrow-tip-inner{position:absolute;right:1px;bottom:0;width:0;height:0;border-left:15px solid #fff;border-top:15px solid transparent;border-bottom:15px solid transparent}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container .dpr-personal-take.dpr-personal-take-even div.dpr-text span.dpr-arrow-tip{left:-15px}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container .dpr-personal-take.dpr-personal-take-even div.dpr-text span.dpr-arrow-tip span.dpr-arrow-tip-outer{position:absolute;right:0;top:0;width:0;height:0;border-right:15px solid #ccc;border-top:15px solid transparent;border-bottom:15px solid transparent}.dpr-summary-widget.dpr-v2 .dpr-personal-takes .dpr-personal-take-container .dpr-personal-take.dpr-personal-take-even div.dpr-text span.dpr-arrow-tip span.dpr-arrow-tip-inner{position:absolute;right:-1px;bottom:0;width:0;height:0;border-right:15px solid #fff;border-top:15px solid transparent;border-bottom:15px solid transparent}.dpr-v2 table.dpr-pros-and-cons{margin-top:40px}.dpr-v2 table.dpr-pros-and-cons h3{border-bottom:1px solid #ddd;font-size:medium;font-weight:400}.dpr-v2 table.dpr-pros-and-cons td.dpr-cons,.dpr-v2 table.dpr-pros-and-cons td.dpr-pros{vertical-align:top;width:49%}.dpr-v2 table.dpr-pros-and-cons td.dpr-sep{width:10px}.dpr-v2 table.dpr-pros-and-cons ul{margin-top:15px;color:#000}.dpr-v2 table.dpr-pros-and-cons ul li{margin-top:15px}.dpr-v2 table.dpr-pros-and-cons ul li span.dpr-label{font-weight:700;color:#e47911}.dpr-summary-widget.dpr-v2 .dpr-videos{background-color:#eee;border-radius:10px;padding:10px;margin-top:15px}.dpr-summary-widget.dpr-v2 .dpr-videos .dpr-videos-inner{background-color:#fff;border:1px solid #ddd}.dpr-summary-widget.dpr-v2 .dpr-videos .dpr-main-video{padding:10px}.dpr-summary-widget.dpr-v2 .dpr-videos .dpr-main-video .dpr-slate{position:relative;background-color:#222;height:100px;width:383px;height:215px;background-position:center center}.dpr-summary-widget.dpr-v2 .dpr-videos .dpr-main-video .dpr-title{margin-top:10px}.dpr-summary-widget.dpr-v2 .dpr-videos table.dpr-additional-videos tr.dpr-video{position:relative;border-top:1px solid #ddd;margin-top:10px;min-height:55px;padding-top:10px}.dpr-summary-widget.dpr-v2 .dpr-videos table.dpr-additional-videos tr.dpr-video td.dpr-slate{border-top:1px solid #ddd;width:112px;height:63px;padding:10px}.dpr-summary-widget.dpr-v2 .dpr-videos table.dpr-additional-videos tr.dpr-video td.dpr-slate .dpr-slate{width:112px;height:63px;background-color:#222}.dpr-summary-widget.dpr-v2 .dpr-videos table.dpr-additional-videos tr.dpr-video td.dpr-slate .dpr-slate .airy-play-button-overlay{min-width:55px}.dpr-summary-widget.dpr-v2 .dpr-videos table.dpr-additional-videos tr.dpr-video td.dpr-title{border-top:1px solid #ddd;padding:10px 10px 10px 0;vertical-align:middle}.dpr-summary-widget.dpr-v2 .dpr-sidebar-section{margin-top:15px}.dpr-summary-widget.dpr-v2 .dpr-sidebar-section .dpr-sidebar-section-title{text-align:left;margin-bottom:5px;font-size:medium;line-height:1.5}.dpr-summary-widget.dpr-v2 .dpr-sidebar-section .dpr-sidebar-section-content{border:1px solid #ddd;border-radius:10px}.dpr-summary-widget.dpr-v2 .dpr-notable-features .dpr-notable-feature{position:relative;border-top:1px solid #ddd}.dpr-summary-widget.dpr-v2 .dpr-notable-features .dpr-notable-feature:first-child{border-top:0}.dpr-summary-widget.dpr-v2 .dpr-notable-features .dpr-notable-feature img{position:absolute;left:15px;top:15px;background-color:#222}.dpr-summary-widget.dpr-v2 .dpr-notable-features .dpr-notable-feature .dpr-info{margin-left:90px;padding:15px 15px 15px 0;min-height:90px}.dpr-summary-widget.dpr-v2 .dpr-notable-features .dpr-notable-feature .dpr-info .dpr-title{color:#e47911;font-weight:700}.dpr-summary-widget.dpr-v2 .dpr-notable-features .dpr-notable-feature .dpr-info .dpr-description{font-size:12px;line-height:1.5}.dpr-summary-widget.dpr-v2 .dpr-in-hands-shot{padding:15px}.dpr-summary-widget.dpr-v2 .dpr-scoring{padding:10px 15px 15px 15px}.dpr-summary-widget.dpr-v2 .dpr-scoring table.dpr-score-breakdown th{text-align:left;font-weight:400;text-transform:uppercase;color:#888}.dpr-summary-widget.dpr-v2 .dpr-scoring table.dpr-score-breakdown th span.dpr-label-poor{font-size:11px!important;line-height:1.465!important}.dpr-summary-widget.dpr-v2 .dpr-scoring table.dpr-score-breakdown th span.dpr-label-excellent{font-size:11px!important;line-height:1.465!important;float:right}.dpr-summary-widget.dpr-v2 .dpr-scoring table.dpr-score-breakdown td{border-top:1px solid #ddd}.dpr-summary-widget.dpr-v2 .dpr-scoring table.dpr-score-breakdown tr:last-child td{border-bottom:1px solid #ddd}.dpr-summary-widget.dpr-v2 .dpr-scoring table.dpr-score-breakdown td.dpr-label{width:1%;vertical-align:middle;padding:8px 15px 8px 0;white-space:nowrap;font-size:12px;line-height:1.5}.dpr-summary-widget.dpr-v2 .dpr-scoring table.dpr-score-breakdown td.dpr-meter-container{width:99%;vertical-align:middle}.dpr-summary-widget.dpr-v2 .dpr-scoring table.dpr-score-breakdown span.dpr-meter{display:inline-block;background-color:#eee;background:-moz-linear-gradient(top,#eee,#f6f6f6);background:-webkit-linear-gradient(top,#eee,#f6f6f6);background:-webkit-gradient(linear,left top,left bottom,color-stop(0,#eee),color-stop(100%,#f6f6f6));background:-o-linear-gradient(top,#eee,#f6f6f6);background:-ms-linear-gradient(top,#eee,#f6f6f6);background:linear-gradient(top,#eee,#f6f6f6);-moz-box-shadow:0 1px 2px rgba(0,0,0,.08) inset,0 -1px 0 rgba(0,0,0,.03) inset;-webkit-box-shadow:0 1px 2px rgba(0,0,0,.08) inset,0 -1px 0 rgba(0,0,0,.03) inset;box-shadow:0 1px 2px rgba(0,0,0,.08) inset,0 -1px 0 rgba(0,0,0,.03) inset;height:17px;width:100%}.dpr-summary-widget.dpr-v2 .dpr-scoring table.dpr-score-breakdown span.dpr-meter span.dpr-meter-bar{display:inline-block;vertical-align:top;height:17px;background-color:#44A0E9;background:-moz-linear-gradient(top,#63b4f2,#44a0e9);background:-webkit-linear-gradient(top,#63b4f2,#44a0e9);background:-webkit-gradient(linear,left top,left bottom,color-stop(0,#63b4f2),color-stop(100%,#44a0e9));background:-o-linear-gradient(top,#63b4f2,#44a0e9);background:-ms-linear-gradient(top,#63b4f2,#44a0e9);background:linear-gradient(top,#63b4f2,#44a0e9);-moz-box-shadow:0 0 0 1px rgba(0,0,0,.01) inset,0 -1px 0 rgba(0,0,0,.05) inset;-webkit-box-shadow:0 0 0 1px rgba(0,0,0,.01) inset,0 -1px 0 rgba(0,0,0,.05) inset;box-shadow:0 0 0 1px rgba(0,0,0,.01) inset,0 -1px 0 rgba(0,0,0,.05) inset}.dpr-summary-widget.dpr-v2 .dpr-scoring table.dpr-score-breakdown span.dpr-meter span.dpr-meter-bar:before{background-color:rgba(255,255,255,.25);content:\"\";display:block;font-size:0;height:1px;margin:1px}.dpr-summary-widget.dpr-v2 .dpr-scoring .dpr-overall-score{margin:15px 0 10px 0}.dpr-summary-widget.dpr-v2 .dpr-scoring .dpr-overall-score .dpr-value{background-color:#0C66BE;border-radius:5px;color:#fff;font-size:36px;font-weight:700;height:60px;line-height:60px;margin:0 auto 5px auto;text-align:center;width:100px}.dpr-summary-widget.dpr-v2 .dpr-scoring .dpr-overall-score .dpr-label{color:#888;font-size:12px;text-align:center;text-transform:uppercase}.dpr-summary-widget.dpr-v2 .dpr-scoring .dpr-note{color:#888;font-size:12px;line-height:1.5;text-align:center}.dpr-summary-widget.dpr-v2 .dpr-about-us{position:relative;margin-top:10px}.dpr-summary-widget.dpr-v2 .dpr-about-us img.dpr-logo{position:absolute;left:0;top:0}.dpr-summary-widget.dpr-v2 .dpr-about-us .dpr-text{margin-left:175px;color:#888;font-size:12px;line-height:1.5}.dpr-sample-images .dpr-gallery-info{margin-bottom:10px;width:1010px}.dpr-sample-images .dpr-gallery-info h3{padding:0;font-size:medium;font-weight:400}.dpr-sample-images .dpr-gallery-info .dpr-info-line a.dpr-see-all-images span.dpr-link-offsite{color:#888}.dpr-sample-images .dpr-gallery-info .dpr-info-line span.dpr-open-originals-tooltip{float:right;color:#888}.dpr-sample-images .dpr-image-grid{position:relative}.dpr-sample-images .dpr-image-grid a.dpr-image{position:absolute;display:block}.dpr-sample-images .dpr-image-grid a.dpr-image img{position:absolute;left:0;top:0}.dpr-sample-images .dpr-image-grid a.dpr-image span.dpr-exif{display:block;position:absolute;left:0;bottom:0;right:0;background-color:#000;background-color:rgba(0,0,0,.75);color:#fff;font-size:9px;padding:2px 4px}.rtings__anchor{position:relative;top:-50px}.rtings__title{color:#e77600;font-size:21px}.rtings__quote{background:#eee;border-radius:5px;position:relative;margin-top:1rem;margin-bottom:3rem}.rtings__quote-badge{background:#fff;border:1px solid #ddd;border-radius:5px;position:absolute;top:-1rem;bottom:-1rem;left:1rem;width:17rem;margin-bottom:0}.rtings__quote-badge-inner{position:absolute;height:56px;margin-top:-28px;top:50%;width:16rem;margin-left:-7rem;left:50%}.rtings__quote-badge-image{display:inline-block;height:56px}.rtings__quote-badge-text{display:inline-block;font-size:.8rem;line-height:1.2em;font-weight:700;padding-top:.8rem}.rtings__quote-text{margin-left:19.5rem;padding:1rem}.rtings__quote-mark{font-family:Georgia;font-size:2.5em;line-height:1px;vertical-align:-11px;color:#555}.rtings__quote-mark--open{position:absolute;left:-1rem;top:12px}.rtings__header{font-weight:700}.rtings__score-meter{min-width:100px}.rtings__rating-row:first-child .rtings__rating-name,.rtings__rating-row:first-child .rtings__rating-score{font-size:1.2em;font-weight:700}.rtings__right-col{margin-top:1rem}.rtings__right-col .a-box-group{max-width:500px}.rtings__aspect-ratio{position:relative;width:100%;height:0;padding-bottom:56%}.rtings__aspect-ratio iframe{position:absolute;width:100%;height:100%;left:0;top:0}.rtings__score-meter--mobile{min-width:10rem}.rtings__score-meter--mobile .a-meter{height:2rem}table.rtings__compact-table--mobile tr td{padding-left:0}table.rtings__compact-table--mobile tr td:last-child{padding-right:0}\n.dp-apl-pmp-badge{background-color:#0079AF;font-weight:400;font-size:12px;font-family:\"Amazon Ember\",Arial,sans-serif!important;-webkit-font-smoothing:auto!important}.dp-apl-pmp-badge:before{border-bottom-color:#0079AF}.dp-apl-pmp-badge:after{border-top-color:#0079AF}.dp-apl-pmp-pd-badge{padding:0 8px;background-color:#97EDFC;color:#333E48;display:Inline-block;font-weight:400;font-size:12px;font-family:\"Amazon Ember\",Arial,sans-serif!important;-webkit-font-smoothing:auto!important;margin:0 auto;line-height:22px!important;position:static;border-radius:0!important;margin-right:-5px}.dp-apl-pmp-pd-badge:before{border-bottom-color:#97EDFC}.dp-apl-pmp-pd-badge:after{border-top-color:#97EDFC}#govtRebatePopoverTrigger .a-icon-popover{display:none}#govtRebatePreloadContent{padding:2rem;height:100%;overflow-x:auto}.dp-apl-govt-rebate-prom-badge{background-color:#e31820;display:inline-block;color:#fff;font-weight:700;padding-top:1px;padding-left:4px;padding-right:4px}.apl_popover_hover .a-declarative{font-size:14px}.apl_popover_hover a:hover{text-decoration:none}.apl_type_border_dotted{border-style:solid;border-color:#eda93a!important;background-color:#eda93a;border-radius:2px;border-width:1px;text-align:center;vertical-align:middle;display:inline-block;min-width:36px;line-height:17px!important}.apl_u_l a:hover{text-decoration:none}.apl_type{font-size:12px!important;color:#fff;padding:0 3px 0 3px}.apl_label{vertical-align:bottom}.apl_message{padding-left:1px;max-width:60px;display:inline-block;overflow:hidden;vertical-align:middle;text-overflow:ellipsis;white-space:nowrap}.apl_message_only_pdp{width:95%;padding-left:1px;display:inline-block;line-height:13px;vertical-align:middle;margin-bottom:3px;max-height:45px;overflow:hidden}.apl_message_popover{padding-left:1px;display:inline-block;overflow:hidden;line-height:13px;vertical-align:middle;text-overflow:ellipsis;padding-right:8px;width:100%}.apl_message_ex{padding-left:1px;display:inline-block;overflow:hidden;line-height:13px;vertical-align:middle;text-overflow:ellipsis;padding-right:5px;width:100%}.apl_message_tips{display:inline-block;overflow:hidden;vertical-align:middle;font-size:13px}.apl_m_font_title{color:#000;font-weight:700;white-space:nowrap}.apl_m_font_message{font-size:13px!important;white-space:normal}.apl_divider_dotted{margin-bottom:2px;margin-top:5px;border-style:dotted}.apl_container_inline{display:inline-block}#applicable_promotion_list_sec{margin-bottom:0}.apl_badgeHvaCoupon{width:60px;vertical-align:top!important}.apl_hvaCouponTAndC{position:relative;top:1.5px}.apl_redeem_display{display:inline-block}.apl_redeem_hide{display:none}.apl_l_black{color:#000!important}.pdp_checkout_discount_font{font-size:15px;font-weight:700}.pdp_no_rush_instant_discount_font{font-size:15px;font-weight:700}.apl_see_pop{display:inline-block;vertical-align:middle}.dp-apl-govt-rebate-prom-section{margin-bottom:0}\n.discountPillWrapper{margin:0;font-size:13px;line-height:19px;display:inline-block;font-weight:400;cursor:pointer}.discountPillWrapper .pill{display:inline-block;position:relative;background:#ddd;color:#555;min-width:38px;z-index:0;text-align:center}.discountPillWrapper .pill.discountPillLeft{border-radius:10px 0 0 10px;margin-right:8px;padding:1px 2px 0 8px}.discountPillWrapper .pill.discountPillLeft.pillLightUp{background-color:#ffa723;color:#111}.discountPillWrapper .pill.discountPillRight{border-radius:0 10px 10px 0;padding:1px 8px 0 2px}.discountPillWrapper .pill.discountPillRight.pillLightUp{background-color:#ffa723;color:#111}.discountPillWrapper .pill.discountPill{border-radius:10px;padding:1px 8px 0 8px;min-width:42px;background:#ffa723}.discountPillWrapper .discountText{background-color:inherit;color:#111}.discountPillWrapper .discountTextLeft,.discountPillWrapper .discountTextRight{background-color:inherit}.discountPillWrapper .discountTextLeft:after,.discountPillWrapper .discountTextRight:after{position:absolute;top:0;width:10px;height:100%;transform:skew(-20deg);background-color:inherit;content:'';z-index:-1}.discountPillWrapper .discountTextLeft:after{right:-4px}.discountPillWrapper .discountTextRight:after{left:-4px}#onml-new-or-unrecognized-sns-customer-learn-more,#onml-non-tiered-learn-more,#onml-tiered-learn-more,#sns-non-tiered-learn-more,#sns-tiered-learn-more{display:inline-block}#onmlv2FormFields{border:0;padding:0;margin:0;border-collapse:collapse}#pe-fallback-msgbox .a-popover-trigger .a-icon-popover{display:none}.exclusively-prime-signup-button.a-button{border-color:#30718b #2b657c #26586c}.exclusively-prime-signup-button.a-button{background:#49ADD3}.exclusively-prime-signup-button.a-button .a-button-inner{background:#367e9b;background:-moz-linear-gradient(top,#4A8BA5 0,#367E9B 50%,#30718B 100%);background:-webkit-gradient(linear,left top,left bottom,color-stop(0,#4A8BA5),color-stop(.5,#367E9B),color-stop(1,#30718B));background:-webkit-linear-gradient(top,#4A8BA5 0,#367E9B 50%,#30718B 100%);background:-o-linear-gradient(top,#4A8BA5 0,#367E9B 50%,#30718B 100%);background:-ms-linear-gradient(top,#4A8BA5 0,#367E9B 50%,#30718B 100%);background:linear-gradient(to bottom,#4A8BA5 0,#367E9B 50%,#30718B 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#4A8BA5', endColorstr='#30718B', GradientType=0)}.exclusively-prime-signup-button.a-button .a-button-inner{-webkit-box-shadow:0 1px 0 rgba(255,255,255,.15) inset;-moz-box-shadow:0 1px 0 rgba(255,255,255,.15) inset;box-shadow:0 1px 0 rgba(255,255,255,.15) inset}.exclusively-prime-signup-button.a-button .a-button-text{color:#fff}.exclusively-prime-signup-button.a-button:hover{border-color:#2b657c #26586c #204c5d}.exclusively-prime-signup-button.a-button:hover .a-button-inner{background:#30718b;background:-moz-linear-gradient(top,#367E9B 0,#30718B 50%,#2B657C 100%);background:-webkit-gradient(linear,left top,left bottom,color-stop(0,#367E9B),color-stop(.5,#30718B),color-stop(1,#2B657C));background:-webkit-linear-gradient(top,#367E9B 0,#30718B 50%,#2B657C 100%);background:-o-linear-gradient(top,#367E9B 0,#30718B 50%,#2B657C 100%);background:-ms-linear-gradient(top,#367E9B 0,#30718B 50%,#2B657C 100%);background:linear-gradient(to bottom,#367E9B 0,#30718B 50%,#2B657C 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#367E9B', endColorstr='#2B657C', GradientType=0)}.exclusively-prime-signup-button.a-button:active{border-color:#26586c #204c5d #204c5d}.exclusively-prime-signup-button.a-button:active .a-button-inner{background:#30718b;background-image:none;filter:none;-webkit-box-shadow:0 1px 3px rgba(0,0,0,.2) inset;-moz-box-shadow:0 1px 3px rgba(0,0,0,.2) inset;box-shadow:0 1px 3px rgba(0,0,0,.2) inset}.a-mom-link-row{padding-left:45px}.sns-buybox-upsell-trigger{cursor:pointer}#sns-onml-buybox-upsell-message-non-tiered,#sns-onml-buybox-upsell-message-tiered,#subscribe-only,#subscribe-only-no-tiered-text,#subscribe-only-tiered-text{text-align:left}#subscribe-only-link-with-tiered-text{display:inline}#subscribe-only{display:block}#snsFrequencySection{text-align:left}.sns-onml-program-detail .a-section{margin-bottom:14px}#snsPitchPrice_feature_div{display:none;visibility:hidden}#onmlPriceBlockUpsellText{display:none;visibility:hidden}#actionPanel:not(.ap-deal):not(.ap-pospromo):not(.ap-b2brd) #price #priceblock_ourprice.onml-price-inactive,#actionPanel:not(.ap-deal):not(.ap-pospromo):not(.ap-b2brd) #price #priceblock_saleprice.onml-price-inactive{font-size:13px!important}#actionPanel:not(.ap-deal):not(.ap-pospromo):not(.ap-b2brd) #price #priceblock_ourprice_lbl.onml-price-inactive,#actionPanel:not(.ap-deal):not(.ap-pospromo):not(.ap-b2brd) #price #priceblock_saleprice_lbl.onml-price-inactive{padding-top:0!important}#actionPanel #price #snsPrice_lbl{padding-top:7px!important}#actionPanel #price #priceblock_snsprice{font-size:21px!important}\n.burj #acBadge_feature_div{display:inline-block}.burj .ac-badge-wrapper{max-width:560px}.ac-badge-wrapper{margin:5px 0 10px;display:flex}.ac-keyword-link{color:#0066C0;font-size:12px}.ac-for-text{color:#888;display:inline;margin-left:5px;line-height:22px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ac-product-highlights-for-text{color:#888;display:inline;margin-left:4px;line-height:22px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ac-badge-wrapper .a-declarative{display:inline-flex}a:hover .ac-keyword-link{color:#E47911;text-decoration:underline}.ac-badge-wrapper a.badge-link:hover{text-decoration:none}.ac-badge-rectangle{height:22px;background-color:#232F3E;border-color:#232F3E;display:flex}.ac-badge-triangle{width:0;height:0;border-right:10px solid transparent;border-top:22px solid;color:#232F3E}.ac-badge-text-primary{line-height:22px;margin-left:8px;margin-right:3px;color:#fff;font-family:\"Amazon Ember\",Arial!important;min-width:36px}.ac-badge-text-secondary{line-height:22px;margin-right:8px;color:#F69931;font-family:\"Amazon Ember\",Arial!important;min-width:24px}[data-a-badge-color=sx-gulfstream]{background-color:#002e36!important;color:#002e36!important}[data-a-badge-color=sx-cloud]{color:#fff!important}[data-a-badge-color=ac-orange]{color:#F69931!important}.superleaf .ac-for-text{color:#ddd}.superleaf .ac-keyword-link a{color:#56c2ec!important}.superleaf .ac-badge-rectangle{height:24px;border:thin solid #888;border-right:transparent}.superleaf .ac-badge-triangle{border-top:24px solid #888;border-right:11px solid transparent;position:relative}.superleaf .ac-badge-triangle::after{content:'';border-right:10px solid transparent;border-top:22px solid;color:#232F3E;top:-23px;position:absolute}.superleaf #detail-page-ac-badge-label{border:thin solid #888}.superleaf #detail-page-ac-badge-label::before{content:'';width:10px;height:27px;border-left:10px solid #888;border-bottom:26px solid transparent;box-sizing:border-box;top:-1px;right:-11px;position:absolute}.ac-mobile-badge-wrapper{margin:3px 0 10px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ac-mobile-for-text{font-size:12px;color:#888;display:inline;margin-left:5px;line-height:22px}.ac-product-highlights-mobile-for-text{font-size:12px;color:#888;display:inline;margin-left:4px;line-height:22px;vertical-align:top}.ac-orange{color:#F69931}.ac-grey{color:#232F3E}.amazons_choice_bottom_sheet_content.a-sheet-lightbox.a-sheet-show{background-color:rgba(0,0,0,.75)}.ac-mobile-badge-wrapper .container{padding:20px}[data-a-badge-color=sx-gulfstream]{background-color:#002e36!important;color:#002e36!important}[data-a-badge-color=ac-orange]{color:#F69931!important}[data-a-badge-color=sx-cloud]{color:#fff!important}.amazon_elements_mobile #acBadgeReviewsRowInner{padding-right:15rem}.amazon_elements_mobile #acBadge_feature_div{width:100%;float:left}.amazon_elements_mobile #averageCustomerReviews_feature_div{margin-right:-15rem;float:right}.amazon_elements_mobile .badge-wrapper{margin-top:0;margin-bottom:0}.amazon_elements_mobile .ac-mobile-badge-wrapper{margin-top:0;margin-bottom:0}.ac-feedback-container{border:1px solid #ccc}.ac-feedback-option{border-bottom:1px solid #ccc;height:60px}#feedback_toggle_text{margin-left:3px}#acFeedbackPrompt{overflow:auto}.why-ac-reason-title-text-mobile-detail{font-size:15px!important}.why-ac-reason-desc-text-mobile-detail{font-size:15px!important;padding-left:2px!important}#ac-mobile-detail-bullets .ul{padding:5px 0 0!important}#ac-mobile-detail-bullets .ul .li{font-size:13px!important}.burj #acBadge_feature_div .badge-wrapper{margin:5px 0 5px!important;display:flex!important}#acBadge_feature_div .badge-wrapper{margin:5px 0 5px;display:flex}.badge-wrapper .a-declarative{display:inline-flex}.ac-badge-popover-title-div{padding-bottom:8px!important}.ac-badge-popover-title{line-height:22px;color:#000;font-family:\"Amazon Ember\",Arial!important;font-size:15px!important}.ac-badge-popover-tagline{line-height:22px;color:#000;font-family:\"Amazon Ember\",Arial!important}.why-ac-text{font-size:10px!important;line-height:24px!important}.why-ac-reason-text{font-size:13px!important;line-height:17px!important}.why-ac-reason-desc-text{font-size:8px!important;color:grey}.ac-badge-popover-reason-icon{margin-top:4px}.acbadge-reason-text{line-height:10px}.ac-ul{color:#000!important;padding-bottom:5px!important}#why-we-love-this-product-link{padding-top:2px;padding-left:5px}.badge-wrapper-mobile{margin:3px 0 10px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.amazons_choice_bottom_sheet_content.a-sheet-lightbox.a-sheet-show{background-color:rgba(0,0,0,.75)}.container{padding:20px}.for-ac-text-flyover{margin-left:5px!important;vertical-align:top!important}.why-ac-reason-title-text-mobile-flyover{font-size:13px!important}.why-ac-reason-desc-text-mobile-flyover{font-size:13px!important}.why-ac-reason-desc-text-container{line-height:17px!important;margin-top:5px!important}.for-ac-text{margin-left:17px!important;vertical-align:top!important}.ac-mobile-ul{font-size:10px!important;color:#000}#why-we-love-this-product-link-mobile{font-size:13px!important;padding-left:5px}\n.prsubswidget-asin-content{padding-left:15px;padding-right:10px}.prsubswidget-asin-brand{display:block}.prsubswidget-asin-title{cursor:pointer;display:block}.prsubswidget-review-count{display:inline-table;vertical-align:text-top}#prsubswidget .a-icon-prime{margin-top:6px}.prsubswidget-asin-grid-column:not(:last-child){border-right:1px solid #DDD}#prsubswidget .a-carousel-col.a-carousel-center{margin:0 10px}#prsubswidget-title{margin-top:10px;margin-left:10px}#prsubswidget-title>div{width:100%}#prsubswidget .a-carousel-card{min-width:280px}\n#watchNowContainer .watchnow-prime{margin:0 auto;background-size:135px;background-position:0 -48px;width:92px;height:34px;display:block}#watchNowContainer .amazon-video-logo{display:block;margin:0 auto 8px;background-size:140px;background-position:0 -90px;width:140px;height:28px}#watchNowContainer #stream-now-btn .a-button-inner{height:48px}#watchNowContainer #stream-anytime-btn .a-button-inner{height:48px}#watchNowContainer #stream-now-btn{display:block}#watchNowContainer #stream-now-btn #stream-now-btn-announce{background:-webkit-linear-gradient(top,#b0dc55,#88b824)}#watchNowContainer #stream-now-btn a{color:#111}#watchNowContainer #stream-anytime-btn{display:block;margin-bottom:5px}#watchNowContainer #stream-anytime-btn #stream-anytime-btn-announce{background:linear-gradient(to bottom,#70767d 0,#70767d 0,#454d56 100%)}#watchNowContainer #stream-anytime-btn a{color:#fff}#watchNowContainer #prime-text{display:block;text-align:center;padding:5px 0}#watchNowContainer .play-logo{background-size:100px;background-position:0 0;position:absolute;width:36px;height:36px;left:15px;top:14%}#watchNowContainer #stream-now-text1{display:block;font-size:15px!important;padding-top:5px;padding-left:10px}#watchNowContainer #stream-now-text2{display:block;font-size:10px!important;padding-left:15px;margin-top:-12px}#watchNowContainer #stream-anytime-text1{font-size:15px!important;font-weight:700;text-shadow:-1px -1px 1px #222}#watchNowContainer #stream-anytime-text2{display:block;font-size:9px!important;margin-top:-12px}#watchNowContainer #p2dBuyboxSavingsMessage{margin-bottom:0!important}\n.addProfessionalServicesRow{border-top:1px solid #e7e7e7;border-bottom:1px solid #e7e7e7;padding-top:10px}.addProfessionalServicesRow-alert-on{border-color:red}#sts-pdp-service-siatc{max-width:900px}#sts-pdp-service-siatc-modal-content{padding:24px 48px}#sts-pdp-service-siatc-modal-content .sts-vas-siatc-heading{font-size:62px!important;font-weight:700;line-height:1!important;text-transform:uppercase}#vas-siatc-zip-input{width:80px!important}.ship-to-store-ingress-header-image{vertical-align:inherit}.ship-to-store-ingress-header{vertical-align:middle}.ship-to-store-ingress-header .ship-to-store-ingress-header-primary-text{vertical-align:text-top}.ship-to-store-ingress-header .ship-to-store-ingress-header-secondary-text{display:table}#ship-to-store-ingress-offered .ship-to-store-ingress-header-image{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/DetailPageSTSAssets-sprite_1-767d0616429c856e625096609a6ee85c5132ea0b._V2_.png)!important;background-position:-62px -31px!important;height:24px!important;width:24px!important}#ship-to-store-ingress-offered .ship-to-store-buttons-row{max-width:495px}#ship-to-store-ingress-selected .ship-to-store-ingress-header-image{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/DetailPageSTSAssets-sprite_1-767d0616429c856e625096609a6ee85c5132ea0b._V2_.png)!important;background-position:-88px -31px!important;height:24px!important;width:24px!important}.ship-to-store-ingress-button-container{max-width:240px;width:100%}.ship-to-store-ingress-button-container .a-button-inner{height:auto;padding:2px 0}.ship-to-store-ingress-button-container .a-button-inner .ship-to-store-ingress-button img,.ship-to-store-ingress-button-container .a-button-inner .ship-to-store-ingress-button span{vertical-align:middle}.ship-to-store-ingress-button-container .a-button-inner .ship-to-store-ingress-button-secondary-text{display:table;margin:auto}.disabled .ship-to-store-offer-img,.disabled.ship-to-store-ingress-bullet-points,:disabled .ship-to-store-offer-img,:disabled.ship-to-store-ingress-bullet-points{opacity:.5}.ship-to-store-offer-img.in-store{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/DetailPageSTSAssets-sprite_1-767d0616429c856e625096609a6ee85c5132ea0b._V2_.png)!important;background-position:-29px -3px!important;height:15px!important;width:22px!important}.ship-to-store-offer-img.at-home{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/DetailPageSTSAssets-sprite_1-767d0616429c856e625096609a6ee85c5132ea0b._V2_.png)!important;background-position:-2px -2px!important;height:16px!important;width:25px!important}.shipToStoreRow{padding:10px 0}#ship-to-store-pdp-service-modal{width:915px}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column{margin:0!important;padding-top:14px;width:42.512%!important}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top{padding:0 14px}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs .ship-to-store-modal-tab-content{border-bottom:none;border-radius:0}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs .ship-to-store-modal-tab-headings{border-top-left-radius:3px;border-top-right-radius:3px;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;-o-user-select:none}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs .ship-to-store-modal-tab-headings .ship-to-store-modal-tab-heading{text-align:center;width:50%;min-width:12em}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs .ship-to-store-modal-tab-headings .ship-to-store-modal-tab-heading .ship-to-store-modal-tab-heading-content{color:initial}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs .ship-to-store-modal-tab-headings .ship-to-store-modal-tab-heading-first .ship-to-store-modal-tab-heading-content{border-top-left-radius:3px}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs .ship-to-store-modal-tab-headings .ship-to-store-modal-tab-heading-last .ship-to-store-modal-tab-heading-content{border-top-right-radius:3px;border-right:0}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs #ship-to-store-modal-tab-shared-content{border:1px #ddd solid;border-style:none solid}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs #ship-to-store-modal-tab-shared-content #ship-to-store-modal-tab-shared-content-inner{padding:0 18px}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs #ship-to-store-modal-offer-scroller-container{height:450px}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs #ship-to-store-modal-offer-scroller-container .ship-to-store-modal-offer-wrapper{-moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;border:1px solid #ddd}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs #ship-to-store-modal-offer-scroller-container .ship-to-store-modal-offer-wrapper.selected{background-color:#fefaf6!important;border-color:#e47911!important}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs #ship-to-store-modal-offer-scroller-container .ship-to-store-modal-offer-wrapper .ship-to-store-offer-merchant-row{margin:0 10px 0 0!important;padding:15px!important;cursor:pointer!important}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs #ship-to-store-modal-offer-scroller-container .ship-to-store-modal-offer-wrapper .ship-to-store-offer-merchant-row .ship-to-store-modal-offer-radio-button .ship-to-store-modal-offer-radio-button-content{width:250px}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs #ship-to-store-modal-offer-scroller-container .ship-to-store-modal-offer-wrapper .ship-to-store-offer-merchant-row .ship-to-store-modal-offer-radio-button label{padding-left:0}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs #ship-to-store-modal-offer-scroller-container .ship-to-store-modal-offer-wrapper .ship-to-store-offer-merchant-row .ship-to-store-modal-offer-radio-button label>input{position:absolute;visibility:hidden}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs #ship-to-store-modal-offer-scroller-container .ship-to-store-modal-offer-wrapper .ship-to-store-offer-merchant-row .ship-to-store-modal-offer-radio-button label>input+i{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/DetailPageSTSAssets-sprite_1-767d0616429c856e625096609a6ee85c5132ea0b._V2_.png)!important;background-position:-2px -20px!important;height:35px!important;width:28px!important;background-size:unset;font-style:initial;position:relative;text-align:center}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs #ship-to-store-modal-offer-scroller-container .ship-to-store-modal-offer-wrapper .ship-to-store-offer-merchant-row .ship-to-store-modal-offer-radio-button label>input+i span{color:#fff;font-weight:700;position:absolute;left:30%;top:15%;width:100%;height:100%}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs #ship-to-store-modal-offer-scroller-container .ship-to-store-modal-offer-wrapper .ship-to-store-offer-merchant-row .ship-to-store-modal-offer-radio-button label>input:checked+i{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/DetailPageSTSAssets-sprite_1-767d0616429c856e625096609a6ee85c5132ea0b._V2_.png)!important;background-position:-32px -20px!important;height:35px!important;width:28px!important}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs #ship-to-store-modal-offer-scroller-container .ship-to-store-modal-offer-wrapper .ship-to-store-offer-merchant-row .ship-to-store-modal-offer-radio-button.at-home{padding-left:10px}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs #ship-to-store-modal-offer-scroller-container .ship-to-store-modal-offer-wrapper .ship-to-store-offer-merchant-row .ship-to-store-modal-offer-radio-button.at-home label input+i{display:none}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs #ship-to-store-modal-offer-scroller-container .ship-to-store-modal-offer-wrapper .ship-to-store-offer-merchant-row .ship-to-store-modal-offer-radio-button .ship-to-store-merchant-information{display:block}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs #ship-to-store-modal-offer-scroller-container .ship-to-store-modal-offer-wrapper .ship-to-store-offer-merchant-row .ship-to-store-modal-offer-radio-button .ship-to-store-pdp-only-included-services-container{display:grid}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-content-column-top #ship-to-store-modal-tabs #ship-to-store-modal-offer-scroller-container .ship-to-store-modal-offer-wrapper .ship-to-store-offer-merchant-row .ship-to-store-modal-offer-radio-button .ship-to-store-pdp-only-included-services-container .ship-to-store-pdp-only-included-services-number-of-services{display:inherit}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-offer-action-buttons{margin:0!important;padding:10px;background:#f6f6f6;border-top:1px #ddd solid;display:flex}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-offer-action-buttons .ship-to-store-modal-decline-offer-column{width:auto;margin-right:10px}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-offer-action-buttons .ship-to-store-modal-accept-offer-column{flex-grow:1}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column #ship-to-store-modal-offer-action-buttons .ship-to-store-modal-action-button{width:100%}#ship-to-store-pdp-service-modal .ship-to-store-modal-content-column-no-map{width:100%!important}#ship-to-store-pdp-service-modal #ship-to-store-modal-map{min-height:694px!important;width:100%;position:relative}#ship-to-store-pdp-service-modal #ship-to-store-modal-map .Infobox{pointer-events:none!important;box-shadow:0 4px 8px 0 rgba(0,0,0,.2),0 6px 20px 0 rgba(0,0,0,.19);border:1px #ddd solid;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}#ship-to-store-zip-update-popover-content{min-height:60px;max-height:110px;max-width:180px;margin:5px 15px}#ship-to-store-zip-update-popover-content #ship-to-store-pdp-only-modal-zip-update-form{margin:0}#ship-to-store-zip-update-popover-content #ship-to-store-pdp-only-modal-zip-update-form #ship-to-store-zip-input{width:80px!important}.disabled .ship-to-store-offer-img{opacity:.5}\n#beautyLocalPromo_widget_smartShelf{min-height:214px;width:97%;margin-top:-8px;margin-bottom:-5px;clear:left}#beautyLocalPromo_header{margin-bottom:13px;padding-left:7%}#beautyLocalPromo_offerDetails{padding-left:7%}#beautyLocalPromo_businessInfo{padding-left:12%}.beautyLocalPromo_businessInfoContent{margin-bottom:0;line-height:normal}#beautyLocalPromo_businessImage{float:right;padding-right:10%;margin-bottom:0;margin-top:-2%}#beautyLocalPromo_addOfferButton{margin-left:12%}.beautyLocalPromo_widget_divider{margin-top:34px;border-top:1px solid #f3f3f3}.beautyLocalPromo_postAddOfferSuccessConfirm{padding-left:28px}.beautyLocalPromo_postAddOfferSuccessDetails{padding-top:16px;padding-left:29px}#beautyLocalPromo_postFailureRetryContent{padding-left:29px}a#beautyLocalPromo_postFailureRetryLink{text-decoration:none}#beautyLocalPromo_addOffer_spinner{margin-left:12%}\n.shopbylook-btf-desktop-row{border:1px solid #f2f2f2;overflow:hidden;width:auto}.mirai-btf-shopbylook-header{display:none;overflow:hidden}.shopbylook-btf-desktop-left-section{border:1px solid #f2f2f2;padding:31px 45px;height:474px;display:block}.shopbylook-btf-desktop-left-section-title{text-align:center;font-size:20px;height:80px;overflow:hidden;width:280px;line-height:25px;color:#2C2C2C;margin:0 -30px;display:flex;align-items:center;justify-content:center}.shopbylook-btf-desktop-title-row{text-align:left;font-size:19px;line-height:25px;color:#2C2C2C;width:auto;display:table;margin-top:30px;font-weight:700}.shopbylook-btf-desktop-left-section-image{margin:20px -10px}.shopbylook-btf-desktop-left-section-img-title{display:table;height:50px}.shopbylook-btf-desktop-left-section-img-title span{display:table-cell;vertical-align:middle;line-height:15px}.shopbylook-btf-desktop-left-section-b-left{width:100px;display:inline-block;float:left;text-align:right;font-size:12px;color:#999}.shopbylook-btf-desktop-left-section-b-left-img{float:right!important;margin-left:6px!important;opacity:.7}.shopbylook-btf-desktop-left-section-b-right{width:100px;display:inline-block;float:right;font-size:12px;color:#999}.shopbylook-btf-desktop-left-section-b-right-img{float:left!important;margin-right:6px!important;opacity:.7}.shopbylook-btf-item-box-anchor .shopbylook-btf-item-dislike,.shopbylook-btf-item-box-anchor .shopbylook-btf-item-like{padding:0;margin:0}.shopbylook-btf-desktop-right-section{height:474px;overflow:hidden;position:relative}.shopbylook-btf-item-box{display:inline-block;float:left;border:1px solid #f2f2f2;-webkit-transition:transform 1s ease;-moz-transition:transform 1s ease;-o-transition:transform 1s ease;transition:transform 1s ease;height:237px}.shopbylook-btf-item-price{text-align:right;padding:7px 11px 0 11px;height:20px;z-index:1;position:relative;color:#999}.shopbylook-prime-icon{display:inline-block;float:left}.shopbylook-price-val{display:inline-block;float:right}.shopbylook-ratings-hide{display:none!important}.shopbylook-btf-item-image{display:block;width:auto;margin:9px 0 6px 0;padding:0 15px}.shopbylook-btf-image-container{height:150px;width:100%}.shopbylook-btf-item-hr{margin:0;border-color:#f2f2f2}.shopbylook-btf-item-bottom{height:50px;text-align:center;overflow:hidden}.shopbylook-btf-item-dislike{padding:3px 3px 3px 7px;cursor:pointer;display:inline-block;margin-right:10px;opacity:.7}.shopbylook-btf-item-like{padding:3px 7px 3px 3px;cursor:pointer;display:inline-block;opacity:.7}.shopbylook-btf-item-dislike:hover,.shopbylook-btf-item-like:hover{opacity:1}.shopbylook-btf-item-button-mobile{opacity:1}.shopbylook-btf-item-explore-more{position:absolute;background:#fff;height:237px;z-index:2;text-align:center;display:table!important;right:0;bottom:0;font-size:18px}.shopbylook-btf-item-explore-more>span{vertical-align:middle;display:table-cell}.shopbylook-btf-item-box-flip{-moz-transform:rotateY(180deg);-o-transform:rotateY(180deg);-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}.shopbylook-btf-item-box-flip .shopbylook-btf-item-box-inner{-moz-transform:rotateY(180deg);-o-transform:rotateY(180deg);-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}.shopbylook-btf-mobile-section{max-height:711px;min-height:237px;overflow:hidden;position:relative;-webkit-transition:height .2s;-moz-transition:height .2s;-o-transition:height .2s;transition:height .2s}.shopbylook-btf-mobile-section-1{max-height:1422px}.shopbylook-btf-mobile-section-2{max-height:2133px}.shopbylook-btf-mobile-row{margin-bottom:15px;clear:both}.shopbylook-btf-mobile-title-row{font-size:18px;font-weight:700;line-height:25px;display:table;width:100%;padding:1.3rem 0}.shopbylook-btf-mobile-title-row span{display:table-cell;vertical-align:middle}.shopbylook-btf-mobile-expand-row{height:45px;font-size:15px;line-height:20px;display:table;padding:0 15px;color:#0066C0;border:1px solid #f2f2f2}.shopbylook-btf-mobile-expand-inner{display:table-cell;vertical-align:middle}.shopbylook-btf-mobile-expand-inner i{margin-top:5px}.shopbylook-btf-mobile-show-more{cursor:pointer}.shopbylook-btf-mobile-explore-sbl{display:none}.shopbylook-btf-mobile-hr-bottom{margin-bottom:0!important}.shopbylook-prime-icon{position:relative;top:2px;visibility:hidden}.shopbylook-prime .shopbylook-prime-icon{visibility:visible}.shopbylook-btf-remove-anchor .mirai-btf-shopbylook-header{display:block}.shopbylook-btf-remove-anchor .shopbylook-btf-desktop-left-section{display:none}.shopbylook-btf-remove-anchor .a-fixed-left-grid-inner{padding-left:0!important}#shopbylook-btf-items-section{clear:both}@media screen and (max-width:520px){div.shopbylook-btf-item-box{width:50%}div.shopbylook-btf-mobile-section{max-height:711px}div.shopbylook-btf-mobile-section-1{max-height:1422px}div.shopbylook-btf-mobile-section-2{max-height:2133px}}@media screen and (min-width:521px){div.shopbylook-btf-item-box{width:33.3333%}div.shopbylook-btf-mobile-section{max-height:474px}div.shopbylook-btf-mobile-section-1{max-height:948px}div.shopbylook-btf-mobile-section-2{max-height:1422px}}.shopbylook-btf-desktop-left-section{height:524px!important}.shopbylook-btf-desktop-right-section{height:524px!important}.shopbylook-btf-desktop-right-top-row{height:50px;border:1px solid #f2f2f2}.sbl-refinement-item{display:block;float:left;margin:15px}.refinement-row{white-space:nowrap;margin:5px 0}#sbl-refinement-review input[type=checkbox]{display:none}input[type=checkbox]:checked~.a-checkbox-label>.sbl-review-item{font-weight:700}.sbl-refinement-button{color:#000}.shopbylook-btf-loading-section{display:none;position:absolute;margin:0;left:0;top:0;width:100%;height:100%;z-index:10}.shopbylook-btf-loading-section .shopbylook-btf-loading-row{position:absolute;left:0;top:50px;right:0;bottom:0;z-index:20;height:474px;width:calc(100% - 4px);background-color:#fff;filter:opacity(75%)}.shopbylook-btf-no-results-section{display:none;position:absolute;margin:50px 0 0 0;left:0;top:0;width:100%;height:100%;z-index:10}.shopbylook-btf-no-results-section .shopbylook-btf-no-results-row{position:absolute;left:0;top:0;right:0;bottom:0;z-index:20;height:474px;width:calc(100% - 4px);background-color:#fff}.shopbylook-btf-no-results-section .shopbylook-btf-no-results-row .shopbylook-btf-no-results-title-wrapper{width:100%;height:100%;display:table}.shopbylook-btf-no-results-section .shopbylook-btf-no-results-row .shopbylook-btf-no-results-title-wrapper .shopbylook-btf-no-results-title{margin:0 auto;display:table-cell;vertical-align:middle;text-align:center}.shopbylook-btf-desktop-explore-more{display:block;float:right;margin:15px}.shopbylook-btf-clickable{cursor:pointer}.shopbylook-arrow-button{width:40px;height:80px;cursor:pointer;background:#fff;opacity:.6;-webkit-box-shadow:-2px 1px 10px 2px rgba(0,0,0,.2);-moz-box-shadow:-2px 1px 10px 2px rgba(0,0,0,.2);box-shadow:-2px 1px 20px 2px rgba(0,0,0,.2)}.shopbylook-arrow-button:hover{opacity:1}.sbl-show-next-section{display:block;position:absolute;right:0;top:262px;margin-top:-15px;z-index:9}.sbl-show-next-section .sbl-arrow-right{border:solid #000;border-width:0 2px 2px 0;display:inline-block;padding:10px;transform:rotate(-45deg);-webkit-transform:rotate(-45deg);margin:29px 0 0 4px}.sbl-show-prev-section{position:absolute;left:0;top:262px;margin-top:-15px;z-index:9}.sbl-show-prev-section #shopbylook-btf-prev-button{display:none}.sbl-show-prev-section .sbl-arrow-left{border:solid #000;border-width:0 0 2px 2px;display:inline-block;padding:10px;transform:rotate(45deg);-webkit-transform:rotate(45deg);margin:29px 0 0 15px}.sbl-btf-desktop-top-v-line{display:inline-block;float:right;margin:8px 0;height:32px;border:1px solid #f2f2f2}.sbl-btf-desktop-pagination{float:right;display:inline-block;margin:15px 30px}@media screen and (min-width:521px){div#dp:not(.burj-body) div.shopbylook-btf-item-box{width:33.33333%}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-2 .shopbylook-btf-item-box:nth-child(-n+6){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-3 .shopbylook-btf-item-box:nth-child(-n+12){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-4 .shopbylook-btf-item-box:nth-child(-n+18){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-5 .shopbylook-btf-item-box:nth-child(-n+24){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-6 .shopbylook-btf-item-box:nth-child(-n+30){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-7 .shopbylook-btf-item-box:nth-child(-n+36){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-8 .shopbylook-btf-item-box:nth-child(-n+42){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-9 .shopbylook-btf-item-box:nth-child(-n+48){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box:nth-last-child(-n+6){display:inline-block!important}}@media screen and (min-width:1200px){div#dp:not(.burj-body) div.shopbylook-btf-item-box{width:25%}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-2 .shopbylook-btf-item-box:nth-child(-n+8){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-3 .shopbylook-btf-item-box:nth-child(-n+16){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-4 .shopbylook-btf-item-box:nth-child(-n+24){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-5 .shopbylook-btf-item-box:nth-child(-n+32){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-6 .shopbylook-btf-item-box:nth-child(-n+40){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-7 .shopbylook-btf-item-box:nth-child(-n+48){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-8 .shopbylook-btf-item-box:nth-child(-n+56){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-9 .shopbylook-btf-item-box:nth-child(-n+64){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box:nth-last-child(-n+8){display:inline-block!important}}@media screen and (min-width:1400px){div#dp:not(.burj-body) div.shopbylook-btf-item-box{width:20%}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-2 .shopbylook-btf-item-box:nth-child(-n+10){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-3 .shopbylook-btf-item-box:nth-child(-n+20){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-4 .shopbylook-btf-item-box:nth-child(-n+30){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-5 .shopbylook-btf-item-box:nth-child(-n+40){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-6 .shopbylook-btf-item-box:nth-child(-n+50){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-7 .shopbylook-btf-item-box:nth-child(-n+60){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-8 .shopbylook-btf-item-box:nth-child(-n+70){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-9 .shopbylook-btf-item-box:nth-child(-n+80){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box:nth-last-child(-n+10){display:inline-block!important}}@media screen and (min-width:1600px){div#dp:not(.burj-body) div.shopbylook-btf-item-box{width:16.66667%}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-2 .shopbylook-btf-item-box:nth-child(-n+12){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-3 .shopbylook-btf-item-box:nth-child(-n+24){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-4 .shopbylook-btf-item-box:nth-child(-n+36){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-5 .shopbylook-btf-item-box:nth-child(-n+48){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-6 .shopbylook-btf-item-box:nth-child(-n+60){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-7 .shopbylook-btf-item-box:nth-child(-n+72){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-8 .shopbylook-btf-item-box:nth-child(-n+84){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box:nth-last-child(-n+12){display:inline-block!important}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-9 .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-9 .shopbylook-btf-item-box:nth-last-child(-n+12){display:inline-block!important}}@media screen and (min-width:1950px){div#dp:not(.burj-body) div.shopbylook-btf-item-box{width:14.28571%}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-2 .shopbylook-btf-item-box:nth-child(-n+14){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-3 .shopbylook-btf-item-box:nth-child(-n+28){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-4 .shopbylook-btf-item-box:nth-child(-n+42){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-5 .shopbylook-btf-item-box:nth-child(-n+56){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-6 .shopbylook-btf-item-box:nth-child(-n+70){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-7 .shopbylook-btf-item-box:nth-child(-n+84){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box:nth-last-child(-n+14){display:inline-block!important}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-8 .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-8 .shopbylook-btf-item-box:nth-last-child(-n+14){display:inline-block!important}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-9 .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-9 .shopbylook-btf-item-box:nth-last-child(-n+14){display:inline-block!important}}@media screen and (min-width:2200px){div#dp:not(.burj-body) div.shopbylook-btf-item-box{width:12.5%}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-2 .shopbylook-btf-item-box:nth-child(-n+16){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-3 .shopbylook-btf-item-box:nth-child(-n+32){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-4 .shopbylook-btf-item-box:nth-child(-n+48){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-5 .shopbylook-btf-item-box:nth-child(-n+64){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-6 .shopbylook-btf-item-box:nth-child(-n+80){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box:nth-last-child(-n+16){display:inline-block!important}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-7 .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-7 .shopbylook-btf-item-box:nth-last-child(-n+16){display:inline-block!important}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-8 .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-8 .shopbylook-btf-item-box:nth-last-child(-n+16){display:inline-block!important}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-9 .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-9 .shopbylook-btf-item-box:nth-last-child(-n+16){display:inline-block!important}}@media screen and (min-width:2500px){div#dp:not(.burj-body) div.shopbylook-btf-item-box{width:11.11111%}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-2 .shopbylook-btf-item-box:nth-child(-n+18){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-3 .shopbylook-btf-item-box:nth-child(-n+36){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-4 .shopbylook-btf-item-box:nth-child(-n+54){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-5 .shopbylook-btf-item-box:nth-child(-n+72){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box:nth-last-child(-n+18){display:inline-block!important}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-6 .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-6 .shopbylook-btf-item-box:nth-last-child(-n+18){display:inline-block!important}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-7 .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-7 .shopbylook-btf-item-box:nth-last-child(-n+18){display:inline-block!important}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-8 .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-8 .shopbylook-btf-item-box:nth-last-child(-n+18){display:inline-block!important}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-9 .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-9 .shopbylook-btf-item-box:nth-last-child(-n+18){display:inline-block!important}}@media screen and (min-width:2700px){div#dp:not(.burj-body) div.shopbylook-btf-item-box{width:10%}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-2 .shopbylook-btf-item-box:nth-child(-n+20){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-3 .shopbylook-btf-item-box:nth-child(-n+40){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-4 .shopbylook-btf-item-box:nth-child(-n+60){display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box:nth-last-child(-n+20){display:inline-block!important}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-5 .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-5 .shopbylook-btf-item-box:nth-last-child(-n+20){display:inline-block!important}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-6 .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-6 .shopbylook-btf-item-box:nth-last-child(-n+20){display:inline-block!important}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-7 .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-7 .shopbylook-btf-item-box:nth-last-child(-n+20){display:inline-block!important}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-8 .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-8 .shopbylook-btf-item-box:nth-last-child(-n+20){display:inline-block!important}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-9 .shopbylook-btf-item-box{display:none}div#dp:not(.burj-body) div.shopbylook-btf-items-section-p-9 .shopbylook-btf-item-box:nth-last-child(-n+20){display:inline-block!important}}.shopbylook-btf-item-ratings-row{margin:4px 0;height:20px;z-index:1}.shopbylook-btf-item-ratings-row .shopbylook-btf-item-ratings{margin:0 auto;display:none}@keyframes fade{.shopbylook-btf-item-ratings-row .shopbylook-btf-item-ratings 0%{opacity:0}.shopbylook-btf-item-ratings-row .shopbylook-btf-item-ratings 100%{opacity:1}}.shopbylook-btf-item-box:hover .shopbylook-btf-item-ratings{display:block}.shopbylook-btf-image-container{height:125px!important}.shopbylook-btf-mobile-refinement-row{margin:0 0 1.3rem 0;overflow-x:auto;overflow-y:visible;width:100%;display:flex;white-space:nowrap}.sbl-sheet-hidden{display:none!important;visibility:hidden!important}.sbl-refinement-item-mobile{display:block;float:left;margin:10px 20px 10px 0;border:1px solid #000;padding:10px}.sbl-sheet{margin:25px}.sbl-refinement-btn-apply{bottom:20px;left:20px;right:20px;position:absolute}.shopbylook-btf-items-section-row{border:1px solid #f2f2f2;position:relative}.shopbylook-btf-loading-section-mobile{display:none;position:absolute;margin:0;left:0;top:0;width:100%;height:100%;z-index:10}.shopbylook-btf-loading-section-mobile .shopbylook-btf-loading-row{position:absolute;left:0;top:0;right:0;bottom:45px;z-index:20;width:100%;background-color:#fff;filter:opacity(75%)}.shopbylook-btf-no-results-section-mobile{display:none;position:absolute;margin:0;left:0;top:0;width:100%;height:100%;z-index:10}.shopbylook-btf-no-results-section-mobile .shopbylook-btf-no-results-row{position:absolute;left:0;top:0;right:0;bottom:45px;z-index:20;width:100%;background-color:#fff}.shopbylook-btf-no-results-section-mobile .shopbylook-btf-no-results-row .shopbylook-btf-no-results-title-wrapper{width:100%;height:100%;display:table}.shopbylook-btf-no-results-section-mobile .shopbylook-btf-no-results-row .shopbylook-btf-no-results-title-wrapper .shopbylook-btf-no-results-title{margin:0 auto;display:table-cell;vertical-align:middle;text-align:center}.sbl-refinement-button{line-height:16px}.refinement-row{margin:0}.review-checkbox input[type=checkbox]{display:none}.sbl-refinement-btn-clear{color:#000;background-color:transparent;text-overflow:ellipsis;white-space:nowrap}.sbl-refinement-item-mobile{margin:10px 10px 10px 0;padding:10px 5px}.sbl-buttons{bottom:0;left:0;right:0;position:absolute;background-color:#f2f2f2}.sbl-refinement-mobile-btn{text-transform:uppercase;border-radius:0;width:100%;border-color:transparent;height:40px;line-height:18px;font-size:15px}.sbl-refinement-mobile-btn-row{padding:10px 21px;width:100%;max-width:100%;overflow:hidden}.sbl-refinement-mobile-clear-row{padding-top:5px;padding-bottom:5px}.sbl-refinement-mobile-apply-row{padding-bottom:5px}.sbl-refinement-btn-apply{background-color:#000;color:#FFF;bottom:auto;left:auto;right:auto;position:relative}.sbl-refinement-expander{margin-top:3px;background-color:#f2f2f2}.sbl-refinement-expander-header{width:100%;background-color:#fff!important}.sbl-refinement-expander-header-content{margin:0;background-color:#fff}.sbl-refinement-expander-header-text{line-height:18px;font-size:15px;color:#000}.sbl-refinement-expander-content{margin:0;background-color:#fff;padding:0 0 1.2rem 1.7rem;transition:height 350s ease-out 0s;-webkit-transition:height 350ms ease-out 0s}.sbl-refinement-trigger-content{color:#0066C0;line-height:19px;font-size:13px;float:right;visibility:visible!important;padding-right:2px}.sbl-mobile-filters{height:100%;background-color:#f2f2f2;width:100%;bottom:110px;margin:0;padding-bottom:3px}.sbl-mobile-filters-top{background-color:#fff;bottom:60px!important}.sbl-mobile-filters-scroller{background-color:transparent}.sbl-refinement-icon-text{width:100%;float:right;padding-right:2px}.shopbylook-btf-mobile-refinement-row{margin:0 0 1rem 0}.sbl-sheet{background-color:#f2f2f2;padding:0;margin:0}.sbl-refinements-bn-list-mobile{padding:10px 21px}@media screen and (min-width:521px){.burj-body div.shopbylook-btf-item-box{width:33.33333%}.burj-body div.shopbylook-btf-items-section-p-2 .shopbylook-btf-item-box:nth-child(-n+6){display:none}.burj-body div.shopbylook-btf-items-section-p-3 .shopbylook-btf-item-box:nth-child(-n+12){display:none}.burj-body div.shopbylook-btf-items-section-p-4 .shopbylook-btf-item-box:nth-child(-n+18){display:none}.burj-body div.shopbylook-btf-items-section-p-5 .shopbylook-btf-item-box:nth-child(-n+24){display:none}.burj-body div.shopbylook-btf-items-section-p-6 .shopbylook-btf-item-box:nth-child(-n+30){display:none}.burj-body div.shopbylook-btf-items-section-p-7 .shopbylook-btf-item-box:nth-child(-n+36){display:none}.burj-body div.shopbylook-btf-items-section-p-8 .shopbylook-btf-item-box:nth-child(-n+42){display:none}.burj-body div.shopbylook-btf-items-section-p-9 .shopbylook-btf-item-box:nth-child(-n+48){display:none}.burj-body div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box{display:none}.burj-body div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box:nth-last-child(-n+6){display:inline-block!important}}@media screen and (min-width:1200px){.burj-body div.shopbylook-btf-item-box{width:25%}.burj-body div.shopbylook-btf-items-section-p-2 .shopbylook-btf-item-box:nth-child(-n+8){display:none}.burj-body div.shopbylook-btf-items-section-p-3 .shopbylook-btf-item-box:nth-child(-n+16){display:none}.burj-body div.shopbylook-btf-items-section-p-4 .shopbylook-btf-item-box:nth-child(-n+24){display:none}.burj-body div.shopbylook-btf-items-section-p-5 .shopbylook-btf-item-box:nth-child(-n+32){display:none}.burj-body div.shopbylook-btf-items-section-p-6 .shopbylook-btf-item-box:nth-child(-n+40){display:none}.burj-body div.shopbylook-btf-items-section-p-7 .shopbylook-btf-item-box:nth-child(-n+48){display:none}.burj-body div.shopbylook-btf-items-section-p-8 .shopbylook-btf-item-box:nth-child(-n+56){display:none}.burj-body div.shopbylook-btf-items-section-p-9 .shopbylook-btf-item-box:nth-child(-n+64){display:none}.burj-body div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box{display:none}.burj-body div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box:nth-last-child(-n+8){display:inline-block!important}}@media screen and (min-width:1400px){.burj-body div.shopbylook-btf-item-box{width:20%}.burj-body div.shopbylook-btf-items-section-p-2 .shopbylook-btf-item-box:nth-child(-n+10){display:none}.burj-body div.shopbylook-btf-items-section-p-3 .shopbylook-btf-item-box:nth-child(-n+20){display:none}.burj-body div.shopbylook-btf-items-section-p-4 .shopbylook-btf-item-box:nth-child(-n+30){display:none}.burj-body div.shopbylook-btf-items-section-p-5 .shopbylook-btf-item-box:nth-child(-n+40){display:none}.burj-body div.shopbylook-btf-items-section-p-6 .shopbylook-btf-item-box:nth-child(-n+50){display:none}.burj-body div.shopbylook-btf-items-section-p-7 .shopbylook-btf-item-box:nth-child(-n+60){display:none}.burj-body div.shopbylook-btf-items-section-p-8 .shopbylook-btf-item-box:nth-child(-n+70){display:none}.burj-body div.shopbylook-btf-items-section-p-9 .shopbylook-btf-item-box:nth-child(-n+80){display:none}.burj-body div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box{display:none}.burj-body div.shopbylook-btf-items-section-p-last .shopbylook-btf-item-box:nth-last-child(-n+10){display:inline-block!important}}\n#value-pick{overflow:hidden}#value-pick #value-pick-title-row{overflow:hidden;word-break:keep-all;white-space:nowrap;text-overflow:ellipsis}#value-pick #value-pick-image{display:block;margin-left:auto;margin-right:auto}#valuePick_feature_div #value-pick-test-divider{display:none}#valuePick_feature_div #value-pick-phase-1-divider{display:none}#valuePick_feature_div #value-pick-pb-box{border-width:20px;margin-left:-18px;margin-bottom:-10px;border-radius:unset;border-color:#e7e7e7;padding:6px 2px}\n#dash-preregistration-button-continue{margin-left:16px}.oft-drs-prereg-slot-info-row[data-slotcount='2']{margin:auto!important;width:100%;padding-left:20px;display:flex;justify-content:center}.oft-drs-prereg-slot-info-row[data-slotcount='3']{margin:auto!important;width:100%;padding-left:20px;display:flex;justify-content:center}.oft-drs-prereg-slot-info-row[data-slotcount='4']{margin:auto!important;width:100%;padding-left:20px;display:flex;justify-content:center}.oft-drs-prereg-slot-info-row[data-slotcount='4'] .oft-drs-prereg-slot-info{width:25%!important;margin-right:20px!important;float:left;min-height:100%!important;white-space:normal;letter-spacing:normal;padding:10px}.dash-preregistration-price-per-unit-line{white-space:nowrap}.oft-dash-prereg-consumable-price{height:38px}.oft-drs-prereg-consumable{border:2px solid #EFEFEF;padding:10px;margin-bottom:10px}.oft-drs-prereg-consumable-image-wrapper{height:120px;width:120px;margin:10px auto;text-align:center}.oft-drs-prereg-consumable-image-wrapper .oft-drs-prereg-consumable-image{max-width:100%;max-height:100%;position:relative;top:50%;left:50%;transform:translate(-50%,-50%)}.oft-drs-prereg-consumable-description{margin-bottom:4px}.oft-drs-prereg-consumable-price{margin-top:4px}.oft-drs-prereg-consumable-title{height:57px;overflow:hidden}.oft-drs-prereg-consumable-title[data-longtitle=true]:before{height:57px;content:\"\";float:left;width:5px}.oft-drs-prereg-consumable-title[data-longtitle=true]>:first-child{float:right;width:100%;margin-left:-5px}.oft-drs-prereg-consumable-title[data-longtitle=true]:after{content:\"\\02026\";font-size:13px;line-height:19px;clear:unset;box-sizing:content-box;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;float:right;position:relative;top:-20px;left:100%;width:3em;margin-left:-3em;padding-right:5px;text-align:right;background-size:100% 100%;background-image:url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAgAAAAABCAMAAACfZeZEAAAABGdBTUEAALGPC/xhBQAAAwBQTFRF////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////AAAA////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////wDWRdwAAAP90Uk5TgsRjMZXhS30YrvDUP3Emow1YibnM9+ggOZxrBtpRRo94gxItwLOoX/vsHdA2yGgL8+TdKUK8VFufmHSGgAQWJNc9tk+rb5KMCA8aM0iwpWV6dwP9+fXuFerm3yMs0jDOysY8wr5FTldeoWKabgEJ8RATG+IeIdsn2NUqLjQ3OgBDumC3SbRMsVKsValZplydZpZpbJOQco2KdYeEe36BDAL8/vgHBfr2CvTyDu8R7esU6RcZ5ecc4+Af3iLcJSjZ1ivT0S/PMs3LNck4x8U7wz7Bv0G9RLtHuEq1TbJQr1OtVqqnWqRdoqBhnmSbZ5mXapRtcJGOc4t2eYiFfH9AS7qYlgAAARlJREFUKM9jqK9fEGS7VNrDI2+F/nyB1Z4Fa5UKN4TbbeLY7FW0Tatkp3jp7mj7vXzl+4yrDsYoVx+JYz7mXXNSp/a0RN25JMcLPP8umzRcTZW77tNyk63tdprzXdmO+2ZdD9MFe56Y9z3LUG96mcX02n/CW71JH6Qmf8px/cw77ZvVzB+BCj8D5vxhn/vXZh6D4uzf1rN+Cc347j79q/zUL25TPrJMfG/5LvuNZP8rixeZz/mf+vU+Vut+5NL5gPOeb/sd1dZbTs03hBuvmV5JuaRyMfk849nEM7qnEk6IHI8/qn049hB35QGHiv0yZXuMdkXtYC3ebrglcqvYxoj1muvC1nDlrzJYGbpcdHHIMo2FwYv+j3QAAOBSfkZYITwUAAAAAElFTkSuQmCC);background:-webkit-gradient(linear,left top,right top,from(rgba(255,255,255,0)),to(white),color-stop(50%,#fff));background:-moz-linear-gradient(to right,rgba(255,255,255,0),#fff 50%,#fff);background:-o-linear-gradient(to right,rgba(255,255,255,0),#fff 50%,#fff);background:-ms-linear-gradient(to right,rgba(255,255,255,0),#fff 50%,#fff);background:linear-gradient(to right,rgba(255,255,255,0),#fff 50%,#fff)}.oft-drs-prereg-slot-info{width:30%!important;margin-right:20px!important;float:left;min-height:100%!important;white-space:normal;letter-spacing:normal;padding:10px}.oft-drs-prereg-slot-name{margin-bottom:10px}.oft-drs-prereg-slot-checkbox{margin-bottom:0}.oft-drs-prereg-change-product-container{text-align:center}.oft-drs-prereg-summary{margin:auto}.oft-drs-prereg-disabled{opacity:.5;pointer-events:none}.oft-drs-prereg-slot-see-product-details{position:absolute;bottom:15px}.oft-dash-prereg-consumable-per-order{white-space:nowrap}.oft-dash-prereg-consumable-rating{padding-bottom:15px}.oft-dash-prereg-header-logo-img{vertical-align:middle;padding-right:15px;border-right:solid #000 1px}.oft-dash-prereg-header-logo-text{vertical-align:middle;padding-left:15px}.oft-dash-prereg-header-title-text{margin-bottom:4px}.oft-dash-prereg-header-title .oft-dash-prereg-header-subtitle-text{margin-bottom:10px}#dash-preregistration-button-continue{margin-left:16px}.oft-dash-prereg-header-title{text-align:center;padding-top:10px}.oft-dash-prereg-consumable-box{padding:10px;border:2px solid #EFEFEF;position:relative}.oft-dash-prereg-consumable-box:hover{border:2px solid #F5B45F;cursor:pointer}.oft-dash-prereg-consumable-selected{border:2px solid #FF8F00!important}.oft-dash-prereg-consumable-image-wrapper{height:120px;width:120px;margin:10px auto;text-align:center}.oft-dash-prereg-consumable-image{max-width:100%;max-height:100%;position:relative;top:50%;left:50%;transform:translate(-50%,-50%)}.oft-dash-prereg-consumable-badge{position:absolute;left:0;top:0}.oft-dash-prereg-consumable-per-order{color:#6C7778}.oft-drs-prereg-consumable-per-order{white-space:nowrap}.oft-dash-prereg-consumable-price{margin-top:10px}.oft-dash-prereg-hide{visibility:hidden;display:none}.oft-dash-prereg-drs-interstitial-content{padding:15% 0}.oft-dash-prereg-header-title .oft-dash-prereg-header-title-text{margin-left:0;margin-right:0}\n.quantity-picker{position:relative;margin-top:5px}.quantity-picker .quantity-input-box-layer{border:1px solid #BCC0C3;border-radius:4px;height:34px}.quantity-picker.open .quantity-input-box-layer{border-radius:4px 4px 0 0}.quantity-picker .quantity-text-input-disabled{cursor:not-allowed}.quantity-picker .quantity-text-input{width:100%;border:3px solid #fff;box-shadow:none}.quantity-picker .quantity-discount-table{display:none;position:absolute;background:#fff;border:0 1px 1px solid #BCC0C3;left:0;right:0;text-align:left;padding:0;margin:0;z-index:299;border-radius:0 0 4px 4px;box-shadow:0 2px 4px 0 rgba(0,0,0,.25)}.quantity-picker.open .quantity-discount-table{display:block}.quantity-picker .qdt-ul{margin-left:0}.quantity-picker .qdt-dropdown-option-no-saving-message{display:table;width:100%;line-height:40px;font-size:12px}.quantity-picker .qdt-dropdown-option-no-saving-message .option-tier{vertical-align:middle;display:table-cell;color:#000;width:5%;padding-left:9px;text-align:left}.quantity-picker .qdt-dropdown-option-no-saving-message .option-price{vertical-align:middle;color:#B02302;display:table-cell;width:95%;padding-right:8px;text-align:right;font-size:12px;margin-left:-10px;line-height:15px}.quantity-picker .qdt-dropdown-option-regular{display:table;width:100%}.quantity-picker .qdt-dropdown-option-regular .option-tier{vertical-align:middle;display:table-cell;color:#000;width:5%;padding-left:9px;text-align:left;line-height:40px;font-size:12px}.quantity-picker .qdt-dropdown-option-regular .option-price-and-saving-message{vertical-align:middle;color:#c00;display:table-cell;width:95%;padding-right:8px;float:right;text-align:right;margin-top:5px}.quantity-picker .qdt-dropdown-option-regular .option-price-and-saving-message .option-price{color:#B02302;font-size:12px;margin-left:-10px;line-height:15px}.quantity-picker .qdt-dropdown-option-regular .option-price-and-saving-message .option-saving-message{color:#767676;font-size:10px;font-style:italic;margin-left:-30px}.quantity-picker .qdt-dropdown-option-regular .option-price-and-saving-message .option-unlocked-saving-message-icon{display:inline-block;transform:rotate(45deg);height:8px;width:4px;border-bottom:1px solid #008A00;border-right:1px solid #008A00;margin-right:2px}.quantity-picker .qdt-dropdown-option-regular .option-price-and-saving-message .option-unlocked-saving-message{color:#008A00;font-size:10px;font-style:italic;margin-left:-30px;margin-top:-2px}.quantity-picker .qdt-dropdown-option-load-more{color:#696969;font-size:12px;vertical-align:middle;text-align:center;line-height:40px}.quantity-picker .qdt-dropdown-option-fetch-in-progress{color:#696969;font-style:italic;font-size:13px;vertical-align:middle;text-align:center;font-weight:lighter;line-height:25px}.quantity-picker .qdt-dropdown-option-fetch-in-progress .fetching-in-progress-img{vertical-align:middle}.quantity-picker .quantity-discount-table .qdt-dropdown-item{display:block;border:1px solid #BCC0C3;border-top:none}.quantity-picker .quantity-text-input:focus{background:#E8EAEB;border:3px solid #fff;box-shadow:none;font-weight:700;font-size:14px}.quantity-picker .quantity-discount-table .qdt-dropdown-item.qdt-active{border-color:#BCC0C3;border-left:3px solid #E55D16}.quantity-picker .quantity-discount-table .qdt-dropdown-item.qdt-inactive{border-color:#BCC0C3}.quantity-picker .quantity-discount-table .qdt-dropdown-item:hover{background-color:#F4F4F5;cursor:pointer}.quantity-picker .quantity-discount-table .qdt-dropdown-item.qdt-inactive:hover{background-color:#fff;color:inherit}.quantity-picker .quantity-discount-table .qdt-dropdown-item:last-child{border-radius:0 0 4px 4px}\n.uss-u-no-scroll{overflow:hidden!important}.uss-text-white-color{color:#fff}.uss-recommendations-message{text-align:center;overflow:hidden}.uss-recommendations-message>span{position:relative;display:inline-block;word-wrap:break-word}.uss-recommendations-message>span:after,.uss-recommendations-message>span:before{content:\"\";position:absolute;top:50%;width:100%;height:1px}.uss-recommendations-message>span:before{right:100%}.uss-recommendations-message>span:after{left:100%}.uss-o-promising-ui-element .ui-promise,.uss-o-promising-ui-element .ui-value{display:none}.uss-o-promising-ui-element.is-loading .ui-promise{display:block}.uss-o-promising-ui-element.is-resolved .ui-value{display:block}.uss-o-promising-ui-element-animation .ui-promise,.uss-o-promising-ui-element-animation .ui-value{display:none}.uss-o-promising-ui-element-animation.is-loading .ui-promise{display:block}.uss-o-promising-ui-element-animation.is-resolved .ui-value{display:none}.uss-l-default-layout{display:block;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;height:100%;overflow:auto}.uss-l-default-layout .loading-bar{background-color:#EAEDED}.uss-l-default-layout .uss-c-head{-webkit-box-flex:0;-webkit-flex:0 0 auto;-moz-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto;width:100%;overflow:auto;background-color:transparent;padding:0 20px}.uss-l-default-layout .uss-c-body{width:auto;height:auto;min-height:0;overflow:auto;-webkit-box-flex:1;-webkit-flex:1 1 auto;-moz-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.uss-l-default-layout .uss-c-body .uss-recommendations-message{margin-left:20px;margin-right:30px}.uss-l-default-layout .uss-c-body .uss-recommendations-message>span:before{background:#fff;margin-right:15px}.uss-l-default-layout .uss-c-body .uss-recommendations-message>span:after{background:#fff;margin-left:15px}.uss-l-default-layout .uss-widget{width:auto;margin-right:30px;margin-left:20px;background-color:#fff}.uss-l-default-layout .uss-recommendation-widget{padding:20px}.uss-l-default-layout .uss-primary-action-status-widget{margin-left:0;background-color:transparent;width:100%}.uss-l-default-layout .uss-loading-skeleton{position:absolute;width:100%}.uss-l-default-layout .uss-loading-skeleton .loading-message{text-align:center}.uss-l-default-layout .uss-loading-skeleton .asin-faceout-skeleton{background-color:#fff;margin-left:20px;margin-right:30px;padding:20px}.uss-l-default-layout .uss-loading-skeleton .asin-faceout-skeleton .image-skeleton{width:140px;height:140px;background-color:#EAEDED}.uss-l-default-layout .uss-loading-skeleton .asin-faceout-skeleton .loading-bar{height:20px}.uss-l-default-layout .uss-loading-skeleton .asin-faceout-skeleton .button-skeleton{width:100px;height:40px;background-color:#EAEDED}.uss-o-close-icon{cursor:pointer}.uss-o-close-icon:after,.uss-o-close-icon:before{position:absolute;content:' ';background-color:#fff;left:50%}.uss-o-close-icon:before{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-ms-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}.uss-o-close-icon:after{-webkit-transform:rotate(-45deg);-moz-transform:rotate(-45deg);-ms-transform:rotate(-45deg);-o-transform:rotate(-45deg);transform:rotate(-45deg)}.uss-o-close-icon-medium{width:20px;height:20px}.uss-o-close-icon-medium:after,.uss-o-close-icon-medium:before{height:26px;width:2.6px}.uss-o-light-box{position:fixed;top:0;left:0;width:100%;height:100%;background-color:#000;z-index:400;opacity:0}.uss-o-right-side-sheet{position:fixed;z-index:500}.uss-l-right-side-sheet{max-width:50%;min-width:680px;height:100%;top:0}.uss-l-right-side-sheet.is-open{right:0}.uss-l-right-side-sheet.is-close{right:-100%}.uss-l-right-side-sheet .uss-o-close-icon{position:fixed;top:20px}.uss-c-atc-status-msg .error-message,.uss-c-atc-status-msg .item-in-cart-message,.uss-c-atc-status-msg .loading-message,.uss-c-atc-status-msg .success-message{display:inline-block}.uss-c-atc-status-msg .atc-error-message,.uss-c-atc-status-msg .atc-item-in-cart-message,.uss-c-atc-status-msg .atc-success-message{display:none}.uss-c-atc-status-msg .ui-promise{display:inline-block;margin-bottom:0}.uss-c-atc-status-msg.is-resolved.atc-success .atc-success-message{display:inline-block}.uss-c-atc-status-msg.is-resolved.atc-error .atc-error-message{display:inline-block}.uss-c-atc-status-msg.is-resolved.item-in-cart .atc-item-in-cart-message{display:inline-block}.uss-c-sub-nav{position:relative;visibility:visible;display:block;max-height:0;opacity:0}.uss-c-sub-nav.is-hidden{visibility:hidden;height:0}.uss-c-sub-nav.is-hidden:after{left:0;top:0;width:0;height:0;position:absolute;content:\"\";background-color:#EAEDED;visibility:visible;margin-left:0}.uss-c-sub-nav .cart-btn{margin-right:10px}.uss-c-sub-nav .cart-btn,.uss-c-sub-nav .checkout-form{display:inline-block}.uss-c-sub-nav-transition{max-height:1000px;opacity:1;transition:max-height 50ms ease-out,opacity .4s ease-out 50ms}.uss-c-sub-nav-margin{margin-top:10px!important}.uss-c-shipping-details{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;justify-content:center;max-height:0;opacity:0}.uss-c-shipping-details .icon-placeholder{margin-right:4px;-webkit-box-flex:0;-webkit-flex:0 1 auto;-moz-box-flex:0;-ms-flex:0 1 auto;flex:0 1 auto}.uss-c-shipping-details .shipping-message-placeholder{-webkit-box-flex:0;-webkit-flex:0 1 auto;-moz-box-flex:0;-ms-flex:0 1 auto;flex:0 1 auto}.uss-c-shipping-details .shipping-message-placeholder .a-color-base{color:#fff!important}.uss-c-shipping-details .shipping-message-placeholder .a-color-price{color:#fff!important;font-weight:700}.uss-c-shipping-details .shipping-message-placeholder a,.uss-c-shipping-details .shipping-message-placeholder a:active,.uss-c-shipping-details .shipping-message-placeholder a:link,.uss-c-shipping-details .shipping-message-placeholder a:visited{color:#fff!important;text-decoration:underline}.uss-c-shipping-details .shipping-message-placeholder a:hover{color:#c45500!important}.uss-c-shipping-details.uss-c-shipping-details-transition{max-height:1000px;opacity:1;transition:max-height 50ms ease-out,opacity .2s ease-out 50ms}.uss-c-atc-status-widget .atc-acknowledgement-message{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:block}.uss-c-atc-status-widget .atc-acknowledgement-message .main-image{border:1px solid #EAEDED;border-radius:5px;display:inline-block;background-color:#EAEDED}.uss-c-atc-status-widget .atc-acknowledgement-message .success-tick-mark-placeholder{display:none}.uss-c-atc-status-widget .atc-acknowledgement-message .success-tick-mark-image{background-image:url(https://m.media-amazon.com/images/G/01/AUIClients/DetailPageUSSAssets-tick-animation-452f7cca54ff3500f0b34b429bb6914b6db98d47._V2_.gif);display:block;width:30px;height:30px;left:-15px;top:30px;position:absolute;z-index:1}.uss-c-atc-status-widget .atc-acknowledgement-message .error-tick-mark-placeholder{display:none}.uss-c-atc-status-widget .atc-acknowledgement-message .error-tick-mark-image{display:none;width:30px;height:27px;left:-15px;top:33px;position:absolute;z-index:1}.uss-l-atc-status-widget .atc-acknowledgement-message .main-image .ui-promise{height:100%}.uss-l-atc-status-widget .uss-c-cart-status-msg{max-height:0;opacity:0}.uss-l-atc-status-widget .uss-c-cart-status-msg-transition{max-height:1000px;opacity:1;transition:max-height 50ms ease-out,opacity .2s ease-out 50ms}.uss-l-atc-status-widget .icon-placeholder{height:0}.uss-l-atc-status-widget .atc-generic-error .error-message{display:inline-block}.atc-status-imb-widget{margin-top:0!important}.uss-c-uss-sheet-view{background-color:#EAEDED}.uss-c-uss-sheet-view-gredient{background-image:linear-gradient(#008296,#EAEDED)}.uss-l-uss-sheet-view{width:50%;max-width:680px}.uss-l-default-layout .uss-widget.uss-no-recommendation-widget{background-color:transparent}.uss-l-default-layout .uss-widget.uss-no-recommendation-widget .continue-shopping{font-weight:700;font-size:15px;color:#fff;text-decoration:underline}.uss-list-widget .uss-widget-body{margin-bottom:20px}.uss-list-widget h3.uss-widget-header{padding-bottom:0}.uss-list-widget .uss-widget-footer{padding:0;height:auto;cursor:pointer}.uss-widget-footer .uss-expander-icon-container{display:inline-block;position:relative}.uss-widget-footer .uss-see-more{font-weight:400;display:inline-block;margin-left:21px;color:#0066c0}.uss-asin-faceout .uss-atc-error,.uss-asin-faceout .uss-atc-spinner,.uss-asin-faceout .uss-atc-success,.uss-list-widget .uss-full-list-container,.uss-widget-footer .uss-see-less-text,.uss-widget-header .uss-sp-help-link .a-icon-popover{display:none}.uss-widget-body .uss-prime-badge{padding-left:1px}.uss-atc-success .uss-atc-success-icon{vertical-align:middle}.uss-atc-success .uss-atc-success-text{padding-left:1px}.uss-widget-body .uss-asin-faceout .uss-best-seller-badge{background-color:#E47911}.uss-widget-body .uss-asin-faceout .uss-best-seller-badge:before{border-bottom-color:#E47911}.uss-widget-body .uss-asin-faceout .uss-best-seller-badge:after{border-top-color:#E47911}.uss-atc-error .uss-detail-page-link{text-decoration:underline}.uss-widget-header .uss-sp-help-link a:hover{text-decoration:none}\n#paw-button-grid{position:relative}#paw-button-spinner{width:100%;height:100%;position:absolute;z-index:999}\n.p-prod-tile-large-box-sprite{background:url(//m.media-amazon.com/images/G/01/pantry/pantry-box-sprite-percent-large.png) no-repeat}.p-prod-tile-box-sprite{background:url(//m.media-amazon.com/images/G/01/pantry/pantry-box-sprite-percent-small.png) no-repeat}.p-prod-tile-box-info-messaging{font-size:15px}.p-prod-tile-box-display{height:60px;width:99px;position:relative;display:inline-block}.p-prod-tile-box-display.p-prod-tile-box-sprite .num-full-overlay{position:absolute;width:24px;color:#FFF;text-align:center;font-size:12px;left:0;top:27px}.p-prod-tile-box-display.p-prod-tile-box-sprite .percent-overlay{position:absolute;width:40px;text-align:center;font-size:13px;font-weight:bolder}.p-prod-tile-box-display.p-prod-tile-box-sprite.one-box .percent-overlay{left:26px}.p-prod-tile-box-display.p-prod-tile-box-sprite.one-box.v-low-fill{background-position:0 0}.p-prod-tile-box-display.p-prod-tile-box-sprite.one-box.v-low-fill .percent-overlay{top:35px}.p-prod-tile-box-display.p-prod-tile-box-sprite.one-box.low-fill{background-position:0 -64px}.p-prod-tile-box-display.p-prod-tile-box-sprite.one-box.low-fill .percent-overlay{top:35px}.p-prod-tile-box-display.p-prod-tile-box-sprite.one-box.med-fill{background-position:0 -129px}.p-prod-tile-box-display.p-prod-tile-box-sprite.one-box.med-fill .percent-overlay{top:30px}.p-prod-tile-box-display.p-prod-tile-box-sprite.one-box.hi-fill{background-position:0 -194px}.p-prod-tile-box-display.p-prod-tile-box-sprite.one-box.hi-fill .percent-overlay{top:26px}.p-prod-tile-box-display.p-prod-tile-box-sprite.one-box.more-hi-fill{background-position:0 -259px}.p-prod-tile-box-display.p-prod-tile-box-sprite.one-box.more-hi-fill .percent-overlay{top:20px}.p-prod-tile-box-display.p-prod-tile-box-sprite.one-box.v-hi-fill{background-position:0 -648px}.p-prod-tile-box-display.p-prod-tile-box-sprite.one-box.v-hi-fill .percent-overlay{top:19px;color:#D26F1F}.p-prod-tile-box-display.p-prod-tile-box-sprite.multi-box .percent-overlay{left:45px}.p-prod-tile-box-display.p-prod-tile-box-sprite.multi-box.v-low-fill{background-position:0 -323px}.p-prod-tile-box-display.p-prod-tile-box-sprite.multi-box.v-low-fill .percent-overlay{top:35px}.p-prod-tile-box-display.p-prod-tile-box-sprite.multi-box.low-fill{background-position:0 -388px}.p-prod-tile-box-display.p-prod-tile-box-sprite.multi-box.low-fill .percent-overlay{top:35px}.p-prod-tile-box-display.p-prod-tile-box-sprite.multi-box.med-fill{background-position:0 -453px}.p-prod-tile-box-display.p-prod-tile-box-sprite.multi-box.med-fill .percent-overlay{top:30px}.p-prod-tile-box-display.p-prod-tile-box-sprite.multi-box.hi-fill{background-position:0 -518px}.p-prod-tile-box-display.p-prod-tile-box-sprite.multi-box.hi-fill .percent-overlay{top:26px}.p-prod-tile-box-display.p-prod-tile-box-sprite.multi-box.more-hi-fill{background-position:0 -583px}.p-prod-tile-box-display.p-prod-tile-box-sprite.multi-box.more-hi-fill .percent-overlay{top:20px}.p-prod-tile-box-display.p-prod-tile-box-sprite.multi-box.v-hi-fill{background-position:0 -712px}.p-prod-tile-box-display.p-prod-tile-box-sprite.multi-box.v-hi-fill .percent-overlay{top:19px;color:#D26F1F}.p-prod-tile-box-display.p-prod-tile-large-box-sprite{position:relative;display:inline-block}.p-prod-tile-box-display.p-prod-tile-large-box-sprite .num-full-overlay{position:absolute;width:30px;color:#FFF;text-align:center;font-size:12px;left:1px;top:44px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite .percent-overlay{position:absolute;width:40px;text-align:center;font-size:13px;font-weight:bolder}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.one-box{height:95px;width:133px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.one-box .percent-overlay{left:54px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.one-box.v-low-fill{background-position:0 -1}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.one-box.v-low-fill .percent-overlay{top:69px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.one-box.low-fill{background-position:0 -99px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.one-box.low-fill .percent-overlay{top:65px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.one-box.med-fill{background-position:0 -199px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.one-box.med-fill .percent-overlay{top:53px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.one-box.hi-fill{background-position:0 -297px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.one-box.hi-fill .percent-overlay{top:37px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.one-box.more-hi-fill{background-position:0 -393px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.one-box.more-hi-fill .percent-overlay{top:37px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.one-box.v-hi-fill{background-position:0 -943px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.one-box.v-hi-fill .percent-overlay{top:31px;left:55px;color:#D26F1F}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.multi-box{height:88px;width:135px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.multi-box .percent-overlay{left:65px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.multi-box.v-low-fill{background-position:0 -493px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.multi-box.v-low-fill .percent-overlay{top:61px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.multi-box.low-fill{background-position:0 -584px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.multi-box.low-fill .percent-overlay{top:56px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.multi-box.med-fill{background-position:0 -673px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.multi-box.med-fill .percent-overlay{top:50px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.multi-box.hi-fill{background-position:0 -763px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.multi-box.hi-fill .percent-overlay{top:34px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.multi-box.more-hi-fill{background-position:0 -854px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.multi-box.more-hi-fill .percent-overlay{top:33px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.multi-box.v-hi-fill{background-position:0 -1040px}.p-prod-tile-box-display.p-prod-tile-large-box-sprite.multi-box.v-hi-fill .percent-overlay{top:30px;color:#D26F1F}\n.p-prod-tile.p-prod-tile-cdlist-executing{opacity:.6}.p-prod-tile.p-prod-tile-cdlist-executing .p-prod-tile-cdlist-actions{display:none}.p-prod-tile.p-prod-tile-cdlist-executing .p-prod-tile-cdlist-actions-spinner{display:block}.p-prod-tile.p-prod-tile-cdlist-undoing-delete{opacity:.6}.p-prod-tile.p-prod-tile-cdlist-undoing-delete .p-prod-tile-cdlist-action-message{display:none}.p-prod-tile.p-prod-tile-cdlist-undoing-delete .p-prod-tile-cdlist-undo-delete-spinner{display:block}.p-prod-tile.p-prod-tile-cdlist-delete-success{border-color:#8CCC7D}.p-prod-tile.p-prod-tile-cdlist-delete-success .p-prod-tile-inner .p-prod-tile-details,.p-prod-tile.p-prod-tile-cdlist-delete-success .p-prod-tile-inner .p-prod-tile-img-outer,.p-prod-tile.p-prod-tile-cdlist-delete-success .p-prod-tile-inner .p-prod-tile-selection-info{opacity:.2}.p-prod-tile.p-prod-tile-cdlist-delete-success .p-prod-tile-inner .p-prod-tile-buttons{display:none}.p-prod-tile.p-prod-tile-cdlist-delete-success .p-prod-tile-inner .p-prod-tile-messaging{display:block}.p-prod-tile.p-prod-tile-cdlist-delete-success .p-prod-tile-inner .p-prod-tile-messaging .p-prod-tile-cdlist-action-result{display:none}.p-prod-tile.p-prod-tile-cdlist-delete-success .p-prod-tile-inner .p-prod-tile-messaging .p-prod-tile-cdlist-delete-success{display:block}.p-prod-tile.p-prod-tile-cdlist-move-success{border-color:#8CCC7D}.p-prod-tile.p-prod-tile-cdlist-move-success .p-prod-tile-inner .p-prod-tile-details,.p-prod-tile.p-prod-tile-cdlist-move-success .p-prod-tile-inner .p-prod-tile-img-outer,.p-prod-tile.p-prod-tile-cdlist-move-success .p-prod-tile-inner .p-prod-tile-selection-info{opacity:.2}.p-prod-tile.p-prod-tile-cdlist-move-success .p-prod-tile-inner .p-prod-tile-buttons{display:none}.p-prod-tile.p-prod-tile-cdlist-move-success .p-prod-tile-inner .p-prod-tile-messaging{display:block}.p-prod-tile.p-prod-tile-cdlist-move-success .p-prod-tile-inner .p-prod-tile-messaging .p-prod-tile-cdlist-action-result{display:none}.p-prod-tile.p-prod-tile-cdlist-move-success .p-prod-tile-inner .p-prod-tile-messaging .p-prod-tile-cdlist-move-success{display:block}.p-prod-tile.p-prod-tile-cdlist-action-error{border-color:#c40000}.p-prod-tile.p-prod-tile-cdlist-action-error .p-prod-tile-inner .p-prod-tile-details,.p-prod-tile.p-prod-tile-cdlist-action-error .p-prod-tile-inner .p-prod-tile-img-outer,.p-prod-tile.p-prod-tile-cdlist-action-error .p-prod-tile-inner .p-prod-tile-selection-info{opacity:.2}.p-prod-tile.p-prod-tile-cdlist-action-error .p-prod-tile-inner .p-prod-tile-buttons{display:none}.p-prod-tile.p-prod-tile-cdlist-action-error .p-prod-tile-inner .p-prod-tile-messaging{display:block}.p-prod-tile.p-prod-tile-cdlist-action-error .p-prod-tile-inner .p-prod-tile-cdlist-action-result{display:none}.p-prod-tile.p-prod-tile-cdlist-action-error .p-prod-tile-inner .p-prod-tile-cdlist-action-error{display:block}.p-prod-tile-cdlist-action-result .p-prod-tile-cdlist-action-message{height:28px}.p-prod-tile-cdlist-action-result .p-prod-tile-cdlist-undo-delete-spinner{display:none;height:28px;text-align:center}.p-prod-tile-cdlist-action-result .p-prod-tile-cdlist-undo-delete-spinner .p-prod-tile-cdlist-undo-delete-spinner-img{display:inline-block}.p-prod-tile-cdlist-action-result .p-prod-tile-cdlist-action-status-success{background-color:#E8F9E2}.p-prod-tile-cdlist-action-result .p-prod-tile-cdlist-action-status-error{background-color:#fcf4f4}.p-prod-tile-cdlist-action-result .p-prod-tile-cdlist-action-status{padding:10px;font-weight:700;margin-bottom:13px!important}.p-prod-tile-cdlist-actions{height:28px}.p-prod-tile-cdlist-actions .a-button-text{text-align:center!important}.p-prod-tile-cdlist-actions-spinner{display:none;height:28px;text-align:center}.p-prod-tile-cdlist-actions-spinner .p-prod-tile-cdlist-actions-spinner-img{display:inline-block}.a-no-js .p-prod-tile-cdlist-move{display:none!important}.a-no-js .p-prod-tile-cdlist-delete{width:100%!important}\n.p-prod-tile{border:solid 1px #EEE;position:relative}.p-prod-tile.p-prod-tile-rosie{border:none}.p-prod-tile.p-prod-tile-rosie-large{border:none}.p-prod-tile .p-prod-tile-inner{height:100%;width:100%}.p-prod-tile .p-prod-tile-selection-info{overflow-y:hidden;position:absolute;z-index:22;height:25px;padding:5px 0 0 5px}.p-prod-tile .p-prod-tile-selection-info .p-prod-tile-in-box{background-color:#DEDEDE;border-right:solid 1px #DEDEDE;-moz-border-radius:2px 0 0 2px;-webkit-border-radius:2px 0 0 2px;border-radius:2px 0 0 2px;float:right;padding:0 5px 0 6px;height:18px}.p-prod-tile .p-prod-tile-selection-info .p-prod-tile-in-box .p-prod-tile-in-box-inner{vertical-align:text-top}.p-prod-tile .p-prod-tile-img-outer{position:relative}.p-prod-tile .p-prod-tile-img-outer .p-prod-tile-img{display:block;margin-left:auto;margin-right:auto}.p-prod-tile .p-prod-tile-rosie-quick-look-button{display:none;position:absolute;top:70%;left:25%;width:50%}.p-prod-tile .p-prod-tile-details .p-prod-tile-title{overflow-y:hidden}.p-prod-tile .p-prod-tile-hide-overflow{overflow:hidden;white-space:nowrap}.p-prod-tile .p-prod-tile-badge{vertical-align:baseline}.p-prod-tile .p-prod-tile-buttons{position:absolute;display:block;bottom:0;background-color:#F8F8F8;border-top:solid 1px #EEE}.p-prod-tile .p-prod-tile-buttons form{margin-bottom:0}.p-prod-tile .p-prod-tile-buttons .p-prod-tile-atc-spinner{display:none;text-align:center}.p-prod-tile .p-prod-tile-buttons .p-prod-tile-atc-spinner .p-prod-tile-atc-spinner-img{display:inline-block}.p-prod-tile .p-prod-tile-inline-upsell{background-color:#EAEDED;position:absolute;display:none;top:0;bottom:0;z-index:21;text-align:center}.p-prod-tile .p-prod-tile-inline-upsell .p-prod-tile-info{background-color:#FFF;padding:0 6px}.p-prod-tile .p-prod-tile-inline-upsell .p-prod-tile-info .p-prod-tile-img-padding{padding-top:6px}.p-prod-tile .p-prod-tile-inline-upsell .p-prod-tile-info .p-prod-tile-img-padding .p-prod-tile-img-size{height:77px}.p-prod-tile .p-prod-tile-inline-upsell .p-prod-tile-info .p-prod-tile-item-name{height:36px;overflow-y:hidden}.p-prod-tile .p-prod-tile-inline-upsell .p-prod-tile-info .p-prod-tile-price-add-padding{padding-bottom:10px;padding-right:0}.p-prod-tile .p-prod-tile-inline-upsell .p-prod-tile-recs{position:absolute;left:0;right:0;padding:0 6px}.p-prod-tile .p-prod-tile-inline-upsell .p-prod-tile-recs .p-prod-tile-headline-padding{display:block;padding:6px 0}.p-prod-tile .p-prod-tile-inline-upsell .p-prod-tile-recs .p-prod-tile-rec{background-color:#FFF}.p-prod-tile .p-prod-tile-inline-upsell .p-prod-tile-recs .p-prod-tile-rec .p-prod-tile-rec-padding{display:block;padding:4px;height:26px;width:151px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.p-prod-tile .p-prod-tile-rosie-buttons{position:absolute;display:block;bottom:0;background-color:transparent;border-top:none}.p-prod-tile .p-prod-tile-rosie-messaging{background-color:transparent;bottom:145px}.p-prod-tile .p-prod-tile-rosie-success{background-color:#fff;opacity:.85}.p-prod-tile .p-prod-tile-rosie-price{font-weight:700}.p-prod-tile.p-prod-tile-size-large{max-width:360px}.p-prod-tile.p-prod-tile-size-large .p-prod-tile-details{padding:0 25px}.p-prod-tile.p-prod-tile-size-large .p-prod-tile-details .p-prod-tile-title{max-height:36px}.p-prod-tile.p-prod-tile-size-large .p-prod-tile-buttons{padding:14px 15px 0}.p-prod-tile.p-prod-tile-size-large .p-prod-tile-buttons .p-prod-tile-atc .p-prod-tile-atc-spinner{margin-bottom:14px}.p-prod-tile.p-prod-tile-size-mini .p-prod-tile-details{padding:0 10px}.p-prod-tile.p-prod-tile-size-mini .p-prod-tile-details .p-prod-tile-title{max-height:36px}.p-prod-tile.p-prod-tile-size-mini .p-prod-tile-details .p-prod-tile-promo .p-prod-tile-promo-subtitle{line-height:.9}.p-prod-tile.p-prod-tile-size-mini .p-prod-tile-details .p-prod-tile-promo .p-prod-tile-promo-subtitle .p-prod-tile-promo-subtitle-text{line-height:1!important}.p-prod-tile.p-prod-tile-size-mini .p-prod-tile-buttons{padding:14px 10px 0}.p-prod-tile.p-prod-tile-size-mini .p-prod-tile-buttons .p-prod-tile-atc .p-prod-tile-quantity{width:54px}.p-prod-tile.p-prod-tile-size-mini .p-prod-tile-buttons .p-prod-tile-atc .p-prod-tile-atc-spinner{margin-bottom:8px}.p-prod-tile.p-prod-tile-size-rosie-mini .p-prod-tile-details{padding:0 10px}.p-prod-tile.p-prod-tile-size-rosie-mini .p-prod-tile-details .p-prod-tile-title{max-height:36px}.p-prod-tile.p-prod-tile-size-rosie-mini .p-prod-tile-buttons{padding:14px 10px 0}.p-prod-tile.p-prod-tile-size-rosie-mini .p-prod-tile-buttons .p-prod-tile-atc .p-prod-tile-atc-spinner{margin-bottom:8px}.a-link-normal.p-prod-tile-mini-dp-title{font-size:x-large;color:#000}.p-prod-tile-mini-dp-title-section{font-size:24px;max-height:80px;line-height:110%;overflow:hidden;padding-right:40px}.p-prod-tile-mini-dp-brand{position:absolute;font-size:17px;color:#767676}.p-prod-tile-mini-dp-details{padding-left:40px;padding-bottom:40px}.p-prod-tile-mini-dp-price{font-size:large}.p-prod-tile-mini-dp-ppu{color:#767676}.p-prod-tile-ghost-tile{display:none!important}.p-prod-tile-carousel-video-tile{min-width:375px!important;min-height:360px!important}.p-prod-tile-carousel-video-tile .p-prod-tile-inner{width:375px}.p-prod-tile-carousel-video-tile .p-prod-tile-img-outer{width:100px;height:136px;background-color:#fff;border:1px solid #eee;border-radius:3px;margin:9px;padding:5px;position:absolute;left:10px;bottom:16px}.p-prod-tile-carousel-video-tile .p-prod-tile-img-outer .p-prod-tile-img{position:relative;top:50%;transform:translateY(-50%);height:auto;width:auto}.p-prod-tile-carousel-video-tile .p-prod-tile-details{width:232px;position:absolute;left:132px;top:217px}.p-prod-tile-carousel-video-tile .p-prod-tile-details .p-prod-tile-title{min-height:50px;overflow:hidden}.p-prod-tile-carousel-video-tile .p-prod-tile-details .p-prod-tile-title .a-link-normal{text-overflow:clip;width:232px;overflow:hidden}.p-prod-tile-carousel-video-tile .p-prod-tile-details .p-prod-tile-title-two-line{min-height:36px;height:36px}.p-prod-tile-carousel-video-tile .p-prod-tile-details .p-prod-tile-promo{line-height:.9;display:inline}.p-prod-tile-carousel-video-tile .p-prod-tile-details .p-prod-tile-promo-subtitle{display:none!important}.p-prod-tile-carousel-video-tile .p-prod-tile-simple-atc-success-result{width:375px;top:-170px;left:0}.p-prod-tile-carousel-video-tile .p-prod-tile-simple-atc-success-result .p-prod-tile-atc-changeover{left:92px;width:150px;display:inline-block}.p-prod-tile-carousel-video-tile .p-prod-tile-selection-info{pointer-events:none}.p-prod-tile-carousel-video-tile .vjs-poster{-webkit-background-size:cover;-moz-background-size:cover;-o-background-size:cover;background-size:cover!important}.p-prod-tile-carousel-video-tile-buttons{border:none!important}.p-prod-tile-carousel-video-tile-buttons .p-prod-tile-atc{width:232px;position:absolute;display:block;bottom:26px;height:31px;left:132px}.p-prod-tile-carousel-video-tile-buttons .p-prod-tile-atc .a-text-center{text-align:left!important;margin-top:-5px}.p-prod-tile-carousel-video-tile-buttons .p-prod-tile-atc-button{left:-10px}.p-prod-tile-carousel-video-tile-buttons .p-prod-tile-quantity{width:51px!important}.p-prod-tile-carousel-video-tile-atc-dropdown .a-col-left{width:64px}.p-prod-tile-carousel-video-tile-player{height:200px;width:355px;margin:9px;display:block;overflow:hidden;background-color:#000}.p-prod-tile-carousel-video-tile-sponsored-text{position:absolute;left:19px;bottom:5px;padding-top:1px;font-size:9px!important;letter-spacing:.5px}.p-prod-tile-rosie-img-max-qty{padding-top:5px;padding-right:5px;padding-left:5px;padding-bottom:5px;position:absolute;bottom:50%;background-color:#fff;opacity:.9}.p-prod-tile-rosie-img-max-qty-large{padding-top:5px;padding-right:5px;padding-left:5px;padding-bottom:5px;position:absolute;bottom:50%;background-color:#fff;opacity:.8}.p-prod-tile-rosie-atc-dropdown{display:none}.p-prod-tile-rosie-img-outer-hover:hover .p-prod-tile-rosie-quick-look-button{display:block}.p-prod-tile-mini-dp-details-row-hidden{display:none}.p-prod-tile-mini-dp-details-row-hidden{display:none}.p-prod-tile-mini-dp-sims-title-row{font-size:18px;text-align:center;background-color:#f3f3f3;height:70px}.p-prod-tile-mini-dp-sims-title{color:#767676;position:relative;top:20px}.p-prod-tile-mini-dp-sims-row{background-color:#f3f3f3;height:115px;text-align:center}.p-prod-tile-mini-dp-sims-title{color:#767676;position:relative;top:20px}.p-prod-tile-mini-dp-sims-tile{padding-left:10px;padding-right:10px;padding-bottom:5px;border-bottom-width:5px;border-bottom-color:#f3f3f3;border-bottom-style:solid;vertical-align:bottom;cursor:pointer}.p-prod-tile-mini-dp-sims-tile.current{border-bottom-color:orange}.p-prod-tile-mini-dp-sims-tile:hover{border-bottom-color:#bbb}.p-prod-tile-mini-dp-atc-confirm-base{color:green;font-size:medium;padding-left:20px;display:none}.p-prod-tile-mini-dp-atc-confirm-success{display:inline}.p-prod-tile-mini-dp-percent-section{background-color:#f3f3f3;display:none}.p-prod-tile-mini-dp-percent-section-show{display:block}.p-prod-tile-mini-dp-box{padding-top:10px;padding-bottom:10px;padding-left:10px;padding-right:10px}.p-prod-tile-mini-dp-percent-text{position:absolute;padding-top:15px;padding-bottom:10px;padding-left:10px;padding-right:10px}.p-prod-tile-mini-dp-modal-close{float:right;margin:10px;font-size:x-large;cursor:pointer;color:gray}.p-prod-tile-mini-dp-fill-percent{color:#767676}.p-prod-tile-mini-dp-oos{font-size:large;color:#b12704}.pantry-discount-sticker{position:absolute;width:40px;height:40px;line-height:12px;font-size:12px;border-radius:100%;z-index:1;color:#fff;background:#B12704;padding-top:10px;text-align:center}.p-prod-tile .p-prod-tile-messaging{display:none;bottom:0;z-index:21;text-align:center;padding-bottom:30px}.p-list-similar-row .p-prod-tile .p-prod-tile-messaging{padding-bottom:0}\n.pantry-inu-changeover-wrapper{position:relative}.pantry-inu-changeover-wrapper #pantry-inu-confirmation{position:absolute;right:1%}#pantryInlineUpsellWrapper{display:none}.inu-section{padding:0;background-color:#fff;border-radius:3px}.inu-section p{font-size:12px;font-weight:700}.inu-section a{margin-right:4px;margin-left:7px}.inu-section .a-box-inner{padding:10px 10px 14px 7px}.inu-item{display:inline-block;max-width:212px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;background-color:#eaeded;border-bottom:1px;border-bottom-color:ember;border-bottom-style:solid}\n.pantry-store-message{display:block}.pantry-store-message:hover{text-decoration:none}.pantry-store-message .pantry-store-message-inner{position:relative}.pantry-store-message .pantry-store-message-inner .a-size-base.a-color-base{font-weight:700}.pantry-store-message .pantry-store-message-inner .a-icon-arrow{position:absolute;right:0;top:25%}.twisterPrimePantry{display:none!important}#twister_feature_div .a-icon-prime-pantry{display:none}#twister_bottom_sheet .a-icon-prime-pantry{display:none}\n#skycity-soft-merge{display:none}\n#ib-text-links-content{text-transform:uppercase}#ib-text-links-content ul li:not(:first-child){margin-left:15px}#ib-text-links-content ul li{display:inline-block;padding:6px 0 24px}#ib-text-links-content.text-link-style-space{min-height:50px}\n.turbo-checkout-auto-load-spinner{position:absolute;top:0;left:0;width:100%;height:100%;overflow:hidden}.turbo-checkout-auto-load-circle-container{position:absolute;top:50%;left:50%;width:50px;height:50px;overflow:hidden;border-radius:50%;background:#fff;transform:translate(-50%,-50%)}.turbo-checkout-auto-load-spinner-container{position:absolute;top:0;left:0;width:100%;height:100%;background-color:rgba(255,255,255,.75);overflow:hidden;z-index:1008}#turbo-loading-container{min-height:inherit;min-width:inherit;position:relative;opacity:0;-moz-webkit-transition:opacity .5s linear .25s;-ms-webkit-transition:opacity .5s linear .25s;-o-webkit-transition:opacity .5s linear .25s;-khtml-webkit-transition:opacity .5s linear .25s;-webkit-transition:opacity .5s linear .25s;transition:opacity .5s linear .25s}#turbo-loading-content{position:absolute;left:0;right:0;top:35%}#turbo-loading-spinner{display:block;margin:0 auto}#turbo-loading-text{display:block;text-align:center}.turbo-checkout-blank{opacity:0}.turbo-checkout-shown{opacity:1!important}#turbo-checkout-frame{min-height:335px;height:335px;min-width:550px;overflow-y:hidden;-moz-webkit-transition:height .5s;-ms-webkit-transition:height .5s;-o-webkit-transition:height .5s;-khtml-webkit-transition:height .5s;-webkit-transition:height .5s;transition:height .5s}#turbo-checkout-iframe{width:100%;height:100%;border:none;display:block;opacity:0;-moz-webkit-transition:opacity .5s;-ms-webkit-transition:opacity .5s;-o-webkit-transition:opacity .5s;-khtml-webkit-transition:opacity .5s;-webkit-transition:opacity .5s;transition:opacity .5s}#turbo-checkout-modal-header{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;max-width:500px}\n#preRegistration-container .a-icon{display:none}#preRegistration-container.inline-popup-link .a-checkbox{padding-right:4px}#preRegistration-container.inline-popup-link .a-checkbox-label{display:inline;padding-left:0}#preRegistration-container .preRegistration-popup-link{position:relative}#preRegistration-alert-container #preregistrationAlert{padding-left:4px}#preRegistration-alert-container #preregistrationQuantityAlert{padding-left:4px}#gifting-option-container{margin-bottom:0}\n\u003C/style>\n\n\n\u003Cscript>\n(function(d,b,m){function c(a){return\"--private-amznjqshim-\"+a}function e(a,l){var b=c(l);d.now(b).execute(c(a+\"-\"+b)+\"-\"+f++,function(a){void 0===a&&d.declare(b,!0)})}function h(a){e(\"markRequested\",\"functionality-requested:\"+a)}function g(a){e(\"completedStage\",\"stage-\"+a)}b.goN2Debug||(b.goN2Debug={info:function(){}});\"use strict\";var f=0,k=b.amznJQ=new function(){this.addLogical=this.addStyle=this.addStyles=this.PLNow=this.windowOnLoad=function(){};this.declareAvailable=function(a){e(\"declaring\",\na)};this.available=function(a,b){a=c(a);h(a);d.when(a,c(\"jQuery\")).execute(c(\"available-\"+a)+\"-\"+f++,b)};this.onReady=function(a,b){a=c(a);h(a);d.when(a,\"a-domready\",c(\"jQuery\")).execute(c(\"onReady-\"+a)+\"-\"+f++,b)};this.onCompletion=function(a,b){var e=c(\"stage-\"+a);d.when(e,c(\"jQuery\")).execute(b)};this.completedStage=function(a){g(a)};this.addPL=function(a){d.when(\"a-preload\").execute(c(\"Preloader\")+\"-\"+f++,function(b){b.preload(a)})};this.strings={};this.chars={}};d.when(\"load\").execute(c(\"fail-safe-stages\"),\nfunction(){g(\"amznJQ.theFold\");g(\"amznJQ.criticalFeature\")});d.when(\"jQuery\").execute(\"define amznJQ jQuery\",function(a){b.jQuery||(b.jQuery=a);k.jQuery||(k.jQuery=a);e(\"declaring\",\"jQuery\")})})(window.P||window.AmazonUIPageJS,window,document);\n(window.AmazonUIPageJS ? AmazonUIPageJS : P).when('atf').execute(function(){\n  (window.AmazonUIPageJS ? AmazonUIPageJS : P).load.js('https://images-na.ssl-images-amazon.com/images/I/417QjYmMtBL.js?AUIClients/AmazonPopoversAUIShim#us');\n  (window.AmazonUIPageJS ? AmazonUIPageJS : P).load.js('https://images-na.ssl-images-amazon.com/images/I/31Nb5hZQizL._RC|11DbyV7EqEL.js,41-5yCIJLkL.js,31selSsN+1L.js,413u98XONQL.js,316nVZ1c+gL.js,21OYEBd8PVL.js,318rs4piGPL.js,01jEqq6I0UL.js,0185ITV0M6L.js,41DfHGdXUeL.js,217XOv1WjVL.js,210NjLk-UoL.js,31GSoUxkToL.js,11H+quk5jAL.js,21FBJlPfM6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,71-EksT4eaL.js,612N12HQlLL.js,31UjTApGOPL.js,01LHJt5PiyL.js,31Ac-cQ+ZWL.js,11oGaoYgbdL.js,0193uyIciNL.js,41D4kRuiy9L.js,314YideY-UL.js,11p0nLfNCcL.js,01s9HEfbt3L.js,11iHZuQapKL.js,61cXnq7ya3L.js,11AVRVWTouL.js,11MQqFPEK+L.js,417MzwaDKzL.js,11G4c43OZvL.js,21Gfl9VxXFL.js,31t4ojoCyTL.js,115eJenyunL.js,01X2zigX4kL.js,21YW9LKF2zL.js,21mymEONFtL.js,61no9IDtPrL.js,21OJDARBhQL.js,41s+OBPxTPL.js,51J6xjXWctL.js,01IWUb29Q4L.js,01JzE3-DfLL.js_.js?AUIClients/USHardlinesDetailPageMetaAssetFixed#desktop.us.213498-T1.195406-C.227948-T1.183511-T1.221330-T1.123392-T1.114779-T1.120067-T1.173971-T1.131900-T1.184660-C.162909-T1.155175-T1.108310-T1.156391-T1.195589-T1.107686-T1.172346-T1.133003-T1.181561-T1.187555-T1');\n  (window.AmazonUIPageJS ? AmazonUIPageJS : P).load.js('https://images-na.ssl-images-amazon.com/images/I/617jioWLwdL.js?AUIClients/DetailPageDesktopImageBlockMetaAsset#230654-T2.210909-T1.169593-T1');\n  (window.AmazonUIPageJS ? AmazonUIPageJS : P).load.js('https://images-na.ssl-images-amazon.com/images/I/21PWs2LLIGL._RC|118Say7HIZL.js,21E2aIDj6DL.js,31qUdoxPE8L.js,4123BTTtUrL.js,31bEXnVglKL.js,31Gy8EGyyiL.js,41TmUB5al-L.js,21NDIsf0a1L.js,015TRQC5i+L.js,61Amz9+97tL.js,01lcH4zcTaL.js,01OtvpwikQL.js,5141J+X2WhL.js,01qwoVEkKlL.js,01g2etah0NL.js,21b+wrKJalL.js,21qOGqjcM7L.js,11wTwl+500L.js,61tb-S9yWnL.js,11zoAqkd2UL.js,01YivelYW5L.js,016QFWAAdML.js,51QhJu91XEL.js,11Gx+6S5O-L.js,31cxN9ZCWkL.js,41FXCYfSyrL.js,41f7ZYDPh6L.js,31ZS5TQVWDL.js,51Z6IpqcPCL.js,01IQoRXvpnL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31SVhUHz1bL.js,21nsfrjkZaL.js,01u8ChFWgdL.js,011kwg0OTQL.js,01jLpHmb92L.js,014kCoIHgIL.js,01rd3UY3Z8L.js,01hkseOXj6L.js,01Sd4JgH9ML.js,01Zs681p9JL.js,01dXSEbmdvL.js,01IC-gBKyYL.js,51IVDV8MIiL.js,21rYUjMk16L.js,01OI0RzpxfL.js_.js?AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP#desktop.us.167162-T1.215485-T1.210547-T1.212549-T1.105844-C.153662-T1.103061-T1.150150-T1.200616-T1.184888-T1.162909-T1.212213-T1.213066-T1.207826-T1.190465-T1.190123-T1.144201-T1.221009-T1.169053-T2.184361-T1.126331-T1.188213-T1.179789-T1.109378-T1.147957-T1.154031-T3.198898-C.200963-T1.224722-T1.169593-T1.142088-C.187531-T1.217613-T1.187555-T1');\n  (window.AmazonUIPageJS ? AmazonUIPageJS : P).load.js('https://images-na.ssl-images-amazon.com/images/I/31nZs05cq8L.js?AUIClients/DetailPagePreRegistrationAssets#199271-T1');\n  (window.AmazonUIPageJS ? AmazonUIPageJS : P).load.js('https://images-na.ssl-images-amazon.com/images/I/41THdNCw4OL.js?AUIClients/AmazonDevicesDetailPageUtilityAssets#140997-T1.132048-T1');\n});\n\u003C/script>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;detail-page-device-type&quot;}\">{\"deviceType\":\"web\"}\u003C/script>\n        \u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;metrics-schema&quot;}\">{\"widgetSchema\":\"dp:widget:\",\"dimensionSchema\":\"dp:dims:\"}\u003C/script>\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n      \n\n\n\n\n\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n    \n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n\n\n\n\n\n    \n    \n\n\n\n\n\n  \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cstyle type=\"text/css\">\n\n  #cm_cr_dpwidget .a-size-micro {\n    font-size: 9px;\n  } \n\n  #cm_cr_dpwidget .c7yTopDownDashedStrike {\n    border-top: 1px dashed #A9A9A9;\n    border-bottom: 1px dashed #A9A9A9;\n  }\n\n  #cm_cr_dpwidget .c7yBadgeAUI {\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n    padding: 2px;\n    white-space: nowrap;\n  }\n\n\u003C/style>\n\n\n\n\u003Cstyle type=\"text/css\">.nav-sprite-v1 .nav-sprite, .nav-sprite-v1 .nav-icon {\n  background-image: url(https://images-na.ssl-images-amazon.com/images/G/01/gno/sprites/nav-sprite-global_bluebeacon-1x_optimized_layout1._CB468670774_.png);\n  background-position: 0 1000px;\n  background-repeat: repeat-x;\n}\n.nav-spinner {\n  background-image: url(https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/popover/images/snake._CB192571611_.gif);\n  background-position: center center;\n  background-repeat: no-repeat;\n}\n.nav-timeline-icon, .nav-access-image, .nav-timeline-prime-icon {\n  background-image: url(https://images-na.ssl-images-amazon.com/images/G/01/gno/sprites/timeline_sprite_1x._CB276239408_.png);\n  background-repeat: no-repeat;\n}\n\n\n  \n    .tagEdit {\n      padding-bottom:4px;\n      padding-top:4px;\n    }\n\n    .edit-tag {\n      width: 155px;\n      margin-left: 10px;\n    }\n\n    .list-tags {\n      white-space: nowrap;\n      padding: 1px 0px 0px 0px;\n    }\n\n   #suggest-table {\n      display: none;\n      position: absolute;\n      z-index: 2;\n      background-color: #fff;\n      border: 1px solid #9ac;\n    }\n\n    #suggest-table tr td{\n      color: #333;\n      font: 11px Verdana, sans-serif;\n      padding: 2px;\n    }\n\n    #suggest-table tr.hovered {\n      color: #efedd4;\n      background-color: #9ac;\n    }\n\n  \n  .see-popular {\n    padding: 1.3em 0 0 0;\n  }\n\n  .tag-cols {\n    border-collapse: collapse;\n  }\n\n  .tag-cols td {\n    vertical-align: top;\n    width: 250px;\n    padding-right: 30px;\n  }\n\n  .tag-cols .tag-row {\n    padding: 0 0 7px 0px;\n  }\n\n  .tag-cols .see-all {\n    white-space: nowrap;\n    padding-top: 5px;\n  }\n\n  .tags-piles-feedback {\n    display: none;\n    color: #000;\n    font-size: 0.9em;\n    font-weight: bold;\n    margin: 0px 0 0 0;\n   }\n\n  .tag-cols i {\n    display: none;\n    cursor: pointer;\n    cursor: hand;\n    float: left;\n    font-style: normal;\n    font-size: 0px;\n    vertical-align: bottom;\n    width: 16px;\n    height: 16px;\n    margin-top: 1px;\n    margin-right: 3px;\n  }\n\n  .tag-cols .snake {\n    display: block;\n    background: url('https://images-na.ssl-images-amazon.com/images/G/01/x-locale/communities/tags/graysnake._CB192250049_.gif');\n  }\n\n  #tagContentHolder .tip {\n    display: none;\n    color: #999;\n    font-size: 10px;\n    padding-top: 0.25em;\n  }\n\n  #tagContentHolder .tip a {\n    color: #999 !important;\n    text-decoration: none !important;\n    border-bottom: solid 1px #CCC;\n  }\n\n  .nowrap {\n    white-space: nowrap;\n  }\n\n  #tgEnableVoting {\n    display: none;\n  }\n\n  #tagContentHolder .count {\n    color: #666;\n    font-size: 10px;\n    margin-left: 3px;\n    white-space: nowrap;\n  }\n\n  .count.tgVoting {\n    cursor: pointer;\n  }\n\n  .tgVoting .tgCounter {\n    margin-right: 3px;\n    border-bottom: 1px dashed #003399;\n    color: #003399;\n  }\n\n\n.c2c-inline-sprite {\n    display: -moz-inline-box;\n    display: inline-block;\n    margin: 0;padding: 0; \n    position: relative;\n    overflow: hidden;\n    vertical-align: middle;\n    background-image: url(https://images-na.ssl-images-amazon.com/images/G/01/electronics/click2call/click2call-sprite._CB156431432_.png);\n    background-repeat: no-repeat;\n}\n.c2c-inline-sprite span {\n    position:absolute;\n    top:-9999px;\n}\n\n.dp-call-me-button {\n    width:52px;\n    height:22px;\n    background-position:0px -57px; \n}\n\n#dp-c2c-phone-icon {\n  background-image:url(https://images-na.ssl-images-amazon.com/images/G/01/electronics/click2call/sprite-click2call._CB134653340_.png);\n  background-repeat:no-repeat;\n  background-position: 0px 0px;\n  width:36px;\n  height:35px;\n  float:left;\n  margin-right:0.5em;\n}   \n#detailpage-click2call-table {\n  padding: 5px 0;\n}   \n\n/* Different sprites/images used CSS Start */\n.swSprite {background-image: url(https://images-na.ssl-images-amazon.com/images/G/01/common/sprites/sprite-site-wide-3._CB375430972_.png); }\n.dpSprite {background-image: url(https://images-na.ssl-images-amazon.com/images/G/01/common/sprites/sprite-dp-2._CB384267953_.png); }\n.wl-button-sprite {background-image: url(https://images-na.ssl-images-amazon.com/images/G/01/x-locale/communities/wishlist/add-to-wl-button-sprite._CB192250042_.gif); }\n.cBoxTL, .cBoxTR, .cBoxBL, .cBoxBR { background-image:url(https://images-na.ssl-images-amazon.com/images/G/01/common/sprites/sprite-site-wide-2._CB146303866_.png); }\n.auiTestSprite { background: url(https://images-na.ssl-images-amazon.com/images/G/01/nav2/images/sprite-carousel-btns-stars2._CB376388587_.png) no-repeat scroll 0 0 transparent; }\nspan.amtchelp { background: url(https://images-na.ssl-images-amazon.com/images/G/01/SellerForums/amz/images/help-16x16._CB137691369_.gif) no-repeat scroll right bottom transparent; }\n.shuttleGradient { background: url(https://images-na.ssl-images-amazon.com/images/G/01/x-locale/communities/customerimage/shuttle-gradient._CB192250138_.gif); }\n.twisterPopoverArrow { background: url(https://images-na.ssl-images-amazon.com/images/G/01/gateway/csw/tri-down._CB155542082_.png); }\n#finderUpdateButton img, #finderShowMoreDevicesLink, #finderHideMoreDevicesLink {background-image: url(https://images-na.ssl-images-amazon.com/images/G/01/nav2/finders/finder-fits-sprites._CB192545788_.gif);}\n.cmtySprite { background-image: url(https://images-na.ssl-images-amazon.com/images/G/01/common/sprites/sprite-communities._CB320811603_.png); background-repeat: no-repeat; }\n\n/* Different sprites/images used CSS End */\n\n\n\n/* Best Seller Badging */\n.simsWrapper .shoveler ul { height: 220px;}\n\n\n  .medSprite { background-image: url('https://images-na.ssl-images-amazon.com/images/G/01/common/sprites/sprite-media-platform._CB247725847_.png'); background-repeat: no-repeat; }\n\n\u003C/style>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cscript language=\"Javascript1.1\" type=\"text/javascript\">\n\u003C!--\nfunction amz_js_PopWin(url,name,options){\n  var ContextWindow = window.open(url,name,options);\n  ContextWindow.focus();\n  return false;\n}\n//-->\n\u003C/script>\n\n\n        \n        \n    \n    \n        \n        \n            \n            \n        \n        \n        \n            \n        \n\n\n\n\n\n\n\n\n\n\u003Cmeta http-equiv=\"content-type\" content=\"text/html; charset=iso-8859-1\">\n\n\n\n\n\n\u003Clink rel=\"canonical\" href=\"https://www.amazon.com/Acer-Flagship-CB3-532-Premium-Chromebook/dp/B06XD3LXXK\">\n\u003Cmeta name=\"description\" content=\"Amazon.com: Acer Flagship CB3-532 15.6&quot; HD Premium Chromebook - Intel Dual-Core Celeron N3060 up to 2.48GH.z, 2GB RAM, 16GB SSD, Wireless AC, HDMI, USB 3.0, Webcam, Chrome OS (Renewed): Computers &amp; Accessories\">\n\u003Cmeta name=\"title\" content=\"Amazon.com: Acer Flagship CB3-532 15.6&quot; HD Premium Chromebook - Intel Dual-Core Celeron N3060 up to 2.48GH.z, 2GB RAM, 16GB SSD, Wireless AC, HDMI, USB 3.0, Webcam, Chrome OS (Renewed): Computers &amp; Accessories\">\n\n\u003Cmeta name=\"keywords\" content=\"Acer Flagship CB3-532 15.6&quot; HD Premium Chromebook - Intel Dual-Core Celeron N3060 up to 2.48GH.z, 2GB RAM, 16GB SSD, Wireless AC, HDMI, USB 3.0, Webcam, Chrome OS (Renewed),Acer,NX.GHJAA.002\">\n\u003Ctitle>Amazon.com: Acer Flagship CB3-532 15.6\" HD Premium Chromebook - Intel Dual-Core Celeron N3060 up to 2.48GH.z, 2GB RAM, 16GB SSD, Wireless AC, HDMI, USB 3.0, Webcam, Chrome OS (Renewed): Computers &amp; Accessories\u003C/title>\n\n\n\n\n\n\n\n\n\n\u003C!--[if IE]>\n\n\u003Cscript language=\"Javascript1.1\" type=\"text/javascript\">\n    \n  function dpCSSSetMinWidth() {\n\tvar elem = document.getElementById(\"divsinglecolumnminwidth\");\n\tif (elem) {\n                dpCSSSetElemWidth(elem);\n\t}\n  }\n  \n  function dpCSSSetElemWidth(elem) {\n      if (elem) {\n         var clientWidth = document.documentElement.clientWidth ? document.documentElement.clientWidth : document.body.clientWidth;\n         elem.runtimeStyle.width = (clientWidth \u003C 920 ? '920px' : '100%' );\n      }\n  }\n  \n  if ( -1 != navigator.userAgent.indexOf(\"MSIE\") ) {\n      window.onresize = dpCSSSetMinWidth;\n  }\n\u003C/script>\n\n\u003C![endif]-->\n\n\n\n\n\n\n\u003Cscript type=\"text/javascript\">\n\n// =============================================================================\n// Function Class: Show/Hide product promotions & special offers link\n// =============================================================================\n\nfunction showElement(id) {\n  var elm = document.getElementById(id);\n  if (elm) {\n    elm.style.visibility = 'visible';\n    if (elm.getAttribute('name') == 'heroQuickPromoDiv') {\n      elm.style.display = 'block';\n    }\n  }\n}\nfunction hideElement(id) {\n  var elm = document.getElementById(id);\n  if (elm) {\n    elm.style.visibility = 'hidden';\n    if (elm.getAttribute('name') == 'heroQuickPromoDiv') {\n      elm.style.display = 'none';\n    }\n  }\n}\nfunction showHideElement(h_id, div_id) {\n  var hiddenTag = document.getElementById(h_id);\n  if (hiddenTag) {\n    showElement(div_id);\n  } else {\n    hideElement(div_id);\n  }\n}\n\n    if(typeof P === 'object' && typeof P.when === 'function'){\n    P.register(\"isLazyLoadWeblabEnabled\", function(){\n        var  isWeblabEnabled = 1;\n        return isWeblabEnabled;\n      });\n    }\n\n\twindow.isBowserFeatureCleanup = 0;\n\t\nvar touchDeviceDetected = false;\n\n\n\n        P.when('sp.load.js').register('sp.load.critical.js');\n        P.when('atf').register('sp.load.js');\n\n\nvar CSMReqs={af:{c:2,p:'atf'},cf:{c:2,p:'cf'},x1:{c:1,p:'x1'},x2:{c:1,p:'x2'}};\nfunction setCSMReq(a){\n    a=a.toLowerCase();\n    var b=CSMReqs[a];\n    if(b&&--b.c==0){\n        if(typeof uet=='function'){uet(a); (a == 'af') && (typeof replaceImg === 'function') && replaceImg();};\n        if(typeof P != 'undefined'){\n            P.register(b.p);\n            if(a == 'af') {\n                if(typeof uet === 'function') {\n                    uet('bb', 'TwisterAUIWait', {wb: 1});\n                }\n            }\n        };\n    }\n}\nif(typeof P != 'undefined') {\n    P.when('A').execute(function(A) {\n        if(typeof uet === 'function') {\n            uet('af', 'TwisterAUIWait', {wb: 1});\n        }\n    });\n}\n\nvar addlongPoleTag = function(marker,customtag){\n    marker=marker.toLowerCase();\n    var b=CSMReqs[marker];\n    if(b.c == 0){\n        if(window.ue && typeof ue.tag === 'function') {\n            ue.tag(customtag);\n        }\n    }\n};\n;(function(_onerror){\n  var old_error_handler = _onerror;\n  var attributionMap = {\n          \"BrowserAddon\":{\n            logLevel: \"ERROR\",\n            files:[\n                /^res:\\/\\//, \n                /^resource:\\/\\//, /^chrome:\\/\\//, \n                /^chrome-extension:\\/\\//, /^extensions\\//, \n                /^file:\\/\\/\\//, /^chrome\\/RendererExtensionBindings/, \n                /^plugin\\/amazon_com_detail\\.js/, \n                /^miscellaneous_bindings/, \n              \n                // plugin in china\n                /^http.?:\\/\\/([^\\s\\.]+\\.)*qhimg\\.com/,\n              \n                // plugin in India\n                /^http.?:\\/\\/([^\\s\\.]+\\.)*datafastguru\\.info/,\n\n                /^http.?:\\/\\/sc1\\.checkpoint\\.com\\/dev\\/abine\\/scripts\\/inject\\.js/,\n\n                /^http.?:\\/\\/([^\\s\\.]+\\.)*image2play\\.com/,\n\n                /^http.?:\\/\\/([^\\s\\.]+\\.)*wajam\\.com/,\n\n                /^http.?:\\/\\/([^\\s\\.]+\\.)*ydstatic\\.com/,\n\n\t\t/^https?:\\/\\/([^\\s\\.]+\\.)*googleapis\\.com\\/ajax\\/libs\\/jquery/,\n\n\t\t/^https?:\\/\\/www\\.superfish\\.com\\/ws/,\n\n\t\t/^https?:\\/\\/api.imideo.com\\/v2/,\n\n\t\t/^https?:\\/\\/minibar.iminent.com/,\n\n\t\t/^https?:\\/\\/translate.googleusercontent.com/,\n\t\n\t\t/^includes\\/helper/\n            ]\n          }\n  };\n\n    function findMatch(f){\n\tfor(var attribution in attributionMap){\n\t    var i=0;\n\t    var attributionValue = attributionMap[attribution];\n\t    var files = attributionValue['files'];\n\t    while(files[i]){\n\t\tif(f.match(files[i])){\n\t            var exception={};\n\t\t    exception.attribution = attribution;\n\t\t    if(attributionValue.hasOwnProperty(\"logLevel\")){\n\t\t\texception.logLevel = attributionValue['logLevel'];\t\n\t\t    }\n\t\treturn exception;\n           \t}\n\t\ti++;\n\t    }\n        }\n\treturn null;\n    }\n\n\n    function dpOnErrorOverride(message, file, line, col, error){\n     var matchingErrorFound = false;\n     if(typeof file == \"string\"){\n        try{\n\t    var jsException = findMatch(file);\n\t    if(jsException && typeof jsException === \"object\"){\n                jsException.m =  message;\n                jsException.f = file;\n                jsException.l = line;\n                jsException.c =  \"\" + (col || \"\");\n                jsException.err =  error;\n                jsException.fromOnError = 1;\n                jsException.args = arguments;\n                if(window.ueLogError){\n               \t    window.ueLogError(jsException);\n\t\t    matchingErrorFound = true;\n\t\t    if(ue && ue.count){\n\t\t        ue.count(\"dpJavascriptAffectedErrors\", (ue.count(\"dpJavascriptAffectedErrors\") || 0) + 1);\n\t\t        ue.count(\"dpJSError\" + jsException.attribution, (ue.count(\"dpJSError\" + jsException.attribution) || 0) + 1);\n\t\t    }\n\t        }\n            }\n\t}catch(exception){\n\t    if(window.ueLogError){\n\t        window.ueLogError(exception,{message: \"dpOnErrorOverride: error occurred - \", logLevel:\"FATAL\"});\n\t    }\n\t}\n    }\n\tif(!matchingErrorFound){ \n          old_error_handler.apply(this, arguments);\n\t}\n        return false;\n    }\n\n      dpOnErrorOverride.skipTrace = 1;\n      window.onerror = dpOnErrorOverride;\n    })(window.onerror);\n\n\nvar gbEnableTwisterJS  = 0;\nvar isTwisterPage = 0;\n\u003C/script>\n\n\n\n\n\n\n\n\n\n\n\n\u003Cstyle type=\"text/css\">\n\n/* Override for Native DropDown changes */\n       #buybox_feature_div .a-native-dropdown, #buybox .a-native-dropdown { opacity: 1; filter: alpha(opacity=100); z-index: auto; position: static; display: inline; font-weight: normal;}\n       #buybox_feature_div label.a-native-dropdown, #buybox label.a-native-dropdown {padding-right: 5px;}\n       #buybox_feature_div .a-dropdown-container .a-button-dropdown, #buybox .a-dropdown-container .a-button-dropdown  { display: none !important;}\n     #buybox_feature_div #OneClickBox, #buybox #OneClickBox { text-align:center;}\n     #buybox_feature_div #oneClickAvailable, #buybox #oneClickAvailable { text-align:center;}\n     #defaultChildDropdown_feature_div .a-native-dropdown { display: inline;}\n     #defaultChildDropdown_feature_div .a-dropdown-container .a-button-dropdown { display: none !important;}\n\n\u003C/style>\n\n\u003Cscript type=\"text/javascript\">\n\n\nP.when(\"p-detect\").execute(function() {\n    var h = document.documentElement;\n    h.className = h.className.replace(/(^|\\b)a-touch(\\b|$)/g,\"\");\n});\n\nwindow.weblabs = {};\n\n\u003C/script>\n\n\n \u003Cscript type=\"text/javascript\">\nP.now().execute('dp-create-feature-interactive-api', function () {\n    if (typeof uet === 'function'){\n        uet('bb', 'clickToCI', {wb: 1});\n    }\n    var records = [], timeToInteractiveObj;\n    window.markFeatureRender = function (fName, options) {\n        updateFeatureList(fName, options, 'render');\n    };\n    window.markFeatureInteractive = function (fName, options) {\n        updateFeatureList(fName, options, 'interactive');\n    };\n    function updateFeatureList(fName, options, type) {\n        var record = {\n            name: fName,\n            options: options,\n            type: type,\n            timestamp: +new Date\n        };\n        if (timeToInteractiveObj) {\n            timeToInteractiveObj.updateFeatures([record]);\n        } else {\n            records.push(record);\n        }\n    }\n    P.when('dp-time-to-interactive').execute('dp-update-interactive-feature-list', function (obj) {\n        timeToInteractiveObj = obj;\n        if (records.length) {\n            timeToInteractiveObj.updateFeatures(records);\n        }\n    });\n}); \u003C/script>\n\n\u003C!--&&&Portal&Delimiter&&&-->\u003C!-- sp:end-feature:host-assets -->\n\u003Cscript type=\"text/javascript\">\nwindow.ue_ihe = (window.ue_ihe || 0) + 1;\nif (window.ue_ihe === 1) {\n(function(k,l,g){function m(a){c||(c=b[a.type].id,\"undefined\"===typeof a.clientX?(e=a.pageX,f=a.pageY):(e=a.clientX,f=a.clientY),2!=c||h&&(h!=e||n!=f)?(r(),d.isl&&l.setTimeout(function(){p(\"at\",d.id)},0)):(h=e,n=f,c=0))}function r(){for(var a in b)b.hasOwnProperty(a)&&d.detach(a,m,b[a].parent)}function s(){for(var a in b)b.hasOwnProperty(a)&&d.attach(a,m,b[a].parent)}function t(){var a=\"\";!q&&c&&(q=1,a+=\"&ui=\"+c);return a}var d=k.ue,p=k.uex,q=0,c=0,h,n,e,f,b={click:{id:1,parent:g},mousemove:{id:2,\nparent:g},scroll:{id:3,parent:l},keydown:{id:4,parent:g}};d&&p&&(s(),d._ui=t)})(ue_csm,window,document);\n\n\n\n(function(s,l){function m(b,e,c){c=c||new Date(+new Date+t);c=\"expires=\"+c.toUTCString();n.cookie=b+\"=\"+e+\";\"+c+\";path=/\"}function p(b){b+=\"=\";for(var e=n.cookie.split(\";\"),c=0;c\u003Ce.length;c++){for(var a=e[c];\" \"==a.charAt(0);)a=a.substring(1);if(0===a.indexOf(b))return decodeURIComponent(a.substring(b.length,a.length))}return\"\"}function q(b,e,c){if(!e)return b;-1\u003Cb.indexOf(\"{\")&&(b=\"\");for(var a=b.split(\"&\"),f,d=!1,h=!1,g=0;g\u003Ca.length;g++)f=a[g].split(\":\"),f[0]==e?(!c||d?a.splice(g,1):(f[1]=c,a[g]=\nf.join(\":\")),h=d=!0):2>f.length&&(a.splice(g,1),h=!0);h&&(b=a.join(\"&\"));!d&&c&&(0\u003Cb.length&&(b+=\"&\"),b+=e+\":\"+c);return b}var k=s.ue||{},t=6048E7,n=ue_csm.document||l.document,r=null,d;a:{try{d=l.localStorage;break a}catch(u){}d=void 0}k.count&&k.count(\"csm.cookieSize\",document.cookie.length);k.cookie={get:p,set:m,updateCsmHit:function(b,e,c){try{var a;if(!(a=r)){var f;a:{try{if(d&&d.getItem){f=d.getItem(\"csm-hit\");break a}}catch(k){}f=void 0}a=f||p(\"csm-hit\")||\"{}\"}a=q(a,b,e);r=a=q(a,\"t\",+new Date);\ntry{d&&d.setItem&&d.setItem(\"csm-hit\",a)}catch(h){}m(\"csm-hit\",a,c)}catch(g){\"function\"==typeof l.ueLogError&&ueLogError(Error(\"Cookie manager: \"+g.message),{logLevel:\"WARN\"})}}}})(ue_csm,window);\n\n(function(l,d){function c(b){b=\"\";var c=a.isBFT?\"b\":\"s\",d=\"\"+a.oid,f=\"\"+a.lid,g=d;d!=f&&20==f.length&&(c+=\"a\",g+=\"-\"+f);a.tabid&&(b=a.tabid+\"+\");b+=c+\"-\"+g;b!=e&&100>b.length&&(e=b,a.cookie?a.cookie.updateCsmHit(m,b+(\"|\"+ +new Date)):document.cookie=\"csm-hit=\"+b+(\"|\"+ +new Date)+n+\"; path=/\")}function p(){e=0}function h(b){!0===d[a.pageViz.propHid]?e=0:!1===d[a.pageViz.propHid]&&c({type:\"visible\"})}var n=\"; expires=\"+(new Date(+new Date+6048E5)).toGMTString(),m=\"tb\",e,a=l.ue||{},k=a.pageViz&&a.pageViz.event&&\na.pageViz.propHid;a.attach&&(a.attach(\"click\",c),a.attach(\"keyup\",c),k||(a.attach(\"focus\",c),a.attach(\"blur\",p)),k&&(a.attach(a.pageViz.event,h,d),h({})));a.aftb=1})(ue_csm,document);\n\n\nue_csm.ue.stub(ue,\"impression\");\n\n\nue.stub(ue,\"trigger\");\n\n\n\nif(window.ue&&uet) { uet('bb'); }\n\n}\n\u003C/script>\u003C!-- sp:feature:head-close -->\n\u003Cscript>\nwindow.P && P.register('bb');\nif (typeof ues === 'function') {\n  ues('t0', 'portal-bb', new Date());\n  ues('ctb', 'portal-bb', 1);\n}\n\u003C/script>\n\u003Cscript type=\"text/javascript\" async=\"\" charset=\"utf-8\" src=\"https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/desktop/DAsf-1.50.228f98c._V451950910_.js?csm_attribution=APE-SafeFrame\" crossorigin=\"anonymous\">\u003C/script>\u003Cscript type=\"text/javascript\" async=\"\" crossorigin=\"anonymous\" src=\"https://images-na.ssl-images-amazon.com/images/I/417QjYmMtBL.js?AUIClients/AmazonPopoversAUIShim#us\">\u003C/script>\u003Cscript type=\"text/javascript\" async=\"\" crossorigin=\"anonymous\" src=\"https://images-na.ssl-images-amazon.com/images/I/31Nb5hZQizL._RC|11DbyV7EqEL.js,41-5yCIJLkL.js,31selSsN+1L.js,413u98XONQL.js,316nVZ1c+gL.js,21OYEBd8PVL.js,318rs4piGPL.js,01jEqq6I0UL.js,0185ITV0M6L.js,41DfHGdXUeL.js,217XOv1WjVL.js,210NjLk-UoL.js,31GSoUxkToL.js,11H+quk5jAL.js,21FBJlPfM6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,71-EksT4eaL.js,612N12HQlLL.js,31UjTApGOPL.js,01LHJt5PiyL.js,31Ac-cQ+ZWL.js,11oGaoYgbdL.js,0193uyIciNL.js,41D4kRuiy9L.js,314YideY-UL.js,11p0nLfNCcL.js,01s9HEfbt3L.js,11iHZuQapKL.js,61cXnq7ya3L.js,11AVRVWTouL.js,11MQqFPEK+L.js,417MzwaDKzL.js,11G4c43OZvL.js,21Gfl9VxXFL.js,31t4ojoCyTL.js,115eJenyunL.js,01X2zigX4kL.js,21YW9LKF2zL.js,21mymEONFtL.js,61no9IDtPrL.js,21OJDARBhQL.js,41s+OBPxTPL.js,51J6xjXWctL.js,01IWUb29Q4L.js,01JzE3-DfLL.js_.js?AUIClients/USHardlinesDetailPageMetaAssetFixed#desktop.us.213498-T1.195406-C.227948-T1.183511-T1.221330-T1.123392-T1.114779-T1.120067-T1.173971-T1.131900-T1.184660-C.162909-T1.155175-T1.108310-T1.156391-T1.195589-T1.107686-T1.172346-T1.133003-T1.181561-T1.187555-T1\">\u003C/script>\u003Cscript type=\"text/javascript\" async=\"\" crossorigin=\"anonymous\" src=\"https://images-na.ssl-images-amazon.com/images/I/617jioWLwdL.js?AUIClients/DetailPageDesktopImageBlockMetaAsset#230654-T2.210909-T1.169593-T1\">\u003C/script>\u003Cscript type=\"text/javascript\" async=\"\" crossorigin=\"anonymous\" src=\"https://images-na.ssl-images-amazon.com/images/I/21PWs2LLIGL._RC|118Say7HIZL.js,21E2aIDj6DL.js,31qUdoxPE8L.js,4123BTTtUrL.js,31bEXnVglKL.js,31Gy8EGyyiL.js,41TmUB5al-L.js,21NDIsf0a1L.js,015TRQC5i+L.js,61Amz9+97tL.js,01lcH4zcTaL.js,01OtvpwikQL.js,5141J+X2WhL.js,01qwoVEkKlL.js,01g2etah0NL.js,21b+wrKJalL.js,21qOGqjcM7L.js,11wTwl+500L.js,61tb-S9yWnL.js,11zoAqkd2UL.js,01YivelYW5L.js,016QFWAAdML.js,51QhJu91XEL.js,11Gx+6S5O-L.js,31cxN9ZCWkL.js,41FXCYfSyrL.js,41f7ZYDPh6L.js,31ZS5TQVWDL.js,51Z6IpqcPCL.js,01IQoRXvpnL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31SVhUHz1bL.js,21nsfrjkZaL.js,01u8ChFWgdL.js,011kwg0OTQL.js,01jLpHmb92L.js,014kCoIHgIL.js,01rd3UY3Z8L.js,01hkseOXj6L.js,01Sd4JgH9ML.js,01Zs681p9JL.js,01dXSEbmdvL.js,01IC-gBKyYL.js,51IVDV8MIiL.js,21rYUjMk16L.js,01OI0RzpxfL.js_.js?AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP#desktop.us.167162-T1.215485-T1.210547-T1.212549-T1.105844-C.153662-T1.103061-T1.150150-T1.200616-T1.184888-T1.162909-T1.212213-T1.213066-T1.207826-T1.190465-T1.190123-T1.144201-T1.221009-T1.169053-T2.184361-T1.126331-T1.188213-T1.179789-T1.109378-T1.147957-T1.154031-T3.198898-C.200963-T1.224722-T1.169593-T1.142088-C.187531-T1.217613-T1.187555-T1\">\u003C/script>\u003Cscript type=\"text/javascript\" async=\"\" crossorigin=\"anonymous\" src=\"https://images-na.ssl-images-amazon.com/images/I/31nZs05cq8L.js?AUIClients/DetailPagePreRegistrationAssets#199271-T1\">\u003C/script>\u003Cscript type=\"text/javascript\" async=\"\" crossorigin=\"anonymous\" src=\"https://images-na.ssl-images-amazon.com/images/I/41THdNCw4OL.js?AUIClients/AmazonDevicesDetailPageUtilityAssets#140997-T1.132048-T1\">\u003C/script>\u003Cscript type=\"text/javascript\" async=\"\" crossorigin=\"anonymous\" src=\"https://images-na.ssl-images-amazon.com/images/I/614ihxQDWpL._RC|11-BZEJ8lnL.js,61GQ9IdK7HL.js,21Of0-9HPCL.js,012FVc3131L.js,119KAWlHU6L.js,51xL2QLv4YL.js,11AHlQhPRjL.js,016iHgpF74L.js,11aNYFFS5hL.js,116tgw9TSaL.js,211-p4GRUCL.js,01PoLXBDXWL.js,61UCC86QXoL.js,11BOgvnnntL.js,31UWuPgtTtL.js,01rpauTep4L.js,01iyxuSGj4L.js,01oGoEUF1PL.js_.js?AUIClients/AmazonUI#218320-T1.192338-T1.202051-T1\">\u003C/script>\u003Cscript type=\"text/javascript\" async=\"\" crossorigin=\"anonymous\" src=\"https://images-na.ssl-images-amazon.com/images/I/41IMQGjpgmL.js?AUIClients/CardJsRuntimeBuzzCopyBuild\">\u003C/script>\u003Cscript type=\"text/javascript\" async=\"\" crossorigin=\"anonymous\" src=\"https://images-na.ssl-images-amazon.com/images/I/61+R0OxaSDL.js?AUIClients/VSERelatedVideosClientAssets\">\u003C/script>\u003Cscript type=\"text/javascript\" async=\"\" crossorigin=\"anonymous\" src=\"https://images-na.ssl-images-amazon.com/images/I/01InYlMhg4L._RC|01x4giTy+uL.js,411id10YyVL.js,01r9LpT6pbL.js,41oPRA2gxZL.js,11yAqqXzKZL.js,81hUDAwKMBL.js,61eBQGUH89L.js,01hSgea4iVL.js,016NshCbePL.js,01N+TJDM4gL.js_.js?AUIClients/Brila\">\u003C/script>\u003Cscript type=\"text/javascript\" async=\"\" crossorigin=\"anonymous\" src=\"https://images-na.ssl-images-amazon.com/images/I/311%2BNUiljjL._RC|51FhDlPwC-L.js_.js?AUIClients/AskAuiAssets#155248-T1.161288-T1.206532-T1.188847-T1\">\u003C/script>\u003Cscript type=\"text/javascript\" async=\"\" crossorigin=\"anonymous\" src=\"https://images-na.ssl-images-amazon.com/images/I/11omjJhwsqL.js?AUIClients/DetailPageLazyLoadLibAssets\">\u003C/script>\u003Cscript type=\"text/javascript\" async=\"\" crossorigin=\"anonymous\" src=\"https://images-na.ssl-images-amazon.com/images/I/31lKiJrlhZL._RC|11tXe99yWBL.js,01-4MbsHMWL.js,11gFiYe7KbL.js,217PnHIylxL.js_.js?AUIClients/DesktopMedleyFilteringMetaAsset\">\u003C/script>\u003Cscript type=\"text/javascript\" async=\"\" crossorigin=\"anonymous\" src=\"https://images-na.ssl-images-amazon.com/images/I/31%2BYJmkO6ZL.js?AUIClients/PageRefreshAsset#123392-T1\">\u003C/script>\u003Cscript type=\"text/javascript\" async=\"\" crossorigin=\"anonymous\" src=\"https://images-na.ssl-images-amazon.com/images/I/21AZkAfOA6L._RC|21XJFDMQuNL.js,11OyIHCq0lL.js,01GhKb2usNL.js_.js?AUIClients/HardlinesFeatureDetailPageMetaAsset\">\u003C/script>\u003Cscript type=\"text/javascript\" async=\"\" src=\"https://images-na.ssl-images-amazon.com/images/G/01/vap/video/airy2/prod/2.0.1460.0/js/airy.skin._CB513066589_.js\">\u003C/script>\u003Clink rel=\"stylesheet\" href=\"https://images-na.ssl-images-amazon.com/images/G/01/vap/video/airy2/prod/2.0.1460.0/css/beacon._CB513066589_.css\">\u003Cscript type=\"text/javascript\" async=\"\" crossorigin=\"anonymous\" src=\"https://images-na.ssl-images-amazon.com/images/I/41JaAK2ibOL._RC|716XjWoH3+L.js,61qWn4HFtuL.js,41W9ohA0e+L.js,11vrNkbdcvL.js,21SHd9g2LAL.js,31xiyyWg1kL.js,51YeRc8UK1L.js,31s6nx4RntL.js_.js?AUIClients/AmazonNavigationDesktopMetaAsset#desktop\">\u003C/script>\u003Cscript type=\"text/javascript\" async=\"\" crossorigin=\"anonymous\" src=\"https://images-na.ssl-images-amazon.com/images/I/11VbV%2B%2BKhQL.js?AUIClients/RetailWebsiteOverlayAUIAssets\">\u003C/script>\u003Cstyle>.s-suggestion { padding: 8px 10px; font-size: 16px; font-family: \"Amazon Ember\"; cursor: pointer; }\u003C/style>\u003C/head>\u003C!-- sp:feature:start-body -->\n\u003Cbody class=\"a-m-us a-aui_152852-c a-aui_157141-c a-aui_158613-t1 a-aui_72554-c a-aui_dropdown_187959-c a-aui_pci_risk_banner_210084-c a-aui_perf_130093-c a-aui_tnr_v2_180836-c a-aui_ux_145937-c a-meter-animate\">\u003Cdiv id=\"ap_container\">\u003C/div>\u003Ciframe frameborder=\"0\" tabindex=\"-1\" src=\"javascript:void(false)\" style=\"display:none;position:absolute;z-index:0;filter:Alpha(Opacity='0');opacity:0;\">\u003C/iframe>\u003Ciframe frameborder=\"0\" tabindex=\"-1\" src=\"javascript:void(false)\" style=\"display:none;position:absolute;z-index:0;filter:Alpha(Opacity='0');opacity:0;\">\u003C/iframe>\u003Ciframe frameborder=\"0\" tabindex=\"-1\" src=\"javascript:void(false)\" style=\"display:none;position:absolute;z-index:0;filter:Alpha(Opacity='0');opacity:0;\">\u003C/iframe>\u003Cdiv id=\"a-page\">\u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;a-wlab-states&quot;}\">{\"AUI_157141\":\"C\",\"AUI_152852\":\"C\",\"AUI_TNR_V2_180836\":\"C\",\"AUI_UX_145937\":\"C\",\"AUI_158613\":\"T1\",\"AUI_72554\":\"C\",\"AUI_DROPDOWN_187959\":\"C\",\"AUI_PCI_RISK_BANNER_210084\":\"C\",\"AUI_PERF_130093\":\"C\"}\u003C/script>\u003Cscript>typeof uex === 'function' && uex('ld', 'portal-bb', {wb: 1})\u003C/script>    \u003Cimg height=\"1\" width=\"1\" style=\"display:none;visibility:hidden;\" src=\"//fls-na.amazon.com/1/batch/1/OP/ATVPDKIKX0DER:137-0530487-6192152:WY2K06V7WEMKTC0K2H7W$uedata=s:%2Fgp%2Fuedata%3Fstaticb%26id%3DWY2K06V7WEMKTC0K2H7W:0\" alt=\"\" onload=\"window.ue_sbl &amp;&amp; window.ue_sbl();\">\n\n\n\u003Cscript>\n!function(){function n(n,t){var r=i(n);return t&&(r=r(\"instance\",t)),r}var r=[],c=0,i=function(t){return function(){var n=c++;return r.push([t,[].slice.call(arguments,0),n,{time:Date.now()}]),i(n)}};n._s=r,this.csa=n}();\nif (window.csa) {\n    csa(\"Config\", {\n        'Application': 'Retail',\n        'ObfuscatedMarketplaceId': 'ATVPDKIKX0DER',\n        'Events.SushiEndpoint': 'https://unagi-na.amazon.com/1/events/com.amazon.csm.nexusclient.prod'\n    });\n\n    csa(\"Events\")(\"setEntity\", {\n        page: {requestId: \"WY2K06V7WEMKTC0K2H7W\", meaningful: \"interactive\"},\n        session: {id: \"137-0530487-6192152\"}\n    });\n}\n!function(n){var e,o,t=n.csa,i={},f={},u=n.csa._s,c=0,r={},a={},s=setTimeout,l=Object.keys;function g(n,i){return t(n,i)}function d(n,i){var t=f[n]||{};O(t,i),f[n]=t,s(b,0)}function h(n,i){r[n]||(r[n]=[]),r[n].push(i)}function p(i,t){if(i in a)t(a[i]);else{var e=function(n){v(i,e),t(n)};h(i,e)}}function v(n,i){var t=r[n];t&&t.splice(t.indexOf(i),1)}function m(n){if(i.DEBUG)throw n}function w(){return Math.abs(4294967295*Math.random()|0).toString(36)}function b(){for(var n=0;n\u003Cu.length;){var i=u[n],t=i[0]in f;if(!t&&!o)return void(c=i.length);t?(u.splice(c=n,1),S(i)):n++}}function S(n){var arguments,i=f[n[0]],t=(arguments=n[1])[0];if(!i||!i[t])return m(\"Undefined function: \"+i+\"/\"+t);e=n[3],f[n[2]]=i[t].apply(i,arguments.slice(1))||{},e=0}function D(){o=1,b()}function O(i,t){l(t).forEach(function(n){i[n]=t[n]})}p(\"$beforeunload\",D),d(\"Config\",{instance:function(n){O(i,n)}}),t.plugin=function(n){n(g)},g.config=i,g.register=d,g.on=h,g.removeListener=v,g.once=p,g.emit=function(n,i){(r[n]||[]).forEach(function(n){n(i)}),a[n]=i||{}},g.UUID=function(){return[w(),w(),w(),w()].join(\"-\")},g.time=function(n){var i=e?new Date(e.time):new Date;return\"ISO\"===n?i.toISOString():i.getTime()},g.error=m,(g.global=n).csa._s.push=function(n){n[0]in f&&(!u.length||o)?S(n):u.splice(c++,0,n)},b(),s(function(){s(D,i.SkipMissingPluginsTimeout||5e3)},1)}(\"undefined\"!=typeof window?window:global);\ncsa.plugin(function(t){var e;function n(){if(!e)try{e=t.global.localStorage||{}}catch(t){e={}}}t.store=function(t,c){try{if(n(),!t)return Object.keys(e);if(!c)return e[t];e[t]=c}catch(t){}},t.deleteStored=function(t){try{n(),delete e[t]}catch(t){}}});\ncsa.plugin(function(a){var t,e=a.global,n=a(\"Events\"),r=e.location,o=e.document,i=e.addEventListener,l=a.emit;function d(){var e=!!t;e&&(l(\"$beforePageTransition\"),l(\"$pageTransition\")),t=a.UUID(),n(\"setEntity\",{page:{schemaId:\"csa.PageEntity.1\",id:t,url:r.href,server:r.hostname,path:r.pathname,referrer:o.referrer,title:o.title}}),e&&l(\"$afterPageTransition\")}function f(){l(\"$load\"),l(\"$afterload\")}function s(){l(\"$beforeunload\"),l(\"$unload\"),l(\"$afterunload\")}r&&o&&(i&&(i(\"beforeunload\",s),i(\"pagehide\",s),\"complete\"===o.readyState?f():i(\"load\",f)),a.register(\"SPA\",{newPage:d}),d())});\ncsa.plugin(function(t){var i=\"UNKNOWN\",a=\"id\",e=\"messageId\",c=\"timestamp\",u=\"producerId\",o=\"application\",f=\"obfuscatedMarketplaceId\",s=\"entities\",r=\"schemaId\",l=\"version\",d=\"attributes\",p=t.config,g=t(\"Transport\"),v={},I=function(n,t){Object.keys(n).forEach(t)};function m(t,i,e){I(i,function(n){n in t||(t[n]={version:1}),b(t[n],i[n],e)})}function b(t,i,e){I(i,function(n){!e&&n!==a||(t[n]=i[n])})}function h(c,n,o){I(n,function(n){var t=c[n];if(t[r]){var i={},e={};E(i),i[a]=t[a],i[u]=t[u]||o,i[r]=t[r],i[l]=t[l]++,b(i[d]=e,t,1),O(e),g(\"log\",i)}})}function E(n){n[c]=n[c]||t.time(\"ISO\"),n[e]=t.UUID(),n[o]=p.Application||i,n[f]=p.ObfuscatedMarketplaceId||i}function O(n){delete n[l],delete n[r],delete n[u]}function k(c){var o={};this.log=function(n,t){var i={},e=(t||{}).full;E(n),m(i,v,e),m(i,o,e),m(i,n[s]||{},e),I(i,function(n){O(i[n])}),n[u]=c[u],n[s]=i,g(\"log\",n)},this.setEntity=function(n){m(o,n,1),h(o,n,c[u])}}t.on(\"$pageTransition\",function(){v={}}),t.register(\"Events\",{setEntity:function(n){m(v,n,1),h(v,n,\"csa\")},instance:function(n){return new k(n)}})});\ncsa.plugin(function(o){var n,i,r=\"csa.cajun.\",c=\"post\",u=\"preflight\",e=\"addEventListener\",f=\"sendBeacon\",t=\"Transport\",s=o.global,a=s.document,d=o.store,l=o.config,p=[],v=[],h=l[t+\".BatchInterval\"]||5e3,g=l[t+\".MaxEvents\"]||1e3,y=0,m=864e5;function E(e){if(g\u003C=++y)return y===g?o.error(\"Max events reached\"):0;var t=e.timestamp;if(o.time()-+new Date(t)>m)return o.error(\"Event is too old: \"+t);n=n||setTimeout(S,h),v.push(e)}function S(){p.forEach(function(t){var n=[];v.forEach(function(e){t.accepts(e)&&n.push(e)}),n.length&&function(t,n,e){d(e,JSON.stringify(n));function r(){o.deleteStored(e)}[function(e,t,n){var r=s.navigator||{},o=s.cordova||{};if(!r[f])return;if(\"ios\"===o.platformId&&!i){if(!e[u])return;(new Image).src=e[u]().url,i=1}var a=e[c](t);if(!a.type&&r[f](a.url,a.body))return n(),1},function(e,t,n){var r=e[c](t),o=r.type,a=new XMLHttpRequest;a.onload=function(){a.status\u003C299&&n()},a.open(\"POST\",r.url),o&&a.setRequestHeader(\"Content-Type\",o);return a.send(r.body),1}].some(function(e){try{return e(t,n,r)}catch(e){}})}(t,n,r+o.UUID())}),v=[],n=0}o.register(t,{log:E,register:function(e){p.push(e)}}),o.once(\"$afterunload\",S),o.once(\"$afterload\",function(){(d()||[]).forEach(function(e){if(!e.indexOf(r))try{var t=d(e);o.deleteStored(e),JSON.parse(t).forEach(E)}catch(e){}}),S(),a&&a[e]&&a[e](\"visibilitychange\",S,!1)}),o.on(\"$afterPageTransition\",function(){y=0})});\ncsa.plugin(function(n){var t,r=n.config[\"Events.SushiEndpoint\"];var i=/\\/\\/(.*?)\\//.exec(r);i&&i[1]&&(t=\"https://\"+i[1]+\"/ping\"),n(\"Transport\")(\"register\",{post:function(n){return n=n.map(function(n){return{data:n}}),{url:r,body:JSON.stringify({events:n})}},preflight:function(){return{url:t}},accepts:function(){return 1}})});\ncsa.plugin(function(i){var t,a,o,r,c=i.config[\"Content.ImpressionMinimumTime\"]||1e3,e=\"addEventListener\",d=\"hidden\",n=\"renderedTo\",s=n+\"Viewed\",f=n+\"Meaningful\",u=n+\"Impressed\",g=1,m=2,l=3,v=4,p=5,h=6,T=7,I=i.global,P=i(\"Events\",{producerId:\"csa\"}),y=I.document,b={},w={};if(!y||!y[e]||void 0===y[d])return E(\"PageStateChange.2\",{state:\"ignored\"});function C(e){if(!b[T]){var n;if(b[e]=i.time(),e!==l&&e!==h||(t=t||b[e]),t&&!y[d])a=a||b[e],(n={})[f]=t-o,n[s]=a-o,E(\"PageView.4\",n),r=r||setTimeout(S,c);if(e!==p&&e!==g&&e!==m||(clearTimeout(r),r=0),e!==g&&e!==m||E(\"PageRender.3\",{transitionType:e===g?\"hard\":\"soft\"}),e===T)(n={})[f]=t-o,n[s]=a-o,n[u]=b[e]-o,E(\"PageImpressed.2\",n)}}function E(e,n){w[e]||(n.schemaId=\"csa.\"+e,P(\"log\",n,{full:1}),w[e]=1)}function M(){C(y[d]?p:v)}function S(){C(T),r=0}function V(){var e=o?m:g;b={},w={},a=t=0,o=i.time(),C(e),M()}function $(){var e=y.readyState;\"interactive\"===e&&C(l),\"complete\"===e&&C(h)}V(),y[e](\"visibilitychange\",M,!1),y[e](\"readystatechange\",$,!1),i.on(\"$afterPageTransition\",V),i.once(\"$load\",$)});\n\u003C/script>\n\u003C!-- sp:feature:nav-inline-js -->\n\u003C!-- From remote config v3-->\n\u003Cscript type=\"text/javascript\">\n(function(d){document.createElement(\"header\");function b(e){return[].slice.call(e)}function c(f,e){return{m:f,a:b(e)}}var a=function(f){var g={};g._sourceName=f;g._replay=[];g.getNow=function(i,h){return h};function e(i,h,j){i[j]=function(){g._replay.push(h.concat(c(j,arguments)))}}g.when=function(){var i=[c(\"when\",arguments)];var h={};e(h,i,\"run\");e(h,i,\"declare\");e(h,i,\"publish\");e(h,i,\"build\");return h};e(g,[],\"declare\");e(g,[],\"build\");e(g,[],\"publish\");e(g,[],\"importEvent\");a._shims.push(g);return g};a._shims=[];if(!d.$Nav){d.$Nav=a(\"rcx-nav\")}if(!d.$Nav.make){d.$Nav.make=a}}(window));\n$Nav.importEvent('navbarJS-beaconbelt');\n$Nav.declare('img.sprite', {\n  'png8': 'https://images-na.ssl-images-amazon.com/images/G/01/gno/sprites/global-sprite_bluebeacon-v1._CB327533540_.png',\n  'png32': 'https://images-na.ssl-images-amazon.com/images/G/01/gno/sprites/nav-sprite-global_bluebeacon-1x_optimized_layout1._CB468670774_.png',\n  'png32-2x': 'https://images-na.ssl-images-amazon.com/images/G/01/gno/sprites/nav-sprite-global_bluebeacon-2x_optimized_layout1._CB468670774_.png'\n});\n$Nav.declare('img.timeline', {\n  'timeline-icon-2x': 'https://images-na.ssl-images-amazon.com/images/G/01/gno/sprites/timeline_sprite_2x._CB276239408_.png'\n});\nwindow._navbarSpriteUrl = 'https://images-na.ssl-images-amazon.com/images/G/01/gno/sprites/nav-sprite-global_bluebeacon-1x_optimized_layout1._CB468670774_.png';\n$Nav.declare('img.pixel', 'https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/transparent-pixel._CB386942464_.gif');\n\u003C/script>\n\u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/G/01/gno/sprites/nav-sprite-global_bluebeacon-1x_optimized_layout1._CB468670774_.png\" style=\"display:none\" alt=\"\">\n\u003C!--[if IE 6]>\n\u003Cstyle type=\"text/css\">\u003C!--\n  #navbar.nav-sprite-v3 .nav-sprite {\n    background-image: url(https://images-na.ssl-images-amazon.com/images/G/01/gno/sprites/global-sprite_bluebeacon-v1._CB327533540_.png);\n  }\n-->\n\u003C!--[endif]---->\n\u003C!-- NAVYAAN JS -->\n\u003Cscript>\n(window.AmazonUIPageJS ? AmazonUIPageJS : P).when('navCF').execute(function() {\n  (window.AmazonUIPageJS ? AmazonUIPageJS : P).load.js('https://images-na.ssl-images-amazon.com/images/I/41JaAK2ibOL._RC|716XjWoH3+L.js,61qWn4HFtuL.js,41W9ohA0e+L.js,11vrNkbdcvL.js,21SHd9g2LAL.js,31xiyyWg1kL.js,51YeRc8UK1L.js,31s6nx4RntL.js_.js?AUIClients/AmazonNavigationDesktopMetaAsset#desktop');\n});\n\u003C/script>\n\u003C!-- sp:feature:navbar -->\n\u003C!-- NAVYAAN -->\n\n\n\n\n\n\n\n\u003C!--Pilu -->\n\n\u003C!-- navmet initial definition -->\n\n\n\u003Cscript type=\"text/javascript\">\n    if(window.navmet===undefined) {\n      window.navmet=[];\n      if (window.performance && window.performance.timing && window.ue_t0) {\n        var t = window.performance.timing;\n        var now = + new Date();\n        window.navmet.basic = {\n          'networkLatency': (t.responseStart - t.fetchStart),\n          'navFirstPaint': (now - t.responseStart),\n          'NavStart': (now - window.ue_t0)\n        };\n      }\n    }\n\u003C/script>\n\n\n\n\n\u003Cscript type=\"text/javascript\">window.navmet.tmp=+new Date();\u003C/script>\n  \u003Cscript type=\"text/javascript\">\n    window.uet && uet('ns');\n    window._navbar = (function (o) {\n      o.componentLoaded = o.loading = function(){};\n      o.browsepromos = {};\n      o.issPromos = [];\n      return o;\n    }(window._navbar || {}));\n    window._navbar.declareOnLoad = function () { window.$Nav && $Nav.declare('page.load'); };\n    if (window.addEventListener) {\n      window.addEventListener(\"load\", window._navbar.declareOnLoad, false);\n    } else if (window.attachEvent) {\n      window.attachEvent(\"onload\", window._navbar.declareOnLoad);\n    } else if (window.$Nav) {\n      $Nav.when('page.domReady').run(\"OnloadFallbackSetup\", function () {\n        window._navbar.declareOnLoad();\n      });\n    }\n    window.$Nav && $Nav.declare('logEvent.enabled',\n      'false');\n\n    window.$Nav && $Nav.declare('config.lightningDeals', {});\n  \u003C/script>\n\n    \u003Cstyle mark=\"aboveNavInjectionCSS\" type=\"text/css\">\n      div#navSwmHoliday.nav-focus {border: none;margin: 0;}\n    \u003C/style>\n    \u003Cscript mark=\"aboveNavInjectionJS\" type=\"text/javascript\">\n      try {\n        if(window.navmet===undefined)window.navmet=[]; if(window.$Nav) { $Nav.when('$', 'config', 'flyout.accountList', 'SignInRedirect', 'dataPanel').run('accountListRedirectFix', function ($, config, flyout, SignInRedirect, dataPanel) { if (!config.accountList) { return; } flyout.getPanel().onData(function (data) { if (SignInRedirect) { var $anchors = $('[data-nav-role=signin]', flyout.elem()); $.each($anchors, function(i, anchorEl) {SignInRedirect.setRedirectUrl($(anchorEl), null, null);});}});}); $Nav.when('$').run('defineIsArray', function(jQuery) { if(jQuery.isArray===undefined) { jQuery.isArray=function(param) { if(param.length===undefined) { return false; } return true; }; } }); $Nav.declare('config.cartFlyoutDisabled', 'true'); $Nav.when('$','$F','config','logEvent','panels','phoneHome','dataPanel','flyouts.renderPromo','flyouts.sloppyTrigger','flyouts.accessibility','util.mouseOut','util.onKey','debug.param').build('flyouts.buildSubPanels',function($,$F,config,logEvent,panels,phoneHome,dataPanel,renderPromo,createSloppyTrigger,a11yHandler,mouseOutUtility,onKey,debugParam){var flyoutDebug=debugParam('navFlyoutClick');return function(flyout,event){var linkKeys=[];$('.nav-item',flyout.elem()).each(function(){var $item=$(this);linkKeys.push({link:$item,panelKey:$item.attr('data-nav-panelkey')});});if(linkKeys.length===0){return;} var visible=false;var $parent=$('\u003Cdiv class=\\'nav-subcats\\'>\u003C/div>').appendTo(flyout.elem());var panelGroup=flyout.getName()+'SubCats';var hideTimeout=null;var sloppyTrigger=createSloppyTrigger($parent);var showParent=function(){if(hideTimeout){clearTimeout(hideTimeout);hideTimeout=null;} if(visible){return;} var height=$('#nav-flyout-shopAll').height(); $parent.css({'height': height});$parent.animate({width:'show'},{duration:200,complete:function(){$parent.css({overflow:'visible'});}});visible=true;};var hideParentNow=function(){$parent.stop().css({overflow:'hidden',display:'none',width:'auto',height:'auto'});panels.hideAll({group:panelGroup});visible=false;if(hideTimeout){clearTimeout(hideTimeout);hideTimeout=null;}};var hideParent=function(){if(!visible){return;} if(hideTimeout){clearTimeout(hideTimeout);hideTimeout=null;} hideTimeout=setTimeout(hideParentNow,10);};flyout.onHide(function(){sloppyTrigger.disable();hideParentNow();this.elem().hide();});var addPanel=function($link,panelKey){var panel=dataPanel({className:'nav-subcat',dataKey:panelKey,groups:[panelGroup],spinner:false,visible:false});if(!flyoutDebug){var mouseout=mouseOutUtility();mouseout.add(flyout.elem());mouseout.action(function(){panel.hide();});mouseout.enable();} var a11y=a11yHandler({link:$link,onEscape:function(){panel.hide();$link.focus();}});var logPanelInteraction=function(promoID,wlTriggers){var logNow=$F.once().on(function(){var panelEvent=$.extend({},event,{id:promoID});if(config.browsePromos&&!!config.browsePromos[promoID]){panelEvent.bp=1;} logEvent(panelEvent);phoneHome.trigger(wlTriggers);});if(panel.isVisible()&&panel.hasInteracted()){logNow();}else{panel.onInteract(logNow);}};panel.onData(function(data){renderPromo(data.promoID,panel.elem());logPanelInteraction(data.promoID,data.wlTriggers);});panel.onShow(function(){var columnCount=$('.nav-column',panel.elem()).length;panel.elem().addClass('nav-colcount-'+columnCount);showParent();var $subCatLinks=$('.nav-subcat-links > a',panel.elem());var length=$subCatLinks.length;if(length>0){var firstElementLeftPos=$subCatLinks.eq(0).offset().left;for(var i=1;i\u003Clength;i++){if(firstElementLeftPos===$subCatLinks.eq(i).offset().left){$subCatLinks.eq(i).addClass('nav_linestart');}} if($('span.nav-title.nav-item',panel.elem()).length===0){var catTitle=$.trim($link.html());catTitle=catTitle.replace(/ref=sa_menu_top/g,'ref=sa_menu');var $subPanelTitle=$('\u003Cspan class=\\'nav-title nav-item\\'>'+ catTitle+'\u003C/span>');panel.elem().prepend($subPanelTitle);}} $link.addClass('nav-active');});panel.onHide(function(){$link.removeClass('nav-active');hideParent();a11y.disable();sloppyTrigger.disable();});panel.onShow(function(){a11y.elems($('a, area',panel.elem()));});sloppyTrigger.register($link,panel);if(flyoutDebug){$link.click(function(){if(panel.isVisible()){panel.hide();}else{panel.show();}});} var panelKeyHandler=onKey($link,function(){if(this.isEnter()||this.isSpace()){panel.show();}},'keydown',false);$link.focus(function(){panelKeyHandler.bind();}).blur(function(){panelKeyHandler.unbind();});panel.elem().appendTo($parent);};var hideParentAndResetTrigger=function(){hideParent();sloppyTrigger.disable();};for(var i=0;i\u003ClinkKeys.length;i++){var item=linkKeys[i];if(item.panelKey){addPanel(item.link,item.panelKey);}else{item.link.mouseover(hideParentAndResetTrigger);}}};});};\n      } catch ( err ) {\n        if ( window.$Nav ) {\n          window.$Nav.when('metrics', 'logUeError').run(function(metrics, log) {\n            metrics.increment('NavJS:AboveNavInjection:error');\n            log(err.toString(), {\n              'attribution': 'rcx-nav',\n              'logLevel': 'FATAL'\n            });\n          });\n        }\n      }\n    \u003C/script>\n\n  \u003Cnoscript>\n    \u003Cstyle type=\"text/css\">\u003C!--\n      #navbar #nav-shop .nav-a:hover {\n        color: #ff9900;\n        text-decoration: underline;\n      }\n      #navbar #nav-search .nav-search-facade,\n      #navbar #nav-tools .nav-icon,\n      #navbar #nav-shop .nav-icon,\n      #navbar #nav-subnav .nav-hasArrow .nav-arrow {\n        display: none;\n      }\n      #navbar #nav-search .nav-search-submit,\n      #navbar #nav-search .nav-search-scope {\n        display: block;\n      }\n      #nav-search .nav-search-scope {\n        padding: 0 5px;\n      }\n      #navbar #nav-search .nav-search-dropdown {\n        position: relative;\n        top: 5px;\n        height: 23px;\n        font-size: 14px;\n        opacity: 1;\n        filter: alpha(opacity = 100);\n      }\n    -->\u003C/style>\n \u003C/noscript>\n\u003Cscript type=\"text/javascript\">window.navmet.push({key:'PreNav',end:+new Date(),begin:window.navmet.tmp});\u003C/script>\n\n\u003Ca id=\"nav-top\">\u003C/a>\n\n\n\n\n\u003Ca id=\"skiplink\" tabindex=\"3\" class=\"skip-link\">Skip to main content\u003C/a>\n\n\n\n\n\n\n\u003Cscript type=\"text/javascript\">window.navmet.main=+new Date();\u003C/script>\n\n\u003Cheader class=\"nav-opt-sprite nav-locale-us nav-lang-en nav-ssl nav-unrec\">\n    \n  \u003Cdiv id=\"navbar\" cel_widget_id=\"Navigation-desktop-navbar\" data-template=\"layoutSwapToolBar\" role=\"navigation\" class=\"nav-sprite-v1 celwidget nav-bluebeacon nav-packard-glow nav-a11y-t1\">\n    \n    \n    \u003Cdiv id=\"nav-belt\">\n      \n      \n      \n      \u003Cdiv class=\"nav-left\">\n        \u003Cscript type=\"text/javascript\">window.navmet.tmp=+new Date();\u003C/script>\n\u003Cscript type=\"text/javascript\">window.navmet.push({key:'HamburgerMenuIcon',end:+new Date(),begin:window.navmet.tmp});\u003C/script>\n        \n        \n        \u003Cscript type=\"text/javascript\">window.navmet.tmp=+new Date();\u003C/script>\n  \u003Cdiv id=\"nav-logo\">\n    \u003Ca href=\"/ref=nav_logo\" class=\"nav-logo-link\" aria-label=\"Amazon\" tabindex=\"6\">\n      \u003Cspan class=\"nav-sprite nav-logo-base\">\u003C/span>\n      \u003Cspan class=\"nav-sprite nav-logo-ext\">\u003C/span>\n      \u003Cspan class=\"nav-sprite nav-logo-locale\">\u003C/span>\n    \u003C/a>\n  \u003C/div>\n\u003Cscript type=\"text/javascript\">window.navmet.push({key:'Logo',end:+new Date(),begin:window.navmet.tmp});\u003C/script>\n      \u003C/div>\n      \u003Cdiv class=\"nav-right\">\n          \u003Cscript type=\"text/javascript\">window.navmet.tmp=+new Date();\u003C/script>\n          \u003Cdiv id=\"nav-tools\" class=\"layoutToolbarPadding\">\n              \n              \n              \n              \n  \u003Ca href=\"/gp/customer-preferences/select-language/ref=topnav_lang?preferencesReturnUrl=%2Fdp%2FB06XD3LXXK\" id=\"icp-nav-flyout\" class=\"nav-a nav-a-2 icp-link-style-2\">\n    \u003Cspan class=\"icp-nav-link-inner\">\n      \u003Cspan class=\"nav-line-1\">\n        \u003Cspan class=\"icp-nav-globe-img-2\">\u003C/span>\n        \u003Cspan class=\"icp-nav-language\">EN\u003C/span>\n      \u003C/span>\n      \u003Cspan class=\"nav-line-2\">&nbsp;\n        \u003Cspan class=\"nav-icon nav-arrow\" style=\"visibility: visible;\">\u003C/span>\n      \u003C/span>\n    \u003C/span>\n    \n  \u003C/a>\n\n              \n\u003Ca href=\"https://www.amazon.com/ap/signin?openid.pape.max_auth_age=0&amp;openid.return_to=https%3A%2F%2Fwww.amazon.com%2Fdp%2FB06XD3LXXK%3Fref_%3Dnav_ya_signin&amp;openid.identity=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.assoc_handle=usflex&amp;openid.mode=checkid_setup&amp;openid.claimed_id=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0&amp;\" class=\"nav-a nav-a-2\" data-nav-ref=\"nav_ya_signin\" data-nav-role=\"signin\" data-ux-jq-mouseenter=\"true\" id=\"nav-link-accountList\" tabindex=\"22\">\n  \u003Cspan class=\"nav-line-1\">Hello, Sign in\u003C/span>\n  \u003Cspan class=\"nav-line-2 \">Account &amp; Lists\u003Cspan class=\"nav-icon nav-arrow\" style=\"visibility: visible;\">\u003C/span>\n  \u003C/span>\n  \u003Cspan class=\"nav-line-3\">Sign in\u003C/span>\n  \u003Cspan class=\"nav-line-4\">Account &amp; Lists\u003C/span>\n\u003C/a>\n\n              \n\u003Ca href=\"/gp/css/order-history?ref_=nav_orders_first\" class=\"nav-a nav-a-2 nav-single-row-link\" id=\"nav-orders\" tabindex=\"24\">\n  \u003Cspan class=\"nav-line-1\">\u003C/span>\n  \u003Cspan class=\"nav-line-2\">Orders\u003C/span>\n\u003C/a>\n\n              \n              \n              \n  \u003Ca href=\"/gp/cart/view.html?ref_=nav_cart\" aria-label=\"0 items in cart\" class=\"nav-a nav-a-2\" id=\"nav-cart\" tabindex=\"26\">\n    \u003Cspan aria-hidden=\"true\" class=\"nav-line-1\">\u003C/span>\n    \u003Cspan aria-hidden=\"true\" class=\"nav-line-2\">Cart\u003Cspan class=\"nav-icon nav-arrow\">\u003C/span>\n    \u003C/span>\n    \u003Cspan class=\"nav-cart-icon nav-sprite\">\u003C/span>\n    \u003Cspan id=\"nav-cart-count\" aria-hidden=\"true\" class=\"nav-cart-count nav-cart-0\">0\u003C/span>\n  \u003C/a>\n\n          \u003C/div>\n          \u003Cscript type=\"text/javascript\">window.navmet.push({key:'Tools',end:+new Date(),begin:window.navmet.tmp});\u003C/script>\n\n      \u003C/div>\n      \u003Cdiv class=\"nav-fill\">\n        \n        \n        \n        \u003Cscript type=\"text/javascript\">window.navmet.tmp=+new Date();\u003C/script>\n\u003Cdiv id=\"nav-search\">\n  \u003Cdiv id=\"nav-bar-left\">\u003C/div>\n  \u003Cform accept-charset=\"utf-8\" action=\"/s/ref=nb_sb_noss\" class=\"nav-searchbar\" method=\"GET\" name=\"site-search\" role=\"search\">\n    \u003Cdiv class=\"nav-left\">\n      \u003Cdiv id=\"nav-search-dropdown-card\">\n        \n  \u003Cdiv class=\"nav-search-scope nav-sprite\">\n    \u003Cdiv class=\"nav-search-facade\" data-value=\"search-alias=aps\">\n      \u003Cspan class=\"nav-search-label\" style=\"width: auto;\">Electronics\u003C/span>\n      \u003Ci class=\"nav-icon\">\u003C/i>\n    \u003C/div>\n    \u003Cspan id=\"searchDropdownDescription\" style=\"display:none\">Select the department you want to search in\u003C/span>\n    \u003Cselect aria-describedby=\"searchDropdownDescription\" class=\"nav-search-dropdown searchSelect\" data-nav-digest=\"9D7AUu94CLl3gOayDDcVPTc/CMI=\" data-nav-selected=\"0\" id=\"searchDropdownBox\" name=\"url\" style=\"display: block; top: 0px;\" tabindex=\"18\" title=\"Search in\">\n        \u003Coption selected=\"selected\" current=\"true\" value=\"search-alias=electronics\">Electronics\u003C/option>\n        \u003Coption value=\"search-alias=aps\">All Departments\u003C/option>\n        \u003Coption value=\"search-alias=arts-crafts-intl-ship\">Arts &amp; Crafts\u003C/option>\n        \u003Coption value=\"search-alias=automotive-intl-ship\">Automotive\u003C/option>\n        \u003Coption value=\"search-alias=baby-products-intl-ship\">Baby\u003C/option>\n        \u003Coption value=\"search-alias=beauty-intl-ship\">Beauty &amp; Personal Care\u003C/option>\n        \u003Coption value=\"search-alias=stripbooks-intl-ship\">Books\u003C/option>\n        \u003Coption value=\"search-alias=computers-intl-ship\">Computers\u003C/option>\n        \u003Coption value=\"search-alias=digital-music\">Digital Music\u003C/option>\n        \u003Coption value=\"search-alias=electronics-intl-ship\">Electronics\u003C/option>\n        \u003Coption value=\"search-alias=digital-text\">Kindle Store\u003C/option>\n        \u003Coption value=\"search-alias=instant-video\">Prime Video\u003C/option>\n        \u003Coption value=\"search-alias=fashion-womens-intl-ship\">Women's Fashion\u003C/option>\n        \u003Coption value=\"search-alias=fashion-mens-intl-ship\">Men's Fashion\u003C/option>\n        \u003Coption value=\"search-alias=fashion-girls-intl-ship\">Girls' Fashion\u003C/option>\n        \u003Coption value=\"search-alias=fashion-boys-intl-ship\">Boys' Fashion\u003C/option>\n        \u003Coption value=\"search-alias=deals-intl-ship\">Deals\u003C/option>\n        \u003Coption value=\"search-alias=hpc-intl-ship\">Health &amp; Household\u003C/option>\n        \u003Coption value=\"search-alias=kitchen-intl-ship\">Home &amp; Kitchen\u003C/option>\n        \u003Coption value=\"search-alias=industrial-intl-ship\">Industrial &amp; Scientific\u003C/option>\n        \u003Coption value=\"search-alias=luggage-intl-ship\">Luggage\u003C/option>\n        \u003Coption value=\"search-alias=movies-tv-intl-ship\">Movies &amp; TV\u003C/option>\n        \u003Coption value=\"search-alias=music-intl-ship\">Music, CDs &amp; Vinyl\u003C/option>\n        \u003Coption value=\"search-alias=pets-intl-ship\">Pet Supplies\u003C/option>\n        \u003Coption value=\"search-alias=software-intl-ship\">Software\u003C/option>\n        \u003Coption value=\"search-alias=sporting-intl-ship\">Sports &amp; Outdoors\u003C/option>\n        \u003Coption value=\"search-alias=tools-intl-ship\">Tools &amp; Home Improvement\u003C/option>\n        \u003Coption value=\"search-alias=toys-and-games-intl-ship\">Toys &amp; Games\u003C/option>\n        \u003Coption value=\"search-alias=videogames-intl-ship\">Video Games\u003C/option>\n    \u003C/select>\n  \u003C/div>\n\n      \u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"nav-right\">\n      \u003Cdiv class=\"nav-search-submit nav-sprite\">\n        \u003Cspan id=\"nav-search-submit-text\" class=\"nav-search-submit-text nav-sprite\">\n          Go\n        \u003C/span>\n        \u003Cinput type=\"submit\" class=\"nav-input\" value=\"Go\" tabindex=\"20\">\n      \u003C/div>\n    \u003C/div>\n    \u003Cdiv class=\"nav-fill\">\n      \u003Cdiv class=\"nav-search-field \">\n        \u003Clabel id=\"nav-search-label\" for=\"twotabsearchtextbox\" class=\"aok-offscreen\">\n          Search\n        \u003C/label>\n        \u003Cinput type=\"text\" id=\"twotabsearchtextbox\" value=\"\" name=\"field-keywords\" autocomplete=\"off\" placeholder=\"\" class=\"nav-input\" dir=\"auto\" tabindex=\"19\">\n      \u003C/div>\n      \u003Cdiv id=\"nav-iss-attach\">\u003C/div>\n    \u003C/div>\n  \u003C/form>\n\u003C/div>\n\u003Cscript type=\"text/javascript\">window.navmet.push({key:'Search',end:+new Date(),begin:window.navmet.tmp});\u003C/script>\n      \u003C/div>\n    \u003Cdiv id=\"nav-flyout-anchor\">\u003Cdiv id=\"nav-flyout-prime\" class=\"nav-coreFlyout nav-flyout\">\u003Cdiv class=\"nav-arrow\">\u003Cdiv class=\"nav-arrow-inner\">\u003C/div>\u003C/div>\u003Cdiv class=\"nav-template nav-flyout-content nav-spinner\">\u003C/div>\u003C/div>\u003Cdiv id=\"nav-flyout-accountList\" class=\"nav-coreFlyout nav-flyout\">\u003Cdiv class=\"nav-arrow\">\u003Cdiv class=\"nav-arrow-inner\">\u003C/div>\u003C/div>\u003Cdiv class=\"nav-template nav-flyout-content\">\u003Cdiv id=\"nav-al-container\">\u003Cdiv id=\"nav-al-signin\">\u003Cdiv id=\"nav-flyout-ya-signin\" class=\"nav-flyout-content\">\u003Ca href=\"/gp/navigation/redirector.html/ref=sign-in-redirect?ie=UTF8&amp;associationHandle=usflex&amp;currentPageURL=https%3A%2F%2Fwww.amazon.com%2Fdp%2FB06XD3LXXK%3Fref_%3Dnav_signin&amp;pageType=Detail&amp;switchAccount=&amp;yshURL=https%3A%2F%2Fwww.amazon.com%2Fgp%2Fyourstore%2Fhome%3Fie%3DUTF8%26ref_%3Dnav_signin\" rel=\"nofollow\" class=\"nav-action-button\" data-nav-role=\"signin\" data-nav-ref=\"nav_signin\">\u003Cspan class=\"nav-action-inner\">Sign in\u003C/span>\u003C/a>\u003Cdiv id=\"nav-flyout-ya-newCust\" class=\"nav_pop_new_cust nav-flyout-content\">New customer? \u003Ca href=\"https://www.amazon.com/ap/register?_encoding=UTF8&amp;openid.assoc_handle=usflex&amp;openid.claimed_id=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.identity=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.mode=checkid_setup&amp;openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0&amp;openid.ns.pape=http%3A%2F%2Fspecs.openid.net%2Fextensions%2Fpape%2F1.0&amp;openid.pape.max_auth_age=0&amp;openid.return_to=https%3A%2F%2Fwww.amazon.com%2Fgp%2Fyourstore%2Fhome%3Fie%3DUTF8%26ref_%3Dnav_newcust\" rel=\"nofollow\" class=\"nav-a\">Start here.\u003C/a>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv id=\"nav-al-wishlist\" class=\"nav-al-column nav-tpl-itemList\">\u003Ca href=\"/gp/registry/wishlist?ie=UTF8&amp;ref_=flyout_yl_header\" class=\"nav-al-flyout-header\" id=\"nav-al-title\">\u003Cdiv class=\"nav-title\">Your Lists\u003C/div>\u003C/a>\u003Ca href=\"/gp/registry/wishlist?ie=UTF8&amp;ref_=nav_wishlist_create&amp;triggerElementID=createList\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Create a List\u003C/span>\u003C/a>\u003Ca href=\"/gcx/Gifts-for-Everyone/gfhz/?_encoding=UTF8&amp;ref_=nav_wishlist_gf\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Find a Gift\u003C/span>\u003C/a>\u003Ca href=\"/gp/BIT?ie=UTF8&amp;bitCampaignCode=a0032&amp;ref_=nav_wishlist_bit_v2_a0032\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Save Items from the Web\u003C/span>\u003C/a>\u003Ca href=\"/wedding/home?_encoding=UTF8&amp;ref_=nav_wishlist_wr\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Wedding Registry\u003C/span>\u003C/a>\u003Ca href=\"/baby-reg/homepage?_encoding=UTF8&amp;ref_=nav_wishlist_br\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Baby Registry\u003C/span>\u003C/a>\u003Ca href=\"/gp/gift-central/organizer?ie=UTF8&amp;ref_=nav_wishlist_fafgift\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Friends &amp; Family Gifting\u003C/span>\u003C/a>\u003Ca href=\"/gp/clpf?ie=UTF8&amp;ref_=nav_wishlist_smi_se_ya_lll_ll\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">AmazonSmile Charity Lists\u003C/span>\u003C/a>\u003Ca href=\"/gp/pantry/yourlists?ie=UTF8&amp;ref_=nav_wishlist_pntry_gno\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Pantry Lists\u003C/span>\u003C/a>\u003Ca href=\"/ideas/saves?_encoding=UTF8&amp;ref_=nav_wishlist_strm_in_youtique_lists\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Your Hearts\u003C/span>\u003C/a>\u003Ca href=\"/ideas?_encoding=UTF8&amp;ref_=nav_wishlist_idea_nav\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Explore Idea Lists\u003C/span>\u003C/a>\u003Ca href=\"/showroom?_encoding=UTF8&amp;ref_=nav_wishlist_srm_your_desk_wl\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Explore Showroom\u003C/span>\u003C/a>\u003Ca href=\"/stylequiz/?_encoding=UTF8&amp;ref_=nav_wishlist_sq_ya_yl\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Take the Home Style Quiz\u003C/span>\u003C/a>\u003C/div>\u003Cdiv id=\"nav-al-your-account\" class=\"nav-al-column nav-template nav-flyout-content nav-tpl-itemList\">\u003Ca href=\"/gp/css/homepage.html?ie=UTF8&amp;ref_=ya\" class=\"nav-al-flyout-header\">\u003Cdiv class=\"nav-title\">Your Account\u003C/div>\u003C/a>\u003Ca href=\"/gp/css/homepage.html?ie=UTF8&amp;ref_=nav_youraccount_ya\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Your Account\u003C/span>\u003C/a>\u003Ca href=\"/gp/css/order-history?ie=UTF8&amp;ref_=nav_youraccount_orders\" class=\"nav-link nav-item\" id=\"nav_prefetch_yourorders\">\u003Cspan class=\"nav-text\">Your Orders\u003C/span>\u003C/a>\u003Ca href=\"/gp/registry/wishlist?ie=UTF8&amp;ref_=nav_youraccount_wl&amp;requiresSignIn=1\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Your Lists\u003C/span>\u003C/a>\u003Ca href=\"/gp/yourstore?ie=UTF8&amp;ref_=nav_youraccount_recs\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Your Recommendations\u003C/span>\u003C/a>\u003Ca href=\"/gp/subscribe-and-save/manager/viewsubscriptions?ie=UTF8&amp;ref_=nav_youraccount_sns\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Your Subscribe &amp; Save Items\u003C/span>\u003C/a>\u003Ca href=\"/yourmembershipsandsubscriptions?_encoding=UTF8&amp;ref_=nav_youraccount_digital_subscriptions\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Memberships &amp; Subscriptions\u003C/span>\u003C/a>\u003Ca href=\"/localservices/ya/servicerequests?_encoding=UTF8&amp;ref_=nav_youraccount_desktop_vas_requestlist\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Your Service Requests\u003C/span>\u003C/a>\u003Ca href=\"/gp/your-garage/?ie=UTF8&amp;ref_=nav_youraccount_au_pf_as_GNO\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Your Garage\u003C/span>\u003C/a>\u003Ca href=\"/fanshop?_encoding=UTF8&amp;ref_=nav_youraccount_yfs\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Your Fanshop\u003C/span>\u003C/a>\u003Ca href=\"/yourpets?_encoding=UTF8&amp;ref_=nav_youraccount_pet_profiles\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Your Pets\u003C/span>\u003C/a>\u003Ca href=\"/mn/dcw/myx.html?_encoding=UTF8&amp;ref_=nav_youraccount_myk\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Your Content and Devices\u003C/span>\u003C/a>\u003Ca href=\"/gp/dmusic/mp3/player?ie=UTF8&amp;ref_=nav_youraccount_cldplyr\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Your Music Library\u003C/span>\u003C/a>\u003Ca href=\"/clouddrive?_encoding=UTF8&amp;ref_=nav_youraccount_clddrv\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Your Amazon Drive\u003C/span>\u003C/a>\u003Ca href=\"/Prime-Instant-Video/s/browse?_encoding=UTF8&amp;node=2676882011&amp;ref_=nav_youraccount_piv\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Your Prime Video\u003C/span>\u003C/a>\u003Ca href=\"/gp/kindle/ku/ku_central?ie=UTF8&amp;ref_=nav_youraccount_ku\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Your Kindle Unlimited\u003C/span>\u003C/a>\u003Ca href=\"/gp/video/watchlist?ie=UTF8&amp;ref_=nav_youraccount_ywl\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Your Watchlist\u003C/span>\u003C/a>\u003Ca href=\"/gp/video/library?ie=UTF8&amp;ref_=nav_youraccount_yvl\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Your Video Library\u003C/span>\u003C/a>\u003Ca href=\"/gp/mas/your-account/myapps?ie=UTF8&amp;ref_=nav_youraccount_aad\" class=\"nav-link nav-item\">\u003Cspan class=\"nav-text\">Your Android Apps &amp; Devices\u003C/span>\u003C/a>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv class=\"nav-subcats\">\u003C/div>\u003C/div>\u003Cdiv id=\"nav-flyout-shopAll\" class=\"nav-catFlyout nav-flyout\">\u003Cdiv class=\"nav-arrow\">\u003Cdiv class=\"nav-arrow-inner\">\u003C/div>\u003C/div>\u003Cdiv class=\"nav-template nav-flyout-content nav-tpl-itemList\">                            \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=2858778011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_video\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Prime Video\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=5174&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_cd\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Music, CDs &amp; Vinyl\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=163856011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_music\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Digital Music\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=133140011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_kindle\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Kindle Store\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=4954955011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_arts\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Arts &amp; Crafts\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=2562090011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_automotive\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Automotive\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=16225005011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_baby\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Baby\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=16225006011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_beauty\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Beauty &amp; Personal Care\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=283155&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_books\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Books\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=16225007011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_computers\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Computers\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=16225009011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_electronics\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Electronics\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=16225018011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_womenfasion\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Women's Fashion\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=16225019011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_menfasion\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Men's Fashion\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=16225020011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_girlfasion\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Girls' Fashion\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=16225021011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_boyfasion\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Boys' Fashion\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=16225010011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_health\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Health &amp; Household\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=16225011011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_kitchen\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Home &amp; Kitchen\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=16225012011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_industrial\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Industrial &amp; Scientific\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=16225017011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_luggage\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Luggage\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=2625373011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_movies\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Movies &amp; Television\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=16225013011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_pet\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Pet Supplies\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=16225008011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_software\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Software\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=16225014011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_sports\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Sports &amp; Outdoors\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=256643011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_tools\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Tools &amp; Home Improvement\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=16225015011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_toys\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Toys &amp; Games\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=16225016011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_video_games\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Video Games\u003C/span>                          \u003C/a>                                              \u003Ca href=\"/s/browse?_encoding=UTF8&amp;node=15529609011&amp;ref_=nav_shopall-export_nav_mw_sbd_intl_sales\" class=\"nav-link                                    nav-item\">                          \u003Cspan class=\"nav-text\">Deals\u003C/span>                          \u003C/a>                    \u003C/div>\u003Cdiv class=\"nav-subcats\">\u003C/div>\u003C/div>\u003Cdiv id=\"nav-flyout-transientFlyout\" class=\"nav-coreFlyout nav-flyout\">\u003Cdiv class=\"nav-arrow\">\u003Cdiv class=\"nav-arrow-inner\">\u003C/div>\u003C/div>\u003Cdiv class=\"nav-template nav-flyout-content nav-spinner\">\u003C/div>\u003C/div>\u003Cdiv class=\"nav-signin-tt nav-flyout\" style=\"display: block; position: absolute; top: 7px; left: 688.109px; opacity: 1;\">\u003Cdiv class=\"nav-arrow\">\u003Cdiv class=\"nav-arrow-inner\">\u003C/div>\u003C/div>\u003Cdiv id=\"nav-signin-tooltip\">\u003Ca href=\"/gp/navigation/redirector.html/ref=sign-in-redirect?ie=UTF8&amp;associationHandle=usflex&amp;currentPageURL=https%3A%2F%2Fwww.amazon.com%2Fdp%2FB06XD3LXXK%3Fref_%3Dnav_custrec_signin&amp;pageType=Detail&amp;switchAccount=&amp;yshURL=https%3A%2F%2Fwww.amazon.com%2Fgp%2Fyourstore%2Fhome%3Fie%3DUTF8%26ref_%3Dnav_custrec_signin\" class=\"nav-action-button\" data-nav-role=\"signin\" data-nav-ref=\"nav_custrec_signin\">\u003Cspan class=\"nav-action-inner\">Sign in\u003C/span>\u003C/a>\u003Cdiv class=\"nav-signin-tooltip-footer\">New customer? \u003Ca href=\"https://www.amazon.com/ap/register?_encoding=UTF8&amp;openid.assoc_handle=usflex&amp;openid.claimed_id=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.identity=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.mode=checkid_setup&amp;openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0&amp;openid.ns.pape=http%3A%2F%2Fspecs.openid.net%2Fextensions%2Fpape%2F1.0&amp;openid.pape.max_auth_age=0&amp;openid.return_to=https%3A%2F%2Fwww.amazon.com%2Fgp%2Fyourstore%2Fhome%3Fie%3DUTF8%26ref_%3Dnav_custrec_newcust\" class=\"nav-a\">Start here.\u003C/a>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv id=\"nav-flyout-icp\" class=\"nav-coreFlyout nav-flyout\">\u003Cdiv class=\"nav-arrow\">\u003Cdiv class=\"nav-arrow-inner\">\u003C/div>\u003C/div>\u003Cdiv class=\"nav-template nav-flyout-content nav-spinner\">\u003C/div>\u003C/div>\u003Cdiv id=\"nav-flyout-icp-footer-flyout\" class=\"nav-coreFlyout nav-flyout\">\u003Cdiv class=\"nav-arrow\">\u003Cdiv class=\"nav-arrow-inner\">\u003C/div>\u003C/div>\u003Cdiv class=\"nav-template nav-flyout-content nav-spinner\">\u003C/div>\u003C/div>\u003C/div>\u003Cdiv id=\"nav-flyout-iss-anchor\">\u003Cdiv id=\"nav-flyout-searchAjax\" class=\"nav-issFlyout nav-flyout\">\u003Cdiv class=\"nav-template nav-flyout-content\">\u003C/div>\u003C/div>\u003C/div>\u003C/div>\n    \u003Cdiv id=\"nav-main\" class=\"nav-sprite\">\n      \n      \n      \n      \n      \n      \u003Cdiv class=\"nav-left\">\n        \n        \n        \n\n\n\u003Cdiv id=\"nav-global-location-slot\">\u003Cspan class=\"a-declarative\" data-a-modal=\"{&quot;width&quot;:375,&quot;closeButton&quot;:&quot;false&quot;,&quot;popoverLabel&quot;:&quot;Choose your location&quot;,&quot;name&quot;:&quot;glow-modal&quot;,&quot;url&quot;:&quot;/gp/glow/get-address-selections.html?selectedLocationType=COUNTRY_CODE&amp;selectedLocationValue=CA&amp;deviceType=desktop&amp;pageType=Detail&amp;storeContext=pc&quot;,&quot;footer&quot;:&quot;\u003Cspan class=\\&quot;a-declarative\\&quot; data-action=\\&quot;a-popover-close\\&quot; data-a-popover-close=\\&quot;{}\\&quot;>\u003Cspan class=\\&quot;a-button a-button-primary\\&quot;>\u003Cspan class=\\&quot;a-button-inner\\&quot;>\u003Cbutton name=\\&quot;glowDoneButton\\&quot; class=\\&quot;a-button-text\\&quot; type=\\&quot;button\\&quot;>Done\u003C/button>\u003C/span>\u003C/span>\u003C/span>&quot;,&quot;header&quot;:&quot;Choose your location&quot;}\" data-action=\"a-modal\">\u003Ca class=\"nav-a nav-a-2 a-popover-trigger a-declarative\" tabindex=\"35\">\u003Cdiv class=\"nav-sprite\" id=\"nav-packard-glow-loc-icon\">\u003C/div>\u003Cdiv id=\"glow-ingress-block\">\u003Cspan class=\"nav-line-1\" id=\"glow-ingress-line1\">Deliver to\u003C/span>\u003Cspan class=\"nav-line-2\" id=\"glow-ingress-line2\">Canada\u003C/span>\u003C/div>\u003C/a>\u003C/span>\u003Cinput data-addnewaddress=\"add-new\" id=\"unifiedLocation1ClickAddress\" name=\"dropdown-selection\" type=\"hidden\" value=\"add-new\">\u003Cinput data-addnewaddress=\"add-new\" id=\"ubbShipTo\" name=\"dropdown-selection-ubb\" type=\"hidden\" value=\"add-new\">\u003C/div>\n\n\n\n    \n\n\n\n\n\u003Cscript>\nP.when(\"glow-toaster-strings\").execute(function (S) { S.load({\"glow-toaster-unknown-error\":\"An error has occurred. Please try again.\",\"glow-toaster-address-change-error\":\"An error has occurred and the address has not been updated. Please try again.\"}); });\n\u003C/script>\n\n\n\n\n\n\u003Cscript>\nP.when(\"glow-toaster-manager\").execute(function (M) { M.create({\"aisTransitionState\":\"IN\",\"pageType\":\"Detail\",\"storeName\":\"pc\",\"rancorLocationSource\":\"IP_GEOLOCATION\"}); });\n\u003C/script>\n\n\n\n        \n        \n        \n        \n        \n        \n        \n      \u003Cdiv data-toaster-blocking=\"0\" data-toaster-slot=\"DEFAULT\" data-toaster-type=\"AIS_INGRESS\" aria-describedby=\"glow-toaster-body\" aria-labelledby=\"glow-toaster-title\" class=\"a-section glow-toaster glow-toaster-theme-default glow-toaster-slot-default nav-coreFlyout nav-flyout\" role=\"alertdialog\" style=\"\" tabindex=\"-1\">\n    \u003Cdiv class=\"glow-toaster-content\">\n            \u003Cdiv class=\"nav-arrow\">\n                \u003Cdiv class=\"nav-arrow-inner\">\u003C/div>\n            \u003C/div>\n\n        \u003Ch5 id=\"glow-toaster-title\" class=\"glow-toaster-title aok-hidden\">\n            International Shopping Transition Alert\n        \u003C/h5>\n\n        \u003Cdiv id=\"glow-toaster-body\" class=\"a-section a-spacing-none glow-toaster-body\">\n            \u003Cspan class=\"a-size-base\">\n                \u003Cdiv style=\"color: black\">\n                    \u003Cdiv class=\"a-box a-alert a-alert-error glow-toaster-error aok-hidden a-spacing-base\" aria-live=\"assertive\" role=\"alert\">\u003Cdiv class=\"a-box-inner a-alert-container\">\u003Ci class=\"a-icon a-icon-alert\">\u003C/i>\u003Cdiv class=\"a-alert-content\">\n                    \u003C/div>\u003C/div>\u003C/div>\n                \u003C/div>\n                \u003Cstrong> We ship internationally\u003C/strong>\u003Cbr>We're showing you items that ship to \u003Cstrong> Canada\u003C/strong>. To see items that ship to a different country, change your delivery address.\u003Cbr>Additional language and currency settings are available.\u003Ca href=\"/gp/help/customer/display.html/ref=icp_flyout?ie=UTF8&amp;nodeId=202085910\"> Learn more\u003C/a>\n\n            \u003C/span>\n        \u003C/div>\n\n            \u003Cdiv class=\"glow-toaster-footer\">\n                    \u003Cspan class=\"a-button a-spacing-top-base a-button-base glow-toaster-button glow-toaster-button-dismiss\">\u003Cspan class=\"a-button-inner\">\u003Cinput data-action-params=\"{&quot;toasterType&quot;:&quot;AIS_INGRESS&quot;}\" data-action-type=\"DISMISS\" class=\"a-button-input\" type=\"submit\">\u003Cspan class=\"a-button-text\" aria-hidden=\"true\">\n                        Don't Change\n                    \u003C/span>\u003C/span>\u003C/span>\n                    \u003Cspan class=\"a-button a-spacing-top-base a-button-primary glow-toaster-button glow-toaster-button-submit\">\u003Cspan class=\"a-button-inner\">\u003Cinput data-action-params=\"\" data-action-type=\"SELECT_LOCATION\" class=\"a-button-input\" type=\"submit\">\u003Cspan class=\"a-button-text\" aria-hidden=\"true\">\n                        Change Address\n                    \u003C/span>\u003C/span>\u003C/span>\n            \u003C/div>\n    \u003C/div>\n\u003C/div>\u003C/div>\n      \u003Cdiv class=\"nav-right\">\n          \n          \n          \n          \u003Cscript type=\"text/javascript\">window.navmet.tmp=+new Date();\u003C/script>\u003C!-- Navyaan SWM -->\n\u003Cdiv id=\"nav-swmslot\">\n  \u003Cdiv id=\"navSwmHoliday\" style=\"height: 39px; width: 400px; overflow: hidden; position: relative; \">\n    \u003Ca aria-label=\"Shop Today's Deals\" href=\"/b/?ie=UTF8&amp;node=15529609011&amp;ref_=nav_swm_AE_EN_SWM_Deals&amp;pf_rd_p=0b6ad79d-73e4-4037-b7c7-83edf48c7d06&amp;pf_rd_s=nav-sitewide-msg-export&amp;pf_rd_t=4201&amp;pf_rd_i=navbar-4201&amp;pf_rd_m=ATVPDKIKX0DER&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W\" class=\"nav-imageHref\" tabindex=\"54\">\n  \u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/G/01/amazonglobal/images/Fuji/SWM/English/2018/September/Fuji_EN_SWM_TodaysDeals_Sep18._CB484652360_.png\">\n\u003C/a>\n      \u003C/div>\n  \n\u003C/div>\u003Cscript type=\"text/javascript\">window.navmet.push({key:'SWM',end:+new Date(),begin:window.navmet.tmp});\u003C/script>\n      \u003C/div>\n      \u003Cdiv class=\"nav-fill\">\n        \n        \n        \n        \n        \n        \n          \n          \n \u003Cdiv id=\"nav-shop\">\n\u003Ca href=\"/gp/site-directory?ref_=nav_shopall_btn\" class=\"nav-a nav-a-2 nav-single-row-link\" data-ux-jq-mouseenter=\"true\" id=\"nav-link-shopall\" tabindex=\"36\">\n  \u003Cspan class=\"nav-line-1\">\u003C/span>\n  \u003Cspan class=\"nav-line-2 \">Departments\u003Cspan class=\"nav-icon nav-arrow\" style=\"visibility: visible;\">\u003C/span>\n  \u003C/span>\n\u003C/a>\n\n \u003C/div>\n          \u003Cdiv id=\"nav-xshop-container\" class=\"\">\n            \u003Cdiv id=\"nav-xshop\">\n              \n              \n              \u003Cscript type=\"text/javascript\">window.navmet.tmp=+new Date();\u003C/script>\n\u003Ca href=\"/international-sales-offers/b/?ie=UTF8&amp;node=15529609011&amp;ref_=nav_navm_intl_deal_btn\" class=\"nav-a\" tabindex=\"47\">Today's Deals\u003C/a>\n\n\u003Ca id=\"nav-your-amazon\" href=\"/gp/yourstore/home?ref_=nav_cs_ys\" class=\"nav-a\" tabindex=\"48\">Your Amazon.com\u003C/a>\n\n\u003Ca href=\"/gift-cards/b/?ie=UTF8&amp;node=2238192011&amp;ref_=nav_cs_gift_cards\" class=\"nav-a\" tabindex=\"49\">Gift Cards\u003C/a>\n\n\u003Ca href=\"/gp/help/customer/display.html?nodeId=508510&amp;ref_=nav_cs_help\" class=\"nav-a\" tabindex=\"50\">Help\u003C/a>\n\n\u003Ca href=\"/gp/browse.html?node=16115931011&amp;ref_=nav_cs_registry\" class=\"nav-a\" tabindex=\"51\">Registry\u003C/a>\n\n\u003Ca href=\"/b/?_encoding=UTF8&amp;ld=AZUSSOA-sell&amp;node=12766669011&amp;ref_=nav_cs_sell\" class=\"nav-a\" tabindex=\"52\">Sell\u003C/a>\n\n\u003Ca href=\"/gp/help/customer/accessibility\" aria-label=\"Click to call our Disability Customer Support line, or reach us directly at 1-888-283-1678\" class=\"nav-hidden-aria\" tabindex=\"53\">Disability Customer Support\u003C/a>\n\u003Cscript type=\"text/javascript\">window.navmet.push({key:'CrossShop',end:+new Date(),begin:window.navmet.tmp});\u003C/script>\n            \u003C/div>\n            \n            \n            \n            \n          \u003C/div>\n        \n      \u003C/div>\n    \u003C/div>\n\n    \u003Cdiv id=\"nav-subnav-toaster\">\u003C/div>\n\n    \n    \n    \n    \n\n    \n    \n\n    \n    \n    \n  \u003C/div>\n\n  \n  \n\n\u003C/header>\n\u003Cscript type=\"text/javascript\">window.navmet.push({key:'NavBar',end:+new Date(),begin:window.navmet.main});\u003C/script>\n\n\n\n    \u003Cscript type=\"text/javascript\">window.navmet.tmp=+new Date();\u003C/script>\n\n\u003Cscript type=\"text/javascript\">\u003C!--\n\nwindow.$Nav && $Nav.declare(\"config.navDeviceType\", \"desktop\");\n\nwindow.$Nav && $Nav.when(\"data\").run(function(data) { data({\"emptyWishlist\":{\"template\":{\"name\":\"flyoutError\",\"data\":{\"error\":{\"button\":{\"text\":\"Your Wishlist\",\"url\":\"/gp/registry/wishlist/137-0530487-6192152?ie=UTF8&ref_=nav_err_empty_wishlist\"},\"title\":\"Oops!\",\"paragraph\":\"Your list is empty\"}}}},\"freshTimeout\":{\"template\":{\"name\":\"flyoutError\",\"data\":{\"error\":{\"title\":\"\u003Cstyle>#nav-flyout-fresh{width:269px;padding:0;}#nav-flyout-fresh .nav-flyout-content{padding:0;}\u003C/style>\u003Ca href='/amazonfresh'>\u003Cimg src='//images-na.ssl-images-amazon.com/images/G/01/omaha/images/yoda/flyout_72dpi._V270255989_.png' />\u003C/a>\"}}}},\"kindleTimeout\":{\"template\":{\"name\":\"flyoutError\",\"data\":{\"error\":{\"paragraph\":\"Unable to retrieve list, please try again later\"}}}},\"shopAllTimeout\":{\"template\":{\"name\":\"flyoutError\",\"data\":{\"error\":{\"paragraph\":\"Unable to retrieve departments, please try again later\"}}}},\"primeTimeout\":{\"template\":{\"name\":\"flyoutError\",\"data\":{\"error\":{\"title\":\"\u003Ca href='/gp/prime?ref_=nav_prime_btn_fb'>\u003Cimg src='//images-na.ssl-images-amazon.com/images/G/01/prime/piv/YourPrimePIV_fallback_CTA._V327346943_.jpg' />\u003C/a>\"}}}},\"errorWishlist\":{\"template\":{\"name\":\"flyoutError\",\"data\":{\"error\":{\"button\":{\"text\":\"Your Wishlist\",\"url\":\"/gp/registry/wishlist/137-0530487-6192152?ie=UTF8&ref_=nav_err_wishlist\"},\"title\":\"Oops!\",\"paragraph\":\"Unable to retrieve your wishlist\"}}}},\"yourAccountContent\":{\"template\":{\"name\":\"flyoutError\",\"data\":{\"error\":{\"button\":{\"text\":\"Your Account\",\"url\":\"/gp/css/homepage.html/137-0530487-6192152?ie=UTF8&ref_=nav_err_youraccount\"},\"title\":\"Oops!\",\"paragraph\":\"Unable to retrieve your account\"}}}},\"cartTimeout\":{\"template\":{\"name\":\"flyoutError\",\"data\":{\"error\":{\"button\":{\"text\":\"Your Cart\",\"url\":\"/gp/cart/view.html/137-0530487-6192152?ie=UTF8&ref_=nav_err_cart_timeout\"},\"title\":\"Oops!\",\"paragraph\":\"Unable to retrieve your cart.\"}}}},\"ewcTimeout\":{\"template\":{\"name\":\"flyoutError\",\"data\":{\"error\":{\"button\":{\"text\":\"Your Cart\",\"url\":\"/gp/cart/view.html/137-0530487-6192152?ie=UTF8&ref_=nav_err_ewc_timeout\"},\"title\":\"Oops!\",\"paragraph\":\"There's a problem loading your cart right now.\"}}}}}); });\n\n  window.$Nav && $Nav.when(\"util.templates\").run(\"FlyoutErrorTemplate\", function (templates) {\n    templates.add(\"flyoutError\", \"\u003C# if(error.title) { #>\u003Cspan class='nav-title'>\u003C#=error.title #>\u003C/span>\u003C# } #>\u003C# if(error.paragraph) { #>\u003Cp class='nav-paragraph'>\u003C#=error.paragraph #>\u003C/p>\u003C# } #>\u003C# if(error.button) { #>\u003Ca href='\u003C#=error.button.url #>' class='nav-action-button' >\u003Cspan class='nav-action-inner'>\u003C#=error.button.text #>\u003C/span>\u003C/a>\u003C# } #>\");\n  });\n\n\n  window.$Nav && $Nav.when(\"data\").run(function(data) { data({}); });\n\nwindow.$Nav && $Nav.declare('config.navDebugHighres', false);\n\n\nwindow.$Nav && $Nav.declare('config.upnavHighResImgInfo',\n  {\"upnav2xImageHeight\":\"\",\"upnav2xImagePath\":\"\"});\n\nwindow.$Nav && $Nav.declare('config.upnav2xAiryPreloadImgInfo',\n  {\"preloadImgPath\":\"\",\"preloadImgHeight\":\"\"});\n\nwindow.$Nav && $Nav.declare('config.upnav2xAiryPostSlateImgInfo',\n  {\"postslateImgHeight\":\"\",\"postslateImgPath\":\"\"});\n\nwindow.$Nav && $Nav.declare('config.pageType', 'Detail');\nwindow.$Nav && $Nav.declare('config.subPageType', '');\n\nwindow.$Nav && $Nav.declare('config.dynamicMenuUrl', '/gp/navigation/ajax/dynamic-menu.html/137-0530487-6192152');\n\nwindow.$Nav && $Nav.declare('config.dismissNotificationUrl',\n  '/gp/navigation/ajax/dismissnotification.html/137-0530487-6192152');\n\nwindow.$Nav && $Nav.declare('config.fixedSubBarBeacon',false);\n\nwindow.$Nav && $Nav.declare('config.enableDynamicMenus', true);\n\nwindow.$Nav && $Nav.declare('config.isInternal', false);\n\nwindow.$Nav && $Nav.declare('config.isRecognized', false);\n\nwindow.$Nav && $Nav.declare('config.transientFlyoutTrigger', '#nav-transient-flyout-trigger');\n\nwindow.$Nav && $Nav.declare('config.subnavFlyoutUrl',\n  '/gp/navigation/ajax/subnav-flyout/137-0530487-6192152');\n\nwindow.$Nav && $Nav.declare('config.recordEvUrl',\n  '/gp/navigation/ajax/recordevent.html/137-0530487-6192152');\nwindow.$Nav && $Nav.declare('config.recordEvInterval', 15000);\nwindow.$Nav && $Nav.declare('config.sessionId', '137-0530487-6192152');\nwindow.$Nav && $Nav.declare('config.requestId', 'WY2K06V7WEMKTC0K2H7W');\n\n\nwindow.$Nav && $Nav.declare('config.alexaListEnabled', true);\n\nwindow.$Nav && $Nav.declare('config.readyOnATF', false);\n\nwindow.$Nav && $Nav.declare('config.dynamicMenuArgs',\n  {\"rid\":\"WY2K06V7WEMKTC0K2H7W\",\"isFullWidthPrime\":0,\"isPrime\":0,\"dynamicRequest\":1,\"weblabs\":\"\",\"isFreshRegionAndCustomer\":\"\",\"primeMenuWidth\":310});\n\nwindow.$Nav && $Nav.declare('config.customerName',\n  false);\n\nwindow.$Nav && $Nav.declare('config.yourAccountPrimeURL',\n  null);\n\nwindow.$Nav && $Nav.declare('config.yourAccountPrimeHover', true);\n\nwindow.$Nav && $Nav.declare('config.searchBackState',\n  {});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    if (typeof uet == 'function') {\n      uet('bb', 'iss-init-pc', {wb: 1});\n    }\n\n    if (!window.$SearchJS && window.$Nav) {\n      window.$SearchJS = $Nav.make('sx');\n    }\n\n  \n  var opts = {\n      host: \"completion.amazon.com/search/complete\"\n    , marketId: \"1\"\n    , obfuscatedMarketId: \"ATVPDKIKX0DER\"\n    , searchAliases: [\"aps\", \"amazon-custom-products\", \"amazon-devices\", \"amazonbasics\", \"amazonfresh\", \"wholefoods\", \"stripbooks\", \"popular\", \"apparel\", \"electronics\", \"sporting\", \"sports-and-fitness\", \"outdoor-recreation\", \"fan-shop\", \"garden\", \"videogames\", \"toys-and-games\", \"jewelry\", \"digital-text\", \"digital-music\", \"prime-digital-music\", \"watches\", \"grocery\", \"hpc\", \"instant-video\", \"handmade\", \"handmade-jewelry\", \"handmade-home-and-kitchen\", \"prime-instant-video\", \"shop-instant-video\", \"baby-products\", \"office-products\", \"software\", \"magazines\", \"tools\", \"automotive\", \"misc\", \"industrial\", \"mi\", \"pet-supplies\", \"digital-music-track\", \"digital-music-album\", \"mobile\", \"mobile-apps\", \"movies-tv\", \"music-artist\", \"music-album\", \"music-song\", \"stripbooks-spanish\", \"electronics-accessories\", \"pantry\", \"photo\", \"audio-video\", \"computers\", \"furniture\", \"kitchen\", \"audible\", \"audiobooks\", \"beauty\", \"shoes\", \"arts-crafts\", \"appliances\", \"gift-cards\", \"pets\", \"outdoor\", \"lawngarden\", \"collectibles\", \"replacement-parts\", \"financial\", \"fine-art\", \"fashion\", \"fashion-womens\", \"fashion-womens-clothing\", \"fashion-womens-jewelry\", \"fashion-womens-shoes\", \"fashion-womens-watches\", \"fashion-womens-handbags\", \"fashion-mens\", \"fashion-mens-clothing\", \"fashion-mens-jewelry\", \"fashion-mens-shoes\", \"fashion-mens-watches\", \"fashion-girls\", \"fashion-girls-clothing\", \"fashion-girls-jewelry\", \"fashion-girls-shoes\", \"fashion-girls-watches\", \"fashion-boys\", \"fashion-boys-clothing\", \"fashion-boys-jewelry\", \"fashion-boys-shoes\", \"fashion-boys-watches\", \"fashion-baby\", \"fashion-baby-boys\", \"fashion-baby-girls\", \"fashion-luggage\", \"3d-printing\", \"tradein-aps\", \"local-services\", \"vehicles\", \"video-shorts\", \"warehouse-deals\", \"luxury-beauty\", \"banjo-apps\", \"black-friday\", \"cyber-monday\", \"alexa-skills\", \"subscribe-with-amazon\", \"courses\", \"edu-alt-content\", \"amazon-global-store\", \"prime-wardrobe\"]\n    , filterAliases: []\n    , pageType: \"Detail\"\n    , requestId: \"WY2K06V7WEMKTC0K2H7W\"\n    , sessionId: \"137-0530487-6192152\"\n    , language: \"en_US\"\n    , customerId: \"\"\n    , b2b: 0\n    , fresh: 0\n    , biaWidgetUrl: \"/gp/yourstore/137-0530487-6192152?ie=UTF8&edit=1&p=QHiL8PxYtH2EkcyJzdmsrx3nznfL5HtCKCVUn3fCUdkVjubVEpJ8z4S4NdUoeLpXmwceHNVuCH4fQ9YSgM%2FeIQ%2F0jPdGG8JY&ref=nb_sb_ss_bia_acct\"\n    , isDdInT3: 0\n    , isDdInT1: 0\n    , isJpOrCn: 0\n    , isUseAuiIss: 1\n  };\n\n  var issOpts = {\n      fallbackFlag: 1\n    , isDigitalFeaturesEnabled: 0\n    , isWayfindingEnabled: 1\n    , dropdown: \"select.searchSelect\"\n    , departmentText: \"in {department}\"\n    , suggestionText: \"Search suggestions\"\n    , recentSearchesTreatment: \"C\"\n    , authorSuggestionText: \"Explore books by XXAUTHXX\"\n    , translatedStringsMap: {\"sx-your-recent-search\":\"Inspired by your recent search\",\"sx-recent-searches\":\"Recent searches\"}\n    , biaTitleText: \"Buy it again\"\n    , biaPurchasedText: \"Purchased\"\n    , biaViewAllText: \"View all\"\n    , biaViewAllManageText: \"View all and manage\"\n    , biaAndText: \"and\"\n    , biaManageText: \"manage\"\n    , biaWeblabTreatment: \"\"\n    , issNavConfig: {}\n    , np: 0\n    , issCorpus: []\n    , cf: 1\n    , removeDeepNodeISS: \"\"\n    , trendingTreatment: \"C\"\n    , useAPIV2: \"\"\n    , opfSwitch: \"\"\n    , isISSDesktopRefactorEnabled: \"1\"\n    , isAPICachingDisabled: \"1\" === \"1\"\n    , isInternal: 0\n    , useServiceHighlighting: \"1\"\n  };\n\n  \n\n  if (opts.isUseAuiIss === 1 && window.$Nav) {\n    window.$Nav.when('sx.iss').run('iss-mason-init', function(iss){\n      var issInitObj = buildIssInitObject(opts, issOpts, true);\n\n      new iss.IssParentCoordinator(issInitObj);\n\n      $SearchJS.declare('canCreateAutocomplete', issInitObj);\n    });\n  } else if (window.$SearchJS) {\n    \n    var iss;\n\n    // BEGIN Deprecated globals\n    var issHost = opts.host\n      , issMktid = opts.marketId\n      , issSearchAliases = opts.searchAliases\n      , updateISSCompletion = function() { iss.updateAutoCompletion(); };\n    // END deprecated globals\n\n    \n    \n    \n    $SearchJS.when('jQuery', 'search-js-autocomplete-lib').run('autocomplete-init', initializeAutocomplete);\n    $SearchJS.when('canCreateAutocomplete').run('createAutocomplete', createAutocomplete);\n\n    \n    if (opts.isDdInT3) {\n      $SearchJS.when('search-js-autocomplete').run('autocomplete-dd-init', function(){ mergeBTFDropdown(); });\n    }\n\n    if (opts.isDdInT1) {\n      $SearchJS.when('search-js-autocomplete').run('autocomplete-dd-init', function(){ searchDropdown(); });\n    }\n\n  } // END conditional for window.$SearchJS\n\n  \n  \n  function initializeAutocomplete(jQuery) {\n    \n    var issInitObj = buildIssInitObject(opts, issOpts);\n    $SearchJS.declare('canCreateAutocomplete', issInitObj);\n  } // END initializeAutocomplete\n\n  \n  \n  function initSearchCsl(searchCSL, issInitObject) {\n    searchCSL.init(opts.pageType, (window.ue && window.ue.rid) || opts.requestId);\n\n    $SearchJS.declare('canCreateAutocomplete', issInitObject);\n  } // END initSearchCsl\n\n  \n  \n  function createAutocomplete(issObject) {\n    iss = new AutoComplete(issObject);\n\n    $SearchJS.publish('search-js-autocomplete', iss);\n\n    logMetrics();\n  } // END createAutocomplete\n\n  \n  \n  function buildIssInitObject(opts, issOpts, isNewIss) {\n    var issInitObj = {\n        src: opts.host\n      , sessionId: opts.sessionId\n      , requestId: opts.requestId\n      , mkt: opts.marketId\n      , obfMkt: opts.obfuscatedMarketId\n      , pageType: opts.pageType\n      , language: opts.language\n      , customerId: opts.customerId\n      , fresh: opts.fresh\n      , b2b: opts.b2b\n      , aliases: opts.searchAliases\n      , fb: issOpts.fallbackFlag\n      , isDigitalFeaturesEnabled: issOpts.isDigitalFeaturesEnabled\n      , isWayfindingEnabled: issOpts.isWayfindingEnabled\n      , issPrimeEligible: issOpts.issPrimeEligible\n      , deptText: issOpts.departmentText\n      , sugText: issOpts.suggestionText\n      , filterAliases: opts.filterAliases\n      , biaWidgetUrl: opts.biaWidgetUrl\n      , recentSearchesTreatment: issOpts.recentSearchesTreatment\n      , authorSuggestionText: issOpts.authorSuggestionText\n      , translatedStringsMap: issOpts.translatedStringsMap\n      , biaTitleText: issOpts.biaTitleText\n      , biaPurchasedText: issOpts.biaPurchasedText\n      , biaViewAllText: issOpts.biaViewAllText\n      , biaViewAllManageText: issOpts.biaViewAllManageText\n      , biaAndText: issOpts.biaAndText\n      , biaManageText: issOpts.biaManageText\n      , biaWeblabTreatment: issOpts.biaWeblabTreatment\n      , issNavConfig: issOpts.issNavConfig\n      , cf: issOpts.cf\n      , ime: opts.isJpOrCn\n      , mktid: opts.marketId\n      , qs: opts.isJpOrCn\n      , issCorpus: issOpts.issCorpus\n      , deepNodeISS: {\n          searchAliasAccessor: function($) {\n            return (window.SearchPageAccess && window.SearchPageAccess.searchAlias()) ||\n                   $('select.searchSelect').children().attr('data-root-alias');\n          },\n          searchAliasDisplayNameAccessor: function() {\n            return (window.SearchPageAccess && window.SearchPageAccess.searchAliasDisplayName());\n          }\n        }\n      , removeDeepNodeISS: issOpts.removeDeepNodeISS\n      , trendingTreatment: issOpts.trendingTreatment\n      , useAPIV2: issOpts.useAPIV2\n      , opfSwitch: issOpts.opfSwitch\n      , isISSDesktopRefactorEnabled: issOpts.isISSDesktopRefactorEnabled\n      , isAPICachingDisabled: issOpts.isAPICachingDisabled\n      , isInternal: issOpts.isInternal\n      , useServiceHighlighting: issOpts.useServiceHighlighting\n    };\n\n    // If we aren't using the new ISS then we need to add these properties\n    if (!isNewIss) {\n      issInitObj.dd = issOpts.dropdown; // The element with id searchDropdownBox doesn't exist in C.\n      issInitObj.imeSpacing = issOpts.imeSpacing;\n      issInitObj.isNavInline = 1;\n      issInitObj.triggerISSOnClick = 0;\n      issInitObj.sc = 1;\n      issInitObj.np = issOpts.np;\n    }\n\n    return issInitObj;\n  } // END buildIssInitObject\n\n  \n  function logMetrics() {\n    if (typeof uet == 'function' && typeof uex == 'function' ) {\n      uet('be', 'iss-init-pc', {wb: 1});\n      uex('ld', 'iss-init-pc', {wb: 1});\n    }\n  } // END logMetrics\n\n\n    window.$Nav && $Nav.declare('nav.inline');\n\n(function (i) {\ni.onload = function() {window.uet && uet('ne')};\ni.src = window._navbarSpriteUrl;\n}(new Image()));\n\nwindow.$Nav && $Nav.declare('config.autoFocus', false);\n\n\nwindow.$Nav && $Nav.declare('config.responsiveTouchAgents', [\"ieTouch\"]);\n\nwindow.$Nav && $Nav.declare('config.responsiveGW',false);\n\nwindow.$Nav && $Nav.declare('config.pageHideEnabled',false);\n\nwindow.$Nav && $Nav.declare('config.sslTriggerType','flyoutProximityLarge');\nwindow.$Nav && $Nav.declare('config.sslTriggerRetry',0);\n\nwindow.$Nav && $Nav.declare('config.doubleCart',false);\n\n\nwindow.$Nav && $Nav.declare('config.fixedBarBeacon',false);\n\nwindow.$Nav && $Nav.declare('config.signInOverride', true);\n\nwindow.$Nav && $Nav.declare('config.signInTooltip',true);\n\nwindow.$Nav && $Nav.declare('config.isPrimeMember',false);\n\nwindow.$Nav && $Nav.declare('config.packardGlowTooltip', false);\n\nwindow.$Nav && $Nav.declare('config.packardGlowFlyout', false);\n\nwindow.$Nav && $Nav.declare('config.rightMarginAlignEnabled', true);\n\nwindow.$Nav && $Nav.declare('config.flyoutAnimation', false);\n\nwindow.$Nav && $Nav.declare('config.campusActivation', '');\n\n\n\n\n    window.$Nav && $Nav.declare('config.primeTooltip',{url:'/gp/prime/digital-adoption/navigation-bar/137-0530487-6192152'});\n\nwindow.$Nav && $Nav.declare('config.primeDay',false);\n\nwindow.$Nav && $Nav.declare('config.disableBuyItAgain', false);\n\n\n\n\n\n  \n\n\n\nwindow.$Nav && $Nav.declare('config.pseudoPrimeFirstBrowse',false);\n\nwindow.$Nav && $Nav.declare('config.sdaYourAccount',false);\n\nwindow.$Nav && $Nav.declare('config.csYourAccount',{url:\"/gp/youraccount/navigation/sidepanel/137-0530487-6192152\"});\n\nwindow.$Nav && $Nav.declare('config.cartFlyoutDisabled', true);\n\n  window.$Nav && $Nav.declare('config.isTabletBrowser', false);\n  window.$Nav && $Nav.declare('config.HmenuProximityArea', [200,200,200,200]);\n  window.$Nav && $Nav.declare('config.HMenuIsProximity', true);\n\nwindow.$Nav && $Nav.declare('config.desktopHMenuRefactor', false);\n\nwindow.$Nav && $Nav.declare('config.navfresh', false);\nwindow.$Nav && $Nav.declare('config.isFreshRegion', false);\n\n\nif (window.ue && ue.tag) { ue.tag('navbar'); };\n\nwindow.$Nav && $Nav.declare('config.blackbelt', true);\nwindow.$Nav && $Nav.declare('config.beaconbelt', true);\n\nwindow.$Nav && $Nav.declare('config.beaconbeltCover', true);\n\nwindow.$Nav && $Nav.declare('config.accountList', true);\n\nwindow.$Nav && $Nav.declare('config.pinnedNav',false);\n\nwindow.$Nav && $Nav.declare('config.pinnedNavWithEWC',false);\n\nwindow.$Nav && $Nav.declare('config.pinnedNavStart',150);\n\nwindow.$Nav && $Nav.declare('config.pinnedNavMinWidth',900);\nwindow.$Nav && $Nav.declare('config.pinnedNavMinHeight',700);\n\nwindow.$Nav && $Nav.declare('config.iPadTablet', false);\n\n\nwindow.$Nav && $Nav.declare('config.searchapiEndpoint',false);\n\nwindow.$Nav && $Nav.declare('config.timeline', false);\n\nwindow.$Nav && $Nav.declare('config.timelineAsinPriceEnabled', false);\n\nwindow.$Nav && $Nav.declare('config.timelineDeleteEnabled',false);\n\n\nwindow.$Nav && $Nav.declare('config.searchTimeline', false);\n\nwindow.$Nav && $Nav.declare('config.searchTopCategories', false);\n\n    window._navbar = window._navbar || {};\n    window._navbar.browsepromos = window._navbar.browsepromos || {};\n    \n    window.$Nav && $Nav.declare('config.browsePromos', window._navbar.browsepromos);\n\n\nwindow.$Nav && $Nav.declare('config.extendedFlyout', 'false');\n\n\nwindow.$Nav && $Nav.declare('config.logNonAuiJsError', false);\n\n\nwindow.$Nav && $Nav.declare('config.pssFlag', '0');\n\nwindow.$Nav && $Nav.declare('config.flyoutClickState', 'T1');\n\nwindow.$Nav && $Nav.declare('config.isShortAccountList', false);\n\n\nif (window.P && typeof window.P.declare === \"function\" && typeof window.P.now === \"function\") {\n  window.P.now('packardGlowIngressJsEnabled').execute(function(glowEnabled) {\n    if (!glowEnabled) {\n      window.P.declare('packardGlowIngressJsEnabled', true);\n    }\n  });\n  window.P.now('packardGlowStoreName').execute(function(storeName) {\n    if (!storeName) {\n      window.P.declare('packardGlowStoreName', 'pc');\n    }\n  });\n}\n\n\nwindow.$Nav && $Nav.declare('configComplete');\n\n-->\u003C/script>\n\n\u003Cscript type=\"text/javascript\">window.navmet.push({key:'PostNav',end:+new Date(),begin:window.navmet.tmp});\u003C/script>\n\n\n\n\n\n\n\n\u003Ca id=\"skippedLink\" tabindex=\"-1\">\u003C/a>\n\n\u003Cscript type=\"text/javascript\">window.navmet.MainEnd = new Date();\u003C/script>\u003C!-- sp:feature:host-atf -->\n\n\u003Cdiv id=\"dp\" class=\"pc en_US\">\n         \n\n\n\n\n\n\n\u003Cscript type=\"text/javascript\">\n\n  if(typeof P !== \"undefined\" && typeof P.when === \"function\"){\n    P.when('cf').execute(function() {\n          P.when('navbarJS-jQuery').execute(function(){});\n  P.when('finderFitsJS').execute(function(){});\n  P.when('twister').execute(function(){});\n  P.when('swfjs').execute(function(){});\n\n    });\n  }\n\u003C/script>\n\n\n\n\u003Cdiv id=\"rw-swatch-image_div\">\n\u003C/div>\n\n\n\u003Cdiv id=\"lpo-top-stripe-1_div\">\n\u003C/div>\n\n\n\u003Cdiv id=\"cp-merchandising-widget_div\">\n\u003C/div>\n\n\n\u003Cdiv id=\"prime_div\">\n\n\n      \n    \n\n\n  \n\n\n  \n\n\n\n    \n  \n  \n\n\n    \n\n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n    \n\n    \n\n\n\n\n\n\n\u003Cdiv id=\"PrimeStripeContent\">\n\n\n      \n    \u003C/div>\u003C/div>\n\n\n\u003Cdiv id=\"list-motel_div\">\n\n\n\n\n\n\n\n\u003C/div>\n\n\n\u003Cdiv id=\"replacement-parts-fitment-widget_div\">\n\n        \n\n            \n            \n        \n\n        \n        \n        \u003C/div>\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"wayfinding-breadcrumbs_container\" class=\"a-section a-spacing-none a-padding-medium\">\n\u003Cdiv id=\"wayfinding-breadcrumbs_feature_div\" class=\"a-subheader a-breadcrumb feature\" data-feature-name=\"wayfinding-breadcrumbs\">\n    \u003Cul class=\"a-unordered-list a-horizontal a-size-small\">\n         \u003Cli>\u003Cspan class=\"a-list-item\">\n            \u003Ca class=\"a-link-normal a-color-tertiary\" href=\"/electronics-store/b/ref=dp_bc_aui_C_1/137-0530487-6192152?ie=UTF8&amp;node=172282\">\n                Electronics\n            \u003C/a>\n         \u003C/span>\u003C/li>\n         \u003Cli class=\"a-breadcrumb-divider\">\u003Cspan class=\"a-list-item a-color-tertiary\">\n             ›\n         \u003C/span>\u003C/li>\n         \u003Cli>\u003Cspan class=\"a-list-item\">\n            \u003Ca class=\"a-link-normal a-color-tertiary\" href=\"/computer-pc-hardware-accessories-add-ons/b/ref=dp_bc_aui_C_2/137-0530487-6192152?ie=UTF8&amp;node=541966\">\n                Computers &amp; Accessories\n            \u003C/a>\n         \u003C/span>\u003C/li>\n         \u003Cli class=\"a-breadcrumb-divider\">\u003Cspan class=\"a-list-item a-color-tertiary\">\n             ›\n         \u003C/span>\u003C/li>\n         \u003Cli>\u003Cspan class=\"a-list-item\">\n            \u003Ca class=\"a-link-normal a-color-tertiary\" href=\"/Computers-Tablets/b/ref=dp_bc_aui_C_3/137-0530487-6192152?ie=UTF8&amp;node=13896617011\">\n                Computers &amp; Tablets\n            \u003C/a>\n         \u003C/span>\u003C/li>\n         \u003Cli class=\"a-breadcrumb-divider\">\u003Cspan class=\"a-list-item a-color-tertiary\">\n             ›\n         \u003C/span>\u003C/li>\n         \u003Cli>\u003Cspan class=\"a-list-item\">\n            \u003Ca class=\"a-link-normal a-color-tertiary\" href=\"/Notebooks-Laptop-Computers/b/ref=dp_bc_aui_C_4/137-0530487-6192152?ie=UTF8&amp;node=565108\">\n                Laptops\n            \u003C/a>\n         \u003C/span>\u003C/li>\n         \u003Cli class=\"a-breadcrumb-divider\">\u003Cspan class=\"a-list-item a-color-tertiary\">\n             ›\n         \u003C/span>\u003C/li>\n         \u003Cli>\u003Cspan class=\"a-list-item\">\n             \u003Ca class=\"a-link-normal a-color-tertiary\" href=\"/Traditional-Laptop-Computers/b/ref=dp_bc_aui_C_5/137-0530487-6192152?ie=UTF8&amp;node=13896615011\">\n                 Traditional Laptops\n             \u003C/a>\n         \u003C/span>\u003C/li>\n    \u003C/ul>\n\u003C/div>\n\u003C/div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cscript type=\"text/javascript\"> \n\n(typeof setCSMReq === 'function') && setCSMReq(\"x1\");\n\n                if(typeof uet === 'function'){uet('bb', 'udpV3atfwait', {wb: 1});};\n\u003C/script>\n\n        \u003Cdiv id=\"dp-container\" class=\"a-container\" role=\"main\">\n\n            \n\n\n\n\u003Cscript type=\"text/javascript\">\n  if (typeof CSMReqs !== 'undefined') {\n     if (CSMReqs.hasOwnProperty('af')) {\n        CSMReqs.af.c = 1;\n     }\n     if (CSMReqs.hasOwnProperty('cf')) {\n        CSMReqs.cf.c = 1;\n     }\n  }\n\u003C/script>\n\n\n\n\u003Cscript type=\"text/javascript\">    if(typeof uet === 'function'){uet('be', 'udpV3atfwait', {wb: 1});};\n                if(typeof uex === 'function'){uex('ld', 'udpV3atfwait', {wb: 1});};\n\u003C/script>\n\n\n\n  \n\n\n\n\n\n    \n\n\n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n         \n        \n\n\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n    \n    \n        \n            \n            \n        \n        \n      \n\n\n\n\n\u003Cstyle type=\"text/css\">\n    #leftCol {\n        width:45.0%;\n    }\n\n    .centerColAlign{\n        margin-left:46.5%;\n    }\n\n    html[dir=\"rtl\"] .centerColAlign{\n        margin-right:46.5%;\n    }\n\u003C/style>\n\n\n\n\n    \n     \n     \n    \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"instantOrderUpdate_feature_div\" class=\"feature\" data-feature-name=\"instantOrderUpdate\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n    \n    \n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n    \n    \n\n    \n     \n     \n    \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"companyCompliancePolicies_feature_div\" class=\"feature\" data-feature-name=\"companyCompliancePolicies\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n    \n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n    \n    \n\n    \n     \n     \n    \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"cerberus_feature_div\" class=\"feature\" data-feature-name=\"cerberus\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n    \n    \u003Cdiv id=\"cerberus-data-metrics\" style=\"display: none;\" data-asin=\"B06XD3LXXK\" data-asin-price=\"145.97\" data-asin-shipping=\"0\" data-asin-currency-code=\"USD\" data-substitute-count=\"20\" data-device-type=\"WEB\" data-display-code=\"Cerberus displayed\">\u003C/div>\n\n    \n        \u003Cdiv id=\"cerberus\" data-a-carousel-options=\"{}\" data-a-transition-strategy=\"stretchygoodness\" class=\"a-begin a-carousel-container a-carousel-static a-carousel-display-stretchyGoodness a-carousel-transition-stretchygoodness a-spacing-micro\">\u003Cinput autocomplete=\"on\" type=\"hidden\" class=\"a-carousel-firstvisibleitem\">\n            \u003Cdiv class=\"a-row a-carousel-header-row a-size-medium a-spacing-micro\">\u003Cdiv class=\"a-column a-span8\">\u003Ch2 class=\"a-carousel-heading a-color-state a-nowrap\">Lower Priced Item to Consider\u003C/h2>\u003C/div>\u003Cdiv class=\"a-column a-span4 a-span-last a-text-right\">\u003Cspan class=\"a-carousel-pagination a-size-base\">\u003Cspan class=\"a-carousel-page-count\">\u003Cspan class=\"a-carousel-page-current\">1\u003C/span> / \u003Cspan class=\"a-carousel-page-max\">1\u003C/span>\u003C/span>\u003Cspan class=\"a-carousel-restart-container\">\u003Cspan class=\"a-text-separator\">\u003C/span>\u003Ca class=\"a-carousel-restart\" href=\"#\">\u003C/a>\u003C/span>\u003Cspan class=\"a-carousel-accessibility-page-info a-offscreen\" aria-live=\"polite\">1 / 1\u003C/span>\u003C/span>\u003C/div>\u003C/div>\n            \u003Cdiv class=\"a-row a-carousel-controls a-carousel-row a-carousel-has-buttons\">\u003Cdiv class=\"a-carousel-row-inner\">\u003Cdiv class=\"a-carousel-col a-carousel-left\">\u003Ca class=\"a-button a-button-image a-carousel-button a-carousel-goto-prevpage\" tabindex=\"0\" href=\"#\" id=\"a-autoid-0\">\u003Cspan class=\"a-button-inner\">\u003Ci class=\"a-icon a-icon-previous\">\u003Cspan class=\"a-icon-alt\">Previous page\u003C/span>\u003C/i>\u003C/span>\u003C/a>\u003C/div>\u003Cdiv class=\"a-carousel-col a-carousel-center\">\u003Cdiv class=\"a-carousel-viewport\">\u003Col class=\"a-carousel\" role=\"list\">\n                \n                    \u003Cli class=\"a-carousel-card\" style=\"width:100%;\" role=\"listitem\">\n                        \u003Cdiv class=\"a-fixed-left-grid a-spacing-none a-spacing-top-micro\">\u003Cdiv class=\"a-fixed-left-grid-inner\" style=\"padding-left:69px\">\n                            \u003Cdiv class=\"a-fixed-left-grid-col a-col-left\" style=\"width:69px;margin-left:-69px;float:left;\">\n                                \u003Ca data-asin=\"B01E9GBRU2\" data-asin-currency-code=\"USD\" data-asin-price=\"112.94\" data-asin-relevancy=\"886678\" data-asin-shipping=\"0\" data-asin-source=\"ML_PRODUCT_SUBSTITUTES\" data-avg-rating=\"3.6\" data-position=\"0\" class=\"a-link-normal cerberus-asin\" href=\"/dp/B01E9GBRU2/ref=dp_cerb_1\">\n                                    \u003Cimg alt=\"\" src=\"https://images-na.ssl-images-amazon.com/images/I/51ZAzS3zfOL._SL65_.jpg\">\n                                \u003C/a>\n                            \u003C/div>\n                            \u003Cdiv class=\"a-fixed-left-grid-col a-col-right\" style=\"padding-left:1.5%;float:left;\">\n                                \u003Ca data-asin=\"B01E9GBRU2\" data-asin-currency-code=\"USD\" data-asin-price=\"112.94\" data-asin-relevancy=\"886678\" data-asin-shipping=\"0\" data-asin-source=\"ML_PRODUCT_SUBSTITUTES\" data-avg-rating=\"3.6\" data-position=\"0\" data-rows=\"1\" class=\"a-link-normal cerberus-asin p13n-sc-truncated\" href=\"/dp/B01E9GBRU2/ref=dp_cerb_1\" title=\"Acer C720p-2625 11.6in Touchscreen ChromeBook Intel Celeron 2955U Dual-core 1.40 GHz 4 GB RAM, 16 GB SSD, Chrome OS (Renewed)\">Acer C720p-2625 11.6in Touchscreen ChromeBook Intel Celeron 2955U Dual-core 1.40 GHz 4 GB RAM, 16 GB SSD, Chrome OS…\u003C/a>\n\n                                \u003Cbr>\n                                \n                                    \u003Ca class=\"a-link-normal\" title=\"3.6 out of 5 stars\" href=\"/product-reviews/B01E9GBRU2\">\n                                        \n                                        \u003Ci class=\"a-icon a-icon-star a-star-3-5\">\u003Cspan class=\"a-icon-alt\">3.6 out of 5 stars\u003C/span>\u003C/i>\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Cspan class=\"a-letter-space\">\u003C/span>148\u003C/a>\n                                    \u003Cbr>\n                                \n                                \u003Cspan class=\"a-color-price\">\n                                    $112.94\n                                \u003C/span>\n\n                                \n                                    \n                                    \n                                        \u003Ci class=\"a-icon a-icon-prime\" role=\"img\">\u003C/i>\n                                    \n                                \n                            \u003C/div>\n                        \u003C/div>\u003C/div>\n                    \u003C/li>\n                \n            \u003C/ol>\u003C/div>\u003C/div>\u003Cdiv class=\"a-carousel-col a-carousel-right\">\u003Ca class=\"a-button a-button-image a-carousel-button a-carousel-goto-nextpage\" tabindex=\"0\" href=\"#\" id=\"a-autoid-1\">\u003Cspan class=\"a-button-inner\">\u003Ci class=\"a-icon a-icon-next\">\u003Cspan class=\"a-icon-alt\">Next page\u003C/span>\u003C/i>\u003C/span>\u003C/a>\u003C/div>\u003C/div>\u003C/div>\n        \u003Cspan class=\"a-end aok-hidden\">\u003C/span>\u003C/div>\n\n        \n            \u003Cdiv id=\"cerberusVotingContainer\" class=\"a-section a-spacing-small\">\n                \u003Cdiv id=\"cerberusVoteSection\" class=\"a-section a-spacing-none\">\n                    \u003Cspan>\n                        Is this feature helpful?\n                    \u003C/span>\n                    \u003Cspan id=\"cerberusVoteYes\" class=\"a-button a-button-base a-button-small cerberus-isthishelpful-button\">\u003Cspan class=\"a-button-inner\">\u003Cbutton id=\"cerberusVoteYes-announce\" class=\"a-button-text\" type=\"button\">\n                        Yes\n                    \u003C/button>\u003C/span>\u003C/span>\n                    \u003Cspan id=\"cerberusVoteNo\" class=\"a-button a-button-base a-button-small cerberus-isthishelpful-button\">\u003Cspan class=\"a-button-inner\">\u003Cbutton id=\"cerberusVoteNo-announce\" class=\"a-button-text\" type=\"button\">\n                        No\n                    \u003C/button>\u003C/span>\u003C/span>\n                \u003C/div>\n                \u003Cdiv id=\"cerberusVoteThankYou\" class=\"a-section a-spacing-mini\">\n                    \u003Cspan class=\"a-color-success\">\n                        Thank you for your feedback.\n                    \u003C/span>\n                \u003C/div>\n            \u003C/div>\n        \n\n        \u003Chr class=\"a-divider-normal\">\n    \n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n    \n    \n\n    \n     \n     \n    \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"prsubswidget_feature_div\" class=\"feature\" data-feature-name=\"prsubswidget\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n    \n    \n \n\n\u003Cdiv id=\"ppd\">\n\n\u003Cdiv id=\"rightCol\" class=\"rightCol\">\n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"attachAccessoryModal_feature_div\" class=\"feature\" data-feature-name=\"attachAccessoryModal\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n  \u003Cinput type=\"hidden\" id=\"attach-weblabsToTriggerClientSideWhenEmptyAsinList\" value=\"[ATTACH_ML_MODEL_COMPARE_235024]\">\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n  \n\n  \n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"desktop_buybox\" class=\"feature\" data-feature-name=\"desktop_buybox\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n        \n    \t    \n                \n\n \u003Cdiv id=\"buybox\">\n    \n\n\n\n\n\n\n\n\n\n\n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n    \n\n    \n        \n        \n\n        \n        \n\n        \n        \n            \n            \n\n            \n                \n                    \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"qualifiedBuybox\" class=\"feature\" data-feature-name=\"qualifiedBuybox\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n        \n    \t    \n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n     \n     \n         \n             \n             \n                 \n                     \n                     \n                         \n                     \n                 \n             \n         \n     \n \n\n\n \u003Cdiv class=\"a-section\">\n     \u003Cform method=\"post\" id=\"addToCart\" action=\"/gp/product/handle-buy-box/ref=dp_start-bbf_1_glance\" class=\"a-content\">\n              \n                  \n                  \n                      \u003Cinput type=\"hidden\" id=\"offerListingID\" name=\"offerListingID\" value=\"t6y2hJYg1%2Bxv%2Bh5jre2LSO66NOVsWrcOIhiyb%2FATazJWk9g%2B3urtVc48aih017xHWzSrNrd50FtJuui54PHst3%2BHBOHuJOLRgSEaFPuMaxaW2BOqarOi80BrZ8e%2BAy21P7ousEvlgI%2BzgBvdz3QhFg%3D%3D\">\n                  \n              \n              \u003Cinput type=\"hidden\" id=\"session-id\" name=\"session-id\" value=\"137-0530487-6192152\">\n              \u003Cinput type=\"hidden\" id=\"ASIN\" name=\"ASIN\" value=\"B06XD3LXXK\">\n              \u003Cinput type=\"hidden\" id=\"isMerchantExclusive\" name=\"isMerchantExclusive\" value=\"0\">\n              \u003Cinput type=\"hidden\" id=\"merchantID\" name=\"merchantID\" value=\"A3ETH6T54TJRRL\">\n              \u003Cinput type=\"hidden\" id=\"isAddon\" name=\"isAddon\" value=\"0\">\n              \u003Cinput type=\"hidden\" id=\"nodeID\" name=\"nodeID\" value=\"541966\">\n              \u003Cinput type=\"hidden\" id=\"sellingCustomerID\" name=\"sellingCustomerID\" value=\"A3ETH6T54TJRRL\">\n              \u003Cinput type=\"hidden\" id=\"qid\" name=\"qid\" value=\"\">\n              \u003Cinput type=\"hidden\" id=\"sr\" name=\"sr\" value=\"\">\n              \u003Cinput type=\"hidden\" id=\"storeID\" name=\"storeID\" value=\"pc\">\n              \u003Cinput type=\"hidden\" id=\"tagActionCode\" name=\"tagActionCode\" value=\"541966\">\n              \u003Cinput type=\"hidden\" id=\"viewID\" name=\"viewID\" value=\"glance\">\n              \u003Cinput type=\"hidden\" id=\"rebateId\" name=\"rebateId\" value=\"\">\n              \u003Cinput type=\"hidden\" id=\"ctaDeviceType\" name=\"ctaDeviceType\" value=\"desktop\">\n              \u003Cinput type=\"hidden\" id=\"ctaPageType\" name=\"ctaPageType\" value=\"detail\">\n              \u003Cinput type=\"hidden\" id=\"usePrimeHandler\" name=\"usePrimeHandler\" value=\"0\">\n              \n\n\n\n\n    \n            \n                \n                \n\n\n\n\n\n\n            \n\n            \n            \n\n            \n            \n\n            \n            \u003Cinput type=\"hidden\" id=\"rsid\" name=\"rsid\" value=\"137-0530487-6192152\">\n            \u003Cinput type=\"hidden\" id=\"sourceCustomerOrgListID\" name=\"sourceCustomerOrgListID\" value=\"\">\n            \u003Cinput type=\"hidden\" id=\"sourceCustomerOrgListItemID\" name=\"sourceCustomerOrgListItemID\" value=\"\">\n            \u003Cinput type=\"hidden\" name=\"wlPopCommand\" value=\"\">\n            \n            \n\n     \n \n\n\n\n\n\n\n    \n        \n        \n        \n            \n                \n            \n            \n\n   \n\n   \n   \n\n  \u003Cdiv class=\"a-box-group\">\n            \n            \n            \n            \n            \u003Cdiv class=\"a-box a-last\">\u003Cdiv class=\"a-box-inner\">\n\n                 \n\n                \u003Cdiv class=\"a-section a-spacing-none a-padding-none\">\n                \n                \n\n\n\n\n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"priceInsideBuyBox_feature_div\" class=\"feature\" data-feature-name=\"priceInsideBuyBox\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv class=\"a-section\">\n\n\n    \n        \n        \n            \n        \n    \n    \n    \u003Cspan id=\"price_inside_buybox\" class=\"a-size-medium a-color-price\">\n        $145.97\n    \u003C/span>\n    \n\u003C/div>\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"desktop_qualifiedBuyBox\" class=\"feature\" data-feature-name=\"desktop_qualifiedBuyBox\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n        \n    \t    \n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n        \n        \n            \n                \n            \n            \n\n    \u003Cdiv class=\"a-section a-spacing-none a-padding-none\">\n    \n        \n\n\n\n\n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"invitePlatform_feature_div\" class=\"feature\" data-feature-name=\"invitePlatform\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"pointsInsideBuyBox_feature_div\" class=\"feature\" data-feature-name=\"pointsInsideBuyBox\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"shippingMessageInsideBuyBox_feature_div\" class=\"feature\" data-feature-name=\"shippingMessageInsideBuyBox\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv class=\"a-section\">\n\u003Cdiv class=\"a-row\">\n    \u003Cdiv class=\"a-column a-span12 a-text-left a-spacing-top-micro\">\n        \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003Cspan id=\"price-shipping-message\" class=\"a-size-base a-color-base\">\u003C/span>\n    \n\n\n\n\n    \u003C/div>\n\u003C/div>\n\u003C/div>\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"dpFastTrackInsideBuyBox_feature_div\" class=\"feature\" data-feature-name=\"dpFastTrackInsideBuyBox\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv class=\"a-section a-spacing-mini a-spacing-top-micro\">\n\u003Cdiv class=\"a-row\">\n    \u003Cdiv class=\"a-column a-span12 a-text-left\">\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n    \n        \n        \n        \n    \n    \n\n\n\n    \n\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"fast-track\" class=\"a-section a-spacing-none\">\n    \n        \n            \u003Cinput type=\"hidden\" id=\"ftSelectAsin\" value=\"B06XD3LXXK\">\n        \n        \n            \u003Cinput type=\"hidden\" id=\"ftSelectMerchant\" value=\"A3ETH6T54TJRRL\">\n        \n        \n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"fast-track-message\" class=\"a-section a-spacing-none\">\n    \n        \n        \n            \u003Cdiv class=\"a-section a-spacing-none\">\n                \n\n                \u003Cdiv id=\"delivery-message\" class=\"a-section a-spacing-none a-spacing-top-mini\">\n                \n                    \n                        \n                        \n                        \n\t\t                    \n\t\t                        \n\t\t                        \n\t\t                        \n\t\t                            \u003Cspan class=\"a-text-bold\">\n\t\t                                \n\t\t                            \u003C/span>\n\t\t                        \n\t\t                    \n\t\t                    \n\t\t                        \n\t\t                            \n\t\t                            \n\t\t                            \n\t\t                            \n\t\t                                This item ships to \u003Cb>Canada\u003C/b>. \u003Cb>Want it Wednesday, Oct. 2?\u003C/b> Choose \u003Cb>AmazonGlobal Priority Shipping\u003C/b> at checkout.\n\t\t                            \n\t\t                        \n\t\t                    \n\t\t                    \n\t\t                        \u003Ca href=\"/gp/help/customer/display.html/ref=ftinfo_dp_?ie=UTF8&amp;nodeId=201074230&amp;pop-up=1\" target=\"AmazonHelp\" onclick=\"return amz_js_PopWin('/gp/help/customer/display.html/ref=ftinfo_dp_?ie=UTF8&amp;nodeId=201074230&amp;pop-up=1','AmazonHelp','width=550,height=600,resizable=1,scrollbars=1,toolbar=1,status=1');\">Learn more\u003C/a>\n\t\t                    \n                        \n                    \n                \u003C/div>\n                \n                \n                \n                    \n                    \n                    \n\t\t                \n                    \n                \n                \n                \n            \u003C/div>\n        \n    \n    \n\n    \n\u003C/div>\n\n        \n        \n\n\n\n\n\n\n        \n            \n                \u003Cscript type=\"text/javascript\">\n    var LUXQuantityRefreshEnabled = false;\n    P.when(\"LUXDPQuantityRefresh\").execute(function() {\n        LUXQuantityRefreshEnabled = true;\n    });\n\n    P.when(\"A\", \"jQuery\").execute(function(A, $) {\n        $(\"#quantity\").live(\"change\", function (event) {\n\n            // Let LocationUX handle quantity refreshes if it's enabled.\n            if (LUXQuantityRefreshEnabled) {\n                return;\n            }                \n\n            if (event.updateFTOnQuantityChange) {\n                return;\n            }\n            event.updateFTOnQuantityChange = 1;\n\n            var quantity = $(this).val();\n            var asin = $(\"#ftSelectAsin\").val();\n            var merchantId = $(\"#ftSelectMerchant\").val();\n\n            if (!asin || !merchantId) {\n                return;\n            }\n\n            var params = [];\n            params.push(\"asin=\" + asin);\n            params.push(\"quantity=\" + quantity);\n            params.push(\"merchantId=\" + merchantId);\n\n            $.ajax({\n                type: \"POST\",\n                url: \"/gp/product/features/dp-fast-track/udp-ajax-handler/get-quantity-update-message.html?ie=UTF8\",\n                contentType: 'application/x-www-form-urlencoded;charset=utf-8',\n                data: params.join('&'),\n                dataType: \"html\",\n                success: function(objResponse) {\n                    if (objResponse != null && objResponse != \"\") {\n                        $(\"#fast-track-message\").replaceWith(objResponse);\n                    }\n                }\n            });\n            return;\n        });\n    });\n\u003C/script>\n\n            \n            \n        \n    \n\u003C/div>\n\n    \n    \n\n\n\n\n\n\n\n\n    \u003C/div>\n\u003C/div>\n\u003C/div>\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"promiseBasedBadgeInsideBuyBox_feature_div\" class=\"feature\" data-feature-name=\"promiseBasedBadgeInsideBuyBox\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv class=\"a-section a-spacing-mini\">\n\u003Cdiv class=\"a-row\">\n    \u003Cdiv class=\"a-column a-span12 a-text-left\">\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n        \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n\n\n\n\n\n\n\n\n\n    \n    \n    \n    \n    \n\n\n\n   \n        \n   \n    \n\n\n    \n    \n        \n            \n            \n            \n            \n                \n                \n            \n        \n        \n    \n    \n\n\n\n    \n\n\n    \n    \n\n\n\n\n\n\n\n\n    \u003C/div>\n\u003C/div>\n\u003C/div>\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"addOnMessage_feature_div\" class=\"feature\" data-feature-name=\"addOnMessage\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"availabilityInsideBuyBox_feature_div\" class=\"feature\" data-feature-name=\"availabilityInsideBuyBox\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv class=\"a-section a-spacing-top-micro\">\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n        \n        \n    \n    \n\n\n\n\n\n\n\u003Cdiv id=\"availability\" class=\"a-section a-spacing-base\">\n    \n    \n    \u003Cspan class=\"a-size-medium a-color-success\">\n        \n            \n            In Stock.\n        \n        \n    \u003C/span>\n    \n    \n    \n\n\n\n    \n    \n    \n\u003C/div>\n\n\n\n\n\n\n\n\n\n\n\n  \u003Cdiv class=\"a-section a-spacing-none\">\n    \n\n      \n        \n        \n      \n\n    \n \u003C/div>\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n    \n        \n    \n    \n\n\n\n\n\u003C/div>\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"quantityRelocate_feature_div\" class=\"feature\" data-feature-name=\"quantityRelocate\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \u003Cdiv class=\"a-row a-spacing-mini\">\n        \u003Cdiv class=\"a-column a-span12 a-text-center a-spacing-small\">\n            \n\n\n\n\n\n\n    \n    \n    \n    \n    \n    \n    \n    \n\n\n\n\n\n        \n    \u003Cdiv id=\"selectQuantity\" class=\"a-section a-spacing-none a-padding-none\">\n        \u003Cspan class=\"a-declarative\" data-action=\"quantity-dropdown\" data-quantity-dropdown=\"{}\">\n            \u003Cdiv class=\"a-row a-spacing-base\">\n                \n                \n                \u003Cdiv class=\"a-column a-span12 a-text-left\">\n                    \u003Cspan class=\"a-dropdown-container\">\u003Clabel for=\"quantity\" class=\"a-native-dropdown\">Qty:\u003C/label>\u003Cselect name=\"quantity\" autocomplete=\"off\" id=\"quantity\" tabindex=\"0\" class=\"a-native-dropdown\">\n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"1\" selected=\"\">1\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"2\">2\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"3\">3\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"4\">4\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"5\">5\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"6\">6\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"7\">7\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"8\">8\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"9\">9\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"10\">10\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"11\">11\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"12\">12\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"13\">13\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"14\">14\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"15\">15\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"16\">16\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"17\">17\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"18\">18\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"19\">19\n                                    \u003C/option>\n                                \n                            \n                        \n                            \n                                \n                                \n                                    \u003Coption value=\"20\">20\n                                    \u003C/option>\n                                \n                            \n                        \n                        \n                            \n                            \n                                \n                            \n                        \n                    \u003C/select>\u003Cspan tabindex=\"-1\" class=\"a-button a-button-dropdown a-button-small\" id=\"a-autoid-2\" style=\"min-width: 0%;\" aria-hidden=\"true\">\u003Cspan class=\"a-button-inner\">\u003Cspan class=\"a-button-text a-declarative\" data-action=\"a-dropdown-button\" role=\"button\" aria-hidden=\"true\" id=\"a-autoid-2-announce\">\u003Cspan class=\"a-dropdown-label\">Qty:\u003C/span>\u003Cspan class=\"a-dropdown-prompt\">1\n                                    \u003C/span>\u003C/span>\u003Ci class=\"a-icon a-icon-dropdown\">\u003C/i>\u003C/span>\u003C/span>\u003C/span>\n                \u003C/div>\n            \u003C/div>\n            \n        \u003C/span>\n    \u003C/div>\n    \n    \n    \n\n\n        \u003C/div>\n    \u003C/div>\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"soldByThirdPartyRelocate_feature_div\" class=\"feature\" data-feature-name=\"soldByThirdPartyRelocate\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"addToCart_feature_div\" class=\"feature\" data-feature-name=\"addToCart\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n        \n            \n        \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n      \n      \n          \u003Cdiv class=\"a-button-stack\">\n              \n              \n              \u003Cspan class=\"a-declarative\" data-action=\"dp-pre-atc-declarative\" data-dp-pre-atc-declarative=\"{}\" id=\"atc-declarative\">\n                  \u003Cspan id=\"submit.add-to-cart\" class=\"a-button a-spacing-small a-button-primary a-button-icon\">\u003Cspan class=\"a-button-inner\">\u003Ci class=\"a-icon a-icon-cart\">\u003C/i>\u003Cinput id=\"add-to-cart-button\" name=\"submit.add-to-cart\" title=\"Add to Shopping Cart\" data-hover=\"Select \u003Cb>__dims__\u003C/b> from the left\u003Cbr> to add to Shopping Cart\" class=\"a-button-input attach-dss-atc\" type=\"button\" value=\"Add to Cart\" aria-labelledby=\"submit.add-to-cart-announce\">\u003Cspan id=\"submit.add-to-cart-announce\" class=\"a-button-text\" aria-hidden=\"true\">Add to Cart\u003C/span>\u003C/span>\u003C/span>\n              \u003C/span>\n          \u003C/div>\n      \n      \n\n\n\n\n\n\n\n\n    \u003Cdiv class=\"dp-cif aok-hidden\" data-feature-details=\"{&quot;name&quot;:&quot;atc&quot;,&quot;isInteractive&quot;:false}\">\u003C/div>\n    \u003Cscript type=\"text/javascript\">(function(f) {var _np=(window.P._namespace(\"DetailPageBuyBoxTemplate\"));if(_np.guardFatal){_np.guardFatal(f)(_np);}else{f(_np);}}(function(P) {\n        P.now().execute('dp-mark-atc',function(){\n            if (typeof window.markFeatureRender === 'function') {\n                window.markFeatureRender('atc',{isInteractive:false});\n            }\n        });\n    }));\u003C/script>\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"buyNow_feature_div\" class=\"feature\" data-feature-name=\"buyNow\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n    \n    \u003Cdiv class=\"a-button-stack\">\n        \n        \u003Cdiv id=\"buyNow\" class=\"a-section a-spacing-base\">\n            \n                \n\n\n\n\n    \n\n    \n        \n\n        \u003Cdiv id=\"turboState\" class=\"a-section a-spacing-none a-padding-none\">\n            \u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;turbo-checkout-page-state&quot;}\">{\"turboWeblab\":\"RCX_CHECKOUT_TURBO_DESKTOP_NONPRIME_87784\",\"strings\":{\"TURBO_CHECKOUT_HEADER\":\"Buy now: Acer Flagship CB3-532 15.6\\\" HD Premium Chromebook - Intel Dual-Core Celeron N3060 up to 2.48GH.z, 2GB RAM, 16GB SSD, Wireless AC, HDMI, USB 3.0, Webcam, Chrome OS (Renewed)\",\"TURBO_LOADING_TEXT\":\"Loading your order summary\"},\"inputs\":{\"a\":\"B06XD3LXXK\",\"quantity\":\"1\",\"requestId\":\"WY2K06V7WEMKTC0K2H7W\",\"customItemPrice\":\"\",\"oid\":\"t6y2hJYg1%2Bxv%2Bh5jre2LSO66NOVsWrcOIhiyb%2FATazJWk9g%2B3urtVc48aih017xHWzSrNrd50FtJuui54PHst3%2BHBOHuJOLRgSEaFPuMaxaW2BOqarOi80BrZ8e%2BAy21P7ousEvlgI%2BzgBvdz3QhFg%3D%3D\",\"sessionId\":\"137-0530487-6192152\",\"addressId\":\"add-new\"},\"configurations\":{\"isSignInEnabled\":true,\"initiateSelector\":\"#buy-now-button\",\"prefetchEnabled\":true},\"buttonID\":\"buy-now\",\"eligibility\":{\"prime\":false,\"canOneClick\":false,\"preOrder\":false,\"isEligible\":false,\"primeShipping\":true,\"customerDefaults\":false,\"canBuyNow\":true},\"turboWeblabTreatment\":\"T1\",\"timeout\":\"5000\"}\u003C/script>\n        \u003C/div>\n\n        \n        \u003Cscript type=\"text/javascript\">(function(f) {var _np=(window.P._namespace(\"TurboClientDetailPage\"));if(_np.guardFatal){_np.guardFatal(f)(_np);}else{f(_np);}}(function(P) {\n            P.when('cf').execute(function executeTurboAssetsLoadTriggerEvent() {\n                P.now('turbo-checkout-assets-load-trigger').execute(function(assetsLoadTrigger) {\n                    if (assetsLoadTrigger) {\n                        logTurboCounter(\"AssetTriggerDedupe\");\n                        return;\n                    }\n\n                    try {\n                        P.declare('turbo-checkout-assets-load-trigger', true);\n                        logTurboCounter('AssetTrigger');\n                    } catch (e) {\n                        logTurboCounter('AssetTriggerException');\n                    }\n                });\n\n                function logTurboCounter(name) {\n                    var counter = 'turboCheckout' + name;\n                    if (window.ue && window.ue.count) {\n                        window.ue.count(counter, 1);\n                    }\n                }\n            });\n        }));\u003C/script>\n    \n\n\n                \n                \u003Cspan class=\"a-declarative\" data-action=\"a-modal\" data-a-modal=\"{&quot;name&quot;:&quot;turbo&quot;}\" id=\"turbo-checkout-modal\">\u003C/span>\n            \n            \n                \n                \n                    \n                \n            \n            \n            \n            \n            \n            \n            \n                \n                \n                    \u003Cspan id=\"submit.buy-now\" class=\"a-button a-button-icon a-button-oneclick onml-buy-now-button\">\n                        \u003Cspan class=\"a-button-inner\">\n                            \u003Ci class=\"a-icon a-icon-buynow\" role=\"img\">\u003C/i>\n                            \u003Cinput id=\"buy-now-button\" name=\"submit.buy-now\" class=\"a-button-input\" type=\"submit\">\n                            \u003Cspan id=\"submit.buy-now-announce\" class=\"a-button-text\" aria-hidden=\"true\">Buy Now\u003C/span>\n                        \u003C/span>\n                    \u003C/span>\n                \n            \n        \u003C/div>\n    \u003C/div>\n    \n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"shipsFromSoldByInsideBuyBox_feature_div\" class=\"feature\" data-feature-name=\"shipsFromSoldByInsideBuyBox\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv class=\"a-section a-spacing-medium\">\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n        \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"merchant-info\" class=\"a-section a-spacing-mini\">\n    \n\n\n    \n    \n        \n\n\n\n\n    \n\n\n    \n        \n        \n    \n\n    \n    \n    \n    \n    \n    \n    \n        Sold by \u003Ca href=\"/gp/help/seller/at-a-glance.html/ref=dp_merchant_link?ie=UTF8&amp;seller=A3ETH6T54TJRRL&amp;isAmazonFulfilled=1\" id=\"sellerProfileTriggerId\">Holiday Express(SN Recorded) ✅\u003C/a> and \u003Ca href=\"/gp/help/customer/display.html?ie=UTF8&amp;ref=dp_fulfillment&amp;nodeId=106096011\" id=\"SSOFpopoverLink\" class=\"a-declarative\">Fulfilled by Amazon\u003C/a>.\n        \n            \u003Cdiv id=\"seller-popover-information\" data-title=\"Seller Information\" data-asin=\"B06XD3LXXK\" data-merchant-id=\"A3ETH6T54TJRRL\">\u003C/div>\n\n\u003Cscript type=\"text/javascript\">\n    P.when(\"seller-register-popover\").execute(function(sellerRegisterPopover) {\n        sellerRegisterPopover();\n    });\n\u003C/script>\n        \n    \n    \n\n        \n        \n        \n        \n        \n        \n\n        \u003Cspan class=\"\">\n            \n        \u003C/span>\n\n        \n\n\n\n\n\n\n\n        \n\n\n\n    \n\n\u003C/div>\n\n\n\n    \n\n\n\n\n    \n    \n    \n    \n\n\n\n\n\n\n\n  \n  \n  \n    \n  \n\n\n\n\n\n\n\n\u003Cdiv class=\"a-popover-preload\" id=\"a-popover-SSOFpopoverLink-content\">\n  \u003Cp>Fulfillment by Amazon (FBA) is a service we offer sellers that lets them store their products in Amazon's fulfillment centers, and we directly pack, ship, and provide customer service for these products. Something we hope you'll especially enjoy: \u003Cem>FBA items qualify for FREE Shipping and Amazon Prime.\u003C/em>\u003C/p>\n  \u003Cp>If you're a seller, Fulfillment by Amazon can help you grow your business. \u003Ca href=\"https://services.amazon.com/fulfillment-by-amazon/benefits.htm\">Learn more about the program.\u003C/a>\u003C/p>\n\u003C/div>\n\n\u003Cscript type=\"text/javascript\">\n  P.when(\"A\", \"jQuery\", \"a-popover\", \"ready\").execute(function(A, $, popover) {\n      \"use strict\";\n\n      var title = \"What is Fulfillment by Amazon?\";\n      var triggerId = \"#SSOFpopoverLink\";\n      var contentId = \"SSOFpopoverLink-content\";\n\n      var options = {\n        \"header\": title,\n        \"name\": contentId,\n        \"activate\": \"onclick\",\n        \"width\": 430,\n        \"position\": \"triggerBottom\"\n      };\n\n      var $trigger = $(triggerId);\n      var instance = popover.create($trigger, options);\n  });\n\u003C/script>\n\n\n\n\n\n\n\u003C/div>\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"originalPackagingMessageInsideBuyBox_feature_div\" class=\"feature\" data-feature-name=\"originalPackagingMessageInsideBuyBox\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"hbaLabel_feature_div\" class=\"feature\" data-feature-name=\"hbaLabel\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"quantityLayoutHigh_feature_div\" class=\"feature\" data-feature-name=\"quantityLayoutHigh\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"bbop_feature_div\" class=\"feature\" data-feature-name=\"bbop\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n     \n     \n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"voltageCompliance_feature_div\" class=\"feature\" data-feature-name=\"voltageCompliance\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"businessPricing_feature_div\" class=\"feature\" data-feature-name=\"businessPricing\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n     \n\n\n\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"soldByThirdParty_feature_div\" class=\"feature\" data-feature-name=\"soldByThirdParty\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"scheduledDelivery_feature_div\" class=\"feature\" data-feature-name=\"scheduledDelivery\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n     \n        \n\n\n\n\n\n     \n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"bbg_feature_div\" class=\"feature\" data-feature-name=\"bbg\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"mbb_feature_div\" class=\"feature\" data-feature-name=\"mbb\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"quantityLayoutLow_feature_div\" class=\"feature\" data-feature-name=\"quantityLayoutLow\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"simpleBundleV2_feature_div\" class=\"feature\" data-feature-name=\"simpleBundleV2\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n    \u003Cdiv class=\"a-row a-spacing-base a-spacing-top-base showBundleAsins simpleBundleFeatureContainer\">\n        \n\n\n\u003Cdiv class=\"a-section a-spacing-none a-text-left\">\n\n    \n    \n    \u003Cdiv class=\"simpleBundleCheckBoxArea\">\n        \n            \u003Cdiv class=\"aloha-simple-bundle-group-simple-bundle-buybox-add-accessory\">\n                \u003Cspan class=\"add_sim_starter_text a-text-bold\">\n                  Add an Accessory:\n                \u003C/span>\n                \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n\n                    \u003Cspan class=\"a-declarative\" data-action=\"bundle-asin-checkbox-handler\" data-bundle-asin-checkbox-handler=\"{}\">\n                        \u003Cdiv class=\"a-checkbox simple-bundle-buybox-item-checkbox\n                                              simple-bundle-item-0\n                                              simple-bundle-asin-B07H57J8TF\n                                               a-spacing-top-mini\">\u003Clabel>\u003Cinput type=\"checkbox\" name=\"\" value=\"B07H57J8TF\">\u003Ci class=\"a-icon a-icon-checkbox\">\u003C/i>\u003Cspan class=\"a-label a-checkbox-label\">\n                            \u003Cspan class=\"a-declarative\" data-action=\"a-modal\" data-a-modal=\"{&quot;name&quot;:&quot;popover-B07H57J8TF&quot;,&quot;width&quot;:&quot;900&quot;,&quot;header&quot;:&quot;Microsoft Office 365 Home | 12-month subscription, up to 6 people, PC/Mac Download&quot;,&quot;position&quot;:&quot;triggerTop&quot;,&quot;ajaxFailMsg&quot;:&quot;There was an error loading this page, please close the window and try again.&quot;,&quot;url&quot;:&quot;/gp/product/features/aloha-ppd/udp-ajax-handler/minidp.html?asin=B07H57J8TF&amp;marketplaceId=ATVPDKIKX0DER&amp;offerId=R6XWD1dPG7VZITN380jGWcfTmzRMUZ8RHm1hEHUXMPSgIljFk87bEuThwEFwgBQJRtI1uxHIfs0nckiHMVhs0Pjmolqw7uovd%2Bx5dNoh9%2Fofd03pg8B41rUmMU%2BWutrUgMsQe%2B24o97RidNzkZ75Og%3D%3D&amp;activeTab=0&quot;,&quot;height&quot;:&quot;550&quot;}\" id=\"popover-simpleBundle-0\">\n                                \u003Ca class=\"a-size-base a-link-normal simpleBundle-popover-title popover-simpleBundle-link-0\" href=\"#\">Save $20 at checkout | Microsoft Office 365 Home\u003C/a>\n                            \u003C/span>\n                            \u003Cspan class=\"a-size-base a-color-price\">$79.99\u003C/span>\n                        \u003C/span>\u003C/label>\u003C/div>\n                    \u003C/span>\n                    \n                \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n\n                    \u003Cspan class=\"a-declarative\" data-action=\"bundle-asin-checkbox-handler\" data-bundle-asin-checkbox-handler=\"{}\">\n                        \u003Cdiv class=\"a-checkbox simple-bundle-buybox-item-checkbox\n                                              simple-bundle-item-1\n                                              simple-bundle-asin-B06XH85GJQ\n                                               a-spacing-top-mini\">\u003Clabel>\u003Cinput type=\"checkbox\" name=\"\" value=\"B06XH85GJQ\">\u003Ci class=\"a-icon a-icon-checkbox\">\u003C/i>\u003Cspan class=\"a-label a-checkbox-label\">\n                            \u003Cspan class=\"a-declarative\" data-action=\"a-modal\" data-a-modal=\"{&quot;name&quot;:&quot;popover-B06XH85GJQ&quot;,&quot;width&quot;:&quot;900&quot;,&quot;header&quot;:&quot;G Suite Business | Monthly Subscription with Auto-renewal | includes Business Gmail, unlimited Drive storage, Docs, Calendar, and more&quot;,&quot;position&quot;:&quot;triggerTop&quot;,&quot;ajaxFailMsg&quot;:&quot;There was an error loading this page, please close the window and try again.&quot;,&quot;url&quot;:&quot;/gp/product/features/aloha-ppd/udp-ajax-handler/minidp.html?asin=B06XH85GJQ&amp;marketplaceId=ATVPDKIKX0DER&amp;offerId=sNZ4Xz8KbKuJ5nKcUYCpum0Xpol7PGXCAAjqrKkskF7mDdBU3ihE0Yq4XVspFQZfhHFH0eDxV4gTR1I4OWTl4SQ9xOjSLF8V1DG%2B2jk665jdiGKv0DDD12yXVLHt6Q0PTXzZCIoOGyq4NrIpzUz2dA%3D%3D&amp;activeTab=0&quot;,&quot;height&quot;:&quot;550&quot;}\" id=\"popover-simpleBundle-1\">\n                                \u003Ca class=\"a-size-base a-link-normal simpleBundle-popover-title popover-simpleBundle-link-1\" href=\"#\">G Suite Business | Unlimited Storage | Monthly Sub...\u003C/a>\n                            \u003C/span>\n                            \u003Cspan class=\"a-size-base a-color-price\">$12.00\u003C/span>\n                        \u003C/span>\u003C/label>\u003C/div>\n                    \u003C/span>\n                    \n                \n            \u003C/div>\n        \n    \u003C/div>\n\u003C/div>\n\n\n        \n        \u003Cdiv class=\"a-section aok-hidden simpleBundleJavascriptParameters\">\n            \u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;simpleBundleParameterMap&quot;}\">{\"maxBuyboxItemsMobile\":2,\"baseAsin\":\"B06XD3LXXK\",\"currencyOfPreferenceSupported\":true,\"marketPlaceId\":\"ATVPDKIKX0DER\",\"ajaxFailMsg\":\"There was an error loading this page, please close the window and try again.\",\"items\":[{\"ourPriceSymbol\":\"$\",\"asin\":\"B07H57J8TF\",\"ourPriceAmount\":\"79.99\",\"ourPriceCode\":\"USD\",\"ourPrice\":\"79.99 USD\",\"offerListingId\":\"R6XWD1dPG7VZITN380jGWcfTmzRMUZ8RHm1hEHUXMPSgIljFk87bEuThwEFwgBQJRtI1uxHIfs0nckiHMVhs0Pjmolqw7uovd%2Bx5dNoh9%2Fofd03pg8B41rUmMU%2BWutrUgMsQe%2B24o97RidNzkZ75Og%3D%3D\"},{\"ourPriceSymbol\":\"$\",\"asin\":\"B06XH85GJQ\",\"ourPriceAmount\":\"12.00\",\"ourPriceCode\":\"USD\",\"ourPrice\":\"12.00 USD\",\"offerListingId\":\"sNZ4Xz8KbKuJ5nKcUYCpum0Xpol7PGXCAAjqrKkskF7mDdBU3ihE0Yq4XVspFQZfhHFH0eDxV4gTR1I4OWTl4SQ9xOjSLF8V1DG%2B2jk665jdiGKv0DDD12yXVLHt6Q0PTXzZCIoOGyq4NrIpzUz2dA%3D%3D\"}],\"selectionMode\":\"MULTIPLE\",\"maxBuyboxItemsDesktop\":4}\u003C/script>\n        \u003C/div>\n        \u003Cinput type=\"hidden\" name=\"\" id=\"base-product-price\" data-base-product-price=\"$145.97\">\n    \u003C/div>\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"asg_feature_div\" class=\"feature\" data-feature-name=\"asg\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n    \n    \n    \n        \n        \n    \n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"addToCart_feature_div\" class=\"feature\" data-feature-name=\"addToCart\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"preAddToCartFramework_feature_div\" class=\"feature\" data-feature-name=\"preAddToCartFramework\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n    \u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;dp-pre-atc-hero&quot;}\">{\"heroName\":\"\"}\u003C/script>\n    \u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;dp-pre-atc-hero-candidates&quot;}\">[\"dashPreRegistration\",\"addServices\"]\u003C/script>\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"buyNow_feature_div\" class=\"feature\" data-feature-name=\"buyNow\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"highValueMessaging_feature_div\" class=\"feature\" data-feature-name=\"highValueMessaging\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n    \n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"oneClick_feature_div\" class=\"feature\" data-feature-name=\"oneClick\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n      \n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"OneClickBox\" class=\"a-button-stack\">\n    \n        \n        \n\n        \n        \n            \u003Cdiv id=\"oneClickSignIn\" class=\"a-section a-spacing-base a-text-center\">\n                \n\n\n\n\n\n\n\n\n                \n                    \n                    \n                \n            \u003C/div>\n        \n\n        \n        \n    \n\u003C/div>\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"detailPageGifting_feature_div\" class=\"feature\" data-feature-name=\"detailPageGifting\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n    \n        \n            \u003Cdiv data-a-input-name=\"gift-wrap\" class=\"a-checkbox\">\u003Clabel for=\"gift-wrap\">\u003Cinput id=\"gift-wrap\" type=\"checkbox\" name=\"gift-wrap\" value=\"yes\">\u003Ci class=\"a-icon a-icon-checkbox\">\u003C/i>\u003Cspan class=\"a-label a-checkbox-label\">Add gift options\u003C/span>\u003C/label>\u003C/div>\n        \n        \n    \n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"warrantyCETech\" class=\"feature\" data-feature-name=\"warrantyCETech\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n        \n    \t    \n                \n\n\n\n\n\n\n    \t    \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"makoGiftingOption\" class=\"feature\" data-feature-name=\"makoGiftingOption\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n        \n    \t    \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"makoPreRegistration\" class=\"feature\" data-feature-name=\"makoPreRegistration\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n        \n    \t    \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"makoCETech\" class=\"feature\" data-feature-name=\"makoCETech\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n        \n    \t    \n                \n\n\n\n\n\n\n    \t    \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"accessoryUpsellAmabot_feature_div\" class=\"feature\" data-feature-name=\"accessoryUpsellAmabot\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n            \n                \n                    \n\n\n\n                \n                \n            \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"accessoryUpsellBtf_feature_div\" class=\"feature\" data-feature-name=\"accessoryUpsellBtf\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n \n    \n    \n    \n\n\n    \n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"glowContextualIngressPt_feature_div\" class=\"feature\" data-feature-name=\"glowContextualIngressPt\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n    \n        \n        \n            \n            \u003Chr class=\"a-divider-normal\">\n        \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n    \n    \n\n\n    \n    \n        \n            \n            \n            \n                \n            \n        \n        \n    \n\n\n\n\n    \u003Cspan class=\"a-declarative\" data-action=\"dpContextualIngressPt\" data-dpcontextualingresspt=\"{}\">\n        \u003Ca class=\"a-link-normal\" href=\"#\">\n            \u003Cdiv class=\"a-row a-spacing-mini\">\n                \u003Cdiv class=\"a-column a-span12 a-text-left\">\n                    \u003Cdiv id=\"contextualIngressPt\">\n                        \u003Cdiv id=\"contextualIngressPtPin\">\u003C/div>\n                        \u003Cspan id=\"contextualIngressPtLabel\" class=\"a-size-small\">\n                            \u003Cdiv id=\"contextualIngressPtLabel_deliveryShortLine\">\u003Cspan>Deliver to&nbsp;\u003C/span>\u003Cspan>Canada\u003C/span>\u003C/div>\n                        \u003C/span>\n                    \u003C/div>\n                \u003C/div>\n            \u003C/div>\n        \u003C/a>\n    \u003C/span>\n\n\n    \n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"unifiedLocation_feature_div\" class=\"feature\" data-feature-name=\"unifiedLocation\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n\n    \u003C/div>\n\n\n        \n    \n\n\n\n\n    \t    \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"digitalDashHighProminence_feature_div\" class=\"feature\" data-feature-name=\"digitalDashHighProminence\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"addToWishlist_feature_div\" class=\"feature\" data-feature-name=\"addToWishlist\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n      \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n    \u003Chr class=\"a-spacing-base a-divider-normal\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n    \n\n\n\n\n\n  \u003Cdiv id=\"wishlistButtonStack\" class=\"a-button-stack\">\n      \n      \n      \n      \n      \n      \n      \n      \n\n      \n      \n      \n      \u003Cdiv id=\"add-to-wishlist-button-group\" data-hover=\"\u003C!-- If PartialItemStateWeblab is true then, showing different Add-to-wish-list tool-tip message which is consistent with Add-to-Cart tool tip message.  -->\n    \n        \n        \n            To Add to Your List, choose from options to the left\" class=\"a-button-group a-declarative a-spacing-none\" data-action=\"a-button-group\" role=\"radiogroup\">\n              \u003Cspan id=\"wishListMainButton\" class=\"a-button a-button-group-first a-spacing-none a-button-base a-declarative\" role=\"radio\" aria-labelledby=\"wishListMainButton-announce\" aria-posinset=\"1\" aria-setsize=\"1\" data-action=\"add-wishlist-declarative\">\u003Cspan class=\"a-button-inner\">\u003Cinput id=\"add-to-wishlist-button-submit\" name=\"submit.add-to-registry.wishlist\" title=\"Add to List\" data-action=\"atwl-splitbutton-main\" data-hover=\"\u003C!-- If PartialItemStateWeblab is true then, showing different Add-to-wish-list tool-tip message which is consistent with Add-to-Cart tool tip message.  -->\n    \n        \n        \n            To Add to Your List, choose from options to the left\" class=\"a-button-input a-declarative\" type=\"submit\" aria-labelledby=\"wishListMainButton-announce\">\u003Cspan id=\"wishListMainButton-announce\" class=\"a-button-text a-text-left\" aria-hidden=\"true\">\n                  Add to List\n                  \n              \u003C/span>\u003C/span>\u003C/span>\n              \n      \u003C/div>\n      \n      \n       \n      \u003Cdiv id=\"atwl-inline-spinner\" class=\"a-section a-hidden\">\n        \u003Cdiv class=\"a-spinner-wrapper\">\u003Cspan class=\"a-spinner a-spinner-medium\">\u003C/span>\u003C/div>\n      \u003C/div>\n        \n      \n      \u003Cdiv id=\"atwl-inline\" class=\"a-section a-spacing-none a-hidden\">\n        \u003Cdiv class=\"a-row a-text-ellipsis\">\n            \u003Cdiv id=\"atwl-inline-sucess-msg\" class=\"a-box a-alert-inline a-alert-inline-success\">\u003Cdiv class=\"a-box-inner a-alert-container\">\u003Ci class=\"a-icon a-icon-alert\">\u003C/i>\u003Cdiv class=\"a-alert-content\">\n              \u003Cspan class=\"a-size-base\" role=\"alert\">\n                Added to\n              \u003C/span>\n            \u003C/div>\u003C/div>\u003C/div>\n            \u003Ca id=\"atwl-inline-link\" class=\"a-link-normal\" href=\"/gp/registry/wishlist/\">\n                \u003Cspan id=\"atwl-inline-link-text\" class=\"a-size-base\" role=\"alert\">\n                \u003C/span>\n            \u003C/a>\n        \u003C/div>\n      \u003C/div>\n\n      \n      \u003Cdiv id=\"atwl-inline-error\" class=\"a-section a-hidden\">\n        \u003Cdiv class=\"a-box a-alert-inline a-alert-inline-error\" aria-live=\"assertive\" role=\"alert\">\u003Cdiv class=\"a-box-inner a-alert-container\">\u003Ci class=\"a-icon a-icon-alert\">\u003C/i>\u003Cdiv class=\"a-alert-content\">\n          \u003Cspan id=\"atwl-inline-error-msg\" class=\"a-size-base\" role=\"alert\">\n            Unable to add item to List. Please try again.\n          \u003C/span>\n        \u003C/div>\u003C/div>\u003C/div>\n      \u003C/div>\n\n      \u003Cdiv id=\"atwl-dd-spinner-holder\" class=\"a-section a-hidden\">\n          \u003Cdiv class=\"a-row a-dropdown\">\n              \u003Cdiv class=\"a-section a-popover-wrapper\">\n                  \u003Cdiv class=\"a-section a-text-center a-popover-inner\">\n                      \u003Cdiv class=\"a-box a-popover-loading\">\u003Cdiv class=\"a-box-inner\">\n                      \u003C/div>\u003C/div>\n                  \u003C/div>\n              \u003C/div>\n          \u003C/div>\n      \u003C/div>\n      \u003Cdiv id=\"atwl-dd-error-holder\" class=\"a-section a-hidden\">\n          \u003Cdiv class=\"a-section a-dropdown\">\n              \u003Cdiv class=\"a-section a-popover-wrapper\">\n                  \u003Cdiv class=\"a-section a-spacing-base a-padding-base a-text-left a-popover-inner\">\n                      \u003Ch3 class=\"a-color-error\">\n                          Sorry, there was a problem.\n                      \u003C/h3>\n                      \u003Cspan>\n                          There was an error retrieving your Wish Lists. Please try again.\n                      \u003C/span>\n                  \u003C/div>\n              \u003C/div>\n          \u003C/div>\n      \u003C/div>\n      \u003Cdiv id=\"atwl-dd-unavail-holder\" class=\"a-section a-hidden\">\n          \u003Cdiv class=\"a-section a-dropdown\">\n              \u003Cdiv class=\"a-section a-popover-wrapper\">\n                  \u003Cdiv class=\"a-section a-spacing-base a-padding-base a-text-left a-popover-inner\">\n                      \u003Ch3 class=\"a-color-error\">\n                          Sorry, there was a problem.\n                      \u003C/h3>\n                      \u003Cspan>\n                          List unavailable.\n                      \u003C/span>\n                  \u003C/div>\n              \u003C/div>\n          \u003C/div>\n      \u003C/div>\n      \u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;atwl&quot;}\">{\"showInlineLink\":false,\"hzPopover\":true,\"wishlistButtonId\":\"add-to-wishlist-button\",\"dropDownHtml\":\"\",\"inlineJsFix\":true,\"wishlistButtonSubmitId\":\"add-to-wishlist-button-submit\",\"maxAjaxFailureCount\":\"3\",\"asin\":\"B06XD3LXXK\"}\u003C/script>\n\n      \n          \n              \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n\n\n          \n          \n      \n\n  \u003C/div>\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;popoverState&quot;}\">{\"formId\":\"addToCart\",\"showWishListDropDown\":false,\"babyRegistryId\":\"add-to-registry-baby-button\",\"showBabyRegDropdown\":false,\"wishlistPopoverWidth\":206,\"isAddToWishListDropDownAuiEnabled\":true,\"showPopover\":false}\u003C/script>\n\n\n\u003Cscript type=\"text/javascript\">(function(f) {var _np=(window.P._namespace(\"list-CF-register-js\"));if(_np.guardFatal){_np.guardFatal(f)(_np);}else{f(_np);}}(function(P) {\n    \"use strict\";\n\n    window.P.now('atwl-cf').execute(function (module) {\n        var isRegistered = (typeof module !== 'undefined');\n        if (!isRegistered) {\n            window.P.register('atwl-cf');\n        }\n    });\n}));\u003C/script>\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n    \n    \n        \n            \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"digitalDashLowProminence_feature_div\" class=\"feature\" data-feature-name=\"digitalDashLowProminence\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n    \n\n\n                \u003C/div>\n\n\n             \u003C/div>\u003C/div>\n   \u003C/div>\n\n\n  \n        \n    \n\n\n\n\n\n    \u003Cinput data-addnewaddress=\"add-new\" id=\"cartAddressNew\" name=\"dropdown-selection\" type=\"hidden\" value=\"add-new\">\u003Cinput data-addnewaddress=\"add-new\" id=\"cartAddressUsed\" name=\"dropdown-selection-ubb\" type=\"hidden\" value=\"add-new\">\u003C/form>\n \u003C/div>\n\n    \t    \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n                \n                \n            \n            \n        \n    \n\n\n\n\u003C/div>\n\n    \t    \n        \n        \n        \n        \n    \n    \n    \n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"tellAFriendBox_feature_div\" class=\"feature\" data-feature-name=\"tellAFriendBox\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\u003Cdiv class=\"a-section a-spacing-top-small\">\n    \n\n\n\n\n\n\n    \n        \n        \n        \n\n        \n            \n\n        \u003Cdiv id=\"tell-a-friend\" data-close=\"Close\" data-dest=\"\" data-title=\"Share this item via Email\" class=\"a-section a-text-center a-spacing-small\">\n            \n            \n            \n\n            \n                \n                    \n                    \n                    \n\n\n\n\n    \u003Ca id=\"swfMailTo\" class=\"a-link-normal email\" title=\"Share via e-mail\" href=\"mailto:?body=I%20want%20to%20recommend%20this%20product%20at%20Amazon.com%0A%0AAcer%20Flagship%20CB3-532%2015.6%22%20HD%20Premium%20Chromebook%20-%20Intel%20Dual-Core%20Celeron%20N3060%20up%20to%202.48GH.z%2C%202GB%20RAM%2C%2016GB%20SSD%2C%20Wireless%20AC%2C%20HDMI%2C%20USB%203.0%2C%20Webcam%2C%20Chrome%20OS%20(Renewed)%0Aby%20Holiday%20Express(SN%20Recorded)%20%E2%9C%85%0ALearn%20more%3A%20https%3A%2F%2Fwww.amazon.com%2Fdp%2FB06XD3LXXK%2Fref%3Dcm_sw_em_r_mt_dp_U_V6.JDbW20VWMT&amp;subject=I%20want%20to%20recommend%20this%20product%20on%20Amazon\">Share\u003C/a>\u003Cspan class=\"a-letter-space\">\u003C/span>\n\n\u003Ca id=\"swfImageMailTo\" class=\"a-link-normal email\" title=\"Share via e-mail\" href=\"mailto:?body=I%20want%20to%20recommend%20this%20product%20at%20Amazon.com%0A%0AAcer%20Flagship%20CB3-532%2015.6%22%20HD%20Premium%20Chromebook%20-%20Intel%20Dual-Core%20Celeron%20N3060%20up%20to%202.48GH.z%2C%202GB%20RAM%2C%2016GB%20SSD%2C%20Wireless%20AC%2C%20HDMI%2C%20USB%203.0%2C%20Webcam%2C%20Chrome%20OS%20(Renewed)%0Aby%20Holiday%20Express(SN%20Recorded)%20%E2%9C%85%0ALearn%20more%3A%20https%3A%2F%2Fwww.amazon.com%2Fdp%2FB06XD3LXXK%2Fref%3Dcm_sw_em_r_mt_dp_U_V6.JDbW20VWMT&amp;subject=I%20want%20to%20recommend%20this%20product%20on%20Amazon\">\u003Ci class=\"a-icon a-icon-share-email\" role=\"img\">\u003C/i>\u003C/a>\u003Cspan class=\"a-letter-space\">\u003C/span>\n\n\u003Cscript type=\"text/javascript\">\nP.when('A','ready').execute(function(A){\n    var $ = A.$;\n    function collectMetrics( placementId ) {\n        A.ajax('/gp/aw/social/swf/metrics.html/ref=cm_sw_em_mt_dp_'+ placementId, {\n            method: 'post',\n            params: {\n                id: 'mailtoDp',\n                result: 'mailto share triggered'\n            }\n        });\n    }\n    $('#swfMailTo,#swfImage').click( function(){\n            collectMetrics('dp_U_V6.JDbW20VWMT');\n    });\n});\n\u003C/script>\n                \n                \n            \n            \n            \n                \n                \n                    \n                    \n                        \n                        \n                            \n                            \u003Ca id=\"facebook\" data-height=\"400\" class=\"a-link-normal swf-social-site\" target=\"_blank\" rel=\"noopener\" title=\"Share on Facebook\" href=\"/gp/redirect.html/ref=cm_sw_cl_fa_dp_U_V6.JDbW20VWMT?_encoding=UTF8&amp;location=https%3A%2F%2Fwww.facebook.com%2Fdialog%2Fshare%3F_encoding%3DUTF8%26display%3Dpopup%26href%3Dhttps%253A%252F%252Fwww.amazon.com%252Fdp%252FB06XD3LXXK%252Fref%253Dcm_sw_r_fa_dp_U_V6.JDbW20VWMT%26redirect_uri%3Dhttps%253A%252F%252Fwww.amazon.com%252Fgp%252Fpdp%252Ftaf%252Ffb_post_redirect.html%252Fref%253Dcm_sw_s_fa_dp_U_V6.JDbW20VWMT%26app_id%3D164734381262%26hashtag%3D%2523Amazon&amp;token=2977EE18060EBF3F16E76DD4528F9EC3850C5DBA\">\u003Ci class=\"a-icon a-icon-share-facebook\" role=\"img\" aria-label=\"Facebook\">\u003C/i>\u003C/a>\u003Cspan class=\"a-letter-space\">\u003C/span>\n                        \n                    \n                \n            \n                \n                \n                    \n                    \n                        \n                        \n                            \n                            \u003Ca id=\"twitter\" data-height=\"400\" class=\"a-link-normal swf-social-site\" target=\"_blank\" rel=\"noopener\" title=\"Share on Twitter\" href=\"/gp/redirect.html/ref=cm_sw_cl_tw_dp_U_V6.JDbW20VWMT?_encoding=UTF8&amp;location=https%3A%2F%2Ftwitter.com%2Fintent%2Ftweet%3Foriginal_referer%3Dhttps%25253A%25252F%25252Fwww.amazon.com%25252Fgp%25252Fproduct%25252FB06XD3LXXK%25252Fref%25253Dcm_sw_r_tw_dp_U_x_V6.JDbW20VWMT%26text%3DAcer%2520Flagship%2520CB3-532%252015.6%2522%2520HD%2520Premium%2520Chromebook%2520-%2520Intel%2520Dual-Core%2520Celeron%2520N...%26related%3Damazondeals%252Camazonmp3%26url%3Dhttps%253A%252F%252Fwww.amazon.com%252Fdp%252FB06XD3LXXK%252Fref%253Dcm_sw_r_tw_dp_U_x_V6.JDbW20VWMT%26via%3Damazon&amp;token=909B1FCD132E62BE0ACBB59509B5F2F8118159C2\">\u003Ci class=\"a-icon a-icon-share-twitter\" role=\"img\" aria-label=\"Twitter\">\u003C/i>\u003C/a>\u003Cspan class=\"a-letter-space\">\u003C/span>\n                        \n                    \n                \n            \n                \n                \n                    \n                    \n                        \n                        \n                            \n                            \u003Ca id=\"pinterest\" data-height=\"570\" class=\"a-link-normal swf-social-site\" target=\"_blank\" rel=\"noopener\" title=\"Pin it on Pinterest\" href=\"/gp/redirect.html/ref=cm_sw_cl_pi_dp_U_V6.JDbW20VWMT?_encoding=UTF8&amp;location=https%3A%2F%2Fpinterest.com%2Fpin%2Fcreate%2Fbutton%3Furl%3Dhttps%253A%252F%252Fwww.amazon.com%252Fdp%252FB06XD3LXXK%252Fref%253Dcm_sw_r_pi_dp_U_x_V6.JDbW20VWMT%26title%3DAcer%2520Flagship%2520CB3-532%252015.6%2522%2520HD%2520Premium%2520Chromebook%2520-%2520Intel...%26description%3DAcer%2520Flagship%2520CB3-532%252015.6%2522%2520HD%2520Premium%2520Chromebook%2520-%2520Intel...%2520https%253A%252F%252Fwww.amazon.com%252Fdp%252FB06XD3LXXK%252Fref%253Dcm_sw_r_pi_dp_U_x_V6.JDbW20VWMT%26media%3Dhttps%253A%252F%252Fimages-na.ssl-images-amazon.com%252Fimages%252FI%252F51840t%25252BtcFL.jpg&amp;token=DBD84295324C336D7867E1069CF3F7EFDAD85147\">\u003Ci class=\"a-icon a-icon-share-pinterest\" role=\"img\" aria-label=\"Pinterest\">\u003C/i>\u003C/a>\u003Cspan class=\"a-letter-space\">\u003C/span>\n                        \n                    \n                \n            \n\n            \n              \n              \n\n\n\u003Cstyle type=\"text/css\">\n    span.share_count_text {color: #666;}\n\u003C/style>\n\n\u003Cspan class=\"share_count_text\">3K+ Shares\u003C/span>\n\n\n            \n\n        \u003C/div>\n\n        \u003Cscript type=\"text/javascript\">\n            P.when(\"A\",\"jQuery\").execute(function(A,$) {\n                var taf = $(\"#tell-a-friend\");\n                taf.children(\"[data-height]\").click(function() {\n                    var height = $(this).attr(\"data-height\");\n                    window.open(this.href, \"_blank\", \"location=yes,width=700,height=\" + height);\n                    return false;\n                });\n                A.on.load(function () {\n                    var hashValue = window.location.hash;\n                    var hashIndex;\n                    var swfHashValue = \"_swftext_Swf\";\n                    hashIndex = hashValue.indexOf(swfHashValue);\n                    if (hashValue != \"\" &&  hashIndex > -1 && typeof(window.swfPopUpShown) === 'undefined') {\n                        $(\"#swfText\").click();\n                        window.swfPopUpShown = 1;\n                    }\n                });\n            });\n        \u003C/script>\n\n        \u003Cstyle type=\"text/css\">\n            #tell-a-friend .swf-social-site {\n                outline: none;\n            }\n        \u003C/style>\n\n        \n    \n    \n\n\n\u003C/div>\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"almMultiOfferEgress_feature_div\" class=\"feature\" data-feature-name=\"almMultiOfferEgress\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n    \n    \n    \n    \n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"redirection_feature_div\" class=\"feature\" data-feature-name=\"redirection\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"crossBorderWidget_feature_div\" class=\"feature\" data-feature-name=\"crossBorderWidget\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"tradeInButton_feature_div\" class=\"feature\" data-feature-name=\"tradeInButton\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n  \n  \n    \n    \n    \n      \n\n\n\n\n\n\n    \n  \n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"moreBuyingChoices_feature_div\" class=\"feature\" data-feature-name=\"moreBuyingChoices\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n    \n      \u003Cdiv class=\"a-section a-spacing-medium a-spacing-top-base\">\n        \u003Cdiv id=\"mbc-action-panel-wrapper\" style=\"\">\n            \n            \n            \n            \n            \n                \u003Cdiv id=\"mbc\" data-asin=\"B06XD3LXXK\" data-brand=\"Acer\" data-product-group=\"pc_display_on_website\" data-timeout=\"Sorry we encountered a problem.\" class=\"a-box-group\">\n                \n                    \n                    \n                        \u003Cstyle type=\"text/css\"> .olp-prime-badge {vertical-align: text-top !important} \u003C/style>\n                        \u003Cdiv class=\"a-box a-text-center\">\u003Cdiv class=\"a-box-inner a-padding-small\">\n                            \n                                \n                            \n                                \n                                \u003Ch5>\n                                    \u003Cspan id=\"mbc-title\">Other Sellers on Amazon\u003C/span>\n                                \u003C/h5>\n                        \u003C/div>\u003C/div>\n                    \n                \n                \n                \n                    \n                        \u003Cscript type=\"text/javascript\">\n                            var MBCFeatureScope = \"mbcUI\";\n                            if (typeof uet == 'function') {\n                                uet('bb', MBCFeatureScope, {wb: 1});  //timestamp body-begin\n                            }\n                        \u003C/script>\n                        \n                        \n                            \u003Cdiv class=\"a-box mbc-offer-row pa_mbc_on_amazon_offer\">\u003Cdiv class=\"a-box-inner a-padding-small\">\n                                \n                                    \n                                \n                                \n                                    \n                                    \n                                    \n                                    \n                                        \n                                    \n                                \n                                \n                                        \n                                        \n                                        \n                                            \u003Cspan id=\"mbc-buybutton-addtocart-1\" class=\"a-button a-button-primary a-button-small a-float-right\">\u003Cspan class=\"a-button-inner\">\u003Ca id=\"mbc-buybutton-addtocart-1-announce\" href=\"/gp/item-dispatch/ref=dp_ebb_1?ie=UTF8&amp;registryItemID.1=&amp;submit.addToCart=addToCart&amp;registryID.1=&amp;offeringID.1=PbW3bCqW61IMYyhB1qkTGFxC620V7CUjeTzoNvrYnZzA8k8Sf%252BsNVZnVBRR5uEcwj%252F4CcXq8lQGraKkvdayIA52fou1kvfk8GP7RQxmTMx8pMDGKV42GecPoxrER866IZ2DUHN%252BCT6Gj0UzNKm5HjpentQgG4P5N&amp;storeID=pc&amp;nodeID=&amp;signInToHUC=0&amp;session-id=137-0530487-6192152&amp;itemCount=1\" class=\"a-button-text\" role=\"button\">Add to Cart\u003C/a>\u003C/span>\u003C/span>\n                                        \n                                \n                                \n                                    \n                                        \u003Cspan class=\"a-declarative\" data-action=\"a-popover\" data-a-popover=\"{&quot;cache&quot;:&quot;true&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;name&quot;:&quot;New&amp;ReNew Electronics&quot;,&quot;width&quot;:&quot;280&quot;,&quot;header&quot;:&quot;&quot;,&quot;position&quot;:&quot;triggerLeft&quot;,&quot;scrollable&quot;:&quot;false&quot;,&quot;url&quot;:&quot;/gp/product/du/mbc-seller-information.html/ref=dp_mbc_info_0?c=new&amp;a=B06XD3LXXK&amp;me=ACSND164OY67R&amp;brand=Acer&amp;productGroupID=pc_display_on_website&amp;isUDP=1&amp;isAGS=0&quot;}\">\n                                            \n\n\n\n\n\n\n\u003Cdiv class=\"a-row\">\n    \n        \n        \n            \u003Cdiv class=\"a-section a-spacing-none\">\n                \n                    \n                    \n                        \u003Cspan id=\"mbc-price-1\" class=\"a-size-medium a-color-price\">\n                            $146.00\n                        \u003C/span>\n                    \n                \n                \n                \n                \u003Cbr>\n\n                \n                \n\n                \n                \n                \n\n                \n                \n                \n\n                \n                \n\n                \n                \n                    \n                    \n                \n                \n                \n                \n                    \n                    \n                    \n                        \u003Cspan id=\"mbc-shipping-sss-free-1\" class=\"a-size-small a-color-secondary\">&amp; \u003Cb>FREE Shipping\u003C/b> on eligible orders. \u003Ca href=\"/gp/help/customer/display.html/ref=mk_sss_dp_1?ie=UTF8&amp;pop-up=1&amp;nodeId=527692\" target=\"AmazonHelp\" onclick=\"return amz_js_PopWin(this.href,'AmazonHelp','width=550,height=550,resizable=1,scrollbars=1,toolbar=0,status=0');\">Details\u003C/a>\u003C/span>\n                    \n                \n                \n                \n                \n\n                \n                \n            \u003C/div>\n        \n    \n    \u003Cdiv id=\"mbc-sold-by-1\" class=\"a-section a-spacing-none\">\n        \u003Cspan class=\"a-size-small a-color-secondary\">\n            Sold by:\n        \u003C/span>\n        \u003Cspan class=\"a-size-small mbcMerchantName\">\n            New&amp;ReNew Electronics\n        \u003C/span>\n        \n    \u003C/div>\n\u003C/div>\n\n                                        \u003C/span>\n                                    \n                                    \n                                \n                            \u003C/div>\u003C/div>\n                        \n                            \u003Cdiv class=\"a-box mbc-offer-row pa_mbc_on_amazon_offer\">\u003Cdiv class=\"a-box-inner a-padding-small\">\n                                \n                                    \n                                \n                                \n                                    \n                                    \n                                    \n                                    \n                                        \n                                    \n                                \n                                \n                                        \n                                        \n                                        \n                                            \u003Cspan id=\"mbc-buybutton-addtocart-2\" class=\"a-button a-button-primary a-button-small a-float-right\">\u003Cspan class=\"a-button-inner\">\u003Ca id=\"mbc-buybutton-addtocart-2-announce\" href=\"/gp/item-dispatch/ref=dp_ebb_2?ie=UTF8&amp;registryItemID.1=&amp;submit.addToCart=addToCart&amp;registryID.1=&amp;offeringID.1=PbW3bCqW61IMYyhB1qkTGFxC620V7CUjYrJHXg36QtTtRQMOryGljqbOPIWdQEb774H2CIoTq5Ya7TwdTiU1Sw19F76zq7NKsocZkZINHjJHnamvVZUHjEOTzqTEcPLpN8c5PmKI1kMQM4CU%252FOmapArANLXRI42e&amp;storeID=pc&amp;nodeID=&amp;signInToHUC=0&amp;session-id=137-0530487-6192152&amp;itemCount=1\" class=\"a-button-text\" role=\"button\">Add to Cart\u003C/a>\u003C/span>\u003C/span>\n                                        \n                                \n                                \n                                    \n                                        \u003Cspan class=\"a-declarative\" data-action=\"a-popover\" data-a-popover=\"{&quot;cache&quot;:&quot;true&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;name&quot;:&quot;Blazing Prices&quot;,&quot;width&quot;:&quot;280&quot;,&quot;header&quot;:&quot;&quot;,&quot;position&quot;:&quot;triggerLeft&quot;,&quot;scrollable&quot;:&quot;false&quot;,&quot;url&quot;:&quot;/gp/product/du/mbc-seller-information.html/ref=dp_mbc_info_1?c=new&amp;a=B06XD3LXXK&amp;me=A1X019B82D4KP7&amp;brand=Acer&amp;productGroupID=pc_display_on_website&amp;isUDP=1&amp;isAGS=0&quot;}\">\n                                            \n\n\n\n\n\n\n\u003Cdiv class=\"a-row\">\n    \n        \n        \n            \u003Cdiv class=\"a-section a-spacing-none\">\n                \n                    \n                    \n                        \u003Cspan id=\"mbc-price-2\" class=\"a-size-medium a-color-price\">\n                            $146.00\n                        \u003C/span>\n                    \n                \n                \n                \n                \u003Cbr>\n\n                \n                \n\n                \n                \n                \n\n                \n                \n                \n\n                \n                \n\n                \n                \n                    \n                    \n                \n                \n                \n                \n                    \n                    \n                    \n                        \u003Cspan id=\"mbc-shipping-sss-free-2\" class=\"a-size-small a-color-secondary\">&amp; \u003Cb>FREE Shipping\u003C/b> on eligible orders. \u003Ca href=\"/gp/help/customer/display.html/ref=mk_sss_dp_1?ie=UTF8&amp;pop-up=1&amp;nodeId=527692\" target=\"AmazonHelp\" onclick=\"return amz_js_PopWin(this.href,'AmazonHelp','width=550,height=550,resizable=1,scrollbars=1,toolbar=0,status=0');\">Details\u003C/a>\u003C/span>\n                    \n                \n                \n                \n                \n\n                \n                \n            \u003C/div>\n        \n    \n    \u003Cdiv id=\"mbc-sold-by-2\" class=\"a-section a-spacing-none\">\n        \u003Cspan class=\"a-size-small a-color-secondary\">\n            Sold by:\n        \u003C/span>\n        \u003Cspan class=\"a-size-small mbcMerchantName\">\n            Blazing Prices\n        \u003C/span>\n        \n    \u003C/div>\n\u003C/div>\n\n                                        \u003C/span>\n                                    \n                                    \n                                \n                            \u003C/div>\u003C/div>\n                        \n                        \u003Cscript type=\"text/javascript\">\n                            if (typeof uet == 'function') {\n                                uet('be', MBCFeatureScope, {wb: 1});  //timestamp body-end\n                            }\n                            if (typeof uex == 'function') {\n                                uex('ld', MBCFeatureScope, {wb: 1});  //send metrics\n                            }\n                        \u003C/script>\n                    \n                    \n                    \n                \n                \n                  \u003Cdiv class=\"a-box\">\u003Cdiv class=\"a-box-inner a-padding-base\">\n                    \n                        \n                        \n                            \n                                \n                                    \u003Cdiv class=\"a-row\">\n                                        \u003Cspan id=\"mbc-upd-olp-link\" class=\"a-size-small\">\u003Ca href=\"/gp/offer-listing/B06XD3LXXK/ref=dp_olp_new_mbc?ie=UTF8&amp;condition=new\">\u003Cb>Renewed\u003C/b> (33) from $145.97\u003C/a>\u003C/span>\n                                        \n                                        \n                                            \u003Cspan>\u003Ca href=\"/gp/help/customer/display.html/ref=mk_sss_dp_1?ie=UTF8&amp;pop-up=1&amp;nodeId=527692\" target=\"AmazonHelp\" onclick=\"return amz_js_PopWin(this.href,'AmazonHelp','width=550,height=550,resizable=1,scrollbars=1,toolbar=0,status=0');\">Details\u003C/a>\u003C/span>\n                                        \n                                    \u003C/div>\n                                \n                                \n                            \n                        \n                    \n                  \u003C/div>\u003C/div>\n                \n                \u003C/div>\n            \n        \u003C/div>\n        \n        \n\n\n\n\n\n\n\n\n\n      \u003C/div>\n    \n\n\u003Cscript type=\"text/javascript\">\nP.when('A','jQuery').execute(function(A,$)  {\n    function toggleExpanderHeaderTextWeight(data) {\n       $(\"[data-a-expander-name=\"+data.expander.expanderName+\"] .a-mbc-expander-heading-text\").toggleClass(\"a-mbc-expander-heading-text-bold\");\n    }\n\n    var offerCount = 2;\n    for(var i=1; i \u003C= offerCount; i++){\n        $(\".mbcLi\"+i).bind(\"click\", function(){\n            this.click();\n        });\n        $(\".mbcLi\"+i+\" .a-button a\").bind(\"click\", function(){\n            window.open(this.href,\"_self\");\n        });\n        A.on('a:expander:mbc_expander_'+i+':toggle:expand', toggleExpanderHeaderTextWeight);\n        A.on('a:expander:mbc_expander_'+i+':toggle:collapse', toggleExpanderHeaderTextWeight);\n    }\n\n    if ($(\"#mbc-panel\").length == 0) {\n        $(\"#mbc-action-panel-wrapper\").show();\n    }\n});\n\u003C/script>\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"skyCitySoftMerge_feature_div\" class=\"feature\" data-feature-name=\"skyCitySoftMerge\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"product-ads-feedback_feature_div\" class=\"feature\" data-feature-name=\"productAdsFeedback\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"amsDetailRight_feature_div\" class=\"feature\" data-feature-name=\"amsDetailRight\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n            \n                \n                    \n\n\n    \n    \n    \n    \n    \n    \n\n    \u003Cdiv id=\"amsDetailRightV2\" data-detailpageasin=\"B06XD3LXXK\">\n        \u003Cscript>if (typeof uet === 'function' && typeof ues === 'function') {var scope = 'Detail_ams-detail-right-v2_desktop';var placementId = '6f9d2c58-5baa-4a99-99fc-663245286f7f';ues('wb', 'adplacements:' + scope.replace(/\\_/g, ':'), {wb:1}); uet('bb', 'adplacements:' + scope.replace(/\\_/g, ':'), {wb:1}); if (placementId) {ues('wb', 'adplacements:' + placementId, {wb:1});uet('bb', 'adplacements:' + placementId, {wb:1});}}\u003C/script>\u003Cdiv id=\"ape_Detail_ams-detail-right-v2_desktop_placement\" class=\"copilot-secure-display celwidget  text/x-dacx-safeframe\" cel_widget_id=\"adplacements:Detail:ams-detail-right-v2:desktop\" data-campaign=\"13829\" style=\"display: none; margin: 10px auto auto; line-height: 0;\" data-ad-details=\"{&quot;slot&quot; :&quot;Detail_ams-detail-right-v2_desktop&quot;,&quot;slotName&quot; :&quot;ams-detail-right-v2&quot;,&quot;src&quot; : &quot;https://aax-us-east.amazon-adsystem.com/e/xsp/getAd?src=500&amp;slot=ams-detail-right-v2&amp;rid=0101674ec7c6792b7a2743885b416573c98637be0ddea85c80d8bce98ed4a2c70741&quot;,&quot;adServer&quot; :&quot;cs&quot;,&quot;campaignId&quot; :  &quot;13829&quot;,&quot;arid&quot; :&quot;9fa1feb973b943ad88d1fe0517c96b18&quot;,&quot;placementId&quot;: &quot;6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;size&quot; :{&quot;width&quot;: &quot;100%&quot;,&quot;height&quot; : &quot;250px&quot;},&quot;allowedSizes&quot; :[],&quot;allowedDomains&quot; :  [&quot;g-ecx.images-amazon.com&quot;],&quot;aanParams&quot; :   &quot;site%3Damazon.us%3Bpt%3DDetail%3Bslot%3Dams-detail-right-v2%3Bpid%3DB06XD3LXXK%3Bbn%3D565108%3Barid%3D9fa1feb973b943ad88d1fe0517c96b18&quot;,&quot;loadAfter&quot; :   &quot;immediate&quot;,&quot;extraDelay&quot; :  0,&quot;iframeExtraStyle&quot;: &quot;&quot;,&quot;iframeClass&quot;:  &quot;&quot;,&quot;adPixels&quot;: [],&quot;adPixelDelay&quot;: &quot;0&quot;,&quot;aaxInstrPixelUrl&quot;: &quot;&quot;,&quot;serverSideFetchAd&quot;: &quot;false&quot;,&quot;enableAdBlockerDetector&quot;: false,&quot;disableResizeFunc&quot;: true,&quot;fallbackStaticAdImgUrl&quot;: &quot;&quot;,&quot;fallbackStaticAdClickUrl&quot;: &quot;&quot;,&quot;fallbackStaticAdExtraStyle&quot;: &quot;&quot;,&quot;adFeedbackInfo&quot;: {&quot;endPoint&quot;: &quot;/gp/aq-feedback/lazyLoad/handler/af-link-handler.html&quot;,&quot;boolFeedback&quot;: true,&quot;slugText&quot;: &quot;Advertisement&quot;},&quot;adPlacementMetaData&quot;: {&quot;pageUrl&quot;: &quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwNlhEM0xYWEs=&quot;,&quot;adElementId&quot;: &quot;ape_Detail_ams-detail-right-v2_desktop_placement&quot;,&quot;pageType&quot;: &quot;Detail&quot;,&quot;slotName&quot;: &quot;ams-detail-right-v2&quot;},&quot;adCreativeMetaData&quot;: {&quot;adNetwork&quot;: &quot;cs&quot;},&quot;advertisementStyle&quot;: {&quot;position&quot;: &quot;absolute&quot;,&quot;top&quot;: &quot;2px&quot;,&quot;right&quot;: &quot;0px&quot;,&quot;display&quot;: &quot;inline-block&quot;,&quot;font&quot;: &quot;normal 11px Arial&quot;,&quot;color&quot;: &quot;grey&quot;},&quot;feedbackDivStyle&quot;: {&quot;position&quot;: &quot;relative&quot;,&quot;height&quot;: &quot;14px&quot;,&quot;top&quot;: &quot;2px&quot;},&quot;viewabilityStandards&quot;: [{&quot;p&quot;: 0, &quot;t&quot;: 0, &quot;def&quot;: &quot;amzn&quot;}, {&quot;p&quot;: 50, &quot;t&quot;: 1, &quot;def&quot;: &quot;iab&quot;}, {&quot;p&quot;: 100, &quot;t&quot;: 1, &quot;def&quot;: &quot;groupm&quot;}],&quot;ajaxWeblabTriggerId&quot;: &quot;&quot;,&quot;abpStatus&quot;: &quot;-1&quot;,&quot;abpAcceptable&quot;: &quot;true&quot;,&quot;programIdsToCollapse&quot;: [],&quot;DAsfUrl&quot;:&quot;https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/desktop/DAsf-1.50.228f98c._V451950910_.js&quot;}\" aria-hidden=\"true\" data-arid=\"9fa1feb973b943ad88d1fe0517c96b18\">\u003Ciframe name=\"{&quot;slot&quot;:&quot;Detail_ams-detail-right-v2_desktop&quot;,&quot;slotName&quot;:&quot;ams-detail-right-v2&quot;,&quot;src&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/getAd?src=500&amp;slot=ams-detail-right-v2&amp;rid=0101674ec7c6792b7a2743885b416573c98637be0ddea85c80d8bce98ed4a2c70741&quot;,&quot;adServer&quot;:&quot;cs&quot;,&quot;campaignId&quot;:&quot;13829&quot;,&quot;arid&quot;:&quot;9fa1feb973b943ad88d1fe0517c96b18&quot;,&quot;placementId&quot;:&quot;6f9d2c58-5baa-4a99-99fc-663245286f7f&quot;,&quot;size&quot;:{&quot;width&quot;:&quot;100%&quot;,&quot;height&quot;:&quot;250px&quot;},&quot;allowedSizes&quot;:[{&quot;width&quot;:&quot;100%&quot;,&quot;height&quot;:&quot;250px&quot;}],&quot;allowedDomains&quot;:[&quot;g-ecx.images-amazon.com&quot;,&quot;d3l3lkinz3f56t.cloudfront.net&quot;,&quot;g-ecx.images-amazon.com&quot;,&quot;z-ecx.images-amazon.com&quot;,&quot;images-na.ssl-images-amazon.com&quot;,&quot;g-ec4.images-amazon.com&quot;,&quot;images-cn.ssl-images-amazon.com&quot;],&quot;aanParams&quot;:&quot;site%3Damazon.us%3Bpt%3DDetail%3Bslot%3Dams-detail-right-v2%3Bpid%3DB06XD3LXXK%3Bbn%3D565108%3Barid%3D9fa1feb973b943ad88d1fe0517c96b18&quot;,&quot;loadAfter&quot;:&quot;immediate&quot;,&quot;extraDelay&quot;:0,&quot;iframeExtraStyle&quot;:&quot;&quot;,&quot;iframeClass&quot;:&quot;&quot;,&quot;adPixels&quot;:[],&quot;adPixelDelay&quot;:&quot;0&quot;,&quot;aaxInstrPixelUrl&quot;:&quot;&quot;,&quot;serverSideFetchAd&quot;:&quot;false&quot;,&quot;enableAdBlockerDetector&quot;:false,&quot;disableResizeFunc&quot;:true,&quot;fallbackStaticAdImgUrl&quot;:&quot;&quot;,&quot;fallbackStaticAdClickUrl&quot;:&quot;&quot;,&quot;fallbackStaticAdExtraStyle&quot;:&quot;&quot;,&quot;adFeedbackInfo&quot;:{&quot;endPoint&quot;:&quot;/gp/aq-feedback/lazyLoad/handler/af-link-handler.html&quot;,&quot;boolFeedback&quot;:true,&quot;slugText&quot;:&quot;Advertisement&quot;},&quot;adPlacementMetaData&quot;:{&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwNlhEM0xYWEs=&quot;,&quot;adElementId&quot;:&quot;ape_Detail_ams-detail-right-v2_desktop_placement&quot;,&quot;pageType&quot;:&quot;Detail&quot;,&quot;slotName&quot;:&quot;ams-detail-right-v2&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;cs&quot;},&quot;advertisementStyle&quot;:{&quot;position&quot;:&quot;absolute&quot;,&quot;top&quot;:&quot;2px&quot;,&quot;right&quot;:&quot;0px&quot;,&quot;display&quot;:&quot;inline-block&quot;,&quot;font&quot;:&quot;normal 11px Arial&quot;,&quot;color&quot;:&quot;grey&quot;},&quot;feedbackDivStyle&quot;:{&quot;position&quot;:&quot;relative&quot;,&quot;height&quot;:&quot;14px&quot;,&quot;top&quot;:&quot;2px&quot;},&quot;viewabilityStandards&quot;:[{&quot;p&quot;:0,&quot;t&quot;:0,&quot;def&quot;:&quot;amzn&quot;},{&quot;p&quot;:50,&quot;t&quot;:1,&quot;def&quot;:&quot;iab&quot;},{&quot;p&quot;:100,&quot;t&quot;:1,&quot;def&quot;:&quot;groupm&quot;}],&quot;ajaxWeblabTriggerId&quot;:&quot;&quot;,&quot;abpStatus&quot;:&quot;-1&quot;,&quot;abpAcceptable&quot;:&quot;true&quot;,&quot;programIdsToCollapse&quot;:[],&quot;DAsfUrl&quot;:&quot;https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/desktop/DAsf-1.50.228f98c._V451950910_.js&quot;,&quot;hostDomain&quot;:&quot;https://www.amazon.com&quot;,&quot;queryParams&quot;:{},&quot;aPageStart&quot;:1569718202649,&quot;adStartTime&quot;:1569718203390,&quot;safeFrameSrc&quot;:&quot;https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/whitelisted/desktop/sf-1.50.228f98c._V451950908_.html&quot;}\" id=\"ape_Detail_ams-detail-right-v2_desktop_iframe\" src=\"https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/whitelisted/desktop/sf-1.50.228f98c._V451950908_.html\" height=\"250px\" width=\"100%\" class=\"\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\" scrolling=\"no\" allowtransparency=\"true\" allowfullscreen=\"\" mozallowfullscreen=\"\" webkitallowfullscreen=\"\" data-arid=\"9fa1feb973b943ad88d1fe0517c96b18\" sandbox=\"allow-scripts allow-top-navigation allow-popups allow-popups-to-escape-sandbox allow-same-origin\" style=\"\">\u003C/iframe>\u003C/div>\u003Cscript>(function(){function a(d,e){if(window.addEventListener){window.addEventListener(d,e,false);}else{if(window.attachEvent){window.attachEvent(\"on\"+d,e);}}}function c(d,e){if(window.removeEventListener){window.removeEventListener(d,e,false);}else{if(window.detachEvent){window.detachEvent(\"on\"+d,e);}}}var b=function(){(function(){(function(j,m){j.sfLogErrors=j.sfLogErrors||false;var o=o||function(s,r){r=r||new Error(s);if(j.ue&&typeof ue.count==\"function\"){ue.count(\"adplacements:safeFrameError\",1);}if(!j.sfLogErrors){return;}if(j.ueLogError){j.ueLogError(r,{logLevel:\"ERROR\",attribution:\"APE-safeframe\",message:s+\" \"});}else{if(typeof console!==\"undefined\"&&console.error){console.error(s,r);}}};j.aanParams=j.aanParams||{};j.aanParams[\"ams-detail-right-v2\"]=\"site=amazon.us;pt=Detail;slot=ams-detail-right-v2;pid=B06XD3LXXK;bn=565108;arid=9fa1feb973b943ad88d1fe0517c96b18\";j[\"ams-detail-right-v2\"]={};j[\"ams-detail-right-v2\"].adStartTime=(new Date()).getTime();function d(){return j.innerHeight||m.documentElement.clientHeight;}function g(){return j.innerWidth||m.documentElement.clientWidth;}function e(t,r,s){if(t>0){return(s>t);}else{return(r>0);}}var f=function(){return(Date.now?Date.now():new Date().getTime());};throttle=function(s,u,y){var r,w,z;var x=null;var v=0;if(!y){y={};}var t=function(){v=y.leading===false?0:f();x=null;z=s.apply(r,w);if(!x){r=w=null;}};return function(){var B=f();if(!v&&y.leading===false){v=B;}var A=u-(B-v);r=this;w=arguments;if(A\u003C=0||A>u){if(x){clearTimeout(x);x=null;}v=B;z=s.apply(r,w);if(!x){r=w=null;}}else{if(!x&&y.trailing!==false){x=setTimeout(t,A);}}return z;};};function l(u,w,v,r){try{var t=m.getElementById(u).getBoundingClientRect();if(e(t.top,t.bottom,d())&&e(t.left,t.right,g())){if(typeof uet==\"function\"){uet(\"bb\",\"adplacements:viewablelatency:\"+w,{wb:1});if(v){uet(\"bb\",\"adplacements:viewablelatency:\"+v,{wb:1});}}if(typeof uex==\"function\"&&j.ue&&typeof ue.count==\"function\"){if(j.apeViewableLatencyTrackers[r].loaded){uex(\"ld\",\"adplacements:viewablelatency:\"+w,{wb:1});if(v){uex(\"ld\",\"adplacements:viewablelatency:\"+v,{wb:1});}ue.count(\"adplacements:htmlviewed:loaded:\"+w,1);if(v){ue.count(\"adplacements:htmlviewed:loaded:\"+v,1);}}ue.count(\"adplacements:htmlviewed:\"+w,1);if(v){ue.count(\"adplacements:htmlviewed:\"+v,1);}}j.apeViewableLatencyTrackers[r].viewed=true;if(j.apeViewableLatencyTrackers[r].tracker){c(\"scroll\",j.apeViewableLatencyTrackers[r].tracker);c(\"resize\",j.apeViewableLatencyTrackers[r].tracker);}}}catch(s){j.apeViewableLatencyTrackers[r].valid=false;}}try{j.apeViewableLatencyTrackers=j.apeViewableLatencyTrackers||{};var q=\"ape_Detail_ams-detail-right-v2_desktop_placement\";var p=\"Detail_ams-detail-right-v2_desktop\".replace(/\\_/g,\":\");var h=\"6f9d2c58-5baa-4a99-99fc-663245286f7f\";var i=\"9fa1feb973b943ad88d1fe0517c96b18\";j.apeViewableLatencyTrackers[i]=j.apeViewableLatencyTrackers[i]||{};j.apeViewableLatencyTrackers[i].valid=true;l(q,p,h,i);if(j.apeViewableLatencyTrackers[i].valid&&!j.apeViewableLatencyTrackers[i].viewed){j.apeViewableLatencyTrackers[i].tracker=throttle(function(){l(q,p,h,i);},20);a(\"scroll\",j.apeViewableLatencyTrackers[i].tracker);a(\"resize\",j.apeViewableLatencyTrackers[i].tracker);}}catch(k){if(j.apeViewableLatencyTrackers&&j.apeViewableLatencyTrackers[\"9fa1feb973b943ad88d1fe0517c96b18\"]){j.apeViewableLatencyTrackers[\"9fa1feb973b943ad88d1fe0517c96b18\"].valid=false;}o(\"Error initializing viewable latency instrumentation\",k);}try{if(j.DAsf){j.DAsf.loadAds();}else{var n=m.createElement(\"script\");n.type=\"text/javascript\";n.async=true;n.charset=\"utf-8\";n.src=\"https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/desktop/DAsf-1.50.228f98c._V451950910_.js?csm_attribution=APE-SafeFrame\";n.onerror=function(){o(\"Error loading SafeFrame library\");};n.setAttribute(\"crossorigin\",\"anonymous\");(m.getElementsByTagName(\"head\")[0]||m.getElementsByTagName(\"body\")[0]).appendChild(n);}}catch(k){o(\"Error appending DAsf library\",k);}}(window,document));})();};b();})();\u003C/script>\n    \u003C/div>\n\n\n\n                \n                \n            \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"servicesInterstitial_feature_div\" class=\"feature\" data-feature-name=\"servicesInterstitial\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"dashPreRegistration_feature_div\" class=\"feature\" data-feature-name=\"dashPreRegistration\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"uss_feature_div\" class=\"feature\" data-feature-name=\"uss\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\u003Cdiv id=\"uss-sheet-view\" data-layout-type=\"uss-default-layout\" class=\"a-section a-spacing-none uss-c-uss-sheet-view-gredient uss-l-uss-sheet-view aok-hidden\">\n\t\n\n\n\n\n\u003Cdiv class=\"a-section a-spacing-none uss-l-default-layout\">\n\t\u003Cdiv class=\"a-section a-spacing-none uss-c-head\">\n\t\u003C/div>\n\t\u003Chr class=\"a-spacing-none a-divider-normal\">\n\t\u003Cdiv class=\"a-section uss-c-body\">\n\t\t\u003Cdiv class=\"a-section uss-loading-skeleton\">\n\t\t\t\n\n\u003Cdiv class=\"a-section a-spacing-medium a-spacing-top-medium loading-message uss-recommendations-message uss-text-white-color aok-hidden\">\n\t\u003Cspan class=\"a-size-medium a-text-bold\">\n\t    \n            \n            \n                Loading recommendations for you\n            \n        \n\t\u003C/span>\n\u003C/div>\n\n\u003Cdiv class=\"a-section a-spacing-medium a-spacing-top-medium asin-faceout-skeleton\">\n\t\u003Cdiv class=\"a-fixed-left-grid\">\u003Cdiv class=\"a-fixed-left-grid-inner\" style=\"padding-left:160px\">\n\t\t\u003Cdiv class=\"a-fixed-left-grid-col a-col-left\" style=\"width:160px;margin-left:-160px;float:left;\">\n\t\t\t\u003Cdiv class=\"a-section image-skeleton\">\u003C/div>\n\t\t\u003C/div>\n\t\t\u003Cdiv class=\"a-fixed-left-grid-col a-col-right\" style=\"padding-left:0%;float:left;\">\n\t\t\t\u003Cdiv class=\"a-section a-spacing-small loading-bar\">\u003C/div>\n\t\t\t\u003Cdiv class=\"a-section a-spacing-small loading-bar\">\u003C/div>\n\t\t\t\u003Cdiv class=\"a-section a-spacing-small loading-bar\">\u003C/div>\n\t\t\t\u003Cdiv class=\"a-section a-spacing-small button-skeleton\">\u003C/div>\n\t\t\u003C/div>\n\t\u003C/div>\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"a-section a-spacing-medium asin-faceout-skeleton\">\n\t\u003Cdiv class=\"a-fixed-left-grid\">\u003Cdiv class=\"a-fixed-left-grid-inner\" style=\"padding-left:160px\">\n\t\t\u003Cdiv class=\"a-fixed-left-grid-col a-col-left\" style=\"width:160px;margin-left:-160px;float:left;\">\n\t\t\t\u003Cdiv class=\"a-section image-skeleton\">\u003C/div>\n\t\t\u003C/div>\n\t\t\u003Cdiv class=\"a-fixed-left-grid-col a-col-right\" style=\"padding-left:0%;float:left;\">\n\t\t\t\u003Cdiv class=\"a-section a-spacing-small loading-bar\">\u003C/div>\n\t\t\t\u003Cdiv class=\"a-section a-spacing-small loading-bar\">\u003C/div>\n\t\t\t\u003Cdiv class=\"a-section a-spacing-small loading-bar\">\u003C/div>\n\t\t\t\u003Cdiv class=\"a-section a-spacing-small button-skeleton\">\u003C/div>\n\t\t\u003C/div>\n\t\u003C/div>\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"a-section a-spacing-medium asin-faceout-skeleton\">\n\t\u003Cdiv class=\"a-fixed-left-grid\">\u003Cdiv class=\"a-fixed-left-grid-inner\" style=\"padding-left:160px\">\n\t\t\u003Cdiv class=\"a-fixed-left-grid-col a-col-left\" style=\"width:160px;margin-left:-160px;float:left;\">\n\t\t\t\u003Cdiv class=\"a-section image-skeleton\">\u003C/div>\n\t\t\u003C/div>\n\t\t\u003Cdiv class=\"a-fixed-left-grid-col a-col-right\" style=\"padding-left:0%;float:left;\">\n\t\t\t\u003Cdiv class=\"a-section a-spacing-small loading-bar\">\u003C/div>\n\t\t\t\u003Cdiv class=\"a-section a-spacing-small loading-bar\">\u003C/div>\n\t\t\t\u003Cdiv class=\"a-section a-spacing-small loading-bar\">\u003C/div>\n\t\t\t\u003Cdiv class=\"a-section a-spacing-small button-skeleton\">\u003C/div>\n\t\t\u003C/div>\n\t\u003C/div>\u003C/div>\n\u003C/div>\n\t\t\u003C/div>\n        \u003Cdiv class=\"a-section a-spacing-medium a-text-center uss-recommendations-message uss-recommendations-loaded-message uss-text-white-color aok-hidden\">\n            \u003Cspan class=\"a-size-medium a-text-bold\">\n                \n                    \n                    \n                        Recommendations for you\n                    \n                \n            \u003C/span>\n        \u003C/div>\n\t\u003C/div>\n\u003C/div>\n\n\u003C/div>\n\n\n\n\u003Cdiv class=\"a-section aok-hidden uss-template-store\">\n\t\n\u003Cdiv data-template-name=\"uss-c-atc-status-widget\" data-widget-type=\"uss-c-atc-status-widget\" class=\"a-section a-spacing-none a-spacing-top-base uss-c-atc-status-widget uss-l-atc-status-widget uss-template\">\n    \u003Cdiv class=\"a-column a-span12 a-text-center a-spacing-none atc-acknowledgement-message\">\n        \u003Cdiv class=\"a-row a-spacing-none\">\n            \u003Cdiv class=\"a-image-container a-dynamic-image-container main-image uss-o-promising-ui-element-animation is-loading\" style=\"width:60px; height:60px;\">\n                \u003Cdiv class=\"a-section a-spacing-none ui-promise\">\n                    \u003Cdiv class=\"a-spinner-wrapper\">\u003Cspan class=\"a-spinner a-spinner-medium\">\u003C/span>\u003C/div>\n                \u003C/div>\n                \u003Cdiv class=\"a-section a-spacing-none ui-value\">\n                \u003C/div>\n                \u003Cdiv class=\"a-section success-tick-mark-placeholder\">\n                \u003C/div>\n                \u003Cdiv class=\"a-section error-tick-mark-placeholder\">\n                    \u003Ci class=\"a-icon a-icon-warning a-icon-medium\" role=\"img\">\u003C/i>\n                \u003C/div>\n            \u003C/div>\n        \u003C/div>\n        \u003Cdiv class=\"a-row a-spacing-none\">\n            \n\n\n\n\u003Cdiv class=\"a-section a-spacing-none uss-c-atc-status-msg uss-o-promising-ui-element-animation is-loading\">\n\n\t\u003Cdiv class=\"a-section ui-promise atc-success atc-error\">\n        \u003Ch1 class=\"a-size-extra-large a-spacing-micro success-message uss-text-white-color\">\n            Adding to Cart...\n        \u003C/h1>\n\t\u003C/div>\n\n\t\u003Cdiv class=\"a-section a-spacing-none ui-value\">\n        \u003Cdiv class=\"a-section a-spacing-none atc-success-message\">\n            \u003Ch1 class=\"a-size-extra-large a-spacing-micro success-message uss-text-white-color\">\n                Added to Cart\n            \u003C/h1>\n        \u003C/div>\n        \u003Cdiv class=\"a-section a-spacing-none atc-error-message\">\n            \u003Ch1 class=\"a-size-extra-large a-spacing-micro error-message uss-text-white-color\">\n                Not Added\n            \u003C/h1>\n        \u003C/div>\n        \u003Cdiv class=\"a-section a-spacing-none atc-item-in-cart-message\">\n            \u003Ci class=\"a-icon a-icon-success a-icon-medium\" role=\"img\">\u003C/i>\n            \u003Ch2 class=\"a-color-success item-in-cart-message\">\n                Item is in your Cart\n            \u003C/h2>\n        \u003C/div>\n    \u003C/div>\n\u003C/div>\n\n            \n\n\n\n\n\n\n\u003Cdiv class=\"a-section a-spacing-none uss-c-cart-status-msg uss-o-promising-ui-element is-loading\">\n    \u003Cdiv class=\"a-section a-spacing-none ui-promise\">\n    \u003C/div>\n    \u003Cdiv class=\"a-section a-spacing-none ui-value\">\n        \u003Cspan data-cart-count-plural-template=\"Cart Subtotal (###cartCount items):\" data-cart-count-singular-template=\"Cart Subtotal (###cartCount item):\" class=\"a-size-base-plus cart-count uss-text-white-color\">\n        \u003C/span>\n        \u003Cspan class=\"a-size-base-plus cart-sub-total uss-text-white-color a-text-bold\">\u003C/span>\n    \u003C/div>\n\u003C/div>\n\n            \n\u003Cdiv class=\"a-section a-spacing-micro uss-c-shipping-details aok-hidden\">\n    \u003Cdiv class=\"a-section a-spacing-none shipping-message-placeholder uss-text-white-color\">\u003C/div>\n\u003C/div>\n\n            \n\n\n\n\u003Cdiv class=\"a-section a-spacing-medium uss-c-sub-nav\">\n\t\u003Cspan class=\"a-button a-button-base cart-btn\" id=\"a-autoid-3\">\u003Cspan class=\"a-button-inner\">\u003Ca href=\"/gp/cart/view.html/ref=uss_cart\" class=\"a-button-text\" role=\"button\" id=\"a-autoid-3-announce\">\n\t\tView Cart\n\t\u003C/a>\u003C/span>\u003C/span>\n\t\u003Cform method=\"post\" action=\"/gp/cart/desktop/go-to-checkout.html/ref=pd_luc_mri?proceedToCheckout=Proceed&amp;zipcode=&amp;addressID=new&amp;zipcode=\" class=\"checkout-form a-spacing-none\">\n\t\t\u003Cspan class=\"a-button a-spacing-none a-button-primary checkout-btn\" id=\"a-autoid-4\">\u003Cspan class=\"a-button-inner\">\u003Cinput class=\"a-button-input\" type=\"submit\" aria-labelledby=\"a-autoid-4-announce\">\u003Cspan class=\"a-button-text\" aria-hidden=\"true\" id=\"a-autoid-4-announce\">\n                Proceed to checkout\n        \u003C/span>\u003C/span>\u003C/span>\n\t\u003C/form>\n\u003C/div>\n        \u003C/div>\n    \u003C/div>\n\n\t\n\n\u003Cdiv class=\"a-section a-spacing-medium a-text-center atc-generic-error aok-hidden\">\n\t\u003Cdiv class=\"a-section a-spacing-none atc-error\">\n\t\t\u003Ci class=\"a-icon a-icon-warning a-icon-medium\" role=\"img\">\u003C/i>\n\t\t\u003Ch1 class=\"a-size-extra-large a-spacing-micro error-message uss-text-white-color\">\n\t\t\tNot Added\n\t\t\u003C/h1>\n\t\u003C/div>\n\t\u003Cspan class=\"a-size-base-plus uss-text-white-color\">\n\t\tThere was a problem adding this item to Cart. Please try again later.\n\t\u003C/span>\n\u003C/div>\n\n\u003C/div>\n\n\n        \u003Cdiv data-template-name=\"uss-no-recommendation-widget\" class=\"a-section a-spacing-none uss-template a-text-center uss-text-white-color\">\n\t        \n\n\n\u003Cdiv class=\"a-section a-spacing-medium a-spacing-top-medium\">\n        \u003Cspan class=\"a-size-base\">\n\t        Sorry, we're having trouble showing recommendations right now. Please try again later.\n        \u003C/span>\n\u003C/div>\n\u003Ca class=\"a-link-normal continue-shopping\" href=\"#\">\n\tContinue shopping\n\u003C/a>\n\n        \u003C/div>\n\u003C/div>\n\n\n\n\u003Cscript type=\"text/javascript\">(function(f) {var _np=(window.P._namespace(\"USSLayoutRegistration\"));if(_np.guardFatal){_np.guardFatal(f)(_np);}else{f(_np);}}(function(P) {\n    P.when(\"uss-default-layout\").register(\"uss-layout\", function(defaultLayout){\n        return defaultLayout;\n    });\n}));\u003C/script>\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"ussInit_feature_div\" class=\"feature\" data-feature-name=\"ussInit\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n\u003C/div>\n         \n\u003Cdiv id=\"leftCol\" class=\"leftCol\">\n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"imageBlock_feature_div\" class=\"feature\" data-feature-name=\"imageBlock\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n    \n      \n\n\n\n\n\n\u003Cdiv id=\"imageBlock\" aria-hidden=\"true\" class=\"a-section imageBlockRearch\" style=\"opacity: 1;\">\n    \u003Cdiv class=\"a-fixed-left-grid\">\u003Cdiv class=\"a-fixed-left-grid-inner\" style=\"padding-left:32px\">\n        \n            \u003Cdiv id=\"altImages\" class=\"a-fixed-left-grid-col a-col-left\" style=\"width:40px;margin-left:-40px;float:left;\">\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cul class=\"a-unordered-list a-nostyle a-button-list a-vertical a-spacing-top-micro\">\n\n    \n    \n\n    \n\n   \n    \n    \n        \n            \n            \n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                    \n              \n                  \n        \n    \n        \n            \n            \n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                    \n              \n                  \n        \n    \n        \n            \n            \n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                    \n              \n                  \n        \n    \n        \n            \n            \n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                    \n              \n                  \n        \n    \n    \n    \n        \n        \n            \n            \u003Cli class=\"a-spacing-small videoCountTemplate aok-hidden\">\u003Cspan class=\"a-list-item\">\n                \u003Cspan id=\"videoCount_template\" class=\"a-size-mini a-color-secondary video-count a-text-bold a-nowrap\"> \u003Chza:string id=\"\">\u003C/hza:string>\u003C/span>\n            \u003C/span>\u003C/li>\n        \n\n        \n        \n    \n\n    \u003Cli class=\"a-spacing-small 360IngressTemplate aok-hidden\">\u003Cspan class=\"a-list-item\">\n        \u003Cspan class=\"a-declarative\" data-action=\"thumb-action\" data-thumb-action=\"{}\">\n            \u003Cspan class=\"a-button a-button-thumbnail a-button-toggle\" id=\"a-autoid-9\">\u003Cspan class=\"a-button-inner\">\u003Cinput class=\"a-button-input\" type=\"submit\" aria-labelledby=\"a-autoid-9-announce\">\u003Cspan class=\"a-button-text\" aria-hidden=\"true\" id=\"a-autoid-9-announce\">\n                \u003Cimg alt=\"\" src=\"https://images-na.ssl-images-amazon.com/images/G/01/HomeCustomProduct/360_icon_73x73v2._CB510686333_SS40_FMpng_RI_.png\">\n            \u003C/span>\u003C/span>\u003C/span>\n        \u003C/span>\n    \u003C/span>\u003C/li>\n\n    \n    \n        \n            \u003Cli class=\"a-spacing-small template\">\u003Cspan class=\"a-list-item\">\n                \u003Cspan class=\"a-button a-button-thumbnail a-button-toggle\" id=\"a-autoid-10\">\u003Cspan class=\"a-button-inner\">\u003Cinput class=\"a-button-input\" type=\"submit\" aria-labelledby=\"a-autoid-10-announce\">\u003Cspan class=\"a-button-text\" aria-hidden=\"true\" id=\"a-autoid-10-announce\">\n                  \u003Cspan class=\"placeHolder\">\u003C/span>\n                \u003C/span>\u003C/span>\u003C/span>\n            \u003C/span>\u003C/li>\n        \n        \n    \n\n    \n\n    \n    \n \n    \n\n\u003Cli class=\"a-spacing-small item imageThumbnail a-declarative\">\u003Cspan class=\"a-list-item\">\n                \u003Cspan class=\"a-button a-button-thumbnail a-button-toggle a-button-selected a-button-focus\" id=\"a-autoid-10\">\u003Cspan class=\"a-button-inner\">\u003Cinput class=\"a-button-input\" type=\"submit\" aria-labelledby=\"a-autoid-10-announce\">\u003Cspan class=\"a-button-text\" aria-hidden=\"true\" id=\"a-autoid-10-announce\">\n                  \u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/I/51840t%2BtcFL._AC_US40_.jpg\">\n                \u003C/span>\u003C/span>\u003C/span>\n            \u003C/span>\u003C/li>\u003Cli class=\"a-spacing-small item imageThumbnail a-declarative\">\u003Cspan class=\"a-list-item\">\n                \u003Cspan class=\"a-button a-button-thumbnail a-button-toggle\" id=\"a-autoid-10\">\u003Cspan class=\"a-button-inner\">\u003Cinput class=\"a-button-input\" type=\"submit\" aria-labelledby=\"a-autoid-10-announce\">\u003Cspan class=\"a-button-text\" aria-hidden=\"true\" id=\"a-autoid-10-announce\">\n                  \u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/I/51sg-rYh0oL._AC_US40_.jpg\">\n                \u003C/span>\u003C/span>\u003C/span>\n            \u003C/span>\u003C/li>\u003Cli class=\"a-spacing-small item imageThumbnail a-declarative\">\u003Cspan class=\"a-list-item\">\n                \u003Cspan class=\"a-button a-button-thumbnail a-button-toggle\" id=\"a-autoid-10\">\u003Cspan class=\"a-button-inner\">\u003Cinput class=\"a-button-input\" type=\"submit\" aria-labelledby=\"a-autoid-10-announce\">\u003Cspan class=\"a-button-text\" aria-hidden=\"true\" id=\"a-autoid-10-announce\">\n                  \u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/I/515wf-TfdvL._AC_US40_.jpg\">\n                \u003C/span>\u003C/span>\u003C/span>\n            \u003C/span>\u003C/li>\u003Cli class=\"a-spacing-small item imageThumbnail a-declarative\">\u003Cspan class=\"a-list-item\">\n                \u003Cspan class=\"a-button a-button-thumbnail a-button-toggle\" id=\"a-autoid-10\">\u003Cspan class=\"a-button-inner\">\u003Cinput class=\"a-button-input\" type=\"submit\" aria-labelledby=\"a-autoid-10-announce\">\u003Cspan class=\"a-button-text\" aria-hidden=\"true\" id=\"a-autoid-10-announce\">\n                  \u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/I/415xZuqbCmL._AC_US40_.jpg\">\n                \u003C/span>\u003C/span>\u003C/span>\n            \u003C/span>\u003C/li>\u003C/ul>\n\n \u003Cstyle type=\"text/css\">\n    #altIngressSpan {\n        width: 40px;\n        height: 40px;\n    }\n\u003C/style>\n\n\n            \u003C/div>\n        \n        \n        \u003Cdiv class=\"a-text-center a-fixed-left-grid-col a-col-right\" style=\"padding-left:1%;float:left;\">\n            \u003Cdiv class=\"a-row a-spacing-none a-grid-vertical-align a-grid-center canvas ie7-width-96\" style=\"opacity: 1;\">\n                \u003Cdiv id=\"main-image-container\" class=\"a-dynamic-image-container\" style=\"height: 396px;\">\n                    \n\n\n\n\n    \u003Cdiv id=\"video-outer-container\">\n        \u003Cdiv id=\"main-video-container\" class=\"chromeful-container\">\n        \u003C/div>\n        \u003Cdiv id=\"video-canvas-caption\" class=\"a-row\">\n            \u003Cdiv class=\"a-column a-span12 a-text-center\">\n                \u003Cspan id=\"videoCaption\" class=\"a-color-secondary\">\u003C/span>\n            \u003C/div>\n        \u003C/div>\n    \u003C/div>\n\n                    \n\n\n\n\n\u003Cdiv class=\"a-hidden\" id=\"auiImmersiveViewDiv\">\u003C/div> \n\n\n\n\n\n\n\n\n    \n    \n      \n\n\n\n\n\u003Cdiv class=\"variationUnavailable unavailableExp\" style=\"display: none;\">\n    \u003Cdiv class=\"inner\">\n        \n        \u003Cdiv class=\"a-box a-alert a-alert-error\" aria-live=\"assertive\" role=\"alert\">\u003Cdiv class=\"a-box-inner a-alert-container\">\u003Ch4 class=\"a-alert-heading\">Image Unavailable\u003C/h4>\u003Ci class=\"a-icon a-icon-alert\">\u003C/i>\u003Cdiv class=\"a-alert-content\">\n            \u003Cspan class=\"a-text-bold\">\n                Image not available for\u003Cbr>Color:\n                \u003Cspan class=\"unvailableVariation\">\u003C/span>\n            \u003C/span>\n        \u003C/div>\u003C/div>\u003C/div>\n    \u003C/div>\n\u003C/div>\n\n\n\n\n\u003C!-- Append onload function to stretch image on load to avoid flicker when transitioning from low res image from Mason to large image variant in desktop -->\n\u003C!-- any change in onload function requires a corresponding change in Mason to allow it pass in /mason/amazon-family/gp/product/features/embed-features.mi -->\n\u003C!-- and /mason/amazon-family/gp/product/features/embed-landing-image.mi -->\n\n    \n    \n        \n    \n\n\n\n\u003Cul class=\"a-unordered-list a-nostyle a-horizontal list maintain-height\">\n\n\n\n\t\u003Cli class=\"image item itemNo0 maintain-height selected\">\u003Cspan class=\"a-list-item\">\n\t    \u003Cspan class=\"a-declarative\" data-action=\"main-image-click\" data-main-image-click=\"{}\">\n\t        \u003Cdiv id=\"imgTagWrapperId\" class=\"imgTagWrapper\" style=\"height: 396px;\">\n\t            \u003Cimg alt=\"Acer Flagship CB3-532 15.6&amp;quot; HD Premium Chromebook - Intel Dual-Core Celeron N3060 up to 2.48GH.z, 2GB RAM, 16GB SSD, Wireless AC, HDMI, USB 3.0, Webcam, Chrome OS (Renewed)\" src=\"https://images-na.ssl-images-amazon.com/images/I/51840t%2BtcFL._AC_.jpg\" data-old-hires=\"\" onload=\"if(this.width/this.height > 1.0){this.className += ' a-stretch-horizontal'}else{this.className += ' a-stretch-vertical'};this.onload='';\" class=\"a-dynamic-image a-stretch-horizontal\" id=\"landingImage\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/51840t%2BtcFL._AC_SY450_.jpg&quot;:[450,450],&quot;https://images-na.ssl-images-amazon.com/images/I/51840t%2BtcFL._AC_SY355_.jpg&quot;:[355,355],&quot;https://images-na.ssl-images-amazon.com/images/I/51840t%2BtcFL._AC_SX425_.jpg&quot;:[425,425],&quot;https://images-na.ssl-images-amazon.com/images/I/51840t%2BtcFL._AC_SX466_.jpg&quot;:[466,466],&quot;https://images-na.ssl-images-amazon.com/images/I/51840t%2BtcFL._AC_.jpg&quot;:[500,500]}\" style=\"max-width: 396px; max-height: 274.365px;\">\n\t        \u003C/div>\n\t    \u003C/span>\n\t\u003C/span>\u003C/li>\n\n\n\n\n\u003Cli class=\"mainImageTemplate template\">\u003Cspan class=\"a-list-item\">\n    \u003Cspan class=\"a-declarative\" data-action=\"main-image-click\" data-main-image-click=\"{}\">\n        \u003Cdiv class=\"imgTagWrapper\">\n            \u003Cspan class=\"placeHolder\">\u003C/span>\n        \u003C/div>\n    \u003C/span>\n\u003C/span>\u003C/li>\n\n\n\u003Cli class=\"swatchHoverExp a-hidden maintain-height\">\u003Cspan class=\"a-list-item\">\n    \u003Cspan class=\"a-declarative\" data-action=\"main-image-click\" data-main-image-click=\"{}\">\n        \u003Cdiv class=\"imgTagWrapper\">\n            \u003Cspan class=\"placeHolder\">\u003C/span>\n        \u003C/div>\n    \u003C/span>\n\u003C/span>\u003C/li>\n\n\n\n\u003Cli id=\"noFlashContent\" class=\"noFlash a-hidden\">\u003Cspan class=\"a-list-item\">\n    \u003Chza:string id=\"softlines_dp_video_flash_player\">\n    \u003Ca class=\"a-link-normal\" target=\"_blank\" rel=\"noopener\" href=\"https://get.adobe.com/flashplayer\">\n        \u003Chza:string id=\"softlines_dp_video_flash_player_text\">\n        \u003Cspan class=\"swSprite s_extLink\">\u003C/span>\n    \u003C/hza:string>\u003C/a>\n\u003C/hza:string>\u003C/span>\u003C/li>\n\n\n\u003C/ul>\n\n\n\n\n\n\n\n\u003Cscript type=\"text/javascript\">\n    var mainImgContainer = document.getElementById(\"main-image-container\");\n    var landingImage = document.getElementById(\"landingImage\");\n    var imgWrapperDiv = document.getElementById(\"imgTagWrapperId\");\n    \n    var containerWidth = mainImgContainer.offsetWidth;\n    var holderRatio = 1.0;\n    var shouldAutoPlay = false;\n    var containerHeight = containerWidth/holderRatio;\n    containerHeight = Math.min(containerHeight, 700);\n\n    var dynamicImageMaxHeight = 500 ;\n    var dynamicImageMaxWidth = 500 ;\n    \n    dynamicImageMaxHeight = landingImage.naturalHeight;\n    dynamicImageMaxWidth = landingImage.naturalWidth;\n    \n    var aspectRatio = dynamicImageMaxWidth/dynamicImageMaxHeight;\n\n    var imageMaxHeight = containerHeight;\n    var imageMaxWidth = containerWidth;\n\n    if(!shouldAutoPlay && !true) {\n        imageMaxHeight = Math.min(imageMaxHeight, dynamicImageMaxHeight);\n        imageMaxWidth = Math.min(imageMaxWidth, dynamicImageMaxWidth);\n    }\n\n    \n    var useImageBlockLeftColCentering = false;\n    var rightMargin = 32;\n\n    if(typeof useImageBlockLeftColCentering !== \"undefined\" && useImageBlockLeftColCentering){\n        mainImgContainer.style.marginRight = rightMargin + \"px\";\n    }\n    mainImgContainer.style.height = containerHeight + \"px\";\n    \n    var imageMaxWidthBasedOnHeight = imageMaxHeight * aspectRatio;\n    var imageMaxHeightBasedOnWidth = imageMaxWidth / aspectRatio;\n    imageMaxHeight = Math.min(imageMaxHeight, imageMaxHeightBasedOnWidth);\n    imageMaxWidth = Math.min(imageMaxWidth, imageMaxWidthBasedOnHeight);\n\n    if(imgWrapperDiv){\n        imgWrapperDiv.style.height = containerHeight + \"px\";\n    }\n\n    if(landingImage){\n        landingImage.style.maxHeight = imageMaxHeight + \"px\";\n        landingImage.style.maxWidth = imageMaxWidth + \"px\";\n    }\n\n    if(shouldAutoPlay){\n        if(landingImage){\n            landingImage.style.height = imageMaxHeight + \"px\";\n            landingImage.style.width  = imageMaxWidth + \"px\";\n        }\n    }\n\n\u003C/script>\n\n\n\n\n\n\n                \u003C/div>\n            \u003Cdiv style=\"position: absolute; left: 50%; top: 50%; transform: translate3d(-50%, -50%, 0px); z-index: 3; width: 48px; height: 48px; border: 8px solid rgb(255, 255, 255); border-radius: 100%; display: none;\">\u003Cspan class=\"a-spinner a-spinner-medium\">\u003C/span>\u003C/div>\u003C/div>\n\n            \n                \n                \n                    \u003Cdiv id=\"image-canvas-caption\" class=\"a-row\">\n                         \u003Cdiv class=\"a-column a-span12 a-text-center\">\n                             \u003Cspan id=\"canvasCaption\" class=\"a-color-secondary\">Click image to open expanded view\u003C/span>\n                         \u003C/div>\n                    \u003C/div>\n                \n            \n            \n            \u003Cdiv class=\"collections-collect-button\">\u003C/div>\n        \u003C/div>\n    \u003C/div>\u003C/div>\n\u003C/div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cscript type=\"text/javascript\">\nP.when('A').register(\"ImageBlockATF\", function(A){\n    var data = {\n                'colorImages': { 'initial': [{\"hiRes\":null,\"thumb\":\"https://images-na.ssl-images-amazon.com/images/I/51840t%2BtcFL._AC_US40_.jpg\",\"large\":\"https://images-na.ssl-images-amazon.com/images/I/51840t%2BtcFL._AC_.jpg\",\"main\":{\"https://images-na.ssl-images-amazon.com/images/I/51840t%2BtcFL._AC_SY355_.jpg\":[355,355],\"https://images-na.ssl-images-amazon.com/images/I/51840t%2BtcFL._AC_SY450_.jpg\":[450,450],\"https://images-na.ssl-images-amazon.com/images/I/51840t%2BtcFL._AC_SX425_.jpg\":[425,425],\"https://images-na.ssl-images-amazon.com/images/I/51840t%2BtcFL._AC_SX466_.jpg\":[466,466],\"https://images-na.ssl-images-amazon.com/images/I/51840t%2BtcFL._AC_.jpg\":[500,500]},\"variant\":\"MAIN\",\"lowRes\":null},{\"hiRes\":\"https://images-na.ssl-images-amazon.com/images/I/81E3fJ6TFaL._AC_SL1500_.jpg\",\"thumb\":\"https://images-na.ssl-images-amazon.com/images/I/51sg-rYh0oL._AC_US40_.jpg\",\"large\":\"https://images-na.ssl-images-amazon.com/images/I/51sg-rYh0oL._AC_.jpg\",\"main\":{\"https://images-na.ssl-images-amazon.com/images/I/81E3fJ6TFaL._AC_SY355_.jpg\":[355,355],\"https://images-na.ssl-images-amazon.com/images/I/81E3fJ6TFaL._AC_SY450_.jpg\":[450,450],\"https://images-na.ssl-images-amazon.com/images/I/81E3fJ6TFaL._AC_SX425_.jpg\":[425,425],\"https://images-na.ssl-images-amazon.com/images/I/81E3fJ6TFaL._AC_SX466_.jpg\":[466,466],\"https://images-na.ssl-images-amazon.com/images/I/81E3fJ6TFaL._AC_SX522_.jpg\":[522,522],\"https://images-na.ssl-images-amazon.com/images/I/81E3fJ6TFaL._AC_SX569_.jpg\":[569,569],\"https://images-na.ssl-images-amazon.com/images/I/81E3fJ6TFaL._AC_SX679_.jpg\":[679,679]},\"variant\":\"PT01\",\"lowRes\":null},{\"hiRes\":\"https://images-na.ssl-images-amazon.com/images/I/81Nq9H-3iqL._AC_SL1500_.jpg\",\"thumb\":\"https://images-na.ssl-images-amazon.com/images/I/515wf-TfdvL._AC_US40_.jpg\",\"large\":\"https://images-na.ssl-images-amazon.com/images/I/515wf-TfdvL._AC_.jpg\",\"main\":{\"https://images-na.ssl-images-amazon.com/images/I/81Nq9H-3iqL._AC_SY355_.jpg\":[355,355],\"https://images-na.ssl-images-amazon.com/images/I/81Nq9H-3iqL._AC_SY450_.jpg\":[450,450],\"https://images-na.ssl-images-amazon.com/images/I/81Nq9H-3iqL._AC_SX425_.jpg\":[425,425],\"https://images-na.ssl-images-amazon.com/images/I/81Nq9H-3iqL._AC_SX466_.jpg\":[466,466],\"https://images-na.ssl-images-amazon.com/images/I/81Nq9H-3iqL._AC_SX522_.jpg\":[522,522],\"https://images-na.ssl-images-amazon.com/images/I/81Nq9H-3iqL._AC_SX569_.jpg\":[569,569],\"https://images-na.ssl-images-amazon.com/images/I/81Nq9H-3iqL._AC_SX679_.jpg\":[679,679]},\"variant\":\"PT02\",\"lowRes\":null},{\"hiRes\":\"https://images-na.ssl-images-amazon.com/images/I/81ZuvkyzCsL._AC_SL1500_.jpg\",\"thumb\":\"https://images-na.ssl-images-amazon.com/images/I/415xZuqbCmL._AC_US40_.jpg\",\"large\":\"https://images-na.ssl-images-amazon.com/images/I/415xZuqbCmL._AC_.jpg\",\"main\":{\"https://images-na.ssl-images-amazon.com/images/I/81ZuvkyzCsL._AC_SY355_.jpg\":[355,355],\"https://images-na.ssl-images-amazon.com/images/I/81ZuvkyzCsL._AC_SY450_.jpg\":[450,450],\"https://images-na.ssl-images-amazon.com/images/I/81ZuvkyzCsL._AC_SX425_.jpg\":[425,425],\"https://images-na.ssl-images-amazon.com/images/I/81ZuvkyzCsL._AC_SX466_.jpg\":[466,466],\"https://images-na.ssl-images-amazon.com/images/I/81ZuvkyzCsL._AC_SX522_.jpg\":[522,522],\"https://images-na.ssl-images-amazon.com/images/I/81ZuvkyzCsL._AC_SX569_.jpg\":[569,569],\"https://images-na.ssl-images-amazon.com/images/I/81ZuvkyzCsL._AC_SX679_.jpg\":[679,679]},\"variant\":\"PT03\",\"lowRes\":null}]},\n                'colorToAsin': {'initial': {}},\n                'holderRatio': 1.0,\n                'holderMaxHeight': 700,\n                'heroImage': {'initial': []},\n                'heroVideo': {'initial': []},\n                'spin360ColorData': {'initial': {}},\n                'spin360ColorEnabled': {'initial': 0},\n                'spin360ConfigEnabled': false,\n                'spin360LazyLoadEnabled': false,\n                'playVideoInImmersiveView':true,\n                'useTabbedImmersiveView':true,\n                'totalVideoCount':'0',\n                'videoIngressATFSlateThumbURL':'',\n                'mediaTypeCount':'0',\n                'atfEnhancedHoverOverlay' : true,\n                'winningAsin': 'B06XD3LXXK',\n                'weblabs' : {},\n                'aibExp3Layout' : 1,\n                'aibRuleName' : 'frank-powered',\n                'acEnabled' : true,\n                'dp60VideoPosition': 0,\n                'dp60VariantList': '',\n                'dp60VideoThumb': '',\n                'dp60MainImage': 'https://images-na.ssl-images-amazon.com/images/I/51840t%2BtcFL._AC_SY355_.jpg',\n                \n                };\n    A.trigger('P.AboveTheFold'); // trigger ATF event.\n    return data;\n});\n\u003C/script>\n\n\n\n\u003Cdiv id=\"twister-main-image\" class=\"a-hidden\" customfunctionname=\"(function(id, state){ P.when('A').execute(function(A){ A.trigger('image-block-twister-swatch-hover', id, state); }); });\">\u003C/div>\n\n\u003Cdiv id=\"thumbs-image\" class=\"a-hidden\" customfunctionname=\"(function(id, state, onloadFunction){ P.when('A').execute(function(A){ A.trigger('image-block-twister-swatch-click', id, state, onloadFunction); }); });\">\u003C/div>\n\n\n\n\n\n\n    \n\n\n\n\n\n    \n \n\n\n\n\n\n\n\n\n\n\t\n\t    \n\t    \n\t\n\t\n\n\n\n    \n\n\n\n\u003Cdiv class=\"a-popover-preload\" id=\"a-popover-immersiveView\">\n\n    \u003Cdiv id=\"iv-tab-view-container\">\n\n        \u003Cul class=\"iv-tab-views a-declarative\">\n            \u003Cli id=\"ivVideosTabHeading\" class=\"iv-tab-heading\" style=\"display: none;\">\n                \u003Ca href=\"#\" data-iv-tab-view=\"ivVideosTab\">\n                    RELATED VIDEOS\n                \u003C/a>\n            \u003C/li>\n            \u003Cli id=\"iv360TabHeading\" class=\"iv-tab-heading\" style=\"display: none;\">\n                \u003Ca href=\"#\" data-iv-tab-view=\"iv360Tab\">\n                    360° VIEW\n                \u003C/a>\n            \u003C/li>\n            \u003Cli id=\"ivImagesTabHeading\" class=\"iv-tab-heading\">\n                \u003Ca href=\"#\" data-iv-tab-view=\"ivImagesTab\">\n                    IMAGES\n                \u003C/a>\n            \u003C/li>\n        \u003C/ul>\n\n        \u003Cdiv id=\"ivVideosTab\" class=\"iv-box iv-box-tab iv-tab-content\">\n            \u003Cdiv class=\"iv-box-inner\">\n                \u003Cdiv id=\"ivVideoBlock\">\n                    \u003Cdiv id=\"ivVideoBlockSpinner\" class=\"a-spinner-wrapper\">\u003Cspan class=\"a-spinner a-spinner-medium\">\u003C/span>\u003C/div>\n                \u003C/div>\n            \u003C/div>\n        \u003C/div>\n\n        \u003Cdiv id=\"iv360Tab\" class=\"iv-box iv-box-tab iv-tab-content\">\n            \u003Cdiv class=\"iv-box-inner\">\n                \u003Cdiv id=\"ivMain360\">\n                    \u003Cdiv id=\"ivStage360\">\n                        \u003Cdiv id=\"ivLarge360\">\u003C/div>\n                    \u003C/div>\n                    \u003Cdiv id=\"ivThumbColumn360\">\n                        \u003Cdiv id=\"ivTitle360\">\u003C/div>\n                        \u003Cdiv id=\"ivVariationSelection360\">\u003C/div>\n                        \u003Cdiv id=\"ivThumbs360\">\n                            \u003Cdiv class=\"ivRow placeholder\">\u003C/div>\n                            \u003Cdiv class=\"ivThumb placeholder\">\n                                \u003Cdiv class=\"ivThumbImage\">\u003C/div>\n                            \u003C/div>\n                        \u003C/div>\n                    \u003C/div>\n                    \u003Cdiv class=\"ivClearfix\">\u003C/div>\n                \u003C/div>\n            \u003C/div>\n        \u003C/div>\n\n        \u003Cdiv id=\"ivImagesTab\" class=\"iv-box iv-box-tab iv-tab-content\">\n            \u003Cdiv class=\"iv-box-inner\">\n                \u003Cdiv id=\"ivMain\">\n                    \u003Cdiv id=\"ivStage\">\n                        \u003Cdiv id=\"ivLargeImage\">\u003C/div>\n                    \u003C/div>\n                    \u003Cdiv id=\"ivThumbColumn\">\n                        \u003Cdiv id=\"ivTitle\">\u003C/div>\n                        \u003Cdiv id=\"ivVariationSelection\">\u003C/div>\n                        \u003Cdiv id=\"ivThumbs\">\n                            \u003Cdiv class=\"ivRow placeholder\">\u003C/div>\n                            \u003Cdiv class=\"ivThumb placeholder\">\n                                \u003Cdiv class=\"ivThumbImage\">\u003C/div>\n                            \u003C/div>\n                        \u003C/div>\n                    \u003C/div>\n                    \u003Cdiv class=\"ivClearfix\">\u003C/div>\n                \u003C/div>\n            \u003C/div>\n        \u003C/div>\n\n    \u003C/div>\n\n\u003C/div>\n\n\n\n\n\n    \n\n    \u003Cdiv class=\"dp-cif aok-hidden\" data-feature-details=\"{&quot;name&quot;:&quot;imageblock&quot;,&quot;hasComponents&quot;:true,&quot;components&quot;:[{&quot;name&quot;:&quot;mainimage&quot;,&quot;events&quot;:[&quot;click&quot;,&quot;hover&quot;]},{&quot;name&quot;:&quot;thumbnail&quot;,&quot;events&quot;:[&quot;click&quot;,&quot;hover&quot;]}]}\">\u003C/div>\n    \u003Cscript type=\"text/javascript\">(function(f) {var _np=(window.P._namespace(\"DetailPageImageBlockTemplate\"));if(_np.guardFatal){_np.guardFatal(f)(_np);}else{f(_np);}}(function(P) {\n        P.now().execute('dp-mark-imageblock',function(){\n            var options = {\n                hasComponents: true,\n                components: [{\n                    name: 'mainimage'\n                }, {\n                    name: 'thumbnail'\n                }]\n            };\n            if (typeof window.markFeatureRender === 'function') {\n                window.markFeatureRender('imageblock',options);\n            }\n        });\n    }));\u003C/script>\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n\u003C/div>\n\u003Cdiv id=\"centerCol\" class=\"centerColAlign\">\n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"title_feature_div\" class=\"feature\" data-feature-name=\"title\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n    \u003Cdiv id=\"titleSection\" class=\"a-section a-spacing-none\">\n        \u003Ch1 id=\"title\" class=\"a-size-large a-spacing-none\">\n            \u003Cspan id=\"productTitle\" class=\"a-size-large\">\n                \n                    \n                    \n                \n\n                \n                    \n                    \n                        Acer Flagship CB3-532 15.6\" HD Premium Chromebook - Intel Dual-Core Celeron N3060 up to 2.48GH.z, 2GB RAM, 16GB SSD, Wireless AC, HDMI, USB 3.0, Webcam, Chrome OS (Renewed)\n                    \n                \n\n                \n                    \n                    \n                \n            \u003C/span>\n\n            \n\n            \n\n            \n            \n            \n        \u003C/h1>\n\n        \u003Cdiv id=\"expandTitleToggle\" class=\"a-section a-spacing-none expand aok-hidden\">\u003C/div>\n        \n    \u003C/div>\n\n\n\n    \n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"bylineInfo_feature_div\" class=\"feature\" data-feature-name=\"bylineInfo\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n     \n\n\n\n\n\n\n    \n    \n        \u003Cdiv class=\"a-section a-spacing-none\">\n            \n                \n                    by\n                \n                \n            \n\n            \n                \n                     \n                     \n                         \n                             \n                             \n                                 \u003Ca id=\"bylineInfo\" class=\"a-link-normal\" href=\"/Amazon-Renewed/b/ref=bl_dp_s_web_12653393011?ie=UTF8&amp;node=12653393011&amp;field-lbr_brands_browse-bin=Amazon+Renewed\">Amazon Renewed\u003C/a>\n                             \n                         \n                     \n                 \n            \n         \u003C/div>\n    \n\n    \n    \n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"averageCustomerReviews_feature_div\" class=\"feature\" data-feature-name=\"averageCustomerReviews\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\u003Cstyle type=\"text/css\">\n    /* \n    * Fix for UDP-1061. Average customer reviews has a small extra line on hover \n    * https://omni-grok.amazon.com/xref/src/appgroup/websiteTemplates/retail/SoftlinesDetailPageAssets/udp-intl-lock/src/legacy.css?indexName=WebsiteTemplates#40\n    */\n    .noUnderline a:hover { \n        text-decoration: none; \n    }\n\u003C/style>\n\n\n\n    \n    \n    \n    \n        \n\n        \n\n        \n        \n        \n        \n\t\t\n\t\t\n\t\t\n\t\t\n\t\t        \n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t        \n        \n\n        \u003Cdiv id=\"averageCustomerReviews\" class=\"a-spacing-none\" data-asin=\"B06XD3LXXK\" data-ref=\"dpx_acr_pop_\">\n            \n            \n            \n                \n                \n                    \n                        \n                        \n                            \n\n\n\n\n\n\n\n\n  \n  \n  \n    \n  \n\n\n\n\n\n        \u003Cspan class=\"a-declarative\" data-action=\"acrStarsLink-click-metrics\" data-acrstarslink-click-metrics=\"{}\">\n            \n\n\n\n\n\n    \u003Cspan id=\"acrPopover\" class=\"reviewCountTextLinkedHistogram noUnderline\" title=\"4.1 out of 5 stars\">\n        \u003Cspan class=\"a-declarative\" data-action=\"a-popover\" data-a-popover=\"{&quot;max-width&quot;:&quot;700&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;position&quot;:&quot;triggerBottom&quot;,&quot;url&quot;:&quot;/gp/customer-reviews/widgets/average-customer-review/popover/ref=dpx_acr_pop_?contextId=dpx&amp;asin=B06XD3LXXK&quot;}\">\n            \u003Ca href=\"javascript:void(0)\" class=\"a-popover-trigger a-declarative\">\n                \n\n\u003Ci class=\"a-icon a-icon-star a-star-4\">\u003Cspan class=\"a-icon-alt\">4.1 out of 5 stars\u003C/span>\u003C/i>\n                \n            \u003Ci class=\"a-icon a-icon-popover\">\u003C/i>\u003C/a>\n        \u003C/span>\n        \u003Cspan class=\"a-letter-space\">\u003C/span>\n    \u003C/span>\n\n\n        \u003C/span>\n        \u003Cspan class=\"a-letter-space\">\u003C/span>\n        \n        \n\n        \n\n        \n\n        \n        \n        \n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-declarative\" data-action=\"acrLink-click-metrics\" data-acrlink-click-metrics=\"{}\">\n                    \u003Ca id=\"acrCustomerReviewLink\" class=\"a-link-normal\" href=\"#customerReviews\">\n                        \u003Cspan id=\"acrCustomerReviewText\" class=\"a-size-base\">948 customer reviews\u003C/span>\n                    \u003C/a>\n                \u003C/span>\n            \n                \u003Cscript type=\"text/javascript\">\n                    P.when('A', 'ready').execute(function(A) {\n                        A.declarative('acrLink-click-metrics', 'click', { \"allowLinkDefault\" : true }, function(event){\n                            if(window.ue) {\n                                ue.count(\"acrLinkClickCount\", (ue.count(\"acrLinkClickCount\") || 0) + 1);\n                            }\n                        });\n                    });\n                \u003C/script>\n            \n            \n            \n            \n        \n        \n        \u003Cscript type=\"text/javascript\">\n            P.when('A', 'cf').execute(function(A) {\n                A.declarative('acrStarsLink-click-metrics', 'click', { \"allowLinkDefault\" : true },  function(event){\n                    if(window.ue) {\n                        ue.count(\"acrStarsLinkWithPopoverClickCount\", (ue.count(\"acrStarsLinkWithPopoverClickCount\") || 0) + 1);\n                    }\n                });\n            });\n        \u003C/script>\n\n\n                        \n                    \n                \n            \n        \u003C/div>\n    \n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"ask_feature_div\" class=\"feature\" data-feature-name=\"ask\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n  \n    \u003Cspan class=\"askPipe\"> | \u003C/span>\n  \n  \u003Cspan cel_widget_id=\"ask-atf-link-desktop\" class=\"celwidget\">\n    \u003Ca id=\"askATFLink\" class=\"a-link-normal askATFLink\" href=\"#Ask\">\n      \u003Cspan class=\"a-size-base\">\n        747 answered questions\n      \u003C/span>\n    \u003C/a>\n  \u003C/span>\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"primeExclusiveBadge_feature_div\" class=\"feature\" data-feature-name=\"primeExclusiveBadge\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n    \n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"acBadge_feature_div\" class=\"feature\" data-feature-name=\"acBadge\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n    \n    \n    \u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;acState&quot;}\">{\"acAsin\":\"B06XD3LXXK\"}\u003C/script>\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"zeitgeistBadge_feature_div\" class=\"feature\" data-feature-name=\"zeitgeistBadge\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"socialFabric_feature_div\" class=\"feature\" data-feature-name=\"socialFabric\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n        \n        \n        \t\n        \t\t\n        \t\t\n\t\t\t\t\t\u003Chr>\n        \t\t\n        \t\n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"desktop_unifiedPrice\" class=\"feature\" data-feature-name=\"desktop_unifiedPrice\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n        \n    \t    \n                \n\n\n\n\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"unifiedPrice_feature_div\" class=\"feature\" data-feature-name=\"unifiedPrice\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n  \n  \n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n  \n    \n    \n    \n      \n        \n        \n        \n        \n        \n          \n\n\n\n\n\n\n\n\n    \n        \u003C!--Deprecated when PW_DPX_PRICE_MODULE_COP_195505 is T1 100%--->\n        \n        \n    \n    \n\n\n\n\n          \u003Cdiv id=\"price\" class=\"a-section a-spacing-small\">\n          \u003Ctable class=\"a-lineitem\">\n            \n\n            \n              \n              \n\n                \n                \n                  \n\n\n\n                \n\n                \n                \n                  \n                  \n\n                \n                \n                  \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n\n                    \n                      \n\n\n\n\n\n\n\u003Ctbody>\u003Ctr>\n    \u003Ctd class=\"a-color-secondary a-size-base a-text-right a-nowrap\">List Price:\u003C/td>\n    \u003Ctd class=\"a-span12 a-color-secondary a-size-base\">\n        \u003Cspan class=\"priceBlockStrikePriceString a-text-strike\"> $199.99\u003C/span>\n        \n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cspan id=\"listPriceLegalMessage\">\n\t\n\u003C/span>\n\n\u003Cstyle>\n    #listPriceLegalMessageText {\n        margin-left: 5px !important;\n    }\n    \n    #listPriceLegalMessage .a-popover-trigger:hover {\n        text-decoration: underline !important;\n    }\n    \n    #listPriceLegalMessage .a-icon-popover {\n        display: inline-block !important;\n        margin-left: 0px !important;\n        margin-top: 6px !important;\n    }\n\u003C/style>\n        \n    \u003C/td>\n\u003C/tr>\n                    \n\n                    \n                  \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n\n                    \n                      \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctr id=\"priceblock_ourprice_row\">\n    \u003Ctd id=\"priceblock_ourprice_lbl\" class=\"a-color-secondary a-size-base a-text-right a-nowrap\">Price:\u003C/td>\n    \u003Ctd class=\"a-span12\">\n        \n            \n                \u003Cspan id=\"priceblock_ourprice\" class=\"a-size-medium a-color-price priceBlockBuyingPriceString\">$145.97\u003C/span>\n\n                    \n                        \n                            \n                                \n                                \n                                \n                                    \n\n\n\n\n                                \n                            \n                            \n                        \n                    \n\n                    \n                    \n            \n            \n        \n\n        \n            \n                \n                \n                \n                    \n                        \n\n\n\n\n\n                        \n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                        \n                        \n\n\n\n\n\n\n                        \n\n\n\n\n    \n\n    \n\n\n\n                    \n                \n            \n\n            \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n    \n    \n        \n\n\n\n\n\n\n    \n\n            \n            \n\n\n\n\n\n\n\n\n\n\u003Cspan id=\"ourprice_shippingmessage\">\t\n    \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003Cspan id=\"price-shipping-message\" class=\"a-size-base a-color-base\">\u003C/span>\n    \n\n\n\n\n\u003C/span>\n            \n        \n        \n    \u003C/td>\n\u003C/tr>\n\n\n\n                    \n\n                    \n                      \n                      \n\n\n\n\n                      \n                      \n\n\n\n                      \n                      \n\n\n\n\n\n                    \n                  \n                \n\n                \n                \n                  \n                  \n                    \n                      \n                        \n                        \n                        \n                        \n                          \n                        \n                        \n                        \n                          \n                          \n                            \n                          \n\n                          \n                          \n\n\n\n\n\n\n\n\n\n\n\n    \u003Ctr id=\"regularprice_savings\">\n\t    \u003Ctd class=\"a-color-secondary a-size-base a-text-right a-nowrap\">You Save:\u003C/td>\n        \u003Ctd class=\"a-span12 a-color-price a-size-base priceBlockSavingsString\">\n            $54.02 (27%)\n            \n        \u003C/td>\n    \u003C/tr>\n\n\n\n                        \n                      \n                    \n                  \n                \n                \n                \n\n                \n                \n                    \n\n\n\n\n\n\n\n\u003Ctr id=\"priceblock_snsupsell_row\" class=\"aok-hidden\">\n    \u003Ctd colspan=\"2\">\n        \u003Cspan class=\"a-size-base a-color-price\">\n            \n                \n                \n            \n        \u003C/span>\n    \u003C/td>\n\u003C/tr>\n                \n\n                \n                \n\n\n\n\n\n\n    \n    \n\n\n\n\n                \n                \n\n\n\n\n    \n        \n        \n            \n\n\n\n\n\n\n\n    \n\n\n    \n\n\n\n\n\n  \n    \n    \n        \n        \n    \n  \n\n\n\n        \n    \n\n\n\n                \n                \n\n\n\n\n\n                \n                \n\n\n\n\n\n\n\n                \n                \n\n\n\n    \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n                \n                \n\n\n\n\n    \n    \n\n\n                \n                \n\n\n\n\n  \n  \n    \n  \n\n\n\n\n\n\n\n\n                \n                \n\n\n\n\n\n\n                \n                \n\n\n\n\n                \n                \n\n\n\n\n              \n            \n\n            \n            \n            \n\n\n\n\n            \n                \n                \n                \n            \n\n            \n            \n              \n              \n                \n              \n            \n          \u003C/tbody>\u003C/table>\n          \u003C/div>\n        \n        \n      \n    \n  \n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n\n    \t    \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"rentalPriceBlock_feature_div\" class=\"feature\" data-feature-name=\"rentalPriceBlock\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"pmpux_feature_div\" class=\"feature\" data-feature-name=\"pmpux\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"issuancePriceblockAmabot_feature_div\" class=\"feature\" data-feature-name=\"issuancePriceblockAmabot\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n            \n                \n                    \n\n\n    \n    \n    \n    \n    \n    \n\n\n\n\n\n    \u003Cdiv>\n        \n    \u003C/div>\n\n\n\n                \n                \n            \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"alternativeOfferEligibilityMessaging_feature_div\" class=\"feature\" data-feature-name=\"alternativeOfferEligibilityMessaging\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n       \n    \n    \n    \n \t\n \t\t\n \t\t\n \t\t\n \t\t\n \t\t\n \t\t\n \t\t\n \t\t\n \t\t\n \t\t\n \t\n \t\n \t\n \t\t\n \t\t\n        \n        \n \t\t\n \t\t\n \t\t\n \t\t\n \t\t\n\t\t\n\t\t\n\t\t\n        \n        \n \t\t\n \t\t\n \t\t\n \t\t\n \t\t\n \t\t\n \t\t\n \t\t\n \t\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"promiseBasedBadge_feature_div\" class=\"feature\" data-feature-name=\"promiseBasedBadge\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n        \n        \n    \n    \n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"applicablePromotionList_feature_div\" class=\"feature\" data-feature-name=\"applicablePromotionList\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"availability_feature_div\" class=\"feature\" data-feature-name=\"availability\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n        \n        \n    \n    \n\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"globalStoreBadgePopover_feature_div\" class=\"feature\" data-feature-name=\"globalStoreBadgePopover\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n  \n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"holidayDeliveryMessage_feature_div\" class=\"feature\" data-feature-name=\"holidayDeliveryMessage\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"dpFastTrack_feature_div\" class=\"feature\" data-feature-name=\"dpFastTrack\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n    \n        \n        \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"businessOnlyItem_feature_div\" class=\"feature\" data-feature-name=\"businessOnlyItem\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"shipsFromSoldBy_feature_div\" class=\"feature\" data-feature-name=\"shipsFromSoldBy\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n        \n        \n    \n    \n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"productSupportAndReturnPolicy_feature_div\" class=\"feature\" data-feature-name=\"productSupportAndReturnPolicy\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\u003C!-- productSupportAndReturnPolicy -->\n\n\n\n\n    \n    \n\n    \n        \u003Cdiv class=\"a-row a-spacing-micro\">\n            \u003Cdiv id=\"productSupportAndReturnPolicy-all-policies-messages\" class=\"a-section\">\n                \n\n\n                \n                \n\n\n    \n    \n    \n    \n    \n\n    \u003Cspan class=\"a-declarative\" data-action=\"a-popover\" data-a-popover=\"{&quot;max-width&quot;:&quot;500&quot;,&quot;name&quot;:&quot;displayableProductSupportPolicyPopover&quot;,&quot;activate&quot;:&quot;onmouseover&quot;,&quot;position&quot;:&quot;triggerBottom&quot;}\">\n        \u003Cspan id=\"productSupportAndReturnPolicy-product-support-policy-celWidget\" cel_widget_id=\"productSupportAndReturnPolicy-product-support-policy-anchorText-pc\" class=\"celwidget\">\n            \u003Ca id=\"productSupportAndReturnPolicy-product-support-policy-anchor-text\" href=\"javascript:void(0)\" class=\"a-popover-trigger a-declarative\">\n                Free Amazon tech support included\n            \u003Ci class=\"a-icon a-icon-popover\">\u003C/i>\u003C/a>\n        \u003C/span>\n    \u003C/span>\n    \u003Cdiv class=\"a-popover-preload\" id=\"a-popover-displayableProductSupportPolicyPopover\">\n        \n\n\n\u003Cdiv id=\"productSupportAndReturnPolicy-product-support-policy-popover-celWidget\" cel_widget_id=\"productSupportAndReturnPolicy-product-support-policy-popover-pc\" class=\"celwidget\">\n    \u003Cdiv class=\"a-section a-padding-base\">\n        \n            \u003Cdiv class=\"a-row a-spacing-base\">\n                \u003Cspan class=\"a-text-bold\">What's Tech Support?\u003C/span>\n            \u003C/div>\n        \n        \u003Cdiv class=\"a-row a-spacing-micro\">\n            In the event your product doesn’t work as expected, or you’d like someone to walk you through set-up, Amazon offers free tech support over the phone on eligible purchases for up to 90 days. Our technicians use the latest authorized manufacturer tools to help you troubleshoot issues. \u003Cbr>\nTo access this option, go to Your Orders and choose Get product support.\n\n        \u003C/div>\n    \u003C/div>\n\u003C/div>\n    \u003C/div>\n\n\n            \u003C/div>\n        \u003C/div>\n    \n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"businessPricing_feature_div\" class=\"feature\" data-feature-name=\"businessPricing\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n    \n        \n        \n            \n        \n    \n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"smileEligibility_feature_div\" class=\"feature\" data-feature-name=\"smileEligibility\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"holidayAvailabilityMessage_feature_div\" class=\"feature\" data-feature-name=\"holidayAvailabilityMessage\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"twister_feature_div\" class=\"feature\" data-feature-name=\"twister\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"addServices_feature_div\" class=\"feature\" data-feature-name=\"addServices\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"clickToContact_feature_div\" class=\"feature\" data-feature-name=\"clickToContact\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n            \n                \n                    \n\n\n\n                \n                \n            \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"dpreviewBadge_feature_div\" class=\"feature\" data-feature-name=\"dpreviewBadge\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n            \n                \n                    \n\n\n\n                \n                \n            \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"amazonCertifiedBadge_feature_div\" class=\"feature\" data-feature-name=\"amazonCertifiedBadge\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"smartHomeWidget_feature_div\" class=\"feature\" data-feature-name=\"smartHomeWidget\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"renewedProgramDescriptionAtf_feature_div\" class=\"feature\" data-feature-name=\"renewedProgramDescriptionAtf\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n    \n    \u003Cstyle type=\"text/css\">\n        div#renewedProgramDescriptionAtf p:first-child {\n            margin-block-end: 0.5em;\n        }\n\n        #renewedProgramDescriptionAtf p a {\n            text-decoration: none;\n        }\n    \u003C/style>\n    \u003Cdiv id=\"renewedProgramDescriptionAtf\" class=\"a-section a-spacing-medium a-spacing-top-small\">\n        \u003Cp>\u003Cb>Product works and looks like new. Backed by the 90-day Amazon Renewed Guarantee.\u003C/b>\u003C/p>\u003Cp>Renewed products work and look like new. These pre-owned products have been inspected and tested by Amazon-qualified suppliers. Box and accessories may be generic. All Renewed products come with the 90-day Amazon Renewed Guarantee. \u003Ca href=\"#renewedProgramDescriptionBtf\">Learn more\u003C/a>\u003C/p>\n    \u003C/div>\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"featurebullets_feature_div\" class=\"feature\" data-feature-name=\"featurebullets\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\u003Cdiv id=\"feature-bullets\" class=\"a-section a-spacing-medium a-spacing-top-small\">\n    \n\n\n\n\n\n\n    \n\t\t\n\t\t\t\n                               \u003Cul class=\"a-unordered-list a-vertical a-spacing-none\">\n\t\t\t\t\t\n\t\t\t\t\t\t\n\n\n\n\u003Cdiv id=\"hsx-rpp-bullet-fits-message\" class=\"aok-hidden\">\n    \u003Cdiv class=\"a-box a-alert-inline a-alert-inline-success hsx-rpp-fitment-bullets\">\u003Cdiv class=\"a-box-inner a-alert-container\">\u003Ci class=\"a-icon a-icon-alert\">\u003C/i>\u003Cdiv class=\"a-alert-content\">\n        This fits your&nbsp;\u003Cspan class=\"hsx-rpp-bullet-model-info\">\u003C/span>.\n    \u003C/div>\u003C/div>\u003C/div>\n\u003C/div>\n\n\n\n\u003Cli id=\"replacementPartsFitmentBullet\" data-doesntfitmessage=\"We're not sure this item fits your \" data-fitsmessage=\"This fits your \" class=\"aok-hidden\">\u003Cspan class=\"a-list-item\">\n        \u003Cspan id=\"replacementPartsFitmentBulletInner\"> \u003Ca class=\"a-link-normal hsx-rpp-fitment-focus\" href=\"#\">Make sure this fits\u003C/a>\n                \u003Cspan>by entering your model number.\u003C/span>\n        \u003C/span>\n\u003C/span>\u003C/li>\n\n\u003Cscript type=\"text/javascript\">\n    P.when(\"ReplacementPartsBulletLoader\").execute(function(module){ module.initializeDPX(); })\n\u003C/script>\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\u003Cli>\u003Cspan class=\"a-list-item\"> \n\t\t\t\t\t\t\tThis Certified Refurbished product is certified factory refurbished, shows limited or no wear, and includes all original accessories plus a 90-day warranty.\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\u003C/span>\u003C/li>\n\t\t\t\t\t\n\t\t\t\t\t\t\u003Cli>\u003Cspan class=\"a-list-item\"> \n\t\t\t\t\t\t\tZero Air Gap allows you to enjoy enhanced screen clarity even in sunlight, so you can enjoy content anywhere you go.\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\u003C/span>\u003C/li>\n\t\t\t\t\t\n\t\t\t\t\t\t\u003Cli>\u003Cspan class=\"a-list-item\"> \n\t\t\t\t\t\t\tBlazing fast Intel Celeron N3060 Dual-Core 1.60 GHz Processor\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\u003C/span>\u003C/li>\n\t\t\t\t\t\n\t\t\t\t\t\t\u003Cli>\u003Cspan class=\"a-list-item\"> \n\t\t\t\t\t\t\tWith USB 3.0 easily transfer text and data files, photos and even movies at ten times the speed of USB 2.0.\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\u003C/span>\u003C/li>\n\t\t\t\t\t\n\t\t\t\t\t\t\u003Cli>\u003Cspan class=\"a-list-item\"> \n\t\t\t\t\t\t\tThe 15.6\" Display and 1366 x 768 resolution LCD HD will have you captivated.\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\u003C/span>\u003C/li>\n\t\t\t\t\t\n\t\t\t\t\u003C/ul>\n\t\t\t\t\u003C!--  Loading EDP related metadata -->\n                \n                 \t\n               \n               \n\t\t\t\n\t\t\t\n\t\t\n\n\t\t\n\n\t\t\n\t\t\t\n\t\t\t\u003Cspan class=\"caretnext\">›\u003C/span>\n\t\t\t\u003Ca id=\"seeMoreDetailsLink\" class=\"a-link-normal\" href=\"#productDetails\">See more product details\u003C/a>\n\t\t\n\n    \n\u003C/div>\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"globalStoreInfoBullets_feature_div\" class=\"feature\" data-feature-name=\"globalStoreInfoBullets\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"amazonGlobal_feature_div\" class=\"feature\" data-feature-name=\"amazonGlobal\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n        \n        \n        \t\n        \t\t\n        \t\t\n\t\t\t\t\t\u003Cdiv id=\"HLCXComparisonJumplink_feature_div\">\u003Cdiv class=\"a-section a-spacing-small a-spacing-top-small HLCXComparisonJumplinkContent\">\n    \u003Cspan class=\"a-declarative\" data-action=\"hlcx-send-reftag\" data-hlcx-send-reftag=\"{&quot;refTag&quot;:&quot;psdc_13896615011_c_B06XD3LXXK&quot;,&quot;allowLinkDefault&quot;:&quot;true&quot;}\">\n        \u003Ca class=\"a-link-normal HLCXComparisonJumplinkLink\" href=\"#HLCXComparisonWidget_feature_div\">\n            \n                \n                \n                    \u003Cspan>Compare with similar items\u003C/span>\n                \n            \n        \u003C/a>\n    \u003C/span>\n\u003C/div>\u003C/div>\n        \t\t\n        \t\n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"vendorPoweredCoupon_feature_div\" class=\"feature\" data-feature-name=\"vendorPoweredCoupon\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"addOnItem_feature_div\" class=\"feature\" data-feature-name=\"addOnItem\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"giftcard-holiday-availability-messaging_feature_div\" class=\"feature\" data-feature-name=\"giftCardHolidayAvailabilityMessaging\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n        \n        \n        \u003C!--giftCardHolidayAvailabilityMessaging_placeholder-->\n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"andonCord_feature_div\" class=\"feature\" data-feature-name=\"andonCord\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n            \n                \n                    \n\n\n\n                \n                \n            \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"olp_feature_div\" class=\"feature\" data-feature-name=\"olp\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n\n    \n    \n        \n            \n            \n                \u003Cdiv id=\"olp-upd-cr\" class=\"a-section a-spacing-small a-spacing-top-small\">\n                  \n                    \n                        \n                        \n                          \u003Cspan>\u003Ca href=\"/gp/offer-listing/B06XD3LXXK/ref=dp_olp_new_mbc?ie=UTF8&amp;condition=new\">\u003Cb>Renewed\u003C/b> (33) from $145.97\u003C/a>\u003C/span>\n                        \n                    \n                    \n                    \n                        \n                            \u003Cspan>\u003Ca href=\"/gp/help/customer/display.html/ref=mk_sss_dp_1?ie=UTF8&amp;pop-up=1&amp;nodeId=527692\" target=\"AmazonHelp\" onclick=\"return amz_js_PopWin(this.href,'AmazonHelp','width=550,height=550,resizable=1,scrollbars=1,toolbar=0,status=0');\">Details\u003C/a>\u003C/span>\n                        \n                        \n                    \n                   \n              \u003C/div>\n            \n        \n    \n\n    \n\n    \n\n    \n\n    \n\n\n\n    \n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"edpIngress_feature_div\" class=\"feature\" data-feature-name=\"edpIngress\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"newerVersion_feature_div\" class=\"feature\" data-feature-name=\"newerVersion\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"valuePick_feature_div\" class=\"feature\" data-feature-name=\"valuePick\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"certifiedRefurbishedVersion_feature_div\" class=\"feature\" data-feature-name=\"certifiedRefurbishedVersion\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n    \u003Cdiv id=\"certified-refurbished-version\" class=\"a-row a-float-left\">\n        \u003Chr class=\"a-spacing-small a-divider-normal\">\n        \u003Ch4>This product is available new with a regular price of $26.18 more than the regular Renewed price.\u003C/h4>\n        \u003Cdiv class=\"a-fixed-left-grid\">\u003Cdiv class=\"a-fixed-left-grid-inner\" style=\"padding-left:80px\">\n            \u003Cdiv class=\"a-fixed-left-grid-col a-col-left\" style=\"width:80px;margin-left:-80px;float:left;\">\n                \u003Cdiv class=\"a-row\">\n                    \u003Ca class=\"a-link-normal\" href=\"/dp/B077YS9TYW/ref=\">\n                        \u003Cimg alt=\"2018 Newest Acer CB3-532 15.6&quot; HD Chromebook with 3x Faster WiFi, Intel Dual-Core Celeron N3060 up to 2.48GHz, 2GB RAM, 16GB SSD, HDMI, USB 3.0, Webcam, 12-Hours Battery, Chrome OS\" src=\"https://images-na.ssl-images-amazon.com/images/I/51SuRBdRPwL._SL75_.jpg\">\n                    \u003C/a>\n                \u003C/div>\n            \u003C/div>\n            \u003Cdiv class=\"a-fixed-left-grid-col a-col-right\" style=\"padding-left:0%;float:left;\">\n                \u003Ca class=\"a-size-base a-link-normal a-text-ellipsis\" href=\"/dp/B077YS9TYW/ref=dp_cr_wdg_tit_nw_mr\">\n                    2018 Newest Acer CB3-532 15.6\" HD Chromebook with 3x Faster WiFi, Intel Dual-Core Celeron N3060 up to 2.48GHz, 2GB RAM, 16GB SSD, HDMI, USB 3.0, Webcam, 12-Hours Battery, Chrome OS\n                \u003C/a>\n                \u003Cspan class=\"a-size-base a-color-price\"> $172.15\u003C/span>\n                \n                    \u003Ci class=\"a-icon a-icon-prime a-icon-small\" role=\"img\">\u003C/i>\n                \n                \u003Cbr>\n                \n                    \u003Ca class=\"a-link-normal reviewsLink\" href=\"/product-reviews/B077YS9TYW/ref=dp_cr_wdg_rev_str?showViewpoints=1\">\n                        \u003Ci class=\"a-icon a-icon-star a-star-4\">\u003C/i>\n                    \u003C/a>\n                    \u003Ca class=\"a-link-normal\" href=\"/product-reviews/B077YS9TYW/ref=dp_cr_wdg_rev_txt?showViewpoints=1\">(185)\u003C/a>\n                    \u003Cbr>\n                \n                \n                    \n                    \n                        \n                            \u003Cspan class=\"a-size-base a-color-attainable\">\n                                In Stock.\n                            \u003C/span>\n                        \n                    \n                \n                \u003Cbr>\n            \u003C/div>\n        \u003C/div>\u003C/div>\n    \u003C/div>\n    \u003Cspan class=\"a-letter-space\">\u003C/span>\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"recommendations_feature_div\" class=\"feature\" data-feature-name=\"recommendations\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"productAlert_feature_div\" class=\"feature\" data-feature-name=\"productAlert\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"promotionalBundle_feature_div\" class=\"feature\" data-feature-name=\"promotionalBundle\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n            \n                \n                    \n\n\n\n                \n                \n            \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n\u003C/div>\n\n\u003Cdiv id=\"hqpWrapper\" class=\"centerColAlign\">\n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"heroQuickPromo_feature_div\" class=\"feature\" data-feature-name=\"heroQuickPromo\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n\n\n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n\u003C/div>\n\n\u003C/div>\n\n\u003Cscript type=\"text/javascript\">\n    setCSMReq('af');\n    if(typeof addlongPoleTag === 'function'){ \n        addlongPoleTag('af','desktop-html-atf-marker');\n    }\n    if(window.ue) {\n        ue.count(\"dp_aib_centerCol_height\", document.getElementById('centerCol').clientHeight);\n    }\n\u003C/script>\n\n\u003Cdiv id=\"hover-zoom-end\" class=\"a-section a-spacing-small a-padding-mini\">\u003C/div>\n\n\u003Cdiv id=\"bottomRow\">\n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"bundle_feature_div\" class=\"feature\" data-feature-name=\"bundle\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"twisterJsInitializer_feature_div\" class=\"feature\" data-feature-name=\"twisterJsInitializer\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n        \n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n    \n    \n     \n         \n         \n             \u003Cdiv id=\"pageRefreshJsInitializer_feature_div\" class=\"feature\" data-feature-name=\"pageRefreshJsInitializer\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\t\n    \n    \u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;page-refresh-data-dpx&quot;}\">{\"pageRefreshUrlParams\":{}}\u003C/script>\n    \n    \u003Cscript type=\"text/javascript\">\n        P.register('page-refresh-js-init-dpx-data', function () {\n            var dataToReturn = {};\n            dataToReturn.divToUpdateData = {\"rentbuybox\":{\"mobb_shipsFromSoldBy\":{\"divToUpdate\":\"mobb_shipsFromSoldBy_feature_div\"},\"amazonCertifiedBadge\":{\"divToUpdate\":\"amazonCertifiedBadge_feature_div\"},\"certifiedRefurbishedVersion\":{\"divToUpdate\":\"certifiedRefurbishedVersion_feature_div\"},\"pointsInsideBuyBox\":{\"divToUpdate\":\"pointsInsideBuyBox_feature_div\"},\"usedAccordionRowHeader\":{\"divToUpdate\":null},\"productAdsFeedback\":{\"divToUpdate\":\"product-ads-feedback_feature_div\"},\"tradeInButton\":{\"divToUpdate\":\"tradeInButton_feature_div\"},\"twisterUtils\":{\"divToUpdate\":null},\"smartCustomerLocation\":{\"divToUpdate\":null},\"twisterDimensionSlots\":{\"divToUpdate\":null},\"oneClick\":{\"divToUpdate\":\"oneClick_feature_div\"},\"bbop\":{\"divToUpdate\":\"bbop_feature_div\"},\"renewedProgramDescriptionBtf\":{\"divToUpdate\":\"renewedProgramDescriptionBtf_feature_div\"},\"mobb_alternativeOfferEligibilityMessaging\":{\"divToUpdate\":\"mobb_alternativeOfferEligibilityMessaging_feature_div\"},\"dex\":{\"divToUpdate\":null},\"accessoryUpsellAmabot\":{\"divToUpdate\":\"accessoryUpsellAmabot_feature_div\"},\"rentAccordionRowHeader\":{\"divToUpdate\":null},\"amsDetailRight\":{\"divToUpdate\":\"amsDetailRight_feature_div\"},\"rentAccordionRowContent\":{\"divToUpdate\":null},\"cerberus\":{\"divToUpdate\":\"cerberus_feature_div\"},\"scheduledDelivery\":{\"divToUpdate\":null},\"r4mUpsellDownsellWidget\":{\"divToUpdate\":\"r4mUpsellDownsellWidget_feature_div\"},\"b2brdBuyBox\":{\"divToUpdate\":\"b2brdBuyBox_feature_div\"},\"skyCitySoftMerge\":{\"divToUpdate\":\"skyCitySoftMerge_feature_div\"},\"productDescription\":{\"divToUpdate\":\"productDescription_feature_div\"},\"attachAccessoryModal\":{\"divToUpdate\":\"attachAccessoryModal_feature_div\"},\"digitalDashLowProminence\":{\"divToUpdate\":\"digitalDashLowProminence_feature_div\"},\"bbg\":{\"divToUpdate\":\"bbg_feature_div\"},\"unqualifiedBuyBox\":{\"divToUpdate\":\"unqualifiedBuyBox_feature_div\"},\"b2bAccordionRowContent\":{\"divToUpdate\":null},\"nonprimeproduct\":{\"divToUpdate\":null},\"primeExclusiveBadge\":{\"divToUpdate\":\"primeExclusiveBadge_feature_div\"},\"edpPopoverContent\":{\"divToUpdate\":\"edpPopoverContent_feature_div\"},\"highValueMessaging\":{\"divToUpdate\":\"highValueMessaging_feature_div\"},\"mobb_availability\":{\"divToUpdate\":\"mobb_availability_feature_div\"},\"averageCustomerReviews\":{\"divToUpdate\":\"averageCustomerReviews_feature_div\"},\"featurebullets\":{\"divToUpdate\":\"featurebullets_feature_div\"},\"smartHomeBtfWidget\":{\"divToUpdate\":\"smartHomeBtfWidget_feature_div\"},\"pwBuyBoxAccordionRowContent\":{\"divToUpdate\":null},\"amazonGlobal\":{\"divToUpdate\":\"amazonGlobal_feature_div\"},\"tellAFriendBox\":{\"divToUpdate\":\"tellAFriendBox_feature_div\"},\"soldByThirdParty\":{\"divToUpdate\":\"soldByThirdParty_feature_div\"},\"emwaBuyBox\":{\"divToUpdate\":\"emwaBuyBox_feature_div\"},\"primeExclusiveBuyboxUpsell\":{\"divToUpdate\":null},\"soldByThirdPartyRelocate\":{\"divToUpdate\":\"soldByThirdPartyRelocate_feature_div\"},\"dealsBuyBox\":{\"divToUpdate\":\"dealsBuyBox_feature_div\"},\"unavailableNewAccordionRowHeader\":{\"divToUpdate\":null},\"addOnItem\":{\"divToUpdate\":\"addOnItem_feature_div\"},\"productSupportAndReturnPolicy\":{\"divToUpdate\":\"productSupportAndReturnPolicy_feature_div\"},\"quantityLayoutHigh\":{\"divToUpdate\":\"quantityLayoutHigh_feature_div\"},\"availabilityInsideBuyBox\":{\"divToUpdate\":\"availabilityInsideBuyBox_feature_div\"},\"tfx\":{\"divToUpdate\":null},\"businessOnlySelectionBuyBox\":{\"divToUpdate\":\"businessOnlySelectionBuyBox_feature_div\"},\"dpreviewBadge\":{\"divToUpdate\":\"dpreviewBadge_feature_div\"},\"bundleV2\":{\"divToUpdate\":\"bundleV2_feature_div\"},\"ms3\":{\"divToUpdate\":null},\"invitePlatform\":{\"divToUpdate\":\"invitePlatform_feature_div\"},\"pwBuyBoxAccordionRowHeader\":{\"divToUpdate\":null},\"quantityLayoutLow\":{\"divToUpdate\":\"quantityLayoutLow_feature_div\"},\"preAddToCartFramework\":{\"divToUpdate\":\"preAddToCartFramework_feature_div\"},\"bylineInfo\":{\"divToUpdate\":\"bylineInfo_feature_div\"},\"ajaxBlockComponents\":{\"divToUpdate\":\"ajaxBlockComponents_feature_div\"},\"addToCart\":{\"divToUpdate\":\"addToCart_feature_div\"},\"glanceviewofferlogging\":{\"divToUpdate\":null},\"acBadge\":{\"divToUpdate\":\"acBadge_feature_div\"},\"vendorPoweredCoupon\":{\"divToUpdate\":\"vendorPoweredCoupon_feature_div\"},\"dpFastTrackInsideBuyBox\":{\"divToUpdate\":\"dpFastTrackInsideBuyBox_feature_div\"},\"bundle\":{\"divToUpdate\":\"bundle_feature_div\"},\"giveaway\":{\"divToUpdate\":\"giveaway_feature_div\"},\"globalStoreBadgePopover\":{\"divToUpdate\":\"globalStoreBadgePopover_feature_div\"},\"fitRating\":{\"divToUpdate\":null},\"HLCXComparisonJumplink\":{\"divToUpdate\":null},\"productAlert\":{\"divToUpdate\":\"productAlert_feature_div\"},\"valuePick\":{\"divToUpdate\":\"valuePick_feature_div\"},\"installmentPayment\":{\"divToUpdate\":null},\"primeExclusiveAccordionRowContent\":{\"divToUpdate\":null},\"mbb\":{\"divToUpdate\":\"mbb_feature_div\"},\"replacementPartsFeatureBullet\":{\"divToUpdate\":null},\"clickToContact\":{\"divToUpdate\":\"clickToContact_feature_div\"},\"promotions\":{\"divToUpdate\":\"promotions_feature_div\"},\"shipsFromSoldByInsideBuyBox\":{\"divToUpdate\":\"shipsFromSoldByInsideBuyBox_feature_div\"},\"asg\":{\"divToUpdate\":\"asg_feature_div\"},\"twister\":{\"divToUpdate\":\"twister_feature_div\"},\"instantOrderUpdate\":{\"divToUpdate\":\"instantOrderUpdate_feature_div\"},\"ask\":{\"divToUpdate\":\"ask_feature_div\"},\"usedBuyBoxCondition\":{\"divToUpdate\":\"usedBuyBoxCondition_feature_div\"},\"yurekaBuyBox\":{\"divToUpdate\":\"yurekaBuyBox_feature_div\"},\"smartHomeWidget\":{\"divToUpdate\":\"smartHomeWidget_feature_div\"},\"giftCardHolidayAvailabilityMessaging\":{\"divToUpdate\":\"giftcard-holiday-availability-messaging_feature_div\"},\"usedBuyBoxSoldBy\":{\"divToUpdate\":\"usedBuyBoxSoldBy_feature_div\"},\"detailPageGifting\":{\"divToUpdate\":\"detailPageGifting_feature_div\"},\"cspAccordionRowContent\":{\"divToUpdate\":null},\"andonCord\":{\"divToUpdate\":\"andonCord_feature_div\"},\"shareInfo\":{\"divToUpdate\":null},\"crossBorderWidget\":{\"divToUpdate\":\"crossBorderWidget_feature_div\"},\"amazonCustomBuyBox\":{\"divToUpdate\":\"amazonCustomBuyBox_feature_div\"},\"quantityRelocate\":{\"divToUpdate\":\"quantityRelocate_feature_div\"},\"dpreviewSampleGallery\":{\"divToUpdate\":\"dpreviewSampleGallery_feature_div\"},\"globalStoreInfoBullets\":{\"divToUpdate\":\"globalStoreInfoBullets_feature_div\"},\"primexp\":{\"divToUpdate\":null},\"GeographicallyRestrictedBuyBox\":{\"divToUpdate\":\"GeographicallyRestrictedBuyBox_feature_div\"},\"productDetails\":{\"divToUpdate\":\"productDetails_feature_div\"},\"recommendations\":{\"divToUpdate\":\"recommendations_feature_div\"},\"sponsoredProducts2\":{\"divToUpdate\":\"sponsoredProducts2_feature_div\"},\"weblabModel\":{\"divToUpdate\":null},\"buyNow\":{\"divToUpdate\":\"buyNow_feature_div\"},\"uss\":{\"divToUpdate\":\"uss_feature_div\"},\"heroQuickPromo\":{\"divToUpdate\":\"heroQuickPromo_feature_div\"},\"miraiBTFShopByLook\":{\"divToUpdate\":\"miraiBTFShopByLook_feature_div\"},\"legal\":{\"divToUpdate\":\"legal_feature_div\"},\"digitalDashLowProminenceAccordion\":{\"divToUpdate\":\"digitalDashLowProminenceAccordion_feature_div\"},\"comboOfferBuyBox\":{\"divToUpdate\":\"comboOfferBuyBox_feature_div\"},\"newAccordionRowHeader\":{\"divToUpdate\":null},\"pwBuyBox\":{\"divToUpdate\":\"pwBuyBox_feature_div\"},\"accessoryUpsellBtf\":{\"divToUpdate\":\"accessoryUpsellBtf_feature_div\"},\"priceInsideBuyBox\":{\"divToUpdate\":\"priceInsideBuyBox_feature_div\"},\"unifiedLocation\":{\"divToUpdate\":null},\"certifiedBusinessSeller\":{\"divToUpdate\":null},\"addToWishlist\":{\"divToUpdate\":\"addToWishlist_feature_div\"},\"usedBuyBoxAddToCart\":{\"divToUpdate\":\"usedBuyBoxAddToCart_feature_div\"},\"freeShippingPriceBadging\":{\"divToUpdate\":null},\"socialFabric\":{\"divToUpdate\":\"socialFabric_feature_div\"},\"ussInit\":{\"divToUpdate\":\"ussInit_feature_div\"},\"usedBuyBoxOneClick\":{\"divToUpdate\":\"usedBuyBoxOneClick_feature_div\"},\"promiseBasedBadgeInsideBuyBox\":{\"divToUpdate\":\"promiseBasedBadgeInsideBuyBox_feature_div\"},\"voltageCompliance\":{\"divToUpdate\":\"voltageCompliance_feature_div\"},\"edpIngress\":{\"divToUpdate\":\"edpIngress_feature_div\"},\"dashPreRegistration\":{\"divToUpdate\":\"dashPreRegistration_feature_div\"},\"glowContextualIngressPt\":{\"divToUpdate\":\"glowContextualIngressPt_feature_div\"},\"partialStateBuyBox\":{\"divToUpdate\":\"partialStateBuyBox_feature_div\"},\"primeExclusiveAccordionRowHeader\":{\"divToUpdate\":null},\"header\":{\"divToUpdate\":null},\"sponsoredProducts\":{\"divToUpdate\":\"sponsoredProducts_feature_div\"},\"servicesInterstitial\":{\"divToUpdate\":\"servicesInterstitial_feature_div\"},\"buyboxprime\":{\"divToUpdate\":null},\"usedBuyBoxShippingMessage\":{\"divToUpdate\":\"usedBuyBoxShippingMessage_feature_div\"},\"primeExclusiveBuyBox\":{\"divToUpdate\":\"primeExclusiveBuyBox_feature_div\"},\"promiseBasedBadge\":{\"divToUpdate\":\"promiseBasedBadge_feature_div\"},\"sizeChartUrl\":{\"divToUpdate\":null},\"prsubswidget\":{\"divToUpdate\":\"prsubswidget_feature_div\"},\"almMultiOfferEgress\":{\"divToUpdate\":\"almMultiOfferEgress_feature_div\"},\"rowContent\":{\"divToUpdate\":null},\"shippingMessageInsideBuyBox\":{\"divToUpdate\":\"shippingMessageInsideBuyBox_feature_div\"},\"apubPrimeFirst\":{\"divToUpdate\":\"apubPrimeFirst_feature_div\"},\"dpreviewSummary\":{\"divToUpdate\":\"dpreviewSummary_feature_div\"},\"snsBuyBox\":{\"divToUpdate\":\"snsBuyBox_feature_div\"},\"simpleBundleV2\":{\"divToUpdate\":\"simpleBundleV2_feature_div\"},\"title\":{\"divToUpdate\":\"title_feature_div\"},\"renewedProgramDescriptionAtf\":{\"divToUpdate\":\"renewedProgramDescriptionAtf_feature_div\"},\"b2bAccordionRowHeader\":{\"divToUpdate\":null},\"ftCustomerContext\":{\"divToUpdate\":null},\"unavailableNewAccordionRowContent\":{\"divToUpdate\":null},\"productAdsBuyBox\":{\"divToUpdate\":\"productAdsBuyBox_feature_div\"},\"zeitgeistBadge\":{\"divToUpdate\":\"zeitgeistBadge_feature_div\"},\"promotionalBundle\":{\"divToUpdate\":\"promotionalBundle_feature_div\"},\"aplus3p\":{\"divToUpdate\":\"aplus3p_feature_div\"},\"redirection\":{\"divToUpdate\":\"redirection_feature_div\"},\"addOnMessage\":{\"divToUpdate\":\"addOnMessage_feature_div\"},\"cspAccordionRowHeader\":{\"divToUpdate\":null},\"usedBuyBox\":{\"divToUpdate\":\"usedBuyBox_feature_div\"},\"digitalDashHighProminence\":{\"divToUpdate\":\"digitalDashHighProminence_feature_div\"},\"buyboxbadge\":{\"divToUpdate\":null},\"newerVersion\":{\"divToUpdate\":\"newerVersion_feature_div\"},\"addToWishlistAccordion\":{\"divToUpdate\":\"addToWishlistAccordion_feature_div\"},\"originalPackagingMessageInsideBuyBox\":{\"divToUpdate\":\"originalPackagingMessageInsideBuyBox_feature_div\"},\"digitalBuyBoxLayout\":{\"divToUpdate\":\"digitalBuyBoxLayout_feature_div\"},\"aplus\":{\"divToUpdate\":\"aplus_feature_div\"},\"hbaLabel\":{\"divToUpdate\":\"hbaLabel_feature_div\"},\"rentalPriceBlock\":{\"divToUpdate\":\"rentalPriceBlock_feature_div\"},\"dealOffer\":{\"divToUpdate\":null},\"reviews-hr\":{\"divToUpdate\":null},\"digitalDashHighProminenceAccordion\":{\"divToUpdate\":\"digitalDashHighProminenceAccordion_feature_div\"},\"smartHomeBtfHub\":{\"divToUpdate\":\"smartHomeBtfHub_feature_div\"},\"primePriceBadging\":{\"divToUpdate\":null},\"outOfStockBuyBox\":{\"divToUpdate\":\"outOfStockBuyBox_feature_div\"},\"HLCXComparisonWidget\":{\"divToUpdate\":\"HLCXComparisonWidget_feature_div\"},\"aplusBrandStory\":{\"divToUpdate\":\"aplusBrandStory_feature_div\"},\"usedBuyBoxBuyNow\":{\"divToUpdate\":\"usedBuyBoxBuyNow_feature_div\"}},\"twister\":{\"amazonCertifiedBadge\":{\"divToUpdate\":\"amazonCertifiedBadge_feature_div\"},\"certifiedRefurbishedVersion\":{\"divToUpdate\":\"certifiedRefurbishedVersion_feature_div\"},\"pointsInsideBuyBox\":{\"divToUpdate\":\"pointsInsideBuyBox_feature_div\"},\"tradeInButton\":{\"divToUpdate\":\"tradeInButton_feature_div\"},\"issuancePriceblockAmabot\":{\"divToUpdate\":\"issuancePriceblockAmabot_feature_div\"},\"bbop\":{\"divToUpdate\":\"bbop_feature_div\"},\"renewedProgramDescriptionBtf\":{\"divToUpdate\":\"renewedProgramDescriptionBtf_feature_div\"},\"dex\":{\"divToUpdate\":null},\"accessoryUpsellAmabot\":{\"divToUpdate\":\"accessoryUpsellAmabot_feature_div\"},\"rentAccordionRowHeader\":{\"divToUpdate\":null},\"amsDetailRight\":{\"divToUpdate\":\"amsDetailRight_feature_div\"},\"cerberus\":{\"divToUpdate\":\"cerberus_feature_div\"},\"scheduledDelivery\":{\"divToUpdate\":null},\"productDescription\":{\"divToUpdate\":\"productDescription_feature_div\"},\"attachAccessoryModal\":{\"divToUpdate\":\"attachAccessoryModal_feature_div\"},\"digitalDashLowProminence\":{\"divToUpdate\":\"digitalDashLowProminence_feature_div\"},\"bbg\":{\"divToUpdate\":\"bbg_feature_div\"},\"unqualifiedBuyBox\":{\"divToUpdate\":\"unqualifiedBuyBox_feature_div\"},\"b2bAccordionRowContent\":{\"divToUpdate\":null},\"primeExclusiveBadge\":{\"divToUpdate\":\"primeExclusiveBadge_feature_div\"},\"edpPopoverContent\":{\"divToUpdate\":\"edpPopoverContent_feature_div\"},\"mobb_availability\":{\"divToUpdate\":\"mobb_availability_feature_div\"},\"olp\":{\"divToUpdate\":\"olp_feature_div\"},\"averageCustomerReviews\":{\"divToUpdate\":\"averageCustomerReviews_feature_div\"},\"featurebullets\":{\"divToUpdate\":\"featurebullets_feature_div\"},\"pwBuyBoxAccordionRowContent\":{\"divToUpdate\":null},\"amazonGlobal\":{\"divToUpdate\":\"amazonGlobal_feature_div\"},\"soldByThirdParty\":{\"divToUpdate\":\"soldByThirdParty_feature_div\"},\"primeExclusiveBuyboxUpsell\":{\"divToUpdate\":null},\"addServices\":{\"divToUpdate\":\"addServices_feature_div\"},\"soldByThirdPartyRelocate\":{\"divToUpdate\":\"soldByThirdPartyRelocate_feature_div\"},\"dealsBuyBox\":{\"divToUpdate\":\"dealsBuyBox_feature_div\"},\"quantityLayoutHigh\":{\"divToUpdate\":\"quantityLayoutHigh_feature_div\"},\"tfx\":{\"divToUpdate\":null},\"availability\":{\"divToUpdate\":\"availability_feature_div\"},\"bundleV2\":{\"divToUpdate\":\"bundleV2_feature_div\"},\"businessPricing\":{\"divToUpdate\":\"businessPricing_feature_div\"},\"smileEligibility\":{\"divToUpdate\":\"smileEligibility_feature_div\"},\"quantityLayoutLow\":{\"divToUpdate\":\"quantityLayoutLow_feature_div\"},\"ajaxBlockComponents\":{\"divToUpdate\":\"ajaxBlockComponents_feature_div\"},\"dpFastTrackInsideBuyBox\":{\"divToUpdate\":\"dpFastTrackInsideBuyBox_feature_div\"},\"giveaway\":{\"divToUpdate\":\"giveaway_feature_div\"},\"moreBuyingChoices\":{\"divToUpdate\":\"moreBuyingChoices_feature_div\"},\"globalStoreBadgePopover\":{\"divToUpdate\":\"globalStoreBadgePopover_feature_div\"},\"installmentPayment\":{\"divToUpdate\":null},\"clickToContact\":{\"divToUpdate\":\"clickToContact_feature_div\"},\"shipsFromSoldByInsideBuyBox\":{\"divToUpdate\":\"shipsFromSoldByInsideBuyBox_feature_div\"},\"asg\":{\"divToUpdate\":\"asg_feature_div\"},\"ask\":{\"divToUpdate\":\"ask_feature_div\"},\"giftCardHolidayAvailabilityMessaging\":{\"divToUpdate\":\"giftcard-holiday-availability-messaging_feature_div\"},\"usedBuyBoxSoldBy\":{\"divToUpdate\":\"usedBuyBoxSoldBy_feature_div\"},\"andonCord\":{\"divToUpdate\":\"andonCord_feature_div\"},\"shareInfo\":{\"divToUpdate\":null},\"crossBorderWidget\":{\"divToUpdate\":\"crossBorderWidget_feature_div\"},\"dpreviewSampleGallery\":{\"divToUpdate\":\"dpreviewSampleGallery_feature_div\"},\"globalStoreInfoBullets\":{\"divToUpdate\":\"globalStoreInfoBullets_feature_div\"},\"primexp\":{\"divToUpdate\":null},\"productDetails\":{\"divToUpdate\":\"productDetails_feature_div\"},\"recommendations\":{\"divToUpdate\":\"recommendations_feature_div\"},\"sponsoredProducts2\":{\"divToUpdate\":\"sponsoredProducts2_feature_div\"},\"holidayDeliveryMessage\":{\"divToUpdate\":\"holidayDeliveryMessage_feature_div\"},\"heroQuickPromo\":{\"divToUpdate\":\"heroQuickPromo_feature_div\"},\"miraiBTFShopByLook\":{\"divToUpdate\":\"miraiBTFShopByLook_feature_div\"},\"legal\":{\"divToUpdate\":\"legal_feature_div\"},\"digitalDashLowProminenceAccordion\":{\"divToUpdate\":\"digitalDashLowProminenceAccordion_feature_div\"},\"pwBuyBox\":{\"divToUpdate\":\"pwBuyBox_feature_div\"},\"accessoryUpsellBtf\":{\"divToUpdate\":\"accessoryUpsellBtf_feature_div\"},\"unifiedLocation\":{\"divToUpdate\":null},\"addToWishlist\":{\"divToUpdate\":\"addToWishlist_feature_div\"},\"freeShippingPriceBadging\":{\"divToUpdate\":null},\"socialFabric\":{\"divToUpdate\":\"socialFabric_feature_div\"},\"shipsFromSoldBy\":{\"divToUpdate\":\"shipsFromSoldBy_feature_div\"},\"promiseBasedBadgeInsideBuyBox\":{\"divToUpdate\":\"promiseBasedBadgeInsideBuyBox_feature_div\"},\"voltageCompliance\":{\"divToUpdate\":\"voltageCompliance_feature_div\"},\"edpIngress\":{\"divToUpdate\":\"edpIngress_feature_div\"},\"dashPreRegistration\":{\"divToUpdate\":\"dashPreRegistration_feature_div\"},\"glowContextualIngressPt\":{\"divToUpdate\":\"glowContextualIngressPt_feature_div\"},\"buyboxprime\":{\"divToUpdate\":null},\"promiseBasedBadge\":{\"divToUpdate\":\"promiseBasedBadge_feature_div\"},\"almMultiOfferEgress\":{\"divToUpdate\":\"almMultiOfferEgress_feature_div\"},\"rowContent\":{\"divToUpdate\":null},\"apubPrimeFirst\":{\"divToUpdate\":\"apubPrimeFirst_feature_div\"},\"dpreviewSummary\":{\"divToUpdate\":\"dpreviewSummary_feature_div\"},\"snsBuyBox\":{\"divToUpdate\":\"snsBuyBox_feature_div\"},\"title\":{\"divToUpdate\":\"title_feature_div\"},\"b2bAccordionRowHeader\":{\"divToUpdate\":null},\"ftCustomerContext\":{\"divToUpdate\":null},\"alternativeOfferEligibilityMessaging\":{\"divToUpdate\":\"alternativeOfferEligibilityMessaging_feature_div\"},\"cspAccordionRowHeader\":{\"divToUpdate\":null},\"usedBuyBox\":{\"divToUpdate\":\"usedBuyBox_feature_div\"},\"buyboxbadge\":{\"divToUpdate\":null},\"imageBlockVariations\":{\"divToUpdate\":\"imageBlockVariations_feature_div\"},\"digitalBuyBoxLayout\":{\"divToUpdate\":\"digitalBuyBoxLayout_feature_div\"},\"aplus\":{\"divToUpdate\":\"aplus_feature_div\"},\"rentalPriceBlock\":{\"divToUpdate\":\"rentalPriceBlock_feature_div\"},\"reviews-hr\":{\"divToUpdate\":null},\"digitalDashHighProminenceAccordion\":{\"divToUpdate\":\"digitalDashHighProminenceAccordion_feature_div\"},\"smartHomeBtfHub\":{\"divToUpdate\":\"smartHomeBtfHub_feature_div\"},\"businessOnlyItem\":{\"divToUpdate\":\"businessOnlyItem_feature_div\"},\"outOfStockBuyBox\":{\"divToUpdate\":\"outOfStockBuyBox_feature_div\"},\"aplusBrandStory\":{\"divToUpdate\":\"aplusBrandStory_feature_div\"},\"mobb_shipsFromSoldBy\":{\"divToUpdate\":\"mobb_shipsFromSoldBy_feature_div\"},\"usedAccordionRowHeader\":{\"divToUpdate\":null},\"productAdsFeedback\":{\"divToUpdate\":\"product-ads-feedback_feature_div\"},\"twisterUtils\":{\"divToUpdate\":null},\"smartCustomerLocation\":{\"divToUpdate\":null},\"twisterDimensionSlots\":{\"divToUpdate\":null},\"oneClick\":{\"divToUpdate\":\"oneClick_feature_div\"},\"mobb_alternativeOfferEligibilityMessaging\":{\"divToUpdate\":\"mobb_alternativeOfferEligibilityMessaging_feature_div\"},\"rentAccordionRowContent\":{\"divToUpdate\":null},\"r4mUpsellDownsellWidget\":{\"divToUpdate\":\"r4mUpsellDownsellWidget_feature_div\"},\"b2brdBuyBox\":{\"divToUpdate\":\"b2brdBuyBox_feature_div\"},\"skyCitySoftMerge\":{\"divToUpdate\":\"skyCitySoftMerge_feature_div\"},\"nonprimeproduct\":{\"divToUpdate\":null},\"highValueMessaging\":{\"divToUpdate\":\"highValueMessaging_feature_div\"},\"smartHomeBtfWidget\":{\"divToUpdate\":\"smartHomeBtfWidget_feature_div\"},\"tellAFriendBox\":{\"divToUpdate\":\"tellAFriendBox_feature_div\"},\"emwaBuyBox\":{\"divToUpdate\":\"emwaBuyBox_feature_div\"},\"unavailableNewAccordionRowHeader\":{\"divToUpdate\":null},\"addOnItem\":{\"divToUpdate\":\"addOnItem_feature_div\"},\"productSupportAndReturnPolicy\":{\"divToUpdate\":\"productSupportAndReturnPolicy_feature_div\"},\"companyCompliancePolicies\":{\"divToUpdate\":\"companyCompliancePolicies_feature_div\"},\"availabilityInsideBuyBox\":{\"divToUpdate\":\"availabilityInsideBuyBox_feature_div\"},\"businessOnlySelectionBuyBox\":{\"divToUpdate\":\"businessOnlySelectionBuyBox_feature_div\"},\"dpreviewBadge\":{\"divToUpdate\":\"dpreviewBadge_feature_div\"},\"ms3\":{\"divToUpdate\":null},\"invitePlatform\":{\"divToUpdate\":\"invitePlatform_feature_div\"},\"pwBuyBoxAccordionRowHeader\":{\"divToUpdate\":null},\"preAddToCartFramework\":{\"divToUpdate\":\"preAddToCartFramework_feature_div\"},\"bylineInfo\":{\"divToUpdate\":\"bylineInfo_feature_div\"},\"addToCart\":{\"divToUpdate\":\"addToCart_feature_div\"},\"glanceviewofferlogging\":{\"divToUpdate\":null},\"acBadge\":{\"divToUpdate\":\"acBadge_feature_div\"},\"vendorPoweredCoupon\":{\"divToUpdate\":\"vendorPoweredCoupon_feature_div\"},\"bundle\":{\"divToUpdate\":\"bundle_feature_div\"},\"fitRating\":{\"divToUpdate\":null},\"HLCXComparisonJumplink\":{\"divToUpdate\":null},\"productAlert\":{\"divToUpdate\":\"productAlert_feature_div\"},\"valuePick\":{\"divToUpdate\":\"valuePick_feature_div\"},\"primeExclusiveAccordionRowContent\":{\"divToUpdate\":null},\"mbb\":{\"divToUpdate\":\"mbb_feature_div\"},\"replacementPartsFeatureBullet\":{\"divToUpdate\":null},\"promotions\":{\"divToUpdate\":\"promotions_feature_div\"},\"twister\":{\"divToUpdate\":\"twister_feature_div\"},\"instantOrderUpdate\":{\"divToUpdate\":\"instantOrderUpdate_feature_div\"},\"usedBuyBoxCondition\":{\"divToUpdate\":\"usedBuyBoxCondition_feature_div\"},\"yurekaBuyBox\":{\"divToUpdate\":\"yurekaBuyBox_feature_div\"},\"smartHomeWidget\":{\"divToUpdate\":\"smartHomeWidget_feature_div\"},\"detailPageGifting\":{\"divToUpdate\":\"detailPageGifting_feature_div\"},\"cspAccordionRowContent\":{\"divToUpdate\":null},\"amazonCustomBuyBox\":{\"divToUpdate\":\"amazonCustomBuyBox_feature_div\"},\"quantityRelocate\":{\"divToUpdate\":\"quantityRelocate_feature_div\"},\"GeographicallyRestrictedBuyBox\":{\"divToUpdate\":\"GeographicallyRestrictedBuyBox_feature_div\"},\"dpFastTrack\":{\"divToUpdate\":\"dpFastTrack_feature_div\"},\"weblabModel\":{\"divToUpdate\":null},\"buyNow\":{\"divToUpdate\":\"buyNow_feature_div\"},\"uss\":{\"divToUpdate\":\"uss_feature_div\"},\"imageBlock\":{\"divToUpdate\":\"imageBlock_feature_div\"},\"comboOfferBuyBox\":{\"divToUpdate\":\"comboOfferBuyBox_feature_div\"},\"unifiedPrice\":{\"divToUpdate\":\"unifiedPrice_feature_div\"},\"newAccordionRowHeader\":{\"divToUpdate\":null},\"priceInsideBuyBox\":{\"divToUpdate\":\"priceInsideBuyBox_feature_div\"},\"certifiedBusinessSeller\":{\"divToUpdate\":null},\"usedBuyBoxAddToCart\":{\"divToUpdate\":\"usedBuyBoxAddToCart_feature_div\"},\"ussInit\":{\"divToUpdate\":\"ussInit_feature_div\"},\"usedBuyBoxOneClick\":{\"divToUpdate\":\"usedBuyBoxOneClick_feature_div\"},\"pmpux\":{\"divToUpdate\":\"pmpux_feature_div\"},\"partialStateBuyBox\":{\"divToUpdate\":\"partialStateBuyBox_feature_div\"},\"primeExclusiveAccordionRowHeader\":{\"divToUpdate\":null},\"header\":{\"divToUpdate\":null},\"sponsoredProducts\":{\"divToUpdate\":\"sponsoredProducts_feature_div\"},\"servicesInterstitial\":{\"divToUpdate\":\"servicesInterstitial_feature_div\"},\"usedBuyBoxShippingMessage\":{\"divToUpdate\":\"usedBuyBoxShippingMessage_feature_div\"},\"primeExclusiveBuyBox\":{\"divToUpdate\":\"primeExclusiveBuyBox_feature_div\"},\"sizeChartUrl\":{\"divToUpdate\":null},\"prsubswidget\":{\"divToUpdate\":\"prsubswidget_feature_div\"},\"shippingMessageInsideBuyBox\":{\"divToUpdate\":\"shippingMessageInsideBuyBox_feature_div\"},\"applicablePromotionList\":{\"divToUpdate\":\"applicablePromotionList_feature_div\"},\"simpleBundleV2\":{\"divToUpdate\":\"simpleBundleV2_feature_div\"},\"renewedProgramDescriptionAtf\":{\"divToUpdate\":\"renewedProgramDescriptionAtf_feature_div\"},\"unavailableNewAccordionRowContent\":{\"divToUpdate\":null},\"productAdsBuyBox\":{\"divToUpdate\":\"productAdsBuyBox_feature_div\"},\"holidayAvailabilityMessage\":{\"divToUpdate\":\"holidayAvailabilityMessage_feature_div\"},\"zeitgeistBadge\":{\"divToUpdate\":\"zeitgeistBadge_feature_div\"},\"promotionalBundle\":{\"divToUpdate\":\"promotionalBundle_feature_div\"},\"aplus3p\":{\"divToUpdate\":\"aplus3p_feature_div\"},\"redirection\":{\"divToUpdate\":\"redirection_feature_div\"},\"addOnMessage\":{\"divToUpdate\":\"addOnMessage_feature_div\"},\"digitalDashHighProminence\":{\"divToUpdate\":\"digitalDashHighProminence_feature_div\"},\"newerVersion\":{\"divToUpdate\":\"newerVersion_feature_div\"},\"addToWishlistAccordion\":{\"divToUpdate\":\"addToWishlistAccordion_feature_div\"},\"originalPackagingMessageInsideBuyBox\":{\"divToUpdate\":\"originalPackagingMessageInsideBuyBox_feature_div\"},\"hbaLabel\":{\"divToUpdate\":\"hbaLabel_feature_div\"},\"dealOffer\":{\"divToUpdate\":null},\"primePriceBadging\":{\"divToUpdate\":null},\"HLCXComparisonWidget\":{\"divToUpdate\":\"HLCXComparisonWidget_feature_div\"},\"usedBuyBoxBuyNow\":{\"divToUpdate\":\"usedBuyBoxBuyNow_feature_div\"}},\"location\":{\"moreBuyingChoices\":{\"divToUpdate\":\"moreBuyingChoices_feature_div\"},\"companyCompliancePolicies\":{\"divToUpdate\":\"companyCompliancePolicies_feature_div\"},\"applicablePromotionList\":{\"divToUpdate\":\"applicablePromotionList_feature_div\"},\"shipsFromSoldBy\":{\"divToUpdate\":\"shipsFromSoldBy_feature_div\"},\"pmpux\":{\"divToUpdate\":\"pmpux_feature_div\"},\"availability\":{\"divToUpdate\":\"availability_feature_div\"},\"issuancePriceblockAmabot\":{\"divToUpdate\":\"issuancePriceblockAmabot_feature_div\"},\"holidayDeliveryMessage\":{\"divToUpdate\":\"holidayDeliveryMessage_feature_div\"},\"businessPricing\":{\"divToUpdate\":\"businessPricing_feature_div\"},\"dpFastTrack\":{\"divToUpdate\":\"dpFastTrack_feature_div\"},\"smileEligibility\":{\"divToUpdate\":\"smileEligibility_feature_div\"},\"olp\":{\"divToUpdate\":\"olp_feature_div\"},\"businessOnlyItem\":{\"divToUpdate\":\"businessOnlyItem_feature_div\"},\"holidayAvailabilityMessage\":{\"divToUpdate\":\"holidayAvailabilityMessage_feature_div\"},\"alternativeOfferEligibilityMessaging\":{\"divToUpdate\":\"alternativeOfferEligibilityMessaging_feature_div\"},\"unifiedPrice\":{\"divToUpdate\":\"unifiedPrice_feature_div\"},\"addServices\":{\"divToUpdate\":\"addServices_feature_div\"}},\"upsell\":{\"moreBuyingChoices\":{\"divToUpdate\":\"moreBuyingChoices_feature_div\"},\"companyCompliancePolicies\":{\"divToUpdate\":\"companyCompliancePolicies_feature_div\"},\"applicablePromotionList\":{\"divToUpdate\":\"applicablePromotionList_feature_div\"},\"shipsFromSoldBy\":{\"divToUpdate\":\"shipsFromSoldBy_feature_div\"},\"pmpux\":{\"divToUpdate\":\"pmpux_feature_div\"},\"availability\":{\"divToUpdate\":\"availability_feature_div\"},\"issuancePriceblockAmabot\":{\"divToUpdate\":\"issuancePriceblockAmabot_feature_div\"},\"holidayDeliveryMessage\":{\"divToUpdate\":\"holidayDeliveryMessage_feature_div\"},\"businessPricing\":{\"divToUpdate\":\"businessPricing_feature_div\"},\"dpFastTrack\":{\"divToUpdate\":\"dpFastTrack_feature_div\"},\"smileEligibility\":{\"divToUpdate\":\"smileEligibility_feature_div\"},\"businessOnlyItem\":{\"divToUpdate\":\"businessOnlyItem_feature_div\"},\"holidayAvailabilityMessage\":{\"divToUpdate\":\"holidayAvailabilityMessage_feature_div\"},\"alternativeOfferEligibilityMessaging\":{\"divToUpdate\":\"alternativeOfferEligibilityMessaging_feature_div\"},\"unifiedPrice\":{\"divToUpdate\":\"unifiedPrice_feature_div\"}},\"newbuybox\":{\"mobb_shipsFromSoldBy\":{\"divToUpdate\":\"mobb_shipsFromSoldBy_feature_div\"},\"amazonCertifiedBadge\":{\"divToUpdate\":\"amazonCertifiedBadge_feature_div\"},\"certifiedRefurbishedVersion\":{\"divToUpdate\":\"certifiedRefurbishedVersion_feature_div\"},\"pointsInsideBuyBox\":{\"divToUpdate\":\"pointsInsideBuyBox_feature_div\"},\"usedAccordionRowHeader\":{\"divToUpdate\":null},\"productAdsFeedback\":{\"divToUpdate\":\"product-ads-feedback_feature_div\"},\"tradeInButton\":{\"divToUpdate\":\"tradeInButton_feature_div\"},\"twisterUtils\":{\"divToUpdate\":null},\"smartCustomerLocation\":{\"divToUpdate\":null},\"twisterDimensionSlots\":{\"divToUpdate\":null},\"oneClick\":{\"divToUpdate\":\"oneClick_feature_div\"},\"bbop\":{\"divToUpdate\":\"bbop_feature_div\"},\"renewedProgramDescriptionBtf\":{\"divToUpdate\":\"renewedProgramDescriptionBtf_feature_div\"},\"mobb_alternativeOfferEligibilityMessaging\":{\"divToUpdate\":\"mobb_alternativeOfferEligibilityMessaging_feature_div\"},\"dex\":{\"divToUpdate\":null},\"accessoryUpsellAmabot\":{\"divToUpdate\":\"accessoryUpsellAmabot_feature_div\"},\"rentAccordionRowHeader\":{\"divToUpdate\":null},\"amsDetailRight\":{\"divToUpdate\":\"amsDetailRight_feature_div\"},\"rentAccordionRowContent\":{\"divToUpdate\":null},\"cerberus\":{\"divToUpdate\":\"cerberus_feature_div\"},\"scheduledDelivery\":{\"divToUpdate\":null},\"r4mUpsellDownsellWidget\":{\"divToUpdate\":\"r4mUpsellDownsellWidget_feature_div\"},\"b2brdBuyBox\":{\"divToUpdate\":\"b2brdBuyBox_feature_div\"},\"skyCitySoftMerge\":{\"divToUpdate\":\"skyCitySoftMerge_feature_div\"},\"productDescription\":{\"divToUpdate\":\"productDescription_feature_div\"},\"attachAccessoryModal\":{\"divToUpdate\":\"attachAccessoryModal_feature_div\"},\"digitalDashLowProminence\":{\"divToUpdate\":\"digitalDashLowProminence_feature_div\"},\"bbg\":{\"divToUpdate\":\"bbg_feature_div\"},\"unqualifiedBuyBox\":{\"divToUpdate\":\"unqualifiedBuyBox_feature_div\"},\"b2bAccordionRowContent\":{\"divToUpdate\":null},\"nonprimeproduct\":{\"divToUpdate\":null},\"primeExclusiveBadge\":{\"divToUpdate\":\"primeExclusiveBadge_feature_div\"},\"edpPopoverContent\":{\"divToUpdate\":\"edpPopoverContent_feature_div\"},\"highValueMessaging\":{\"divToUpdate\":\"highValueMessaging_feature_div\"},\"mobb_availability\":{\"divToUpdate\":\"mobb_availability_feature_div\"},\"averageCustomerReviews\":{\"divToUpdate\":\"averageCustomerReviews_feature_div\"},\"featurebullets\":{\"divToUpdate\":\"featurebullets_feature_div\"},\"smartHomeBtfWidget\":{\"divToUpdate\":\"smartHomeBtfWidget_feature_div\"},\"pwBuyBoxAccordionRowContent\":{\"divToUpdate\":null},\"amazonGlobal\":{\"divToUpdate\":\"amazonGlobal_feature_div\"},\"tellAFriendBox\":{\"divToUpdate\":\"tellAFriendBox_feature_div\"},\"soldByThirdParty\":{\"divToUpdate\":\"soldByThirdParty_feature_div\"},\"emwaBuyBox\":{\"divToUpdate\":\"emwaBuyBox_feature_div\"},\"primeExclusiveBuyboxUpsell\":{\"divToUpdate\":null},\"soldByThirdPartyRelocate\":{\"divToUpdate\":\"soldByThirdPartyRelocate_feature_div\"},\"dealsBuyBox\":{\"divToUpdate\":\"dealsBuyBox_feature_div\"},\"unavailableNewAccordionRowHeader\":{\"divToUpdate\":null},\"addOnItem\":{\"divToUpdate\":\"addOnItem_feature_div\"},\"productSupportAndReturnPolicy\":{\"divToUpdate\":\"productSupportAndReturnPolicy_feature_div\"},\"quantityLayoutHigh\":{\"divToUpdate\":\"quantityLayoutHigh_feature_div\"},\"availabilityInsideBuyBox\":{\"divToUpdate\":\"availabilityInsideBuyBox_feature_div\"},\"tfx\":{\"divToUpdate\":null},\"businessOnlySelectionBuyBox\":{\"divToUpdate\":\"businessOnlySelectionBuyBox_feature_div\"},\"dpreviewBadge\":{\"divToUpdate\":\"dpreviewBadge_feature_div\"},\"bundleV2\":{\"divToUpdate\":\"bundleV2_feature_div\"},\"ms3\":{\"divToUpdate\":null},\"invitePlatform\":{\"divToUpdate\":\"invitePlatform_feature_div\"},\"pwBuyBoxAccordionRowHeader\":{\"divToUpdate\":null},\"quantityLayoutLow\":{\"divToUpdate\":\"quantityLayoutLow_feature_div\"},\"preAddToCartFramework\":{\"divToUpdate\":\"preAddToCartFramework_feature_div\"},\"bylineInfo\":{\"divToUpdate\":\"bylineInfo_feature_div\"},\"ajaxBlockComponents\":{\"divToUpdate\":\"ajaxBlockComponents_feature_div\"},\"addToCart\":{\"divToUpdate\":\"addToCart_feature_div\"},\"glanceviewofferlogging\":{\"divToUpdate\":null},\"acBadge\":{\"divToUpdate\":\"acBadge_feature_div\"},\"vendorPoweredCoupon\":{\"divToUpdate\":\"vendorPoweredCoupon_feature_div\"},\"dpFastTrackInsideBuyBox\":{\"divToUpdate\":\"dpFastTrackInsideBuyBox_feature_div\"},\"bundle\":{\"divToUpdate\":\"bundle_feature_div\"},\"giveaway\":{\"divToUpdate\":\"giveaway_feature_div\"},\"globalStoreBadgePopover\":{\"divToUpdate\":\"globalStoreBadgePopover_feature_div\"},\"fitRating\":{\"divToUpdate\":null},\"HLCXComparisonJumplink\":{\"divToUpdate\":null},\"productAlert\":{\"divToUpdate\":\"productAlert_feature_div\"},\"valuePick\":{\"divToUpdate\":\"valuePick_feature_div\"},\"installmentPayment\":{\"divToUpdate\":null},\"primeExclusiveAccordionRowContent\":{\"divToUpdate\":null},\"mbb\":{\"divToUpdate\":\"mbb_feature_div\"},\"replacementPartsFeatureBullet\":{\"divToUpdate\":null},\"clickToContact\":{\"divToUpdate\":\"clickToContact_feature_div\"},\"promotions\":{\"divToUpdate\":\"promotions_feature_div\"},\"shipsFromSoldByInsideBuyBox\":{\"divToUpdate\":\"shipsFromSoldByInsideBuyBox_feature_div\"},\"asg\":{\"divToUpdate\":\"asg_feature_div\"},\"twister\":{\"divToUpdate\":\"twister_feature_div\"},\"instantOrderUpdate\":{\"divToUpdate\":\"instantOrderUpdate_feature_div\"},\"ask\":{\"divToUpdate\":\"ask_feature_div\"},\"usedBuyBoxCondition\":{\"divToUpdate\":\"usedBuyBoxCondition_feature_div\"},\"yurekaBuyBox\":{\"divToUpdate\":\"yurekaBuyBox_feature_div\"},\"smartHomeWidget\":{\"divToUpdate\":\"smartHomeWidget_feature_div\"},\"giftCardHolidayAvailabilityMessaging\":{\"divToUpdate\":\"giftcard-holiday-availability-messaging_feature_div\"},\"usedBuyBoxSoldBy\":{\"divToUpdate\":\"usedBuyBoxSoldBy_feature_div\"},\"detailPageGifting\":{\"divToUpdate\":\"detailPageGifting_feature_div\"},\"cspAccordionRowContent\":{\"divToUpdate\":null},\"andonCord\":{\"divToUpdate\":\"andonCord_feature_div\"},\"shareInfo\":{\"divToUpdate\":null},\"crossBorderWidget\":{\"divToUpdate\":\"crossBorderWidget_feature_div\"},\"amazonCustomBuyBox\":{\"divToUpdate\":\"amazonCustomBuyBox_feature_div\"},\"quantityRelocate\":{\"divToUpdate\":\"quantityRelocate_feature_div\"},\"dpreviewSampleGallery\":{\"divToUpdate\":\"dpreviewSampleGallery_feature_div\"},\"globalStoreInfoBullets\":{\"divToUpdate\":\"globalStoreInfoBullets_feature_div\"},\"primexp\":{\"divToUpdate\":null},\"GeographicallyRestrictedBuyBox\":{\"divToUpdate\":\"GeographicallyRestrictedBuyBox_feature_div\"},\"productDetails\":{\"divToUpdate\":\"productDetails_feature_div\"},\"recommendations\":{\"divToUpdate\":\"recommendations_feature_div\"},\"sponsoredProducts2\":{\"divToUpdate\":\"sponsoredProducts2_feature_div\"},\"weblabModel\":{\"divToUpdate\":null},\"buyNow\":{\"divToUpdate\":\"buyNow_feature_div\"},\"uss\":{\"divToUpdate\":\"uss_feature_div\"},\"heroQuickPromo\":{\"divToUpdate\":\"heroQuickPromo_feature_div\"},\"miraiBTFShopByLook\":{\"divToUpdate\":\"miraiBTFShopByLook_feature_div\"},\"legal\":{\"divToUpdate\":\"legal_feature_div\"},\"digitalDashLowProminenceAccordion\":{\"divToUpdate\":\"digitalDashLowProminenceAccordion_feature_div\"},\"comboOfferBuyBox\":{\"divToUpdate\":\"comboOfferBuyBox_feature_div\"},\"newAccordionRowHeader\":{\"divToUpdate\":null},\"pwBuyBox\":{\"divToUpdate\":\"pwBuyBox_feature_div\"},\"accessoryUpsellBtf\":{\"divToUpdate\":\"accessoryUpsellBtf_feature_div\"},\"priceInsideBuyBox\":{\"divToUpdate\":\"priceInsideBuyBox_feature_div\"},\"unifiedLocation\":{\"divToUpdate\":null},\"certifiedBusinessSeller\":{\"divToUpdate\":null},\"addToWishlist\":{\"divToUpdate\":\"addToWishlist_feature_div\"},\"usedBuyBoxAddToCart\":{\"divToUpdate\":\"usedBuyBoxAddToCart_feature_div\"},\"freeShippingPriceBadging\":{\"divToUpdate\":null},\"socialFabric\":{\"divToUpdate\":\"socialFabric_feature_div\"},\"ussInit\":{\"divToUpdate\":\"ussInit_feature_div\"},\"usedBuyBoxOneClick\":{\"divToUpdate\":\"usedBuyBoxOneClick_feature_div\"},\"promiseBasedBadgeInsideBuyBox\":{\"divToUpdate\":\"promiseBasedBadgeInsideBuyBox_feature_div\"},\"voltageCompliance\":{\"divToUpdate\":\"voltageCompliance_feature_div\"},\"edpIngress\":{\"divToUpdate\":\"edpIngress_feature_div\"},\"dashPreRegistration\":{\"divToUpdate\":\"dashPreRegistration_feature_div\"},\"glowContextualIngressPt\":{\"divToUpdate\":\"glowContextualIngressPt_feature_div\"},\"partialStateBuyBox\":{\"divToUpdate\":\"partialStateBuyBox_feature_div\"},\"primeExclusiveAccordionRowHeader\":{\"divToUpdate\":null},\"header\":{\"divToUpdate\":null},\"sponsoredProducts\":{\"divToUpdate\":\"sponsoredProducts_feature_div\"},\"servicesInterstitial\":{\"divToUpdate\":\"servicesInterstitial_feature_div\"},\"buyboxprime\":{\"divToUpdate\":null},\"usedBuyBoxShippingMessage\":{\"divToUpdate\":\"usedBuyBoxShippingMessage_feature_div\"},\"primeExclusiveBuyBox\":{\"divToUpdate\":\"primeExclusiveBuyBox_feature_div\"},\"promiseBasedBadge\":{\"divToUpdate\":\"promiseBasedBadge_feature_div\"},\"sizeChartUrl\":{\"divToUpdate\":null},\"prsubswidget\":{\"divToUpdate\":\"prsubswidget_feature_div\"},\"almMultiOfferEgress\":{\"divToUpdate\":\"almMultiOfferEgress_feature_div\"},\"rowContent\":{\"divToUpdate\":null},\"shippingMessageInsideBuyBox\":{\"divToUpdate\":\"shippingMessageInsideBuyBox_feature_div\"},\"apubPrimeFirst\":{\"divToUpdate\":\"apubPrimeFirst_feature_div\"},\"dpreviewSummary\":{\"divToUpdate\":\"dpreviewSummary_feature_div\"},\"snsBuyBox\":{\"divToUpdate\":\"snsBuyBox_feature_div\"},\"simpleBundleV2\":{\"divToUpdate\":\"simpleBundleV2_feature_div\"},\"title\":{\"divToUpdate\":\"title_feature_div\"},\"renewedProgramDescriptionAtf\":{\"divToUpdate\":\"renewedProgramDescriptionAtf_feature_div\"},\"b2bAccordionRowHeader\":{\"divToUpdate\":null},\"ftCustomerContext\":{\"divToUpdate\":null},\"unavailableNewAccordionRowContent\":{\"divToUpdate\":null},\"productAdsBuyBox\":{\"divToUpdate\":\"productAdsBuyBox_feature_div\"},\"zeitgeistBadge\":{\"divToUpdate\":\"zeitgeistBadge_feature_div\"},\"promotionalBundle\":{\"divToUpdate\":\"promotionalBundle_feature_div\"},\"aplus3p\":{\"divToUpdate\":\"aplus3p_feature_div\"},\"redirection\":{\"divToUpdate\":\"redirection_feature_div\"},\"addOnMessage\":{\"divToUpdate\":\"addOnMessage_feature_div\"},\"cspAccordionRowHeader\":{\"divToUpdate\":null},\"usedBuyBox\":{\"divToUpdate\":\"usedBuyBox_feature_div\"},\"digitalDashHighProminence\":{\"divToUpdate\":\"digitalDashHighProminence_feature_div\"},\"buyboxbadge\":{\"divToUpdate\":null},\"newerVersion\":{\"divToUpdate\":\"newerVersion_feature_div\"},\"addToWishlistAccordion\":{\"divToUpdate\":\"addToWishlistAccordion_feature_div\"},\"originalPackagingMessageInsideBuyBox\":{\"divToUpdate\":\"originalPackagingMessageInsideBuyBox_feature_div\"},\"digitalBuyBoxLayout\":{\"divToUpdate\":\"digitalBuyBoxLayout_feature_div\"},\"aplus\":{\"divToUpdate\":\"aplus_feature_div\"},\"hbaLabel\":{\"divToUpdate\":\"hbaLabel_feature_div\"},\"rentalPriceBlock\":{\"divToUpdate\":\"rentalPriceBlock_feature_div\"},\"dealOffer\":{\"divToUpdate\":null},\"reviews-hr\":{\"divToUpdate\":null},\"digitalDashHighProminenceAccordion\":{\"divToUpdate\":\"digitalDashHighProminenceAccordion_feature_div\"},\"smartHomeBtfHub\":{\"divToUpdate\":\"smartHomeBtfHub_feature_div\"},\"primePriceBadging\":{\"divToUpdate\":null},\"outOfStockBuyBox\":{\"divToUpdate\":\"outOfStockBuyBox_feature_div\"},\"HLCXComparisonWidget\":{\"divToUpdate\":\"HLCXComparisonWidget_feature_div\"},\"aplusBrandStory\":{\"divToUpdate\":\"aplusBrandStory_feature_div\"},\"usedBuyBoxBuyNow\":{\"divToUpdate\":\"usedBuyBoxBuyNow_feature_div\"}}};\n            return dataToReturn;\n        });\n    \u003C/script>\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n        \n        \n    \n\u003C/div>\n\n\n\n\n\n\n\n\n\n\u003C!-- MarkAF -->\n\n    \n\n\n\n\n\n        \n        \n    \n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n        \n        \n\n\n    \n    \n\n\n\n   \n    \n\n\n\n\n\n\n\n\n\n\n\n\n        \u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;metrics-schema&quot;}\">{\"widgetSchema\":\"dp:widget:\",\"dimensionSchema\":\"dp:dims:\"}\u003C/script>\n\n    \n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      \n\n\n\n\n\n\n\n\n\n\n  \n  \n        \n\n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n        \n        \n        \n  \n\n\n\n\n\n\n\n\n    \n\n\n            \n\n\n            \n\n\n\n\n\n\n            \n\n        \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cscript type=\"text/javascript\">P.when('cf').execute(function() { ue.count('dp:widget:dpxSize:dpxBTFSize', 222);ue.count('dp:widget:dpxSize:dpxATFSize', 213);});\u003C/script>\n         \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"bundleV2_feature_div\" class=\"feature\" data-feature-name=\"bundleV2\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n    \n    \n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n\n\n\n\n\n\n        \n        \n        \n\n\u003C!--rbd-->\n\n\u003Cdiv class=\"celwidget pd_rd_w-Qt6cz pf_rd_p-479b6a22-70ae-47a0-9700-731033f96ce8 pf_rd_r-WY2K06V7WEMKTC0K2H7W pd_rd_r-8177ea1a-d805-4c97-b06f-60ae0bbe12e0 pd_rd_wg-30NaA\" cel_widget_id=\"desktop-dp-sims_fbt\">\n\n\n\n\n\n  \n\n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003Cdiv id=\"sims-fbt\" class=\"similarities-widget bucket\">\n        \u003Chr class=\"a-divider-normal bucketDivider\">\u003Ch2>Frequently bought together\u003C/h2>\n        \u003Cdiv id=\"sims-fbt-container\" data-p13n-feature-metadata=\"{&quot;baseAsin&quot;:&quot;B06XD3LXXK&quot;,&quot;has_diff_avail&quot;:&quot;0&quot;,&quot;has_seller_difference&quot;:&quot;0&quot;,&quot;pd_rd_wg&quot;:&quot;30NaA&quot;,&quot;pd_rd_r&quot;:&quot;8177ea1a-d805-4c97-b06f-60ae0bbe12e0&quot;,&quot;pf_rd_r&quot;:&quot;WY2K06V7WEMKTC0K2H7W&quot;,&quot;pf_rd_p&quot;:&quot;479b6a22-70ae-47a0-9700-731033f96ce8&quot;,&quot;pd_rd_w&quot;:&quot;Qt6cz&quot;}\" data-p13n-feature-name=\"pd_bxgy_147\" data-p13n-global=\"{&quot;customerId&quot;:0,&quot;marketplace&quot;:&quot;US&quot;,&quot;requestId&quot;:&quot;WY2K06V7WEMKTC0K2H7W&quot;,&quot;marketplaceId&quot;:&quot;ATVPDKIKX0DER&quot;,&quot;session&quot;:&quot;137-0530487-6192152&quot;}\" class=\"a-container\">\n            \u003Cdiv id=\"sims-fbt-content\">\n                \u003Cform id=\"sims-fbt-form\" name=\"BuyXGetYhandleBuy\" method=\"post\" action=\"/gp/item-dispatch/ref=pd_bxgy_147_button_crt/137-0530487-6192152?ie=UTF8&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=Qt6cz&amp;pd_rd_wg=30NaA&amp;pf_rd_p=479b6a22-70ae-47a0-9700-731033f96ce8&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\" autocomplete=\"off\">\n                \u003Cinput type=\"hidden\" name=\"session-id\" value=\"137-0530487-6192152\">\u003Cinput type=\"hidden\" name=\"discoveredAsins.1\" value=\"B005EJH6Z4\">\u003Cinput type=\"hidden\" name=\"discoveredAsins.2\" value=\"B005EJH6RW\">\n                \u003Cdiv>\n                    \u003Cul class=\"a-unordered-list a-nostyle a-horizontal a-spacing-base a-spacing-top-base sims-fbt-image-box\">\n        \u003Cli class=\"a-align-center sims-fbt-image-1\">\u003Cspan class=\"a-list-item\">\u003Cdiv class=\"a-section\">\u003Cimg alt=\"Acer Flagship CB3-532 15.6&quot; HD Premium Chromebook - Intel Dual-Core Celeron N3060 up to 2.48GH.z, 2GB RAM, 16GB SSD, Wireless AC, HDMI, USB 3.0, Webcam, Chrome OS (Renewed)\" src=\"https://images-na.ssl-images-amazon.com/images/I/51840t%2BtcFL._AC_UL115_.jpg\" class=\"sims-fbt-image\">\u003C/div>\u003C/span>\u003C/li>\u003Cli class=\"a-align-center sims-fbt-plus-2\">\u003Cspan class=\"a-list-item a-size-large a-color-tertiary\">+\u003C/span>\u003C/li>\u003Cli class=\"a-align-center sims-fbt-image-2\">\u003Cspan class=\"a-list-item\">\u003Ca class=\"a-link-normal\" href=\"/AmazonBasics-Wireless-Computer-Mouse-Receiver/dp/B005EJH6Z4/ref=pd_bxgy_147_img_2/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B005EJH6Z4&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=Qt6cz&amp;pd_rd_wg=30NaA&amp;pf_rd_p=479b6a22-70ae-47a0-9700-731033f96ce8&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cdiv class=\"a-section\">\u003Cimg alt=\"AmazonBasics Wireless Computer Mouse with Nano Receiver\" src=\"https://images-na.ssl-images-amazon.com/images/I/51alt8qImkL._AC_UL115_.jpg\" class=\"sims-fbt-image\">\u003C/div>\u003C/a>\u003C/span>\u003C/li>\u003Cli class=\"a-align-center sims-fbt-plus-3\">\u003Cspan class=\"a-list-item a-size-large a-color-tertiary\">+\u003C/span>\u003C/li>\u003Cli class=\"a-align-center sims-fbt-image-3\">\u003Cspan class=\"a-list-item\">\u003Ca class=\"a-link-normal\" href=\"/AmazonBasics-3-Button-Wired-Computer-1-Pack/dp/B005EJH6RW/ref=pd_bxgy_147_img_3/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B005EJH6RW&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=Qt6cz&amp;pd_rd_wg=30NaA&amp;pf_rd_p=479b6a22-70ae-47a0-9700-731033f96ce8&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cdiv class=\"a-section\">\u003Cimg alt=\"AmazonBasics 3-Button USB Wired Computer Mouse (Black), 1-Pack\" src=\"https://images-na.ssl-images-amazon.com/images/I/614Bv-VUwDL._AC_UL115_.jpg\" class=\"sims-fbt-image\">\u003C/div>\u003C/a>\u003C/span>\u003C/li>\n        \u003C/ul>\n                    \u003Cdiv class=\"sims-fbt-price-box\">\n                        \u003Cdiv class=\"sims-fbt-total-price\">\u003Cspan class=\"a-size-base a-color-secondary sims-fbt-total-price-text\">Total price: \u003C/span>\u003Cspan class=\"a-size-medium a-color-price sims-fbt-total-price-value\">\u003Cspan class=\"p13n-sc-price\">$136.98\u003C/span>\u003C/span>\u003C/div>\n                        \u003Cdiv class=\"sims-fbt-buttons\">\u003Cdiv class=\"a-button-stack a-spacing-mini\">\n                            \u003Cspan class=\"a-button a-button-primary a-button-small sims-fbt-add-to-cart\" id=\"a-autoid-11\">\u003Cspan class=\"a-button-inner\">\u003Cinput name=\"submit.addToCart\" class=\"a-button-input\" type=\"submit\" aria-labelledby=\"a-autoid-11-announce\">\u003Cspan class=\"a-button-text\" aria-hidden=\"true\" id=\"a-autoid-11-announce\">Add all three to Cart\u003C/span>\u003C/span>\u003C/span>\n                            \u003Cspan id=\"fbt_add_to_wishlist\" class=\"a-button a-button-normal a-button-thumbnail a-button-base a-button-small sims-fbt-add-to-wishlist\">\u003Cspan class=\"a-button-inner\">\u003Cinput name=\"submit.add-to-registry.wishlist\" class=\"a-button-input\" type=\"submit\" aria-labelledby=\"fbt_add_to_wishlist-announce\">\u003Cspan id=\"fbt_add_to_wishlist-announce\" class=\"a-button-text a-text-center\" aria-hidden=\"true\">Add all three to List\u003C/span>\u003C/span>\u003C/span>\n                        \u003C/div>\u003C/div>\n                        \u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;sims-fbt&quot;}\">{\"currencyConversionRatio\":1,\"addToCartText\":{\"1\":\"Add to Cart\",\"3\":\"Add all three to Cart\",\"2\":\"Add both to Cart\"},\"allOfferListingIDs\":[\"KZBgK1PNI1FlptSjy1ii32c4SyDtEpLrsm9U3Z5%2F%2FMr4Qy4QYuaDCju4V5RRWbbgRYoe768SBrZbLpYv2T0pYM%2Bxjgc6le9iAx10%2BSaKxgSCTwJfFRaIbmoLIZvA4dTQtpRLhloseG7dG%2B9xWB6GRaolX9JOw826\",\"7176GFs6c%2F7tCrYF5wqMFvI5zWgMm6owAfFemBa0b6BUYuCBe4B8AnC3VpKSu7bmEd6bN%2BJQs%2B0uoSAzTycWFgQO6WLRjAERB9fNFshxsMJdnOjTvj%2Bbtw%3D%3D\",\"OYUy28Cfu04TB%2FSz8Y4Z90EzoEQB8mgU5K7noJoPdyEACLtQswE20u%2BBbFmVa4M564KSV57gLfNQaHcZ2rIpCl57lPl%2B2MYzQz3kNIPQpCxiJmdJJ7YW%2Fg%3D%3D\"],\"currencySymbol\":\"\\u003cspan class='p13n-sc-price' >$\\u003cspan class=\\\"sims-fbt-price-value\\\">\\u003c/span>\\u003c/span>\",\"currencyCode\":\"USD\",\"shouldTruncateCents\":0,\"MAPText\":\"To see our price, add these items to your cart. \\u003ca class=\\\"a-link-normal sims-fbt-map-details-link\\\" target=\\\"AmazonHelp\\\" rel=\\\"noopener\\\" href=\\\"/gp/help/customer/display.html/ref=pd_bxgy_147_map/137-0530487-6192152?ie=UTF8&nodeId=200339100&pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&pd_rd_w=Qt6cz&pd_rd_wg=30NaA&pf_rd_p=479b6a22-70ae-47a0-9700-731033f96ce8&pf_rd_r=WY2K06V7WEMKTC0K2H7W&pop-up=1&refRID=WY2K06V7WEMKTC0K2H7W\\\">Why don't we show the price?\\u003c/a>\",\"shippingDetails\":{\"123\":\"same\",\"23\":\"same\",\"13\":\"same\",\"12\":\"same\"},\"shouldUseCommaForDecimal\":0,\"itemDetails\":{\"OYUy28Cfu04TB%2FSz8Y4Z90EzoEQB8mgU5K7noJoPdyEACLtQswE20u%2BBbFmVa4M564KSV57gLfNQaHcZ2rIpCl57lPl%2B2MYzQz3kNIPQpCxiJmdJJ7YW%2Fg%3D%3D\":{\"asin\":\"B005EJH6RW\",\"isPreorder\":0,\"price\":6.99,\"doesMAPPolicyApply\":0},\"7176GFs6c%2F7tCrYF5wqMFvI5zWgMm6owAfFemBa0b6BUYuCBe4B8AnC3VpKSu7bmEd6bN%2BJQs%2B0uoSAzTycWFgQO6WLRjAERB9fNFshxsMJdnOjTvj%2Bbtw%3D%3D\":{\"asin\":\"B005EJH6Z4\",\"isPreorder\":0,\"price\":10,\"doesMAPPolicyApply\":0},\"KZBgK1PNI1FlptSjy1ii32c4SyDtEpLrsm9U3Z5%2F%2FMr4Qy4QYuaDCju4V5RRWbbgRYoe768SBrZbLpYv2T0pYM%2Bxjgc6le9iAx10%2BSaKxgSCTwJfFRaIbmoLIZvA4dTQtpRLhloseG7dG%2B9xWB6GRaolX9JOw826\":{\"asin\":\"B06XD3LXXK\",\"isPreorder\":0,\"price\":119.99,\"doesMAPPolicyApply\":0}},\"addToWishListText\":{\"1\":\"Add to List\",\"3\":\"Add all three to List\",\"2\":\"Add both to List\"},\"preOrderText\":null,\"fbtStrings\":null}\u003C/script>\n                    \u003C/div>\n                \u003C/div>\n                \n                \u003Cdiv class=\"sims-fbt-rows\">\u003Cfieldset class=\"forScreenreaders\">\u003Clegend>\u003Cspan>Buy the selected items together\u003C/span>\u003C/legend>\u003Cul class=\"a-unordered-list a-nostyle a-vertical\">\u003Cli data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;pd_bxgy_147_1_1&quot;,&quot;price&quot;:119.99,&quot;asin&quot;:&quot;B06XD3LXXK&quot;}\" class=\"a-spacing-mini p13n-asin\">\u003Cspan class=\"a-list-item\">\u003Cspan class=\"a-declarative\" data-action=\"fbt-checkbox-click\" data-fbt-checkbox-click=\"{&quot;itemNum&quot;:&quot;1&quot;,&quot;offerListingID&quot;:&quot;KZBgK1PNI1FlptSjy1ii32c4SyDtEpLrsm9U3Z5%2F%2FMr4Qy4QYuaDCju4V5RRWbbgRYoe768SBrZbLpYv2T0pYM%2Bxjgc6le9iAx10%2BSaKxgSCTwJfFRaIbmoLIZvA4dTQtpRLhloseG7dG%2B9xWB6GRaolX9JOw826&quot;,&quot;asin&quot;:&quot;B06XD3LXXK&quot;}\">\u003Cdiv data-a-input-name=\"offeringID.1\" class=\"a-checkbox sims-fbt-checkbox\">\u003Clabel>\u003Cinput type=\"checkbox\" name=\"offeringID.1\" value=\"KZBgK1PNI1FlptSjy1ii32c4SyDtEpLrsm9U3Z5%2F%2FMr4Qy4QYuaDCju4V5RRWbbgRYoe768SBrZbLpYv2T0pYM%2Bxjgc6le9iAx10%2BSaKxgSCTwJfFRaIbmoLIZvA4dTQtpRLhloseG7dG%2B9xWB6GRaolX9JOw826\" checked=\"\" style=\"display: inline-block;\">\u003Ci class=\"a-icon a-icon-checkbox\">\u003C/i>\u003Cspan class=\"a-label a-checkbox-label\">\u003Cdiv class=\"sims-fbt-checkbox-label\">\u003Cspan class=\"sims-fbt-this-item a-text-bold\">This item:\u003C/span>\u003Cspan>Acer Flagship CB3-532 15.6\" HD Premium Chromebook - Intel Dual-Core Celeron N3060 up to 2.48GH.z…\u003C/span> \u003Cspan class=\"a-color-price\">\u003Cspan class=\"p13n-sc-price\">$119.99\u003C/span>\u003C/span> \u003Cdiv class=\"a-row a-spacing-micro a-spacing-top-micro a-size-small a-color-secondary sims-fbt-seller-info\">\u003Cdiv class=\"a-row\">\u003Cspan class=\"a-size-base a-color-success\">In Stock.\u003C/span>\u003C/div>\u003C/div>\u003C/div>\u003C/span>\u003C/label>\u003C/div>\u003C/span>\u003C/span>\u003C/li>\u003Cli data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;pd_bxgy_147_2_2&quot;,&quot;price&quot;:10,&quot;asin&quot;:&quot;B005EJH6Z4&quot;}\" class=\"a-spacing-mini p13n-asin\">\u003Cspan class=\"a-list-item\">\u003Cspan class=\"a-declarative\" data-action=\"fbt-checkbox-click\" data-fbt-checkbox-click=\"{&quot;itemNum&quot;:&quot;2&quot;,&quot;offerListingID&quot;:&quot;7176GFs6c%2F7tCrYF5wqMFvI5zWgMm6owAfFemBa0b6BUYuCBe4B8AnC3VpKSu7bmEd6bN%2BJQs%2B0uoSAzTycWFgQO6WLRjAERB9fNFshxsMJdnOjTvj%2Bbtw%3D%3D&quot;,&quot;asin&quot;:&quot;B005EJH6Z4&quot;}\">\u003Cdiv data-a-input-name=\"offeringID.2\" class=\"a-checkbox sims-fbt-checkbox\">\u003Clabel>\u003Cinput type=\"checkbox\" name=\"offeringID.2\" value=\"7176GFs6c%2F7tCrYF5wqMFvI5zWgMm6owAfFemBa0b6BUYuCBe4B8AnC3VpKSu7bmEd6bN%2BJQs%2B0uoSAzTycWFgQO6WLRjAERB9fNFshxsMJdnOjTvj%2Bbtw%3D%3D\" checked=\"\" style=\"display: inline-block;\">\u003Ci class=\"a-icon a-icon-checkbox\">\u003C/i>\u003Cspan class=\"a-label a-checkbox-label\">\u003Cdiv class=\"sims-fbt-checkbox-label\">\u003Ca class=\"a-size-base a-link-normal\" href=\"/AmazonBasics-Wireless-Computer-Mouse-Receiver/dp/B005EJH6Z4/ref=pd_bxgy_147_2/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B005EJH6Z4&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=Qt6cz&amp;pd_rd_wg=30NaA&amp;pf_rd_p=479b6a22-70ae-47a0-9700-731033f96ce8&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">AmazonBasics Wireless Computer Mouse with Nano Receiver\u003C/a> \u003Cspan class=\"a-color-price\">\u003Cspan class=\"p13n-sc-price\">$10.00\u003C/span>\u003C/span> \u003Cdiv class=\"a-row a-spacing-micro a-spacing-top-micro a-size-small a-color-secondary sims-fbt-seller-info\">\u003Cdiv class=\"a-row\">\u003Cspan class=\"a-size-base a-color-success\">In Stock.\u003C/span>\u003C/div>\u003Cdiv class=\"a-row\">\u003Cspan class=\"a-size-base a-color-secondary a-text-normal\">Ships from and sold by Amazon.com.\u003C/span>\u003C/div>\u003Cdiv class=\"a-row\">\u003Cspan class=\"a-size-base a-color-secondary a-text-normal\">FREE Shipping on orders over \u003Cspan class=\"p13n-sc-price\">$25\u003C/span>. \u003Ca class=\"a-link-normal sims-fbt-details-help-link a-declarative\" target=\"AmazonHelp\" rel=\"noopener\" href=\"/gp/help/customer/display.html/ref=pd_bxgy_147_2_sdc_sdc_2/137-0530487-6192152?ie=UTF8&amp;nodeId=201910870&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=Qt6cz&amp;pd_rd_wg=30NaA&amp;pf_rd_p=479b6a22-70ae-47a0-9700-731033f96ce8&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;pop-up=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">Details\u003C/a>\u003C/span>\u003C/div>\u003C/div>\u003C/div>\u003C/span>\u003C/label>\u003C/div>\u003C/span>\u003C/span>\u003C/li>\u003Cli data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;pd_bxgy_147_3_3&quot;,&quot;price&quot;:6.99,&quot;asin&quot;:&quot;B005EJH6RW&quot;}\" class=\"a-spacing-mini p13n-asin\">\u003Cspan class=\"a-list-item\">\u003Cspan class=\"a-declarative\" data-action=\"fbt-checkbox-click\" data-fbt-checkbox-click=\"{&quot;itemNum&quot;:&quot;3&quot;,&quot;offerListingID&quot;:&quot;OYUy28Cfu04TB%2FSz8Y4Z90EzoEQB8mgU5K7noJoPdyEACLtQswE20u%2BBbFmVa4M564KSV57gLfNQaHcZ2rIpCl57lPl%2B2MYzQz3kNIPQpCxiJmdJJ7YW%2Fg%3D%3D&quot;,&quot;asin&quot;:&quot;B005EJH6RW&quot;}\">\u003Cdiv data-a-input-name=\"offeringID.3\" class=\"a-checkbox sims-fbt-checkbox\">\u003Clabel>\u003Cinput type=\"checkbox\" name=\"offeringID.3\" value=\"OYUy28Cfu04TB%2FSz8Y4Z90EzoEQB8mgU5K7noJoPdyEACLtQswE20u%2BBbFmVa4M564KSV57gLfNQaHcZ2rIpCl57lPl%2B2MYzQz3kNIPQpCxiJmdJJ7YW%2Fg%3D%3D\" checked=\"\" style=\"display: inline-block;\">\u003Ci class=\"a-icon a-icon-checkbox\">\u003C/i>\u003Cspan class=\"a-label a-checkbox-label\">\u003Cdiv class=\"sims-fbt-checkbox-label\">\u003Ca class=\"a-size-base a-link-normal\" href=\"/AmazonBasics-3-Button-Wired-Computer-1-Pack/dp/B005EJH6RW/ref=pd_bxgy_147_3/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B005EJH6RW&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=Qt6cz&amp;pd_rd_wg=30NaA&amp;pf_rd_p=479b6a22-70ae-47a0-9700-731033f96ce8&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">AmazonBasics 3-Button USB Wired Computer Mouse (Black), 1-Pack\u003C/a> \u003Cspan class=\"a-color-price\">\u003Cspan class=\"p13n-sc-price\">$6.99\u003C/span>\u003C/span> \u003Cdiv class=\"a-row a-spacing-micro a-spacing-top-micro a-size-small a-color-secondary sims-fbt-seller-info\">\u003Cdiv class=\"a-row\">\u003Cspan class=\"a-size-base a-color-success\">In Stock.\u003C/span>\u003C/div>\u003Cdiv class=\"a-row\">\u003Cspan class=\"a-size-base a-color-secondary a-text-normal\">Ships from and sold by Amazon.com.\u003C/span>\u003C/div>\u003Cdiv class=\"a-row\">\u003Cspan class=\"a-size-base a-color-secondary a-text-normal\">FREE Shipping on orders over \u003Cspan class=\"p13n-sc-price\">$25\u003C/span>. \u003Ca class=\"a-link-normal sims-fbt-details-help-link a-declarative\" target=\"AmazonHelp\" rel=\"noopener\" href=\"/gp/help/customer/display.html/ref=pd_bxgy_147_3_sdc_sdc_3/137-0530487-6192152?ie=UTF8&amp;nodeId=201910870&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=Qt6cz&amp;pd_rd_wg=30NaA&amp;pf_rd_p=479b6a22-70ae-47a0-9700-731033f96ce8&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;pop-up=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">Details\u003C/a>\u003C/span>\u003C/div>\u003C/div>\u003C/div>\u003C/span>\u003C/label>\u003C/div>\u003C/span>\u003C/span>\u003C/li>\u003C/ul>\u003C/fieldset>\u003C/div>\n                \u003C/form>\n            \u003C/div>\n        \u003C/div>\n    \u003C/div>\n    \n\n\n\n\n\n\n\n\u003C/div>\n\n\n\n\n\n\n\n  \n\n\n\n        \n        \n        \n  \n\n\n\n\n\n\n\n\n    \n\n\n            \n\n\n            \n\n\n\n\n\n\n            \n\n        \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"r4mUpsellDownsellWidget_feature_div\" class=\"feature\" data-feature-name=\"r4mUpsellDownsellWidget\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\u003C!--rbd-->\n\n\u003Cdiv class=\"celwidget pd_rd_w-mXU1z pf_rd_p-ef4dc990-a9ca-4945-ae0b-f8d549198ed6 pf_rd_r-WY2K06V7WEMKTC0K2H7W pd_rd_r-8177ea1a-d805-4c97-b06f-60ae0bbe12e0 pd_rd_wg-30NaA\" cel_widget_id=\"desktop-dp-sims_vtp\">\n\n\n\n\n\n  \n\n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \u003Chr class=\"a-divider-normal sims-vtp-heading\">\n        \u003Cdiv data-similarity-type=\"desktop-dp-sims_vtp\" class=\"a-section similarities-widget\">\n            \u003Cdiv id=\"view_to_purchase-sims-feature\" class=\"a-section bucket\">\n                \n        \u003Ch2 class=\"a-size-large a-spacing-base\">What other items do customers buy after viewing this item?\u003C/h2>\n        \u003Cdiv data-p13n-feature-metadata=\"{&quot;baseAsin&quot;:&quot;B06XD3LXXK&quot;,&quot;pd_rd_wg&quot;:&quot;30NaA&quot;,&quot;pd_rd_r&quot;:&quot;8177ea1a-d805-4c97-b06f-60ae0bbe12e0&quot;,&quot;pf_rd_r&quot;:&quot;WY2K06V7WEMKTC0K2H7W&quot;,&quot;pf_rd_p&quot;:&quot;ef4dc990-a9ca-4945-ae0b-f8d549198ed6&quot;,&quot;pd_rd_w&quot;:&quot;mXU1z&quot;}\" data-p13n-feature-name=\"pd_cp_147\" data-p13n-global=\"{&quot;auiDeviceType&quot;:&quot;desktop&quot;,&quot;marketplaceId&quot;:&quot;ATVPDKIKX0DER&quot;,&quot;requestId&quot;:&quot;WY2K06V7WEMKTC0K2H7W&quot;,&quot;marketplace&quot;:&quot;US&quot;,&quot;customerId&quot;:0,&quot;session&quot;:&quot;137-0530487-6192152&quot;}\" class=\"a-section a-spacing-micro vtp-container\">\n            \n        \u003Cdiv class=\"a-section p13n-sc-list-cells-container\">\n            \u003Cul class=\"a-unordered-list a-nostyle a-vertical p13n-sc-list-cells\">\n                \u003Cli data-fling-container=\"true\" class=\"a-spacing-medium p13n-sc-list-item\">\u003Cspan class=\"a-list-item\">\n        \u003Cdiv data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;pd_cp_147_1&quot;,&quot;asin&quot;:&quot;B07RF1XD36&quot;}\" class=\"a-fixed-left-grid p13n-asin\">\u003Cdiv class=\"a-fixed-left-grid-inner\" style=\"padding-left:82px\">\n            \u003Cdiv class=\"a-fixed-left-grid-col a-col-left\" style=\"width:82px;margin-left:-82px;float:left;\">\u003Ca class=\"a-link-normal\" href=\"/Acer-Display-Graphics-Keyboard-A515-43-R19L/dp/B07RF1XD36/ref=pd_cp_147_1/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B07RF1XD36&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=mXU1z&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ef4dc990-a9ca-4945-ae0b-f8d549198ed6&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n                    \u003Cimg alt=\"Acer Aspire 5 Slim Laptop, 15.6&quot; Full HD IPS Display, AMD Ryzen 3 3200U, Vega 3 Graphics, 4GB DDR4, 128GB SSD, Backlit Keyboard, Windows 10 in S Mode, A515-43-R19L\" src=\"https://images-na.ssl-images-amazon.com/images/I/71vvXGmdKWL._AC_UL140_SR140,90_.jpg\" class=\"a-dynamic-image p13n-sc-dynamic-image\" height=\"45\" width=\"70\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/71vvXGmdKWL._AC_UL210_SR210,135_.jpg&quot;:[135,210],&quot;https://images-na.ssl-images-amazon.com/images/I/71vvXGmdKWL._AC_UL70_SR70,45_.jpg&quot;:[45,70],&quot;https://images-na.ssl-images-amazon.com/images/I/71vvXGmdKWL._AC_UL140_SR140,90_.jpg&quot;:[90,140]}\">\n            \u003C/a>\u003C/div>\n            \u003Cdiv class=\"a-fixed-left-grid-col a-col-right\" style=\"padding-left:0%;float:left;\">\n                \n        \u003Cdiv class=\"a-row\">\n            \u003Ca class=\"a-link-normal\" href=\"/Acer-Display-Graphics-Keyboard-A515-43-R19L/dp/B07RF1XD36/ref=pd_cp_147_1/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B07RF1XD36&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=mXU1z&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ef4dc990-a9ca-4945-ae0b-f8d549198ed6&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n        \u003Cdiv class=\"p13n-sc-truncate p13n-sc-line-clamp-1\" aria-hidden=\"true\" data-rows=\"1\">\n            Acer Aspire 5 Slim Laptop, 15.6\" Full HD IPS Display, AMD Ryzen 3 3200U, Vega 3 Graphics, 4GB DDR4, 128GB SSD, Backlit Keyboard, Windows 10 in S Mode, A515-43-R19L\n        \u003C/div>\n    \u003C/a>\n            \n            \n        \u003C/div>\n        \n        \n        \u003Cdiv class=\"a-icon-row a-spacing-none\">\n            \u003Ca class=\"a-link-normal\" title=\"4.3 out of 5 stars\" href=\"/product-reviews/B07RF1XD36/ref=pd_cp_147_cr_1/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B07RF1XD36&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=mXU1z&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ef4dc990-a9ca-4945-ae0b-f8d549198ed6&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n                \u003Ci class=\"a-icon a-icon-star a-star-4-5\">\u003Cspan class=\"a-icon-alt\">4.3 out of 5 stars\u003C/span>\u003C/i>\n            \u003C/a>\n            \u003Ca class=\"a-size-small a-link-normal\" href=\"/product-reviews/B07RF1XD36/ref=pd_cp_147_cr_1/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B07RF1XD36&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=mXU1z&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ef4dc990-a9ca-4945-ae0b-f8d549198ed6&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">518\u003C/a>\n        \u003C/div>\n    \n        \u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal a-text-normal\" href=\"/Acer-Display-Graphics-Keyboard-A515-43-R19L/dp/B07RF1XD36/ref=pd_cp_147_1/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B07RF1XD36&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=mXU1z&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ef4dc990-a9ca-4945-ae0b-f8d549198ed6&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cspan class=\"a-size-base a-color-price\">\u003Cspan class=\"p13n-sc-price\">$314.99\u003C/span>\u003C/span>\u003C/a>   \u003C/div>\n    \n            \u003C/div>\n        \u003C/div>\u003C/div>\n        \u003C/span>\u003C/li>\u003Cli data-fling-container=\"true\" class=\"a-spacing-medium p13n-sc-list-item\">\u003Cspan class=\"a-list-item\">\n        \u003Cdiv data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;pd_cp_147_2&quot;,&quot;asin&quot;:&quot;B07K5H16HX&quot;}\" class=\"a-fixed-left-grid p13n-asin\">\u003Cdiv class=\"a-fixed-left-grid-inner\" style=\"padding-left:82px\">\n            \u003Cdiv class=\"a-fixed-left-grid-col a-col-left\" style=\"width:82px;margin-left:-82px;float:left;\">\u003Ca class=\"a-link-normal\" href=\"/Acer-Chromebook-Dual-Core-12-Hours-Certified/dp/B07K5H16HX/ref=pd_cp_147_2/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B07K5H16HX&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=mXU1z&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ef4dc990-a9ca-4945-ae0b-f8d549198ed6&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n                    \u003Cimg alt=\"2018 Newest Acer CB3-532 15.6&quot; HD Chromebook with 3x Faster WiFi, Intel Dual-Core Celeron N3060 upto 2.48GHz, 2GB RAM, 16GB SSD,HDMI,USB 3.0, Webcam, 12-Hrs Battery, Chrome OS (Renewed)\" src=\"https://images-na.ssl-images-amazon.com/images/I/71BJqmWtKSL._AC_UL140_SR140,140_.jpg\" class=\"a-dynamic-image p13n-sc-dynamic-image\" height=\"70\" width=\"70\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/71BJqmWtKSL._AC_UL140_SR140,140_.jpg&quot;:[140,140],&quot;https://images-na.ssl-images-amazon.com/images/I/71BJqmWtKSL._AC_UL70_SR70,70_.jpg&quot;:[70,70],&quot;https://images-na.ssl-images-amazon.com/images/I/71BJqmWtKSL._AC_UL210_SR210,210_.jpg&quot;:[210,210]}\">\n            \u003C/a>\u003C/div>\n            \u003Cdiv class=\"a-fixed-left-grid-col a-col-right\" style=\"padding-left:0%;float:left;\">\n                \n        \u003Cdiv class=\"a-row\">\n            \u003Ca class=\"a-link-normal\" href=\"/Acer-Chromebook-Dual-Core-12-Hours-Certified/dp/B07K5H16HX/ref=pd_cp_147_2/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B07K5H16HX&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=mXU1z&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ef4dc990-a9ca-4945-ae0b-f8d549198ed6&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n        \u003Cdiv class=\"p13n-sc-truncate p13n-sc-line-clamp-1\" aria-hidden=\"true\" data-rows=\"1\">\n            2018 Newest Acer CB3-532 15.6\" HD Chromebook with 3x Faster WiFi, Intel Dual-Core Celeron N3060 upto 2.48GHz, 2GB RAM, 16GB SSD,HDMI,USB 3.0, Webcam, 12-Hrs Battery, Chrome OS (Renewed)\n        \u003C/div>\n    \u003C/a>\n            \n            \n        \u003C/div>\n        \n        \n        \u003Cdiv class=\"a-icon-row a-spacing-none\">\n            \u003Ca class=\"a-link-normal\" title=\"4.1 out of 5 stars\" href=\"/product-reviews/B07K5H16HX/ref=pd_cp_147_cr_2/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B07K5H16HX&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=mXU1z&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ef4dc990-a9ca-4945-ae0b-f8d549198ed6&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n                \u003Ci class=\"a-icon a-icon-star a-star-4\">\u003Cspan class=\"a-icon-alt\">4.1 out of 5 stars\u003C/span>\u003C/i>\n            \u003C/a>\n            \u003Ca class=\"a-size-small a-link-normal\" href=\"/product-reviews/B07K5H16HX/ref=pd_cp_147_cr_2/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B07K5H16HX&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=mXU1z&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ef4dc990-a9ca-4945-ae0b-f8d549198ed6&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">115\u003C/a>\n        \u003C/div>\n    \n        \u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal a-text-normal\" href=\"/Acer-Chromebook-Dual-Core-12-Hours-Certified/dp/B07K5H16HX/ref=pd_cp_147_2/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B07K5H16HX&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=mXU1z&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ef4dc990-a9ca-4945-ae0b-f8d549198ed6&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cspan class=\"a-size-base a-color-price\">\u003Cspan class=\"p13n-sc-price\">$139.99\u003C/span>\u003C/span>\u003C/a>   \u003C/div>\n    \n            \u003C/div>\n        \u003C/div>\u003C/div>\n        \u003C/span>\u003C/li>\u003Cli data-fling-container=\"true\" class=\"a-spacing-medium p13n-sc-list-item\">\u003Cspan class=\"a-list-item\">\n        \u003Cdiv data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;pd_cp_147_3&quot;,&quot;asin&quot;:&quot;B077YS9TYW&quot;}\" class=\"a-fixed-left-grid p13n-asin\">\u003Cdiv class=\"a-fixed-left-grid-inner\" style=\"padding-left:82px\">\n            \u003Cdiv class=\"a-fixed-left-grid-col a-col-left\" style=\"width:82px;margin-left:-82px;float:left;\">\u003Ca class=\"a-link-normal\" href=\"/Acer-CB3-532-Chromebook-Dual-Core-12-Hours/dp/B077YS9TYW/ref=pd_cp_147_3/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B077YS9TYW&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=mXU1z&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ef4dc990-a9ca-4945-ae0b-f8d549198ed6&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n                    \u003Cimg alt=\"2018 Newest Acer CB3-532 15.6&quot; HD Chromebook with 3x Faster WiFi, Intel Dual-Core Celeron N3060 up to 2.48GHz, 2GB RAM, 16GB SSD, HDMI, USB 3.0, Webcam, 12-Hours Battery, Chrome OS\" src=\"https://images-na.ssl-images-amazon.com/images/I/813KEBB4D0L._AC_UL140_SR140,140_.jpg\" class=\"a-dynamic-image p13n-sc-dynamic-image\" height=\"70\" width=\"70\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/813KEBB4D0L._AC_UL210_SR210,210_.jpg&quot;:[210,210],&quot;https://images-na.ssl-images-amazon.com/images/I/813KEBB4D0L._AC_UL70_SR70,70_.jpg&quot;:[70,70],&quot;https://images-na.ssl-images-amazon.com/images/I/813KEBB4D0L._AC_UL140_SR140,140_.jpg&quot;:[140,140]}\">\n            \u003C/a>\u003C/div>\n            \u003Cdiv class=\"a-fixed-left-grid-col a-col-right\" style=\"padding-left:0%;float:left;\">\n                \n        \u003Cdiv class=\"a-row\">\n            \u003Ca class=\"a-link-normal\" href=\"/Acer-CB3-532-Chromebook-Dual-Core-12-Hours/dp/B077YS9TYW/ref=pd_cp_147_3/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B077YS9TYW&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=mXU1z&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ef4dc990-a9ca-4945-ae0b-f8d549198ed6&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n        \u003Cdiv class=\"p13n-sc-truncate p13n-sc-line-clamp-1\" aria-hidden=\"true\" data-rows=\"1\">\n            2018 Newest Acer CB3-532 15.6\" HD Chromebook with 3x Faster WiFi, Intel Dual-Core Celeron N3060 up to 2.48GHz, 2GB RAM, 16GB SSD, HDMI, USB 3.0, Webcam, 12-Hours Battery, Chrome OS\n        \u003C/div>\n    \u003C/a>\n            \n            \n        \u003C/div>\n        \n        \n        \u003Cdiv class=\"a-icon-row a-spacing-none\">\n            \u003Ca class=\"a-link-normal\" title=\"4.1 out of 5 stars\" href=\"/product-reviews/B077YS9TYW/ref=pd_cp_147_cr_3/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B077YS9TYW&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=mXU1z&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ef4dc990-a9ca-4945-ae0b-f8d549198ed6&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n                \u003Ci class=\"a-icon a-icon-star a-star-4\">\u003Cspan class=\"a-icon-alt\">4.1 out of 5 stars\u003C/span>\u003C/i>\n            \u003C/a>\n            \u003Ca class=\"a-size-small a-link-normal\" href=\"/product-reviews/B077YS9TYW/ref=pd_cp_147_cr_3/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B077YS9TYW&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=mXU1z&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ef4dc990-a9ca-4945-ae0b-f8d549198ed6&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">185\u003C/a>\n        \u003C/div>\n    \n        \u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal a-text-normal\" href=\"/Acer-CB3-532-Chromebook-Dual-Core-12-Hours/dp/B077YS9TYW/ref=pd_cp_147_3/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B077YS9TYW&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=mXU1z&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ef4dc990-a9ca-4945-ae0b-f8d549198ed6&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cspan class=\"a-size-base a-color-price\">\u003Cspan class=\"p13n-sc-price\">$172.15\u003C/span>\u003C/span>\u003C/a>   \u003C/div>\n    \n            \u003C/div>\n        \u003C/div>\u003C/div>\n        \u003C/span>\u003C/li>\n            \u003C/ul>\n        \u003C/div>\n    \n        \u003C/div>\n    \n            \u003C/div>\n            \n            \n        \u003C/div>\n        \u003Cdiv class=\"a-section vtp-footer\">\u003C/div>\n    \n\n\n\n\n\n\n\n\u003C/div>\n\n\n\n\n\n\u003C!--rbd-->\n\n\u003Cdiv class=\"celwidget pd_rd_w-ySXbS pf_rd_p-ad07871c-e646-4161-82c7-5ed0d4c85b07 pf_rd_r-WY2K06V7WEMKTC0K2H7W pd_rd_r-8177ea1a-d805-4c97-b06f-60ae0bbe12e0 pd_rd_wg-30NaA\" cel_widget_id=\"desktop-dp-sims_hardlines-day0\">\n\n\n\n\n\n\n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n        \u003Cdiv id=\"p13n-m-desktop-dp-sims_hardlines-day0-sims-feature-3\" class=\"celwidget\" cel_widget_id=\"desktop-dp-sims_hardlines-day0-sims-feature-3\">\n    \n            \u003Cdiv data-similarity-type=\"desktop-dp-sims_hardlines-day0\" class=\"a-section similarities-widget sims-carousel-holder\">\n                \u003Chr class=\"a-divider-normal sims-carousel-heading bucketDivider\">\n                \u003Cdiv id=\"desktop-dp-sims_hardlines-day0-sims-feature\" class=\"a-section a-spacing-large bucket\">\n                    \n        \u003Cdiv data-a-carousel-options=\"{&quot;ajax&quot;:{&quot;params&quot;:{&quot;asinMetadataKeys&quot;:&quot;adId&quot;,&quot;widgetTemplateClass&quot;:&quot;PI::Similarities::ViewTemplates::Carousel::Desktop&quot;,&quot;linkGetParameters&quot;:&quot;{\\&quot;pd_rd_wg\\&quot;:\\&quot;30NaA\\&quot;,\\&quot;pd_rd_r\\&quot;:\\&quot;8177ea1a-d805-4c97-b06f-60ae0bbe12e0\\&quot;,\\&quot;pf_rd_r\\&quot;:\\&quot;WY2K06V7WEMKTC0K2H7W\\&quot;,\\&quot;pf_rd_p\\&quot;:\\&quot;ad07871c-e646-4161-82c7-5ed0d4c85b07\\&quot;,\\&quot;pd_rd_w\\&quot;:\\&quot;ySXbS\\&quot;}&quot;,&quot;productDetailsTemplateClass&quot;:&quot;PI::P13N::ViewTemplates::ProductDetails::Desktop::Base&quot;,&quot;forceFreshWin&quot;:0,&quot;featureId&quot;:&quot;SimilaritiesCarousel&quot;,&quot;reftagPrefix&quot;:&quot;pd_day0_hl_147&quot;,&quot;imageHeight&quot;:160,&quot;faceoutTemplateClass&quot;:&quot;PI::P13N::ViewTemplates::Product::Desktop::CarouselFaceout&quot;,&quot;imageWidth&quot;:160,&quot;auiDeviceType&quot;:&quot;desktop&quot;,&quot;schemaVersion&quot;:2,&quot;relatedRequestID&quot;:&quot;WY2K06V7WEMKTC0K2H7W&quot;,&quot;productDataFlavor&quot;:&quot;Faceout&quot;,&quot;maxLineCount&quot;:6,&quot;faceoutArgs&quot;:&quot;{\\&quot;productDetailsTemplateClass\\&quot;:\\&quot;PI::P13N::ViewTemplates::ProductDetails::Desktop::Base\\&quot;}&quot;},&quot;id_list&quot;:[&quot;B07HGFKYG5:&quot;,&quot;B01E7Q08IQ:&quot;,&quot;B071YSYD5P:&quot;,&quot;B072DYDNZV:&quot;,&quot;B076KSTRS2:&quot;,&quot;B07FHZSGMY:&quot;],&quot;url&quot;:&quot;/gp/p13n-shared/faceout-partial&quot;,&quot;id_param_name&quot;:&quot;asins&quot;},&quot;baseAsin&quot;:&quot;B06XD3LXXK&quot;,&quot;name&quot;:&quot;desktop-dp-sims_hardlines-day0&quot;,&quot;set_size&quot;:6}\" data-p13n-feature-metadata=\"{&quot;baseAsin&quot;:&quot;B06XD3LXXK&quot;,&quot;pd_rd_wg&quot;:&quot;30NaA&quot;,&quot;pd_rd_r&quot;:&quot;8177ea1a-d805-4c97-b06f-60ae0bbe12e0&quot;,&quot;pf_rd_r&quot;:&quot;WY2K06V7WEMKTC0K2H7W&quot;,&quot;pf_rd_p&quot;:&quot;ad07871c-e646-4161-82c7-5ed0d4c85b07&quot;,&quot;pd_rd_w&quot;:&quot;ySXbS&quot;}\" data-p13n-feature-name=\"pd_day0_hl_147\" data-p13n-global=\"{&quot;auiDeviceType&quot;:&quot;desktop&quot;,&quot;marketplaceId&quot;:&quot;ATVPDKIKX0DER&quot;,&quot;requestId&quot;:&quot;WY2K06V7WEMKTC0K2H7W&quot;,&quot;marketplace&quot;:&quot;US&quot;,&quot;customerId&quot;:0,&quot;session&quot;:&quot;137-0530487-6192152&quot;}\" data-a-display-strategy=\"swap\" data-a-transition-strategy=\"swap\" data-a-class=\"desktop\" class=\"a-begin a-carousel-container a-carousel-display-swap a-carousel-transition-swap similarities-aui-carousel p13n-sc-carousel\">\u003Cinput autocomplete=\"on\" type=\"hidden\" class=\"a-carousel-firstvisibleitem\">\n            \u003Cdiv class=\"a-row a-carousel-header-row a-size-large\">\u003Cdiv class=\"a-column a-span8\">\u003Ch2 class=\"a-carousel-heading\">Customers also shopped for\u003C/h2>\u003C/div>\u003Cdiv class=\"a-column a-span4 a-span-last a-text-right\">\u003Cspan class=\"a-carousel-pagination a-size-base\">\u003Cspan class=\"a-carousel-page-count\">Page \u003Cspan class=\"a-carousel-page-current\">1\u003C/span> of \u003Cspan class=\"a-carousel-page-max\">1\u003C/span>  \u003C/span>\u003Cspan class=\"a-carousel-restart-container\">\u003Cspan class=\"a-text-separator\">\u003C/span>\u003Ca class=\"a-carousel-restart\" href=\"#\">Start over\u003C/a>\u003C/span>\u003Cspan class=\"a-carousel-accessibility-page-info a-offscreen\" aria-live=\"polite\">Page 1 of 1  \u003C/span>\u003C/span>\u003C/div>\u003C/div>\n            \u003Cspan class=\"aok-offscreen p13n-sc-offscreen\">This shopping feature will continue to load items. In order to navigate out of this carousel please use your heading shortcut key to navigate to the next or previous heading.\u003C/span>\n            \n            \u003Cdiv class=\"a-row a-carousel-controls a-carousel-row a-carousel-has-buttons\">\u003Cdiv class=\"a-carousel-row-inner\">\u003Cdiv class=\"a-carousel-col a-carousel-left\">\u003Ca class=\"a-button a-button-image a-carousel-button a-carousel-goto-prevpage\" tabindex=\"0\" href=\"#\" id=\"a-autoid-12\">\u003Cspan class=\"a-button-inner\">\u003Ci class=\"a-icon a-icon-previous\">\u003Cspan class=\"a-icon-alt\">Back\u003C/span>\u003C/i>\u003C/span>\u003C/a>\u003C/div>\u003Cdiv class=\"a-carousel-col a-carousel-center\">\u003Cdiv class=\"a-carousel-viewport\" style=\"height: 281px;\">\u003Col class=\"a-carousel\" role=\"list\">\n                \u003Cli class=\"a-carousel-card aok-float-left\" role=\"listitem\">\n        \u003Cdiv data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;pd_day0_hl_147_1&quot;,&quot;asin&quot;:&quot;B07HGFKYG5&quot;}\" class=\"a-section a-spacing-none p13n-asin\">\n            \u003Ca class=\"a-link-normal\" href=\"/Acer-Chromebook-Celeron-1-6Hz-Certified-Refurbished/dp/B07HGFKYG5/ref=pd_day0_hl_147_1/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B07HGFKYG5&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cdiv class=\"a-section a-spacing-mini\">\u003Cimg alt=\"Acer Chromebook 14 Intel Celeron-1.6Hz 4GB 32GB Flash Chrome OS (Renewed)\" src=\"https://images-na.ssl-images-amazon.com/images/I/71cgpX-vFpL._AC_UL320_SR320,320_.jpg\" class=\"a-dynamic-image p13n-sc-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/71cgpX-vFpL._AC_UL480_SR480,480_.jpg&quot;:[480,480],&quot;https://images-na.ssl-images-amazon.com/images/I/71cgpX-vFpL._AC_UL320_SR320,320_.jpg&quot;:[320,320],&quot;https://images-na.ssl-images-amazon.com/images/I/71cgpX-vFpL._AC_UL160_SR160,160_.jpg&quot;:[160,160]}\">\u003C/div>\n        \u003Cdiv class=\"p13n-sc-truncated\" aria-hidden=\"true\" data-rows=\"4\">Acer Chromebook 14 Intel Celeron-1.6Hz 4GB 32GB Flash Chrome OS (Renewed)\u003C/div>\n    \u003C/a>\n            \n        \u003Cdiv class=\"a-icon-row a-spacing-none\">\n            \u003Ca class=\"a-link-normal\" title=\"4.7 out of 5 stars\" href=\"/product-reviews/B07HGFKYG5/ref=pd_day0_hl_147_cr_1/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B07HGFKYG5&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n                \u003Ci class=\"a-icon a-icon-star a-star-4-5\">\u003Cspan class=\"a-icon-alt\">4.7 out of 5 stars\u003C/span>\u003C/i>\n            \u003C/a>\n            \u003Ca class=\"a-size-small a-link-normal\" href=\"/product-reviews/B07HGFKYG5/ref=pd_day0_hl_147_cr_1/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B07HGFKYG5&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">4\u003C/a>\n        \u003C/div>\n    \u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal a-text-normal\" href=\"/Acer-Chromebook-Celeron-1-6Hz-Certified-Refurbished/dp/B07HGFKYG5/ref=pd_day0_hl_147_1/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B07HGFKYG5&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cspan class=\"a-size-base a-color-price\">\u003Cspan class=\"p13n-sc-price\">$169.99\u003C/span>\u003C/span>\u003C/a>   \u003C/div>\n        \u003C/div>\n    \u003C/li>\u003Cli class=\"a-carousel-card aok-float-left\" role=\"listitem\">\n        \u003Cdiv data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;pd_day0_hl_147_2&quot;,&quot;asin&quot;:&quot;B01E7Q08IQ&quot;}\" class=\"a-section a-spacing-none p13n-asin\">\n            \u003Ca class=\"a-link-normal\" href=\"/Acer-Chromebook-Dual-Core-Certified-Refurbished/dp/B01E7Q08IQ/ref=pd_day0_hl_147_2/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B01E7Q08IQ&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cdiv class=\"a-section a-spacing-mini\">\u003Cimg alt=\"Acer 15.6in Chromebook Intel Celeron Dual-Core 1.5GHz, 4GB RAM, 16GB , Chrome OS (Renewed)\" src=\"https://images-na.ssl-images-amazon.com/images/I/51Y2q9hBVnL._AC_UL320_SR320,320_.jpg\" class=\"a-dynamic-image p13n-sc-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/51Y2q9hBVnL._AC_UL480_SR480,480_.jpg&quot;:[480,480],&quot;https://images-na.ssl-images-amazon.com/images/I/51Y2q9hBVnL._AC_UL320_SR320,320_.jpg&quot;:[320,320],&quot;https://images-na.ssl-images-amazon.com/images/I/51Y2q9hBVnL._AC_UL160_SR160,160_.jpg&quot;:[160,160]}\">\u003C/div>\n        \u003Cdiv class=\"p13n-sc-truncated\" aria-hidden=\"true\" data-rows=\"4\">Acer 15.6in Chromebook Intel Celeron Dual-Core 1.5GHz, 4GB RAM, 16GB , Chrome OS (Renewed)\u003C/div>\n    \u003C/a>\n            \n        \u003Cdiv class=\"a-icon-row a-spacing-none\">\n            \u003Ca class=\"a-link-normal\" title=\"4.3 out of 5 stars\" href=\"/product-reviews/B01E7Q08IQ/ref=pd_day0_hl_147_cr_2/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B01E7Q08IQ&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n                \u003Ci class=\"a-icon a-icon-star a-star-4-5\">\u003Cspan class=\"a-icon-alt\">4.3 out of 5 stars\u003C/span>\u003C/i>\n            \u003C/a>\n            \u003Ca class=\"a-size-small a-link-normal\" href=\"/product-reviews/B01E7Q08IQ/ref=pd_day0_hl_147_cr_2/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B01E7Q08IQ&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">47\u003C/a>\n        \u003C/div>\n    \u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal a-text-normal\" href=\"/Acer-Chromebook-Dual-Core-Certified-Refurbished/dp/B01E7Q08IQ/ref=pd_day0_hl_147_2/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B01E7Q08IQ&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cspan class=\"a-size-base a-color-price\">\u003Cspan class=\"p13n-sc-price\">$299.00\u003C/span>\u003C/span>\u003C/a>   \u003C/div>\n        \u003C/div>\n    \u003C/li>\u003Cli class=\"a-carousel-card aok-float-left\" role=\"listitem\">\n        \u003Cdiv data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;pd_day0_hl_147_3&quot;,&quot;asin&quot;:&quot;B071YSYD5P&quot;}\" class=\"a-section a-spacing-none p13n-asin\">\n            \u003Ca class=\"a-link-normal\" href=\"/Acer-Chromebook-Dual-Core-Certified-Refurbished/dp/B071YSYD5P/ref=pd_day0_hl_147_3/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B071YSYD5P&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cdiv class=\"a-section a-spacing-mini\">\u003Cimg alt=\"Acer 11.6' Chromebook Intel Celeron Dual-Core 2.16 GHz,2 GB RAM 16 GB Chrome OS (Renewed)\" src=\"https://images-na.ssl-images-amazon.com/images/I/81R4Bm5nV5L._AC_UL320_SR320,320_.jpg\" class=\"a-dynamic-image p13n-sc-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/81R4Bm5nV5L._AC_UL320_SR320,320_.jpg&quot;:[320,320],&quot;https://images-na.ssl-images-amazon.com/images/I/81R4Bm5nV5L._AC_UL480_SR480,480_.jpg&quot;:[480,480],&quot;https://images-na.ssl-images-amazon.com/images/I/81R4Bm5nV5L._AC_UL160_SR160,160_.jpg&quot;:[160,160]}\">\u003C/div>\n        \u003Cdiv class=\"p13n-sc-truncated\" aria-hidden=\"true\" data-rows=\"4\">Acer 11.6' Chromebook Intel Celeron Dual-Core 2.16 GHz,2 GB RAM 16 GB Chrome OS (Renewed)\u003C/div>\n    \u003C/a>\n            \n        \u003Cdiv class=\"a-icon-row a-spacing-none\">\n            \u003Ca class=\"a-link-normal\" title=\"4.0 out of 5 stars\" href=\"/product-reviews/B071YSYD5P/ref=pd_day0_hl_147_cr_3/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B071YSYD5P&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n                \u003Ci class=\"a-icon a-icon-star a-star-4\">\u003Cspan class=\"a-icon-alt\">4.0 out of 5 stars\u003C/span>\u003C/i>\n            \u003C/a>\n            \u003Ca class=\"a-size-small a-link-normal\" href=\"/product-reviews/B071YSYD5P/ref=pd_day0_hl_147_cr_3/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B071YSYD5P&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">1\u003C/a>\n        \u003C/div>\n    \u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal a-text-normal\" href=\"/Acer-Chromebook-Dual-Core-Certified-Refurbished/dp/B071YSYD5P/ref=pd_day0_hl_147_3/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B071YSYD5P&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cspan class=\"a-size-base a-color-price\">\u003Cspan class=\"p13n-sc-price\">$145.00\u003C/span>\u003C/span>\u003C/a>   \u003C/div>\n        \u003C/div>\n    \u003C/li>\u003Cli class=\"a-carousel-card aok-float-left\" role=\"listitem\">\n        \u003Cdiv data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;pd_day0_hl_147_4&quot;,&quot;asin&quot;:&quot;B072DYDNZV&quot;}\" class=\"a-section a-spacing-none p13n-asin\">\n            \u003Ca class=\"a-link-normal\" href=\"/Acer-Celeron-C720-29552G01aii-Certified-Refurbished/dp/B072DYDNZV/ref=pd_day0_hl_147_4/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B072DYDNZV&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cdiv class=\"a-section a-spacing-mini\">\u003Cimg alt=\"Acer 11.6&quot; Intel Celeron 1.40 GHz 2 GB Ram 16 GB SSD Chrome OS|C720-29552G01aii (Renewed)\" src=\"https://images-na.ssl-images-amazon.com/images/I/515juM8bknL._AC_UL320_SR320,320_.jpg\" class=\"a-dynamic-image p13n-sc-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/515juM8bknL._AC_UL480_SR480,480_.jpg&quot;:[480,480],&quot;https://images-na.ssl-images-amazon.com/images/I/515juM8bknL._AC_UL160_SR160,160_.jpg&quot;:[160,160],&quot;https://images-na.ssl-images-amazon.com/images/I/515juM8bknL._AC_UL320_SR320,320_.jpg&quot;:[320,320]}\">\u003C/div>\n        \u003Cdiv class=\"p13n-sc-truncated\" aria-hidden=\"true\" data-rows=\"4\">Acer 11.6\" Intel Celeron 1.40 GHz 2 GB Ram 16 GB SSD Chrome OS|C720-29552G01aii (Renewed)\u003C/div>\n    \u003C/a>\n            \n        \u003Cdiv class=\"a-icon-row a-spacing-none\">\n            \u003Ca class=\"a-link-normal\" title=\"2.0 out of 5 stars\" href=\"/product-reviews/B072DYDNZV/ref=pd_day0_hl_147_cr_4/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B072DYDNZV&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n                \u003Ci class=\"a-icon a-icon-star a-star-2\">\u003Cspan class=\"a-icon-alt\">2.0 out of 5 stars\u003C/span>\u003C/i>\n            \u003C/a>\n            \u003Ca class=\"a-size-small a-link-normal\" href=\"/product-reviews/B072DYDNZV/ref=pd_day0_hl_147_cr_4/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B072DYDNZV&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">1\u003C/a>\n        \u003C/div>\n    \u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal a-text-normal\" href=\"/Acer-Celeron-C720-29552G01aii-Certified-Refurbished/dp/B072DYDNZV/ref=pd_day0_hl_147_4/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B072DYDNZV&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cspan class=\"a-size-base a-color-price\">\u003Cspan class=\"p13n-sc-price\">$113.76\u003C/span>\u003C/span>\u003C/a>   \u003C/div>\n        \u003C/div>\n    \u003C/li>\u003Cli class=\"a-carousel-card aok-float-left\" role=\"listitem\">\n        \u003Cdiv data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;pd_day0_hl_147_5&quot;,&quot;asin&quot;:&quot;B076KSTRS2&quot;}\" class=\"a-section a-spacing-none p13n-asin\">\n            \u003Ca class=\"a-link-normal\" href=\"/Acer-Notebook-Celeron-Certified-Refurbished/dp/B076KSTRS2/ref=pd_day0_hl_147_5/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B076KSTRS2&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cdiv class=\"a-section a-spacing-mini\">\u003Cimg alt=\"Acer Notebook 11.6&quot; Intel Celeron 1.10GHz 4GB Ram 32GB Flash Chrome OS (Renewed)\" src=\"https://images-na.ssl-images-amazon.com/images/I/71PQuC48SJL._AC_UL320_SR320,320_.jpg\" class=\"a-dynamic-image p13n-sc-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/71PQuC48SJL._AC_UL160_SR160,160_.jpg&quot;:[160,160],&quot;https://images-na.ssl-images-amazon.com/images/I/71PQuC48SJL._AC_UL480_SR480,480_.jpg&quot;:[480,480],&quot;https://images-na.ssl-images-amazon.com/images/I/71PQuC48SJL._AC_UL320_SR320,320_.jpg&quot;:[320,320]}\">\u003C/div>\n        \u003Cdiv class=\"p13n-sc-truncated\" aria-hidden=\"true\" data-rows=\"5\">Acer Notebook 11.6\" Intel Celeron 1.10GHz 4GB Ram 32GB Flash Chrome OS (Renewed)\u003C/div>\n    \u003C/a>\n            \u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal a-text-normal\" href=\"/Acer-Notebook-Celeron-Certified-Refurbished/dp/B076KSTRS2/ref=pd_day0_hl_147_5/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B076KSTRS2&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cspan class=\"a-size-base a-color-price\">\u003Cspan class=\"p13n-sc-price\">$219.99\u003C/span>\u003C/span>\u003C/a>   \u003C/div>\n        \u003C/div>\n    \u003C/li>\u003Cli class=\"a-carousel-card aok-float-left\" role=\"listitem\">\n        \u003Cdiv data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;pd_day0_hl_147_6&quot;,&quot;asin&quot;:&quot;B07FHZSGMY&quot;}\" class=\"a-section a-spacing-none p13n-asin\">\n            \u003Ca class=\"a-link-normal\" href=\"/Acer-Chromebook-Celeron-1-1GHz-Renewed/dp/B07FHZSGMY/ref=pd_day0_hl_147_6/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B07FHZSGMY&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cdiv class=\"a-section a-spacing-mini\">\u003Cimg alt=\"Acer Chromebook 15 CB315 Intel Celeron N3450 1.1GHz 4GB Ram 32GB Flash Chrome OS (Renewed)\" src=\"https://images-na.ssl-images-amazon.com/images/I/71oSzoL3-nL._AC_UL320_SR320,320_.jpg\" class=\"a-dynamic-image p13n-sc-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/71oSzoL3-nL._AC_UL320_SR320,320_.jpg&quot;:[320,320],&quot;https://images-na.ssl-images-amazon.com/images/I/71oSzoL3-nL._AC_UL160_SR160,160_.jpg&quot;:[160,160],&quot;https://images-na.ssl-images-amazon.com/images/I/71oSzoL3-nL._AC_UL480_SR480,480_.jpg&quot;:[480,480]}\">\u003C/div>\n        \u003Cdiv class=\"p13n-sc-truncated\" aria-hidden=\"true\" data-rows=\"5\">Acer Chromebook 15 CB315 Intel Celeron N3450 1.1GHz 4GB Ram 32GB Flash Chrome OS (Renewed)\u003C/div>\n    \u003C/a>\n            \u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal a-text-normal\" href=\"/Acer-Chromebook-Celeron-1-1GHz-Renewed/dp/B07FHZSGMY/ref=pd_day0_hl_147_6/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B07FHZSGMY&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ySXbS&amp;pd_rd_wg=30NaA&amp;pf_rd_p=ad07871c-e646-4161-82c7-5ed0d4c85b07&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cspan class=\"a-size-base a-color-price\">\u003Cspan class=\"p13n-sc-price\">$249.99\u003C/span>\u003C/span>\u003C/a>   \u003C/div>\n        \u003C/div>\n    \u003C/li>\n            \u003C/ol>\u003C/div>\u003C/div>\u003Cdiv class=\"a-carousel-col a-carousel-right\">\u003Ca class=\"a-button a-button-image a-carousel-button a-carousel-goto-nextpage\" tabindex=\"0\" href=\"#\" id=\"a-autoid-13\">\u003Cspan class=\"a-button-inner\">\u003Ci class=\"a-icon a-icon-next\">\u003Cspan class=\"a-icon-alt\">Next\u003C/span>\u003C/i>\u003C/span>\u003C/a>\u003C/div>\u003C/div>\u003C/div>\n            \n        \u003Cspan class=\"a-end aok-hidden\">\u003C/span>\u003C/div>\n    \n                \u003C/div>\n                \n                \n                \n            \u003C/div>\n        \n        \u003C/div>\n    \n    \n\n\n\n\n\n\n\n\u003C/div>\n\n\n\n    \n\n\n  \n\n\n  \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"dp-out-of-stock-3psl\">\n\n\n\n\n\n\n\n\u003C/div>\n\n\n\n \n\n\n\n\n\n\u003Cdiv id=\"cpsia-product-safety-warning_feature_div\">\n\u003C/div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cscript type=\"text/javascript\">(function(f) {var _np=(window.P._namespace(\"AskAuiAssets\"));if(_np.guardFatal){_np.guardFatal(f)(_np);}else{f(_np);}}(function(P) {\n  if (typeof P !== 'undefined') {\n    P.when('askDesktopDetailPageSearchWidget').execute(function(desktopDetailPageSearchWidget) {\n      desktopDetailPageSearchWidget.setup();\n    });\n  }\n}));\u003C/script>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cnoscript>\n  \u003Cstyle>\n    .askDetailPageSearchWidgetSection { display:none; }\n  \u003C/style>\n\u003C/noscript>\n\n\u003Cdiv cel_widget_id=\"ask-swdp-desktop\" class=\"celwidget\">\n  \u003Cdiv class=\"a-section askDetailPageSearchWidgetSection\">\n    \u003Chr class=\"a-spacing-extra-large a-divider-normal\">\n\n    \u003Cdiv class=\"a-section a-spacing-extra-large\">\n      \u003Ch2 class=\"a-spacing-micro\">\n        Have a question?\n      \u003C/h2>\n      \u003Cp class=\"a-spacing-small a-size-small a-color-secondary\">\n        Find answers in product info, Q&amp;As, reviews\n      \u003C/p>\n\n      \n\n      \u003Cdiv class=\"a-section askDPSearchViewContent\">\n        \n        \u003Cform method=\"post\" action=\"/ask/questions/asin/B06XD3LXXK/create\" class=\"askDPSearchForm\">\n          \u003Cinput type=\"hidden\" name=\"askQuestionSource\" value=\"DESKTOP_DP_SEARCH\">\n          \u003Cinput type=\"hidden\" name=\"askErrorUrl\" value=\"/ask/questions/asin/B06XD3LXXK/#Ask\">\n          \u003Cinput type=\"hidden\" name=\"askAsin\" value=\"B06XD3LXXK\" class=\"askAsin\">\n          \u003Cinput type=\"hidden\" name=\"askQuestionSourcePage\" value=\"ALL_QUESTIONS_PAGE\">\n          \u003Cinput type=\"hidden\" name=\"liveSearchSessionId\" class=\"askLiveSearchSessionId\">\n          \u003Cinput type=\"hidden\" name=\"liveSearchPageLoadId\" class=\"askLiveSearchPageLoadId\">\n          \u003Cinput type=\"hidden\" name=\"searchSource\" value=\"DETAIL_PAGE_SEARCH_SOURCE\">\n          \u003Cinput type=\"hidden\" name=\"typeaheadSearchSource\" value=\"TYPEAHEAD_SWDP_SOURCE\">\n          \u003Cinput type=\"hidden\" name=\"originalSearchSource\" value=\"DETAIL_PAGE_SEARCH_SOURCE\">\n          \u003Cinput type=\"hidden\" name=\"followupSearchSource\" value=\"FOLLOWUP_QUESTION_SEARCH_SOURCE\">\n          \u003Cinput type=\"hidden\" name=\"__token_\" value=\"aj2BDn1GCLmhj2FqIZMj2F0ecAuwGnCrgj3D\">\n          \n          \n          \u003Cspan class=\"a-declarative\" data-action=\"ask-dpsearch-desktop-input-click\" data-ask-dpsearch-desktop-input-click=\"{&quot;searchButton&quot;:false}\">\n            \u003Cspan class=\"a-declarative\" data-action=\"ask-dpsearch-desktop-input-focusin\" data-ask-dpsearch-desktop-input-focusin=\"{&quot;searchButton&quot;:false}\">\n              \u003Cspan class=\"a-declarative\" data-action=\"ask-dpsearch-desktop-input-change\" data-ask-dpsearch-desktop-input-change=\"{&quot;searchButton&quot;:false}\">\n                \u003Cspan class=\"a-declarative\" data-action=\"ask-dpsearch-desktop-input-keyup\" data-ask-dpsearch-desktop-input-keyup=\"{&quot;searchButton&quot;:false}\">\n                  \u003Cspan class=\"a-declarative\" data-action=\"ask-detail-page-search-prefetch-click\" data-ask-detail-page-search-prefetch-click=\"{&quot;asin&quot;:&quot;B06XD3LXXK&quot;,&quot;language&quot;:&quot;en_US&quot;}\">\n                    \u003Cspan class=\"a-declarative\" data-action=\"ask-prevent-enter-key\" data-ask-prevent-enter-key=\"{}\">\n                      \n                      \n                      \u003Cdiv data-autocomplete-search-results-brief=\"Search results for ##query##\" class=\"a-section a-spacing-base askAutocomplete\">\n                        \u003Cspan class=\"askSwdpSearchInput\">\n                          \n                            \n                            \n                              \n                                \n                                  \n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv class=\"a-input-text-addon-group-wrapper\">\u003Cdiv class=\"a-input-text-addon-group askSearchInputIngress\">\n  \u003Cdiv class=\"a-search a-span12\">\u003Ci class=\"a-icon a-icon-search\">\u003C/i>\u003Cinput type=\"search\" maxlength=\"150\" autocomplete=\"off\" placeholder=\"Type your question or keyword\" name=\"askQuestionText\" class=\"a-input-text a-span12 askDPSearchTextInput askDPSearchPostTextInput\">\u003C/div>\n  \u003Cspan class=\"a-declarative\" data-action=\"ask-log-click-csm\" data-ask-log-click-csm=\"{&quot;metricName&quot;:&quot;ask-search-ingress-clear-button-click&quot;}\">\n    \u003Ci class=\"a-icon a-icon-close askDisplayClearSearch askHidden\" role=\"img\">\u003C/i>\n  \u003C/span>\n\u003C/div>\u003C/div>\n                                \n                                \n                              \n                            \n                          \n                        \u003C/span>\n                      \u003C/div>\n                    \u003C/span>\n                  \u003C/span>\n                \u003C/span>\n              \u003C/span>\n            \u003C/span>\n          \u003C/span>\n          \n            \n             \n               \u003Cinput type=\"hidden\" name=\"askLanguage\" value=\"en_US\">\n             \n          \n        \u003Cdiv class=\"a-section a-text-center askDPSearchSearchIndicator aok-hidden\">\n          \u003Cspan class=\"a-spinner a-spinner-medium\">\u003C/span>\n        \u003C/div>\n        \u003Cdiv class=\"a-section askDPSearchResultsViewableContent aok-hidden\">\n          \n            \u003Cdiv class=\"a-section askDPSearchQuestionErrorContainer\">\n              \u003Cp class=\"a-spacing-base a-spacing-top-base a-color-error askError askBadQuestionError\">\n                Please make sure that you are posting in the form of a question.\n              \u003C/p>\n            \u003C/div>\n            \u003Cdiv class=\"a-section a-text-left askPostQuestionPromptContainer\">\n              \u003Cspan class=\"a-size-base a-color-tertiary a-text-bold\">\n                Don't see what you're looking for?\n              \u003C/span>\n              \u003Cspan class=\"a-declarative\" data-action=\"ask-dpsearch-desktop-post-question\" data-ask-dpsearch-desktop-post-question=\"{}\">\n                \u003Cspan class=\"a-button a-button-base askDetailPageSearchSubmitQuestionButton\" id=\"a-autoid-14\">\u003Cspan class=\"a-button-inner\">\u003Cbutton class=\"a-button-text\" type=\"button\" value=\"Ask the Community\" id=\"a-autoid-14-announce\">\n                  Ask the Community\n                \u003C/button>\u003C/span>\u003C/span>\n              \u003C/span>\n            \u003C/div>\n          \n          \u003Cdiv class=\"a-section askDPSearchFailureMessage\">\n            There was a problem completing your request. Please try your search again later.\n          \u003C/div>\n          \u003Cdiv class=\"a-section a-spacing-base askSearchTabHeaders\">\n            \u003Cspan class=\"a-declarative\" data-action=\"ask-dpsearch-desktop-go-to-tab\" data-ask-dpsearch-desktop-go-to-tab=\"{&quot;index&quot;:0}\">\n              \u003Cspan class=\"a-declarative\" data-action=\"ask-log-click-csm\" data-ask-log-click-csm=\"{&quot;metricName&quot;:&quot;ask-detailpage-search-desktop-allresults-tab-click&quot;}\">\n                \u003Cspan class=\"askSearchResultsHeader askSearchResultsHeaderActive\">\n                  All\n                \u003C/span>\n              \u003C/span>\n            \u003C/span>\n            \u003Cspan class=\"a-declarative\" data-action=\"ask-dpsearch-desktop-go-to-tab\" data-ask-dpsearch-desktop-go-to-tab=\"{&quot;index&quot;:1}\">\n              \u003Cspan class=\"a-declarative\" data-action=\"ask-log-click-csm\" data-ask-log-click-csm=\"{&quot;metricName&quot;:&quot;ask-detailpage-search-desktop-productinfo-tab-click&quot;}\">\n                \u003Cspan class=\"askSearchResultsHeader\">\n                  Product Information\n                \u003C/span>\n              \u003C/span>\n            \u003C/span>\n            \u003Cspan class=\"a-declarative\" data-action=\"ask-dpsearch-desktop-go-to-tab\" data-ask-dpsearch-desktop-go-to-tab=\"{&quot;index&quot;:2}\">\n              \u003Cspan class=\"a-declarative\" data-action=\"ask-log-click-csm\" data-ask-log-click-csm=\"{&quot;metricName&quot;:&quot;ask-detailpage-search-desktop-qnas-tab-click&quot;}\">\n                \u003Cspan class=\"askSearchResultsHeader\">\n                  Customer Q&amp;A's\n                \u003C/span>\n              \u003C/span>\n            \u003C/span>\n            \u003Cspan class=\"a-declarative\" data-action=\"ask-dpsearch-desktop-go-to-tab\" data-ask-dpsearch-desktop-go-to-tab=\"{&quot;index&quot;:3}\">\n              \u003Cspan class=\"a-declarative\" data-action=\"ask-log-click-csm\" data-ask-log-click-csm=\"{&quot;metricName&quot;:&quot;ask-detailpage-search-desktop-reviews-tab-click&quot;}\">\n                \u003Cspan class=\"askSearchResultsHeader\">\n                  Customer Reviews\n                \u003C/span>\n              \u003C/span>\n            \u003C/span>\n            \u003Chr class=\"a-divider-normal\">\n          \u003C/div>\n          \u003Cdiv class=\"a-section a-spacing-none askSearchResultsContainer\">\u003C/div>\n          \n        \u003C/div>\n        \u003C/form>\n        \n      \u003C/div>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n        \n        \n        \n  \n\n\n\n\n\n\n\n\n    \n\n\n            \n\n\n            \n\n\n\n\n\n\n            \n\n        \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"aplusBrandStory_feature_div\" class=\"feature\" data-feature-name=\"aplusBrandStory\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n  \n\n\n\n        \n        \n        \n  \n\n\n\n\n\n\n\n\n    \n\n\n            \n\n\n            \n\n\n\n\n\n\n            \n\n        \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n        \n        \n        \n  \n\n\n\n\n\n\n\n\n    \n\n\n            \n\n\n            \n\n\n\n\n\n\n            \n\n        \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003Cdiv id=\"aplus3p_feature_div\" class=\"feature\" data-feature-name=\"aplus3p\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n        \n        \n            \n                \n                    \n\n\n    \n    \n    \n    \n    \n    \n\n\n\n\n    \n\n    \u003Cdiv id=\"aplus\" class=\"a-section a-spacing-extra-large bucket\">\n        \u003Chr noshade=\"true\" size=\"1\" class=\"bucketDivider\">\n        \n            \u003Ch2>Product Description\u003C/h2>\n        \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n    \n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n\n\n\u003Cdiv class=\"aplus-v2 desktop celwidget \" cel_widget_id=\"aplus\">\n    \n    \n        \n            \n                \u003Cstyle type=\"text/css\">\n    .aplus-v2 {\n      display:table;\n      margin-left:auto;\n      margin-right:auto;\n      word-wrap: break-word;\n      overflow-wrap: break-word;\n      word-break: break-word;\n    }\n    .aplus-v2 .aplus-module-wrapper {text-align:left; display:inline-block;}\n    .aplus-v2.weblabRtl .aplus-module-wrapper {text-align:inherit; display:inline-block;}\n    .aplus-v2 .aplus-module.module-1,\n    .aplus-v2 .aplus-module.module-2,\n    .aplus-v2 .aplus-module.module-3,\n    .aplus-v2 .aplus-module.module-4,\n    .aplus-v2 .aplus-module.module-6,\n    .aplus-v2 .aplus-module.module-7,\n    .aplus-v2 .aplus-module.module-8,\n    .aplus-v2 .aplus-module.module-9,\n    .aplus-v2 .aplus-module.module-10,\n    .aplus-v2 .aplus-module.module-11,\n    .aplus-v2 .aplus-module.module-12{padding-bottom:12px; margin-bottom:12px;}\n    .aplus-v2 .aplus-module:last-child{border-bottom:none}\n    .aplus-v2 .aplus-module {min-width:979px;}\n\n    /* aplus css needed to override aui on the detail page */\n    .aplus-v2 .aplus-module table.aplus-chart.a-bordered.a-vertical-stripes {border:none;}\n    .aplus-v2 .aplus-module table.aplus-chart.a-bordered.a-vertical-stripes td {background:none;}\n    .aplus-v2 .aplus-module table.aplus-chart.a-bordered.a-vertical-stripes td.selected {background-color:#ffd;}\n    .aplus-v2 .aplus-module table.aplus-chart.a-bordered.a-vertical-stripes td:first-child {background:#f7f7f7; font-weight:bold;}\n    .aplus-v2 .aplus-module table.aplus-chart.a-bordered.a-vertical-stripes tr th {background:none; border-right:none;}\n    .aplus-v2 .aplus-module table.aplus-chart.a-bordered tr td,.aplus-v2 .aplus-module table.aplus-chart.a-bordered tr th {border-bottom:1px dotted #999;}\n\n    /* A+ Template - General Module CSS */\n    .aplus-v2 .apm-top {height:100%; vertical-align:top;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-top {padding-left: 0px; padding-right: 3px}\n    .aplus-v2 .apm-center {height:100%; vertical-align:middle; text-align:center;}\n    .aplus-v2 .apm-row {width:100%; display:inline-block;}\n    .aplus-v2 .apm-wrap {width:100%;}\n    .aplus-v2 .apm-fixed-width {width:969px;}\n    .aplus-v2 .apm-spacing {float:left; zoom:1;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-spacing {float: right;}\n    .aplus-v2 .apm-floatleft {float:left;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-floatleft {float:right;}\n    .aplus-v2 .apm-floatright {float:right;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-floatright {float:left;}\n    .aplus-v2 .apm-floatnone {float:none;}\n    .aplus-v2 .apm-spacing img {border:none;}\n    .aplus-v2 .apm-leftimage {float:left; display:block; margin-right:20px; margin-bottom:10px;width: 300px;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-leftimage {float: right; margin-right: 0px; margin-left:20px;}\n    .aplus-v2 .apm-centerimage {text-align: center; width:300px; display:block; margin-bottom:10px;}\n    .aplus-v2 .apm-centerthirdcol {min-width:359px; display:block}\n    .aplus-v2 .apm-centerthirdcol ul,\n    .aplus-v2 .apm-centerthirdcol ol {margin-left: 334px;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-centerthirdcol ul,\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-centerthirdcol ol {margin-left: 0px; margin-right: 334px;}\n    .aplus-v2 .apm-rightthirdcol {float:right; width:230px; padding-left:30px; margin-left:30px; border-left:1px solid #dddddd;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-rightthirdcol {float: left; padding-left: 0px; padding-right:30px; margin-left:0px; margin-right:30px; border-left:0px; border-right:1px solid #dddddd;}\n    .aplus-v2 .apm-lefttwothirdswrap {width:709px; display:block;}\n    .aplus-v2 .apm-lefthalfcol {width:480px; padding-right:30px; display:block; float:left;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-lefthalfcol {padding-left:30px; float:right;}\n    .aplus-v2 .apm-righthalfcol {width:480px; display:block; float:left;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-righthalfcol {float:right;}\n    .aplus-v2 .apm-eventhirdcol {width:300px; display:block;}\n    .aplus-v2 .apm-eventhirdcol-table {border-spacing: 0px 0px; border-collapse: collapse;}\n    .aplus-v2 .apm-eventhirdcol-table tr td {vertical-align: top;}\n    .aplus-v2 .apm-fourthcol {width:220px; float:left;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-fourthcol {float:right;}\n    .aplus-v2 .apm-fourthcol .apm-fourthcol-image {position:relative;}\n    .aplus-v2 .apm-fourthcol img {display:block; margin:0 auto;}\n    .aplus-v2 .apm-fourthcol-table {border-spacing: 0px 0px; border-collapse: collapse;}\n    .aplus-v2 .apm-fourthcol-table tr td {vertical-align: top;}\n    .aplus-v2 .apm-listbox {width:100%;}\n    .aplus-v2 .apm-iconheader {float:left; padding-left:10px;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-iconheader {float:right; padding-left:0px; padding-right: 10px}\n    .aplus-v2 .apm-spacing ul:last-child,.aplus-v2 ol:last-child {margin-bottom:0 !important;}\n    .aplus-v2 .apm-spacing ul,.aplus-v2 ol {padding:0 !important;}\n    .aplus-v2 .apm-spacing ul {margin:0 0 18px 18px !important; color:#aaaaaa;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-spacing ul {margin:0 18px 18px 0 !important;}\n\n    .aplus-v2 .apm-spacing ul li,.aplus-v2 ol li {word-wrap:break-word; margin:0 !important;}\n    .aplus-v2 .apm-spacing ul li {margin:0 !important;}\n    .aplus-v2 .apm-spacing ul .a-list-item,.aplus-v2 ol .a-list-item {color:#333333;}\n\n    /* A+ Template - Module 1 Sepcific CSS */\n    .aplus-v2 .amp-centerthirdcol-listbox {display:inline-block; width:359px;}\n\n    /* A+ Template - Module 2/3 Specific CSS */\n    .aplus-v2 .apm-sidemodule {text-align:left; margin:0 auto; width:970px; padding:0; background-color:#ffffff; position:relative;}\n    .aplus-v2.weblabRtl .apm-sidemodule {text-align:inherit;}\n    .aplus-v2 .apm-sidemodule-textright {width:470px; position:relative; display:table-cell; vertical-align:middle; padding-left:40px; height:300px; max-height:300px;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-sidemodule-textright {padding-left:0px; padding-right: 40px;}\n    .aplus-v2 .apm-sidemodule-textleft {width:630px; position:relative; display:table-cell; vertical-align:middle; padding-left:200px; height:300px; max-height:300px;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-sidemodule-textleft {padding-left:0px; padding-right:200px;}\n    .aplus-v2 .apm-sidemodule-imageleft {position:relative; float:left; display:block;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-sidemodule-imageleft {float:right;}\n    .aplus-v2 .apm-sidemodule-imageright {position:relative; float:right; display:block;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-sidemodule-imageright {float:left;}\n\n    /* A+ Template - Module 4 Specific CSS */\n    .aplus-v2 .aplus-module.module-4 th {padding: 0px; padding-right:30px; width:220px;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .aplus-module.module-4 th {padding-left: 30px; padding-right: 0px;}\n    .aplus-v2 .aplus-module.module-4 th:last-of-type {padding-right:0px;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .aplus-module.module-4 th:last-of-type {padding-left: 0px}\n\n    /* A+ Template - Module 5 Specific CSS */\n    .aplus-v2 .apm-tablemodule {text-align:left; margin:0 auto; width:970px;}\n    .aplus-v2 table.apm-tablemodule-table {border-bottom:1px solid #dddddd; width: 970px; left:4%;table-layout: fixed}\n    .aplus-v2 th.apm-tablemodule-keyhead {border-top:1px solid #dddddd; padding:8px 14px 6px !important; background-color:#f7f7f7; font-weight:normal; color:#626262; float:none !important; margin-right:0; text-align:center; width:106px;}\n    .aplus-v2 tr.apm-tablemodule-keyvalue td {padding-top:8px !important; padding-left:14px; padding-bottom:8px; border-top:1px solid #dddddd; border-bottom:1px solid #dddddd; text-align:center;width:inherit!important}\n    .aplus-v2 .apm-tablemodule-valuecell.selected {background-color:#fff5ec;}\n    .aplus-v2 .apm-tablemodule-valuecell span {word-wrap:break-word;}\n    .aplus-v2 .apm-tablemodule-keyhead {border-right:1px solid #dddddd;}\n    .aplus-v2 .apm-tablemodule-blankkeyhead {border:0 !important; width:18%;}\n    .aplus-v2 .apm-tablemodule-image {background-color:#FFFFFF; padding:0 !important; text-align:center; overflow:hidden; vertical-align:bottom;}\n    .aplus-v2 .apm-tablemodule-imagerows > td > img {max-width:none !important;}\n    .aplus-v2 table.apm-tablemodule-table {margin-bottom: 6px!important;}\n    .aplus-v2 table.apm-tablemodule-table th {padding-bottom:8px; text-align:center;}\n    .aplus-v2 .apm-checked {text-align:center;}\n\n    /* A+ Template - Module 6 Specific CSS */\n    .aplus-v2 .apm-hovermodule {text-align:left; margin:0 auto; width:970px; padding: 0; background-color:#ffffff; height:300px; position:relative;}\n    .aplus-v2.weblabRtl .apm-hovermodule {text-align:inherit;}\n    .aplus-v2 .apm-hovermodule-slides {background-color:#ffffff; width:970px; height:300px;}\n    .aplus-v2 .apm-hovermodule-slides-inner {margin-left:345px; position:absolute; z-index:25;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-hovermodule-slides-inner {margin-left:0px; margin-right:345px;}\n    .aplus-v2 .apm-hovermodule-slidecontrol {position:absolute; top:180px; left:345px; z-index:30;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-hovermodule-slidecontrol {left: 0px; right:345px;}\n\n    .aplus-v2 .apm-hovermodule-smallimage {width:80px; height:80px; cursor:pointer; float:left; margin-right:35px; padding:0;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-hovermodule-smallimage {float:right; margin-right:0px margin-left:35px;}\n    .aplus-v2 .apm-hovermodule-smallimage-bg {background-color:#ffffff; width:100px; height:80px;}\n    .aplus-v2 .apm-hovermodule-smallimage-last {margin-right:0 !important;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-hovermodule-smallimage-last {margin-left:0 !important;}\n    .aplus-v2 .apm-hovermodule-smallimage a {text-transform:uppercase; font-size:11px; font-weight:bold; color:333333 !important;}\n    .aplus-v2 .apm-hovermodule-smallimage a:hover {text-decoration:none; color:#333333 !important;}\n    .aplus-v2 .apm-hovermodule-smallimage img {border:1px solid #888888;}\n    .aplus-v2 .apm-hovermodule-opacitymodon a {color:888888 !important;}\n    .aplus-v2 .apm-hovermodule-opacitymodon:hover {opacity:1 !important; filter:alpha(opacity=100) !important;}\n    .aplus-v2 .apm-hovermodule-opacitymodon img {opacity:0.3; filter:alpha(opacity=30);}\n    .aplus-v2 .apm-hovermodule-image {position:absolute; left:0; z-index: 1;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-hovermodule-image {right:0;}\n\n    /* A+ Template - Module 9 Specific CSS */\n    .aplus-v2 .aplus-module.module-9 th.apm-center {padding: 0 35px 0 0; width:300px;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .aplus-module.module-9 th.apm-center {padding: 0 0 0 35px; width:300px;}\n    .aplus-v2 .aplus-module.module-9 th.apm-center:last-of-type {padding:0px;}\n\n    /*A+ Template - Module 11 Specific CSS */\n    .aplus-v2 .apm-heromodule-textright {float:right; right:50px; margin-top:100px; padding:15px; filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#BBBBBB,endColorstr=#FFFFFF); background-color: rgb(0,0,0); background-color:rgba(0,0,0,0.7);color:white; width:250px;}\n    html[dir='rtl'] .aplus-v2.weblabRtl .apm-heromodule-textright {float:left; left: 50px; right: auto}\n    .aplus-v2 .apm-heromodule-textright h3,\n    .aplus-v2 .apm-heromodule-textright ul,\n    .aplus-v2 .apm-heromodule-textright ol,\n    .aplus-v2 .apm-heromodule-textright ul .a-list-item,\n    .aplus-v2 .apm-heromodule-textright ol .a-list-item {color:white}\n    .aplus-v2 .module-12 .textright {float:right; right:50px; margin-top:100px; padding:15px; color:black; width:250px; filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#BBBBBB,endColorstr=#FFFFFF); background-color: rgb(255,255,255); background-color:rgba(255,255,255,0.7);}\n    html[dir='rtl'] .aplus-v2.weblabRtl .module-12 .textright {float:left; left: 50px; right: auto}\n\n    /* module 11/12 */\n    .aplus-v2 .module-12 .apm-hero-image,.aplus-v2 .module-11 .apm-hero-image{float:none}\n    .aplus-v2 .module-12 .apm-hero-image img,.aplus-v2 .module-11 .apm-hero-image img{position:absolute}\n    .aplus-v2 .module-12 .apm-hero-text,.aplus-v2 .module-11 .apm-hero-text{position:relative}\n    .aplus-v2 .module-11 .aplus-module-content,.aplus-v2 .module-12 .aplus-module-content{min-height:300px}\n\n    /* module 13 text */\n    .aplus-v2 .aplus-module-13 {\n        padding: 40px;\n        max-width: 979px;\n    }\n   .aplus-v2 .aplus-module-13 .aplus-13-heading-text {\n        padding-bottom: 10px;\n    }\n    .aplus-v2 .aplus-module-13 p {\n        text-align: left;\n        padding-bottom: 10px;\n    }\n    .aplus-v2.weblabRtl .aplus-module-13 p {\n        text-align: inherit;\n    }\n\n    @media (max-width: 800px) {\n        /* Main Media Queries */\n        .aplus-v2 .acs-ux-wrapfix {width:100%;}\n        .aplus-v2 .aplus-module-wrapper {width:100%;}\n        .aplus-v2 .apm-leftimage {float:none;}\n\n        html[dir='rtl'] .aplus-v2 .acs-ux-wrapfix {width:100%;}\n        html[dir='rtl'] .aplus-v2 .aplus-module-wrapper {width:100%;}\n        html[dir='rtl'] .aplus-v2 .apm-leftimage {float:none;}\n\n        .aplus-v2 .apm-centerthirdcol ul,\n        .aplus-v2 .apm-centerthirdcol ol {margin-left: 14px;}\n        html[dir='rtl'] .aplus-v2.weblabRtl .apm-centerthirdcol ul,\n        html[dir='rtl'] .aplus-v2.weblabRtl .apm-centerthirdcol ol {margin-left: 0px; margin-right: 14px;}\n\n        /* Module1 Media Queries */\n        .aplus-v2 .apm-lefttwothirdswrap {float:none; width:100%; margin:0;}\n        .aplus-v2 .apm-leftimage p {display:none;}\n        .aplus-v2 .apm-centerthirdcol {float:none; width:100%;}\n        .aplus-v2 .apm-listbox {width:100%;}\n        .aplus-v2 .apm-rightthirdcol {float:none; width:100%; border-left:none; padding:0; margin:0; margin-bottom:20px;}\n        .aplus-v2 .apm-rightthirdcol-inner img {display:block; margin:auto;}\n\n        html[dir='rtl'] .aplus-v2 .apm-lefttwothirdswrap {float:none; width:100%; margin:0;}\n        html[dir='rtl'] .aplus-v2 .apm-leftimage p {display:none;}\n        html[dir='rtl'] .aplus-v2 .apm-centerthirdcol {float:none; width:100%;}\n        html[dir='rtl'] .aplus-v2 .apm-listbox {width:100%;}\n        html[dir='rtl'] .aplus-v2 .apm-rightthirdcol {float:none; width:100%; border-left:none; padding:0; margin:0; margin-bottom:20px;}\n        html[dir='rtl'] .aplus-v2 .apm-rightthirdcol-inner img {display:block; margin:auto;}\n\n        /* Module2/3 Media Queries */\n        .aplus-v2 .apm-sidemodule {width:100%; height:auto;}\n        .aplus-v2 .apm-sidemodule-imageleft {width:100%; position:relative; display:block; margin-bottom:15px;}\n        .aplus-v2 .apm-sidemodule-imageleft img {display:block; margin:0 auto;}\n        .aplus-v2 .apm-sidemodule-imageright {width:100%; position:relative; display:block; margin-bottom:15px;}\n        .aplus-v2 .apm-sidemodule-imageright img {display:block; margin:0 auto;}\n        .aplus-v2 .apm-sidemodule .a-spacing-medium {margin-bottom:30px !important;}\n\n        html[dir='rtl'] .aplus-v2.weblabRtl .apm-sidemodule {width:100%; height:auto;}\n        html[dir='rtl'] .aplus-v2.weblabRtl .apm-sidemodule-imageleft {width:100%; position:relative; display:block; margin-bottom:15px;}\n        html[dir='rtl'] .aplus-v2.weblabRtl .apm-sidemodule-imageleft img {display:block; margin:0 auto;}\n        html[dir='rtl'] .aplus-v2.weblabRtl .apm-sidemodule-imageright {width:100%; position:relative; display:block; margin-bottom:15px;}\n        html[dir='rtl'] .aplus-v2.weblabRtl .apm-sidemodule-imageright img {display:block; margin:0 auto;}\n        html[dir='rtl'] .aplus-v2.weblabRtl .apm-sidemodule .a-spacing-medium {margin-bottom:30px !important;}\n\n        /* Module4 Media Queries */\n        .aplus-v2 .apm-fourthcol {margin:0; padding-bottom:23px; width:100%; float:none;}\n        .aplus-v2 .apm-fourthcol .apm-fourthcol-image {height:inherit;}\n\n        html[dir='rtl'] .aplus-v2.weblabRtl .apm-fourthcol {margin:0; padding-bottom:23px; width:100%; float:none;}\n        html[dir='rtl'] .aplus-v2.weblabRtl .apm-fourthcol .apm-fourthcol-image {height:inherit;}\n\n        /* Module5 Media Queries */\n        .aplus-v2 table.apm-tablemodule-table {width:100%;}\n        .aplus-v2 .apm-tablemodule-valuecell {width:auto;}\n\n        html[dir='rtl'] .aplus-v2 table.apm-tablemodule-table {width:100%;}\n        html[dir='rtl'] .aplus-v2 .apm-tablemodule-valuecell {width:auto;}\n    }\n\n    /* aui hack */\n    .aplus-v2 * {-moz-box-sizing: border-box;-webkit-box-sizing: border-box;box-sizing: border-box;}\n    .aplus-v2 .a-box mp-centerthirdcol-listboxer {-webkit-border-radius: 4px;-moz-border-radius: 4px;border-radius: 4px;position: relative;padding: 14px 18px;}\n    .aplus-v2 .a-box {display: block;-webkit-border-radius: 4px;-moz-border-radius: 4px;border-radius: 4px;border: 1px #ddd solid;background-color: white;}\n    .aplus-v2 .a-color-alternate-background {background-color: #f3f3f3!important;}\n    .aplus-v2 .a-color-secondary {color: #888!important;}\n    .aplus-v2 .a-section {margin-bottom: 12px;}\n    .aplus-v2 .a-size-base {font-size: 13px!important;line-height: 19px!important;}\n    .aplus-v2 .a-spacing-base, .aplus-v2 .a-ws .a-ws-spacing-base {margin-bottom: 14px!important;}\n    .aplus-v2 .a-spacing-large, .aplus-v2 .a-ws .a-ws-spacing-large {margin-bottom: 22px!important;}\n    .aplus-v2 .a-spacing-mini, .aplus-v2 .a-ws .a-ws-spacing-mini {margin-bottom: 6px!important;}\n    .aplus-v2 .a-spacing-small, .aplus-v2 .a-ws .a-ws-spacing-small {margin-bottom: 10px!important;}\n    .aplus-v2 a, .aplus-v2 a:visited, .aplus-v2 a:active, .aplus-v2 a:link {text-decoration: none;color: #0066c0;}\n    .aplus-v2 a:hover {text-decoration: underline;cursor: pointer;color: #e47911;}\n    .aplus-v2 h1, .aplus-v2 h2, .aplus-v2 h3, .aplus-v2 h4 {font-family: Arial,sans-serif;text-rendering: optimizeLegibility;padding-bottom: 4px;}\n    .aplus-v2.weblabRtl h1, .aplus-v2.weblabRtl h2, .aplus-v2.weblabRtl h3, .aplus-v2.weblabRtl h4 {font-family: inherit;}\n    .aplus-v2 h1, .aplus-v2 h2, .aplus-v2 h3, .aplus-v2 h4, .aplus-v2 h5, .aplus-v2 h6 {padding: 0;margin: 0;}\n    .aplus-v2 h3{font-weight: bold;font-size: 17px;line-height: 1.255;}\n    .aplus-v2 h4 {font-weight: normal;font-size: 17px;line-height: 1.255;}\n    .aplus-v2 h5 {font-weight: bold;font-size: 13px;line-height: 19px;}\n    .aplus-v2 img {vertical-align: top;max-width: 100%;}\n    .aplus-v2 p {padding: 0;margin: 0 0 14px 0;}\n    .aplus-v2 ul li {list-style: disc;}\n    .aplus-v2 ul {margin: 0 0 18px 18px;color: #aaa;}\n    .aplus-v2 ul, .aplus-v2 ol {padding: 0;}\n    .aplus-v2 ul:last-child, .aplus-v2 ol:last-child {margin-bottom: 0!important;}\n    .aplus-v2 .read-more-arrow-placeholder {text-align: right; cursor: pointer; display:none;}\n\n\u003C/style>\n\n            \n        \n    \n        \n            \n                \u003Cstyle type=\"text/css\">\n.aplus-v2 .launchpad-module { max-width: 1000px; margin-left: auto; margin-right: auto; padding-top: 15px; padding-bottom: 15px; }\n.aplus-v2 .launchpad-text-container { margin-left: auto; margin-right: auto; text-align: justify; -moz-text-align-last: center; text-align-last: center; }\n.aplus-v2 .launchpad-text-center { text-align: center; }\n.aplus-v2 .launchpad-text-left-justify { text-align: justify; -moz-text-align-last: left; text-align-last: left; }\n.aplus-v2 .launchpad-video-container { width: 100%; }\n.aplus-v2 .launchpad-module-video .aplusAiryVideoPlayer { margin-left: auto; margin-right: auto; padding-bottom: 25px; }\n.aplus-v2 .launchpad-module-three-stack .launchpad-module-stackable-column { display: inline-block; width: 32%; vertical-align: top; padding-left: 10px; padding-right: 10px; }\n.aplus-v2 .launchpad-module-three-stack .launchpad-module-three-stack-container { display: table; text-align: center; margin-left: auto; margin-right: auto; }\n.aplus-v2 .launchpad-module-three-stack .launchpad-module-three-stack-container img { max-width: none; }\n.aplus-v2 .launchpad-module-three-stack .launchpad-module-three-stack-block { margin-bottom: 14px; }\n.aplus-v2 .launchpad-module-three-stack .launchpad-module-three-stack-detail { display: table-caption; caption-side: bottom; }\n.aplus-v2 .launchpad-column-container { vertical-align: middle; }\n.aplus-v2 .launchpad-column-image-container { width: 34.5%; }\n.aplus-v2 .launchpad-column-text-container { width: 64.5%; padding: 0 150px; }\n.aplus-v2 .launchpad-module-left-image .launchpad-column-text-container { padding-right: 0; }\n.aplus-v2 .launchpad-module-right-image .launchpad-column-text-container { padding-left: 0; }\n.aplus-v2 .launchpad-about-the-startup h5 { font-weight: normal; font-style: italic; }\n.aplus-v2 .launchpad-faq h2 { color: #ffa500; }\n.aplus-v2 .launchpad-module-person-block { margin-bottom: 10px; }\n\u003C/style>\n            \n        \n    \n    \u003Cscript>\n        if(P) {\n            P.when(\"a-expander\").execute(function (expander) {\n                expander.initializeExpanders();\n            });\n        }\n    \u003C/script>\n    \n\n    \n        \n\n        \n        \n            \n            \n        \n\n        \u003Cdiv class=\"celwidget aplus-module launchpad-company-logo\" cel_widget_id=\"aplus-launchpad-company-logo\">\n            \n                \n                \n                \n                \n\n                \n                    \n                    \n                        \n                            \n                                \n\n\n\n\u003Cdiv class=\"a-section a-text-center launchpad-module launchpad-module-company-logo\">\n    \n\n\n\n\n\n\n\n\n\n\n \n \n \n \n\n\n    \n    \n        \n    \n\n\n\n    \n\n\n\n\n    \n    \n        \n    \n\n\n    \n\n\n\n    \n    \n        \u003Cimg alt=\"Chromebook 15\" src=\"https://m.media-amazon.com/images/S/aplus-media/sc/082d2d44-b270-4ae9-8129-43caa6d7b2fd.__CR0,156,1200,360_PT0_SX600_V1___.jpg\">\n    \n\n\n\u003C/div>\n                            \n                        \n                    \n                \n                \n            \n        \u003C/div>\n    \n        \n\n        \n        \n            \n            \n        \n\n        \u003Cdiv class=\"celwidget aplus-module launchpad-brand-description-left\" cel_widget_id=\"aplus-launchpad-brand-description-left\">\n            \n                \n                \n                \n                \n\n                \n                    \n                    \n                        \n                            \n                                \n\n\n\n\u003Cdiv class=\"a-section a-spacing-top-mini launchpad-module launchpad-module-brand-description-left\">\n    \u003Cdiv class=\"a-section launchpad-text-left-justify\">\n        \n\n\n\n\n\n\n\n\n\n\n\n\n     \n    \n      \n \n\n\n    \n    \n        \n    \n\n\n\n\n\n\n    \n    \n        \u003Cp>\n            The 15.6” Chromebook that you’ll want to own. With its beautiful design, 27% larger screen, immersive multimedia features, long battery life and millions of apps.\n        \u003C/p>\n    \n\n\n\n    \u003C/div>\n\u003C/div>\n                            \n                        \n                    \n                \n                \n            \n        \u003C/div>\n    \n        \n\n        \n        \n            \n            \n        \n\n        \u003Cdiv class=\"celwidget aplus-module module-4\" cel_widget_id=\"aplus-module-4\">\n            \n                \n                \n                \n                \n\n                \n                    \n                        \u003Cdiv aria-live=\"polite\" data-a-expander-name=\"aplus-module-expander\" data-a-expander-collapsed-height=\"700\" class=\"a-expander-collapsed-height a-row a-expander-container a-expander-partial-collapse-container\" style=\"max-height:700px; _height:700px\">\n                            \u003Cdiv aria-expanded=\"false\" class=\"a-expander-content a-expander-partial-collapse-content\">\n                                \n                                    \n                                        \n\n\n\n\u003Cdiv class=\"aplus-module-wrapper\">\n    \u003Cdiv class=\"apm-spacing\">\n        \u003Cdiv class=\"apm-floatleft apm-fixed-width\">\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     \n \n     \n    \n\n    \n\n\n    \n    \n        \n    \n\n\n\n\n\n\n            \u003Cdiv class=\"a-spacing-extra-large\">\n                \u003Cdiv class=\"apm-spacing\">\n                    \u003Ctable class=\"apm-fixed-width a-spacing-mini apm-fourthcol-table\">\n                        \u003Ctbody>\u003Ctr>\n                            \u003Cth class=\"apm-center\">\n                                \u003Cdiv class=\"apm-fourthcol\">\n                                    \u003Cp>\n                                        \n\n\n\n\n\n\n\n\n\n\n \n \n \n \n\n\n    \n    \n        \n    \n\n\n\n    \n\n\n\n\n    \n    \n        \n    \n\n\n    \n\n\n\n    \n    \n        \u003Cimg alt=\"Lifestyle 2\" src=\"https://m.media-amazon.com/images/S/aplus-media/sc/b5d8d361-e3b7-4bab-a743-e5a865f1755d.__CR518,65,890,890_PT0_SX220_V1___.jpg\">\n    \n\n\n                                        \n\n\n\n\n\n\n\n\n    \n    \n        \n    \n\n\n\n\n\n    \n\n                                    \u003C/p>\n                                \u003C/div>\n                            \u003C/th>\n                            \u003Cth class=\"apm-center\">\n                                \u003Cdiv class=\"apm-fourthcol\">\n                                    \u003Cp>\n                                        \n\n\n\n\n\n\n\n\n\n\n \n \n \n \n\n\n    \n    \n        \n    \n\n\n\n    \n\n\n\n\n    \n    \n        \n    \n\n\n    \n\n\n\n    \n    \n        \u003Cimg alt=\"Wide Angle\" src=\"https://m.media-amazon.com/images/S/aplus-media/sc/27b4a572-2516-4ace-b47a-94e524378d55.__CR0,0,1026,1026_PT0_SX220_V1___.jpg\">\n    \n\n\n                                        \n\n\n\n\n\n\n\n\n    \n    \n        \n    \n\n\n\n\n\n    \n\n                                    \u003C/p>\n                                \u003C/div>\n                            \u003C/th>\n                            \u003Cth class=\"apm-center\">\n                                \u003Cdiv class=\"apm-fourthcol\">\n                                    \u003Cp>\n                                        \n\n\n\n\n\n\n\n\n\n\n \n \n \n \n\n\n    \n    \n        \n    \n\n\n\n    \n\n\n\n\n    \n    \n        \n    \n\n\n    \n\n\n\n    \n    \n        \u003Cimg alt=\"Battery\" src=\"https://m.media-amazon.com/images/S/aplus-media/sc/b48e38ca-118f-48d2-8645-58ef1c3234df.__CR347,0,1225,1225_PT0_SX220_V1___.jpg\">\n    \n\n\n                                        \n\n\n\n\n\n\n\n\n    \n    \n        \n    \n\n\n\n\n\n    \n\n                                    \u003C/p>\n                                \u003C/div>\n                            \u003C/th>\n                            \u003Cth class=\"apm-center\">\n                                \u003Cdiv class=\"apm-fourthcol\">\n                                    \u003Cp>\n                                        \n\n\n\n\n\n\n\n\n\n\n \n \n \n \n\n\n    \n    \n        \n    \n\n\n\n    \n\n\n\n\n    \n    \n        \n    \n\n\n    \n\n\n\n    \n    \n        \u003Cimg alt=\"Google Play\" src=\"https://m.media-amazon.com/images/S/aplus-media/sc/28e65b26-3de2-4a83-b3ed-5bfbfb87b61a.__CR437,0,1019,1019_PT0_SX220_V1___.jpg\">\n    \n\n\n                                        \n\n\n\n\n\n\n\n\n    \n    \n        \n    \n\n\n\n\n\n    \n\n                                    \u003C/p>\n                                \u003C/div>\n                            \u003C/th>\n                        \u003C/tr>\n                        \u003Ctr>\n                            \u003Ctd class=\"apm-top\">\n                                \u003Cdiv class=\"apm-fourthcol\">\n                                    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     \n \n     \n    \n\n    \n\n\n    \n    \n        \n    \n\n\n\n\n\n\n    \u003Ch4 class=\"a-spacing-mini\">\n        Wide-Angle Webcam\n    \u003C/h4>\n\n                                    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n      \n \n\n\n    \n    \n        \n    \n\n\n\n\n\n\n    \n    \n        \u003Cp class=\"a-size-small\">\n            Stop crowding around the laptop and let more of the room be seen with the 88° wide-angle webcam.\n        \u003C/p>\n    \n\n\n\n                                \u003C/div>\n                            \u003C/td>\n                            \u003Ctd class=\"apm-top\">\n                                \u003Cdiv class=\"apm-fourthcol\">\n                                    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     \n \n     \n    \n\n    \n\n\n    \n    \n        \n    \n\n\n\n\n\n\n    \u003Ch4 class=\"a-spacing-mini\">\n        Wide Angle Display\n    \u003C/h4>\n\n                                    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n      \n \n\n\n    \n    \n        \n    \n\n\n\n\n\n\n    \n    \n        \u003Cp class=\"a-size-small\">\n            Share what's on your screen with friends and family as colors stay true no matter what angle you're viewing from.\n        \u003C/p>\n    \n\n\n\n                                \u003C/div>\n                            \u003C/td>\n                            \u003Ctd class=\"apm-top\">\n                                \u003Cdiv class=\"apm-fourthcol\">\n                                    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     \n \n     \n    \n\n    \n\n\n    \n    \n        \n    \n\n\n\n\n\n\n    \u003Ch4 class=\"a-spacing-mini\">\n        All Day Productivity\n    \u003C/h4>\n\n                                    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n      \n \n\n\n    \n    \n        \n    \n\n\n\n\n\n\n    \n    \n        \u003Cp class=\"a-size-small\">\n            With a battery life of up to 12-hours, your laptop is designed to stay at your side for the entirety of the day.   Battery life varies depending on product configuration, power settings and usage, among other factors.\n        \u003C/p>\n    \n\n\n\n                                \u003C/div>\n                            \u003C/td>\n                            \u003Ctd class=\"apm-top\">\n                                \u003Cdiv class=\"apm-fourthcol\">\n                                    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     \n \n     \n    \n\n    \n\n\n    \n    \n        \n    \n\n\n\n\n\n\n    \u003Ch4 class=\"a-spacing-mini\">\n        Google Play\n    \u003C/h4>\n\n                                    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n      \n \n\n\n    \n    \n        \n    \n\n\n\n\n\n\n    \n    \n        \u003Cp class=\"a-size-small\">\n            Get access to more than 2 million Android apps from Google Play to learn and do more.\n        \u003C/p>\n    \n\n\n\n                                \u003C/div>\n                            \u003C/td>\n                        \u003C/tr>\n                    \u003C/tbody>\u003C/table>\n                \u003C/div>\n            \u003C/div>\n        \u003C/div>\n    \u003C/div>\n\u003C/div>\n\u003Cdiv style=\"clear:both\">\u003C/div>\n\n                                    \n                                \n                            \u003C/div>\n                            \u003Cdiv class=\"a-expander-header a-expander-partial-collapse-header a-text-left\" style=\"opacity: 0; display: none;\">\u003Cdiv class=\"a-expander-content-fade\">\u003C/div>\u003Ca href=\"javascript:void(0)\" data-action=\"a-expander-toggle\" class=\"a-declarative\" data-a-expander-toggle=\"{&quot;allowLinkDefault&quot;:true, &quot;expand_prompt&quot;:&quot;Read more&quot;, &quot;collapse_prompt&quot;:&quot;Read less&quot;}\">\u003Ci class=\"a-icon a-icon-extender-expand\">\u003C/i>\u003Cspan class=\"a-expander-prompt\">Read more\u003C/span>\u003C/a>\u003C/div>\n                        \u003C/div>\n                    \n                    \n                \n                \n            \n        \u003C/div>\n    \n        \n\n        \n        \n            \n            \n        \n\n        \u003Cdiv class=\"celwidget aplus-module module-12\" cel_widget_id=\"aplus-module-12\">\n            \n                \n                \n                \n                \n\n                \n                    \n                        \u003Cdiv aria-live=\"polite\" data-a-expander-name=\"aplus-module-expander\" data-a-expander-collapsed-height=\"360\" class=\"a-expander-collapsed-height a-row a-expander-container a-expander-partial-collapse-container\" style=\"max-height:360px; _height:360px\">\n                            \u003Cdiv aria-expanded=\"false\" class=\"a-expander-content a-expander-partial-collapse-content\">\n                                \n                                    \n                                        \n\n\n\n\u003Cdiv class=\"aplus-module-wrapper apm-spacing apm-floatnone\">\n    \u003Cdiv class=\"apm-sidemodule aplus-module-content\">\n        \u003Cdiv class=\"apm-hero-image\">\n            \n\n\n\n\n\n\n\n\n\n\n \n \n \n \n\n\n    \n    \n        \n    \n\n\n\n    \n\n\n\n\n    \n    \n        \n    \n\n\n    \n\n\n\n    \n    \n        \u003Cimg alt=\"Lifestyle\" src=\"https://m.media-amazon.com/images/S/aplus-media/sc/37abc55a-c8b6-46a9-b532-553f45572ea0.__CR0,424,1920,594_PT0_SX970_V1___.jpg\">\n    \n\n\n        \u003C/div>\n\n        \n            \u003Cdiv class=\"textright apm-hero-text\">\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     \n \n     \n    \n      \n    \n\n\n    \n    \n        \n    \n\n\n\n\n\n\n    \u003Ch3>\n        Top-Facing Speakers\n    \u003C/h3>\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n     \n    \n      \n \n\n\n    \n    \n        \n    \n\n\n\n\n\n\n    \n    \n        \u003Cp>\n            Hear sounds in greater immersive clarity when they're delivered up.\n        \u003C/p>\n    \n\n\n\n            \u003C/div>\n        \n    \u003C/div>\n    \u003Cdiv style=\"clear:both\">\n        \n\n\n\n\n\n\n\n\n    \n    \n        \n    \n\n\n\n\n\n    \n\n    \u003C/div>\n\u003C/div>\n                                    \n                                \n                            \u003C/div>\n                            \u003Cdiv class=\"a-expander-header a-expander-partial-collapse-header a-text-left\" style=\"opacity: 0; display: none;\">\u003Cdiv class=\"a-expander-content-fade\">\u003C/div>\u003Ca href=\"javascript:void(0)\" data-action=\"a-expander-toggle\" class=\"a-declarative\" data-a-expander-toggle=\"{&quot;allowLinkDefault&quot;:true, &quot;expand_prompt&quot;:&quot;Read more&quot;, &quot;collapse_prompt&quot;:&quot;Read less&quot;}\">\u003Ci class=\"a-icon a-icon-extender-expand\">\u003C/i>\u003Cspan class=\"a-expander-prompt\">Read more\u003C/span>\u003C/a>\u003C/div>\n                        \u003C/div>\n                    \n                    \n                \n                \n            \n        \u003C/div>\n    \n        \n\n        \n        \n            \n            \n        \n\n        \u003Cdiv class=\"celwidget aplus-module module-11\" cel_widget_id=\"aplus-module-11\">\n            \n                \n                \n                \n                \n\n                \n                    \n                        \u003Cdiv aria-live=\"polite\" data-a-expander-name=\"aplus-module-expander\" data-a-expander-collapsed-height=\"360\" class=\"a-expander-collapsed-height a-row a-expander-container a-expander-partial-collapse-container\" style=\"max-height:360px; _height:360px\">\n                            \u003Cdiv aria-expanded=\"false\" class=\"a-expander-content a-expander-partial-collapse-content\">\n                                \n                                    \n                                        \n\n\n\n\u003Cdiv class=\"aplus-module-wrapper apm-spacing apm-floatnone\">\n    \u003Cdiv class=\"apm-sidemodule aplus-module-content\">\n        \u003Cdiv class=\"apm-hero-image\">\n            \n\n\n\n\n\n\n\n\n\n\n \n \n \n \n\n\n    \n    \n        \n    \n\n\n\n    \n\n\n\n\n    \n    \n        \n    \n\n\n    \n\n\n\n    \n    \n        \u003Cimg alt=\"Lifestyle 2\" src=\"https://m.media-amazon.com/images/S/aplus-media/sc/2ccda939-bf5a-4140-9d2d-ad2875564fe8.__CR0,227,1920,594_PT0_SX970_V1___.jpg\">\n    \n\n\n        \u003C/div>\n\n        \n            \u003Cdiv class=\"apm-heromodule-textright apm-hero-text\">\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     \n \n     \n    \n      \n    \n\n\n    \n    \n        \n    \n\n\n\n\n\n\n    \u003Ch3>\n        Fashionable Durability\n    \u003C/h3>\n\n                \n\n\n\n\n\n\n\n\n\n\n\n\n     \n    \n      \n \n\n\n    \n    \n        \n    \n\n\n\n\n\n\n    \n    \n        \u003Cp>\n            The metal cover of the Chromebook 15 gives you the look and feel you want with the strength you need.\n        \u003C/p>\n    \n\n\n\n            \u003C/div>\n        \n    \u003C/div>\n    \u003Cdiv style=\"clear:both\">\n        \n\n\n\n\n\n\n\n\n    \n    \n        \n    \n\n\n\n\n\n    \n\n    \u003C/div>\n\u003C/div>\n\n\n                                    \n                                \n                            \u003C/div>\n                            \u003Cdiv class=\"a-expander-header a-expander-partial-collapse-header a-text-left\" style=\"opacity: 0; display: none;\">\u003Cdiv class=\"a-expander-content-fade\">\u003C/div>\u003Ca href=\"javascript:void(0)\" data-action=\"a-expander-toggle\" class=\"a-declarative\" data-a-expander-toggle=\"{&quot;allowLinkDefault&quot;:true, &quot;expand_prompt&quot;:&quot;Read more&quot;, &quot;collapse_prompt&quot;:&quot;Read less&quot;}\">\u003Ci class=\"a-icon a-icon-extender-expand\">\u003C/i>\u003Cspan class=\"a-expander-prompt\">Read more\u003C/span>\u003C/a>\u003C/div>\n                        \u003C/div>\n                    \n                    \n                \n                \n            \n        \u003C/div>\n    \n        \n\n        \n        \n            \n            \n        \n\n        \u003Cdiv class=\"celwidget aplus-module module-5\" cel_widget_id=\"aplus-module-5\">\n            \n                \n                \n                \n                \n\n                \n                    \n                    \n                        \n                            \n                                \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n            \n            \n        \n        \n    \n\n    \n        \n            \n            \n        \n        \n    \n\n    \n        \n            \n            \n        \n        \n    \n\n    \n        \n            \n            \n        \n        \n    \n\n    \n        \n        \n            \n        \n    \n\n    \n        \n        \n            \n        \n    \n\n\n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n\n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n\n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n\n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n\n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n\n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n        \n        \n    \n\n\n\n\n\n    \n        \n    \n    \n\n\n\u003Cdiv class=\"aplus-module-wrapper\">\n    \u003Cdiv class=\"apm-spacing aplus-module-content\">\n        \u003Cdiv class=\"apm-tablemodule\">\n            \u003Ctable class=\"apm-tablemodule-table\" cellspacing=\"0\" cellpadding=\"0\">\n                \u003Ctbody>\n                \u003Ctr class=\"apm-tablemodule-imagerows\">\n                    \u003Cth class=\"apm-tablemodule-blankkeyhead\">\n                    \n                        \n                        \n                          \u003C/th>\u003Cth class=\"apm-tablemodule-image \">\n                              \n                                  \n                                      \n                                          \u003Ca href=\"/dp/B06XD3LXXK/ref=emc_b_5_i\">\n                                              \u003Cimg alt=\"Preview\" src=\"https://m.media-amazon.com/images/S/aplus-media/sc/791c03de-c4e9-4b32-b42c-7ca4db288ee3.__CR0,0,1000,2000_PT0_SX150_V1___.jpg\" width=\"150px\">\n                                          \u003C/a>\n                                      \n                                      \n                                  \n                              \n                          \u003C/th>\n                        \n                    \n                        \n                        \n                          \u003Cth class=\"apm-tablemodule-image \">\n                              \n                                  \n                                      \n                                          \u003Ca href=\"/dp/B074JCPQBS/ref=emc_b_5_i\">\n                                              \u003Cimg alt=\"Test\" src=\"https://m.media-amazon.com/images/S/aplus-media/sc/b85f2721-eebc-46b6-b8a8-0a2695cda9c1.__CR0,0,1000,2000_PT0_SX150_V1___.jpg\" width=\"150px\">\n                                          \u003C/a>\n                                      \n                                      \n                                  \n                              \n                          \u003C/th>\n                        \n                    \n                        \n                        \n                          \u003Cth class=\"apm-tablemodule-image \">\n                              \n                                  \n                                      \n                                          \u003Ca href=\"/dp/B078XJWZ2B/ref=emc_b_5_i\">\n                                              \u003Cimg alt=\"Test\" src=\"https://m.media-amazon.com/images/S/aplus-media/sc/21e7db17-35ec-4c38-893e-feb0de15e8ee.__CR0,0,1000,2000_PT0_SX150_V1___.jpg\" width=\"150px\">\n                                          \u003C/a>\n                                      \n                                      \n                                  \n                              \n                          \u003C/th>\n                        \n                    \n                        \n                        \n                          \u003Cth class=\"apm-tablemodule-image \">\n                              \n                                  \n                                      \n                                          \u003Ca href=\"/dp/B079H5WJY5/ref=emc_b_5_i\">\n                                              \u003Cimg alt=\"Test\" src=\"https://m.media-amazon.com/images/S/aplus-media/sc/2adf0a8e-dad1-4447-ad2e-1ec4eae49a5f.__CR0,0,1000,2000_PT0_SX150_V1___.jpg\" width=\"150px\">\n                                          \u003C/a>\n                                      \n                                      \n                                  \n                              \n                          \u003C/th>\n                        \n                    \n                        \n                        \n                    \n                        \n                        \n                    \n                \u003C/tr>\n                \u003Ctr class=\"apm-tablemodule-imagerows\">\n                    \u003Cth class=\"apm-tablemodule-blankkeyhead\">\n                    \n                        \n                        \n                          \u003C/th>\u003Cth>\n                              \n                                  \n                                      \u003Ca href=\"/dp/B06XD3LXXK/ref=emc_b_5_t\">\n                                          NX.GHJAA.002\n                                      \u003C/a>\n                                  \n                                  \n                              \n                          \u003C/th>\n                        \n                    \n                        \n                        \n                          \u003Cth>\n                              \n                                  \n                                      \u003Ca href=\"/dp/B074JCPQBS/ref=emc_b_5_t\">\n                                          NX.GHJAA.004\n                                      \u003C/a>\n                                  \n                                  \n                              \n                          \u003C/th>\n                        \n                    \n                        \n                        \n                          \u003Cth>\n                              \n                                  \n                                      \u003Ca href=\"/dp/B078XJWZ2B/ref=emc_b_5_t\">\n                                          NX.GHJAA.007\n                                      \u003C/a>\n                                  \n                                  \n                              \n                          \u003C/th>\n                        \n                    \n                        \n                        \n                          \u003Cth>\n                              \n                                  \n                                      \u003Ca href=\"/dp/B079H5WJY5/ref=emc_b_5_t\">\n                                          NX.GHJAA.008\n                                      \u003C/a>\n                                  \n                                  \n                              \n                          \u003C/th>\n                        \n                    \n                        \n                        \n                    \n                        \n                        \n                    \n                \u003C/tr>\n                \n                    \u003Ctr class=\"apm-tablemodule-keyvalue\">\n                        \u003Cth class=\"apm-tablemodule-keyhead\">\n                            \u003Cspan class=\"a-size-base a-text-normal a-color-secondary\">\n                                Processor\n                            \u003C/span>\n                        \u003C/th>\n                        \n                            \n                            \n                              \n                                  \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              Intel Celeron N3060 \n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                              \n                            \n                        \n                            \n                            \n                              \n                                  \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              Intel Celeron N3060\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                              \n                            \n                        \n                            \n                            \n                              \n                                  \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              Intel Celeron N3060\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                              \n                            \n                        \n                            \n                            \n                              \n                                  \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              Intel Celeron N3060\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                              \n                            \n                        \n                            \n                            \n                        \n                            \n                            \n                        \n                    \u003C/tr>\n                \n                    \u003Ctr class=\"apm-tablemodule-keyvalue\">\n                        \u003Cth class=\"apm-tablemodule-keyhead\">\n                            \u003Cspan class=\"a-size-base a-text-normal a-color-secondary\">\n                                Screen\n                            \u003C/span>\n                        \u003C/th>\n                        \n                            \n                            \n                              \n                                  \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              15.6\" HD (1366 x 768) 16:9\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                              \n                            \n                        \n                            \n                            \n                              \n                                  \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              15.6\" HD (1366 x 768) 16:9\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                              \n                            \n                        \n                            \n                            \n                              \n                                  \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              15.6\" HD (1366 x 768) 16:9\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                              \n                            \n                        \n                            \n                            \n                              \n                                  \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              15.6\" HD (1366 x 768) 16:9\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                              \n                            \n                        \n                            \n                            \n                        \n                            \n                            \n                        \n                    \u003C/tr>\n                \n                    \u003Ctr class=\"apm-tablemodule-keyvalue\">\n                        \u003Cth class=\"apm-tablemodule-keyhead\">\n                            \u003Cspan class=\"a-size-base a-text-normal a-color-secondary\">\n                                Memory\n                            \u003C/span>\n                        \u003C/th>\n                        \n                            \n                            \n                              \n                                  \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              2 GB LPDDR3\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                              \n                            \n                        \n                            \n                            \n                              \n                                  \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              4 GB LPDDR3\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                              \n                            \n                        \n                            \n                            \n                              \n                                  \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              2 GB LPDDR3\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                              \n                            \n                        \n                            \n                            \n                              \n                                  \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              4 GB LPDDR3\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                              \n                            \n                        \n                            \n                            \n                        \n                            \n                            \n                        \n                    \u003C/tr>\n                \n                    \u003Ctr class=\"apm-tablemodule-keyvalue\">\n                        \u003Cth class=\"apm-tablemodule-keyhead\">\n                            \u003Cspan class=\"a-size-base a-text-normal a-color-secondary\">\n                                \n                            \u003C/span>\n                        \u003C/th>\n                        \n                            \n                            \n                              \n                                  \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              16 GB Flash Memory\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                              \n                            \n                        \n                            \n                            \n                              \n                                  \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              16 GB Flash Memory\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                              \n                            \n                        \n                            \n                            \n                              \n                                  \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              16 GB Flash Memory\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                              \n                            \n                        \n                            \n                            \n                              \n                                  \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              32 GB Flash Memory\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                              \n                            \n                        \n                            \n                            \n                        \n                            \n                            \n                        \n                    \u003C/tr>\n                \n                    \u003Ctr class=\"apm-tablemodule-keyvalue\">\n                        \u003Cth class=\"apm-tablemodule-keyhead\">\n                            \u003Cspan class=\"a-size-base a-text-normal a-color-secondary\">\n                                HDMI\n                            \u003C/span>\n                        \u003C/th>\n                        \n                            \n                            \n                              \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell apm-checked\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              ✓\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                                  \n                              \n                            \n                        \n                            \n                            \n                              \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell apm-checked\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              ✓\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                                  \n                              \n                            \n                        \n                            \n                            \n                              \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell apm-checked\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              ✓\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                                  \n                              \n                            \n                        \n                            \n                            \n                              \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell apm-checked\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              ✓\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                                  \n                              \n                            \n                        \n                            \n                            \n                        \n                            \n                            \n                        \n                    \u003C/tr>\n                \n                    \u003Ctr class=\"apm-tablemodule-keyvalue\">\n                        \u003Cth class=\"apm-tablemodule-keyhead\">\n                            \u003Cspan class=\"a-size-base a-text-normal a-color-secondary\">\n                                Webcam\n                            \u003C/span>\n                        \u003C/th>\n                        \n                            \n                            \n                              \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell apm-checked\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              ✓\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                                  \n                              \n                            \n                        \n                            \n                            \n                              \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell apm-checked\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              ✓\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                                  \n                              \n                            \n                        \n                            \n                            \n                              \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell apm-checked\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              ✓\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                                  \n                              \n                            \n                        \n                            \n                            \n                              \n                                  \n                                      \u003Ctd class=\"apm-tablemodule-valuecell apm-checked\" style=\"width:191px;\">\n                                          \u003Cspan class=\"a-size-base\">\n                                              ✓\n                                          \u003C/span>\n                                      \u003C/td>\n                                  \n                                  \n                              \n                            \n                        \n                            \n                            \n                        \n                            \n                            \n                        \n                    \u003C/tr>\n                \n                \u003C/tbody>\n            \u003C/table>\n        \u003C/div>\n    \u003C/div>\n\u003C/div>\n\u003Cdiv style=\"clear:both\">\u003C/div>\n\n                            \n                        \n                    \n                \n                \n            \n        \u003C/div>\n    \n\u003C/div>\n\n    \u003C/div>\n\n\n\n                \n                \n            \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n  \n\n\n\n        \n        \n        \n  \n\n\n\n\n\n\n\n\n    \n\n\n            \n\n\n            \n\n\n\n\n\n\n            \n\n        \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"legal_feature_div\" class=\"feature\" data-feature-name=\"legal\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n  \n\n\n\n        \n        \n        \n  \n\n\n\n\n\n\n\n\n    \n\n\n            \n\n\n            \n\n\n\n\n\n\n            \n\n        \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"HLCXComparisonWidget_feature_div\" class=\"feature\" data-feature-name=\"HLCXComparisonWidget\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n            \n\n            \n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003Chr class=\"a-divider-normal\">\n    \u003Ch2 id=\"comparison_table_title\" class=\"a-color-state a-text-left a-text-bold\">\n        Compare with similar items\u003C/h2>\n    \u003Cbr>\n\n\n\n\u003Ctable id=\"HLCXComparisonTable\" class=\"a-bordered a-horizontal-stripes  a-spacing-none a-size-base comparison_table\">\n\n    \n    \n    \n    \n    \n    \n    \u003Ctbody>\u003Ctr class=\"comparison_table_image_row\">\n        \u003Ctd class=\"comparison_table_first_col\">\u003C/td>\n\n        \n        \u003Cth data-asin=\"B06XD3LXXK\" class=\"comparison_image_title_cell\" role=\"columnheader\">\n            \u003Cdiv class=\"a-row a-spacing-top-micro\">\n                \u003Ccenter>\n                    \u003Cimg alt=\"Acer Flagship CB3-532 15.6&quot; HD Premium Chromebook - Intel Dual-Core Celeron N3060 up to 2.48GH.z, 2GB RAM, 16GB SSD, Wireless AC, HDMI, USB 3.0, Webcam, Chrome OS (Renewed)\" src=\"https://images-na.ssl-images-amazon.com/images/I/51840t%2BtcFL._SL500_AC_SS350_.jpg\" id=\"comparison_image\">\n                \u003C/center>\n            \u003C/div>\n            \u003Cdiv class=\"a-row a-spacing-top-small\">\n                \u003Cdiv id=\"comparison_title\" class=\"a-section a-spacing-none\">\n                    \u003Cspan aria-hidden=\"true\" class=\"a-size-base a-color-base a-text-bold\">\n                        This item\n                    \u003C/span>\n                    \u003Cspan aria-hidden=\"true\" class=\"a-size-base a-color-base\">Acer Flagship CB3-532 15.6\" HD Premium Chromebook - Intel Dual-Core Celeron N3060 up to 2.48GH.z, 2GB RAM, 16GB SSD, Wireless AC, HDMI, USB 3.0, Webcam, Chrome OS (Renewed)\u003C/span>\n                \u003C/div>\n                \n                \n            \u003C/div>\n        \u003C/th>\n\n        \n        \n            \u003Cth data-asin=\"B0778F81ZG\" class=\"comparison_image_title_cell comparable_item0\" role=\"columnheader\">\n                \u003Ca class=\"a-link-normal\" target=\"_self\" rel=\"noopener\" href=\"/dp/B0778F81ZG/ref=psdc_13896615011_t1_B06XD3LXXK\">\n                    \u003Cdiv class=\"a-row a-spacing-top-micro\">\n                        \u003Ccenter>\n                            \u003Cimg alt=\"\" src=\"https://images-na.ssl-images-amazon.com/images/I/514RVTNVJmL._SL500_AC_SS350_.jpg\" aria-hidden=\"true\" id=\"comparison_image0\">\n                        \u003C/center>\n                    \u003C/div>\n                    \u003Cdiv id=\"comparison_title0\" class=\"a-row a-spacing-top-small\">\n                        \u003Cspan class=\"a-size-base\">Samsung Electronics XE500C13 Chromebook 3 2GB RAM 16GB SSD Laptop, 11.6\"\u003C/span>\n                    \u003C/div>\n                \u003C/a>\n                \n                \n            \u003C/th>\n        \n            \u003Cth data-asin=\"B07K5H16HX\" class=\"comparison_image_title_cell comparable_item1\" role=\"columnheader\">\n                \u003Ca class=\"a-link-normal\" target=\"_self\" rel=\"noopener\" href=\"/dp/B07K5H16HX/ref=psdc_13896615011_t2_B06XD3LXXK\">\n                    \u003Cdiv class=\"a-row a-spacing-top-micro\">\n                        \u003Ccenter>\n                            \u003Cimg alt=\"\" src=\"https://images-na.ssl-images-amazon.com/images/I/51M0xEksTOL._SL500_AC_SS350_.jpg\" aria-hidden=\"true\" id=\"comparison_image1\">\n                        \u003C/center>\n                    \u003C/div>\n                    \u003Cdiv id=\"comparison_title1\" class=\"a-row a-spacing-top-small\">\n                        \u003Cspan class=\"a-size-base\">2018 Newest Acer CB3-532 15.6\" HD Chromebook with 3x Faster WiFi, Intel Dual-Core Celeron N3060 upto 2.48GHz, 2GB RAM, 16GB SSD,HDMI,USB 3.0, Webcam, 12-Hrs Battery, Chrome OS (Renewed)\u003C/span>\n                    \u003C/div>\n                \u003C/a>\n                \n                \n            \u003C/th>\n        \n            \u003Cth data-asin=\"B07FSFRWS4\" class=\"comparison_image_title_cell comparable_item2\" role=\"columnheader\">\n                \u003Ca class=\"a-link-normal\" target=\"_self\" rel=\"noopener\" href=\"/dp/B07FSFRWS4/ref=psdc_13896615011_t3_B06XD3LXXK\">\n                    \u003Cdiv class=\"a-row a-spacing-top-micro\">\n                        \u003Ccenter>\n                            \u003Cimg alt=\"\" src=\"https://images-na.ssl-images-amazon.com/images/I/51hZUc2Zc3L._SL500_AC_SS350_.jpg\" aria-hidden=\"true\" id=\"comparison_image2\">\n                        \u003C/center>\n                    \u003C/div>\n                    \u003Cdiv id=\"comparison_title2\" class=\"a-row a-spacing-top-small\">\n                        \u003Cspan class=\"a-size-base\">2018 Acer 15.6\" HD WLED Chromebook 15 with 3X Faster WiFi Laptop Computer, Intel Celeron Core N3060 up to 2.48GHz, 4GB RAM, 16GB eMMC, 802.11ac WiFi, Bluetooth 4.2, USB 3.0, HDMI, Chrome OS\u003C/span>\n                    \u003C/div>\n                \u003C/a>\n                \n                \n            \u003C/th>\n        \n            \u003Cth data-asin=\"B07RF1XD36\" class=\"comparison_image_title_cell comparable_item3\" role=\"columnheader\">\n                \u003Ca class=\"a-link-normal\" target=\"_self\" rel=\"noopener\" href=\"/dp/B07RF1XD36/ref=psdc_13896615011_t4_B06XD3LXXK\">\n                    \u003Cdiv class=\"a-row a-spacing-top-micro\">\n                        \u003Ccenter>\n                            \u003Cimg alt=\"\" src=\"https://images-na.ssl-images-amazon.com/images/I/41vMYgD92xL._SL500_AC_SS350_.jpg\" aria-hidden=\"true\" id=\"comparison_image3\">\n                        \u003C/center>\n                    \u003C/div>\n                    \u003Cdiv id=\"comparison_title3\" class=\"a-row a-spacing-top-small\">\n                        \u003Cspan class=\"a-size-base\">Acer Aspire 5 Slim Laptop, 15.6\" Full HD IPS Display, AMD Ryzen 3 3200U, Vega 3 Graphics, 4GB DDR4, 128GB SSD, Backlit Keyboard, Windows 10 in S Mode, A515-43-R19L\u003C/span>\n                    \u003C/div>\n                \u003C/a>\n                \n                \n                    \n                    \u003Cdiv id=\"comparison_zeitgeist_section3\" class=\"a-row a-spacing-none a-spacing-top-micro\">\n                        \n\n\n\n\n\n\n\n\n\n\n\n\u003Ca class=\"comparison_zeitgeist\" href=\"/gp/bestsellers/pc/13896615011/ref=psdczbs_13896615011_t4_B06XD3LXXK\" title=\"Traditional Laptop Computers\">\n    \u003Ci class=\"a-icon a-icon-addon comparison_zeitgeist_badge\">\u003Cspan class=\"a-text-normal\">\n        #1 Best Seller\n    \u003C/span>\u003C/i>\n    \n    \n\u003C/a>\n\n                    \u003C/div>\n                \n            \u003C/th>\n        \n            \u003Cth data-asin=\"B00M9K7L8S\" class=\"comparison_image_title_cell comparable_item4\" role=\"columnheader\">\n                \u003Ca class=\"a-link-normal\" target=\"_self\" rel=\"noopener\" href=\"/dp/B00M9K7L8S/ref=psdc_13896615011_t5_B06XD3LXXK\">\n                    \u003Cdiv class=\"a-row a-spacing-top-micro\">\n                        \u003Ccenter>\n                            \u003Cimg alt=\"\" src=\"https://images-na.ssl-images-amazon.com/images/I/41vDDbUotBL._SL500_AC_SS350_.jpg\" aria-hidden=\"true\" id=\"comparison_image4\">\n                        \u003C/center>\n                    \u003C/div>\n                    \u003Cdiv id=\"comparison_title4\" class=\"a-row a-spacing-top-small\">\n                        \u003Cspan class=\"a-size-base\">Samsung Chromebook (Wi-Fi, 11.6-Inch) - Silver (Renewed)\u003C/span>\n                    \u003C/div>\n                \u003C/a>\n                \n                \n            \u003C/th>\n        \n    \u003C/tr>\n\n    \n    \u003Ctr>\u003C/tr>\n\n    \n    \n    \n    \u003Ctr>\n        \u003Ctd class=\"comparison_table_first_col\">\u003C/td>\n\n        \n        \u003Ctd class=\"comparison_add_to_cart_button\">\n            \n                \n                \n                \n                    \u003Cspan id=\"comparison_add_to_cart_button\" class=\"a-button a-spacing-small a-button-primary\">\u003Cspan class=\"a-button-inner\">\u003Ca id=\"comparison_add_to_cart_button-announce\" href=\"/gp/item-dispatch/ref=psdc_13896615011_a0_B06XD3LXXK?ie=UTF8&amp;itemCount=1&amp;nodeID=541966&amp;offeringID.1=2zvo4%252BojPTeMWroR4HJ3ENBMb3cWiKBSNJljNOBbdvzsP%252Bx6frh8LTmZNp1hcIko7DhCPpR4EGiQn6K36snsD2zLY%252BiGV2oJrHVuuWkfXNgbdZlZTfQdr5B9el4Uyw91hZY1tivPbnO1FJB2ZYxzxrH0bZ7Nccf8&amp;storeID=pc&amp;session-id=137-0530487-6192152&amp;submit.addToCart=addToCart&amp;signInToHUC=0\" class=\"a-button-text\" role=\"button\">Add to Cart\u003C/a>\u003C/span>\u003C/span>\n                \n            \n        \u003C/td>\n\n        \n        \n            \u003Ctd class=\"a-text-left comparison_add_to_cart_button comparable_item0\">\n                \n                    \n                    \n                        \u003Cspan id=\"comparison_add_to_cart_button0\" class=\"a-button a-spacing-small a-button-primary\">\u003Cspan class=\"a-button-inner\">\u003Ca id=\"comparison_add_to_cart_button0-announce\" href=\"/gp/item-dispatch/ref=psdc_13896615011_a1_B06XD3LXXK?ie=UTF8&amp;itemCount=1&amp;nodeID=541966&amp;offeringID.1=yT4%252FpUwJrRGqbpxvWeS6%252BiEhP7SAYRe2FqgJ5BHbI%252FZnvg2j%252B0HAJKqTqRo5knFsFtqNaLqV2061LX4jwO5mAxENrysC5nEs8uY6sDMnmEFZ81kaABMbAJ%252BHdi7BYXZHLaTDuV9hj65ka85AadmQm%252FZDLovsGMfi&amp;storeID=pc&amp;session-id=137-0530487-6192152&amp;submit.addToCart=addToCart&amp;signInToHUC=0\" class=\"a-button-text\" role=\"button\">Add to Cart\u003C/a>\u003C/span>\u003C/span>\n                    \n                \n            \u003C/td>\n        \n            \u003Ctd class=\"a-text-left comparison_add_to_cart_button comparable_item1\">\n                \n                    \n                    \n                        \u003Cspan id=\"comparison_add_to_cart_button1\" class=\"a-button a-spacing-small a-button-primary\">\u003Cspan class=\"a-button-inner\">\u003Ca id=\"comparison_add_to_cart_button1-announce\" href=\"/gp/item-dispatch/ref=psdc_13896615011_a2_B06XD3LXXK?ie=UTF8&amp;itemCount=1&amp;nodeID=541966&amp;offeringID.1=2zvo4%252BojPTc8yx6jmH42aCJHP4lJG7KWPfriaUadaK1xi1XCUV3EGaiYEC2gZgb7UnZkvdfvtaxnz%252F9WHVtmhxmUqD0ENyhLN5pRWDC7oRGeXeKR3lFDd82VEF1b%252B%252FQzubjF1t6T6D5zduKijbdiPQ%253D%253D&amp;storeID=pc&amp;session-id=137-0530487-6192152&amp;submit.addToCart=addToCart&amp;signInToHUC=0\" class=\"a-button-text\" role=\"button\">Add to Cart\u003C/a>\u003C/span>\u003C/span>\n                    \n                \n            \u003C/td>\n        \n            \u003Ctd class=\"a-text-left comparison_add_to_cart_button comparable_item2\">\n                \n                    \n                    \n                        \u003Cspan id=\"comparison_add_to_cart_button2\" class=\"a-button a-spacing-small a-button-primary\">\u003Cspan class=\"a-button-inner\">\u003Ca id=\"comparison_add_to_cart_button2-announce\" href=\"/gp/item-dispatch/ref=psdc_13896615011_a3_B06XD3LXXK?ie=UTF8&amp;itemCount=1&amp;nodeID=541966&amp;offeringID.1=kZpo4U4s5nZE1j81slfoRbb22r97t%252FQpn3OChh9j5SaZmgUy3WRqNx4iIYhWwNpfQWW%252F3kjDYme71eaoX3oPuyu%252FMVVBgCVD3KICHtTMVnfUvFjUSM0XX%252FijjT8otiWx8H3Hzx%252FRsyPmdRNRzIBkNWs9VdcwSOa%252B&amp;storeID=pc&amp;session-id=137-0530487-6192152&amp;submit.addToCart=addToCart&amp;signInToHUC=0\" class=\"a-button-text\" role=\"button\">Add to Cart\u003C/a>\u003C/span>\u003C/span>\n                    \n                \n            \u003C/td>\n        \n            \u003Ctd class=\"a-text-left comparison_add_to_cart_button comparable_item3\">\n                \n                    \n                    \n                        \u003Cspan id=\"comparison_add_to_cart_button3\" class=\"a-button a-spacing-small a-button-primary\">\u003Cspan class=\"a-button-inner\">\u003Ca id=\"comparison_add_to_cart_button3-announce\" href=\"/gp/item-dispatch/ref=psdc_13896615011_a4_B06XD3LXXK?ie=UTF8&amp;itemCount=1&amp;nodeID=541966&amp;offeringID.1=GbZHUxE%252B%252BldRgsiViIjAzNlhb5PGhLzqqcqKXQB9NUudZxcg%252FaZ6A0872FkoKE3qv6l65l88rjT5rGTL06AHfyQKFAQsQYD9NkSF4hhmq4SN8pzXYhH4Ew%253D%253D&amp;storeID=pc&amp;session-id=137-0530487-6192152&amp;submit.addToCart=addToCart&amp;signInToHUC=0\" class=\"a-button-text\" role=\"button\">Add to Cart\u003C/a>\u003C/span>\u003C/span>\n                    \n                \n            \u003C/td>\n        \n            \u003Ctd class=\"a-text-left comparison_add_to_cart_button comparable_item4\">\n                \n                    \n                    \n                        \u003Cspan id=\"comparison_add_to_cart_button4\" class=\"a-button a-spacing-small a-button-primary\">\u003Cspan class=\"a-button-inner\">\u003Ca id=\"comparison_add_to_cart_button4-announce\" href=\"/gp/item-dispatch/ref=psdc_13896615011_a5_B06XD3LXXK?ie=UTF8&amp;itemCount=1&amp;nodeID=541966&amp;offeringID.1=IJY5ZcEQO6Kpugys0JFXat7ZiKm03WCgE1TAvzxKJcam6qlKNnHFLCf%252FMI8gw4M8Yg5Zlq9qq2r0uibl9BliCJ6fZ4kWvivaHPsy37vzMAggafOiGK9CwceawVsknhVfyNM5OfttrsMVsPx3QVMe5vWgkaX6oXct&amp;storeID=pc&amp;session-id=137-0530487-6192152&amp;submit.addToCart=addToCart&amp;signInToHUC=0\" class=\"a-button-text\" role=\"button\">Add to Cart\u003C/a>\u003C/span>\u003C/span>\n                    \n                \n            \u003C/td>\n        \n    \u003C/tr>\n\n    \n    \u003Ctr id=\"comparison_custormer_rating_row\">\n        \n        \n        \n        \n\n        \u003Cth class=\"comparison_attribute_name_column comparison_table_first_col\" role=\"rowheader\">\n            \u003Cspan class=\"a-size-base a-color-base\">Customer Rating\u003C/span>\n        \u003C/th>\n\n        \n        \u003Ctd class=\"comparison_baseitem_column\">\n            \n            \n            \n            \u003Cspan>\n                \u003Cspan class=\"a-declarative\" data-action=\"a-popover\" data-a-popover=\"{&quot;max-width&quot;:&quot;700&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;position&quot;:&quot;triggerBottom&quot;,&quot;url&quot;:&quot; /gp/customer-reviews/widgets/average-customer-review/popover/ref=acr_dpComparsion__popover?contextId=dpComparsion&amp;asin=B06XD3LXXK &quot;,&quot;restoreFocusOnHide&quot;:&quot;false&quot;}\">\n                    \u003Ci class=\"a-icon a-icon-star a-star-4 a-spacing-none\">\u003Cspan class=\"a-icon-alt\">4 out of 5 stars\u003C/span>\u003C/i>\n                \u003C/span>\n                \u003Ca class=\"a-link-normal\" target=\"_self\" rel=\"noopener\" href=\"/product-reviews/B06XD3LXXK/ref=psdc_13896615011_r0_B06XD3LXXK?_encoding=UTF8&amp;showViewpoints=1\">(948)\u003C/a>\n                \u003Cspan class=\"a-letter-space\">\u003C/span>\n            \u003C/span>\n        \u003C/td>\n\n        \n        \n            \u003Ctd class=\"comparison_sim_items_column comparable_item0\">\n                \n                \n                \n                \u003Cspan>\n                    \u003Cspan class=\"a-declarative\" data-action=\"a-popover\" data-a-popover=\"{&quot;max-width&quot;:&quot;700&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;position&quot;:&quot;triggerBottom&quot;,&quot;url&quot;:&quot; /gp/customer-reviews/widgets/average-customer-review/popover/ref=acr_dpComparsion__popover?contextId=dpComparsion&amp;asin=B0778F81ZG &quot;,&quot;restoreFocusOnHide&quot;:&quot;false&quot;}\">\n                        \u003Ci class=\"a-icon a-icon-star a-star-4 a-spacing-none\">\u003Cspan class=\"a-icon-alt\">4 out of 5 stars\u003C/span>\u003C/i>\n                    \u003C/span>\n                    \u003Ca class=\"a-link-normal\" target=\"_self\" rel=\"noopener\" href=\"/product-reviews/B0778F81ZG/ref=psdc_13896615011_r1_B06XD3LXXK?_encoding=UTF8&amp;showViewpoints=1\">(262)\u003C/a>\n                    \u003Cspan class=\"a-letter-space\">\u003C/span>\n                \u003C/span>\n            \u003C/td>\n        \n            \u003Ctd class=\"comparison_sim_items_column comparable_item1\">\n                \n                \n                \n                \u003Cspan>\n                    \u003Cspan class=\"a-declarative\" data-action=\"a-popover\" data-a-popover=\"{&quot;max-width&quot;:&quot;700&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;position&quot;:&quot;triggerBottom&quot;,&quot;url&quot;:&quot; /gp/customer-reviews/widgets/average-customer-review/popover/ref=acr_dpComparsion__popover?contextId=dpComparsion&amp;asin=B07K5H16HX &quot;,&quot;restoreFocusOnHide&quot;:&quot;false&quot;}\">\n                        \u003Ci class=\"a-icon a-icon-star a-star-4 a-spacing-none\">\u003Cspan class=\"a-icon-alt\">4 out of 5 stars\u003C/span>\u003C/i>\n                    \u003C/span>\n                    \u003Ca class=\"a-link-normal\" target=\"_self\" rel=\"noopener\" href=\"/product-reviews/B07K5H16HX/ref=psdc_13896615011_r2_B06XD3LXXK?_encoding=UTF8&amp;showViewpoints=1\">(115)\u003C/a>\n                    \u003Cspan class=\"a-letter-space\">\u003C/span>\n                \u003C/span>\n            \u003C/td>\n        \n            \u003Ctd class=\"comparison_sim_items_column comparable_item2\">\n                \n                \n                \n                \u003Cspan>\n                    \u003Cspan class=\"a-declarative\" data-action=\"a-popover\" data-a-popover=\"{&quot;max-width&quot;:&quot;700&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;position&quot;:&quot;triggerBottom&quot;,&quot;url&quot;:&quot; /gp/customer-reviews/widgets/average-customer-review/popover/ref=acr_dpComparsion__popover?contextId=dpComparsion&amp;asin=B07FSFRWS4 &quot;,&quot;restoreFocusOnHide&quot;:&quot;false&quot;}\">\n                        \u003Ci class=\"a-icon a-icon-star a-star-0 a-spacing-none\">\u003Cspan class=\"a-icon-alt\">0 out of 5 stars\u003C/span>\u003C/i>\n                    \u003C/span>\n                    \u003Ca class=\"a-link-normal\" target=\"_self\" rel=\"noopener\" href=\"/product-reviews/B07FSFRWS4/ref=psdc_13896615011_r3_B06XD3LXXK?_encoding=UTF8&amp;showViewpoints=1\">(0)\u003C/a>\n                    \u003Cspan class=\"a-letter-space\">\u003C/span>\n                \u003C/span>\n            \u003C/td>\n        \n            \u003Ctd class=\"comparison_sim_items_column comparable_item3\">\n                \n                \n                \n                \u003Cspan>\n                    \u003Cspan class=\"a-declarative\" data-action=\"a-popover\" data-a-popover=\"{&quot;max-width&quot;:&quot;700&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;position&quot;:&quot;triggerBottom&quot;,&quot;url&quot;:&quot; /gp/customer-reviews/widgets/average-customer-review/popover/ref=acr_dpComparsion__popover?contextId=dpComparsion&amp;asin=B07RF1XD36 &quot;,&quot;restoreFocusOnHide&quot;:&quot;false&quot;}\">\n                        \u003Ci class=\"a-icon a-icon-star a-star-4-5 a-spacing-none\">\u003Cspan class=\"a-icon-alt\">4 out of 5 stars\u003C/span>\u003C/i>\n                    \u003C/span>\n                    \u003Ca class=\"a-link-normal\" target=\"_self\" rel=\"noopener\" href=\"/product-reviews/B07RF1XD36/ref=psdc_13896615011_r4_B06XD3LXXK?_encoding=UTF8&amp;showViewpoints=1\">(518)\u003C/a>\n                    \u003Cspan class=\"a-letter-space\">\u003C/span>\n                \u003C/span>\n            \u003C/td>\n        \n            \u003Ctd class=\"comparison_sim_items_column comparable_item4\">\n                \n                \n                \n                \u003Cspan>\n                    \u003Cspan class=\"a-declarative\" data-action=\"a-popover\" data-a-popover=\"{&quot;max-width&quot;:&quot;700&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;position&quot;:&quot;triggerBottom&quot;,&quot;url&quot;:&quot; /gp/customer-reviews/widgets/average-customer-review/popover/ref=acr_dpComparsion__popover?contextId=dpComparsion&amp;asin=B00M9K7L8S &quot;,&quot;restoreFocusOnHide&quot;:&quot;false&quot;}\">\n                        \u003Ci class=\"a-icon a-icon-star a-star-3 a-spacing-none\">\u003Cspan class=\"a-icon-alt\">3 out of 5 stars\u003C/span>\u003C/i>\n                    \u003C/span>\n                    \u003Ca class=\"a-link-normal\" target=\"_self\" rel=\"noopener\" href=\"/product-reviews/B00M9K7L8S/ref=psdc_13896615011_r5_B06XD3LXXK?_encoding=UTF8&amp;showViewpoints=1\">(947)\u003C/a>\n                    \u003Cspan class=\"a-letter-space\">\u003C/span>\n                \u003C/span>\n            \u003C/td>\n        \n    \u003C/tr>\n\n    \n    \u003Ctr id=\"comparison_price_row\">\n        \u003Cth class=\"comparison_attribute_name_column comparison_table_first_col\" role=\"rowheader\">\n            \u003Cspan class=\"a-size-base a-color-base\">Price\u003C/span>\n        \u003C/th>\n\n        \n        \u003Ctd class=\"comparison_baseitem_column\">\n            \n                \n                \n                \n                \n                    \n                        \n                            \u003Cspan class=\"a-price\" data-a-size=\"l\" data-a-color=\"base\">\u003Cspan class=\"a-offscreen\">$119.99\u003C/span>\u003Cspan aria-hidden=\"true\">\u003Cspan class=\"a-price-symbol\">$\u003C/span>\u003Cspan class=\"a-price-whole\">119\u003Cspan class=\"a-price-decimal\">\u003C/span>\u003C/span>\u003Cspan class=\"a-price-fraction\">99\u003C/span>\u003C/span>\u003C/span>\n                        \n                        \n                    \n                \n            \n        \u003C/td>\n\n        \n        \n            \u003Ctd class=\"comparison_sim_items_column comparable_item0\">\n                \n                    \n                    \n                    \n                        \n                            \n                                \u003Cspan class=\"a-price\" data-a-size=\"l\" data-a-color=\"base\">\u003Cspan class=\"a-offscreen\">$139.00\u003C/span>\u003Cspan aria-hidden=\"true\">\u003Cspan class=\"a-price-symbol\">$\u003C/span>\u003Cspan class=\"a-price-whole\">139\u003Cspan class=\"a-price-decimal\">\u003C/span>\u003C/span>\u003Cspan class=\"a-price-fraction\">00\u003C/span>\u003C/span>\u003C/span>\n                            \n                            \n                        \n                    \n                \n            \u003C/td>\n        \n            \u003Ctd class=\"comparison_sim_items_column comparable_item1\">\n                \n                    \n                    \n                    \n                        \n                            \n                                \u003Cspan class=\"a-price\" data-a-size=\"l\" data-a-color=\"base\">\u003Cspan class=\"a-offscreen\">$139.99\u003C/span>\u003Cspan aria-hidden=\"true\">\u003Cspan class=\"a-price-symbol\">$\u003C/span>\u003Cspan class=\"a-price-whole\">139\u003Cspan class=\"a-price-decimal\">\u003C/span>\u003C/span>\u003Cspan class=\"a-price-fraction\">99\u003C/span>\u003C/span>\u003C/span>\n                            \n                            \n                        \n                    \n                \n            \u003C/td>\n        \n            \u003Ctd class=\"comparison_sim_items_column comparable_item2\">\n                \n                    \n                    \n                    \n                        \n                            \n                                \u003Cspan class=\"a-price\" data-a-size=\"l\" data-a-color=\"base\">\u003Cspan class=\"a-offscreen\">$196.77\u003C/span>\u003Cspan aria-hidden=\"true\">\u003Cspan class=\"a-price-symbol\">$\u003C/span>\u003Cspan class=\"a-price-whole\">196\u003Cspan class=\"a-price-decimal\">\u003C/span>\u003C/span>\u003Cspan class=\"a-price-fraction\">77\u003C/span>\u003C/span>\u003C/span>\n                            \n                            \n                        \n                    \n                \n            \u003C/td>\n        \n            \u003Ctd class=\"comparison_sim_items_column comparable_item3\">\n                \n                    \n                    \n                    \n                        \n                            \n                                \u003Cspan class=\"a-price\" data-a-size=\"l\" data-a-color=\"base\">\u003Cspan class=\"a-offscreen\">$314.99\u003C/span>\u003Cspan aria-hidden=\"true\">\u003Cspan class=\"a-price-symbol\">$\u003C/span>\u003Cspan class=\"a-price-whole\">314\u003Cspan class=\"a-price-decimal\">\u003C/span>\u003C/span>\u003Cspan class=\"a-price-fraction\">99\u003C/span>\u003C/span>\u003C/span>\n                            \n                            \n                        \n                    \n                \n            \u003C/td>\n        \n            \u003Ctd class=\"comparison_sim_items_column comparable_item4\">\n                \n                    \n                    \n                    \n                        \n                            \n                                \u003Cspan class=\"a-price\" data-a-size=\"l\" data-a-color=\"base\">\u003Cspan class=\"a-offscreen\">$94.13\u003C/span>\u003Cspan aria-hidden=\"true\">\u003Cspan class=\"a-price-symbol\">$\u003C/span>\u003Cspan class=\"a-price-whole\">94\u003Cspan class=\"a-price-decimal\">\u003C/span>\u003C/span>\u003Cspan class=\"a-price-fraction\">13\u003C/span>\u003C/span>\u003C/span>\n                            \n                            \n                        \n                    \n                \n            \u003C/td>\n        \n    \u003C/tr>\n\n    \n\n    \n    \u003Ctr id=\"comparison_sold_by_row\">\n        \u003Cth class=\"comparison_attribute_name_column comparison_table_first_col\" role=\"rowheader\">\n            \u003Cspan class=\"a-size-base a-color-base\">Sold By\u003C/span>\n        \u003C/th>\n\n        \n        \u003Ctd class=\"comparison_baseitem_column\">\n            \n                \n                \n                \n                    \u003Ca class=\"a-spacing-top-small a-link-normal\" target=\"_self\" rel=\"noopener\" href=\"/gp/help/seller/at-a-glance.html/ref=psdc_13896615011_s0_B06XD3LXXK?ie=UTF8&amp;seller=A2WEQERLWJ42N3\">Acer Recertified Store\u003C/a>\n                \n            \n        \u003C/td>\n\n        \n        \n            \u003Ctd class=\"comparison_sim_items_column comparable_item0\">\n                \n                    \n                    \n                        \u003Ca class=\"a-spacing-top-small a-link-normal\" target=\"_self\" rel=\"noopener\" href=\"/gp/help/seller/at-a-glance.html/ref=psdc_13896615011_s1_B06XD3LXXK?ie=UTF8&amp;seller=ASH1H6YCFH4EF\">Electronic Express\u003C/a>\n                    \n                \n            \u003C/td>\n        \n            \u003Ctd class=\"comparison_sim_items_column comparable_item1\">\n                \n                    \n                    \n                        \u003Ca class=\"a-spacing-top-small a-link-normal\" target=\"_self\" rel=\"noopener\" href=\"/gp/help/seller/at-a-glance.html/ref=psdc_13896615011_s2_B06XD3LXXK?ie=UTF8&amp;seller=A1EJVA81XTOFAF\">BuyTek\u003C/a>\n                    \n                \n            \u003C/td>\n        \n            \u003Ctd class=\"comparison_sim_items_column comparable_item2\">\n                \n                    \n                    \n                        \u003Ca class=\"a-spacing-top-small a-link-normal\" target=\"_self\" rel=\"noopener\" href=\"/gp/help/seller/at-a-glance.html/ref=psdc_13896615011_s3_B06XD3LXXK?ie=UTF8&amp;seller=A2MTVV0FMAOCF1&amp;isAmazonFulfilled=1\">BLZ Distributor\u003C/a>\n                    \n                \n            \u003C/td>\n        \n            \u003Ctd class=\"comparison_sim_items_column comparable_item3\">\n                \n                    \n                        \u003Cspan class=\"a-size-base a-color-base\">Amazon.com\u003C/span>\n                    \n                    \n                \n            \u003C/td>\n        \n            \u003Ctd class=\"comparison_sim_items_column comparable_item4\">\n                \n                    \n                    \n                        \u003Ca class=\"a-spacing-top-small a-link-normal\" target=\"_self\" rel=\"noopener\" href=\"/gp/help/seller/at-a-glance.html/ref=psdc_13896615011_s5_B06XD3LXXK?ie=UTF8&amp;seller=A2DVWSKPQ5IJJE&amp;isAmazonFulfilled=1\">SupremeDealsCR\u003C/a>\n                    \n                \n            \u003C/td>\n        \n    \u003C/tr>\n\n    \n    \n        \n            \n                \u003Ctr class=\"comparison_other_attribute_row\">\n                    \n\n\n\n\u003Cth class=\"a-span3 comparison_attribute_name_column comparison_table_first_col\" role=\"rowheader\">\n    \u003Cspan class=\"a-size-base a-color-base\">computer memory size\u003C/span>\n\u003C/th>\n\n\n\u003Ctd class=\"comparison_baseitem_column\">\n    \n    \n        \n        \n            \u003Cspan class=\"a-size-base a-color-base\">2 GB\u003C/span>\n        \n    \n\u003C/td>\n\n\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item0\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">2 GB\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item1\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">4 GB\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item2\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">4 GB\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item3\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">4 GB\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item4\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">2 GB\u003C/span>\n            \n        \n    \u003C/td>\n\n                \u003C/tr>\n            \n                \u003Ctr class=\"comparison_other_attribute_row\">\n                    \n\n\n\n\u003Cth class=\"a-span3 comparison_attribute_name_column comparison_table_first_col\" role=\"rowheader\">\n    \u003Cspan class=\"a-size-base a-color-base\">Processor (CPU) Manufacturer\u003C/span>\n\u003C/th>\n\n\n\u003Ctd class=\"comparison_baseitem_column\">\n    \n    \n        \n        \n            \u003Cspan class=\"a-size-base a-color-base\">Intel\u003C/span>\n        \n    \n\u003C/td>\n\n\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item0\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">Intel\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item1\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">Intel\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item2\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">Intel\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item3\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">AMD\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item4\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">Samsung\u003C/span>\n            \n        \n    \u003C/td>\n\n                \u003C/tr>\n            \n                \u003Ctr class=\"comparison_other_attribute_row\">\n                    \n\n\n\n\u003Cth class=\"a-span3 comparison_attribute_name_column comparison_table_first_col\" role=\"rowheader\">\n    \u003Cspan class=\"a-size-base a-color-base\">Processor (CPU) Speed\u003C/span>\n\u003C/th>\n\n\n\u003Ctd class=\"comparison_baseitem_column\">\n    \n    \n        \n        \n            \u003Cspan class=\"a-size-base a-color-base\">1.6 GHz\u003C/span>\n        \n    \n\u003C/td>\n\n\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item0\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">1.6 GHz\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item1\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">2.48 GHz\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item2\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">1.6 GHz\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item3\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">3.5 GHz\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item4\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">1.7 GHz\u003C/span>\n            \n        \n    \u003C/td>\n\n                \u003C/tr>\n            \n                \u003Ctr class=\"comparison_other_attribute_row\">\n                    \n\n\n\n\u003Cth class=\"a-span3 comparison_attribute_name_column comparison_table_first_col\" role=\"rowheader\">\n    \u003Cspan class=\"a-size-base a-color-base\">Display Resolution Max\u003C/span>\n\u003C/th>\n\n\n\u003Ctd class=\"comparison_baseitem_column\">\n    \n    \n        \n        \n            \u003Cspan class=\"a-size-base a-color-base\">1366 x 768\u003C/span>\n        \n    \n\u003C/td>\n\n\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item0\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">1366 x 768 pixels\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item1\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">1366 x 768\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item2\">\n        \n        \n        \n        \n            \n                \u003Cspan class=\"a-color-secondary\">—\u003C/span>\n            \n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item3\">\n        \n        \n        \n        \n            \n                \u003Cspan class=\"a-color-secondary\">—\u003C/span>\n            \n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item4\">\n        \n        \n        \n        \n            \n                \u003Cspan class=\"a-color-secondary\">—\u003C/span>\n            \n            \n        \n    \u003C/td>\n\n                \u003C/tr>\n            \n                \u003Ctr class=\"comparison_other_attribute_row\">\n                    \n\n\n\n\u003Cth class=\"a-span3 comparison_attribute_name_column comparison_table_first_col\" role=\"rowheader\">\n    \u003Cspan class=\"a-size-base a-color-base\">Display Size\u003C/span>\n\u003C/th>\n\n\n\u003Ctd class=\"comparison_baseitem_column\">\n    \n    \n        \n        \n            \u003Cspan class=\"a-size-base a-color-base\">15.6 in\u003C/span>\n        \n    \n\u003C/td>\n\n\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item0\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">11.6 in\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item1\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">15.6 in\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item2\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">15.6 in\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item3\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">15.6 in\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item4\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">11.6 in\u003C/span>\n            \n        \n    \u003C/td>\n\n                \u003C/tr>\n            \n                \u003Ctr class=\"comparison_other_attribute_row\">\n                    \n\n\n\n\u003Cth class=\"a-span3 comparison_attribute_name_column comparison_table_first_col\" role=\"rowheader\">\n    \u003Cspan class=\"a-size-base a-color-base\">Display Technology\u003C/span>\n\u003C/th>\n\n\n\u003Ctd class=\"comparison_baseitem_column\">\n    \n    \n        \n        \n            \u003Cspan class=\"a-size-base a-color-base\">LED\u003C/span>\n        \n    \n\u003C/td>\n\n\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item0\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">LED-Lit\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item1\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">LED\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item2\">\n        \n        \n        \n        \n            \n                \u003Cspan class=\"a-color-secondary\">—\u003C/span>\n            \n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item3\">\n        \n        \n        \n        \n            \n                \u003Cspan class=\"a-color-secondary\">—\u003C/span>\n            \n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item4\">\n        \n        \n        \n        \n            \n                \u003Cspan class=\"a-color-secondary\">—\u003C/span>\n            \n            \n        \n    \u003C/td>\n\n                \u003C/tr>\n            \n                \u003Ctr class=\"comparison_other_attribute_row\">\n                    \n\n\n\n\u003Cth class=\"a-span3 comparison_attribute_name_column comparison_table_first_col\" role=\"rowheader\">\n    \u003Cspan class=\"a-size-base a-color-base\">Hard Disk Size\u003C/span>\n\u003C/th>\n\n\n\u003Ctd class=\"comparison_baseitem_column\">\n    \n    \n        \n        \n            \u003Cspan class=\"a-size-base a-color-base\">16 GB\u003C/span>\n        \n    \n\u003C/td>\n\n\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item0\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">16 GB\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item1\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">16 GB\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item2\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">16 GB\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item3\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">128 GB\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item4\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">16 GB\u003C/span>\n            \n        \n    \u003C/td>\n\n                \u003C/tr>\n            \n                \u003Ctr class=\"comparison_other_attribute_row\">\n                    \n\n\n\n\u003Cth class=\"a-span3 comparison_attribute_name_column comparison_table_first_col\" role=\"rowheader\">\n    \u003Cspan class=\"a-size-base a-color-base\">Item Dimensions\u003C/span>\n\u003C/th>\n\n\n\u003Ctd class=\"comparison_baseitem_column\">\n    \n    \n        \n        \n            \u003Cspan class=\"a-size-base a-color-base\">10.1 x 15.1 x 1 in\u003C/span>\n        \n    \n\u003C/td>\n\n\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item0\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">11.37 x 0.7 x 8.04 in\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item1\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">14.88 x 9.99 x 0.9 in\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item2\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">15.1 x 10.1 x 1 in\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item3\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">14.31 x 9.74 x 0.71 in\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item4\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">11.4 x 0.66 x 8.21 in\u003C/span>\n            \n        \n    \u003C/td>\n\n                \u003C/tr>\n            \n                \u003Ctr class=\"comparison_other_attribute_row\">\n                    \n\n\n\n\u003Cth class=\"a-span3 comparison_attribute_name_column comparison_table_first_col\" role=\"rowheader\">\n    \u003Cspan class=\"a-size-base a-color-base\">Item Weight\u003C/span>\n\u003C/th>\n\n\n\u003Ctd class=\"comparison_baseitem_column\">\n    \n    \n        \n        \n            \u003Cspan class=\"a-size-base a-color-base\">4.3 lbs\u003C/span>\n        \n    \n\u003C/td>\n\n\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item0\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">2.54 lbs\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item1\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">2.65 lbs\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item2\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">4.41 lbs\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item3\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">3.97 lbs\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item4\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">2.4 lbs\u003C/span>\n            \n        \n    \u003C/td>\n\n                \u003C/tr>\n            \n                \u003Ctr class=\"comparison_other_attribute_row\">\n                    \n\n\n\n\u003Cth class=\"a-span3 comparison_attribute_name_column comparison_table_first_col\" role=\"rowheader\">\n    \u003Cspan class=\"a-size-base a-color-base\">Operating System\u003C/span>\n\u003C/th>\n\n\n\u003Ctd class=\"comparison_baseitem_column\">\n    \n    \n        \n        \n            \u003Cspan class=\"a-size-base a-color-base\">Chrome OS\u003C/span>\n        \n    \n\u003C/td>\n\n\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item0\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">Chrome OS\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item1\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">Chrome OS\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item2\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">Chrome OS\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item3\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">Windows 10 Home\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item4\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">Chrome OS\u003C/span>\n            \n        \n    \u003C/td>\n\n                \u003C/tr>\n            \n                \u003Ctr class=\"comparison_other_attribute_row\">\n                    \n\n\n\n\u003Cth class=\"a-span3 comparison_attribute_name_column comparison_table_first_col\" role=\"rowheader\">\n    \u003Cspan class=\"a-size-base a-color-base\">Processor Count\u003C/span>\n\u003C/th>\n\n\n\u003Ctd class=\"comparison_baseitem_column\">\n    \n    \n        \n        \n            \u003Cspan class=\"a-size-base a-color-base\">1\u003C/span>\n        \n    \n\u003C/td>\n\n\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item0\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">2\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item1\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">2\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item2\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">2\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item3\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">2\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item4\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">2\u003C/span>\n            \n        \n    \u003C/td>\n\n                \u003C/tr>\n            \n                \u003Ctr class=\"comparison_other_attribute_row\">\n                    \n\n\n\n\u003Cth class=\"a-span3 comparison_attribute_name_column comparison_table_first_col\" role=\"rowheader\">\n    \u003Cspan class=\"a-size-base a-color-base\">System RAM Type\u003C/span>\n\u003C/th>\n\n\n\u003Ctd class=\"comparison_baseitem_column\">\n    \n    \n        \n        \n            \u003Cspan class=\"a-size-base a-color-base\">DDR3 SDRAM\u003C/span>\n        \n    \n\u003C/td>\n\n\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item0\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">DDR2 SDRAM\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item1\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">DDR3 SDRAM\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item2\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">DDR3 SDRAM\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item3\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">DDR4 SDRAM\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item4\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">DDR3 SDRAM\u003C/span>\n            \n        \n    \u003C/td>\n\n                \u003C/tr>\n            \n                \u003Ctr class=\"comparison_other_attribute_row\">\n                    \n\n\n\n\u003Cth class=\"a-span3 comparison_attribute_name_column comparison_table_first_col\" role=\"rowheader\">\n    \u003Cspan class=\"a-size-base a-color-base\">Wireless Compatibility\u003C/span>\n\u003C/th>\n\n\n\u003Ctd class=\"comparison_baseitem_column\">\n    \n    \n        \n        \n            \u003Cspan class=\"a-size-base a-color-base\">802.11bgn, Bluetooth\u003C/span>\n        \n    \n\u003C/td>\n\n\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item0\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">802.11ac\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item1\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">802.11ac\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item2\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">Bluetooth, 802.11ac\u003C/span>\n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item3\">\n        \n        \n        \n        \n            \n                \u003Cspan class=\"a-color-secondary\">—\u003C/span>\n            \n            \n        \n    \u003C/td>\n\n    \u003Ctd class=\"comparison_sim_items_column comparable_item4\">\n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-size-base a-color-base\">802.11abg, 802.11n\u003C/span>\n            \n        \n    \u003C/td>\n\n                \u003C/tr>\n            \n        \n        \n    \n\u003C/tbody>\u003C/table>\n\n\n    \n    \n    \n    \n\n\n\u003Cdiv class=\"a-row a-spacing-extra-large\">\u003C/div>\n\n\n\u003Cdiv class=\"a-section a-spacing-small a-spacing-top-small HLCXComparisonJumplinkContent aok-hidden\">\n    \u003Cspan class=\"a-declarative\" data-action=\"hlcx-send-reftag\" data-hlcx-send-reftag=\"{&quot;refTag&quot;:&quot;psdc_13896615011_c_B06XD3LXXK&quot;,&quot;allowLinkDefault&quot;:&quot;true&quot;}\">\n        \u003Ca class=\"a-link-normal HLCXComparisonJumplinkLink\" href=\"#HLCXComparisonWidget_feature_div\">\n            \n                \n                \n                    \u003Cspan>Compare with similar items\u003C/span>\n                \n            \n        \u003C/a>\n    \u003C/span>\n\u003C/div>\n            \n            \n            \n        \n    \n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n  \n\n\n\n        \n        \n        \n  \n\n\n\n\n\n\n\n\n    \n\n\n            \n\n\n            \n\n\n\n\n\n\n            \n\n        \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n        \n\n        \n\n  \n\n\n\n        \n        \n        \n  \n\n\n\n\n\n\n\n\n    \n\n\n            \n\n\n            \n\n\n\n\n\n\n            \n\n        \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\n\n\n\n    \n\n    \n\n  \n\n\n\n        \n        \n        \n  \n\n\n\n\n\n\n\n\n    \n\n\n            \n\n\n            \n\n\n\n\n\n\n            \n\n        \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"renewedProgramDescriptionBtf_feature_div\" class=\"feature\" data-feature-name=\"renewedProgramDescriptionBtf\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n    \n    \u003Cstyle type=\"text/css\">\n        \n        .renewedProgramDescriptionBtfAnchor {\n            margin-top: -80px;\n            padding-bottom: 80px;\n            display:block;\n        }\n\n        #renewedProgramDescriptionBtfContent {\n            color: #333333;\n            word-wrap: break-word;\n            line-height: initial;\n            margin: 0.5em 0px 0em 25px;\n        }\n\n        #renewedProgramDescriptionBtfContent p {\n            margin: 0em 0em 1em 1em;\n        }\n\n        #renewedProgramDescriptionBtfContent p a {\n            text-decoration: none;\n        }\n    \u003C/style>\n\n    \n    \u003Cspan class=\"renewedProgramDescriptionBtfAnchor\" id=\"renewedProgramDescriptionBtf\">\u003C/span>\n\n    \u003Cdiv id=\"renewedProgramDescriptionBtfSection\" class=\"a-section a-spacing-medium a-spacing-top-small\">\n        \u003Chr class=\"a-divider-normal\">\n        \u003Cdiv class=\"bucket\">\n            \u003Ch2>About Amazon Renewed\u003C/h2>\n            \u003Cdiv id=\"renewedProgramDescriptionBtfContent\">\n                \u003Cp>Amazon Renewed is your trusted destination for pre-owned and refurbished products that are inspected and tested to work and look like new. A Renewed supplier who is Amazon-qualified and performance managed, performs a full diagnostic test, replaces any defective parts, and thoroughly cleans the product. The products will have minimal to no signs of wear, no visible cosmetic imperfections when held 12 inches away, and may arrive in a brown or white box with relevant accessories that may be generic.\u003C/p>\u003Cp>\u003Cb>This product is backed by the Amazon Renewed Guarantee\u003C/b>\u003Cbr>Your product is eligible for a replacement or refund within 90 days of receipt if it does not work as expected. Get quick support for claims and free troubleshooting via a single point of contact at Amazon. The guarantee is in conjunction with Amazon’s standard return policy. \u003Ca href=\"/gp/help/customer/display.html/?nodeId=202089470\">Learn more\u003C/a>\u003C/p>\u003Cp>Shop for smartphones, computers, laptops, tablets, home and kitchen appliances, game consoles, office products, and more on \u003Ca href=\"/renewed\">Amazon Renewed\u003C/a>.\u003C/p>\n            \u003C/div>\n        \u003C/div>\n    \u003C/div>\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n  \n\n\n\n        \n        \n        \n  \n\n\n\n\n\n\n\n\n    \n\n\n            \n\n\n            \n\n\n\n\n\n\n            \n\n        \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\n\n\n\u003Ca id=\"productDetails\" name=\"productDetails\">\u003C/a>\n\u003Cdiv id=\"productDetails_feature_div\" class=\"feature\" data-feature-name=\"productDetails\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n      \u003Chr class=\"a-divider-normal\">\n      \n      \u003Cdiv style=\"overflow:hidden;\">\n      \u003Cdiv id=\"prodDetails\" class=\"a-section\">\n            \u003Ch2>\n                  Product information\n            \u003C/h2>\n            \n\n            \u003Cspan>\n                  \n\n\n\n  \n    \n  \n\n\n            \u003C/span>\n\n            \n                  \n                  \n                        \n                        \u003Cdiv class=\"a-row a-spacing-top-base\">\n                              \u003Cdiv class=\"a-column a-span6\">\n                                    \u003Cdiv class=\"a-row a-spacing-base\">\n                                          \n\n\n\n\n\n    \n    \n    \u003Cdiv aria-live=\"polite\" class=\"a-row a-expander-container a-expander-extend-container\">\n    \u003Cdiv class=\"a-row\">\n       \u003Cdiv class=\"a-column a-span6\">\n               \u003Ch1 class=\"a-size-medium a-spacing-small\">Technical Details\u003C/h1>\n       \u003C/div>\n        \n             \u003Ca href=\"javascript:void(0)\" data-action=\"a-expander-toggle\" class=\"a-expander-header a-declarative a-expander-extend-header prodDet-expander-header\" data-a-expander-toggle=\"{&quot;allowLinkDefault&quot;:true, &quot;expand_prompt&quot;:&quot;Expand all&quot;, &quot;collapse_prompt&quot;:&quot;Collapse all&quot;}\">\u003Ci class=\"a-icon a-icon-extender-collapse\">\u003C/i>\u003Cspan class=\"a-expander-prompt\">Collapse all\u003C/span>\u003C/a>\n        \n    \u003C/div>\n    \u003Cdiv aria-expanded=\"true\" class=\"a-expander-content a-expander-extend-content\">\n    \n    \n    \n    \n    \u003Cdiv aria-live=\"polite\" class=\"a-row a-expander-container a-expander-inline-container\">\n    \n    \n        \u003Cdiv class=\"a-row\">\n         \u003Cspan class=\"a-declarative\" data-action=\"mySummaryExpander_1\" data-mysummaryexpander_1=\"{}\">\n         \u003Ca href=\"javascript:void(0)\" data-action=\"a-expander-toggle\" class=\"a-expander-header a-declarative a-expander-inline-header prodDet-heading-alignment a-link-expander\" data-a-expander-toggle=\"{&quot;allowLinkDefault&quot;:true, &quot;expand_prompt&quot;:&quot;&quot;, &quot;collapse_prompt&quot;:&quot;&quot;}\">\u003Ci class=\"a-icon a-icon-collapse\">\u003C/i>\u003Cspan class=\"a-expander-prompt\">\n            \n                 Summary\n            \n          \u003C/span>\u003C/a>\n         \u003C/span>\n         \n            \u003Cspan id=\"summerytext\" class=\"prodDet-summaryText-visible prodDet-heading-alignment\">: Screen Size, Screen Resolution, Graphics Coprocessor, Graphics Card RAM\u003C/span>\n           \n        \u003C/div>\n    \n    \n    \n    \u003Cdiv aria-expanded=\"true\" class=\"a-expander-content a-expander-section-content a-section-expander-inner\">\n    \u003Ctable id=\"productDetails_techSpec_section_1\" class=\"a-keyvalue prodDetTable\" role=\"presentation\">\n         \n           \n           \n           \n           \u003Ctbody>\u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Screen Size\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              15.6 inches\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Screen Resolution\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              1366 x 768\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Max Screen Resolution\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              1366 x 768\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Processor\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              1.6 GHz Intel Celeron D\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  RAM\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              2 GB DDR3 SDRAM\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Memory Speed\n\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              1600 MHz\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Hard Drive\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              16 GB SSD\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Graphics Coprocessor\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              HD Graphics 400\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Chipset Brand\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              Intel\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Card Description\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              Integrated\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Wireless Type\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              802.11bgn, Bluetooth\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Average Battery Life (in hours)\n\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              7 hours\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n          \n        \u003C/tbody>\u003C/table>\n    \u003C/div>\n      \u003C/div>\n    \n    \n    \n    \u003Cdiv aria-live=\"polite\" class=\"a-row a-expander-container a-expander-inline-container\">\n    \n    \n        \u003Cdiv class=\"a-row\">\n         \u003Cspan class=\"a-declarative\" data-action=\"mySummaryExpander_2\" data-mysummaryexpander_2=\"{}\">\n         \u003Ca href=\"javascript:void(0)\" data-action=\"a-expander-toggle\" class=\"a-expander-header a-declarative a-expander-inline-header prodDet-heading-alignment a-link-expander\" data-a-expander-toggle=\"{&quot;allowLinkDefault&quot;:true, &quot;expand_prompt&quot;:&quot;&quot;, &quot;collapse_prompt&quot;:&quot;&quot;}\">\u003Ci class=\"a-icon a-icon-collapse\">\u003C/i>\u003Cspan class=\"a-expander-prompt\">\n            \n                 Other Technical Details\n            \n          \u003C/span>\u003C/a>\n         \u003C/span>\n         \n        \u003C/div>\n    \n    \n    \n    \u003Cdiv aria-expanded=\"true\" class=\"a-expander-content a-expander-section-content a-section-expander-inner\">\n    \u003Ctable id=\"productDetails_techSpec_section_2\" class=\"a-keyvalue prodDetTable\" role=\"presentation\">\n         \n           \n           \n           \n           \u003Ctbody>\u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Brand Name\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              Acer\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Series\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              CB5-532\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Item model number\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              NX.GHJAA.002\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Hardware Platform\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              Flagship Chromebook PC\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Operating System\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              Chrome OS\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Item Weight\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              4.3 pounds\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Product Dimensions\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              10.1 x 15.1 x 1 inches\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Item Dimensions  L x W x H\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              10.1 x 15.1 x 1 inches\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Rear Webcam Resolution\n\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              720 pixels\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Processor Brand\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              Intel\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Processor Count\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              1\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Computer Memory Type\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              DDR3 SDRAM\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Flash Memory Size\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              16 GB\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Hard Drive Interface\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              Solid State\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Power Source\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              AC &amp; Battery\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n           \n           \u003Ctr>\n            \n            \n              \n              \n               \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                  Batteries\n                \u003C/th>\n                \n              \n            \n            \n           \n            \u003Ctd class=\"a-size-base\">\n              1 Lithium Polymer batteries required.\n            \u003C/td>\n            \n           \u003C/tr>\n           \n           \n          \n        \u003C/tbody>\u003C/table>\n    \u003C/div>\n      \u003C/div>\n    \n   \u003C/div>\n \u003C/div>\n\n\n                                    \u003C/div>\n                                    \u003Cdiv class=\"a-row\">\n                                          \n\n\n\n\n\n\n\u003Cscript type=\"text/javascript\">\n    P.when('A', 'ready').execute(function(A) {\n        var asin = \"\";\n        A.declarative('enhanced-content-open-file', 'click', function(event) {\n            var pageAction = event.data;\n            window.ue.count(\"ProductInfo\" + pageAction, 1);\n            A.ajax('/gp/product/ajax-handlers/enhanced-content-popover-metrics.html', {\n                method: 'post',\n                params: {\"asin\": asin, \"pageAction\": pageAction}\n            });\n        });\n    });\n\u003C/script>\n\n                                    \u003C/div>\n                              \u003C/div>\n                              \u003Cdiv class=\"a-column a-span6 a-span-last\">\n                                    \u003Cdiv class=\"a-row a-spacing-base\">\n                                          \n\n\n\n\n  \u003Cdiv id=\"productDetails_db_sections\" class=\"a-section\">\n    \n    \n    \n        \u003Ch1 class=\"a-size-medium a-spacing-small secHeader\">Additional Information\u003C/h1>\n            \n        \n    \n    \n  \u003Cdiv class=\"a-section table-padding\">\n  \u003Ctable id=\"productDetails_detailBullets_sections1\" class=\"a-keyvalue prodDetTable\" role=\"presentation\">\n\n  \n      \n        \n            \n              \n              \n              \n                \n                \u003Ctbody>\u003Ctr>\n                \n                \n                \n                \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                          ASIN\n                \u003C/th>\n                \n                \n                \n                \n                \n                \n                \u003Ctd class=\"a-size-base\">\n                        B06XD3LXXK\n                \u003C/td>\n                \n                \n                \n                \u003C/tr>\n                \n              \n            \n        \n            \n              \n              \n                \n                  \n\n\n\n\n\n\u003Ctr>\n\n  \n  \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">Customer Reviews\u003C/th>\n  \n  \u003Ctd class=\"a-size-base\">\n\n\n\n\n\u003Cstyle type=\"text/css\">\n    /* \n    * Fix for UDP-1061. Average customer reviews has a small extra line on hover \n    * https://omni-grok.amazon.com/xref/src/appgroup/websiteTemplates/retail/SoftlinesDetailPageAssets/udp-intl-lock/src/legacy.css?indexName=WebsiteTemplates#40\n    */\n    .noUnderline a:hover { \n        text-decoration: none; \n    }\n\u003C/style>\n\n\n\n    \n    \n    \n    \n        \n\n        \n\n        \n        \n        \n        \n\t\t\n\t\t\n\t\t\n\t\t\n\t\t        \n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t        \n        \n\n        \u003Cdiv id=\"averageCustomerReviews\" class=\"a-spacing-none\" data-asin=\"B06XD3LXXK\" data-ref=\"dpx_acr_pop_\">\n            \n            \n            \n                \n                \n                    \n                        \n                        \n                            \n\n\n\n\n\n\n\n\n  \n  \n  \n    \n  \n\n\n\n\n\n        \u003Cspan class=\"a-declarative\" data-action=\"acrStarsLink-click-metrics\" data-acrstarslink-click-metrics=\"{}\">\n            \n\n\n\n\n\n    \u003Cspan id=\"acrPopover\" class=\"reviewCountTextLinkedHistogram noUnderline\" title=\"4.1 out of 5 stars\">\n        \u003Cspan class=\"a-declarative\" data-action=\"a-popover\" data-a-popover=\"{&quot;max-width&quot;:&quot;700&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;position&quot;:&quot;triggerBottom&quot;,&quot;url&quot;:&quot;/gp/customer-reviews/widgets/average-customer-review/popover/ref=dpx_acr_pop_?contextId=dpx&amp;asin=B06XD3LXXK&quot;}\">\n            \u003Ca href=\"javascript:void(0)\" class=\"a-popover-trigger a-declarative\">\n                \n\n\u003Ci class=\"a-icon a-icon-star a-star-4\">\u003Cspan class=\"a-icon-alt\">4.1 out of 5 stars\u003C/span>\u003C/i>\n                \n            \u003Ci class=\"a-icon a-icon-popover\">\u003C/i>\u003C/a>\n        \u003C/span>\n        \u003Cspan class=\"a-letter-space\">\u003C/span>\n    \u003C/span>\n\n\n        \u003C/span>\n        \u003Cspan class=\"a-letter-space\">\u003C/span>\n        \n        \n\n        \n\n        \n\n        \n        \n        \n        \n        \n        \n        \n            \n            \n                \u003Cspan class=\"a-declarative\" data-action=\"acrLink-click-metrics\" data-acrlink-click-metrics=\"{}\">\n                    \u003Ca id=\"acrCustomerReviewLink\" class=\"a-link-normal\" href=\"#customerReviews\">\n                        \u003Cspan id=\"acrCustomerReviewText\" class=\"a-size-base\">948 customer reviews\u003C/span>\n                    \u003C/a>\n                \u003C/span>\n            \n                \u003Cscript type=\"text/javascript\">\n                    P.when('A', 'ready').execute(function(A) {\n                        A.declarative('acrLink-click-metrics', 'click', { \"allowLinkDefault\" : true }, function(event){\n                            if(window.ue) {\n                                ue.count(\"acrLinkClickCount\", (ue.count(\"acrLinkClickCount\") || 0) + 1);\n                            }\n                        });\n                    });\n                \u003C/script>\n            \n            \n            \n            \n        \n        \n        \u003Cscript type=\"text/javascript\">\n            P.when('A', 'cf').execute(function(A) {\n                A.declarative('acrStarsLink-click-metrics', 'click', { \"allowLinkDefault\" : true },  function(event){\n                    if(window.ue) {\n                        ue.count(\"acrStarsLinkWithPopoverClickCount\", (ue.count(\"acrStarsLinkWithPopoverClickCount\") || 0) + 1);\n                    }\n                });\n            });\n        \u003C/script>\n\n\n                        \n                    \n                \n            \n        \u003C/div>\n    \n\n\u003Cbr>\n  4.1 out of 5 stars\n  \u003C/td>\n  \u003C/tr>\n\n\n                \n              \n              \n            \n        \n            \n              \n              \n                \n                  \n\n\n\n\n    \u003Ctr>\n    \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n        Best Sellers Rank\n    \u003C/th>\n    \u003Ctd>\n         \u003Cspan>\n              \n                \u003Cspan>#92 in Computers &amp; Accessories (\u003Ca href=\"/gp/bestsellers/pc/ref=pd_zg_ts_pc\">See Top 100 in Computers &amp; Accessories\u003C/a>)\u003C/span>\n        \u003Cbr>\n              \n                \u003Cspan>#10 in \u003Ca href=\"/gp/bestsellers/pc/13896615011/ref=pd_zg_hrsr_pc\">Traditional Laptop Computers\u003C/a>\u003C/span>\n        \u003Cbr>\n              \n        \u003C/span>\n    \u003C/td>\n    \u003C/tr>\n\n\n\n\n                \n              \n              \n            \n        \n            \n              \n              \n              \n                \n                \u003Ctr>\n                \n                \n                \n                \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                          Shipping Weight\n                \u003C/th>\n                \n                \n                \n                \n                \n                \n                \u003Ctd class=\"a-size-base\">\n                        5.9 pounds (\u003Ca href=\"https://www.amazon.com/gp/help/seller/shipping.html/ref=dp_pd_shipping?_encoding=UTF8&amp;seller=ATVPDKIKX0DER&amp;asin=B06XD3LXXK\">View shipping rates and policies\u003C/a>)\n                \u003C/td>\n                \n                \n                \n                \u003C/tr>\n                \n              \n            \n        \n            \n              \n              \n                \n                  \n\n\n\n\n                \n              \n              \n            \n        \n            \n              \n              \n              \n                \n                \u003Ctr>\n                \n                \n                \n                \n                \u003Cth class=\"a-color-secondary a-size-base prodDetSectionEntry\">\n                          Date First Available\n                \u003C/th>\n                \n                \n                \n                \n                \n                \n                \u003Ctd class=\"a-size-base\">\n                        March 1, 2017\n                \u003C/td>\n                \n                \n                \n                \u003C/tr>\n                \n              \n            \n        \n    \n   \u003C/tbody>\u003C/table>\n  \u003C/div>\n  \n  \u003C/div>\n\n\n                                    \u003C/div>\n                                    \u003Cdiv class=\"a-row a-spacing-base\">\n                                          \n\n\n\n\n     \u003Cdiv class=\"a-section\">\n          \n               \u003Ch1 class=\"a-size-medium a-spacing-small secHeader\">\n                    Warranty &amp; Support\n               \u003C/h1>\n               \n          \n          \n               \n                    \n                         \u003Cdiv class=\"a-section table-padding\">\n                              \u003Cspan>Warranty, Labor\u003C/span>:\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Cspan>90 days limited warranty\u003C/span>\u003Cspan>Amazon.com Return Policy\u003C/span>:\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Cspan>You may return any new computer purchased from Amazon.com that is \"dead on arrival,\" arrives in damaged condition, or is still in unopened boxes, for a full refund within 30 days of purchase. Amazon.com reserves the right to test \"dead on arrival\" returns and impose a customer fee equal to 15 percent of the product sales price if the customer misrepresents the condition of the product. Any returned computer that is damaged through customer misuse, is missing parts, or is in unsellable condition due to customer tampering will result in the customer being charged a higher restocking fee based on the condition of the product. Amazon.com will not accept returns of any desktop or notebook computer more than 30 days after you receive the shipment. New, used, and refurbished products purchased from Marketplace vendors are subject to the returns policy of the individual vendor.\u003C/span>\u003Ctable id=\"productDetails_warranty_support_sections\" class=\"a-keyvalue prodDetTable\" role=\"presentation\">\n                                   \n                                        \n                                        \n                                   \n                                        \n                                        \n                                   \n                              \u003C/table>\n                         \u003C/div>\n                    \n                    \n               \n          \n          \n               \u003Cdiv class=\"a-section table-padding\">\n                    \n\n\n\n\n  \n\n  \n     \n     \n         \u003Cstrong>Product Warranty:\u003C/strong> For warranty information about this product, please \u003Ca href=\"/gp/feature.html/ref=dp_warranty_request_3P?ie=UTF8&amp;docId=1002406021\" target=\"_blank\">click here\u003C/a> \n     \n  \n\n\n\n               \u003C/div>\n          \n     \u003C/div>\n\n\n                                    \u003C/div>\n                                    \u003Cdiv class=\"a-row\">\n                                          \n\n\n\n\n      \n      \u003Cdiv class=\"a-section\">\n              \u003Ch1 class=\"a-size-medium a-spacing-small secHeader\">\n                    Feedback\n              \u003C/h1>\n              \u003Cdiv class=\"a-section table-padding\">\n                   \u003Cdiv class=\"a-row\">\n                            \n\n\n\n\n\n \t\n \t\t\n \t\t\n \t\t\t\n        \n     \n     If you are a seller for this product, would you like to \u003Cb>\u003Ca href=\"https://sellercentral.amazon.com/cu/contact-us?categoryId=30002&amp;typeId=30005\">suggest updates through seller support\u003C/a>\u003C/b>?\n\n\n                      \u003C/div>\u003Cdiv class=\"a-row\">\n                            \n\n\n\n\n\n               \n                Would you like to \u003Cb>\u003Ca href=\"#\" id=\"ns_WY2K06V7WEMKTC0K2H7W_hmd_pricing_feedback_trigger_product-detail\" class=\"a-declarative\">tell us about a lower price\u003C/a>\u003C/b>?\n\n             \u003Cscript>\n        \t\tP.now(\"A\",\"tellMeMoreLinkData\").execute(function(A,tellMeMoreLinkData){\n        \t\t\tif(typeof tellMeMoreLinkData !== 'undefined'){\n        \t\t\t\tA.state('lowerPricePopoverData',{\"nsPrefix\":\"ns_WY2K06V7WEMKTC0K2H7W_\",\"path\":\"encodeURI('&originalURI=' + window.location.pathname)\",\"destination\":\"/gp/pdp/pf/pricingFeedbackForm.html/ref=_pfdpb?ie=UTF8&PREFIX=ns_WY2K06V7WEMKTC0K2H7W_&ASIN=B06XD3LXXK&from=product-detail&storeID=pcencodeURI('&originalURI=' + window.location.pathname)\",\"trigger\":\"ns_WY2K06V7WEMKTC0K2H7W_hmd_pricing_feedback_trigger_product-detail\",\"title\":\"Tell Us About a Lower Price\",\"url\":\"/gp/pdp/pf/pricingFeedbackForm.html/ref=_pfdpb?ie=UTF8&PREFIX=ns_WY2K06V7WEMKTC0K2H7W_&ASIN=B06XD3LXXK&from=product-detail&storeID=pc\"});\n        \t\t\t\treturn {\n                                               key:\"pricing-fbW\",\n                                               method: function(){\n                                                       return {\"nsPrefix\":\"ns_WY2K06V7WEMKTC0K2H7W_\",\"path\":\"encodeURI('&originalURI=' + window.location.pathname)\",\"destination\":\"/gp/pdp/pf/pricingFeedbackForm.html/ref=_pfdpb?ie=UTF8&PREFIX=ns_WY2K06V7WEMKTC0K2H7W_&ASIN=B06XD3LXXK&from=product-detail&storeID=pcencodeURI('&originalURI=' + window.location.pathname)\",\"trigger\":\"ns_WY2K06V7WEMKTC0K2H7W_hmd_pricing_feedback_trigger_product-detail\",\"title\":\"Tell Us About a Lower Price\",\"url\":\"/gp/pdp/pf/pricingFeedbackForm.html/ref=_pfdpb?ie=UTF8&PREFIX=ns_WY2K06V7WEMKTC0K2H7W_&ASIN=B06XD3LXXK&from=product-detail&storeID=pc\"};\n                                               }\n                                        }\n        \t\t\t}\n        \t\t\telse{\n        \t\t\t\tP.when(\"A\").register(\"tellMeMoreLinkData\",function(A){\n        \t\t\t\t    A.state('lowerPricePopoverData',{\"nsPrefix\":\"ns_WY2K06V7WEMKTC0K2H7W_\",\"path\":\"encodeURI('&originalURI=' + window.location.pathname)\",\"destination\":\"/gp/pdp/pf/pricingFeedbackForm.html/ref=_pfdpb?ie=UTF8&PREFIX=ns_WY2K06V7WEMKTC0K2H7W_&ASIN=B06XD3LXXK&from=product-detail&storeID=pcencodeURI('&originalURI=' + window.location.pathname)\",\"trigger\":\"ns_WY2K06V7WEMKTC0K2H7W_hmd_pricing_feedback_trigger_product-detail\",\"title\":\"Tell Us About a Lower Price\",\"url\":\"/gp/pdp/pf/pricingFeedbackForm.html/ref=_pfdpb?ie=UTF8&PREFIX=ns_WY2K06V7WEMKTC0K2H7W_&ASIN=B06XD3LXXK&from=product-detail&storeID=pc\"});\n                                            return {\n                                                   key:\"pricing-fbW\",\n                                                   method: function(){\n                                                           return {\"nsPrefix\":\"ns_WY2K06V7WEMKTC0K2H7W_\",\"path\":\"encodeURI('&originalURI=' + window.location.pathname)\",\"destination\":\"/gp/pdp/pf/pricingFeedbackForm.html/ref=_pfdpb?ie=UTF8&PREFIX=ns_WY2K06V7WEMKTC0K2H7W_&ASIN=B06XD3LXXK&from=product-detail&storeID=pcencodeURI('&originalURI=' + window.location.pathname)\",\"trigger\":\"ns_WY2K06V7WEMKTC0K2H7W_hmd_pricing_feedback_trigger_product-detail\",\"title\":\"Tell Us About a Lower Price\",\"url\":\"/gp/pdp/pf/pricingFeedbackForm.html/ref=_pfdpb?ie=UTF8&PREFIX=ns_WY2K06V7WEMKTC0K2H7W_&ASIN=B06XD3LXXK&from=product-detail&storeID=pc\"};\n                                                   }\n                                            }\n                                        });\n        \t\t\t}\n        \t\t});\n            \u003C/script>\n\n\n\n\n                      \u003C/div>\u003Ctable id=\"productDetails_feedback_sections\" class=\"a-keyvalue prodDetTable\" role=\"presentation\">\n                      \n                      \n                  \u003C/table>\n               \u003C/div>\n      \u003C/div>\n\n\n                                    \u003C/div>\n                              \u003C/div>\n                        \u003C/div>\n                  \n            \n      \u003C/div>\n  \u003C/div>\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n  \n    \n\n      \n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Clink rel=\"stylesheet\" href=\"https://images-na.ssl-images-amazon.com/images/I/51SB+nZNuDL.css?AUIClients/VSERelatedVideosClientAssets\">\u003Clink rel=\"stylesheet\" href=\"https://images-na.ssl-images-amazon.com/images/I/51NfLtDS9mL._RC|11tjO95dvNL.css,01ki+0GyU3L.css_.css?AUIClients/Brila\">\u003Cdiv id=\"vse-related-videos\" class=\"a-section\">\u003Cdiv id=\"vse-rel-videos-carousel\" data-a-carousel-options=\"{&quot;minimum_gutter_width&quot;:15,&quot;show_partial_next&quot;:false,&quot;name&quot;:&quot;vse-rel-videos-carousel&quot;,&quot;first_item_flush_left&quot;:false}\" class=\"a-begin a-carousel-container a-carousel-display-stretchyGoodness a-carousel-transition-slide vse-related-videos-container bucket\">\u003Cinput autocomplete=\"on\" type=\"hidden\" class=\"a-carousel-firstvisibleitem\">\u003Cdiv data-element-id=\"carousel-header\" class=\"a-row a-carousel-header-row a-size-large a-text-normal\">\u003Cdiv class=\"a-column a-span8\">\u003Ch2 class=\"a-carousel-heading\">Related video shorts\u003C/h2>\u003Ca data-element-id=\"video-upload-link\" aria-hidden=\"true\" class=\"a-size-base a-link-normal vse-upload-link\" title=\"UGC upload link\" tabindex=\"-1\" href=\"/creatorhub/video/upload?productASIN=B06XD3LXXK&amp;referringURL=ZHAvQjA2WEQzTFhYSw%3D%3D&amp;ref=RVSW\">Upload your video\u003C/a>\u003C/div>\u003Cdiv class=\"a-column a-span4 a-span-last a-text-right\">\u003Cspan class=\"a-carousel-pagination a-size-base\">\u003Cspan class=\"a-carousel-page-count\">Page \u003Cspan class=\"a-carousel-page-current\">1\u003C/span> of \u003Cspan class=\"a-carousel-page-max\">1\u003C/span>\u003C/span>\u003Cspan class=\"a-carousel-restart-container\">\u003Cspan class=\"a-text-separator\">\u003C/span>\u003Ca class=\"a-carousel-restart\" href=\"#\">Start Over\u003C/a>\u003C/span>\u003Cspan class=\"a-carousel-accessibility-page-info a-offscreen\" aria-live=\"polite\">Page 1 of 1\u003C/span>\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"a-row a-carousel-controls a-carousel-row a-carousel-has-buttons\">\u003Cdiv class=\"a-carousel-row-inner\">\u003Cdiv class=\"a-carousel-col a-carousel-left\">\u003Ca class=\"a-button a-button-image a-carousel-button a-carousel-goto-prevpage\" tabindex=\"0\" href=\"#\" id=\"a-autoid-15\">\u003Cspan class=\"a-button-inner\">\u003Ci class=\"a-icon a-icon-previous\">\u003Cspan class=\"a-icon-alt\">Previous page\u003C/span>\u003C/i>\u003C/span>\u003C/a>\u003C/div>\u003Cdiv class=\"a-carousel-col a-carousel-center\">\u003Cdiv class=\"a-carousel-viewport\">\u003Col class=\"a-carousel\" role=\"list\">\u003Cli class=\"a-carousel-card vse-video-card\" style=\" width:160px; \" role=\"listitem\" aria-setsize=\"1\" aria-posinset=\"1\">\u003Cdiv data-asin=\"88eaa4f2a7e24b57bedaca7efefdc373\" data-duration=\"3:43\" data-element-id=\"video-carousel-item\" data-enable-associate-tag=\"true\" data-osp-product=\"\" data-product-asin=\"B06XD3LXXK\" data-reference-title=\"\" data-reference-url=\"\" data-related-products=\"\" data-sponsored=\"false\" data-title=\"Laptop buying guide \" data-vendor-code=\"CPB5L\" data-vendor-name=\"Consumer Reports\" data-vendor-tracking-id=\"\" data-video-ref-id=\"\" data-video-url=\"https://d1y6jrbzotnyjg.cloudfront.net/CPB5L/88eaa4f2a7e24b57bedaca7efefdc373/V41/640efd8c4d1d4382be72ff7f9e277ffd/ShortForm-Generic-480p-16-9-1409173089793-rpcbe5.mp4?Expires=1570322055&amp;Signature=JBjjQGpzHeiuj6h6EMtSMLq94hK2nyVC7banGzXF4BojsiyZOp4nVXhkMWK6~uxsvB3qQABG8pAnCEk4q1CBsO7trqKgL~W6KG2BlKODTVGZeeuePLjlh~vjKEHJl7MnZ6a5YfwCRJ7VdZMPQ2quzOKjbBIl5bLkaD1F23jC~rY_&amp;Key-Pair-Id=APKAJ62XWKZ35EOVO4XA\" class=\"a-section vse-video-item\">\u003Ca data-redirect-url=\"/vdp/88eaa4f2a7e24b57bedaca7efefdc373\" aria-hidden=\"true\" class=\"a-link-normal vse-carousel-item\" title=\"Laptop buying guide \" tabindex=\"-1\" href=\"/vdp/88eaa4f2a7e24b57bedaca7efefdc373?ref=dp_vse_rvc0\">\u003Cdiv class=\"vse-video-image \" data-img=\"https://images-na.ssl-images-amazon.com/images/I/91CUmdGnqDL.jpg_SR160,90_BG0,0,0_PKvse-overlay-play2.jpg\" id=\"\" data-element-id=\"video-thumbnail\">\u003Cimg alt=\"\" src=\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/grey-pixel.gif\" class=\"a-lazy-loaded\" height=\"90px\" width=\"160px\" data-a-hires=\"https://images-na.ssl-images-amazon.com/images/I/91CUmdGnqDL.jpg_SR160,90_BG0,0,0_PKvse-overlay-play2.jpg\" data-src=\"https://images-na.ssl-images-amazon.com/images/I/91CUmdGnqDL.jpg_SR160,90_BG0,0,0_PKvse-overlay-play2.jpg\">\u003Cnoscript>\u003Cimg alt=\"\" src=\"https://images-na.ssl-images-amazon.com/images/I/91CUmdGnqDL.jpg_SR160,90_BG0,0,0_PKvse-overlay-play2.jpg\" height=\"90px\" width=\"160px\">\u003C/noscript>\u003Cp data-element-id=\"video-duration\" class=\"a-size-mini vse-video-duration vse-no-margin\"> 3:43 \u003C/p>\u003C/div>\u003Cdiv class=\"vse-video-content\">\u003Cdiv class=\"vse-video-title\">\u003Ch4 data-element-id=\"video-title\" class=\"a-size-base vse-video-title-text\"> Laptop buying guide \u003C/h4>\u003C/div>\u003Cdiv class=\"vse-video-labels\">\u003Cspan data-element-id=\"video-vendor-name\" class=\"a-size-mini vse-video-vendorname\">Consumer Reports\u003C/span>\u003C/div>\u003C/div>\u003C/a>\u003C/div>\u003C/li>\u003C/ol>\u003C/div>\u003C/div>\u003Cdiv class=\"a-carousel-col a-carousel-right\">\u003Ca class=\"a-button a-button-image a-carousel-button a-carousel-goto-nextpage\" tabindex=\"0\" href=\"#\" id=\"a-autoid-16\">\u003Cspan class=\"a-button-inner\">\u003Ci class=\"a-icon a-icon-next\">\u003Cspan class=\"a-icon-alt\">Next page\u003C/span>\u003C/i>\u003C/span>\u003C/a>\u003C/div>\u003C/div>\u003C/div>\u003Cspan class=\"vse-ib-divider-header-string aok-hidden\">\u003C/span>\u003Cspan class=\"a-end aok-hidden\">\u003C/span>\u003C/div>\u003Cimg alt=\"\" src=\"https://images-na.ssl-images-amazon.com/images/G/01/vse/Discovery/vse_play_icon_2x.png\" class=\"aok-hidden\">\u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;vse-dp-rv-config&quot;}\">{\"showMobileBigCard\":false,\"isPreventDefault\":true,\"refTagPrefix\":\"dp_vse_rvc\",\"autoplayTriggered\":false,\"isVerticalScroll\":false,\"showAdPlacement\":false,\"carouselName\":\"vse-rel-videos-carousel\",\"showRelatedProducts\":false,\"showVideoCounts\":false,\"autoplay\":false,\"hasStickyHeaders\":false,\"showVideoVotes\":false}\u003C/script>\u003Cspan class=\"a-declarative\" data-action=\"a-modal\" data-a-modal=\"{&quot;padding&quot;:&quot;none&quot;,&quot;hideHeader&quot;:true,&quot;closeButton&quot;:false,&quot;name&quot;:&quot;vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3&quot;,&quot;popoverLabel&quot;:&quot;vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3&quot;}\" id=\"vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3popover-trigger\">\u003C/span>\u003Cdiv class=\"a-popover-preload\" id=\"a-popover-vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3\">\u003Cbutton data-action=\"a-popover-close\" class=\" a-button-close a-declarative a-button-top-right vse-close-button\" aria-label=\"Close\">\u003Ci class=\"a-icon vse-icon-close\">\u003C/i>\u003C/button>\u003Cdiv id=\"vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3-wrapper\" data-css-class=\" vse-no-carousel vse-share-widget vse-vertical-lightbox\" data-element-id=\"rv-popover-container\" class=\"a-section\">\u003Cdiv class=\"a-section vse-lb-container\">\u003Cdiv class=\"a-section vse-lightbox-tab\">\u003Cspan class=\"a-size-base\">VIDEOS\u003C/span>\u003C/div>\u003Cdiv class=\"a-fixed-right-grid\">\u003Cdiv class=\"a-fixed-right-grid-inner\" style=\"padding-right:0px\">\u003Cdiv data-element-id=\"video-content-panel\" class=\"a-fixed-right-grid-col vse-lb-left a-col-left\" style=\"padding-right:0%;float:left;\">\u003Cdiv class=\"vse-fixedLayout\">\u003Cdiv class=\"vse-lightbox-player-container\">\u003Cdiv id=\"vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3-awaplayer\" class=\"vse-lightbox-player\">\u003C/div>\u003Cdiv id=\"vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3-feedback-container\" class=\"a-section vse-fb-trigger\">\u003C/div>\u003C/div>\u003C/div>\u003Cdiv class=\"a-section vse-video-action-strip\">\u003Cdiv class=\"vse-helpful-votes\">\u003C/div>\u003Cdiv class=\"vse-socialShare-trigger vse-rvs-share-video-container\">\u003Cspan class=\"a-declarative\" data-action=\"a-popover\" data-a-popover=\"{&quot;padding&quot;:&quot;none&quot;,&quot;closeButton&quot;:false,&quot;closeButtonLabel&quot;:&quot;vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3-socialshare-close&quot;,&quot;activate&quot;:&quot;onclick&quot;,&quot;name&quot;:&quot;vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3-socialshare-popover&quot;,&quot;position&quot;:&quot;triggerTop&quot;,&quot;popoverLabel&quot;:&quot;vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3-socialshare-popover-label&quot;}\" id=\"vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3-socialshare-trigger\">\u003Ci class=\"vse-share-icon\" data-element-id=\"vse-share-icon\">\u003C/i>\u003C/span>\u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;vse-rvp-social-share&quot;}\">{\"image\":\"image_url\",\"shareButton\":\"SHARE\",\"clientPrefix\":\"\",\"description\":\"video_description\",\"id\":\"vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3-socialshare\",\"title\":\"video_title\",\"pageLevelData\":{\"deviceTypeRef\":\"dt\",\"clientRef\":\"lb\"},\"shareWithFriendsPrompt\":\"Share this video with friends\",\"url\":\"https://www.amazon.com/gp/product/B06XD3LXXK\"}\u003C/script>\u003Cdiv class=\"a-popover-preload\" id=\"a-popover-vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3-socialshare-popover\">\u003Cdiv id=\"vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3-socialshare-popover\" class=\"a-section vse-socialshare vse-ss-popover\">\u003Cdiv id=\"vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3-socialshare-email\" class=\"vse-social-icon\">\u003Cspan class=\"a-declarative\" data-action=\"vse-rvp-swf-share-network\" data-vse-rvp-swf-share-network=\"{&quot;pageStateId&quot;:&quot;vse-rvp-social-share&quot;,&quot;network&quot;:&quot;email&quot;}\" id=\"vse-share-email\">\u003Ci class=\"a-icon a-icon-share-email vse-socialshare-icons\" role=\"img\">\u003C/i>\u003C/span>\u003C/div>\u003Cdiv id=\"vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3-socialshare-facebook\" class=\"vse-social-icon\">\u003Cspan class=\"a-declarative\" data-action=\"vse-rvp-swf-share-network\" data-vse-rvp-swf-share-network=\"{&quot;pageStateId&quot;:&quot;vse-rvp-social-share&quot;,&quot;network&quot;:&quot;facebook&quot;}\" id=\"vse-share-facebook\">\u003Ci class=\"a-icon a-icon-share-facebook vse-socialshare-icons\" role=\"img\">\u003C/i>\u003C/span>\u003C/div>\u003Cdiv id=\"vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3-socialshare-twitter\" class=\"vse-social-icon\">\u003Cspan class=\"a-declarative\" data-action=\"vse-rvp-swf-share-network\" data-vse-rvp-swf-share-network=\"{&quot;pageStateId&quot;:&quot;vse-rvp-social-share&quot;,&quot;network&quot;:&quot;twitter&quot;}\" id=\"vse-share-twitter\">\u003Ci class=\"a-icon a-icon-share-twitter vse-socialshare-icons\" role=\"img\">\u003C/i>\u003C/span>\u003C/div>\u003Cdiv id=\"vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3-socialshare-pinterest\" class=\"vse-social-icon\">\u003Cspan class=\"a-declarative\" data-action=\"vse-rvp-swf-share-network\" data-vse-rvp-swf-share-network=\"{&quot;pageStateId&quot;:&quot;vse-rvp-social-share&quot;,&quot;network&quot;:&quot;pinterest&quot;}\" id=\"vse-share-pinterest\">\u003Ci class=\"a-icon a-icon-share-pinterest vse-socialshare-icons\" role=\"img\">\u003C/i>\u003C/span>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv class=\"a-section vse-lb-video-metadata\">\u003Cdiv class=\"a-section vse-table vse-video-title a-size-medium\">\u003Cdiv class=\"a-section vse-tc-left video-title-container-left\">\u003Cdiv class=\"a-section video-title-ellipsis-wrapper\">\u003Cspan data-element-id=\"rv-content-title-prefix\" class=\"a-size-medium vse-content-title-prefix\">\u003C/span>\u003Cspan data-element-id=\"rv-content-title\" class=\"vse-content-title\">\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"a-section vse-tc-right video-title-container-right a-size-mini\">\u003Ca id=\"vse-customer-review-link\" class=\"a-link-normal vse-customer-review-container\" target=\"_blank\" rel=\"noopener\" href=\"#\">\u003C/a>\u003C/div>\u003C/div>\u003Cdiv data-element-id=\"rv-content-provider\" class=\"a-section vse-video-author vse-no-margin a-size-mini\">\u003C/div>\u003Cdiv class=\"vse-video-info\">\u003C/div>\u003C/div>\u003C/div>\u003Cdiv class=\"a-fixed-right-grid-col vse-lb-right a-col-right\" style=\"width:0px;margin-right:-0px;float:left;\">\u003C/div>\u003C/div>\u003C/div>\u003Cdiv id=\"vse-related-products-cache-hidden\" class=\"a-section aok-hidden\">\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;vse-dp-vl-config&quot;}\">{\"playerConfig\":{\"requestMetadata\":{\"marketplaceId\":\"ATVPDKIKX0DER\",\"clientId\":\"VSE-US\",\"method\":\"desktop_web.Detail.vse_lb\",\"requestId\":\"WY2K06V7WEMKTC0K2H7W\",\"pageAsin\":\"B06XD3LXXK\",\"sessionId\":\"137-0530487-6192152\"},\"initialVideo\":\"\",\"useBuyBox\":false,\"persistControlsDuringAdUX\":false,\"sushiMetricsConfig\":{\"isRobot\":false,\"clientId\":\"VSE-US\",\"videoAsinList\":\"\",\"weblabIds\":\"VSE_BRILA_TWITCH_162493:C,VSE_SUSHI_METRICS_185493:T1,VSE_RVP_ASSOCIATE_TAG_190786:T1,AMAZONLIVE_VSE_INTEGRATION_188927:C,VSE_GATE_INVALID_REQUEST_INVESTIGATION_198897:C,VSE_BRILA_HEARTBEAT_200493:T1,VSE_VALUE_OF_VIDEOS_RVS_200328:C,VSE_VALUE_OF_VIDEOS_201439:C,VSE_DISTRIBUTION_HLS_VIDEOS_221703:T1,VSE_RVP_OSP_ATTRIBUTION_233627:C\",\"eventSource\":\"Player\",\"sessionId\":\"137-0530487-6192152\",\"refMarkers\":\"\",\"placementContext\":\"desktop_web.Detail.vse_lb\",\"marketplaceId\":\"ATVPDKIKX0DER\",\"isInternal\":false,\"endpoint\":\"https://unagi-na.amazon.com/1/events/com.amazon.eel.vse.metrics.prod.events.test\",\"requestId\":\"WY2K06V7WEMKTC0K2H7W\",\"pageAsin\":\"B06XD3LXXK\",\"customerId\":\"0\",\"sessionType\":1},\"useCarousel\":false,\"airyVersion\":\"VideoJS\",\"videoAds\":{\"minCreativeDurationForSkipOffset\":20,\"keyValuePairs\":{},\"profile\":\"amzn_live_browser\",\"serverUrl\":\"https://v.amazon-adsystem.com/va/fw/getAds\",\"networkId\":\"375600\",\"isEngineEnabled\":true,\"sectionId\":\"avod.amazoncom.shorts.pc.lightbox\",\"skipOffset\":5},\"disabledViewIds\":[\"replayHint\"],\"languagePreferenceStrings\":{\"skipAd\":\"Skip ad\",\"learnMore\":\"Learn more\",\"skipIn\":\"Skip in \",\"adLabel\":\"Advertisement\"},\"customerId\":\"0\",\"twitchCore\":false,\"containerId\":\"vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3-awaplayer\"},\"mShop\":false,\"socialShareId\":\"vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3-socialshare\",\"displayActiveVideoDetails\":false,\"productCarouselId\":\"ivProductCarousel-11bdf87b-4c42-4041-81d7-b4ddaf72820b\",\"flatFeedbackPageContext\":{\"marketplaceID\":\"ATVPDKIKX0DER\",\"requestId\":\"WY2K06V7WEMKTC0K2H7W\",\"customerId\":\"0\",\"page\":\"DetailPage\",\"placement\":\"RVP\",\"locale\":\"en_US\"},\"popoverTriggerId\":\"vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3popover-trigger\",\"showRelatedProducts\":false,\"popoverName\":\"vse-dp-lightbox-d9088d4b-4744-41af-adbc-ed6f0f087da3\",\"displayCarousel\":false,\"recordProductMetrics\":false,\"autoplay\":false,\"showProductCarousel\":false,\"flatFeedbackComponentConfig\":{\"features\":{\"features\":{\"endpoint\":\"https://unagi-na.amazon.com/1/events/com.amazon.eel.vse.curation.contentanalysisworkflow.feedback.prod.nexus\",\"infringementUrl\":\"/gp/help/reports/infringement\",\"pageState\":\"vse_lb_fb\",\"context\":\"vse_lb_fb\",\"reftagprefix\":\"vse_lb_fb\"}},\"id\":\"div-feedback\",\"binder\":\"feedback\",\"type\":\"feedback\"},\"useVerticalLayout\":true,\"customerReview\":\"Customer Review\",\"pageAsin\":\"B06XD3LXXK\",\"useSecondaryView\":false,\"socialShareActionName\":\"a-popover\",\"featProductsUrl\":\"https://unagi-na.amazon.com/1/events/com.amazon.eel.vse.metrics.prod.monetization\",\"showShareWidget\":true,\"showSegments\":false,\"isMobile\":false,\"showVideoVotes\":false}\u003C/script>\u003Cdiv id=\"vse-spinner\" class=\"a-spinner-wrapper aok-hidden\">\u003Cspan class=\"a-spinner a-spinner-medium\">\u003C/span>\u003C/div>\u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;vse-dp-rvs-sushimetricsconfig&quot;}\">{\"isRobot\":false,\"clientId\":\"\",\"videoAsinList\":\"\",\"weblabIds\":\"VSE_BRILA_TWITCH_162493:C,VSE_SUSHI_METRICS_185493:T1,VSE_RVP_ASSOCIATE_TAG_190786:T1,AMAZONLIVE_VSE_INTEGRATION_188927:C,VSE_GATE_INVALID_REQUEST_INVESTIGATION_198897:C,VSE_BRILA_HEARTBEAT_200493:T1,VSE_VALUE_OF_VIDEOS_RVS_200328:C,VSE_VALUE_OF_VIDEOS_201439:C,VSE_DISTRIBUTION_HLS_VIDEOS_221703:T1,VSE_RVP_OSP_ATTRIBUTION_233627:C\",\"eventSource\":\"RVSCarousel\",\"sessionId\":\"137-0530487-6192152\",\"refMarkers\":\"\",\"placementContext\":\"desktop_web.Detail.vse_lb\",\"marketplaceId\":\"ATVPDKIKX0DER\",\"isInternal\":false,\"endpoint\":\"https://unagi-na.amazon.com/1/events/com.amazon.eel.vse.metrics.prod.events.test\",\"requestId\":\"WY2K06V7WEMKTC0K2H7W\",\"pageAsin\":\"B06XD3LXXK\",\"customerId\":\"0\",\"sessionType\":1}\u003C/script>\u003C/div>\u003Cscript type=\"text/javascript\">(function(f) {var _np=(window.P._namespace(\"vse-related-video-shorts\"));if(_np.guardFatal){_np.guardFatal(f)(_np);}else{f(_np);}}(function(P) {\n      \n\n\n\n\n\n\ntry {\n    var rvpStartTime = Date.now();\n    var isMetricRecorded = false;\n    var _metricViewLoaded = 'vse:csm:vse-rel-videos-carousel:inview:notloaded:count';\n    var _metricTimeToLoaded = 'vse:csm:vse-rel-videos-carousel:inview:loaded:time';\n    var _metricTimeToNotLoaded = 'vse:csm:vse-rel-videos-carousel:inview:notloaded:time';\n    var _metricTimeToView = 'vse:csm:vse-rel-videos-carousel:inview:time';\n    var _universalSushiEndpoint = \"https://unagi-na.amazon.com/1/events/com.amazon.eel.vse.metrics.prod.events.test\";\n\n    P.when('A', 'ready').execute(function(A) {\n        function _isScrolledIntoView (el) {\n            var $elem = A.$(el);\n            //Used specific property because A.$() returns an object with properties\n            if (($elem.offset() !== null)) {\n                var $window = A.$(window);\n                var screenViewTop = $window.scrollTop();\n                var screenViewBottom = screenViewTop + $window.height();\n                var elemTop = $elem.offset().top;\n                var elemBottom = elemTop + $elem.height();\n                return  ((elemBottom \u003C= screenViewBottom) && (elemTop >= screenViewTop))\n            } else {\n                return false;\n            }\n        }\n        \n        var makeSushiPayloadBuilder = function () {\n            var builder = function (metricData) {\n                metricData.eventId = (Math.random() * 10000000000000000000).toString();\n                metricData.eventSource = \"RVSCarousel\";\n                metricData.requestId = \"WY2K06V7WEMKTC0K2H7W\";\n                metricData.sessionId = \"137-0530487-6192152\";\n                metricData.sessionType = 1; // Dummy value for load test\n                metricData.customerId = \"0\";\n\n                metricData.placementContext = \"desktop_web.Detail.vse_lb\";\n                metricData.titleSessionId = 0;\n                metricData.videoAsin = 0;\n                metricData.pageAsin = \"B06XD3LXXK\";\n                metricData.userAgentData = navigator.userAgent;\n                metricData.marketplaceId = \"ATVPDKIKX0DER\";\n\n                metricData.refMarkers = \"\";\n                metricData.weblabIds = \"VSE_BRILA_TWITCH_162493:C,VSE_SUSHI_METRICS_185493:T1,VSE_RVP_ASSOCIATE_TAG_190786:T1,AMAZONLIVE_VSE_INTEGRATION_188927:C,VSE_GATE_INVALID_REQUEST_INVESTIGATION_198897:C,VSE_BRILA_HEARTBEAT_200493:T1,VSE_VALUE_OF_VIDEOS_RVS_200328:C,VSE_VALUE_OF_VIDEOS_201439:C,VSE_DISTRIBUTION_HLS_VIDEOS_221703:T1,VSE_RVP_OSP_ATTRIBUTION_233627:C\";\n                metricData.isInternal = \"false\";\n                metricData.isRobot = \"false\";\n\n                metricData.timestamp = new Date();\n\n                var requestPayload = {\n                    events: [{\n                        data: metricData\n                    }]\n                };\n\n                return requestPayload;\n            };\n            return builder;\n        }\n\n        var emitSushiMetric = function (metricPayload, metricEndpoint, retryCount) {\n            var retryLimit = 3;\n            retryCount = retryCount || 0;\n            if (retryCount >= retryLimit) {\n                return;\n            }\n\n            /*\n              remove '\\' being added after stringify\n              e.g. payload => {\"json_payload\":{\"isMshop\":false,\"title\":\"some test title with \"quote\"\"}}\n              JSON.stringify(payload) => {\"json_payload\":{\"isMshop\":false,\"title\":\"some test title with \\\"quote\\\"\"}}\n            */\n            var sushiPayload = JSON.stringify(metricPayload).replace(/\\\\\\\\/g, \"\");\n            var options = {\n                params: sushiPayload,\n                paramsFormat: 'json',\n                contentType: 'application/json; charset=utf-8',\n                error: errorHandler\n            };\n\n            /*\n              noted in https://sage.amazon.com/posts/468046, iOS ~11 and up, iOS is no longer\n              granting apps certain permissions by default, so sendBeacon is restricted even\n              though it is supported\n            */\n            var isIphone = navigator.userAgent.match(new RegExp('iPhone', 'i'));\n            var isMshop = false;\n            P.now('mash').execute('vse-detect-mshop', function() {\n                isMshop = true;\n            });\n            var isIphoneMshop = (isIphone !== null) && isMshop;\n\n            if (navigator && navigator.sendBeacon && !isIphoneMshop) {\n                navigator.sendBeacon(metricEndpoint, sushiPayload);\n            } else {\n                A.post(metricEndpoint, options);\n            };\n\n            var errorHandler = function () {\n                emitSushiMetric(sushiPayload, metricEndpoint, ++retryCount);\n            };\n        }\n        function vseCsmWidgetLoadedMetrics () {\n            var jqueryElemId = \"#vse-rel-videos-carousel\";\n            var shouldUseSushi = _universalSushiEndpoint !== \"\";\n            if (isMetricRecorded) {\n                A.off('scroll', vseCsmWidgetLoadedMetrics);\n            }\n            if(!isMetricRecorded && _isScrolledIntoView(A.$(jqueryElemId))) {\n                var buildSushiPayload;\n                buildSushiPayload = makeSushiPayloadBuilder();\n                var ue = window.ue || ''\n                if (ue) {\n                    var widgetInViewTime = A.now() - rvpStartTime;\n                    if (!A.$('#vse-spinner').hasClass('aok-hidden')) {\n                        ue.count(_metricViewLoaded, 1);\n                        ue.count(_metricTimeToNotLoaded, widgetInViewTime);\n                        if (shouldUseSushi) {\n                            var payload = buildSushiPayload({\n                                eventName: \"rvs.widgetViewedNotLoadedCount\",\n                                stringPayload: \"\",\n                                intPayload: 1\n                            });\n                            emitSushiMetric(payload, _universalSushiEndpoint);\n                            payload = buildSushiPayload({\n                                eventName: \"rvs.widgetViewedNotLoadedDuration\",\n                                stringPayload: \"\",\n                                intPayload: widgetInViewTime\n                            });\n                            emitSushiMetric(payload, _universalSushiEndpoint);\n                        }\n                    } else {\n                        ue.count(_metricViewLoaded, 0);\n                        ue.count(_metricTimeToLoaded, widgetInViewTime);\n                        if (shouldUseSushi) {\n                            var payload = buildSushiPayload({\n                                eventName: \"rvs.widgetViewedAndLoadedCount\",\n                                stringPayload: \"\",\n                                intPayload: 0\n                            });\n                            emitSushiMetric(payload, _universalSushiEndpoint);\n                            payload = buildSushiPayload({\n                                eventName: \"rvs.widgetViewedAndLoadedDuration\",\n                                stringPayload: \"\",\n                                intPayload: widgetInViewTime\n                            });\n                            emitSushiMetric(payload, _universalSushiEndpoint);\n                        }\n                    }\n                    ue.count(_metricTimeToView, widgetInViewTime);\n                    if (shouldUseSushi) {\n                        var payload = buildSushiPayload({\n                            eventName: \"rvs.pageLoadToWidgetViewedDuration\",\n                            stringPayload: \"\",\n                            intPayload: widgetInViewTime\n                        });\n                        emitSushiMetric(payload, _universalSushiEndpoint);\n                    }\n                    isMetricRecorded = true;\n                }\n            }\n        }\n    A.on('scroll', vseCsmWidgetLoadedMetrics);\n    });\n} catch (exception) {\n    if (window.ueLogError) {\n        var additionalInfo =\n            {\n                logLevel: 'WARNING',\n                attribution: 'vse-client-metrics',\n                message: 'Failed to initialize client side metrics'\n            };\n        window.ueLogError(exception, additionalInfo);\n    }\n}\n\n\n      \n      \n        \n        \n          P.when('A','a-carousel-framework', 'a-modal', 'a-dropdown', 'a-button', '3p-promise', 'VSE-RVS-client', 'ready')\n          .execute(function(A, cf, modal, dd, b, promise, vseClient) {\n            vseClient.initializeClient(A, cf, modal, dd, b, promise, null, rvpStartTime);\n        });\n        \n      \n    }));\u003C/script>\u003Cscript>\n  (window.AmazonUIPageJS ? AmazonUIPageJS : P).load.js('https://images-na.ssl-images-amazon.com/images/I/61+R0OxaSDL.js?AUIClients/VSERelatedVideosClientAssets');\n  (window.AmazonUIPageJS ? AmazonUIPageJS : P).load.js('https://images-na.ssl-images-amazon.com/images/I/01InYlMhg4L._RC|01x4giTy+uL.js,411id10YyVL.js,01r9LpT6pbL.js,41oPRA2gxZL.js,11yAqqXzKZL.js,81hUDAwKMBL.js,61eBQGUH89L.js,01hSgea4iVL.js,016NshCbePL.js,01N+TJDM4gL.js_.js?AUIClients/Brila');\n\u003C/script>\n\n  \n    \n\n\n\n\n  \n\n\n\n        \n        \n        \n  \n\n\n\n\n\n\n\n\n    \n\n\n            \n\n\n            \n\n\n\n\n\n\n            \n\n        \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv>\n\u003C/div>\n\n\n\u003Cdiv>\n\u003C/div>\n\n\n\n\n\n  \n\n\n\n        \n        \n        \n  \n\n\n\n\n\n\n\n\n    \n\n\n            \n\n\n            \n\n\n\n\n\n\n            \n\n        \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\u003Cdiv id=\"sponsoredProducts2_feature_div\" class=\"feature\" data-feature-name=\"sponsoredProducts2\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\u003Cdiv cel_widget_id=\"sp_detail2\" class=\"celwidget\">\u003Cstyle>.sp_large_format_widgetTitle_asinImage_spacing {    margin-bottom: 40px;}.sp_large_format_asinImage_productDescription_spacing {    margin-bottom: 30px;}.sp_large_format_carousel {    height: 461px;}.sp_large_format_offerVertical {    height: 375px;}.sp_book_carousel_header {    margin-bottom: 10px;}.sp_badge_spacing_above_image {    margin-top: 0px;    margin-bottom: 4px;}.sp_badge_spacing_below_image {    margin-top: 6px;    margin-bottom: 6px;}.sp_invisible_badge {    visibility: hidden;}.sp_prime_wardrobe_badge {    position: relative;    top: 2px;}.sp_softline_brand_line {    margin-top: 16px;    font-size: 16px;    color: #555555;    margin-bottom: 12px;    display: inline-block;}.sp_softline_oneline_title {    white-space: nowrap;    overflow: hidden;    text-overflow: ellipsis;}.sp_softline_large_image_container {    padding-top: 130%;    position: relative;    margin-bottom: 4px;}.sp_softline_large_image_faceout {    position: absolute;    max-width: 100%;    max-height: 100%;    margin: auto;    top: 0;    bottom: 0;    left: 0;    right: 0;}\u003C/style>\u003Cstyle>.sp_amazon_certified_text {    font-size: 13px;    color: #C45500;}.sp_works_with_alexa {    font-size: 13px;    color: #111111;}\u003C/style>                                                                                        \u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;SpViewabilityConfigState&quot;}\">{\"eelEndpoint\":\"https://unagi-na.amazon.com/1/events/com.amazon.eel.SponsoredProductsEventTracking.prod\"}\u003C/script>                                                                    \u003Chr class=\"a-divider-normal bucketDivider\">                \u003Cdiv id=\"sp_detail2\" data-a-carousel-options=\"{&quot;initialSeenAsins&quot;:[&quot;B01DBGVB7K&quot;,&quot;B07QKQZMCD&quot;,&quot;B07QQNJX9K&quot;,&quot;B07D195XBL&quot;,&quot;B0762PPGJW&quot;,&quot;B0762S8PZ6&quot;,&quot;B07P9Y2Z4M&quot;,&quot;B07P5ZDQJQ&quot;,&quot;B07FBFVV6Y&quot;,&quot;B07P6NRTNW&quot;],&quot;set_size&quot;:28,&quot;name&quot;:&quot;sp_detail2_carousel&quot;,&quot;auto_adjust_height&quot;:&quot;true&quot;,&quot;circular&quot;:false,&quot;ajax&quot;:{&quot;fetch_delay&quot;:&quot;0&quot;,&quot;params&quot;:{&quot;cc&quot;:10,&quot;widgetLocale&quot;:&quot;en_US&quot;,&quot;wName&quot;:&quot;sp_detail2&quot;,&quot;referringSearchEngine&quot;:&quot;Amazon&quot;,&quot;isMultiPlacementRequest&quot;:false,&quot;start&quot;:10,&quot;ASIN&quot;:&quot;B06XD3LXXK&quot;,&quot;pRID&quot;:&quot;WY2K06V7WEMKTC0K2H7W&quot;,&quot;isFresh&quot;:0},&quot;url&quot;:&quot;/gp/nemo/spd/handlers/spd-shov.html&quot;}}\" data-a-display-strategy=\"swap\" data-a-transition-strategy=\"swap\" data-a-ajax-strategy=\"clicksCustomAjax\" class=\"a-begin a-carousel-container a-carousel-display-swap a-carousel-transition-swap\">\u003Cinput autocomplete=\"on\" type=\"hidden\" class=\"a-carousel-firstvisibleitem\">            \u003Cdiv class=\"a-row a-carousel-header-row a-size-large pa_componentTitleTest\">\u003Cdiv class=\"a-column a-span8\">\u003Ch2 class=\"a-carousel-heading\">Sponsored products related to this item\u003C/h2>\u003C/div>\u003Cdiv class=\"a-column a-span4 a-span-last a-text-right\">\u003Cspan class=\"a-carousel-pagination a-size-base\">\u003Cspan class=\"a-carousel-page-count\">Page \u003Cspan class=\"a-carousel-page-current\">1\u003C/span> of \u003Cspan class=\"a-carousel-page-max\">1\u003C/span>\u003C/span>\u003Cspan class=\"a-carousel-restart-container\">\u003Cspan class=\"a-text-separator\">\u003C/span>\u003Ca class=\"a-carousel-restart\" href=\"#\">Start over\u003C/a>\u003C/span>\u003Cspan class=\"a-carousel-accessibility-page-info a-offscreen\" aria-live=\"polite\">Page 1 of 1\u003C/span>\u003C/span>\u003C/div>\u003C/div>            \u003Cdiv class=\"a-row a-carousel-controls a-carousel-row a-carousel-has-buttons\">\u003Cdiv class=\"a-carousel-row-inner\">\u003Cdiv class=\"a-carousel-col a-carousel-left\">\u003Ca class=\"a-button a-button-image a-carousel-button a-carousel-goto-prevpage\" tabindex=\"0\" href=\"#\" id=\"a-autoid-17\">\u003Cspan class=\"a-button-inner\">\u003Ci class=\"a-icon a-icon-previous\">\u003Cspan class=\"a-icon-alt\">Previous page of related Sponsored Products\u003C/span>\u003C/i>\u003C/span>\u003C/a>\u003C/div>\u003Cdiv class=\"a-carousel-col a-carousel-center\">\u003Cdiv class=\"a-carousel-viewport\">\u003Col class=\"a-carousel\" role=\"list\">                                            \u003Cli class=\"a-carousel-card\" style=\"width:160px;\" role=\"listitem\">                                                                                                                                                                            \u003Cdiv id=\"sp_detail2_B01DBGVB7K\" data-asin=\"B01DBGVB7K\" data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;sspa_dk_detail_0&quot;,&quot;asin&quot;:&quot;B01DBGVB7K&quot;}\" data-viewpixelurl=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;adId=200014913620521&amp;adIndex=0\" class=\"a-section sp_offerVertical\">                \u003Cnoscript>        \u003Cimg alt=\"\" src=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200014913620521&eventType=2&adIndex=0\">    \u003C/noscript>    \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {        P.when('SponsoredProductsViewability').execute(function(SV) {            SV.loadImagePixel(\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200014913620521&eventType=2&adIndex=0\");        });    }));\u003C/script>        \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {    P.when('A', 'SponsoredProductsViewability').execute(function(A, SV) {        SV.registerViewTrackingElement(A.$(\"#sp_detail2_B01DBGVB7K\"), \"sp_detail2\");    });}));\u003C/script>        \u003Cdiv class=\"pa_feedbackForm_container_sp_detail2\" style=\"display:none;\">    \u003Cdiv class=\"sp_adID\">        \u003Cspan class=\"a-declarative\" data-action=\"a-modal\" data-a-modal=\"{&quot;footer&quot;:&quot;\\u003cdiv id='sponsored-products-feedback-footer'>&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;name&quot;:&quot;sponsored-products-feedback-modal-sp_detail2&quot;,&quot;width&quot;:&quot;350&quot;,&quot;header&quot;:&quot;Share your feedback&quot;,&quot;url&quot;:&quot;/gp/sponsored-products/lazyLoad/handler/sp-feedback-handler.html?pl=yoFolC0xdEzj5hSWT9D%2BbyRmnrNu8zKz2fgzD%2FXDvtaAvq%2BlDfls5byqOLXuWg4oVjK53gFPVwBK%0AFHaWDgQ%2BcDS85bTCtbYQZ1XTtn5k%2FzrxN18OavWdU90xlHsU2Sp4svo6EaoyiVr7X6zmWJr9%2B7HD%0AD2rp%2Bc8kfUV%2FXN%2F2HPmK0NjQuwN8cL0YN6YIVe1lWPzcBVeAldpE6zlKy6fcDmdVPMJeMQn%2B2YP%2F%0Az5wJNZCFFriEwU0YAUPKmS54nNc%2BBjhnoOa%2F5BplbG9udJ%2FGJHvQ7xA%2Bm7CrqLivgFvDcCY5l68U%0AMfyex4xZEpZLSTY7rBTpfS%2BHoG5g4c9BaqfUbAdDAgiMOAvUYS8TmYflRPOKJXRQt%2FwHIQ0Ww1Be%0AH6SNZzNv9567YrTjjuseciXVGujhdrCwW9rMNA5fYfhaDeB6bWZD2PsNqWMTrAB6XtCXVTyAn0WH%0AGeSPQIqNWAXWB3SDHT4l4Qu67kieHhExaiN7m6yXQDFZQPDBtksuluaVJcgdYQA6ynYhqyR1jYVY%0AzmP1mrdPaJyoqE%2FRw01rlApP82abOn6P8Kedk4tFtvgIpRFRP4Ku2HekJTHzFTBgBYbekmW2Ftuo%0AyAAZg6sYmnXpULcJtJaivhaF2OQy6sN98p0UNTPfJLU%3D&quot;}\">            \u003Ca href=\"javascript:void(0)\" class=\"a-popover-trigger a-declarative\">Feedback\u003Ci class=\"a-icon a-icon-popover\">\u003C/i>\u003C/a>        \u003C/span>    \u003C/div>\u003C/div>\u003Ca class=\"a-link-normal\" target=\"_top\" rel=\"noopener\" title=\"ASUS Chromebook C202SA-YS02 11.6&quot; Ruggedized and Water Resistant Design with 180 Degree (Intel Celeron 4 GB, 16GB eMMC, Dark Blue, Silver)\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_0?ie=UTF8&amp;adId=A04399052G3JSJX41HL5T&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB01DBGVB7K%2Fref%3Dsspa_dk_detail_0%3Fpsc%3D1\">                                                \u003Cimg alt=\"ASUS Chromebook C202SA-YS02 11.6&quot; Ruggedized and Water Resistant Design with 180 Degree (Intel Celeron 4 GB, 16GB eMMC, Dark Blue, Silver)\" src=\"https://m.media-amazon.com/images/I/31inMpRxCFL._AC_SR320,320_.jpg\" class=\"a-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://m.media-amazon.com/images/I/31inMpRxCFL._AC_SR160,160_.jpg&quot;:[160,160],&quot;https://m.media-amazon.com/images/I/31inMpRxCFL._AC_SR480,480_.jpg&quot;:[480,480],&quot;https://m.media-amazon.com/images/I/31inMpRxCFL._AC_SR320,320_.jpg&quot;:[320,320]}\">                                            \u003Cdiv data-rows=\"4\" aria-hidden=\"true\" class=\"sponsored-products-truncator-truncate sponsored-products-truncator-line-clamp-4\">            ASUS Chromebook C202SA-YS02 11.6\" Ruggedized and Water Resistant Design with 180 De...\u003C/div>            \u003C/a>    \u003Cdiv class=\"a-row\">        \u003Ca class=\"a-link-normal adReviewLink a-text-normal\" target=\"_top\" rel=\"noopener\" title=\"ASUS Chromebook C202SA-YS02 11.6&quot; Ruggedized and Water Resistant Design with 180 Degree (Intel Celeron 4 GB, 16GB eMMC, Dark Blue, Silver)\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_0?ie=UTF8&amp;adId=A04399052G3JSJX41HL5T&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB01DBGVB7K%2Fref%3Dsspa_dk_detail_0%3Fpsc%3D1#customerReviews\">        \u003Ci class=\"a-icon a-icon-star a-star-4\">\u003C/i>        \u003Cspan class=\"a-color-link\">1,699\u003C/span>        \u003C/a>    \u003C/div>    \u003Cdiv class=\"a-row a-color-price\">                                        \u003Cspan class=\"a-color-price\">$218.00\u003C/span>                                                \u003Cspan style=\"position: relative; top: 2px;\">                \u003Ci class=\"a-icon a-icon-prime a-icon-small\" role=\"img\">\u003C/i>            \u003C/span>                            \u003C/div>\u003C/div>                                                                                                                                                \u003C/li>                                            \u003Cli class=\"a-carousel-card\" style=\"width:160px;\" role=\"listitem\">                                                                                                                                                                            \u003Cdiv id=\"sp_detail2_B07QKQZMCD\" data-asin=\"B07QKQZMCD\" data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;sspa_dk_detail_1&quot;,&quot;asin&quot;:&quot;B07QKQZMCD&quot;}\" data-viewpixelurl=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;adId=200015344735571&amp;adIndex=1\" class=\"a-section sp_offerVertical\">                \u003Cnoscript>        \u003Cimg alt=\"\" src=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200015344735571&eventType=2&adIndex=1\">    \u003C/noscript>    \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {        P.when('SponsoredProductsViewability').execute(function(SV) {            SV.loadImagePixel(\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200015344735571&eventType=2&adIndex=1\");        });    }));\u003C/script>        \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {    P.when('A', 'SponsoredProductsViewability').execute(function(A, SV) {        SV.registerViewTrackingElement(A.$(\"#sp_detail2_B07QKQZMCD\"), \"sp_detail2\");    });}));\u003C/script>        \u003Cdiv class=\"pa_feedbackForm_container_sp_detail2\" style=\"display:none;\">    \u003Cdiv class=\"sp_adID\">        \u003Cspan class=\"a-declarative\" data-action=\"a-modal\" data-a-modal=\"{&quot;footer&quot;:&quot;\\u003cdiv id='sponsored-products-feedback-footer'>&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;name&quot;:&quot;sponsored-products-feedback-modal-sp_detail2&quot;,&quot;width&quot;:&quot;350&quot;,&quot;header&quot;:&quot;Share your feedback&quot;,&quot;url&quot;:&quot;/gp/sponsored-products/lazyLoad/handler/sp-feedback-handler.html?pl=zDWmqbXRjq4d4veiaro6bOURxu0ilqk7kzHaFY7VrVnZ1CCAnKF7RLnLVGIToZe59I5WSD9gGJj4%0AQx65p4mYU6IVfS0HsxqCeiVbQ4F9p%2FqZgyof9BVNaVDr%2FXSFFtrDQlNs5QgxzJVsuJDoKLlAANj%2B%0AJv3lOd%2BtVdAO7f1G2wr2k44NhvADlcQHyIM7TLqxhM5C5L8D6TKJhQFnGEeq6PtHWoLfVeSGWHGm%0AMYEZGc9xx7In522KoU4HH6Ua8cZqz6SmdScVOKh3Y2BqGFDkqJHEGuYMX3Ga%2FwpKfikf89WXL2Uw%0AFAYpKnq4GpDy%2F97WDlG3fDF0KBhviltJZNrInClXGDDqmeaj3APUab16gmfhasXxRZ%2BYZxz3cs%2Bf%0AS6fkdx6eF2L1HhlZIEXnhKRFZaR6xKu418gHZnfB%2FyAraVwvNJ%2Bc8tLIl6RhBUV%2B%2BLzFhbP1T0%2BC%0AwNSDOiKE9REaI%2FE9AEx9JRHo1YL7Y2Ax6SIwzlQ1G8Zym0YzdVqvgKYH8fJ6SB6mssE9IA4UBa4s%0AcgYFgX8J3uXhtB36%2FXofkoO7wm9viaKuLk8IMoOaQNlM%2FRL42HelxSCtjh7QKNrRSD3lUQgC0%2FNw%0AzA3h7xq3C9ZrOyBR9wrOwQ%3D%3D&quot;}\">            \u003Ca href=\"javascript:void(0)\" class=\"a-popover-trigger a-declarative\">Feedback\u003Ci class=\"a-icon a-icon-popover\">\u003C/i>\u003C/a>        \u003C/span>    \u003C/div>\u003C/div>\u003Ca class=\"a-link-normal\" target=\"_top\" rel=\"noopener\" title=\"HP 14 Laptop 1.5GHz 4GB 32GB Windows 10 (14-cm0012nr) (Renewed)\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_1?ie=UTF8&amp;adId=A0053597167S266DAGJCP&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB07QKQZMCD%2Fref%3Dsspa_dk_detail_1%3Fpsc%3D1\">                                                \u003Cimg alt=\"HP 14 Laptop 1.5GHz 4GB 32GB Windows 10 (14-cm0012nr) (Renewed)\" src=\"https://m.media-amazon.com/images/I/41F1EBByAqL._AC_SR320,320_.jpg\" class=\"a-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://m.media-amazon.com/images/I/41F1EBByAqL._AC_SR160,160_.jpg&quot;:[160,160],&quot;https://m.media-amazon.com/images/I/41F1EBByAqL._AC_SR320,320_.jpg&quot;:[320,320],&quot;https://m.media-amazon.com/images/I/41F1EBByAqL._AC_SR480,480_.jpg&quot;:[480,480]}\">                                            \u003Cdiv data-rows=\"4\" aria-hidden=\"true\" class=\"sponsored-products-truncator-truncate sponsored-products-truncator-line-clamp-4\">            HP 14 Laptop 1.5GHz 4GB 32GB Windows 10 (14-cm0012nr) (Renewed)\u003C/div>            \u003C/a>    \u003Cdiv class=\"a-row a-color-price\">                                        \u003Cspan class=\"a-color-price\">$159.20\u003C/span>                                                \u003Cspan style=\"position: relative; top: 2px;\">                \u003Ci class=\"a-icon a-icon-prime a-icon-small\" role=\"img\">\u003C/i>            \u003C/span>                            \u003C/div>\u003C/div>                                                                                                                                                \u003C/li>                                            \u003Cli class=\"a-carousel-card\" style=\"width:160px;\" role=\"listitem\">                                                                                                                                                                            \u003Cdiv id=\"sp_detail2_B07QQNJX9K\" data-asin=\"B07QQNJX9K\" data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;sspa_dk_detail_2&quot;,&quot;asin&quot;:&quot;B07QQNJX9K&quot;}\" data-viewpixelurl=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;adId=200014918123871&amp;adIndex=2\" class=\"a-section sp_offerVertical\">                \u003Cnoscript>        \u003Cimg alt=\"\" src=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200014918123871&eventType=2&adIndex=2\">    \u003C/noscript>    \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {        P.when('SponsoredProductsViewability').execute(function(SV) {            SV.loadImagePixel(\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200014918123871&eventType=2&adIndex=2\");        });    }));\u003C/script>        \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {    P.when('A', 'SponsoredProductsViewability').execute(function(A, SV) {        SV.registerViewTrackingElement(A.$(\"#sp_detail2_B07QQNJX9K\"), \"sp_detail2\");    });}));\u003C/script>        \u003Cdiv class=\"pa_feedbackForm_container_sp_detail2\" style=\"display:none;\">    \u003Cdiv class=\"sp_adID\">        \u003Cspan class=\"a-declarative\" data-action=\"a-modal\" data-a-modal=\"{&quot;footer&quot;:&quot;\\u003cdiv id='sponsored-products-feedback-footer'>&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;name&quot;:&quot;sponsored-products-feedback-modal-sp_detail2&quot;,&quot;width&quot;:&quot;350&quot;,&quot;header&quot;:&quot;Share your feedback&quot;,&quot;url&quot;:&quot;/gp/sponsored-products/lazyLoad/handler/sp-feedback-handler.html?pl=lsY2T%2FFdMS7nPCKL6aGwiHio0BPvA3bz8wUPyFkSPW8LSk1d8XCER0hD0oh8uABNBGyVDeIuoDBZ%0A%2FdP6NOxo6a9jaE4LDF%2F%2Fp0TLNp9hRhSFpnYQl2UVw5pXPYG29fFUb5Tq2FA7HCBbiUCJesgPUj57%0AfzHSVqmzTKfuWDmUJMc2Spb9FgI%2Btm3jN%2FqSEFVGVOX9FX%2FYCi%2B%2B0X2benXVn%2Fag9jw7azcWCwT5%0AlkD0Jx90fz1YIqmSgaIrIaZa3s58caeK2ea%2FKR947OefFI8K2p%2FBIIEji72SwpFAkLLE4ku5Yq7Q%0Atbeod1%2F84cNKNLlk97Zdnqwb%2BEHS10%2BwP2Z05l2aUCKE66oBZIsRpJ6HXOs%2FgLTxeLOLTxr0e7DX%0A6ftfj7f%2B4trdq3Zf0d4Vnaq8kfNYVw2Jinv7c1zKxkymVAgnHsXhwPZRaskehOddhhO4yo8jMRSJ%0ArTNcuYEk5hb4t2RUM8gG8gSauqdHhDyaPuHECxbGr2Au%2Fw6s1JrGnpCv41MnR%2BbWBnJKN4COWV5e%0AjxfPaVCJguuW7apq%2FP618%2F0AtUsRWSFR9uKxQy2QzE6ZgFwk%2FPa7CaYmK4kkf6Ud7IR6r0Ps0SAR%0A9XVjy44jXpsBdlayJQZbLmaRFFW6DW1tthknL0hf9qX5gTdwOx5mfg%3D%3D&quot;}\">            \u003Ca href=\"javascript:void(0)\" class=\"a-popover-trigger a-declarative\">Feedback\u003Ci class=\"a-icon a-icon-popover\">\u003C/i>\u003C/a>        \u003C/span>    \u003C/div>\u003C/div>\u003Ca class=\"a-link-normal\" target=\"_top\" rel=\"noopener\" title=\"ASUS C223NA-DH02-RD Chromebook 11.6&quot;, Intel Dual-Core Celeron N3350 Processor (up to 2.4GHz) 4GB RAM, 32GB eMMC storage, Red (Renewed)\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_2?ie=UTF8&amp;adId=A0229118AK0IS8K5UDGK&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB07QQNJX9K%2Fref%3Dsspa_dk_detail_2%3Fpsc%3D1\">                                                \u003Cimg alt=\"ASUS C223NA-DH02-RD Chromebook 11.6&quot;, Intel Dual-Core Celeron N3350 Processor (up to 2.4GHz) 4GB RAM, 32GB eMMC storage, Red (Renewed)\" src=\"https://m.media-amazon.com/images/I/41Wxm++s6bL._AC_SR320,320_.jpg\" class=\"a-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://m.media-amazon.com/images/I/41Wxm++s6bL._AC_SR160,160_.jpg&quot;:[160,160],&quot;https://m.media-amazon.com/images/I/41Wxm++s6bL._AC_SR480,480_.jpg&quot;:[480,480],&quot;https://m.media-amazon.com/images/I/41Wxm++s6bL._AC_SR320,320_.jpg&quot;:[320,320]}\">                                            \u003Cdiv data-rows=\"4\" aria-hidden=\"true\" class=\"sponsored-products-truncator-truncate sponsored-products-truncator-line-clamp-4\">            ASUS C223NA-DH02-RD Chromebook 11.6\", Intel Dual-Core Celeron N3350 Processor (up t...\u003C/div>            \u003C/a>    \u003Cdiv class=\"a-row\">        \u003Ca class=\"a-link-normal adReviewLink a-text-normal\" target=\"_top\" rel=\"noopener\" title=\"ASUS C223NA-DH02-RD Chromebook 11.6&quot;, Intel Dual-Core Celeron N3350 Processor (up to 2.4GHz) 4GB RAM, 32GB eMMC storage, Red (Renewed)\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_2?ie=UTF8&amp;adId=A0229118AK0IS8K5UDGK&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB07QQNJX9K%2Fref%3Dsspa_dk_detail_2%3Fpsc%3D1#customerReviews\">        \u003Ci class=\"a-icon a-icon-star a-star-5\">\u003C/i>        \u003Cspan class=\"a-color-link\">1\u003C/span>        \u003C/a>    \u003C/div>    \u003Cdiv class=\"a-row a-color-price\">                                        \u003Cspan class=\"a-color-price\">$169.47\u003C/span>                                                \u003Cspan style=\"position: relative; top: 2px;\">                \u003Ci class=\"a-icon a-icon-prime a-icon-small\" role=\"img\">\u003C/i>            \u003C/span>                            \u003C/div>\u003C/div>                                                                                                                                                \u003C/li>                                            \u003Cli class=\"a-carousel-card\" style=\"width:160px;\" role=\"listitem\">                                                                                                                                                                            \u003Cdiv id=\"sp_detail2_B07D195XBL\" data-asin=\"B07D195XBL\" data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;sspa_dk_detail_3&quot;,&quot;asin&quot;:&quot;B07D195XBL&quot;}\" data-viewpixelurl=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;adId=200016051733771&amp;adIndex=3\" class=\"a-section sp_offerVertical\">                \u003Cnoscript>        \u003Cimg alt=\"\" src=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200016051733771&eventType=2&adIndex=3\">    \u003C/noscript>    \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {        P.when('SponsoredProductsViewability').execute(function(SV) {            SV.loadImagePixel(\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200016051733771&eventType=2&adIndex=3\");        });    }));\u003C/script>        \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {    P.when('A', 'SponsoredProductsViewability').execute(function(A, SV) {        SV.registerViewTrackingElement(A.$(\"#sp_detail2_B07D195XBL\"), \"sp_detail2\");    });}));\u003C/script>        \u003Cdiv class=\"pa_feedbackForm_container_sp_detail2\" style=\"display:none;\">    \u003Cdiv class=\"sp_adID\">        \u003Cspan class=\"a-declarative\" data-action=\"a-modal\" data-a-modal=\"{&quot;footer&quot;:&quot;\\u003cdiv id='sponsored-products-feedback-footer'>&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;name&quot;:&quot;sponsored-products-feedback-modal-sp_detail2&quot;,&quot;width&quot;:&quot;350&quot;,&quot;header&quot;:&quot;Share your feedback&quot;,&quot;url&quot;:&quot;/gp/sponsored-products/lazyLoad/handler/sp-feedback-handler.html?pl=XWVGjlQtEMVXeDut5hVEmPTqvJ2VxPxG8bkW1MrPWwCNENlM%2FzZ7r3lfOWCpi9ksCELQMcolRBHE%0AIBGh0K%2FuQr%2B4kxcagYtaMf7FHyx%2FCPWr8r0v4R2iWd%2BvkgJ9wOkC8medWfMaFXtXsYwcG9ODPM78%0A3cmIbbaJbog5zL5M%2FPP%2BIGzeTZaoBh3tFlwW8HXaoC%2FdzIrMpLTkP%2FgimruvXV%2BH8zKb0gBrV4QW%0AndzDh%2FIksfPkXVtO6z%2BfGfZyDwQx3I4%2FSbG7e9COQfSHDA9ab6EYU1iQn8u8mssAgYeB1zQCdvSy%0ALFjH4Fqfh%2FL7Zj3YhsgS%2BZXdmAmVUStLY92ms8tZGZm0kkYggFoGhI4Pbb9m6Q7f4gqjdHpS%2BPwE%0A8Z7L2k7ZGeRyZ40DKfKQdG4NNRbmZn84Q4cfpywtUxj5hP2R1Qh4EnQM%2F4fchrXo63ZEj6u2EAdp%0AeY6lRNKXGqIaZ8io5fHYYhjUhfUowmEAeWpUyTx5BBDjcumxcL%2FbH7Fc%2BB5cHlgNoPIhQMjQP3xo%0AXRVtkJPRiCj99MxTPjjPgZJE9wAs6R0KYSvwMXzWJ1jb%2B8WkfP31GqwfHPi0XJDPmi5iYissSY8R%0A2wL31K%2FpcG2fGHur6IXaL7BFt1ZPav1vmIY128bdzkpUYCaQTeb7FEcOMT6U1LSZ&quot;}\">            \u003Ca href=\"javascript:void(0)\" class=\"a-popover-trigger a-declarative\">Feedback\u003Ci class=\"a-icon a-icon-popover\">\u003C/i>\u003C/a>        \u003C/span>    \u003C/div>\u003C/div>\u003Ca class=\"a-link-normal\" target=\"_top\" rel=\"noopener\" title=\"HP Stream 14-ax030wm 14in Windows 10 Home N3060 4GB Memory 32GB Storage - Gray (Renewed)\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_3?ie=UTF8&amp;adId=A08661051HG84YKAH1K07&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB07D195XBL%2Fref%3Dsspa_dk_detail_3%3Fpsc%3D1%26smid%3DA3DFJGAWDHDGGY\">                                                \u003Cimg alt=\"HP Stream 14-ax030wm 14in Windows 10 Home N3060 4GB Memory 32GB Storage - Gray (Renewed)\" src=\"https://m.media-amazon.com/images/I/41KBpWEIGUL._AC_SR320,320_.jpg\" class=\"a-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://m.media-amazon.com/images/I/41KBpWEIGUL._AC_SR480,480_.jpg&quot;:[480,480],&quot;https://m.media-amazon.com/images/I/41KBpWEIGUL._AC_SR160,160_.jpg&quot;:[160,160],&quot;https://m.media-amazon.com/images/I/41KBpWEIGUL._AC_SR320,320_.jpg&quot;:[320,320]}\">                                            \u003Cdiv data-rows=\"4\" aria-hidden=\"true\" class=\"sponsored-products-truncator-truncate sponsored-products-truncator-line-clamp-4\">            HP Stream 14-ax030wm 14in Windows 10 Home N3060 4GB Memory 32GB Storage - Gray (Ren...\u003C/div>            \u003C/a>    \u003Cdiv class=\"a-row\">        \u003Ca class=\"a-link-normal adReviewLink a-text-normal\" target=\"_top\" rel=\"noopener\" title=\"HP Stream 14-ax030wm 14in Windows 10 Home N3060 4GB Memory 32GB Storage - Gray (Renewed)\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_3?ie=UTF8&amp;adId=A08661051HG84YKAH1K07&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB07D195XBL%2Fref%3Dsspa_dk_detail_3%3Fpsc%3D1%26smid%3DA3DFJGAWDHDGGY#customerReviews\">        \u003Ci class=\"a-icon a-icon-star a-star-3-5\">\u003C/i>        \u003Cspan class=\"a-color-link\">11\u003C/span>        \u003C/a>    \u003C/div>    \u003Cdiv class=\"a-row a-color-price\">                                        \u003Cspan class=\"a-color-price\">$166.99\u003C/span>                                                \u003Cspan style=\"position: relative; top: 2px;\">                \u003Ci class=\"a-icon a-icon-prime a-icon-small\" role=\"img\">\u003C/i>            \u003C/span>                            \u003C/div>\u003C/div>                                                                                                                                                \u003C/li>                                            \u003Cli class=\"a-carousel-card\" style=\"width:160px;\" role=\"listitem\">                                                                                                                                                                            \u003Cdiv id=\"sp_detail2_B0762PPGJW\" data-asin=\"B0762PPGJW\" data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;sspa_dk_detail_4&quot;,&quot;asin&quot;:&quot;B0762PPGJW&quot;}\" data-viewpixelurl=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;adId=200012887074171&amp;adIndex=4\" class=\"a-section sp_offerVertical\">                \u003Cnoscript>        \u003Cimg alt=\"\" src=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200012887074171&eventType=2&adIndex=4\">    \u003C/noscript>    \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {        P.when('SponsoredProductsViewability').execute(function(SV) {            SV.loadImagePixel(\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200012887074171&eventType=2&adIndex=4\");        });    }));\u003C/script>        \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {    P.when('A', 'SponsoredProductsViewability').execute(function(A, SV) {        SV.registerViewTrackingElement(A.$(\"#sp_detail2_B0762PPGJW\"), \"sp_detail2\");    });}));\u003C/script>        \u003Cdiv class=\"pa_feedbackForm_container_sp_detail2\" style=\"display:none;\">    \u003Cdiv class=\"sp_adID\">        \u003Cspan class=\"a-declarative\" data-action=\"a-modal\" data-a-modal=\"{&quot;footer&quot;:&quot;\\u003cdiv id='sponsored-products-feedback-footer'>&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;name&quot;:&quot;sponsored-products-feedback-modal-sp_detail2&quot;,&quot;width&quot;:&quot;350&quot;,&quot;header&quot;:&quot;Share your feedback&quot;,&quot;url&quot;:&quot;/gp/sponsored-products/lazyLoad/handler/sp-feedback-handler.html?pl=3%2BWRcZOoVa5uPDjZLiKNyecuXX7lxTbls8EghwL%2BcboEvuky9Y96EnpuzCjbH31zgnvJ6QtdANvn%0AYUb6AChe7TUIKLxGLiAQup1LSumFgRlrcGMq2iQ8Fj1k1q6sMPpyv9Upr2TVAYfNlbwzqVSuFsJz%0ArBDsSmE%2FtsG1hgnZ%2Bny7OIfL8%2B%2BqYtxJip0nSFrXXHz82fgIex6tTxaECYZsXwEKOmXWvkhx1OE%2B%0Ad%2FTM7VIyil%2F4wD9scr7pb8C4sJTAxQsinVNs1u3SJi6X1nqtM4CmuLTATUNbkeYv8XzsZZJO8eTY%0ANNSRCpZRwMQfMIYEWCUaO6mJ9oTFyWrZ6iVjxl54PhKXH5lhlMRxb9dJzGlUn8c%2BERp3qLvdNrs7%0ABcpis7qrurpAqqSlZ%2BKk6%2F7t1H6v4fuWeS7A%2Fz3hZk0ln3FwbcVA8d%2BtwwgTziggeuTioqjvWmXO%0ApUPqy48yq2UpTf40wti3lGexYO8iaPAMNpqsl7G4hTIwC5c6rzcCgZl5ysrHvgzslVcEVuHQFGpW%0AEbKew8BXG%2F9pIvEO9NyQL5ahrXMPTAHLouO0BClndDpveejD0iCZq7ujwHHACROl%2FC8JJ%2BaAirWr%0ArdTFbDUNVarm25JV5NE5n82yopHvUOHZrm95S%2F3%2FMmo%3D&quot;}\">            \u003Ca href=\"javascript:void(0)\" class=\"a-popover-trigger a-declarative\">Feedback\u003Ci class=\"a-icon a-icon-popover\">\u003C/i>\u003C/a>        \u003C/span>    \u003C/div>\u003C/div>\u003Ca class=\"a-link-normal\" target=\"_top\" rel=\"noopener\" title=\"Bit CORE+ 10.1 Windows 10, 2 in 1 Detachable PC - with Bonus Full Function Bit Smart Watch (W10046APB+S1CG)\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_4?ie=UTF8&amp;adId=A02180902UM3XAQ7QRDSN&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB0762PPGJW%2Fref%3Dsspa_dk_detail_4%3Fpsc%3D1\">                                                \u003Cimg alt=\"Bit CORE+ 10.1 Windows 10, 2 in 1 Detachable PC - with Bonus Full Function Bit Smart Watch (W10046APB+S1CG)\" src=\"https://m.media-amazon.com/images/I/41tW1IBRYiL._AC_SR320,320_.jpg\" class=\"a-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://m.media-amazon.com/images/I/41tW1IBRYiL._AC_SR320,320_.jpg&quot;:[320,320],&quot;https://m.media-amazon.com/images/I/41tW1IBRYiL._AC_SR160,160_.jpg&quot;:[160,160],&quot;https://m.media-amazon.com/images/I/41tW1IBRYiL._AC_SR480,480_.jpg&quot;:[480,480]}\">                                            \u003Cdiv data-rows=\"4\" aria-hidden=\"true\" class=\"sponsored-products-truncator-truncate sponsored-products-truncator-line-clamp-4\">            Bit CORE+ 10.1 Windows 10, 2 in 1 Detachable PC - with Bonus Full Function Bit Smar...\u003C/div>            \u003C/a>    \u003Cdiv class=\"a-row\">        \u003Ca class=\"a-link-normal adReviewLink a-text-normal\" target=\"_top\" rel=\"noopener\" title=\"Bit CORE+ 10.1 Windows 10, 2 in 1 Detachable PC - with Bonus Full Function Bit Smart Watch (W10046APB+S1CG)\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_4?ie=UTF8&amp;adId=A02180902UM3XAQ7QRDSN&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB0762PPGJW%2Fref%3Dsspa_dk_detail_4%3Fpsc%3D1#customerReviews\">        \u003Ci class=\"a-icon a-icon-star a-star-1\">\u003C/i>        \u003Cspan class=\"a-color-link\">1\u003C/span>        \u003C/a>    \u003C/div>    \u003Cdiv class=\"a-row a-color-price\">                                        \u003Cspan class=\"a-color-price\">$219.99\u003C/span>                                                \u003Cspan style=\"position: relative; top: 2px;\">                \u003Ci class=\"a-icon a-icon-prime a-icon-small\" role=\"img\">\u003C/i>            \u003C/span>                            \u003C/div>\u003C/div>                                                                                                                                                \u003C/li>                                            \u003Cli class=\"a-carousel-card\" style=\"width:160px;\" role=\"listitem\">                                                                                                                                                                            \u003Cdiv id=\"sp_detail2_B0762S8PZ6\" data-asin=\"B0762S8PZ6\" data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;sspa_dk_detail_5&quot;,&quot;asin&quot;:&quot;B0762S8PZ6&quot;}\" data-viewpixelurl=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;adId=200012887073771&amp;adIndex=5\" class=\"a-section sp_offerVertical\">                \u003Cnoscript>        \u003Cimg alt=\"\" src=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200012887073771&eventType=2&adIndex=5\">    \u003C/noscript>    \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {        P.when('SponsoredProductsViewability').execute(function(SV) {            SV.loadImagePixel(\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200012887073771&eventType=2&adIndex=5\");        });    }));\u003C/script>        \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {    P.when('A', 'SponsoredProductsViewability').execute(function(A, SV) {        SV.registerViewTrackingElement(A.$(\"#sp_detail2_B0762S8PZ6\"), \"sp_detail2\");    });}));\u003C/script>        \u003Cdiv class=\"pa_feedbackForm_container_sp_detail2\" style=\"display:none;\">    \u003Cdiv class=\"sp_adID\">        \u003Cspan class=\"a-declarative\" data-action=\"a-modal\" data-a-modal=\"{&quot;footer&quot;:&quot;\\u003cdiv id='sponsored-products-feedback-footer'>&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;name&quot;:&quot;sponsored-products-feedback-modal-sp_detail2&quot;,&quot;width&quot;:&quot;350&quot;,&quot;header&quot;:&quot;Share your feedback&quot;,&quot;url&quot;:&quot;/gp/sponsored-products/lazyLoad/handler/sp-feedback-handler.html?pl=RgzuXTJ3H325M6xYfnMFEJgW9lxaA8XYCvZjfkQQ%2FKBfN%2FQsSc0nq7HMgXJNL5T7J%2FHOtHE5Dy%2BG%0A3z4BsJ8jUEJF%2BLJXgpLyeWe%2F2YugXjZMAriFi7IEBn5Fnvqy1yeg8O%2Fn00GcY82o2GnBBTU%2BYM8h%0AcoyKzfTBabLmOkLGk1UyrNRpb5LvAncaNWoH7lsh3D2B5SD1FbMmrWRXuLdZW%2BOciA415FHVROn6%0AM8vcmA54x73rNP7MZvVWeyONgPse1h97w8LqWgpJ5GDr8QQVDu28qR8x0A%2Ftp1rnyu30gWyGeTZQ%0AeUh7ew%2B5Pyf8URflmLZSoENjdSm5MdkywBKLb39dvJ2NNZImNasch2clzwZMnQ4wfXVoMsRWdWSL%0AiJtRzPkelZdiJxBosSM0sUqA8gaG7pzkVQR2uYxIccYta6nsFF7wXAQ%2FxZWmrzyvBpaPmuk2rIvZ%0A8cijO8pT8TAok%2B97I6Xc5COJ2QfyIskfHDO8g%2BKPMY9P3ovRaU6fD1DCX0%2FTyZ0acEN36A9KtB3O%0AzR6TpFvzJ8Qtp6juDFRuDK82SUogJQBxkoCjkyxU1K63efBZVYAKkC%2F5pwcvUqVzKPHru%2Br8FxUp%0A%2FVFjzz7rvZaQwcRFa4IIA4UXz%2BEmpEqD5uai68bF%2FuU%3D&quot;}\">            \u003Ca href=\"javascript:void(0)\" class=\"a-popover-trigger a-declarative\">Feedback\u003Ci class=\"a-icon a-icon-popover\">\u003C/i>\u003C/a>        \u003C/span>    \u003C/div>\u003C/div>\u003Ca class=\"a-link-normal\" target=\"_top\" rel=\"noopener\" title=\"Bit CORE+ 11.6 Windows 10, 2 in 1 Detachable PC - with Bonus Full Function Bit Smart Watch (W11046APB+S1CG)\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_5?ie=UTF8&amp;adId=A02184902UV3E0WUD9GNN&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB0762S8PZ6%2Fref%3Dsspa_dk_detail_5%3Fpsc%3D1\">                                                \u003Cimg alt=\"Bit CORE+ 11.6 Windows 10, 2 in 1 Detachable PC - with Bonus Full Function Bit Smart Watch (W11046APB+S1CG)\" src=\"https://m.media-amazon.com/images/I/41ZgybNelLL._AC_SR160,160_.jpg\" class=\"a-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://m.media-amazon.com/images/I/41ZgybNelLL._AC_SR480,480_.jpg&quot;:[480,480],&quot;https://m.media-amazon.com/images/I/41ZgybNelLL._AC_SR160,160_.jpg&quot;:[160,160],&quot;https://m.media-amazon.com/images/I/41ZgybNelLL._AC_SR320,320_.jpg&quot;:[320,320]}\">                                            \u003Cdiv data-rows=\"4\" aria-hidden=\"true\" class=\"sponsored-products-truncator-truncate sponsored-products-truncator-line-clamp-4\">            Bit CORE+ 11.6 Windows 10, 2 in 1 Detachable PC - with Bonus Full Function Bit Smar...\u003C/div>            \u003C/a>    \u003Cdiv class=\"a-row\">        \u003Ca class=\"a-link-normal adReviewLink a-text-normal\" target=\"_top\" rel=\"noopener\" title=\"Bit CORE+ 11.6 Windows 10, 2 in 1 Detachable PC - with Bonus Full Function Bit Smart Watch (W11046APB+S1CG)\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_5?ie=UTF8&amp;adId=A02184902UV3E0WUD9GNN&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB0762S8PZ6%2Fref%3Dsspa_dk_detail_5%3Fpsc%3D1#customerReviews\">        \u003Ci class=\"a-icon a-icon-star a-star-3\">\u003C/i>        \u003Cspan class=\"a-color-link\">1\u003C/span>        \u003C/a>    \u003C/div>    \u003Cdiv class=\"a-row a-color-price\">                                        \u003Cspan class=\"a-color-price\">$259.99\u003C/span>                                                \u003Cspan style=\"position: relative; top: 2px;\">                \u003Ci class=\"a-icon a-icon-prime a-icon-small\" role=\"img\">\u003C/i>            \u003C/span>                            \u003C/div>\u003C/div>                                                                                                                                                \u003C/li>                                            \u003Cli class=\"a-carousel-card\" style=\"width:160px;\" role=\"listitem\">                                                                                                                                                                            \u003Cdiv id=\"sp_detail2_B07P9Y2Z4M\" data-asin=\"B07P9Y2Z4M\" data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;sspa_dk_detail_6&quot;,&quot;asin&quot;:&quot;B07P9Y2Z4M&quot;}\" data-viewpixelurl=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;adId=200017953722211&amp;adIndex=6\" class=\"a-section sp_offerVertical\">                \u003Cnoscript>        \u003Cimg alt=\"\" src=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200017953722211&eventType=2&adIndex=6\">    \u003C/noscript>    \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {        P.when('SponsoredProductsViewability').execute(function(SV) {            SV.loadImagePixel(\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200017953722211&eventType=2&adIndex=6\");        });    }));\u003C/script>        \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {    P.when('A', 'SponsoredProductsViewability').execute(function(A, SV) {        SV.registerViewTrackingElement(A.$(\"#sp_detail2_B07P9Y2Z4M\"), \"sp_detail2\");    });}));\u003C/script>        \u003Cdiv class=\"pa_feedbackForm_container_sp_detail2\" style=\"display:none;\">    \u003Cdiv class=\"sp_adID\">        \u003Cspan class=\"a-declarative\" data-action=\"a-modal\" data-a-modal=\"{&quot;footer&quot;:&quot;\\u003cdiv id='sponsored-products-feedback-footer'>&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;name&quot;:&quot;sponsored-products-feedback-modal-sp_detail2&quot;,&quot;width&quot;:&quot;350&quot;,&quot;header&quot;:&quot;Share your feedback&quot;,&quot;url&quot;:&quot;/gp/sponsored-products/lazyLoad/handler/sp-feedback-handler.html?pl=YXEziiOWK3Nuj1PjysBB7jwOSqoXPw%2F1lWtcIo1g%2FOugdC7bJeoynTYIgz6WKJgI%2BjhCL0iDQOc%2B%0A0m5hi%2BYY38CTVy7LqXm7%2BejyjfU5swkhrA2dYMlifG%2BPW8scL5k3RbYisjUS6Ug2nXCWnReAAMYl%0AVnfnl6ZKVxLyrzo8pRraqopqae%2FVxdG%2Fn90jniiLHkCVAjBeBJL0JFRSg%2F9aSlo%2FzWsgot4pSeXK%0AnT%2B9Dh%2FNr2DxfvwzH5BQGvbnep1sqM3fB799BRvV3QgE8Hvx2nDknT6NABYuTjESpCyhhi6nFP1K%0AZWatEj5nmtSlpCxOpkNLqqH%2Bxt7Ev%2FEnHQqMDBH96vF69EslBbJFddfzZ8iP%2BYJok2evkXSvsBWS%0ACUdQf%2FKkTt5TkF%2B2dXLyyOLxybRGBWq9CSVWs%2BFB313HuYul9B0gCnJlNaQG6EbOqVOhMMB6%2Fxh%2F%0A0hBq%2FF4w%2FnpImPEmTRqnfTfRATFa4zNWoy7W3VlioKpFld%2F8YwsldaqiPnuzuqpknGAM99b9OSgh%0AoeeSza1XKISVS%2B2mSaj3CUP8YKWFtfoTbhaHnf1L2I1Wy0c%2FXBM%2B0Q%2Ft5n8XTaLO%2BO4jPOK0DMBM%0AJTyecO%2BdnASjXaBpzMClXyXwGXebFHnzVJXEVSoZy%2B%2BRamH893eIeA%3D%3D&quot;}\">            \u003Ca href=\"javascript:void(0)\" class=\"a-popover-trigger a-declarative\">Feedback\u003Ci class=\"a-icon a-icon-popover\">\u003C/i>\u003C/a>        \u003C/span>    \u003C/div>\u003C/div>\u003Ca class=\"a-link-normal\" target=\"_top\" rel=\"noopener\" title=\"jumper EZbook 3 Pro Windows 10 Laptop 13.3&quot; FHD Bezel-Less, Intel Slim Ultrabook Portable, 6GB RAM 64GB ROM, Metal Shell Lightweight Notebook\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_6?ie=UTF8&amp;adId=A0244722TJ0U6COT690B&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB07P9Y2Z4M%2Fref%3Dsspa_dk_detail_6%3Fpsc%3D1\">                                                \u003Cimg alt=\"jumper EZbook 3 Pro Windows 10 Laptop 13.3&quot; FHD Bezel-Less, Intel Slim Ultrabook Portable, 6GB RAM 64GB ROM, Metal Shell Lightweight Notebook\" src=\"https://m.media-amazon.com/images/I/51l6yJ5gl7L._AC_SR160,160_.jpg\" class=\"a-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://m.media-amazon.com/images/I/51l6yJ5gl7L._AC_SR320,320_.jpg&quot;:[320,320],&quot;https://m.media-amazon.com/images/I/51l6yJ5gl7L._AC_SR480,480_.jpg&quot;:[480,480],&quot;https://m.media-amazon.com/images/I/51l6yJ5gl7L._AC_SR160,160_.jpg&quot;:[160,160]}\">                                            \u003Cdiv data-rows=\"4\" aria-hidden=\"true\" class=\"sponsored-products-truncator-truncate sponsored-products-truncator-line-clamp-4\">            jumper EZbook 3 Pro Windows 10 Laptop 13.3\" FHD Bezel-Less, Intel Slim Ultrabook Po...\u003C/div>            \u003C/a>    \u003Cdiv class=\"a-row\">        \u003Ca class=\"a-link-normal adReviewLink a-text-normal\" target=\"_top\" rel=\"noopener\" title=\"jumper EZbook 3 Pro Windows 10 Laptop 13.3&quot; FHD Bezel-Less, Intel Slim Ultrabook Portable, 6GB RAM 64GB ROM, Metal Shell Lightweight Notebook\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_6?ie=UTF8&amp;adId=A0244722TJ0U6COT690B&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB07P9Y2Z4M%2Fref%3Dsspa_dk_detail_6%3Fpsc%3D1#customerReviews\">        \u003Ci class=\"a-icon a-icon-star a-star-4\">\u003C/i>        \u003Cspan class=\"a-color-link\">39\u003C/span>        \u003C/a>    \u003C/div>    \u003Cdiv class=\"a-row a-color-price\">                                        \u003Cspan class=\"a-color-price\">$254.90\u003C/span>                                                \u003Cspan style=\"position: relative; top: 2px;\">                \u003Ci class=\"a-icon a-icon-prime a-icon-small\" role=\"img\">\u003C/i>            \u003C/span>                            \u003C/div>\u003C/div>                                                                                                                                                \u003C/li>                                            \u003Cli class=\"a-carousel-card\" style=\"width:160px;\" role=\"listitem\">                                                                                                                                                                            \u003Cdiv id=\"sp_detail2_B07P5ZDQJQ\" data-asin=\"B07P5ZDQJQ\" data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;sspa_dk_detail_7&quot;,&quot;asin&quot;:&quot;B07P5ZDQJQ&quot;}\" data-viewpixelurl=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;adId=200016412830711&amp;adIndex=7\" class=\"a-section sp_offerVertical\">                \u003Cnoscript>        \u003Cimg alt=\"\" src=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200016412830711&eventType=2&adIndex=7\">    \u003C/noscript>    \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {        P.when('SponsoredProductsViewability').execute(function(SV) {            SV.loadImagePixel(\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200016412830711&eventType=2&adIndex=7\");        });    }));\u003C/script>        \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {    P.when('A', 'SponsoredProductsViewability').execute(function(A, SV) {        SV.registerViewTrackingElement(A.$(\"#sp_detail2_B07P5ZDQJQ\"), \"sp_detail2\");    });}));\u003C/script>        \u003Cdiv class=\"pa_feedbackForm_container_sp_detail2\" style=\"display:none;\">    \u003Cdiv class=\"sp_adID\">        \u003Cspan class=\"a-declarative\" data-action=\"a-modal\" data-a-modal=\"{&quot;footer&quot;:&quot;\\u003cdiv id='sponsored-products-feedback-footer'>&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;name&quot;:&quot;sponsored-products-feedback-modal-sp_detail2&quot;,&quot;width&quot;:&quot;350&quot;,&quot;header&quot;:&quot;Share your feedback&quot;,&quot;url&quot;:&quot;/gp/sponsored-products/lazyLoad/handler/sp-feedback-handler.html?pl=%2B%2FhRrOOKbeGWcbifO3%2BjJ1aXC1zDfA%2FAVdCtTCCxXpHPI0EcbfhGufmApkwd7rthv4ovFBc4KW1U%0AZrO3kgAib7%2BJk5deTU71j3E3%2BDoED3WvLaR2z%2Fv7ndHZfdOFSf8ovXvSW%2BexXuwJH489YuQu7eCh%0AP9subeZsOsKw5g6lx2t%2BW%2FF0xH1owgar7gluJCmzG1PPam1IPyw4IFpu107kR3K6rB%2BLSr64YDJE%0Abv%2B6x6BkfRLteAJw29ZA10cUNbHLctJi%2B5tS%2FGDMekiKWeof229QRgM0NAXb1FeevNaQveAzFiPp%0AnzWZ8bYPWklJI1A49w41JlsALbvbuZz85jRrSLPGcr6ModS5p54Z2SeT4LdbiH5ks1MAHyUoz6Fd%0AZrm1sND6Jw31YJv%2BmssGY7RQHnrrDI%2FwnCe9jmzS5XXjBD6JJrRPtNMm2gPCLVsw%2B6M2Igdyu3ZO%0AN63q80t2dIeFGoMHM2UaSW4ms5LAidbtb3%2BuNJgP0NsuYVu8GHgWOqPXdTkri9NBOYk5coVlxFTB%0ABWbkfT3KbbvkbSSs3pPAdI0Zbv2PD4W%2BVzDnkWOkM7YrP4uAAjmTwGqNi3fFpKD0otKvZe7pF964%0Aai7NjCU1f9Q3bz7vo21JvARW4c%2FpUaBuKX0dx2IkAT0%3D&quot;}\">            \u003Ca href=\"javascript:void(0)\" class=\"a-popover-trigger a-declarative\">Feedback\u003Ci class=\"a-icon a-icon-popover\">\u003C/i>\u003C/a>        \u003C/span>    \u003C/div>\u003C/div>\u003Ca class=\"a-link-normal\" target=\"_top\" rel=\"noopener\" title=\"Jumper EZbook 2 Windows 10 Laptop Intel 4GB RAM 64GB Quad Core 14.1 Inch Slim Ultrabook, Lightweight Notebook Portable\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_7?ie=UTF8&amp;adId=A0735887160D1P5ZM0V4M&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB07P5ZDQJQ%2Fref%3Dsspa_dk_detail_7%3Fpsc%3D1\">                                                \u003Cimg alt=\"Jumper EZbook 2 Windows 10 Laptop Intel 4GB RAM 64GB Quad Core 14.1 Inch Slim Ultrabook, Lightweight Notebook Portable\" src=\"https://m.media-amazon.com/images/I/31S-MVikXTL._AC_SR160,160_.jpg\" class=\"a-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://m.media-amazon.com/images/I/31S-MVikXTL._AC_SR160,160_.jpg&quot;:[160,160],&quot;https://m.media-amazon.com/images/I/31S-MVikXTL._AC_SR480,480_.jpg&quot;:[480,480],&quot;https://m.media-amazon.com/images/I/31S-MVikXTL._AC_SR320,320_.jpg&quot;:[320,320]}\">                                            \u003Cdiv data-rows=\"4\" aria-hidden=\"true\" class=\"sponsored-products-truncator-truncate sponsored-products-truncator-line-clamp-4\">            Jumper EZbook 2 Windows 10 Laptop Intel 4GB RAM 64GB Quad Core 14.1 Inch Slim Ultra...\u003C/div>            \u003C/a>    \u003Cdiv class=\"a-row\">        \u003Ca class=\"a-link-normal adReviewLink a-text-normal\" target=\"_top\" rel=\"noopener\" title=\"Jumper EZbook 2 Windows 10 Laptop Intel 4GB RAM 64GB Quad Core 14.1 Inch Slim Ultrabook, Lightweight Notebook Portable\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_7?ie=UTF8&amp;adId=A0735887160D1P5ZM0V4M&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB07P5ZDQJQ%2Fref%3Dsspa_dk_detail_7%3Fpsc%3D1#customerReviews\">        \u003Ci class=\"a-icon a-icon-star a-star-3\">\u003C/i>        \u003Cspan class=\"a-color-link\">19\u003C/span>        \u003C/a>    \u003C/div>    \u003Cdiv class=\"a-row a-color-price\">                                        \u003Cspan class=\"a-color-price\">$209.90\u003C/span>                                                \u003Cspan style=\"position: relative; top: 2px;\">                \u003Ci class=\"a-icon a-icon-prime a-icon-small\" role=\"img\">\u003C/i>            \u003C/span>                            \u003C/div>\u003C/div>                                                                                                                                                \u003C/li>                                            \u003Cli class=\"a-carousel-card\" style=\"width:160px;\" role=\"listitem\">                                                                                                                                                                            \u003Cdiv id=\"sp_detail2_B07FBFVV6Y\" data-asin=\"B07FBFVV6Y\" data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;sspa_dk_detail_8&quot;,&quot;asin&quot;:&quot;B07FBFVV6Y&quot;}\" data-viewpixelurl=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;adId=200016234890851&amp;adIndex=8\" class=\"a-section sp_offerVertical\">                \u003Cnoscript>        \u003Cimg alt=\"\" src=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200016234890851&eventType=2&adIndex=8\">    \u003C/noscript>    \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {        P.when('SponsoredProductsViewability').execute(function(SV) {            SV.loadImagePixel(\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200016234890851&eventType=2&adIndex=8\");        });    }));\u003C/script>        \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {    P.when('A', 'SponsoredProductsViewability').execute(function(A, SV) {        SV.registerViewTrackingElement(A.$(\"#sp_detail2_B07FBFVV6Y\"), \"sp_detail2\");    });}));\u003C/script>        \u003Cdiv class=\"pa_feedbackForm_container_sp_detail2\" style=\"display:none;\">    \u003Cdiv class=\"sp_adID\">        \u003Cspan class=\"a-declarative\" data-action=\"a-modal\" data-a-modal=\"{&quot;footer&quot;:&quot;\\u003cdiv id='sponsored-products-feedback-footer'>&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;name&quot;:&quot;sponsored-products-feedback-modal-sp_detail2&quot;,&quot;width&quot;:&quot;350&quot;,&quot;header&quot;:&quot;Share your feedback&quot;,&quot;url&quot;:&quot;/gp/sponsored-products/lazyLoad/handler/sp-feedback-handler.html?pl=gNPX6wo2N%2BZ6XDyunZxbPT09fk7vDF7O21jn7PhLt0ou8VoTBlFxgB%2Fp%2F4LPFBH%2FfbaInhI1tWpV%0AKaPa0o6GzeToisQvtgcCsvLnFoD8KzuaX0ui9Fs07AAnXcEqmAwMTJKR%2FZJ%2BI4qznXRfRAt3SdEg%0AP9qCGpFaTP3Taz7AoPbyTUDD8BYuOUGEqsKPsPOXaZX%2BUfDgOSbjiU%2BSigR7Acbvl%2FdervYTFL6D%0Aqbx9HlTSM%2FPbSliDTZ%2FRPv0v0Mg7cz%2BojPEmLTe36TDQItsQIFluqpP9I%2B4JqiqAaJFZU1i7x%2FS1%0ASm5VIYaDHVYyXzUBVXjxczxW%2FFCrznTzUaMZ4M0%2FR9hg7irmF0nQV%2BGqXyzf54tFknLHNmjEhMHg%0AWZTX8lFZ0uEWI5tnXwv4lhPi%2Bb1BslcdiEnfXBGW7Mvm3vv0R%2BRqzz1HCthvVZiQxkO72PKPe%2BqO%0AaK8a6%2BpD668RL6%2Bv%2BTUSYWxZGvpUb4Zc8xyrIc6cbwufxyjnTd4qQ6Ly9ONBaCZ8MtUnTvFsFAW7%0AHPb4Bt24CmlaKV%2BswhI8Z3AGwxvE6bgKB6HdX0nB6Ijxn5zQN2PwUaC4uRuH37Oqsf8bH8CPYuGn%0A7T0jc7dDR58VISjgQdvJptDN1Llc62dtXvEiYf59sx76QCj1NTQq4Q%3D%3D&quot;}\">            \u003Ca href=\"javascript:void(0)\" class=\"a-popover-trigger a-declarative\">Feedback\u003Ci class=\"a-icon a-icon-popover\">\u003C/i>\u003C/a>        \u003C/span>    \u003C/div>\u003C/div>\u003Ca class=\"a-link-normal\" target=\"_top\" rel=\"noopener\" title=\"Jumper EZbook 2 Ultrabook Laptop 14.1&quot; Windows 10 4GB/64GB Intel Cherry Trail Z8350 Quad Core 1.84GHz , Dual USB 0.3MP Camera with 10000mAh Big Battery Laptop\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_8?ie=UTF8&amp;adId=A0510846CL1O59MWK4EI&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB07FBFVV6Y%2Fref%3Dsspa_dk_detail_8%3Fpsc%3D1\">                                                \u003Cimg alt=\"Jumper EZbook 2 Ultrabook Laptop 14.1&quot; Windows 10 4GB/64GB Intel Cherry Trail Z8350 Quad Core 1.84GHz , Dual USB 0.3MP Camera with 10000mAh Big Battery Laptop\" src=\"https://m.media-amazon.com/images/I/41IXTS1ULUL._AC_SR160,160_.jpg\" class=\"a-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://m.media-amazon.com/images/I/41IXTS1ULUL._AC_SR480,480_.jpg&quot;:[480,480],&quot;https://m.media-amazon.com/images/I/41IXTS1ULUL._AC_SR320,320_.jpg&quot;:[320,320],&quot;https://m.media-amazon.com/images/I/41IXTS1ULUL._AC_SR160,160_.jpg&quot;:[160,160]}\">                                            \u003Cdiv data-rows=\"4\" aria-hidden=\"true\" class=\"sponsored-products-truncator-truncate sponsored-products-truncator-line-clamp-4\">            Jumper EZbook 2 Ultrabook Laptop 14.1\" Windows 10 4GB/64GB Intel Cherry Trail Z8350...\u003C/div>            \u003C/a>    \u003Cdiv class=\"a-row\">        \u003Ca class=\"a-link-normal adReviewLink a-text-normal\" target=\"_top\" rel=\"noopener\" title=\"Jumper EZbook 2 Ultrabook Laptop 14.1&quot; Windows 10 4GB/64GB Intel Cherry Trail Z8350 Quad Core 1.84GHz , Dual USB 0.3MP Camera with 10000mAh Big Battery Laptop\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_8?ie=UTF8&amp;adId=A0510846CL1O59MWK4EI&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB07FBFVV6Y%2Fref%3Dsspa_dk_detail_8%3Fpsc%3D1#customerReviews\">        \u003Ci class=\"a-icon a-icon-star a-star-3-5\">\u003C/i>        \u003Cspan class=\"a-color-link\">10\u003C/span>        \u003C/a>    \u003C/div>    \u003Cdiv class=\"a-row a-color-price\">                                        \u003Cspan class=\"a-color-price\">$219.99\u003C/span>                                                \u003Cspan style=\"position: relative; top: 2px;\">                \u003Ci class=\"a-icon a-icon-prime a-icon-small\" role=\"img\">\u003C/i>            \u003C/span>                            \u003C/div>\u003C/div>                                                                                                                                                \u003C/li>                                            \u003Cli class=\"a-carousel-card\" style=\"width:160px;\" role=\"listitem\">                                                                                                                                                                            \u003Cdiv id=\"sp_detail2_B07P6NRTNW\" data-asin=\"B07P6NRTNW\" data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;sspa_dk_detail_9&quot;,&quot;asin&quot;:&quot;B07P6NRTNW&quot;}\" data-viewpixelurl=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;adId=200016712439611&amp;adIndex=9\" class=\"a-section sp_offerVertical\">                \u003Cnoscript>        \u003Cimg alt=\"\" src=\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200016712439611&eventType=2&adIndex=9\">    \u003C/noscript>    \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {        P.when('SponsoredProductsViewability').execute(function(SV) {            SV.loadImagePixel(\"/gp/sponsored-products/logging/log-action.html?qualifier=1569717935&id=5919822563300754&widgetName=sp_detail2&adId=200016712439611&eventType=2&adIndex=9\");        });    }));\u003C/script>        \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {    P.when('A', 'SponsoredProductsViewability').execute(function(A, SV) {        SV.registerViewTrackingElement(A.$(\"#sp_detail2_B07P6NRTNW\"), \"sp_detail2\");    });}));\u003C/script>        \u003Cdiv class=\"pa_feedbackForm_container_sp_detail2\" style=\"display:none;\">    \u003Cdiv class=\"sp_adID\">        \u003Cspan class=\"a-declarative\" data-action=\"a-modal\" data-a-modal=\"{&quot;footer&quot;:&quot;\\u003cdiv id='sponsored-products-feedback-footer'>&quot;,&quot;closeButton&quot;:&quot;false&quot;,&quot;name&quot;:&quot;sponsored-products-feedback-modal-sp_detail2&quot;,&quot;width&quot;:&quot;350&quot;,&quot;header&quot;:&quot;Share your feedback&quot;,&quot;url&quot;:&quot;/gp/sponsored-products/lazyLoad/handler/sp-feedback-handler.html?pl=rPtbxtdch13pVpI1w1kEU2GKzqp2KzKkYVj0%2FGiyXydQqJp3JFktf%2BPIA%2BqmOMZIf8sXInWIJePQ%0AuEUcLsjF%2FWA5b5h2wMW2HjDI9Q5U75Uiv4xetVWFh87JrBfA%2FoS1%2BhcYOOkLrPvg%2BP4Cz7bbZRdI%0Avv4TDcn9HbJJLdUsIU87PApSFf7RcFMv6X%2BZc5pXFitXggCfXaH0YZlsS%2Bmr0qTMW8XKfL59F7S%2B%0AMOMX%2FNrllRSC38qhRbKTnVsy3zrJscdX80AlSA7VcAXaAscWTEszPjCd4N07OZiE6KhCeJL2agS0%0ABwJF5d5XgZSln0m4R92vsmtUD900e6HFrfZAtxPCnjQKYRK2zx5rRyPSR6tEnD48PYYbzW6CzF4W%0ATeWYjCJ4cXxCO7qJcEfg%2FqAcEGTn4%2FJZulzV4BveOOkp6Z2uRVenj0h5IaZT3%2FN%2Bg2HkmLEUD9Jk%0AfSqj7eAYhNuoJbePybltKvVMoDNT6EIDlehy8hh6tGYzMehlo9EdWEeJYEigdDLbSqsZtaU8KTUV%0AQjKzZxffo%2FyveIWJOMWLKvR4bpYXvK8iO%2F4SePCEaEdphfpNDOXLncFurNDus%2B7n8RXNDLagecGP%0ACt%2BUe3CbXyZtgSnhgmo32FGkfuXe3fYd%2FTxQoeJEkhA%3D&quot;}\">            \u003Ca href=\"javascript:void(0)\" class=\"a-popover-trigger a-declarative\">Feedback\u003Ci class=\"a-icon a-icon-popover\">\u003C/i>\u003C/a>        \u003C/span>    \u003C/div>\u003C/div>\u003Ca class=\"a-link-normal\" target=\"_top\" rel=\"noopener\" title=\"Jumper EZbook X3 laptop windows 10,Thin and Light Laptop, 13.3'' HD PC computer, Intel N3350 6GB 64GB eMMC 2.4G/5G WiFi\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_9?ie=UTF8&amp;adId=A0982446TIPXDCO59POX&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB07P6NRTNW%2Fref%3Dsspa_dk_detail_9%3Fpsc%3D1\">                                                \u003Cimg alt=\"Jumper EZbook X3 laptop windows 10,Thin and Light Laptop, 13.3'' HD PC computer, Intel N3350 6GB 64GB eMMC 2.4G/5G WiFi\" src=\"https://m.media-amazon.com/images/I/41j3UNjGD-L._AC_SR160,160_.jpg\" class=\"a-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://m.media-amazon.com/images/I/41j3UNjGD-L._AC_SR320,320_.jpg&quot;:[320,320],&quot;https://m.media-amazon.com/images/I/41j3UNjGD-L._AC_SR160,160_.jpg&quot;:[160,160],&quot;https://m.media-amazon.com/images/I/41j3UNjGD-L._AC_SR480,480_.jpg&quot;:[480,480]}\">                                            \u003Cdiv data-rows=\"4\" aria-hidden=\"true\" class=\"sponsored-products-truncator-truncate sponsored-products-truncator-line-clamp-4\">            Jumper EZbook X3 laptop windows 10,Thin and Light Laptop, 13.3'' HD PC computer, In...\u003C/div>            \u003C/a>    \u003Cdiv class=\"a-row\">        \u003Ca class=\"a-link-normal adReviewLink a-text-normal\" target=\"_top\" rel=\"noopener\" title=\"Jumper EZbook X3 laptop windows 10,Thin and Light Laptop, 13.3'' HD PC computer, Intel N3350 6GB 64GB eMMC 2.4G/5G WiFi\" href=\"https://www.amazon.com/gp/slredirect/picassoRedirect.html/ref=sspa_dk_detail_9?ie=UTF8&amp;adId=A0982446TIPXDCO59POX&amp;qualifier=1569717935&amp;id=5919822563300754&amp;widgetName=sp_detail2&amp;url=%2Fdp%2FB07P6NRTNW%2Fref%3Dsspa_dk_detail_9%3Fpsc%3D1#customerReviews\">        \u003Ci class=\"a-icon a-icon-star a-star-4-5\">\u003C/i>        \u003Cspan class=\"a-color-link\">13\u003C/span>        \u003C/a>    \u003C/div>    \u003Cdiv class=\"a-row a-color-price\">                                        \u003Cspan class=\"a-color-price\">$217.90\u003C/span>                                                \u003Cspan style=\"position: relative; top: 2px;\">                \u003Ci class=\"a-icon a-icon-prime a-icon-small\" role=\"img\">\u003C/i>            \u003C/span>                            \u003C/div>\u003C/div>                                                                                                                                                \u003C/li>                        \u003C/ol>\u003C/div>\u003C/div>\u003Cdiv class=\"a-carousel-col a-carousel-right\">\u003Ca class=\"a-button a-button-image a-carousel-button a-carousel-goto-nextpage\" tabindex=\"0\" href=\"#\" id=\"a-autoid-18\">\u003Cspan class=\"a-button-inner\">\u003Ci class=\"a-icon a-icon-next\">\u003Cspan class=\"a-icon-alt\">Next page of related Sponsored Products\u003C/span>\u003C/i>\u003C/span>\u003C/a>\u003C/div>\u003C/div>\u003C/div>            \u003Cdiv class=\"SP-Ad-Feedback\">                 \u003Ca id=\"sp_detail2_feedbackMessage\" class=\"a-link-normal dynamicSPFL\" href=\"#sp_detail2_feedbackForm\">Ad feedback\u003C/a>            \u003C/div>        \u003Cspan class=\"a-end aok-hidden\">\u003C/span>\u003C/div>    \u003Cscript type=\"text/javascript\">(function(f) {f(window.P._namespace(\"FirebirdSpRendering\"));}(function(P) {   P.when('A', 'a-carousel-framework', 'AmazonClicks').execute(function (A, CF, AC) {     CF.getCarousel(document.getElementById(\"sp_detail2\"));     AC.registerFeedbackEvents(\"sp_detail2_carousel\", \"sp_detail2_feedbackMessage\", \"Ad feedback\", \"Hide feedback\", \"pa_feedbackForm_container_sp_detail2\");   });               P.when('A', 'SPHAT').execute(function(A, SPHAT) {     var containerSelector = \"#sp_detail2 div\";     var elementsAllowedToBeHidden = ['script', 'div.sp_adID', 'div.pa_feedbackForm_container_sp_detail2', 'span.a-declarative', 'span.aok-hidden', 'input[type=hidden]', 'noscript'];     var csmCounterMetricName = 'sp_detail2.adb';     var hadImpact = SPHAT.checkForHiddenElements(containerSelector, elementsAllowedToBeHidden, csmCounterMetricName);     A.state(\"sp_detail2\", { adBlockerHadImpact: hadImpact});   });           P.when('SponsoredProductsViewability').execute(function(SV) {     SV.registerAuiEvents(['ready', 'scroll', 'resize', 'orientationchange']);   });}));\u003C/script>\u003C/div>\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cscript>if (typeof uet === 'function' && typeof ues === 'function') {var scope = 'Detail_dp-ads-center-promo_Desktop';var placementId = '32fc627e-b509-489a-93e0-f2589ab00826';ues('wb', 'adplacements:' + scope.replace(/\\_/g, ':'), {wb:1}); uet('bb', 'adplacements:' + scope.replace(/\\_/g, ':'), {wb:1}); if (placementId) {ues('wb', 'adplacements:' + placementId, {wb:1});uet('bb', 'adplacements:' + placementId, {wb:1});}}\u003C/script>\u003Chr size=\"1\" noshade=\"noshade\" class=\"a-divider-normal\">\u003Cdiv id=\"ape_Detail_dp-ads-center-promo_Desktop_placement\" class=\"copilot-secure-display celwidget  text/x-dacx-safeframe\" cel_widget_id=\"adplacements:Detail:dp-ads-center-promo:Desktop\" data-campaign=\"6529\" style=\"display: none; margin: auto; line-height: 0; width: 970px;\" data-ad-details=\"{&quot;slot&quot; :&quot;Detail_dp-ads-center-promo_Desktop&quot;,&quot;slotName&quot; :&quot;dp-ads-center-promo&quot;,&quot;src&quot; : &quot;https://aax-us-east.amazon-adsystem.com/e/xsp/getAd?src=500&amp;slot=dp-ads-center-promo&amp;rid=0101674ec7c6792b7a2743885b416573c98637be0ddea85c80d8bce98ed4a2c70741&quot;,&quot;adServer&quot; :&quot;cs&quot;,&quot;campaignId&quot; :  &quot;6529&quot;,&quot;arid&quot; :&quot;d4fa019ffa264bb09ca4803aa751771f&quot;,&quot;placementId&quot;: &quot;32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;size&quot; :{&quot;width&quot;: &quot;970px&quot;,&quot;height&quot; : &quot;250px&quot;},&quot;allowedSizes&quot; :[],&quot;allowedDomains&quot; :  [&quot;g-ecx.images-amazon.com&quot;],&quot;aanParams&quot; :   &quot;site%3Damazon.us%3Bpt%3DDetail%3Bslot%3Ddp-ads-center-promo%3Bpid%3DB06XD3LXXK%3Bbn%3D565108%3Barid%3Dd4fa019ffa264bb09ca4803aa751771f&quot;,&quot;loadAfter&quot; :   &quot;criticalFeature&quot;,&quot;extraDelay&quot; :  0,&quot;iframeExtraStyle&quot;: &quot;&quot;,&quot;iframeClass&quot;:  &quot;&quot;,&quot;adPixels&quot;: [],&quot;adPixelDelay&quot;: &quot;0&quot;,&quot;aaxInstrPixelUrl&quot;: &quot;&quot;,&quot;serverSideFetchAd&quot;: &quot;false&quot;,&quot;enableAdBlockerDetector&quot;: false,&quot;disableResizeFunc&quot;: true,&quot;fallbackStaticAdImgUrl&quot;: &quot;&quot;,&quot;fallbackStaticAdClickUrl&quot;: &quot;&quot;,&quot;fallbackStaticAdExtraStyle&quot;: &quot;&quot;,&quot;adFeedbackInfo&quot;: {&quot;endPoint&quot;: &quot;/gp/aq-feedback/lazyLoad/handler/af-link-handler.html&quot;,&quot;boolFeedback&quot;: true,&quot;slugText&quot;: &quot;Advertisement&quot;},&quot;adPlacementMetaData&quot;: {&quot;pageUrl&quot;: &quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwNlhEM0xYWEs/ZHBSZXF1ZXN0SWQ9V1kySzA2VjdXRU1LVEMwSzJIN1cmV0RHPXBjX2Rpc3BsYXlfb25fd2Vic2l0ZSYqZW50cmllcyo9MCYqVmVyc2lvbio9MSY=&quot;,&quot;adElementId&quot;: &quot;ape_Detail_dp-ads-center-promo_Desktop_placement&quot;,&quot;pageType&quot;: &quot;Detail&quot;,&quot;slotName&quot;: &quot;dp-ads-center-promo&quot;},&quot;adCreativeMetaData&quot;: {&quot;adNetwork&quot;: &quot;cs&quot;},&quot;advertisementStyle&quot;: {&quot;position&quot;: &quot;absolute&quot;,&quot;top&quot;: &quot;2px&quot;,&quot;right&quot;: &quot;0px&quot;,&quot;display&quot;: &quot;inline-block&quot;,&quot;font&quot;: &quot;normal 11px Arial&quot;,&quot;color&quot;: &quot;grey&quot;},&quot;feedbackDivStyle&quot;: { &quot;position&quot;: &quot;relative&quot;, &quot;height&quot;: &quot;18px&quot;},&quot;viewabilityStandards&quot;: [{&quot;p&quot;: 0, &quot;t&quot;: 0, &quot;def&quot;: &quot;amzn&quot;}, {&quot;p&quot;: 30, &quot;t&quot;: 1, &quot;def&quot;: &quot;iab&quot;}, {&quot;p&quot;: 100, &quot;t&quot;: 1, &quot;def&quot;: &quot;groupm&quot;}],&quot;ajaxWeblabTriggerId&quot;: &quot;&quot;,&quot;abpStatus&quot;: &quot;-1&quot;,&quot;abpAcceptable&quot;: &quot;true&quot;,&quot;programIdsToCollapse&quot;: [],&quot;DAsfUrl&quot;:&quot;https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/desktop/DAsf-1.50.228f98c._V451950910_.js&quot;}\" aria-hidden=\"true\" data-arid=\"d4fa019ffa264bb09ca4803aa751771f\">\u003Ciframe name=\"{&quot;slot&quot;:&quot;Detail_dp-ads-center-promo_Desktop&quot;,&quot;slotName&quot;:&quot;dp-ads-center-promo&quot;,&quot;src&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/getAd?src=500&amp;slot=dp-ads-center-promo&amp;rid=0101674ec7c6792b7a2743885b416573c98637be0ddea85c80d8bce98ed4a2c70741&quot;,&quot;adServer&quot;:&quot;cs&quot;,&quot;campaignId&quot;:&quot;6529&quot;,&quot;arid&quot;:&quot;d4fa019ffa264bb09ca4803aa751771f&quot;,&quot;placementId&quot;:&quot;32fc627e-b509-489a-93e0-f2589ab00826&quot;,&quot;size&quot;:{&quot;width&quot;:&quot;970px&quot;,&quot;height&quot;:&quot;250px&quot;},&quot;allowedSizes&quot;:[{&quot;width&quot;:&quot;970px&quot;,&quot;height&quot;:&quot;250px&quot;}],&quot;allowedDomains&quot;:[&quot;g-ecx.images-amazon.com&quot;,&quot;d3l3lkinz3f56t.cloudfront.net&quot;,&quot;g-ecx.images-amazon.com&quot;,&quot;z-ecx.images-amazon.com&quot;,&quot;images-na.ssl-images-amazon.com&quot;,&quot;g-ec4.images-amazon.com&quot;,&quot;images-cn.ssl-images-amazon.com&quot;],&quot;aanParams&quot;:&quot;site%3Damazon.us%3Bpt%3DDetail%3Bslot%3Ddp-ads-center-promo%3Bpid%3DB06XD3LXXK%3Bbn%3D565108%3Barid%3Dd4fa019ffa264bb09ca4803aa751771f&quot;,&quot;loadAfter&quot;:&quot;criticalFeature&quot;,&quot;extraDelay&quot;:0,&quot;iframeExtraStyle&quot;:&quot;&quot;,&quot;iframeClass&quot;:&quot;&quot;,&quot;adPixels&quot;:[],&quot;adPixelDelay&quot;:&quot;0&quot;,&quot;aaxInstrPixelUrl&quot;:&quot;&quot;,&quot;serverSideFetchAd&quot;:&quot;false&quot;,&quot;enableAdBlockerDetector&quot;:false,&quot;disableResizeFunc&quot;:true,&quot;fallbackStaticAdImgUrl&quot;:&quot;&quot;,&quot;fallbackStaticAdClickUrl&quot;:&quot;&quot;,&quot;fallbackStaticAdExtraStyle&quot;:&quot;&quot;,&quot;adFeedbackInfo&quot;:{&quot;endPoint&quot;:&quot;/gp/aq-feedback/lazyLoad/handler/af-link-handler.html&quot;,&quot;boolFeedback&quot;:true,&quot;slugText&quot;:&quot;Advertisement&quot;},&quot;adPlacementMetaData&quot;:{&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwNlhEM0xYWEs/ZHBSZXF1ZXN0SWQ9V1kySzA2VjdXRU1LVEMwSzJIN1cmV0RHPXBjX2Rpc3BsYXlfb25fd2Vic2l0ZSYqZW50cmllcyo9MCYqVmVyc2lvbio9MSY=&quot;,&quot;adElementId&quot;:&quot;ape_Detail_dp-ads-center-promo_Desktop_placement&quot;,&quot;pageType&quot;:&quot;Detail&quot;,&quot;slotName&quot;:&quot;dp-ads-center-promo&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;cs&quot;},&quot;advertisementStyle&quot;:{&quot;position&quot;:&quot;absolute&quot;,&quot;top&quot;:&quot;2px&quot;,&quot;right&quot;:&quot;0px&quot;,&quot;display&quot;:&quot;inline-block&quot;,&quot;font&quot;:&quot;normal 11px Arial&quot;,&quot;color&quot;:&quot;grey&quot;},&quot;feedbackDivStyle&quot;:{&quot;position&quot;:&quot;relative&quot;,&quot;height&quot;:&quot;18px&quot;},&quot;viewabilityStandards&quot;:[{&quot;p&quot;:0,&quot;t&quot;:0,&quot;def&quot;:&quot;amzn&quot;},{&quot;p&quot;:30,&quot;t&quot;:1,&quot;def&quot;:&quot;iab&quot;},{&quot;p&quot;:100,&quot;t&quot;:1,&quot;def&quot;:&quot;groupm&quot;}],&quot;ajaxWeblabTriggerId&quot;:&quot;&quot;,&quot;abpStatus&quot;:&quot;-1&quot;,&quot;abpAcceptable&quot;:&quot;true&quot;,&quot;programIdsToCollapse&quot;:[],&quot;DAsfUrl&quot;:&quot;https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/desktop/DAsf-1.50.228f98c._V451950910_.js&quot;,&quot;hostDomain&quot;:&quot;https://www.amazon.com&quot;,&quot;queryParams&quot;:{},&quot;aPageStart&quot;:1569718202649,&quot;adStartTime&quot;:1569718204281,&quot;safeFrameSrc&quot;:&quot;https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/whitelisted/desktop/sf-1.50.228f98c._V451950908_.html&quot;}\" id=\"ape_Detail_dp-ads-center-promo_Desktop_iframe\" src=\"https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/whitelisted/desktop/sf-1.50.228f98c._V451950908_.html\" height=\"250px\" width=\"970px\" class=\"\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\" scrolling=\"no\" allowtransparency=\"true\" allowfullscreen=\"\" mozallowfullscreen=\"\" webkitallowfullscreen=\"\" data-arid=\"d4fa019ffa264bb09ca4803aa751771f\" sandbox=\"allow-scripts allow-top-navigation allow-popups allow-popups-to-escape-sandbox allow-same-origin\" style=\"\">\u003C/iframe>\u003C/div>\u003Cscript>(function(){function a(d,e){if(window.addEventListener){window.addEventListener(d,e,false);}else{if(window.attachEvent){window.attachEvent(\"on\"+d,e);}}}function c(d,e){if(window.removeEventListener){window.removeEventListener(d,e,false);}else{if(window.detachEvent){window.detachEvent(\"on\"+d,e);}}}var b=function(){(function(){(function(j,m){j.sfLogErrors=j.sfLogErrors||false;var o=o||function(s,r){r=r||new Error(s);if(j.ue&&typeof ue.count==\"function\"){ue.count(\"adplacements:safeFrameError\",1);}if(!j.sfLogErrors){return;}if(j.ueLogError){j.ueLogError(r,{logLevel:\"ERROR\",attribution:\"APE-safeframe\",message:s+\" \"});}else{if(typeof console!==\"undefined\"&&console.error){console.error(s,r);}}};j.aanParams=j.aanParams||{};j.aanParams[\"dp-ads-center-promo\"]=\"site=amazon.us;pt=Detail;slot=dp-ads-center-promo;pid=B06XD3LXXK;bn=565108;arid=d4fa019ffa264bb09ca4803aa751771f\";j[\"dp-ads-center-promo\"]={};j[\"dp-ads-center-promo\"].adStartTime=(new Date()).getTime();function d(){return j.innerHeight||m.documentElement.clientHeight;}function g(){return j.innerWidth||m.documentElement.clientWidth;}function e(t,r,s){if(t>0){return(s>t);}else{return(r>0);}}var f=function(){return(Date.now?Date.now():new Date().getTime());};throttle=function(s,u,y){var r,w,z;var x=null;var v=0;if(!y){y={};}var t=function(){v=y.leading===false?0:f();x=null;z=s.apply(r,w);if(!x){r=w=null;}};return function(){var B=f();if(!v&&y.leading===false){v=B;}var A=u-(B-v);r=this;w=arguments;if(A\u003C=0||A>u){if(x){clearTimeout(x);x=null;}v=B;z=s.apply(r,w);if(!x){r=w=null;}}else{if(!x&&y.trailing!==false){x=setTimeout(t,A);}}return z;};};function l(u,w,v,r){try{var t=m.getElementById(u).getBoundingClientRect();if(e(t.top,t.bottom,d())&&e(t.left,t.right,g())){if(typeof uet==\"function\"){uet(\"bb\",\"adplacements:viewablelatency:\"+w,{wb:1});if(v){uet(\"bb\",\"adplacements:viewablelatency:\"+v,{wb:1});}}if(typeof uex==\"function\"&&j.ue&&typeof ue.count==\"function\"){if(j.apeViewableLatencyTrackers[r].loaded){uex(\"ld\",\"adplacements:viewablelatency:\"+w,{wb:1});if(v){uex(\"ld\",\"adplacements:viewablelatency:\"+v,{wb:1});}ue.count(\"adplacements:htmlviewed:loaded:\"+w,1);if(v){ue.count(\"adplacements:htmlviewed:loaded:\"+v,1);}}ue.count(\"adplacements:htmlviewed:\"+w,1);if(v){ue.count(\"adplacements:htmlviewed:\"+v,1);}}j.apeViewableLatencyTrackers[r].viewed=true;if(j.apeViewableLatencyTrackers[r].tracker){c(\"scroll\",j.apeViewableLatencyTrackers[r].tracker);c(\"resize\",j.apeViewableLatencyTrackers[r].tracker);}}}catch(s){j.apeViewableLatencyTrackers[r].valid=false;}}try{j.apeViewableLatencyTrackers=j.apeViewableLatencyTrackers||{};var q=\"ape_Detail_dp-ads-center-promo_Desktop_placement\";var p=\"Detail_dp-ads-center-promo_Desktop\".replace(/\\_/g,\":\");var h=\"32fc627e-b509-489a-93e0-f2589ab00826\";var i=\"d4fa019ffa264bb09ca4803aa751771f\";j.apeViewableLatencyTrackers[i]=j.apeViewableLatencyTrackers[i]||{};j.apeViewableLatencyTrackers[i].valid=true;l(q,p,h,i);if(j.apeViewableLatencyTrackers[i].valid&&!j.apeViewableLatencyTrackers[i].viewed){j.apeViewableLatencyTrackers[i].tracker=throttle(function(){l(q,p,h,i);},20);a(\"scroll\",j.apeViewableLatencyTrackers[i].tracker);a(\"resize\",j.apeViewableLatencyTrackers[i].tracker);}}catch(k){if(j.apeViewableLatencyTrackers&&j.apeViewableLatencyTrackers.d4fa019ffa264bb09ca4803aa751771f){j.apeViewableLatencyTrackers.d4fa019ffa264bb09ca4803aa751771f.valid=false;}o(\"Error initializing viewable latency instrumentation\",k);}try{if(j.DAsf){j.DAsf.loadAds();}else{var n=m.createElement(\"script\");n.type=\"text/javascript\";n.async=true;n.charset=\"utf-8\";n.src=\"https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/desktop/DAsf-1.50.228f98c._V451950910_.js?csm_attribution=APE-SafeFrame\";n.onerror=function(){o(\"Error loading SafeFrame library\");};n.setAttribute(\"crossorigin\",\"anonymous\");(m.getElementsByTagName(\"head\")[0]||m.getElementsByTagName(\"body\")[0]).appendChild(n);}}catch(k){o(\"Error appending DAsf library\",k);}}(window,document));})();};b();})();\u003C/script>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cstyle>\n/*! jQuery UI - v1.10.3 - 2013-05-03\n* http://jqueryui.com\n* Includes: jquery.ui.core.css, jquery.ui.accordion.css, jquery.ui.autocomplete.css, jquery.ui.button.css, jquery.ui.datepicker.css, jquery.ui.dialog.css, jquery.ui.menu.css, jquery.ui.progressbar.css, jquery.ui.resizable.css, jquery.ui.selectable.css, jquery.ui.slider.css, jquery.ui.spinner.css, jquery.ui.tabs.css, jquery.ui.tooltip.css\n* To view and modify this theme, visit http://jqueryui.com/themeroller/?ffDefault=Trebuchet%20MS%2CTahoma%2CVerdana%2CArial%2Csans-serif&fwDefault=bold&fsDefault=1.1em&cornerRadius=4px&bgColorHeader=f6a828&bgTextureHeader=gloss_wave&bgImgOpacityHeader=35&borderColorHeader=e78f08&fcHeader=ffffff&iconColorHeader=ffffff&bgColorContent=eeeeee&bgTextureContent=highlight_soft&bgImgOpacityContent=100&borderColorContent=dddddd&fcContent=333333&iconColorContent=222222&bgColorDefault=f6f6f6&bgTextureDefault=glass&bgImgOpacityDefault=100&borderColorDefault=cccccc&fcDefault=1c94c4&iconColorDefault=ef8c08&bgColorHover=fdf5ce&bgTextureHover=glass&bgImgOpacityHover=100&borderColorHover=fbcb09&fcHover=c77405&iconColorHover=ef8c08&bgColorActive=ffffff&bgTextureActive=glass&bgImgOpacityActive=65&borderColorActive=fbd850&fcActive=eb8f00&iconColorActive=ef8c08&bgColorHighlight=ffe45c&bgTextureHighlight=highlight_soft&bgImgOpacityHighlight=75&borderColorHighlight=fed22f&fcHighlight=363636&iconColorHighlight=228ef1&bgColorError=b81900&bgTextureError=diagonals_thick&bgImgOpacityError=18&borderColorError=cd0a0a&fcError=ffffff&iconColorError=ffd27a&bgColorOverlay=666666&bgTextureOverlay=diagonals_thick&bgImgOpacityOverlay=20&opacityOverlay=50&bgColorShadow=000000&bgTextureShadow=flat&bgImgOpacityShadow=10&opacityShadow=20&thicknessShadow=5px&offsetTopShadow=-5px&offsetLeftShadow=-5px&cornerRadiusShadow=5px\n* Copyright 2013 jQuery Foundation and other contributors Licensed MIT */.ask-autocomplete{position:relative;top:0;left:0;cursor:default}.ask-autocomplete-menu{list-style:none;padding:0;margin:0;display:block;outline:0;border-radius:.3rem;position:relative}.ask-autocomplete-menu .ask-autocomplete-menu-item{margin:0;padding:0;width:100%;list-style:none}.ask-autocomplete-menu .ask-autocomplete-menu-item a{text-decoration:none;display:block;padding:1px 10px;line-height:2;min-height:0;font-weight:400}.ask-autocomplete-menu .ask-autocomplete-menu-item a.ask-autocomplete-state-active,.ask-autocomplete-menu .ask-autocomplete-menu-item a.ask-autocomplete-state-focus{font-weight:400;margin:0;background:#eee}.ask-autocomplete-menu-item-first{padding-top:10px!important}.ask-autocomplete-menu-item-last{padding-bottom:10px!important}.ask-autocomplete-menu .ask-state-disabled{font-weight:400;line-height:1.5}.ask-autocomplete-menu .ask-state-disabled a{cursor:default}.ask-autocomplete-widget{font-family:'Amazon Ember';font-size:1.1em}.ask-autocomplete-widget .ask-autocomplete-widget{font-size:1em}.ask-autocomplete-widget input,.ask-autocomplete-widget select,.ask-autocomplete-widget-content{border:1px solid #ddd;color:#333}.ask-autocomplete-widget-content a{color:#333}.ask-autocomplete-state-active a{color:#eb8f00;text-decoration:none}\n.askPage .askWrapText{word-wrap:break-word}.askHidden{display:none}a.ask-btf-search-link span{position:relative;top:-3px}.askLanguageFilterLabel{padding-right:6px}.a-icon-search.ask-btf-search-button-icon,.a-icon-search.ask-swdp-search-button-icon{vertical-align:middle}.askSearchInputIngress{position:relative}.askPage .a-link-normal{display:inline-block}.askFormLabel{padding-left:0!important}.askFormLabel label.a-native-dropdown{direction:ltr}.askTranslationFooterSeparator,.askTranslationFooterText{padding-right:5px}.askBtfSearchResultsContainer .askBtfSearchResults .matches,.askDPSearchPrimaryViewContent .matches,.askDPSearchSecondaryViewContent .askSearchResults .matches,.askLiveSearchResults .matches,.askSearchResultsContainer .askSearchResults .matches{font-weight:700;background-color:#ffcc7f}.askLiveSearchFailureMessage,.askLiveSearchLoading,.askLiveSearchSuccessfulMessage{display:none}.askExpanderContainer .askLongText{display:none}.askExpanderContainer .askShortText{display:inline}.askExpanderContainer .askSeeLess,.askExpanderContainer .askSeeMore{text-decoration:none}.askExpanderContainer.askExpanderExpanded .askLongText{display:inline}.askExpanderContainer.askExpanderExpanded .askShortText{display:none}.askAuthorBadge{border-top:1px dashed #A9A9A9;border-bottom:1px dashed #A9A9A9;font-size:9px;text-transform:uppercase;color:#004B91;letter-spacing:.5px;padding:2px;font-weight:700;white-space:nowrap}a.askAuthorBadge:link{text-decoration:none}.askNewAuthorBadge{padding-left:2px;color:purple;white-space:nowrap}a.askNewAuthorBadge:active,a.askNewAuthorBadge:link,a.askNewAuthorBadge:visited{text-decoration:none;color:purple}.askEnthusiastBadge{color:#538000}.askAnswerMoreQuestionsPostAnswerFormSection{position:relative}.askAnswerMoreQuestionsConfirmation{display:none;left:50%;top:50%;max-width:50%;position:absolute;color:#FFF;padding:10px;border-color:#6C7778;background-color:#6C7778;border-style:solid;border-radius:6px;z-index:2;transform:translate(-50%,-50%)}.askHuddlesUninitializedLink{display:none!important;visibility:hidden!important}.ask-profile-avatar-small .a-profile-avatar-wrapper{padding-right:6px!important;width:30px!important}.ask-profile-avatar-small .a-profile-avatar-wrapper .a-profile-avatar{height:24px!important;width:24px!important}.ask-profile-avatar-large .a-profile-avatar-wrapper{padding-right:6px!important;width:36px!important}.ask-profile-avatar-large .a-profile-avatar-wrapper .a-profile-avatar{height:30px!important;width:30px!important}.ask-profile-avatar-none .a-profile-avatar-wrapper{display:none}.ask-profile-avatar-none[data-a-type=enthusiast] .a-profile-avatar:after{display:none!important}.askQuestionExamples{padding:0 0 40px 60px}.askTypicalExamples{color:#333;line-height:19px;font-size:13px;display:block}.askExampleQuestion{color:#666;padding-top:5px}.askQuestionForm .badQuestion,.askQuestionForm .emptyQuestion{display:none}.askQuestionForm.hasBadQuestion .badQuestion,.askQuestionForm.hasEmptyQuestion .emptyQuestion{display:inline;color:#990D03}.askDetailPageSearchSubmitQuestionButton{margin-left:14px}#ask-btf-container{font-family:\"Amazon Ember\",Verdana,Arial,Helvetica,sans-serif}.askInlineWidget{word-wrap:break-word}.askWidgetQuestions{max-width:1000px}.askBtfSearchViewContent{max-width:1000px;word-wrap:break-word;overflow:hidden}.askBtfSearchResultsHeader{cursor:pointer;display:inline-block;padding:20px;padding-bottom:8px;padding-top:14px}.askBtfSearchResultsHeaderActive{font-weight:700;border-bottom:3px solid #ffa700}.askBtfSearchFailureMessage,.askBtfSearchQuestionErrorContainer .askError,.askBtfSearchResults:not(.askBtfSearchResultsActive),.askBtfSearchSearchIndicator,.askBtfSearchTabHeaders{display:none}.askBtfSearchQuestionErrorContainer{margin-bottom:0}.askBtfDesktopSeeAllQuestionsButton{margin-left:175px}.a-icon-search.ask-btf-search-button-icon{margin-left:40px;margin-right:5px}.ask-btf-search-button-placeholder{margin-right:40px}.askInlineWidget .vote{border-right:1px solid #ddd;text-align:center;color:#000;padding:0;margin:0;width:65px}.askInlineWidget .vote .label{text-align:center;display:block}.askInlineWidget .vote form{margin-bottom:0!important}.askInlineWidget .vote li{list-style:none;padding:none;margin:none;text-indent:none}.askInlineWidget .vote .up input[type=submit]{vertical-align:top}.askInlineWidget .vote input[type=submit]{-webkit-background-size:100%;-moz-background-size:100%;-o-background-size:100%;background-size:100%;background-repeat:no-repeat;text-indent:-9999em;font-size:1px;border:none;width:20px;height:16px;background-color:#fff}.askInlineWidget .vote input[type=submit]:disabled{opacity:.4;cursor:default}.askInlineWidget .vote .label[data-count] .one{display:none}.askInlineWidget .vote .label[data-count] .more{display:inline}.askInlineWidget .vote .label[data-count='1'] .one{display:inline}.askInlineWidget .vote .label[data-count='1'] .more{display:none}.cdQuestionAnswerHeader{font-size:21px;font-weight:700;color:#333!important;padding-bottom:4px;line-height:1.3}.cdQuestionAnswerBucket{height:507px}.cdQuestionAnswerBucket .rounded-standard,.customerForumsBucket .rounded-standard{-moz-border-radius:4px;-webkit-border-radius:4px;border-radius:4px}.cdQuestionAnswerBucket .dboards-btn,.customerForumsBucket .dboards-btn{color:#000;font-weight:700;text-decoration:none;text-align:center;display:inline-block;vertical-align:top;zoom:1;border-style:solid;border-width:1px;-moz-box-shadow:inset 0 -2px 2px rgba(0,0,0,.12);-webkit-box-shadow:inset 0 -2px 2px rgba(0,0,0,.12);box-shadow:inset 0 -2px 2px rgba(0,0,0,.12);cursor:pointer;margin:0;padding:0;outline:0;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none}.cdQuestionAnswerBucket .btn-prim,.customerForumsBucket .btn-prim{background:#e4e1db;background:-moz-linear-gradient(top,#fbcd5e,#fac237,#f7b42a);background:-webkit-gradient(linear,0 0,0 100%,from(#fbcd5e),to(#f7b42a));background:-webkit-linear-gradient(top,#fbcd5e,#fac237,#f7b42a);background:-o-linear-gradient(top,#fbcd5e,#f7b42a);background:-ms-linear-gradient(top,#fbcd5e,#f7b42a);background:linear-gradient(top,#fbcd5e,#f7b42a);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fbcd5e', endColorstr='#f7b42a');border-color:#f7b42a;text-shadow:#FFDD8C 0 1px 0}.cdQuestionAnswerBucket .dboards-btn span,.customerForumsBucket .dboards-btn span{color:#000;display:block}.cdQuestionAnswerBucket .dboards-btn .btn-small,.customerForumsBucket .dboards-btn .btn-small{font-size:12px;font-weight:700;line-height:16px;padding:1px 6px 2px 6px}.cdQuestionAnswerBucket .dboards-btn input.btn-small,.customerForumsBucket .dboards-btn input.btn-small{font-size:12px;font-weight:700;line-height:12px;padding:1px 6px 2px 6px;padding:3px 6px 3px 6px\\9}.cdQuestionAnswerBucket span.dboards-btn input,.customerForumsBucket span.dboards-btn input{display:block;cursor:pointer;background:0 0;border:0}.cdQuestionAnswerBucket a.btn-prim:hover,.cdQuestionAnswerBucket span.btn-prim:hover,.customerForumsBucket a.btn-prim:hover,.customerForumsBucket span.btn-prim:hover{background:#fecd57;background:-moz-linear-gradient(top,#fecd57,#fdc94b,#fbc43c);background:-webkit-gradient(linear,0 0,0 100%,from(#fecd57),to(#fbc43c));background:-webkit-linear-gradient(top,#fecd57,#fdc94b,#fbc43c);background:-o-linear-gradient(top,#fecd57,#fbc43c);background:-ms-linear-gradient(top,#fecd57,#fbc43c);background:linear-gradient(top,#fecd57,#fbc43c);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#fecd57', endColorstr='#fbc43c')}.cdQuestionAnswerBucket a.btn-sec:hover,.cdQuestionAnswerBucket span.btn-sec:hover,.customerForumsBucket a.btn-sec:hover,.customerForumsBucket span.btn-sec:hover{background:#f9f8f6;background:-moz-linear-gradient(top,#f9f8f6,#e4e1db,#f5f5f3);background:-webkit-gradient(linear,0 0,0 100%,from(#f9f8f6),to(#f5f5f3));background:-webkit-linear-gradient(top,#f9f8f6,#e4e1db,#f5f5f3);background:-o-linear-gradient(top,#f9f8f6,#f5f5f3);background:-ms-linear-gradient(top,#f9f8f6,#f5f5f3);background:linear-gradient(top,#f9f8f6,#f5f5f3);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#f9f8f6', endColorstr='#f5f5f3')}.cdQuestionAnswerBucket .dboards-btn:hover span,.cdQuestionAnswerBucket a.dboards-btn:hover input,.customerForumsBucket .dboards-btn:hover span,.customerForumsBucket a.dboards-btn:hover input{color:#000;text-decoration:none;cursor:pointer}.cdQuestionAnswerBucket a.dboards-btn:active,.cdQuestionAnswerBucket span.dboards-btn:active,.customerForumsBucket a.dboards-btn:active,.customerForumsBucket span.dboards-btn:active{cursor:pointer;text-decoration:none;-moz-box-shadow:inset 0 1px 1px rgba(0,0,0,.4);-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.4);box-shadow:inset 0 1px 1px rgba(0,0,0,.4)}.cdQuestionAnswerBucket a.dboards-btn:active span,.customerForumsBucket a.dboards-btn:active span{color:#000;padding-top:3px}.cdQuestionAnswerBucket a.dboards-btn:active span.btn-small,.customerForumsBucket a.dboards-btn:active span.btn-small{line-height:14px}.cdQuestionAnswerBucket span.dboards-btn:active input,.customerForumsBucket span.dboards-btn:active input{padding:2px 6px 1px 6px}.cdQuestionAnswerBucket a.dboards-btn:active,.cdQuestionAnswerBucket input.btn-small:active,.customerForumsBucket a.dboards-btn:active,.customerForumsBucket input.btn-small:active{outline:0}.cdQuestionAnswerBucket .btn-sec,.customerForumsBucket .btn-sec{background:#e4e1db;background:-moz-linear-gradient(top,#f9f8f6,#e4e1db,#dad5ce);background:-webkit-gradient(linear,0 0,0 100%,from(#f9f8f6),to(#dad5ce));background:-webkit-linear-gradient(top,#f9f8f6,#e4e1db,#dad5ce);background:-o-linear-gradient(top,#f9f8f6,#dad5ce);background:-ms-linear-gradient(top,#f9f8f6,#dad5ce);background:linear-gradient(top,#f9f8f6,#dad5ce);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#f9f8f6', endColorstr='#dad5ce');border-color:#b6b2aa;text-shadow:#f8f8ed 0 1px 0}.cdQuestionAnswerBucket a.btn-sec:hover,.cdQuestionAnswerBucket span.btn-sec:hover .customerForumsBucket a.btn-sec:hover,.customerForumsBucket span.btn-sec:hover{background:#f9f8f6;background:-moz-linear-gradient(top,#f9f8f6,#e4e1db,#f5f5f3);background:-webkit-gradient(linear,0 0,0 100%,from(#f9f8f6),to(#f5f5f3));background:-webkit-linear-gradient(top,#f9f8f6,#e4e1db,#f5f5f3);background:-o-linear-gradient(top,#f9f8f6,#f5f5f3);background:-ms-linear-gradient(top,#f9f8f6,#f5f5f3);background:linear-gradient(top,#f9f8f6,#f5f5f3);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#f9f8f6', endColorstr='#f5f5f3')}.cdQuestionAnswerBucket,.cdQuestionAnswerBucket a,.cdQuestionAnswerBucket a:active,.cdQuestionAnswerBucket a:focus,.cdQuestionAnswerBucket a:visited,.cdQuestionAnswerBucket body,.cdQuestionAnswerBucket div,.cdQuestionAnswerBucket p,.cdQuestionAnswerBucket span,.cdQuestionAnswerBucket textarea{font-style:normal}.cdQuestionAnswerHeader{font-size:21px;font-weight:700;color:#333!important;padding-bottom:4px;line-height:1.3}.cdQuestionAnswerBucket a{text-decoration:none;color:#124C90}.cdQuestionLazySeeAll{float:left;padding:4px 0 8px 24px}.askReviewsPageAskWidget.a-column{float:none}.askReviewsPageAskWidget .askSubmitQuestion{float:right}.askReviewsPageAskWidget .askQuestionForm textarea{resize:none}.askReviewsPageAskWidget .askQuestionForm{overflow:hidden}.askReviewsPageAskWidget .askQuestionForm.hasBadQuestion .badQuestion,.askReviewsPageAskWidget .askQuestionForm.hasEmptyQuestion .emptyQuestion{display:block;width:75%}.askLiveSearchShow .askTeaserQuestions{display:none}.askLiveSearchHide .askLiveSearchResults{display:none}.askSearchInputIngress input{padding-right:25px}.askDisplayClearSearch{z-index:1;position:absolute;right:7px;top:12px;cursor:pointer;width:12px;height:12px}.askDisplayClearSearch:before{position:absolute;top:-11px;bottom:-6px;left:-6px;right:-7px;content:''}.askInlineWidget .askFailedToFetchMoreQuestions{color:#990D03;display:none;padding-bottom:10px}.askInlineWidget .askMoreQandAResults{margin-bottom:0}.askInlineWidget .askLoadMoreQuestions,.askInlineWidget .askTopQandALoadMoreQuestions{margin-left:175px}.askLiveSearchHide .askLiveSearchSeeAllQuestionsLink,.askLiveSearchShow .askFailedToFetchMoreQuestions,.askLiveSearchShow .askTopQandALoadMoreQuestions{display:none}.askInlineWidget .askSeeMoreQuestionsGrid{margin-top:0!important}.askInlineWidget .askFailedToFetchMoreAnswers{color:#990D03;display:none;padding-bottom:10px}.askInlineWidget .askInlineAnswers{display:none}.askInlineWidget .askCollpaseAdditionalAnswersButton{display:none;margin-top:-10px;padding-bottom:10px}.askInlineWidget .a-icon-extender-expand{margin-right:0}.askFormButtons{text-align:right}#ask-postAnswerButton,#ask-postAnswerCancel{display:inline-block}#ask-postAnswerCancel{margin-right:8px}.askQuestionListPage{margin:0 20px}.askQuestionListPage .askInlineWidget{padding-left:15px}.askQuestionListPage .askPaginationHeaderMessage{padding-top:5px}.askQuestionListPage .askSortPrompt{padding-right:6px}.askQuestionListPage .questionTextInput{width:50%;display:inline-block}.askQuestionListPage .askManufacturer{color:#666;font-size:12px}.askQuestionListPage .askAlertBox{width:50%}.askQuestionListPage .askProductDescription{margin-top:37px}.a-no-js .askQuestionListSortOption{display:none!important;visibility:hidden!important}.askQuestionListPage .a-subheader.a-breadcrumb ul li a{margin-left:20px}.askPostQuestionButtonContainer{display:none}.askAnswerMoreQuestionsModal{position:relative}.askAnswerMoreQuestionsModal .a-carousel-card{padding-left:14px}.answerMoreQuestionDesktopCard{overflow-y:auto;height:230px}.answerMoreQuestionsAnswerConfirmDesktopCard{height:295px;overflow-y:auto}.askAnswerMoreQuestionsPostAnswerSpinner{display:none;left:50%;top:50%;position:absolute;z-index:2;margin-left:-16px;margin-top:-16px;transform:translate(-50%,-50%)}.askAnswerMoreQuestionsModal ul.a-pagination.a-dots li{-webkit-border-radius:6px;-moz-border-radius:6px;-ms-border-radius:6px;border-radius:6px;border:1px solid #949494;height:9px;width:9px;background-color:#f3f3f3;display:inline-block}.askAnswerMoreQuestionsModal ul.a-pagination li.a-selected{background-color:#949494}.askAnswerMoreQuestionsDesktopBackDeactivate{color:#767676}.askAnswerMoreQuestionsDesktopBackActivate{color:#0066c0}.askAnswerMoreQuestionsDesktopPagination{margin:0 14px;padding-left:14px}.askAnswerMoreQuestionsDesktopPagination .a-link-normal{float:right}.askSearchResultsHeader{cursor:pointer;display:inline-block;padding:20px;padding-bottom:8px;padding-top:14px}.askSearchResultsHeaderActive{font-weight:700;border-bottom:3px solid #ffa700}.askDPSearchFailureMessage,.askDPSearchQuestionErrorContainer .askError,.askDPSearchSearchIndicator,.askPostQuestionPromptContainer,.askSearchResults:not(.askSearchResultsActive),.askSearchTabHeaders{display:none}.askDPSearchViewContent{max-width:1000px;word-wrap:break-word;overflow:hidden}.askDPSearchForm,.askDPSearchQuestionErrorContainer{margin-bottom:0}.askBottomPostQuestionContainer .askBtfSearchPostTextInput,.askBottomPostQuestionContainer .askDPSearchPostTextInput{margin-left:14px}.askBottomPostQuestionContainer .askPostQuestionPromptButton{max-width:100px;margin-left:5px}.askBottomPostQuestionContainer .a-icon-popover{display:none}.askFollowupQuestion{display:inline-block;max-width:100%;padding:0 14px;margin:0 10px 14px 0;background-color:#EBF8FA;border-bottom:solid 1px #969696;line-height:29px;color:#002F36}.a-icon-search.ask-swdp-search-button-icon{margin-left:40px;margin-right:5px}.ask-swdp-search-button-placeholder{margin-right:40px}\n\u003C/style>\n\u003Cscript>\n  (window.AmazonUIPageJS ? AmazonUIPageJS : P).load.js('https://images-na.ssl-images-amazon.com/images/I/311%2BNUiljjL._RC|51FhDlPwC-L.js_.js?AUIClients/AskAuiAssets#155248-T1.161288-T1.206532-T1.188847-T1');\n\u003C/script>\n\n\u003Cscript type=\"text/javascript\">(function(f) {var _np=(window.P._namespace(\"AskAuiAssets\"));if(_np.guardFatal){_np.guardFatal(f)(_np);}else{f(_np);}}(function(P) {\n  window.P && P.when('jQuery', 'ready').execute(function($) {\n    var btf = $('#ask-btf_feature_div');\n    if ($('html').is('.a-lt-ie10')) {\n      var assetsLink = btf.find('link').attr('href');\n      document.styleSheets[document.styleSheets.length - 1].addImport(assetsLink);\n    } else {\n      btf.find('script, link').appendTo('head');\n    }\n\n    var atf = $('.askATFLink');\n    atf.attr(\"href\", \"#Ask\");\n  });\n}));\u003C/script>\n\n\u003Cdiv id=\"cf-ask-cel\" class=\"celwidget\">\n  \u003Cdiv id=\"Ask\">\u003C/div>\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"ask_lazy_load_div\">\n    \u003Chr class=\"bucketDivider\" size=\"1\" noshade=\"noshade\">\n    \u003Cdiv class=\"cdQuestionAnswerBucket\" style=\"height: 432px;\">\n        \u003Cdiv class=\"cdQuestionAnswerHeader\">\n            Customer Questions &amp; Answers\n        \u003C/div>\n        \u003Cdiv class=\"cdQuestionLazySeeAll\">\n            \u003Ca href=\"https://www.amazon.com/ask/questions/asin/B06XD3LXXK/ref=cm_cd_dp_lla_ql_ll/137-0530487-6192152\">See questions and answers\u003C/a>\n        \u003C/div>\n        \u003Cdiv class=\"loading_ind\" style=\"display:none\" width=\"100%\">\n            \u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/G/01/ui/loadIndicators/loadIndicator-large._CB192195480_.gif\" aria-hidden=\"true\" role=\"presentation\" style=\"padding:8px 0px 0px 100px\">\n        \u003C/div>\n    \u003C/div>\n    \u003Cscript type=\"text/javascript\">(function(f) {var _np=(window.P._namespace(\"AskAuiAssets\"));if(_np.guardFatal){_np.guardFatal(f)(_np);}else{f(_np);}}(function(P) {\n    (function(P){\n        P.when(\"jQuery\").execute(function($){\n           \"use strict\";\n            $('.cdQuestionAnswerBucket').height(432);\n        });\n    })(window.AmazonUIPageJS || window.P);\n    }));\u003C/script>\n\u003C/div>\n\n\n\n    \n\n\n\n\n\u003Cscript>\n  (window.AmazonUIPageJS ? AmazonUIPageJS : P).load.js('https://images-na.ssl-images-amazon.com/images/I/11omjJhwsqL.js?AUIClients/DetailPageLazyLoadLibAssets');\n\u003C/script>\n\n\n\n\u003Cscript type=\"text/JavaScript\">\n\n     P.when(\"jQuery\", \"lazyLoadLib\",\"ready\").execute(function ($) {\n            $('#ask_lazy_load_div').lazyLoadContent({\n             threshold : 800,\n             url: \"/gp/ask-widget/askWidget.html?asin=B06XD3LXXK&askError=&askMessage=&wdg=pc_display_on_website&askLanguage=&requestID=WY2K06V7WEMKTC0K2H7W\",\n             metrics : true,\n             name : 'ask_btf',\n             cache : false\n             });\n     });\n\u003C/script>\n\u003C/div>\n\n\n\n\n\n\u003Ca id=\"customerReviews\" aria-label=\"Top Reviews\" class=\"a-link-normal\" href=\"#\">\u003C/a>\u003Chr class=\"a-spacing-large a-divider-normal\">\u003Cspan class=\"cr-widget-PageState\">\n  \u003Cspan id=\"cr-state-object\" data-state=\"{&quot;asin&quot;:&quot;B06XD3LXXK&quot;,&quot;customerId&quot;:&quot;0&quot;,&quot;deviceType&quot;:&quot;desktop&quot;,&quot;reviewCommentsAjaxUrl&quot;:&quot;&quot;,&quot;reviewCommentSubmissionAjaxUrl&quot;:&quot;&quot;,&quot;approvedAuthorAjaxUrl&quot;:&quot;&quot;,&quot;reviewsAjaxUrl&quot;:&quot;/hz/reviews-render/ajax/medley-filtered-reviews/get/&quot;,&quot;medleyReviewsAjaxUrl&quot;:&quot;/hz/reviews-render/ajax/medley-reviews/get/&quot;,&quot;reviewerType&quot;:&quot;&quot;,&quot;formatType&quot;:&quot;&quot;,&quot;filterByKeyword&quot;:&quot;&quot;,&quot;filterByLanguage&quot;:&quot;&quot;,&quot;filterByStar&quot;:&quot;&quot;,&quot;signinUrl&quot;:&quot;https://www.amazon.com/ap/signin?openid.return_to\\u003dhttps%3A%2F%2Fwww.amazon.com%2FAcer-Flagship-CB3-532-Premium-Chromebook%2Fproduct-reviews%2FB06XD3LXXK%3Fie%3DUTF8\\u0026openid.identity\\u003dhttp%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select\\u0026openid.claimed_id\\u003dhttp%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select\\u0026openid.assoc_handle\\u003dusflex\\u0026openid.mode\\u003dcheckid_setup\\u0026openid.ns\\u003dhttp%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0&quot;,&quot;reftagTriggerUrl&quot;:&quot;/hz/reviews-render/ajax/reftag-trigger&quot;,&quot;mobileImageGalleryUrl&quot;:&quot;&quot;,&quot;getImagesAjaxUrl&quot;:&quot;&quot;,&quot;productInfoUrl&quot;:&quot;&quot;,&quot;disableScroll&quot;:false,&quot;onLoadShowHideElements&quot;:&quot;#cm-cr-dp-reviews-loading-wrapper,.cr-reviews-loading&quot;}\">\u003C/span>\n\u003C/span>\n\u003Cinput type=\"hidden\" name=\"\" value=\"https://m.media-amazon.com/images/G/01/vap/video/airy2/prod/2.0.1460.0/js/airy.skin._CB513066589_.js\" id=\"cr-airy-js-source-url\">\u003Cinput type=\"hidden\" name=\"\" value=\"https://m.media-amazon.com/images/G/01/vap/video/airy2/prod/2.0.1460.0/css/beacon._CB513066589_.css\" id=\"cr-airy-css-source-url\">\u003Cinput type=\"hidden\" name=\"\" value=\"https://m.media-amazon.com/images/G/01/vap/video/airy2/prod/2.0.1460.0/flash/AiryBasicRenderer._CB513066589_.swf\" id=\"cr-video-swf-url\">\u003Clink rel=\"stylesheet\" href=\"https://images-na.ssl-images-amazon.com/images/I/01LAv8I1AxL._RC|01MPykUsrCL.css,01LKsGfpclL.css,01PTkp9JOCL.css,01cdXa5nSoL.css_.css?AUIClients/DesktopMedleyFilteringMetaAsset\">\n\u003Cscript>\n  (window.AmazonUIPageJS ? AmazonUIPageJS : P).load.js('https://images-na.ssl-images-amazon.com/images/I/31lKiJrlhZL._RC|11tXe99yWBL.js,01-4MbsHMWL.js,11gFiYe7KbL.js,217PnHIylxL.js_.js?AUIClients/DesktopMedleyFilteringMetaAsset');\n\u003C/script>\n\u003Cdiv id=\"reviewsMedley\" data-hook=\"reviews-medley-widget\" class=\"a-fixed-left-grid a-spacing-extra-large\">\u003Cdiv class=\"a-fixed-left-grid-inner\" style=\"padding-left:300px\">\u003Cdiv class=\"a-fixed-left-grid-col a-col-left\" style=\"width:300px;margin-left:-300px;float:left;\">\u003Cspan class=\"cr-widget-SeeAllReviews\" data-hook=\"cr-widget-SeeAllReviews\">\n      \u003Cdiv class=\"a-row\">\u003Ch2>Customer reviews\u003C/h2>\u003C/div>\u003C/span>\n  \u003Cdiv class=\"a-section a-spacing-none a-spacing-top-mini cr-widget-ACR\">\u003Cdiv class=\"a-fixed-left-grid AverageCustomerReviews a-spacing-small\">\u003Cdiv class=\"a-fixed-left-grid-inner\" style=\"padding-left:105px\">\u003Cdiv class=\"a-fixed-left-grid-col a-col-left\" style=\"width:105px;margin-left:-105px;float:left;\">\u003Ci data-hook=\"average-star-rating\" class=\"a-icon a-icon-star-medium a-star-medium-4 averageStarRating\">\u003Cspan class=\"a-icon-alt\">4.1 out of 5 stars\u003C/span>\u003C/i>\u003C/div>\u003Cdiv class=\"a-fixed-left-grid-col aok-align-center a-col-right\" style=\"padding-left:0%;float:left;\">\u003Cdiv class=\"a-row\">\u003Cspan class=\"a-size-base a-nowrap\">\u003Cspan class=\"a-declarative\" data-action=\"a-popover\" data-a-popover=\"{&quot;inlineContent&quot;:&quot;Amazon calculates a product\\u2019s star ratings based on a machine learned model instead of a raw data average. The model takes into account factors including the age of a rating, whether the ratings are from verified purchasers, and factors that establish reviewer trustworthiness.&quot;}\">\u003Ca href=\"javascript:void(0)\" class=\"a-popover-trigger a-declarative\">\u003Cspan data-hook=\"rating-out-of-text\" class=\"a-size-medium a-color-base\">4.1 out of 5\u003C/span>\u003Ci class=\"a-icon a-icon-popover\">\u003C/i>\u003C/a>\u003C/span>\u003C/span>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv data-hook=\"total-review-count\" class=\"a-row a-spacing-medium averageStarRatingNumerical\">\u003Cspan class=\"a-size-base a-color-secondary\">\u003C!--TODO: Replace this string with arp-x-ratings 5/22/19 (ShopperExp-5143)-->\n                956  customer ratings\u003C/span>\u003C/div>\u003C/div>\u003Cspan class=\"cr-widget-Histogram\">\n      \u003Cdiv class=\"a-fixed-left-grid a-spacing-none\">\u003Cdiv class=\"a-fixed-left-grid-inner\" style=\"padding-left:280px\">\u003Cdiv class=\"a-fixed-left-grid-col a-col-left\" style=\"width:280px;margin-left:-280px;float:left;\">\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:push-state\" data-reviews:filter-action:push-state=\"{&quot;scrollToSelector&quot;:&quot;#reviews-filter-info&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ctable id=\"histogramTable\" class=\"a-normal a-spacing-none\" role=\"presentation\">\n\n\n\n\n\n\n\n\n\u003C/table>\u003Ctable id=\"histogramTable\" class=\"a-normal a-align-middle a-spacing-base\">\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n\n\n  \n\n    \n      \n      \n\n        \n        \u003Ctbody>\u003Ctr data-reftag=\"\" data-reviews-state-param=\"{&quot;filterByStar&quot;:&quot;five_star&quot;, &quot;pageNumber&quot;:&quot;1&quot;}\" class=\"a-histogram-row\">\n\n          \u003Ctd class=\"aok-nowrap\">\n\n            \u003Cspan class=\"a-size-base\">\n              \u003Ca class=\"a-link-normal 5star\" title=\"5 stars represent 64% of rating\" href=\"/product-reviews/B06XD3LXXK/ref=acr_dp_hist_5?ie=UTF8&amp;filterByStar=five_star&amp;reviewerType=all_reviews#reviews-filter-bar\">\n                5 star\n              \u003C/a>\n            \u003C/span>\n\n            \u003Cspan class=\"a-letter-space\">\u003C/span>\n          \u003C/td>\n\n          \u003Ctd class=\"a-span10\">\n            \u003Ca class=\"a-link-normal\" title=\"5 stars represent 64% of rating\" href=\"/product-reviews/B06XD3LXXK/ref=acr_dp_hist_5?ie=UTF8&amp;filterByStar=five_star&amp;reviewerType=all_reviews#reviews-filter-bar\">\n              \u003Cdiv class=\"a-meter\" aria-label=\"64%\">\u003Cdiv class=\"a-meter-bar a-meter-unfilled\" style=\"width: 64%;\">\u003C/div>\u003C/div>\n            \u003C/a>\n          \u003C/td>\n\n          \u003Ctd class=\"a-text-right a-nowrap\">\n            \u003Cspan class=\"a-letter-space\">\u003C/span>\n            \u003Cspan class=\"a-size-base\">\n              \u003Ca class=\"a-link-normal\" title=\"5 stars represent 64% of rating\" href=\"/product-reviews/B06XD3LXXK/ref=acr_dp_hist_5?ie=UTF8&amp;filterByStar=five_star&amp;reviewerType=all_reviews#reviews-filter-bar\">\n                \n                  64%\n                \n              \u003C/a>\n            \u003C/span>\n          \u003C/td>\n        \u003C/tr>\n\n      \n    \n\n  \n\n  \n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n\n\n  \n\n    \n      \n      \n\n        \n        \u003Ctr data-reftag=\"\" data-reviews-state-param=\"{&quot;filterByStar&quot;:&quot;four_star&quot;, &quot;pageNumber&quot;:&quot;1&quot;}\" class=\"a-histogram-row\">\n\n          \u003Ctd class=\"aok-nowrap\">\n\n            \u003Cspan class=\"a-size-base\">\n              \u003Ca class=\"a-link-normal 4star\" title=\"4 stars represent 12% of rating\" href=\"/product-reviews/B06XD3LXXK/ref=acr_dp_hist_4?ie=UTF8&amp;filterByStar=four_star&amp;reviewerType=all_reviews#reviews-filter-bar\">\n                4 star\n              \u003C/a>\n            \u003C/span>\n\n            \u003Cspan class=\"a-letter-space\">\u003C/span>\n          \u003C/td>\n\n          \u003Ctd class=\"a-span10\">\n            \u003Ca class=\"a-link-normal\" title=\"4 stars represent 12% of rating\" href=\"/product-reviews/B06XD3LXXK/ref=acr_dp_hist_4?ie=UTF8&amp;filterByStar=four_star&amp;reviewerType=all_reviews#reviews-filter-bar\">\n              \u003Cdiv class=\"a-meter\" aria-label=\"12%\">\u003Cdiv class=\"a-meter-bar a-meter-unfilled\" style=\"width: 12%;\">\u003C/div>\u003C/div>\n            \u003C/a>\n          \u003C/td>\n\n          \u003Ctd class=\"a-text-right a-nowrap\">\n            \u003Cspan class=\"a-letter-space\">\u003C/span>\n            \u003Cspan class=\"a-size-base\">\n              \u003Ca class=\"a-link-normal\" title=\"4 stars represent 12% of rating\" href=\"/product-reviews/B06XD3LXXK/ref=acr_dp_hist_4?ie=UTF8&amp;filterByStar=four_star&amp;reviewerType=all_reviews#reviews-filter-bar\">\n                \n                  12%\n                \n              \u003C/a>\n            \u003C/span>\n          \u003C/td>\n        \u003C/tr>\n\n      \n    \n\n  \n\n  \n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n\n\n  \n\n    \n      \n      \n\n        \n        \u003Ctr data-reftag=\"\" data-reviews-state-param=\"{&quot;filterByStar&quot;:&quot;three_star&quot;, &quot;pageNumber&quot;:&quot;1&quot;}\" class=\"a-histogram-row\">\n\n          \u003Ctd class=\"aok-nowrap\">\n\n            \u003Cspan class=\"a-size-base\">\n              \u003Ca class=\"a-link-normal 3star\" title=\"3 stars represent 6% of rating\" href=\"/product-reviews/B06XD3LXXK/ref=acr_dp_hist_3?ie=UTF8&amp;filterByStar=three_star&amp;reviewerType=all_reviews#reviews-filter-bar\">\n                3 star\n              \u003C/a>\n            \u003C/span>\n\n            \u003Cspan class=\"a-letter-space\">\u003C/span>\n          \u003C/td>\n\n          \u003Ctd class=\"a-span10\">\n            \u003Ca class=\"a-link-normal\" title=\"3 stars represent 6% of rating\" href=\"/product-reviews/B06XD3LXXK/ref=acr_dp_hist_3?ie=UTF8&amp;filterByStar=three_star&amp;reviewerType=all_reviews#reviews-filter-bar\">\n              \u003Cdiv class=\"a-meter\" aria-label=\"6%\">\u003Cdiv class=\"a-meter-bar a-meter-unfilled\" style=\"width: 6%;\">\u003C/div>\u003C/div>\n            \u003C/a>\n          \u003C/td>\n\n          \u003Ctd class=\"a-text-right a-nowrap\">\n            \u003Cspan class=\"a-letter-space\">\u003C/span>\n            \u003Cspan class=\"a-size-base\">\n              \u003Ca class=\"a-link-normal\" title=\"3 stars represent 6% of rating\" href=\"/product-reviews/B06XD3LXXK/ref=acr_dp_hist_3?ie=UTF8&amp;filterByStar=three_star&amp;reviewerType=all_reviews#reviews-filter-bar\">\n                \n                  6%\n                \n              \u003C/a>\n            \u003C/span>\n          \u003C/td>\n        \u003C/tr>\n\n      \n    \n\n  \n\n  \n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n\n\n  \n\n    \n      \n      \n\n        \n        \u003Ctr data-reftag=\"\" data-reviews-state-param=\"{&quot;filterByStar&quot;:&quot;two_star&quot;, &quot;pageNumber&quot;:&quot;1&quot;}\" class=\"a-histogram-row\">\n\n          \u003Ctd class=\"aok-nowrap\">\n\n            \u003Cspan class=\"a-size-base\">\n              \u003Ca class=\"a-link-normal 2star\" title=\"2 stars represent 4% of rating\" href=\"/product-reviews/B06XD3LXXK/ref=acr_dp_hist_2?ie=UTF8&amp;filterByStar=two_star&amp;reviewerType=all_reviews#reviews-filter-bar\">\n                2 star\n              \u003C/a>\n            \u003C/span>\n\n            \u003Cspan class=\"a-letter-space\">\u003C/span>\n          \u003C/td>\n\n          \u003Ctd class=\"a-span10\">\n            \u003Ca class=\"a-link-normal\" title=\"2 stars represent 4% of rating\" href=\"/product-reviews/B06XD3LXXK/ref=acr_dp_hist_2?ie=UTF8&amp;filterByStar=two_star&amp;reviewerType=all_reviews#reviews-filter-bar\">\n              \u003Cdiv class=\"a-meter\" aria-label=\"4%\">\u003Cdiv class=\"a-meter-bar a-meter-unfilled\" style=\"width: 4%;\">\u003C/div>\u003C/div>\n            \u003C/a>\n          \u003C/td>\n\n          \u003Ctd class=\"a-text-right a-nowrap\">\n            \u003Cspan class=\"a-letter-space\">\u003C/span>\n            \u003Cspan class=\"a-size-base\">\n              \u003Ca class=\"a-link-normal\" title=\"2 stars represent 4% of rating\" href=\"/product-reviews/B06XD3LXXK/ref=acr_dp_hist_2?ie=UTF8&amp;filterByStar=two_star&amp;reviewerType=all_reviews#reviews-filter-bar\">\n                \n                  4%\n                \n              \u003C/a>\n            \u003C/span>\n          \u003C/td>\n        \u003C/tr>\n\n      \n    \n\n  \n\n  \n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n\n\n  \n\n    \n      \n      \n\n        \n        \u003Ctr data-reftag=\"\" data-reviews-state-param=\"{&quot;filterByStar&quot;:&quot;one_star&quot;, &quot;pageNumber&quot;:&quot;1&quot;}\" class=\"a-histogram-row\">\n\n          \u003Ctd class=\"aok-nowrap\">\n\n            \u003Cspan class=\"a-size-base\">\n              \u003Ca class=\"a-link-normal 1star\" title=\"1 stars represent 14% of rating\" href=\"/product-reviews/B06XD3LXXK/ref=acr_dp_hist_1?ie=UTF8&amp;filterByStar=one_star&amp;reviewerType=all_reviews#reviews-filter-bar\">\n                1 star\n              \u003C/a>\n            \u003C/span>\n\n            \u003Cspan class=\"a-letter-space\">\u003C/span>\n          \u003C/td>\n\n          \u003Ctd class=\"a-span10\">\n            \u003Ca class=\"a-link-normal\" title=\"1 stars represent 14% of rating\" href=\"/product-reviews/B06XD3LXXK/ref=acr_dp_hist_1?ie=UTF8&amp;filterByStar=one_star&amp;reviewerType=all_reviews#reviews-filter-bar\">\n              \u003Cdiv class=\"a-meter\" aria-label=\"14%\">\u003Cdiv class=\"a-meter-bar a-meter-unfilled\" style=\"width: 14%;\">\u003C/div>\u003C/div>\n            \u003C/a>\n          \u003C/td>\n\n          \u003Ctd class=\"a-text-right a-nowrap\">\n            \u003Cspan class=\"a-letter-space\">\u003C/span>\n            \u003Cspan class=\"a-size-base\">\n              \u003Ca class=\"a-link-normal\" title=\"1 stars represent 14% of rating\" href=\"/product-reviews/B06XD3LXXK/ref=acr_dp_hist_1?ie=UTF8&amp;filterByStar=one_star&amp;reviewerType=all_reviews#reviews-filter-bar\">\n                \n                  14%\n                \n              \u003C/a>\n            \u003C/span>\n          \u003C/td>\n        \u003C/tr>\n\n      \n    \n\n  \n\n  \n\n\n\n\u003C/tbody>\u003C/table>\n\u003C/span>\u003C/div>\u003C/div>\u003C/div>\u003C/span>\n    \u003Chr class=\"a-spacing-large a-spacing-top-large a-divider-normal\">\u003Cspan class=\"cr-widget-SummaryAttribute\" data-hook=\"cr-widget-SummaryAttribute\">\n      \u003Cdiv id=\"cr-dp-summarization-attributes\" data-hook=\"summarization-attributes-widget\" class=\"review\">\n\n  \u003Cdiv class=\"a-row a-spacing-medium\">\u003Cspan data-hook=\"summarization-attributes-title\" class=\"a-size-medium a-text-bold\">By feature\u003C/span>\u003C/div>\u003Cdiv data-hook=\"cr-summarization-attributes-list\" id=\"cr-summarization-attributes-list\" class=\"a-row a-spacing-none celwidget cr-asin-B06XD3LXXK\">\u003Cdiv id=\"cr-summarization-attribute-attr-battery-life\" data-hook=\"cr-summarization-attribute\" class=\"a-section a-spacing-none\">\u003Cdiv class=\"a-fixed-right-grid a-spacing-base\">\u003Cdiv class=\"a-fixed-right-grid-inner a-grid-vertical-align a-grid-center\">\u003Cdiv class=\"a-fixed-right-grid-col a-col-left\" style=\"padding-right:3%;float:left;\">\u003Cdiv class=\"a-row\">\u003Cspan class=\"a-size-base a-color-base\">Battery life\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"a-text-right a-fixed-right-grid-col a-col-right\" style=\"width:120px;margin-right:-120px;float:left;\">\u003Ci class=\"a-icon a-icon-star-small a-star-small-4-5\">\u003Cspan class=\"a-icon-alt\">4.4\u003C/span>\u003C/i>\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Cspan class=\"a-size-base a-color-tertiary\">4.4\u003C/span>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv id=\"cr-summarization-attribute-attr-screen-display\" data-hook=\"cr-summarization-attribute\" class=\"a-section a-spacing-none\">\u003Cdiv class=\"a-fixed-right-grid a-spacing-base\">\u003Cdiv class=\"a-fixed-right-grid-inner a-grid-vertical-align a-grid-center\">\u003Cdiv class=\"a-fixed-right-grid-col a-col-left\" style=\"padding-right:3%;float:left;\">\u003Cdiv class=\"a-row\">\u003Cspan class=\"a-size-base a-color-base\">Screen quality\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"a-text-right a-fixed-right-grid-col a-col-right\" style=\"width:120px;margin-right:-120px;float:left;\">\u003Ci class=\"a-icon a-icon-star-small a-star-small-4-5\">\u003Cspan class=\"a-icon-alt\">4.3\u003C/span>\u003C/i>\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Cspan class=\"a-size-base a-color-tertiary\">4.3\u003C/span>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv id=\"cr-summarization-attribute-attr-sound-quality\" data-hook=\"cr-summarization-attribute\" class=\"a-section a-spacing-none\">\u003Cdiv class=\"a-fixed-right-grid a-spacing-base\">\u003Cdiv class=\"a-fixed-right-grid-inner a-grid-vertical-align a-grid-center\">\u003Cdiv class=\"a-fixed-right-grid-col a-col-left\" style=\"padding-right:3%;float:left;\">\u003Cdiv class=\"a-row\">\u003Cspan class=\"a-size-base a-color-base\">Sound quality\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"a-text-right a-fixed-right-grid-col a-col-right\" style=\"width:120px;margin-right:-120px;float:left;\">\u003Ci class=\"a-icon a-icon-star-small a-star-small-4\">\u003Cspan class=\"a-icon-alt\">4.2\u003C/span>\u003C/i>\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Cspan class=\"a-size-base a-color-tertiary\">4.2\u003C/span>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv aria-live=\"polite\" data-a-expander-name=\"cr-summarization-attributes-see-more\" class=\"a-row a-expander-container a-spacing-none a-expander-extend-container\">\u003Cdiv id=\"cr-summarization-attributes-expanded\" data-hook=\"cr-summarization-attributes-expanded\" aria-expanded=\"false\" class=\"a-expander-content celwidget a-expander-extend-content\" style=\"display:none\">\u003Cdiv id=\"cr-summarization-attribute-attr-durability\" data-hook=\"cr-summarization-attribute\" class=\"a-section a-spacing-none\">\u003Cdiv class=\"a-fixed-right-grid a-spacing-base\">\u003Cdiv class=\"a-fixed-right-grid-inner a-grid-vertical-align a-grid-center\">\u003Cdiv class=\"a-fixed-right-grid-col a-col-left\" style=\"padding-right:3%;float:left;\">\u003Cdiv class=\"a-row\">\u003Cspan class=\"a-size-base a-color-base\">Durability\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"a-text-right a-fixed-right-grid-col a-col-right\" style=\"width:120px;margin-right:-120px;float:left;\">\u003Ci class=\"a-icon a-icon-star-small a-star-small-4\">\u003Cspan class=\"a-icon-alt\">4.1\u003C/span>\u003C/i>\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Cspan class=\"a-size-base a-color-tertiary\">4.1\u003C/span>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv id=\"cr-summarization-attribute-attr-touch-screen\" data-hook=\"cr-summarization-attribute\" class=\"a-section a-spacing-none\">\u003Cdiv class=\"a-fixed-right-grid a-spacing-base\">\u003Cdiv class=\"a-fixed-right-grid-inner a-grid-vertical-align a-grid-center\">\u003Cdiv class=\"a-fixed-right-grid-col a-col-left\" style=\"padding-right:3%;float:left;\">\u003Cdiv class=\"a-row\">\u003Cspan class=\"a-size-base a-color-base\">Touch Screen\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"a-text-right a-fixed-right-grid-col a-col-right\" style=\"width:120px;margin-right:-120px;float:left;\">\u003Ci class=\"a-icon a-icon-star-small a-star-small-3-5\">\u003Cspan class=\"a-icon-alt\">3.6\u003C/span>\u003C/i>\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Cspan class=\"a-size-base a-color-tertiary\">3.6\u003C/span>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv id=\"cr-summarization-attribute-attr-for-gaming\" data-hook=\"cr-summarization-attribute\" class=\"a-section a-spacing-none\">\u003Cdiv class=\"a-fixed-right-grid a-spacing-base\">\u003Cdiv class=\"a-fixed-right-grid-inner a-grid-vertical-align a-grid-center\">\u003Cdiv class=\"a-fixed-right-grid-col a-col-left\" style=\"padding-right:3%;float:left;\">\u003Cdiv class=\"a-row\">\u003Cspan class=\"a-size-base a-color-base\">For gaming\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"a-text-right a-fixed-right-grid-col a-col-right\" style=\"width:120px;margin-right:-120px;float:left;\">\u003Ci class=\"a-icon a-icon-star-small a-star-small-3-5\">\u003Cspan class=\"a-icon-alt\">3.5\u003C/span>\u003C/i>\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Cspan class=\"a-size-base a-color-tertiary\">3.5\u003C/span>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Ca href=\"javascript:void(0)\" data-action=\"a-expander-toggle\" class=\"a-expander-header a-declarative a-expander-extend-header\" data-a-expander-toggle=\"{&quot;allowLinkDefault&quot;:true, &quot;expand_prompt&quot;:&quot;See more&quot;, &quot;collapse_prompt&quot;:&quot;See less&quot;}\">\u003Ci class=\"a-icon a-icon-extender-expand\">\u003C/i>\u003Cspan class=\"a-expander-prompt\">See more\u003C/span>\u003C/a>\u003C/div>\u003C/div>\u003C/div>\n\n\u003Chr class=\"a-spacing-large a-spacing-top-extra-large a-divider-normal\">\u003C/span>\n  \u003Cspan class=\"cr-widget-Skyfall\" data-hook=\"cr-widget-Skyfall\">\n      \u003Cdiv class=\"a-section a-spacing-none\">\u003Cdiv class=\"card-padding\">\n    \n\n\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"cm_cr_skyfall_medley\" data-hook=\"cm_cr_skyfall_medley\" class=\"a-section celwidget review cr-asin-B06XD3LXXK\">\n    \u003Cdiv class=\"a-row a-spacing-medium\">\n        \u003Cspan data-hook=\"cm_cr_skyfall_medley_title\" class=\"a-size-medium a-text-bold\">\n            By customer groups &amp; interests\n        \u003C/span>\n        \u003Cspan class=\"cr-skyfall-whats-this-outer-wrapper\">\n\n  \u003Cspan class=\"a-declarative\" data-action=\"a-popover\" data-a-popover=\"{&quot;name&quot;:&quot;skyfallWhatsThis&quot;,&quot;activate&quot;:&quot;onclick&quot;,&quot;inlineContent&quot;:&quot;\\&quot;By customer groups &amp; interests\\u201d shows how a specific group of customers rated this product. Customers are assigned based on several factors including past purchases, shipping addresses, and Amazon program memberships. Amazon only displays aggregate ratings and never reveals which customers are in a specific group.&quot;}\">\u003Cspan class=\"cr-skyfall-whats-this-inner-wrapper\">\n\n      \u003Cspan class=\"cr-skyfall-whats-this-base cr-skyfall-whats-this\" data-hook=\"cm_cr_skyfall_medley_whatisthis\" title=\"What's this?\">\n      \u003C/span>\n\n    \u003C/span>\n\n  \u003C/span>\u003C/span>\n    \u003C/div>\n\n    \u003Cdiv class=\"a-row a-spacing-none\">\n        \u003Cspan class=\"a-declarative\" data-action=\"reviews:skyfall-clique-click\" data-reviews:skyfall-clique-click=\"{}\">\u003Cdiv data-hook=\"cm_cr_skyfall_medley_category\" class=\"a-fixed-right-grid a-spacing-base\">\u003Cdiv class=\"a-fixed-right-grid-inner a-grid-vertical-align a-grid-center\">\u003Cdiv class=\"a-fixed-right-grid-col a-col-left\" style=\"padding-right:3%;float:left;\">\u003Cdiv data-reftag=\"cm_cr_dp_d_sky_ttl\" class=\"a-row a-spacing-none\">\u003Cspan data-hook=\"cm_cr_skyfall_medley_group\" class=\"a-size-base a-color-base\">Computers\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"a-text-right a-fixed-right-grid-col a-col-right\" style=\"width:120px;margin-right:-120px;float:left;\">\u003Ci data-hook=\"cm_cr_skyfall_medley_averageStarRating\" data-reftag=\"cm_cr_dp_d_sky_sr\" class=\"a-icon a-icon-star-small a-star-small-4 averageStarRating\">\u003C/i>\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Cspan data-hook=\"cm_cr_skyfall_medley_averageStarRatingText\" class=\"a-size-base a-color-tertiary\">3.8\u003C/span>\u003C/div>\u003C/div>\u003C/div>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:skyfall-clique-click\" data-reviews:skyfall-clique-click=\"{}\">\u003Cdiv data-hook=\"cm_cr_skyfall_medley_category\" class=\"a-fixed-right-grid a-spacing-base\">\u003Cdiv class=\"a-fixed-right-grid-inner a-grid-vertical-align a-grid-center\">\u003Cdiv class=\"a-fixed-right-grid-col a-col-left\" style=\"padding-right:3%;float:left;\">\u003Cdiv data-reftag=\"cm_cr_dp_d_sky_ttl\" class=\"a-row a-spacing-none\">\u003Cspan data-hook=\"cm_cr_skyfall_medley_group\" class=\"a-size-base a-color-base\">Gaming\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"a-text-right a-fixed-right-grid-col a-col-right\" style=\"width:120px;margin-right:-120px;float:left;\">\u003Ci data-hook=\"cm_cr_skyfall_medley_averageStarRating\" data-reftag=\"cm_cr_dp_d_sky_sr\" class=\"a-icon a-icon-star-small a-star-small-4 averageStarRating\">\u003C/i>\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Cspan data-hook=\"cm_cr_skyfall_medley_averageStarRatingText\" class=\"a-size-base a-color-tertiary\">4.0\u003C/span>\u003C/div>\u003C/div>\u003C/div>\u003C/span>\n    \u003C/div>\n\n    \n        \n    \n\n    \n    \u003Cdiv class=\"cr-skyfall-feedback-section\">\n\n    \u003Cdiv class=\"a-section a-spacing-base cr-feedback-section\">\u003Cdiv class=\"a-fixed-right-grid cr-is-feature-helpful-row\">\u003Cdiv class=\"a-fixed-right-grid-inner a-grid-vertical-align a-grid-center\">\u003Cdiv data-hook=\"cm_cr_skyfall_feedback_text_section\" class=\"a-fixed-right-grid-col a-col-left\" style=\"padding-right:0%;float:left;\">\u003Cspan class=\"a-size-base a-color-tertiary\">Is this feature helpful?\u003C/span>\u003C/div>\u003Cdiv class=\"a-fixed-right-grid-col a-col-right\" style=\"width:120px;margin-right:-120px;float:left;\">\u003Cdiv class=\"a-fixed-right-grid\">\u003Cdiv class=\"a-fixed-right-grid-inner\" style=\"padding-right:60px\">\u003Cdiv class=\"a-fixed-right-grid-col a-col-left\" style=\"padding-right:0%;float:left;\">\u003Cspan class=\"a-declarative\" data-action=\"reviews:skyfall-feedback-click\" data-reviews:skyfall-feedback-click=\"{&quot;asin&quot;:&quot;B06XD3LXXK&quot;}\">\u003Cspan class=\"a-button a-button-span10 a-button-beside-text a-button-base a-button-small cr-feedback-helpful-yes aok-float-right\" id=\"a-autoid-19\">\u003Cspan class=\"a-button-inner\">\u003Cinput data-reftag=\"cm_cr_dp_d_hlp_yes\" class=\"a-button-input\" type=\"submit\" aria-labelledby=\"a-autoid-19-announce\">\u003Cspan class=\"a-button-text a-text-center\" aria-hidden=\"true\" id=\"a-autoid-19-announce\">Yes\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/div>\u003Cdiv class=\"a-fixed-right-grid-col a-col-right\" style=\"width:60px;margin-right:-60px;float:left;\">\u003Cspan class=\"a-declarative\" data-action=\"reviews:skyfall-feedback-click\" data-reviews:skyfall-feedback-click=\"{&quot;asin&quot;:&quot;B06XD3LXXK&quot;}\">\u003Cspan class=\"a-button a-button-span10 a-button-beside-text a-button-base a-button-small cr-feedback-helpful-no aok-float-right\" id=\"a-autoid-20\">\u003Cspan class=\"a-button-inner\">\u003Cinput data-reftag=\"cm_cr_dp_d_hlp_no\" class=\"a-button-input\" type=\"submit\" aria-labelledby=\"a-autoid-20-announce\">\u003Cspan class=\"a-button-text a-text-center\" aria-hidden=\"true\" id=\"a-autoid-20-announce\">No\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv class=\"a-section aok-hidden cr-more-feedback-section\">\u003Cdiv class=\"a-box a-alert-inline a-alert-inline-success\">\u003Cdiv class=\"a-box-inner a-alert-container\">\u003Ci class=\"a-icon a-icon-alert\">\u003C/i>\u003Cdiv class=\"a-alert-content\">\u003Cspan class=\"a-size-base a-color-success\">Thank you for your feedback.\u003C/span>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\n\n\n\n\u003C/div>\n\u003C/div>\n\u003C/div>\u003Chr class=\"a-spacing-large a-divider-normal\">\u003C/span>\n  \u003Ch3 data-hook=\"solicitation-title\" class=\"a-spacing-micro\">Review this product\u003C/h3>\u003Cdiv data-hook=\"share-your-thoughts-text\" id=\"dp-summary-share-your-thoughts\" class=\"a-row a-spacing-medium\">Share your thoughts with other customers\u003C/div>\u003Cdiv class=\"a-row\">\u003Cspan class=\"a-button a-button-base writeReviewButton cm-cr-button-wide\" id=\"a-autoid-21\">\u003Cspan class=\"a-button-inner\">\u003Ca href=\"/review/create-review/ref=cm_cr_dp_d_wr_but_top?ie=UTF8&amp;channel=glance-detail&amp;asin=B06XD3LXXK\" data-hook=\"write-review-button\" class=\"a-button-text\" role=\"button\" id=\"a-autoid-21-announce\">Write a customer review\u003C/a>\u003C/span>\u003C/span>\u003C/div>\u003Chr class=\"a-spacing-extra-large a-spacing-top-extra-large a-divider-normal\">\u003Cdiv id=\"ADPlaceholder\" class=\"a-section reviews-display-ad\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cscript>if (typeof uet === 'function' && typeof ues === 'function') {var scope = 'Detail_customer-reviews-top_Glance';var placementId = 'a5a58631-9157-450d-8b12-21b15ea5926d';ues('wb', 'adplacements:' + scope.replace(/\\_/g, ':'), {wb:1}); uet('bb', 'adplacements:' + scope.replace(/\\_/g, ':'), {wb:1}); if (placementId) {ues('wb', 'adplacements:' + placementId, {wb:1});uet('bb', 'adplacements:' + placementId, {wb:1});}}\u003C/script>\u003Cdiv id=\"ape_Detail_customer-reviews-top_Glance_placement\" class=\"copilot-secure-display celwidget  text/x-dacx-safeframe\" cel_widget_id=\"adplacements:Detail:customer-reviews-top:Glance\" data-campaign=\"7721\" style=\"width: 300px; height: 280px; display: none;\" data-ad-details=\"{&quot;slot&quot; :&quot;Detail_customer-reviews-top_Glance&quot;,&quot;slotName&quot; :&quot;customer-reviews-top&quot;,&quot;src&quot; : &quot;https://aax-us-east.amazon-adsystem.com/e/xsp/getAd?src=500&amp;slot=customer-reviews-top&amp;rid=0101674ec7c6792b7a2743885b416573c98637be0ddea85c80d8bce98ed4a2c70741&quot;,&quot;adServer&quot; :&quot;cs&quot;,&quot;campaignId&quot; :  &quot;7721&quot;,&quot;arid&quot; :&quot;927c57eb98ae46e7b8bd482b867d4d20&quot;,&quot;placementId&quot;: &quot;a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;size&quot; :{&quot;width&quot;: &quot;300px&quot;,&quot;height&quot; : &quot;250px&quot;},&quot;allowedSizes&quot; :[{&quot;width&quot;:&quot;305px&quot;, &quot;height&quot;:&quot;255px&quot;},{&quot;width&quot;:&quot;305px&quot;, &quot;height&quot;:&quot;250px&quot;}],&quot;allowedDomains&quot; :  [&quot;g-ecx.images-amazon.com&quot;],&quot;aanParams&quot; :   &quot;site%3Damazon.us%3Bpt%3DDetail%3Bslot%3Dcustomer-reviews-top%3Bpid%3DB06XD3LXXK%3Bbn%3D565108%3Barid%3D927c57eb98ae46e7b8bd482b867d4d20&quot;,&quot;loadAfter&quot; :   &quot;criticalFeature&quot;,&quot;extraDelay&quot; :  0,&quot;iframeExtraStyle&quot;: &quot;&quot;,&quot;iframeClass&quot;:  &quot;&quot;,&quot;adPixels&quot;: [],&quot;adPixelDelay&quot;: &quot;0&quot;,&quot;aaxInstrPixelUrl&quot;: &quot;&quot;,&quot;serverSideFetchAd&quot;: &quot;false&quot;,&quot;enableAdBlockerDetector&quot;: false,&quot;disableResizeFunc&quot;: true,&quot;fallbackStaticAdImgUrl&quot;: &quot;&quot;,&quot;fallbackStaticAdClickUrl&quot;: &quot;&quot;,&quot;fallbackStaticAdExtraStyle&quot;: &quot;&quot;,&quot;adFeedbackInfo&quot;: {&quot;endPoint&quot;: &quot;/gp/aq-feedback/lazyLoad/handler/af-link-handler.html&quot;,&quot;boolFeedback&quot;: true,&quot;slugText&quot;: &quot;Advertisement&quot;},&quot;adPlacementMetaData&quot;: {&quot;pageUrl&quot;: &quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9XRUItSU5GL3ZpZXdzL21lZGxleVJBV1BhZ2VWaWV3LmpzcD9kcFJlcXVlc3RJZD1BUlJBWSUyODB4NGFhN2JlMzAlMjkmV0RHPUFSUkFZJTI4MHg0YTlhZDkxYyUyOSYqZW50cmllcyo9QVJSQVklMjgweDRhOTQ5M2UwJTI5JipWZXJzaW9uKj1BUlJBWSUyODB4NGFhNTllZjQlMjkm&quot;,&quot;adElementId&quot;: &quot;ape_Detail_customer-reviews-top_Glance_placement&quot;,&quot;pageType&quot;: &quot;Detail&quot;,&quot;slotName&quot;: &quot;customer-reviews-top&quot;},&quot;adCreativeMetaData&quot;: {&quot;adNetwork&quot;: &quot;cs&quot;},&quot;advertisementStyle&quot;: {&quot;position&quot;: &quot;absolute&quot;,&quot;top&quot;: &quot;2px&quot;,&quot;right&quot;: &quot;0px&quot;,&quot;display&quot;: &quot;inline-block&quot;,&quot;font&quot;: &quot;normal 11px Arial&quot;,&quot;color&quot;: &quot;grey&quot;},&quot;feedbackDivStyle&quot;: {&quot;position&quot;: &quot;relative&quot;,&quot;height&quot;: &quot;14px&quot;,&quot;top&quot;: &quot;2px&quot;},&quot;viewabilityStandards&quot;: [{&quot;p&quot;: 0, &quot;t&quot;: 0, &quot;def&quot;: &quot;amzn&quot;}, {&quot;p&quot;: 50, &quot;t&quot;: 1, &quot;def&quot;: &quot;iab&quot;}, {&quot;p&quot;: 100, &quot;t&quot;: 1, &quot;def&quot;: &quot;groupm&quot;}],&quot;ajaxWeblabTriggerId&quot;: &quot;&quot;,&quot;abpStatus&quot;: &quot;-1&quot;,&quot;abpAcceptable&quot;: &quot;true&quot;,&quot;programIdsToCollapse&quot;: [],&quot;DAsfUrl&quot;:&quot;https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/desktop/DAsf-1.50.228f98c._V451950910_.js&quot;}\" aria-hidden=\"true\" data-arid=\"927c57eb98ae46e7b8bd482b867d4d20\">\u003Ciframe name=\"{&quot;slot&quot;:&quot;Detail_customer-reviews-top_Glance&quot;,&quot;slotName&quot;:&quot;customer-reviews-top&quot;,&quot;src&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/getAd?src=500&amp;slot=customer-reviews-top&amp;rid=0101674ec7c6792b7a2743885b416573c98637be0ddea85c80d8bce98ed4a2c70741&quot;,&quot;adServer&quot;:&quot;cs&quot;,&quot;campaignId&quot;:&quot;7721&quot;,&quot;arid&quot;:&quot;927c57eb98ae46e7b8bd482b867d4d20&quot;,&quot;placementId&quot;:&quot;a5a58631-9157-450d-8b12-21b15ea5926d&quot;,&quot;size&quot;:{&quot;width&quot;:&quot;300px&quot;,&quot;height&quot;:&quot;250px&quot;},&quot;allowedSizes&quot;:[{&quot;width&quot;:&quot;305px&quot;,&quot;height&quot;:&quot;255px&quot;},{&quot;width&quot;:&quot;305px&quot;,&quot;height&quot;:&quot;250px&quot;},{&quot;width&quot;:&quot;300px&quot;,&quot;height&quot;:&quot;250px&quot;}],&quot;allowedDomains&quot;:[&quot;g-ecx.images-amazon.com&quot;,&quot;d3l3lkinz3f56t.cloudfront.net&quot;,&quot;g-ecx.images-amazon.com&quot;,&quot;z-ecx.images-amazon.com&quot;,&quot;images-na.ssl-images-amazon.com&quot;,&quot;g-ec4.images-amazon.com&quot;,&quot;images-cn.ssl-images-amazon.com&quot;],&quot;aanParams&quot;:&quot;site%3Damazon.us%3Bpt%3DDetail%3Bslot%3Dcustomer-reviews-top%3Bpid%3DB06XD3LXXK%3Bbn%3D565108%3Barid%3D927c57eb98ae46e7b8bd482b867d4d20&quot;,&quot;loadAfter&quot;:&quot;criticalFeature&quot;,&quot;extraDelay&quot;:0,&quot;iframeExtraStyle&quot;:&quot;&quot;,&quot;iframeClass&quot;:&quot;&quot;,&quot;adPixels&quot;:[],&quot;adPixelDelay&quot;:&quot;0&quot;,&quot;aaxInstrPixelUrl&quot;:&quot;&quot;,&quot;serverSideFetchAd&quot;:&quot;false&quot;,&quot;enableAdBlockerDetector&quot;:false,&quot;disableResizeFunc&quot;:true,&quot;fallbackStaticAdImgUrl&quot;:&quot;&quot;,&quot;fallbackStaticAdClickUrl&quot;:&quot;&quot;,&quot;fallbackStaticAdExtraStyle&quot;:&quot;&quot;,&quot;adFeedbackInfo&quot;:{&quot;endPoint&quot;:&quot;/gp/aq-feedback/lazyLoad/handler/af-link-handler.html&quot;,&quot;boolFeedback&quot;:true,&quot;slugText&quot;:&quot;Advertisement&quot;},&quot;adPlacementMetaData&quot;:{&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9XRUItSU5GL3ZpZXdzL21lZGxleVJBV1BhZ2VWaWV3LmpzcD9kcFJlcXVlc3RJZD1BUlJBWSUyODB4NGFhN2JlMzAlMjkmV0RHPUFSUkFZJTI4MHg0YTlhZDkxYyUyOSYqZW50cmllcyo9QVJSQVklMjgweDRhOTQ5M2UwJTI5JipWZXJzaW9uKj1BUlJBWSUyODB4NGFhNTllZjQlMjkm&quot;,&quot;adElementId&quot;:&quot;ape_Detail_customer-reviews-top_Glance_placement&quot;,&quot;pageType&quot;:&quot;Detail&quot;,&quot;slotName&quot;:&quot;customer-reviews-top&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;cs&quot;},&quot;advertisementStyle&quot;:{&quot;position&quot;:&quot;absolute&quot;,&quot;top&quot;:&quot;2px&quot;,&quot;right&quot;:&quot;0px&quot;,&quot;display&quot;:&quot;inline-block&quot;,&quot;font&quot;:&quot;normal 11px Arial&quot;,&quot;color&quot;:&quot;grey&quot;},&quot;feedbackDivStyle&quot;:{&quot;position&quot;:&quot;relative&quot;,&quot;height&quot;:&quot;14px&quot;,&quot;top&quot;:&quot;2px&quot;},&quot;viewabilityStandards&quot;:[{&quot;p&quot;:0,&quot;t&quot;:0,&quot;def&quot;:&quot;amzn&quot;},{&quot;p&quot;:50,&quot;t&quot;:1,&quot;def&quot;:&quot;iab&quot;},{&quot;p&quot;:100,&quot;t&quot;:1,&quot;def&quot;:&quot;groupm&quot;}],&quot;ajaxWeblabTriggerId&quot;:&quot;&quot;,&quot;abpStatus&quot;:&quot;-1&quot;,&quot;abpAcceptable&quot;:&quot;true&quot;,&quot;programIdsToCollapse&quot;:[],&quot;DAsfUrl&quot;:&quot;https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/desktop/DAsf-1.50.228f98c._V451950910_.js&quot;,&quot;hostDomain&quot;:&quot;https://www.amazon.com&quot;,&quot;queryParams&quot;:{},&quot;aPageStart&quot;:1569718202649,&quot;adStartTime&quot;:1569718204327,&quot;safeFrameSrc&quot;:&quot;https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/whitelisted/desktop/sf-1.50.228f98c._V451950908_.html&quot;}\" id=\"ape_Detail_customer-reviews-top_Glance_iframe\" src=\"https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/whitelisted/desktop/sf-1.50.228f98c._V451950908_.html\" height=\"250px\" width=\"300px\" class=\"\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\" scrolling=\"no\" allowtransparency=\"true\" allowfullscreen=\"\" mozallowfullscreen=\"\" webkitallowfullscreen=\"\" data-arid=\"927c57eb98ae46e7b8bd482b867d4d20\" sandbox=\"allow-scripts allow-top-navigation allow-popups allow-popups-to-escape-sandbox allow-same-origin\" style=\"\">\u003C/iframe>\u003C/div>\u003Cscript>(function(){function a(d,e){if(window.addEventListener){window.addEventListener(d,e,false);}else{if(window.attachEvent){window.attachEvent(\"on\"+d,e);}}}function c(d,e){if(window.removeEventListener){window.removeEventListener(d,e,false);}else{if(window.detachEvent){window.detachEvent(\"on\"+d,e);}}}var b=function(){(function(){(function(j,m){j.sfLogErrors=j.sfLogErrors||false;var o=o||function(s,r){r=r||new Error(s);if(j.ue&&typeof ue.count==\"function\"){ue.count(\"adplacements:safeFrameError\",1);}if(!j.sfLogErrors){return;}if(j.ueLogError){j.ueLogError(r,{logLevel:\"ERROR\",attribution:\"APE-safeframe\",message:s+\" \"});}else{if(typeof console!==\"undefined\"&&console.error){console.error(s,r);}}};j.aanParams=j.aanParams||{};j.aanParams[\"customer-reviews-top\"]=\"site=amazon.us;pt=Detail;slot=customer-reviews-top;pid=B06XD3LXXK;bn=565108;arid=927c57eb98ae46e7b8bd482b867d4d20\";j[\"customer-reviews-top\"]={};j[\"customer-reviews-top\"].adStartTime=(new Date()).getTime();function d(){return j.innerHeight||m.documentElement.clientHeight;}function g(){return j.innerWidth||m.documentElement.clientWidth;}function e(t,r,s){if(t>0){return(s>t);}else{return(r>0);}}var f=function(){return(Date.now?Date.now():new Date().getTime());};throttle=function(s,u,y){var r,w,z;var x=null;var v=0;if(!y){y={};}var t=function(){v=y.leading===false?0:f();x=null;z=s.apply(r,w);if(!x){r=w=null;}};return function(){var B=f();if(!v&&y.leading===false){v=B;}var A=u-(B-v);r=this;w=arguments;if(A\u003C=0||A>u){if(x){clearTimeout(x);x=null;}v=B;z=s.apply(r,w);if(!x){r=w=null;}}else{if(!x&&y.trailing!==false){x=setTimeout(t,A);}}return z;};};function l(u,w,v,r){try{var t=m.getElementById(u).getBoundingClientRect();if(e(t.top,t.bottom,d())&&e(t.left,t.right,g())){if(typeof uet==\"function\"){uet(\"bb\",\"adplacements:viewablelatency:\"+w,{wb:1});if(v){uet(\"bb\",\"adplacements:viewablelatency:\"+v,{wb:1});}}if(typeof uex==\"function\"&&j.ue&&typeof ue.count==\"function\"){if(j.apeViewableLatencyTrackers[r].loaded){uex(\"ld\",\"adplacements:viewablelatency:\"+w,{wb:1});if(v){uex(\"ld\",\"adplacements:viewablelatency:\"+v,{wb:1});}ue.count(\"adplacements:htmlviewed:loaded:\"+w,1);if(v){ue.count(\"adplacements:htmlviewed:loaded:\"+v,1);}}ue.count(\"adplacements:htmlviewed:\"+w,1);if(v){ue.count(\"adplacements:htmlviewed:\"+v,1);}}j.apeViewableLatencyTrackers[r].viewed=true;if(j.apeViewableLatencyTrackers[r].tracker){c(\"scroll\",j.apeViewableLatencyTrackers[r].tracker);c(\"resize\",j.apeViewableLatencyTrackers[r].tracker);}}}catch(s){j.apeViewableLatencyTrackers[r].valid=false;}}try{j.apeViewableLatencyTrackers=j.apeViewableLatencyTrackers||{};var q=\"ape_Detail_customer-reviews-top_Glance_placement\";var p=\"Detail_customer-reviews-top_Glance\".replace(/\\_/g,\":\");var h=\"a5a58631-9157-450d-8b12-21b15ea5926d\";var i=\"927c57eb98ae46e7b8bd482b867d4d20\";j.apeViewableLatencyTrackers[i]=j.apeViewableLatencyTrackers[i]||{};j.apeViewableLatencyTrackers[i].valid=true;l(q,p,h,i);if(j.apeViewableLatencyTrackers[i].valid&&!j.apeViewableLatencyTrackers[i].viewed){j.apeViewableLatencyTrackers[i].tracker=throttle(function(){l(q,p,h,i);},20);a(\"scroll\",j.apeViewableLatencyTrackers[i].tracker);a(\"resize\",j.apeViewableLatencyTrackers[i].tracker);}}catch(k){if(j.apeViewableLatencyTrackers&&j.apeViewableLatencyTrackers[\"927c57eb98ae46e7b8bd482b867d4d20\"]){j.apeViewableLatencyTrackers[\"927c57eb98ae46e7b8bd482b867d4d20\"].valid=false;}o(\"Error initializing viewable latency instrumentation\",k);}try{if(j.DAsf){j.DAsf.loadAds();}else{var n=m.createElement(\"script\");n.type=\"text/javascript\";n.async=true;n.charset=\"utf-8\";n.src=\"https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/desktop/DAsf-1.50.228f98c._V451950910_.js?csm_attribution=APE-SafeFrame\";n.onerror=function(){o(\"Error loading SafeFrame library\");};n.setAttribute(\"crossorigin\",\"anonymous\");(m.getElementsByTagName(\"head\")[0]||m.getElementsByTagName(\"body\")[0]).appendChild(n);}}catch(k){o(\"Error appending DAsf library\",k);}}(window,document));})();};b();})();\u003C/script>\n\n\n\n\n\n\n\n\n\n\n\u003C/div>\u003C/div>\u003Cdiv class=\"a-fixed-left-grid-col a-col-right\" style=\"padding-left:2.5%;float:left;\">\u003Cdiv class=\"a-row cm_cr_grid_center_container\">\u003Cdiv class=\"a-fixed-right-grid-col cm_cr_grid_center_left\" style=\"float:left;\">\u003C/div>\u003Cdiv class=\"a-fixed-right-grid-col cm_cr_grid_center_right\" style=\"float:left;\">\u003Cspan class=\"cr-widget-MedleyCustomerImages\" data-hook=\"cr-widget-MedleyCustomerImages\">\n      \u003Cdiv class=\"a-popover-preload\" id=\"a-popover-reviews-image-gallery\">\u003Cdiv class=\"reviewLightboxPopoverContainer\" data-hook=\"customer-images-modal\">\n      \u003Cdiv class=\"reviewsLightbox\" id=\"reviews-image-gallery\">\u003C/div>\n    \u003C/div>\n  \u003C/div>\u003Cdiv id=\"reviews-image-gallery-container\" data-asin=\"B06XD3LXXK\" data-hook=\"customer-images-widget\" class=\"a-section a-spacing-medium reviews-customer-images\">\u003Cdiv class=\"a-row\">\u003Ch3>Customer images\u003C/h3>\u003C/div>\u003Cdiv class=\"a-row a-spacing-small a-spacing-top-small\">\u003Cdiv class=\"review-image-tile\" data-hook=\"review-image-tile-gallery\">\n          \u003Cimg alt=\"Customer image\" src=\"https://images-na.ssl-images-amazon.com/images/I/81BFVQe+j3L._CR204,0,1224,1224_UX175.jpg\" class=\"a-dynamic-image cr-customer-image-thumbnail\" width=\"22.5%\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/81BFVQe+j3L._CR204,0,1224,1224_UX175.jpg&quot;:[175,175],&quot;https://images-na.ssl-images-amazon.com/images/I/81BFVQe+j3L._CR204,0,1224,1224_UX64.jpg&quot;:[64,64]}\">\u003C/div>\n      \u003Cdiv class=\"review-image-tile\" data-hook=\"review-image-tile-gallery\">\n          \u003Cimg alt=\"Customer image\" src=\"https://images-na.ssl-images-amazon.com/images/I/81mjMUueMRL._CR204,0,1224,1224_UX175.jpg\" class=\"a-dynamic-image cr-customer-image-thumbnail\" width=\"22.5%\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/81mjMUueMRL._CR204,0,1224,1224_UX175.jpg&quot;:[175,175],&quot;https://images-na.ssl-images-amazon.com/images/I/81mjMUueMRL._CR204,0,1224,1224_UX64.jpg&quot;:[64,64]}\">\u003C/div>\n      \u003Cdiv class=\"review-image-tile\" data-hook=\"review-image-tile-gallery\">\n          \u003Cimg alt=\"Customer image\" src=\"https://images-na.ssl-images-amazon.com/images/I/71SG6emcoqL._CR0,204,1224,1224_UX175.jpg\" class=\"a-dynamic-image cr-customer-image-thumbnail\" width=\"22.5%\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/71SG6emcoqL._CR0,204,1224,1224_UX64.jpg&quot;:[64,64],&quot;https://images-na.ssl-images-amazon.com/images/I/71SG6emcoqL._CR0,204,1224,1224_UX175.jpg&quot;:[175,175]}\">\u003C/div>\n      \u003Cdiv class=\"review-image-tile\" data-hook=\"review-image-tile-gallery\">\n          \u003Cimg alt=\"Customer image\" src=\"https://images-na.ssl-images-amazon.com/images/I/71o+3U76bzL._CR0,204,1224,1224_UX175.jpg\" class=\"a-dynamic-image cr-customer-image-thumbnail\" width=\"22.5%\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/71o+3U76bzL._CR0,204,1224,1224_UX175.jpg&quot;:[175,175],&quot;https://images-na.ssl-images-amazon.com/images/I/71o+3U76bzL._CR0,204,1224,1224_UX64.jpg&quot;:[64,64]}\">\u003C/div>\n      \u003C/div>\u003Cdiv class=\"a-row\">\u003Ca data-hook=\"see-all-images-link\" class=\"a-link-normal reviews-image-gallery-link\" href=\"#CustomerImages\">See all customer images\u003C/a>\u003C/div>\u003Cdiv style=\"display:none;\">\n        \u003Cspan class=\"a-declarative\" data-action=\"a-modal\" data-a-modal=\"{&quot;name&quot;:&quot;reviews-image-gallery&quot;}\">\u003Ca href=\"javascript:void(0)\" class=\"a-popover-trigger a-declarative\">\u003Ci class=\"a-icon a-icon-popover\">\u003C/i>\u003C/a>\u003C/span>\u003C/div>\n\n  \u003C/div>\u003C/span>\n  \u003Cspan class=\"cr-widget-Lighthut\" data-hook=\"cr-widget-Lighthut\">\n      \u003Cdiv id=\"cr-dp-desktop-lighthut\" class=\"cr-lighthut-boundary cr-lighthouse-anchor-buffer celwidget\">\n  \u003Cdiv id=\"cr-dp-lighthut\" data-hook=\"lighthut-widget\" class=\"a-section a-spacing-extra-large cr-asin-B06XD3LXXK celwidget\">\n\n\u003Cspan data-cr-trigger-on-view=\"{&quot;ajaxUrl&quot;:&quot;/hz/reviews-render/ajax/lighthut/report/&quot;,&quot;ajaxParamsMap&quot;:{&quot;lighthouseTerms&quot;:&quot;battery life/brand new/easy to use/operating system/great price/works great/stopped working/happy with this purchase/touch screen/power cord/tabs open/year old/hard drive/looks like/chrome browser/far so good/lightweight/highly recommend/everything i need/battery lasts/serves its purpose/great deal/like brand/even though/social media&quot;}}\">\u003C/span>\n\u003Ch3 data-hook=\"lighthut-title\" class=\"a-spacing-base\">Read reviews that mention\u003C/h3>\u003Cdiv class=\"a-row\">\u003Cstyle>\n  .cr-lighthouse-anchor-buffer {\n    padding-top :  60px;\n    margin-top  : -60px;\n  }\n\n  .cr-lighthouse-term {\n    background-color : #D7E8EA;\n    padding          : 0px 14px;\n    line-height      : 29px;\n    margin           : 0px 10px 14px 0px;\n    border-bottom    : solid 1px #969696;\n    display          : inline-block;\n    font-size        : 13px;\n    color            : #111111;\n  }\n\n  .cr-mobile-lighthouse-term {\n    background-color : #D7E8EA;\n    padding          : 0px 14px;\n    line-height      : 40px;\n    margin           : 0px 10px 13px 0px;\n    border-bottom    : solid 1px #969696;\n    display          : inline-block;\n    font-size        : 16px;\n    color            : #111111;\n  }\n\n  .cr-lighthouse-term.cr-lighthut-term-selected {\n    background-color : #00464F;\n    color : #FFFFFF;\n  }\n\n  .cr-mobile-lighthouse-term.selected {\n    display : none;\n  }\n\n  .cr-lighthouse-terms {\n    max-height : 118px; \n    overflow   : hidden;\n  }\n\n  .cr-mobile-lighthouse-terms {\n    max-height: 324px; \n    overflow : hidden;\n  }\n\n  .cr-lighthut-boundary {\n    width     : 582px;\n  }\n\n\u003C/style>\n\u003Cdiv data-hook=\"lighthut-terms-list\" id=\"cr-lighthut-1-\" class=\"a-row cr-lighthut\">\u003Cdiv class=\"cr-lighthouse-terms\">\n    \u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;battery life&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_0\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_0?ie=UTF8&amp;filterByKeyword=battery+life&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-battery_life\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        battery life\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;brand new&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_1\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_1?ie=UTF8&amp;filterByKeyword=brand+new&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-brand_new\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        brand new\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;easy to use&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_2\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_2?ie=UTF8&amp;filterByKeyword=easy+to+use&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-easy_to_use\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        easy to use\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;operating system&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_3\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_3?ie=UTF8&amp;filterByKeyword=operating+system&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-operating_system\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        operating system\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;great price&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_4\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_4?ie=UTF8&amp;filterByKeyword=great+price&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-great_price\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        great price\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;works great&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_5\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_5?ie=UTF8&amp;filterByKeyword=works+great&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-works_great\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        works great\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;stopped working&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_6\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_6?ie=UTF8&amp;filterByKeyword=stopped+working&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-stopped_working\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        stopped working\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;happy with this purchase&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_7\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_7?ie=UTF8&amp;filterByKeyword=happy+with+this+purchase&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-happy_with_this_purchase\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        happy with this purchase\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;touch screen&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_8\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_8?ie=UTF8&amp;filterByKeyword=touch+screen&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-touch_screen\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        touch screen\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;power cord&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_9\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_9?ie=UTF8&amp;filterByKeyword=power+cord&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-power_cord\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        power cord\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;tabs open&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_10\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_10?ie=UTF8&amp;filterByKeyword=tabs+open&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-tabs_open\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        tabs open\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;year old&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_11\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_11?ie=UTF8&amp;filterByKeyword=year+old&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-year_old\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        year old\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;hard drive&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_12\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_12?ie=UTF8&amp;filterByKeyword=hard+drive&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-hard_drive\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        hard drive\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;looks like&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_13\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_13?ie=UTF8&amp;filterByKeyword=looks+like&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-looks_like\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        looks like\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;chrome browser&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_14\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_14?ie=UTF8&amp;filterByKeyword=chrome+browser&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-chrome_browser\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        chrome browser\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;far so good&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_15\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_15?ie=UTF8&amp;filterByKeyword=far+so+good&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-far_so_good\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        far so good\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;lightweight&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_16\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_16?ie=UTF8&amp;filterByKeyword=lightweight&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-lightweight\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        lightweight\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;highly recommend&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_17\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_17?ie=UTF8&amp;filterByKeyword=highly+recommend&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-highly_recommend\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        highly recommend\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;everything i need&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_18\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_18?ie=UTF8&amp;filterByKeyword=everything+i+need&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-everything_i_need\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        everything i need\u003C/span>\n    \u003C/a>\u003C/span>\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:apply\" data-reviews:filter-action:apply=\"{&quot;scrollToSelector&quot;:&quot;.cr-lighthouse-anchor-buffer&quot;,&quot;filterByKeyword&quot;:&quot;battery lasts&quot;,&quot;toggleFilters&quot;:&quot;true&quot;,&quot;allowLinkDefault&quot;:&quot;1&quot;}\">\u003Ca data-reftag=\"cm_cr_dp_d_lh_19\" data-reviews-state-param=\"\" class=\"a-link-normal a-text-normal\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_lh_19?ie=UTF8&amp;filterByKeyword=battery+lasts&amp;pageNumber=1&amp;reviewerType=all_reviews#reviews-filter-bar\">\u003Cspan id=\"cr-lighthouse-term-battery_lasts\" class=\"cr-lighthouse-term \" data-hook=\"lighthouse-term\">\n        battery lasts\u003C/span>\n    \u003C/a>\u003C/span>\u003C/div>\n\n\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003C/span>\n  \u003Cspan class=\"cr-widget-FocalReviews\" data-hook=\"cr-widget-FocalReviews\">\n      \u003Cdiv class=\"a-section a-spacing-large\">\u003Cdiv class=\"card-padding\">\n    \u003Ca id=\"customer-reviews-content\" aria-label=\"Top Reviews\" class=\"a-link-normal celwidget\" href=\"#\">\u003C/a>\u003Cdiv id=\"cm-cr-dp-review-header\" class=\"a-section a-spacing-small\">\u003Ch3 class=\"a-spacing-small\">\u003Cspan data-hook=\"top-customer-reviews-title\" class=\"a-size-base\">948 customer reviews\u003C/span>\u003C/h3>\u003C/div>\u003Cdiv id=\"cm-cr-dp-review-sort-type\" data-reftag=\"cm_cr_dp_d_fltrs_srt\" class=\"a-section a-spacing-small\">\u003Cspan class=\"a-declarative\" data-action=\"reviews:filter-action:change\" data-reviews:filter-action:change=\"{&quot;filterType&quot;:&quot;sortOrder&quot;}\">\u003Cspan class=\"a-dropdown-container\">\u003Cselect name=\"\" autocomplete=\"off\" id=\"cm-cr-sort-dropdown\" tabindex=\"0\" class=\"a-native-dropdown\">\u003Coption value=\"helpful\" data-a-css-class=\"cm-cr-sort-order-option\" selected=\"\">Top Reviews\u003C/option>\u003Coption value=\"recent\" data-a-css-class=\"cm-cr-sort-order-option\">Most recent\u003C/option>\u003C/select>\u003Cspan tabindex=\"-1\" data-a-class=\"cm-cr-dp-filter-dropdown\" class=\"a-button a-button-dropdown a-button-small cm-cr-dp-filter-dropdown\" id=\"a-autoid-22\" style=\"min-width: 0%;\" aria-hidden=\"true\">\u003Cspan class=\"a-button-inner\">\u003Cspan class=\"a-button-text a-declarative\" data-action=\"a-dropdown-button\" role=\"button\" aria-hidden=\"true\" id=\"a-autoid-22-announce\">\u003Cspan class=\"a-dropdown-prompt\">Top Reviews\u003C/span>\u003C/span>\u003Ci class=\"a-icon a-icon-dropdown\">\u003C/i>\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C/div>\u003Cspan class=\"cr-translate-cta\">\n  \u003C/span>\n\n  \u003Cdiv class=\"a-row\">\u003Cdiv class=\"a-section a-spacing-extra-large a-spacing-top-medium a-text-center review-load-error aok-hidden\">\u003Cdiv class=\"a-box a-alert a-alert-error cr-error\" aria-live=\"assertive\" role=\"alert\">\u003Cdiv class=\"a-box-inner a-alert-container\">\u003Ch4 class=\"a-alert-heading\">There was a problem filtering reviews right now. Please try again later.\u003C/h4>\u003Ci class=\"a-icon a-icon-alert\">\u003C/i>\u003Cdiv class=\"a-alert-content\">\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv id=\"cm-cr-dp-reviews-loading-wrapper\" class=\"a-row a-spacing-medium aok-hidden\">\u003Cdiv class=\"a-spinner-wrapper cr-reviews-loading aok-hidden\">\u003Cspan class=\"a-spinner a-spinner-medium\">\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"a-section a-spacing-extra-large reviews-content filterable-reviews-content celwidget\">\u003Cdiv id=\"cm-cr-dp-review-list\" data-hook=\"top-customer-reviews-widget\" class=\"a-section review-views celwidget\">\u003Cdiv id=\"RI1L0GOHYC3RS\" data-hook=\"review\" class=\"a-section review aok-relative\">\u003Cdiv id=\"RI1L0GOHYC3RS-review-card\" class=\"a-row a-spacing-none\">\u003Cdiv id=\"customer_review-RI1L0GOHYC3RS\" class=\"a-section celwidget\">\u003Cdiv data-hook=\"genome-widget\" class=\"a-row a-spacing-mini\">\u003Ca href=\"/gp/profile/amzn1.account.AFHBDGZSE3I5JX63GNG6ZMPCUTWA/ref=cm_cr_dp_d_gw_tr?ie=UTF8\" class=\"a-profile\" data-a-size=\"small\">\u003Cdiv aria-hidden=\"true\" class=\"a-profile-avatar-wrapper\">\u003Cdiv class=\"a-profile-avatar\">\u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/grey-pixel.gif\" class=\"a-lazy-loaded\" data-src=\"https://images-na.ssl-images-amazon.com/images/S/amazon-avatars/default._CR0,0,1024,1024_SX48_.png\">\u003Cnoscript>\u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/S/amazon-avatars/default._CR0,0,1024,1024_SX48_.png\"/>\u003C/noscript>\u003C/div>\u003C/div>\u003Cdiv class=\"a-profile-content\">\u003Cspan class=\"a-profile-name\">Amazon Customer\u003C/span>\u003C/div>\u003C/a>\u003C/div>\u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal\" title=\"5.0 out of 5 stars\" href=\"/gp/customer-reviews/RI1L0GOHYC3RS/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;ASIN=B06XD3LXXK\">\u003Ci data-hook=\"review-star-rating\" class=\"a-icon a-icon-star a-star-5 review-rating\">\u003Cspan class=\"a-icon-alt\">5.0 out of 5 stars\u003C/span>\u003C/i>\u003C/a>\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Ca data-hook=\"review-title\" class=\"a-size-base a-link-normal review-title a-color-base review-title-content a-text-bold\" href=\"/gp/customer-reviews/RI1L0GOHYC3RS/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;ASIN=B06XD3LXXK\">\u003Cspan class=\"\">Excellent Alternative to Windows PCs...FINALLY!!!\u003C/span>\n            \u003C/a>\u003C/div>\u003Cspan data-hook=\"review-date\" class=\"a-size-base a-color-secondary review-date\">January 12, 2018\u003C/span>\u003Cdiv class=\"a-row a-spacing-mini review-data review-format-strip\">\u003Cspan data-hook=\"avp-badge-linkless\" class=\"a-size-mini a-color-state a-text-bold\">Verified Purchase\u003C/span>\u003C/div>\u003Cdiv class=\"a-row a-spacing-small review-data\">\u003Cspan data-hook=\"review-body\" class=\"a-size-base review-text\">\u003Cdiv aria-live=\"polite\" data-a-expander-name=\"review_text_read_more\" data-a-expander-collapsed-height=\"300\" class=\"a-expander-collapsed-height a-row a-expander-container a-expander-partial-collapse-container\" style=\"max-height:300px\">\u003Cdiv data-hook=\"review-collapsed\" aria-expanded=\"false\" class=\"a-expander-content reviewText review-text-content a-expander-partial-collapse-content\">\u003Cspan class=\"\">Excellent Alternative to Windows PCs...FINALLY!!!  New, this is around $300, mine is \"Refurbished\" for $188.  And if it holds up which I think it will, I am walking away from Microsoft with their never ending PROBLEMS and BUGGY PRODUCTS.  One thing, Chromebooks don't have DVD/CD Drives or Hard Drives (a Negative and a Positive) but they offer abundant Cloud Storage (a Positive and a Negative).  No Drives means very few moving parts to break and very little heat to dissipate...I don't think they even have fans!  Well, I am willing to spend $188 to test out this alternative path from MS which I have been searching for for years, Chromebooks have no Operating System other than the Chrome Browser.  Google provides lifetime Free Virus Protection, An Entire Suite of Office Apps called Google Docs (no Outlook or MS Works needed...YAY!) plus Hundreds more Apps at No Charge!  Try it, You'll Like it.\u003C/span>\n  \u003C/div>\u003Cdiv class=\"a-expander-header a-expander-partial-collapse-header\" style=\"opacity: 0; display: none;\">\u003Cdiv class=\"a-expander-content-fade\">\u003C/div>\u003Ca href=\"javascript:void(0)\" data-hook=\"expand-collapse-read-more-less\" data-action=\"a-expander-toggle\" class=\"a-declarative\" data-a-expander-toggle=\"{&quot;allowLinkDefault&quot;:true, &quot;expand_prompt&quot;:&quot;Read more&quot;, &quot;collapse_prompt&quot;:&quot;Read less&quot;}\">\u003Ci class=\"a-icon a-icon-extender-expand\">\u003C/i>\u003Cspan class=\"a-expander-prompt\">Read more\u003C/span>\u003C/a>\u003C/div>\u003C/div>\u003C/span>\u003C/div>\u003Cdiv data-hook=\"review-comments\" class=\"a-row review-comments cr-vote-action-bar\">\u003Cspan class=\"cr-vote\" data-hook=\"review-voting-widget\">\n  \u003Cdiv class=\"a-row a-spacing-small\">\u003Cspan data-hook=\"helpful-vote-statement\" class=\"a-size-base a-color-tertiary cr-vote-text\">230 people found this helpful\u003C/span>\u003C/div>\u003Cdiv class=\"cr-helpful-button aok-float-left\">\n      \u003Cspan class=\"a-button a-button-base\" id=\"a-autoid-23\">\u003Cspan class=\"a-button-inner\">\u003Ca href=\"https://www.amazon.com/ap/signin?openid.return_to=https%3A%2F%2Fwww.amazon.com%2Fdp%2FB06XD3LXXK%2Fref%3Dcm_cr_dp_d_vote_lft%3Fie%3DUTF8%26voteInstanceId%3DRI1L0GOHYC3RS%26voteValue%3D1%26csrfT%3Dgrg1qeceT8ypcQ9GFPQlDxfRBxtpAGs6PShIKBcAAAABAAAAAF2P%252Fq9yYXcAAAAA%252B4kUEk%252F7iMGR3xPcX6iU%23RI1L0GOHYC3RS&amp;openid.identity=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.claimed_id=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.assoc_handle=usflex&amp;openid.mode=checkid_setup&amp;openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0\" data-hook=\"vote-helpful-button\" class=\"a-button-text\" role=\"button\" id=\"a-autoid-23-announce\">\u003Cdiv class=\"cr-helpful-text\">\n          Helpful\u003C/div>\n      \u003C/a>\u003C/span>\u003C/span>\u003C/div>\n  \u003C/span>\n\n\u003Ci class=\"a-icon a-icon-text-separator\" role=\"img\" aria-label=\"|\">\u003C/i>\u003Ca data-hook=\"review-comment\" class=\"a-size-base a-link-normal a-color-secondary a-text-normal\" href=\"/gp/customer-reviews/RI1L0GOHYC3RS/ref=cm_cr_dp_d_rvw_btm?ie=UTF8&amp;ASIN=B06XD3LXXK#wasThisHelpful\">Comment\u003C/a>\u003Cspan class=\"cr-footer-line-height\">\n      \u003Cspan>\u003Ci class=\"a-icon a-icon-text-separator\" role=\"img\" aria-label=\"|\">\u003C/i>\u003Cspan class=\"a-declarative\" data-action=\"cr-popup\" data-cr-popup=\"{&quot;width&quot;:&quot;580&quot;,&quot;title&quot;:&quot;ReportAbuse&quot;,&quot;url&quot;:&quot;/hz/reviews-render/report-abuse?ie=UTF8&amp;voteDomain=Reviews&amp;ref=cm_cr_dp_d_rvw_hlp&amp;csrfT=grg1qeceT8ypcQ9GFPQlDxfRBxtpAGs6PShIKBcAAAABAAAAAF2P%2Fq9yYXcAAAAA%2B4kUEk%2F7iMGR3xPcX6iU&amp;entityId=RI1L0GOHYC3RS&amp;sessionId=137-0530487-6192152&quot;,&quot;height&quot;:&quot;380&quot;}\">\u003Ca class=\"a-size-base a-link-normal a-color-secondary report-abuse-link a-text-normal\" href=\"/hz/reviews-render/report-abuse?ie=UTF8&amp;voteDomain=Reviews&amp;ref=cm_cr_dp_d_rvw_hlp&amp;csrfT=grg1qeceT8ypcQ9GFPQlDxfRBxtpAGs6PShIKBcAAAABAAAAAF2P%2Fq9yYXcAAAAA%2B4kUEk%2F7iMGR3xPcX6iU&amp;entityId=RI1L0GOHYC3RS&amp;sessionId=137-0530487-6192152\">Report abuse\u003C/a>\u003C/span>\u003C/span>\u003C/span>\n  \u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv id=\"R3Q9O23FNH68SR\" data-hook=\"review\" class=\"a-section review aok-relative\">\u003Cdiv id=\"R3Q9O23FNH68SR-review-card\" class=\"a-row a-spacing-none\">\u003Cdiv id=\"customer_review-R3Q9O23FNH68SR\" class=\"a-section celwidget\">\u003Cdiv data-hook=\"genome-widget\" class=\"a-row a-spacing-mini\">\u003Ca href=\"/gp/profile/amzn1.account.AF7ZL4A7XU3MZA742MF46YRXYG7Q/ref=cm_cr_dp_d_gw_tr?ie=UTF8\" class=\"a-profile\" data-a-size=\"small\">\u003Cdiv aria-hidden=\"true\" class=\"a-profile-avatar-wrapper\">\u003Cdiv class=\"a-profile-avatar\">\u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/grey-pixel.gif\" class=\"a-lazy-loaded\" data-src=\"https://images-na.ssl-images-amazon.com/images/S/amazon-avatars-global/default._CR0,0,1024,1024_SX48_.png\">\u003Cnoscript>\u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/S/amazon-avatars-global/default._CR0,0,1024,1024_SX48_.png\"/>\u003C/noscript>\u003C/div>\u003C/div>\u003Cdiv class=\"a-profile-content\">\u003Cspan class=\"a-profile-name\">Arthur Jacobson\u003C/span>\u003C/div>\u003C/a>\u003C/div>\u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal\" title=\"5.0 out of 5 stars\" href=\"/gp/customer-reviews/R3Q9O23FNH68SR/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;ASIN=B06XD3LXXK\">\u003Ci data-hook=\"review-star-rating\" class=\"a-icon a-icon-star a-star-5 review-rating\">\u003Cspan class=\"a-icon-alt\">5.0 out of 5 stars\u003C/span>\u003C/i>\u003C/a>\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Ca data-hook=\"review-title\" class=\"a-size-base a-link-normal review-title a-color-base review-title-content a-text-bold\" href=\"/gp/customer-reviews/R3Q9O23FNH68SR/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;ASIN=B06XD3LXXK\">\u003Cspan class=\"\">excellent. What pleasantly surprised me\u003C/span>\n            \u003C/a>\u003C/div>\u003Cspan data-hook=\"review-date\" class=\"a-size-base a-color-secondary review-date\">August 21, 2017\u003C/span>\u003Cdiv class=\"a-row a-spacing-mini review-data review-format-strip\">\u003Cspan data-hook=\"avp-badge-linkless\" class=\"a-size-mini a-color-state a-text-bold\">Verified Purchase\u003C/span>\u003C/div>\u003Cdiv class=\"a-row a-spacing-small review-data\">\u003Cspan data-hook=\"review-body\" class=\"a-size-base review-text\">\u003Cdiv aria-live=\"polite\" data-a-expander-name=\"review_text_read_more\" data-a-expander-collapsed-height=\"300\" class=\"a-expander-collapsed-height a-row a-expander-container a-expander-partial-collapse-container\" style=\"max-height:300px\">\u003Cdiv data-hook=\"review-collapsed\" aria-expanded=\"false\" class=\"a-expander-content reviewText review-text-content a-expander-partial-collapse-content\">\u003Cspan class=\"\">This was a replacement for another Chromebook so the performance was as expected eg. excellent. What pleasantly surprised me , because I hadn't given it any thought , was that all my sites were there complete with remembered passwords. Chromebooks are the best buy for the buck.\u003C/span>\n  \u003C/div>\u003Cdiv class=\"a-expander-header a-expander-partial-collapse-header\" style=\"opacity: 0; display: none;\">\u003Cdiv class=\"a-expander-content-fade\">\u003C/div>\u003Ca href=\"javascript:void(0)\" data-hook=\"expand-collapse-read-more-less\" data-action=\"a-expander-toggle\" class=\"a-declarative\" data-a-expander-toggle=\"{&quot;allowLinkDefault&quot;:true, &quot;expand_prompt&quot;:&quot;Read more&quot;, &quot;collapse_prompt&quot;:&quot;Read less&quot;}\">\u003Ci class=\"a-icon a-icon-extender-expand\">\u003C/i>\u003Cspan class=\"a-expander-prompt\">Read more\u003C/span>\u003C/a>\u003C/div>\u003C/div>\u003C/span>\u003C/div>\u003Cdiv data-hook=\"review-comments\" class=\"a-row review-comments cr-vote-action-bar\">\u003Cspan class=\"cr-vote\" data-hook=\"review-voting-widget\">\n  \u003Cdiv class=\"a-row a-spacing-small\">\u003Cspan data-hook=\"helpful-vote-statement\" class=\"a-size-base a-color-tertiary cr-vote-text\">248 people found this helpful\u003C/span>\u003C/div>\u003Cdiv class=\"cr-helpful-button aok-float-left\">\n      \u003Cspan class=\"a-button a-button-base\" id=\"a-autoid-24\">\u003Cspan class=\"a-button-inner\">\u003Ca href=\"https://www.amazon.com/ap/signin?openid.return_to=https%3A%2F%2Fwww.amazon.com%2Fdp%2FB06XD3LXXK%2Fref%3Dcm_cr_dp_d_vote_lft%3Fie%3DUTF8%26voteInstanceId%3DR3Q9O23FNH68SR%26voteValue%3D1%26csrfT%3DgutBsnGcldlV9vQEpDdnJak%252FvZ0Mdb2Sc4UKFmkAAAABAAAAAF2P%252Fq9yYXcAAAAA%252B4kUEk%252F7iMGR3xPcX6iU%23R3Q9O23FNH68SR&amp;openid.identity=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.claimed_id=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.assoc_handle=usflex&amp;openid.mode=checkid_setup&amp;openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0\" data-hook=\"vote-helpful-button\" class=\"a-button-text\" role=\"button\" id=\"a-autoid-24-announce\">\u003Cdiv class=\"cr-helpful-text\">\n          Helpful\u003C/div>\n      \u003C/a>\u003C/span>\u003C/span>\u003C/div>\n  \u003C/span>\n\n\u003Ci class=\"a-icon a-icon-text-separator\" role=\"img\" aria-label=\"|\">\u003C/i>\u003Ca data-hook=\"review-comment\" class=\"a-size-base a-link-normal a-color-secondary a-text-normal\" href=\"/gp/customer-reviews/R3Q9O23FNH68SR/ref=cm_cr_dp_d_rvw_btm?ie=UTF8&amp;ASIN=B06XD3LXXK#wasThisHelpful\">Comment\u003C/a>\u003Cspan class=\"cr-footer-line-height\">\n      \u003Cspan>\u003Ci class=\"a-icon a-icon-text-separator\" role=\"img\" aria-label=\"|\">\u003C/i>\u003Cspan class=\"a-declarative\" data-action=\"cr-popup\" data-cr-popup=\"{&quot;width&quot;:&quot;580&quot;,&quot;title&quot;:&quot;ReportAbuse&quot;,&quot;url&quot;:&quot;/hz/reviews-render/report-abuse?ie=UTF8&amp;voteDomain=Reviews&amp;ref=cm_cr_dp_d_rvw_hlp&amp;csrfT=gutBsnGcldlV9vQEpDdnJak%2FvZ0Mdb2Sc4UKFmkAAAABAAAAAF2P%2Fq9yYXcAAAAA%2B4kUEk%2F7iMGR3xPcX6iU&amp;entityId=R3Q9O23FNH68SR&amp;sessionId=137-0530487-6192152&quot;,&quot;height&quot;:&quot;380&quot;}\">\u003Ca class=\"a-size-base a-link-normal a-color-secondary report-abuse-link a-text-normal\" href=\"/hz/reviews-render/report-abuse?ie=UTF8&amp;voteDomain=Reviews&amp;ref=cm_cr_dp_d_rvw_hlp&amp;csrfT=gutBsnGcldlV9vQEpDdnJak%2FvZ0Mdb2Sc4UKFmkAAAABAAAAAF2P%2Fq9yYXcAAAAA%2B4kUEk%2F7iMGR3xPcX6iU&amp;entityId=R3Q9O23FNH68SR&amp;sessionId=137-0530487-6192152\">Report abuse\u003C/a>\u003C/span>\u003C/span>\u003C/span>\n  \u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv id=\"R3NCVPRDXBQ8MB\" data-hook=\"review\" class=\"a-section review aok-relative\">\u003Cdiv id=\"R3NCVPRDXBQ8MB-review-card\" class=\"a-row a-spacing-none\">\u003Cdiv id=\"customer_review-R3NCVPRDXBQ8MB\" class=\"a-section celwidget\">\u003Cdiv data-hook=\"genome-widget\" class=\"a-row a-spacing-mini\">\u003Ca href=\"/gp/profile/amzn1.account.AFBHCPPNSSIKW56ATL2UGI3GV64A/ref=cm_cr_dp_d_gw_tr?ie=UTF8\" class=\"a-profile\" data-a-size=\"small\">\u003Cdiv aria-hidden=\"true\" class=\"a-profile-avatar-wrapper\">\u003Cdiv class=\"a-profile-avatar\">\u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/grey-pixel.gif\" class=\"a-lazy-loaded\" data-src=\"https://images-na.ssl-images-amazon.com/images/S/amazon-avatars-global/default._CR0,0,1024,1024_SX48_.png\">\u003Cnoscript>\u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/S/amazon-avatars-global/default._CR0,0,1024,1024_SX48_.png\"/>\u003C/noscript>\u003C/div>\u003C/div>\u003Cdiv class=\"a-profile-content\">\u003Cspan class=\"a-profile-name\">Sarah\u003C/span>\u003C/div>\u003C/a>\u003C/div>\u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal\" title=\"5.0 out of 5 stars\" href=\"/gp/customer-reviews/R3NCVPRDXBQ8MB/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;ASIN=B06XD3LXXK\">\u003Ci data-hook=\"review-star-rating\" class=\"a-icon a-icon-star a-star-5 review-rating\">\u003Cspan class=\"a-icon-alt\">5.0 out of 5 stars\u003C/span>\u003C/i>\u003C/a>\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Ca data-hook=\"review-title\" class=\"a-size-base a-link-normal review-title a-color-base review-title-content a-text-bold\" href=\"/gp/customer-reviews/R3NCVPRDXBQ8MB/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;ASIN=B06XD3LXXK\">\u003Cspan class=\"\">the keyboard is great, and even though it doesn't have too many ...\u003C/span>\n            \u003C/a>\u003C/div>\u003Cspan data-hook=\"review-date\" class=\"a-size-base a-color-secondary review-date\">September 25, 2017\u003C/span>\u003Cdiv class=\"a-row a-spacing-mini review-data review-format-strip\">\u003Cspan data-hook=\"avp-badge-linkless\" class=\"a-size-mini a-color-state a-text-bold\">Verified Purchase\u003C/span>\u003C/div>\u003Cdiv class=\"a-row a-spacing-small review-data\">\u003Cspan data-hook=\"review-body\" class=\"a-size-base review-text\">\u003Cdiv aria-live=\"polite\" data-a-expander-name=\"review_text_read_more\" data-a-expander-collapsed-height=\"300\" class=\"a-expander-collapsed-height a-row a-expander-container a-expander-partial-collapse-container\" style=\"max-height:300px\">\u003Cdiv data-hook=\"review-collapsed\" aria-expanded=\"false\" class=\"a-expander-content reviewText review-text-content a-expander-partial-collapse-content\">\u003Cspan class=\"\">I bought these, specifically, for my 4 kids whom I homeschool. I didn't want anything outlandishly expensive; just very basic. Something they can do their schoolwork on, typing courses, etc. This computer totally fits the bill. The screen is big, the keyboard is great, and even though it doesn't have too many bells and whistles, this is perfect for our needs. And the price?! YOU BETCHA. Totally satisfied with our purchase.\u003C/span>\n  \u003C/div>\u003Cdiv class=\"a-expander-header a-expander-partial-collapse-header\" style=\"opacity: 0; display: none;\">\u003Cdiv class=\"a-expander-content-fade\">\u003C/div>\u003Ca href=\"javascript:void(0)\" data-hook=\"expand-collapse-read-more-less\" data-action=\"a-expander-toggle\" class=\"a-declarative\" data-a-expander-toggle=\"{&quot;allowLinkDefault&quot;:true, &quot;expand_prompt&quot;:&quot;Read more&quot;, &quot;collapse_prompt&quot;:&quot;Read less&quot;}\">\u003Ci class=\"a-icon a-icon-extender-expand\">\u003C/i>\u003Cspan class=\"a-expander-prompt\">Read more\u003C/span>\u003C/a>\u003C/div>\u003C/div>\u003C/span>\u003C/div>\u003Cdiv data-hook=\"review-comments\" class=\"a-row review-comments cr-vote-action-bar\">\u003Cspan class=\"cr-vote\" data-hook=\"review-voting-widget\">\n  \u003Cdiv class=\"a-row a-spacing-small\">\u003Cspan data-hook=\"helpful-vote-statement\" class=\"a-size-base a-color-tertiary cr-vote-text\">203 people found this helpful\u003C/span>\u003C/div>\u003Cdiv class=\"cr-helpful-button aok-float-left\">\n      \u003Cspan class=\"a-button a-button-base\" id=\"a-autoid-25\">\u003Cspan class=\"a-button-inner\">\u003Ca href=\"https://www.amazon.com/ap/signin?openid.return_to=https%3A%2F%2Fwww.amazon.com%2Fdp%2FB06XD3LXXK%2Fref%3Dcm_cr_dp_d_vote_lft%3Fie%3DUTF8%26voteInstanceId%3DR3NCVPRDXBQ8MB%26voteValue%3D1%26csrfT%3DgkLT877gfr6XhULGd3vipgzq5aLTdJ8O5LtfXA4AAAABAAAAAF2P%252Fq9yYXcAAAAA%252B4kUEk%252F7iMGR3xPcX6iU%23R3NCVPRDXBQ8MB&amp;openid.identity=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.claimed_id=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.assoc_handle=usflex&amp;openid.mode=checkid_setup&amp;openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0\" data-hook=\"vote-helpful-button\" class=\"a-button-text\" role=\"button\" id=\"a-autoid-25-announce\">\u003Cdiv class=\"cr-helpful-text\">\n          Helpful\u003C/div>\n      \u003C/a>\u003C/span>\u003C/span>\u003C/div>\n  \u003C/span>\n\n\u003Ci class=\"a-icon a-icon-text-separator\" role=\"img\" aria-label=\"|\">\u003C/i>\u003Ca data-hook=\"review-comment\" class=\"a-size-base a-link-normal a-color-secondary a-text-normal\" href=\"/gp/customer-reviews/R3NCVPRDXBQ8MB/ref=cm_cr_dp_d_rvw_btm?ie=UTF8&amp;ASIN=B06XD3LXXK#wasThisHelpful\">Comment\u003C/a>\u003Cspan class=\"cr-footer-line-height\">\n      \u003Cspan>\u003Ci class=\"a-icon a-icon-text-separator\" role=\"img\" aria-label=\"|\">\u003C/i>\u003Cspan class=\"a-declarative\" data-action=\"cr-popup\" data-cr-popup=\"{&quot;width&quot;:&quot;580&quot;,&quot;title&quot;:&quot;ReportAbuse&quot;,&quot;url&quot;:&quot;/hz/reviews-render/report-abuse?ie=UTF8&amp;voteDomain=Reviews&amp;ref=cm_cr_dp_d_rvw_hlp&amp;csrfT=gkLT877gfr6XhULGd3vipgzq5aLTdJ8O5LtfXA4AAAABAAAAAF2P%2Fq9yYXcAAAAA%2B4kUEk%2F7iMGR3xPcX6iU&amp;entityId=R3NCVPRDXBQ8MB&amp;sessionId=137-0530487-6192152&quot;,&quot;height&quot;:&quot;380&quot;}\">\u003Ca class=\"a-size-base a-link-normal a-color-secondary report-abuse-link a-text-normal\" href=\"/hz/reviews-render/report-abuse?ie=UTF8&amp;voteDomain=Reviews&amp;ref=cm_cr_dp_d_rvw_hlp&amp;csrfT=gkLT877gfr6XhULGd3vipgzq5aLTdJ8O5LtfXA4AAAABAAAAAF2P%2Fq9yYXcAAAAA%2B4kUEk%2F7iMGR3xPcX6iU&amp;entityId=R3NCVPRDXBQ8MB&amp;sessionId=137-0530487-6192152\">Report abuse\u003C/a>\u003C/span>\u003C/span>\u003C/span>\n  \u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv id=\"RIY9RQI5MLSNJ\" data-hook=\"review\" class=\"a-section review aok-relative\">\u003Cdiv id=\"RIY9RQI5MLSNJ-review-card\" class=\"a-row a-spacing-none\">\u003Cdiv id=\"customer_review-RIY9RQI5MLSNJ\" class=\"a-section celwidget\">\u003Cdiv class=\"genome-widget-row\">\n      \u003Cdiv class=\"profile-widget-with-avatar\">\n        \u003Cdiv data-hook=\"genome-widget\" class=\"a-row a-spacing-mini\">\u003Ca href=\"/gp/profile/amzn1.account.AFFRCOTU354SFF2TWTMJSVJ3T5HA/ref=cm_cr_dp_d_gw_tr?ie=UTF8\" class=\"a-profile\" data-a-type=\"enthusiast\" data-a-size=\"small\" data-a-descriptor=\"true\">\u003Cdiv aria-hidden=\"true\" class=\"a-profile-avatar-wrapper\">\u003Cdiv class=\"a-profile-avatar\">\u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/grey-pixel.gif\" class=\"a-lazy-loaded\" data-src=\"https://images-na.ssl-images-amazon.com/images/S/amazon-avatars-global/52c45c6c-0390-4e8a-98fb-9b9bff14f969._CR0,0,500,500_SX48_.jpg\">\u003Cnoscript>\u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/S/amazon-avatars-global/52c45c6c-0390-4e8a-98fb-9b9bff14f969._CR0,0,500,500_SX48_.jpg\"/>\u003C/noscript>\u003C/div>\u003C/div>\u003Cdiv class=\"a-profile-content\">\u003Cspan class=\"a-profile-name\">Willie V. Hughes\u003C/span>\u003Cspan class=\"a-profile-descriptor\">Top Contributor: Photography\u003C/span>\u003C/div>\u003C/a>\u003C/div>\u003C/div>\n      \u003Cdiv class=\"badges-genome-widget\">\n        \u003Cdiv class=\"a-row a-spacing-mini\">\u003Cspan class=\"a-declarative\" data-action=\"cr-popup\" data-cr-popup=\"{&quot;width&quot;:&quot;340&quot;,&quot;title&quot;:&quot;Help&quot;,&quot;url&quot;:&quot;/gp/help/customer/display.html/ref=cm_cr_dp_bdg_help?ie=UTF8&amp;nodeId=14279681&amp;pop-up=1#tr&quot;,&quot;height&quot;:&quot;340&quot;}\">\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Ca class=\"a-link-normal a-text-normal c7y-badge-link c7y-badge-top-500-reviewer\" href=\"/gp/help/customer/display.html/ref=cm_cr_dp_bdg_help?ie=UTF8&amp;nodeId=14279681&amp;pop-up=1#tr\">\u003Cspan class=\"a-size-mini a-color-link c7yBadgeAUI c7yTopDownDashedStrike c7y-badge-text a-text-bold\">TOP 500 REVIEWER\u003C/span>\u003C/a>\u003C/span>\u003C/div>\u003C/div>\n    \u003C/div>\n  \u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal\" title=\"2.0 out of 5 stars\" href=\"/gp/customer-reviews/RIY9RQI5MLSNJ/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;ASIN=B06XD3LXXK\">\u003Ci data-hook=\"review-star-rating\" class=\"a-icon a-icon-star a-star-2 review-rating\">\u003Cspan class=\"a-icon-alt\">2.0 out of 5 stars\u003C/span>\u003C/i>\u003C/a>\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Ca data-hook=\"review-title\" class=\"a-size-base a-link-normal review-title a-color-base review-title-content a-text-bold\" href=\"/gp/customer-reviews/RIY9RQI5MLSNJ/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;ASIN=B06XD3LXXK\">\u003Cspan class=\"\">Solid Chromebook, but far from \"Premium\"\u003C/span>\n            \u003C/a>\u003C/div>\u003Cspan data-hook=\"review-date\" class=\"a-size-base a-color-secondary review-date\">December 6, 2017\u003C/span>\u003Cdiv class=\"a-row a-spacing-mini review-data review-format-strip\">\u003Cspan data-hook=\"avp-badge-linkless\" class=\"a-size-mini a-color-state a-text-bold\">Verified Purchase\u003C/span>\u003C/div>\u003Cdiv class=\"a-row a-spacing-small review-data\">\u003Cspan data-hook=\"review-body\" class=\"a-size-base review-text\">\u003Cdiv aria-live=\"polite\" data-a-expander-name=\"review_text_read_more\" data-a-expander-collapsed-height=\"300\" class=\"a-expander-collapsed-height a-row a-expander-container a-expander-partial-collapse-container\" style=\"max-height: none; height: 300px;\">\u003Cdiv data-hook=\"review-collapsed\" aria-expanded=\"false\" class=\"a-expander-content reviewText review-text-content a-expander-partial-collapse-content\" style=\"padding-bottom: 19px;\">\u003Cspan class=\"\">I have to start off by saying that I'm a Chromebook fan. I've tested several and owned a few. There are still apps (when I was growing up, we called them \"programs\" and \"software\") that will only run on a PC, but I try when possible to take a Chromebook with me wherever I go because they are just so damn handy. Why is this important? Because this review is not here to hate on Chromebooks. They are great little machines. Many reviews hate the OS, and don't focus on the hardware when writing their reviews.\u003Cbr>\u003Cbr>Unfortunately, this 2017 Acer Flagship CB3-532 15.6\" HD \"Premium Chromebook\" is not really \"premium.\" For two Benjamins, it's still a better computer than NASA had for all the Apollo missions-- in the space crafts and on the ground combined. But I was expecting more. I have a 2015 Asus 10\" Chromebook which outperforms this 2017 15\" Chromebook, and they were both the same price. I was hoping to \"trade-up\" but it looks like I'll keep the mini Chromebook and just use this 15\" Chromebook as a spare at the office.\u003Cbr>\u003Cbr>My Chromebook arrived refurbished, and I knew that going in when I purchased it. But sadly, mine arrived with schmutz all over the case (mainly on the bottom, and along the sides). The screen and keyboard were (thankfully) clean. But the rest of the case was honestly gross. We're talking about dirt, skin oils, and maybe food stains. I don't know what. Someone should have wiped this down with a rag before shipping it. It was absolutely disgusting to receive it with visible stains and foreign material on it.\u003Cbr>\u003Cbr>The screen quality is decent-enough. Technically, it may be \"HD,\" but it doesn't pop with color and brightness like many other HD screens. Reading emails, the text is kind of soft and fuzzy compared to my Asus PC latpop screen and Asus 10\" Chromebook. I'd give the Acer 15\" screen a 7/10 in the visual department. Again, not bad for the price, but certainly not up-to-par with other laptop screens we're now seeing.\u003Cbr>\u003Cbr>The speakers are awesome. Not only are they of good quality, but they face up! Frankly, it should be international law that all laptops have upward facing speakers so that we can actually hear them.\u003Cbr>\u003Cbr>The keyboard is excellent. Feels pro-quality, and it's not too loud (some cheap laptops have a clickity-clack problem). Could use this on a plane in first class and not disturb the blue-blood next to you with his poodle and monocle.\u003Cbr>\u003Cbr>Where this Chromebook really fails is in power. Now, I'm not expecting Cray Supercomputer here (have I dated myself yet?), but I was disappointed when I tried to run 4k video from YouTube. It was a complete no-go. Not entirely unexpected, but I was hoping a \"premium\" Chromebook could handle it. What's more disappointing is that it hiccuped a bit even on 1080 HD video from YouTube. That's no bueno. I tried watching a couple videos on this Chromebook and compared it to my PC, and the Chromebook just didn't have the mojo or gusto or eye of the tiger.\u003Cbr>\u003Cbr>In summary, this Chromebook is a good value overall, but it's far from premium. For the price, it's a worthy contended, But if you like to watch HD Netflix or other streaming film, I think I'd look for another laptop of Chromebook with better video capabilities.\u003Cbr>\u003Cbr>UPDATE: The day this refurbished model was delivered, I noticed that Walmart had brand new ones for less money. I'll be returning this used model.\u003C/span>\n  \u003C/div>\u003Cdiv class=\"a-expander-header a-expander-partial-collapse-header\" style=\"opacity: 1; display: block;\">\u003Cdiv class=\"a-expander-content-fade\">\u003C/div>\u003Ca href=\"javascript:void(0)\" data-hook=\"expand-collapse-read-more-less\" data-action=\"a-expander-toggle\" class=\"a-declarative\" data-a-expander-toggle=\"{&quot;allowLinkDefault&quot;:true, &quot;expand_prompt&quot;:&quot;Read more&quot;, &quot;collapse_prompt&quot;:&quot;Read less&quot;}\">\u003Ci class=\"a-icon a-icon-extender-expand\">\u003C/i>\u003Cspan class=\"a-expander-prompt\">Read more\u003C/span>\u003C/a>\u003C/div>\u003C/div>\u003C/span>\u003C/div>\u003Cdiv data-hook=\"review-comments\" class=\"a-row review-comments cr-vote-action-bar\">\u003Cspan class=\"cr-vote\" data-hook=\"review-voting-widget\">\n  \u003Cdiv class=\"a-row a-spacing-small\">\u003Cspan data-hook=\"helpful-vote-statement\" class=\"a-size-base a-color-tertiary cr-vote-text\">256 people found this helpful\u003C/span>\u003C/div>\u003Cdiv class=\"cr-helpful-button aok-float-left\">\n      \u003Cspan class=\"a-button a-button-base\" id=\"a-autoid-26\">\u003Cspan class=\"a-button-inner\">\u003Ca href=\"https://www.amazon.com/ap/signin?openid.return_to=https%3A%2F%2Fwww.amazon.com%2Fdp%2FB06XD3LXXK%2Fref%3Dcm_cr_dp_d_vote_lft%3Fie%3DUTF8%26voteInstanceId%3DRIY9RQI5MLSNJ%26voteValue%3D1%26csrfT%3DgoCxr6XyXevbUTAURfucWHmkvBSmxmN1CD%252Bm03oAAAABAAAAAF2P%252Fq9yYXcAAAAA%252B4kUEk%252F7iMGR3xPcX6iU%23RIY9RQI5MLSNJ&amp;openid.identity=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.claimed_id=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.assoc_handle=usflex&amp;openid.mode=checkid_setup&amp;openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0\" data-hook=\"vote-helpful-button\" class=\"a-button-text\" role=\"button\" id=\"a-autoid-26-announce\">\u003Cdiv class=\"cr-helpful-text\">\n          Helpful\u003C/div>\n      \u003C/a>\u003C/span>\u003C/span>\u003C/div>\n  \u003C/span>\n\n\u003Ci class=\"a-icon a-icon-text-separator\" role=\"img\" aria-label=\"|\">\u003C/i>\u003Ca data-hook=\"review-comment\" class=\"a-size-base a-link-normal a-color-secondary a-text-normal\" href=\"/gp/customer-reviews/RIY9RQI5MLSNJ/ref=cm_cr_dp_d_rvw_btm?ie=UTF8&amp;ASIN=B06XD3LXXK#wasThisHelpful\">Comment\u003C/a>\u003Cspan class=\"cr-footer-line-height\">\n      \u003Cspan>\u003Ci class=\"a-icon a-icon-text-separator\" role=\"img\" aria-label=\"|\">\u003C/i>\u003Cspan class=\"a-declarative\" data-action=\"cr-popup\" data-cr-popup=\"{&quot;width&quot;:&quot;580&quot;,&quot;title&quot;:&quot;ReportAbuse&quot;,&quot;url&quot;:&quot;/hz/reviews-render/report-abuse?ie=UTF8&amp;voteDomain=Reviews&amp;ref=cm_cr_dp_d_rvw_hlp&amp;csrfT=goCxr6XyXevbUTAURfucWHmkvBSmxmN1CD%2Bm03oAAAABAAAAAF2P%2Fq9yYXcAAAAA%2B4kUEk%2F7iMGR3xPcX6iU&amp;entityId=RIY9RQI5MLSNJ&amp;sessionId=137-0530487-6192152&quot;,&quot;height&quot;:&quot;380&quot;}\">\u003Ca class=\"a-size-base a-link-normal a-color-secondary report-abuse-link a-text-normal\" href=\"/hz/reviews-render/report-abuse?ie=UTF8&amp;voteDomain=Reviews&amp;ref=cm_cr_dp_d_rvw_hlp&amp;csrfT=goCxr6XyXevbUTAURfucWHmkvBSmxmN1CD%2Bm03oAAAABAAAAAF2P%2Fq9yYXcAAAAA%2B4kUEk%2F7iMGR3xPcX6iU&amp;entityId=RIY9RQI5MLSNJ&amp;sessionId=137-0530487-6192152\">Report abuse\u003C/a>\u003C/span>\u003C/span>\u003C/span>\n  \u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv id=\"R1QMLNWLRA63CN\" data-hook=\"review\" class=\"a-section review aok-relative\">\u003Cdiv id=\"R1QMLNWLRA63CN-review-card\" class=\"a-row a-spacing-none\">\u003Cdiv id=\"customer_review-R1QMLNWLRA63CN\" class=\"a-section celwidget\">\u003Cdiv data-hook=\"genome-widget\" class=\"a-row a-spacing-mini\">\u003Ca href=\"/gp/profile/amzn1.account.AFXVNCHMDYJAG2NLAVXI3PEMFIWA/ref=cm_cr_dp_d_gw_tr?ie=UTF8\" class=\"a-profile\" data-a-size=\"small\">\u003Cdiv aria-hidden=\"true\" class=\"a-profile-avatar-wrapper\">\u003Cdiv class=\"a-profile-avatar\">\u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/grey-pixel.gif\" class=\"a-lazy-loaded\" data-src=\"https://images-na.ssl-images-amazon.com/images/S/amazon-avatars-global/b7da2f67-43da-49f9-98f1-331b8823a351._CR0,26.0,281,281_SX48_.jpg\">\u003Cnoscript>\u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/S/amazon-avatars-global/b7da2f67-43da-49f9-98f1-331b8823a351._CR0,26.0,281,281_SX48_.jpg\"/>\u003C/noscript>\u003C/div>\u003C/div>\u003Cdiv class=\"a-profile-content\">\u003Cspan class=\"a-profile-name\">Jaz Smith\u003C/span>\u003C/div>\u003C/a>\u003C/div>\u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal\" title=\"5.0 out of 5 stars\" href=\"/gp/customer-reviews/R1QMLNWLRA63CN/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;ASIN=B06XD3LXXK\">\u003Ci data-hook=\"review-star-rating\" class=\"a-icon a-icon-star a-star-5 review-rating\">\u003Cspan class=\"a-icon-alt\">5.0 out of 5 stars\u003C/span>\u003C/i>\u003C/a>\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Ca data-hook=\"review-title\" class=\"a-size-base a-link-normal review-title a-color-base review-title-content a-text-bold\" href=\"/gp/customer-reviews/R1QMLNWLRA63CN/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;ASIN=B06XD3LXXK\">\u003Cspan class=\"\">Awesome!\u003C/span>\n            \u003C/a>\u003C/div>\u003Cspan data-hook=\"review-date\" class=\"a-size-base a-color-secondary review-date\">October 19, 2017\u003C/span>\u003Cdiv class=\"a-row a-spacing-mini review-data review-format-strip\">\u003Cspan data-hook=\"avp-badge-linkless\" class=\"a-size-mini a-color-state a-text-bold\">Verified Purchase\u003C/span>\u003C/div>\u003Cdiv class=\"a-row a-spacing-small review-data\">\u003Cspan data-hook=\"review-body\" class=\"a-size-base review-text\">\u003Cdiv aria-live=\"polite\" data-a-expander-name=\"review_text_read_more\" data-a-expander-collapsed-height=\"300\" class=\"a-expander-collapsed-height a-row a-expander-container a-expander-partial-collapse-container\" style=\"max-height:300px\">\u003Cdiv data-hook=\"review-collapsed\" aria-expanded=\"false\" class=\"a-expander-content reviewText review-text-content a-expander-partial-collapse-content\">\u003Cspan class=\"\">I’m highly impressed with this laptop! The price is unbeatable and the computer itself works flawlessly considering it is Certified Refurbished\u003C/span>\n  \u003C/div>\u003Cdiv class=\"a-expander-header a-expander-partial-collapse-header\" style=\"opacity: 0; display: none;\">\u003Cdiv class=\"a-expander-content-fade\">\u003C/div>\u003Ca href=\"javascript:void(0)\" data-hook=\"expand-collapse-read-more-less\" data-action=\"a-expander-toggle\" class=\"a-declarative\" data-a-expander-toggle=\"{&quot;allowLinkDefault&quot;:true, &quot;expand_prompt&quot;:&quot;Read more&quot;, &quot;collapse_prompt&quot;:&quot;Read less&quot;}\">\u003Ci class=\"a-icon a-icon-extender-expand\">\u003C/i>\u003Cspan class=\"a-expander-prompt\">Read more\u003C/span>\u003C/a>\u003C/div>\u003C/div>\u003C/span>\u003C/div>\u003Cdiv class=\"a-popover-preload\" id=\"a-popover-R1QMLNWLRA63CN_gallerySection_main\">\u003Cdiv class=\"reviewLightboxPopoverContainer\">\n    \u003Cdiv class=\"reviewsLightbox\" id=\"R1QMLNWLRA63CN_gallerySection_main\">\u003C/div>\n  \u003C/div>\n\u003C/div>\u003Cdiv id=\"R1QMLNWLRA63CN_imageSection_main\" class=\"a-section a-spacing-medium review-image-container\">\u003Cdiv class=\"review-image-tile-section\" data-reviewid=\"R1QMLNWLRA63CN\">\n        \u003Cimg alt=\"review image\" src=\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/grey-pixel.gif\" data-hook=\"review-image-tile\" class=\"review-image-tile a-lazy-loaded\" height=\"88\" width=\"100%\" data-src=\"https://images-na.ssl-images-amazon.com/images/I/81BFVQe+j3L._SY88.jpg\">\u003Cnoscript>\u003Cimg alt=\"review image\" src=\"https://images-na.ssl-images-amazon.com/images/I/81BFVQe+j3L._SY88.jpg\" height=\"88\" width=\"100%\"/>\u003C/noscript>\u003C/div>\n\n    \u003Cdiv style=\"display:none;\">\n            \u003Cspan class=\"a-declarative\" data-action=\"a-modal\" data-a-modal=\"{&quot;name&quot;:&quot;R1QMLNWLRA63CN_gallerySection_main&quot;}\">\u003Ca href=\"javascript:void(0)\" class=\"a-popover-trigger a-declarative\">\u003Ci class=\"a-icon a-icon-popover\">\u003C/i>\u003C/a>\u003C/span>\u003C/div>\n    \u003C/div>\u003Cscript>\n        P.when('review-image-binder', 'reviewsLightbox-js').execute(function(reviewImageBinder) {\n            reviewImageBinder.bindReview(\"R1QMLNWLRA63CN\",\n                \"R1QMLNWLRA63CN_imageSection_main\",\n                \"R1QMLNWLRA63CN_gallerySection_main\");\n        });\n    \u003C/script>\n\u003Cdiv data-hook=\"review-comments\" class=\"a-row review-comments cr-vote-action-bar\">\u003Cspan class=\"cr-vote\" data-hook=\"review-voting-widget\">\n  \u003Cdiv class=\"a-row a-spacing-small\">\u003Cspan data-hook=\"helpful-vote-statement\" class=\"a-size-base a-color-tertiary cr-vote-text\">115 people found this helpful\u003C/span>\u003C/div>\u003Cdiv class=\"cr-helpful-button aok-float-left\">\n      \u003Cspan class=\"a-button a-button-base\" id=\"a-autoid-27\">\u003Cspan class=\"a-button-inner\">\u003Ca href=\"https://www.amazon.com/ap/signin?openid.return_to=https%3A%2F%2Fwww.amazon.com%2Fdp%2FB06XD3LXXK%2Fref%3Dcm_cr_dp_d_vote_lft%3Fie%3DUTF8%26voteInstanceId%3DR1QMLNWLRA63CN%26voteValue%3D1%26csrfT%3DgszX507KZGeABFcHVrYEJ5vlfWOMme4UqNRXauYAAAABAAAAAF2P%252Fq9yYXcAAAAA%252B4kUEk%252F7iMGR3xPcX6iU%23R1QMLNWLRA63CN&amp;openid.identity=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.claimed_id=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.assoc_handle=usflex&amp;openid.mode=checkid_setup&amp;openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0\" data-hook=\"vote-helpful-button\" class=\"a-button-text\" role=\"button\" id=\"a-autoid-27-announce\">\u003Cdiv class=\"cr-helpful-text\">\n          Helpful\u003C/div>\n      \u003C/a>\u003C/span>\u003C/span>\u003C/div>\n  \u003C/span>\n\n\u003Ci class=\"a-icon a-icon-text-separator\" role=\"img\" aria-label=\"|\">\u003C/i>\u003Ca data-hook=\"review-comment\" class=\"a-size-base a-link-normal a-color-secondary a-text-normal\" href=\"/gp/customer-reviews/R1QMLNWLRA63CN/ref=cm_cr_dp_d_rvw_btm?ie=UTF8&amp;ASIN=B06XD3LXXK#wasThisHelpful\">Comment\u003C/a>\u003Cspan class=\"cr-footer-line-height\">\n      \u003Cspan>\u003Ci class=\"a-icon a-icon-text-separator\" role=\"img\" aria-label=\"|\">\u003C/i>\u003Cspan class=\"a-declarative\" data-action=\"cr-popup\" data-cr-popup=\"{&quot;width&quot;:&quot;580&quot;,&quot;title&quot;:&quot;ReportAbuse&quot;,&quot;url&quot;:&quot;/hz/reviews-render/report-abuse?ie=UTF8&amp;voteDomain=Reviews&amp;ref=cm_cr_dp_d_rvw_hlp&amp;csrfT=gszX507KZGeABFcHVrYEJ5vlfWOMme4UqNRXauYAAAABAAAAAF2P%2Fq9yYXcAAAAA%2B4kUEk%2F7iMGR3xPcX6iU&amp;entityId=R1QMLNWLRA63CN&amp;sessionId=137-0530487-6192152&quot;,&quot;height&quot;:&quot;380&quot;}\">\u003Ca class=\"a-size-base a-link-normal a-color-secondary report-abuse-link a-text-normal\" href=\"/hz/reviews-render/report-abuse?ie=UTF8&amp;voteDomain=Reviews&amp;ref=cm_cr_dp_d_rvw_hlp&amp;csrfT=gszX507KZGeABFcHVrYEJ5vlfWOMme4UqNRXauYAAAABAAAAAF2P%2Fq9yYXcAAAAA%2B4kUEk%2F7iMGR3xPcX6iU&amp;entityId=R1QMLNWLRA63CN&amp;sessionId=137-0530487-6192152\">Report abuse\u003C/a>\u003C/span>\u003C/span>\u003C/span>\n  \u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv id=\"R24O4JU8YH6719\" data-hook=\"review\" class=\"a-section review aok-relative\">\u003Cdiv id=\"R24O4JU8YH6719-review-card\" class=\"a-row a-spacing-none\">\u003Cdiv id=\"customer_review-R24O4JU8YH6719\" class=\"a-section celwidget\">\u003Cdiv data-hook=\"genome-widget\" class=\"a-row a-spacing-mini\">\u003Ca href=\"/gp/profile/amzn1.account.AEM4ESTAOE44K6LFZUHJCMOT2PCA/ref=cm_cr_dp_d_gw_tr?ie=UTF8\" class=\"a-profile\" data-a-size=\"small\">\u003Cdiv aria-hidden=\"true\" class=\"a-profile-avatar-wrapper\">\u003Cdiv class=\"a-profile-avatar\">\u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/grey-pixel.gif\" class=\"a-lazy-loaded\" data-src=\"https://images-na.ssl-images-amazon.com/images/S/amazon-avatars/default._CR0,0,1024,1024_SX48_.png\">\u003Cnoscript>\u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/S/amazon-avatars/default._CR0,0,1024,1024_SX48_.png\"/>\u003C/noscript>\u003C/div>\u003C/div>\u003Cdiv class=\"a-profile-content\">\u003Cspan class=\"a-profile-name\">Craig\u003C/span>\u003C/div>\u003C/a>\u003C/div>\u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal\" title=\"5.0 out of 5 stars\" href=\"/gp/customer-reviews/R24O4JU8YH6719/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;ASIN=B06XD3LXXK\">\u003Ci data-hook=\"review-star-rating\" class=\"a-icon a-icon-star a-star-5 review-rating\">\u003Cspan class=\"a-icon-alt\">5.0 out of 5 stars\u003C/span>\u003C/i>\u003C/a>\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Ca data-hook=\"review-title\" class=\"a-size-base a-link-normal review-title a-color-base review-title-content a-text-bold\" href=\"/gp/customer-reviews/R24O4JU8YH6719/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;ASIN=B06XD3LXXK\">\u003Cspan class=\"\">Great Chromebook. Does everything my wife needs.\u003C/span>\n            \u003C/a>\u003C/div>\u003Cspan data-hook=\"review-date\" class=\"a-size-base a-color-secondary review-date\">September 16, 2017\u003C/span>\u003Cdiv class=\"a-row a-spacing-mini review-data review-format-strip\">\u003Cspan data-hook=\"avp-badge-linkless\" class=\"a-size-mini a-color-state a-text-bold\">Verified Purchase\u003C/span>\u003C/div>\u003Cdiv class=\"a-row a-spacing-small review-data\">\u003Cspan data-hook=\"review-body\" class=\"a-size-base review-text\">\u003Cdiv aria-live=\"polite\" data-a-expander-name=\"review_text_read_more\" data-a-expander-collapsed-height=\"300\" class=\"a-expander-collapsed-height a-row a-expander-container a-expander-partial-collapse-container\" style=\"max-height:300px\">\u003Cdiv data-hook=\"review-collapsed\" aria-expanded=\"false\" class=\"a-expander-content reviewText review-text-content a-expander-partial-collapse-content\">\u003Cspan class=\"\">I purchased this for my wife to use in the Master's program she has started. She was frustrated by our old computer, and this works like a breeze. The Chromebook OS lets her have immediate start-up, while our Office 365 account allows her to use a full host of Microsoft products online, if she needs something outside the Google products. She had been extremely pleased and wished she would have purchased a Chromebook years ago.\u003C/span>\n  \u003C/div>\u003Cdiv class=\"a-expander-header a-expander-partial-collapse-header\" style=\"opacity: 0; display: none;\">\u003Cdiv class=\"a-expander-content-fade\">\u003C/div>\u003Ca href=\"javascript:void(0)\" data-hook=\"expand-collapse-read-more-less\" data-action=\"a-expander-toggle\" class=\"a-declarative\" data-a-expander-toggle=\"{&quot;allowLinkDefault&quot;:true, &quot;expand_prompt&quot;:&quot;Read more&quot;, &quot;collapse_prompt&quot;:&quot;Read less&quot;}\">\u003Ci class=\"a-icon a-icon-extender-expand\">\u003C/i>\u003Cspan class=\"a-expander-prompt\">Read more\u003C/span>\u003C/a>\u003C/div>\u003C/div>\u003C/span>\u003C/div>\u003Cdiv data-hook=\"review-comments\" class=\"a-row review-comments cr-vote-action-bar\">\u003Cspan class=\"cr-vote\" data-hook=\"review-voting-widget\">\n  \u003Cdiv class=\"a-row a-spacing-small\">\u003Cspan data-hook=\"helpful-vote-statement\" class=\"a-size-base a-color-tertiary cr-vote-text\">154 people found this helpful\u003C/span>\u003C/div>\u003Cdiv class=\"cr-helpful-button aok-float-left\">\n      \u003Cspan class=\"a-button a-button-base\" id=\"a-autoid-28\">\u003Cspan class=\"a-button-inner\">\u003Ca href=\"https://www.amazon.com/ap/signin?openid.return_to=https%3A%2F%2Fwww.amazon.com%2Fdp%2FB06XD3LXXK%2Fref%3Dcm_cr_dp_d_vote_lft%3Fie%3DUTF8%26voteInstanceId%3DR24O4JU8YH6719%26voteValue%3D1%26csrfT%3DglaCUIhxcg8GEUGU8V5v8sgFN6Z1iEsZl0iWu8IAAAABAAAAAF2P%252Fq9yYXcAAAAA%252B4kUEk%252F7iMGR3xPcX6iU%23R24O4JU8YH6719&amp;openid.identity=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.claimed_id=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.assoc_handle=usflex&amp;openid.mode=checkid_setup&amp;openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0\" data-hook=\"vote-helpful-button\" class=\"a-button-text\" role=\"button\" id=\"a-autoid-28-announce\">\u003Cdiv class=\"cr-helpful-text\">\n          Helpful\u003C/div>\n      \u003C/a>\u003C/span>\u003C/span>\u003C/div>\n  \u003C/span>\n\n\u003Ci class=\"a-icon a-icon-text-separator\" role=\"img\" aria-label=\"|\">\u003C/i>\u003Ca data-hook=\"review-comment\" class=\"a-size-base a-link-normal a-color-secondary a-text-normal\" href=\"/gp/customer-reviews/R24O4JU8YH6719/ref=cm_cr_dp_d_rvw_btm?ie=UTF8&amp;ASIN=B06XD3LXXK#wasThisHelpful\">Comment\u003C/a>\u003Cspan class=\"cr-footer-line-height\">\n      \u003Cspan>\u003Ci class=\"a-icon a-icon-text-separator\" role=\"img\" aria-label=\"|\">\u003C/i>\u003Cspan class=\"a-declarative\" data-action=\"cr-popup\" data-cr-popup=\"{&quot;width&quot;:&quot;580&quot;,&quot;title&quot;:&quot;ReportAbuse&quot;,&quot;url&quot;:&quot;/hz/reviews-render/report-abuse?ie=UTF8&amp;voteDomain=Reviews&amp;ref=cm_cr_dp_d_rvw_hlp&amp;csrfT=glaCUIhxcg8GEUGU8V5v8sgFN6Z1iEsZl0iWu8IAAAABAAAAAF2P%2Fq9yYXcAAAAA%2B4kUEk%2F7iMGR3xPcX6iU&amp;entityId=R24O4JU8YH6719&amp;sessionId=137-0530487-6192152&quot;,&quot;height&quot;:&quot;380&quot;}\">\u003Ca class=\"a-size-base a-link-normal a-color-secondary report-abuse-link a-text-normal\" href=\"/hz/reviews-render/report-abuse?ie=UTF8&amp;voteDomain=Reviews&amp;ref=cm_cr_dp_d_rvw_hlp&amp;csrfT=glaCUIhxcg8GEUGU8V5v8sgFN6Z1iEsZl0iWu8IAAAABAAAAAF2P%2Fq9yYXcAAAAA%2B4kUEk%2F7iMGR3xPcX6iU&amp;entityId=R24O4JU8YH6719&amp;sessionId=137-0530487-6192152\">Report abuse\u003C/a>\u003C/span>\u003C/span>\u003C/span>\n  \u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv id=\"RRBK28J0YIYCW\" data-hook=\"review\" class=\"a-section review aok-relative\">\u003Cdiv id=\"RRBK28J0YIYCW-review-card\" class=\"a-row a-spacing-none\">\u003Cdiv id=\"customer_review-RRBK28J0YIYCW\" class=\"a-section celwidget\">\u003Cdiv data-hook=\"genome-widget\" class=\"a-row a-spacing-mini\">\u003Ca href=\"/gp/profile/amzn1.account.AGEN6UJDASCW5LNU6QNJEA3T4KJQ/ref=cm_cr_dp_d_gw_tr?ie=UTF8\" class=\"a-profile\" data-a-size=\"small\">\u003Cdiv aria-hidden=\"true\" class=\"a-profile-avatar-wrapper\">\u003Cdiv class=\"a-profile-avatar\">\u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/grey-pixel.gif\" class=\"a-lazy-loaded\" data-src=\"https://images-na.ssl-images-amazon.com/images/S/amazon-avatars-global/default._CR0,0,1024,1024_SX48_.png\">\u003Cnoscript>\u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/S/amazon-avatars-global/default._CR0,0,1024,1024_SX48_.png\"/>\u003C/noscript>\u003C/div>\u003C/div>\u003Cdiv class=\"a-profile-content\">\u003Cspan class=\"a-profile-name\">Amazon Customer\u003C/span>\u003C/div>\u003C/a>\u003C/div>\u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal\" title=\"5.0 out of 5 stars\" href=\"/gp/customer-reviews/RRBK28J0YIYCW/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;ASIN=B06XD3LXXK\">\u003Ci data-hook=\"review-star-rating\" class=\"a-icon a-icon-star a-star-5 review-rating\">\u003Cspan class=\"a-icon-alt\">5.0 out of 5 stars\u003C/span>\u003C/i>\u003C/a>\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Ca data-hook=\"review-title\" class=\"a-size-base a-link-normal review-title a-color-base review-title-content a-text-bold\" href=\"/gp/customer-reviews/RRBK28J0YIYCW/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;ASIN=B06XD3LXXK\">\u003Cspan class=\"\">... to get a chromebook simply because i do not like windows i got this today and really expected to ...\u003C/span>\n            \u003C/a>\u003C/div>\u003Cspan data-hook=\"review-date\" class=\"a-size-base a-color-secondary review-date\">July 20, 2017\u003C/span>\u003Cdiv class=\"a-row a-spacing-mini review-data review-format-strip\">\u003Cspan data-hook=\"avp-badge-linkless\" class=\"a-size-mini a-color-state a-text-bold\">Verified Purchase\u003C/span>\u003C/div>\u003Cdiv class=\"a-row a-spacing-small review-data\">\u003Cspan data-hook=\"review-body\" class=\"a-size-base review-text\">\u003Cdiv aria-live=\"polite\" data-a-expander-name=\"review_text_read_more\" data-a-expander-collapsed-height=\"300\" class=\"a-expander-collapsed-height a-row a-expander-container a-expander-partial-collapse-container\" style=\"max-height:300px\">\u003Cdiv data-hook=\"review-collapsed\" aria-expanded=\"false\" class=\"a-expander-content reviewText review-text-content a-expander-partial-collapse-content\">\u003Cspan class=\"\">i have had about 4 laptops int he past 10 years -after my last one i decided to get a chromebook simply because i do not like windows\u003Cbr>i got this today and really expected to spend the night trying to figure this out-much to my surprise it took me less than 2 minutes to get it set up and running it doesnt take long to power up and get online like my hp and i love it only problem i wouldsay is it has no dvd drive but i am ok with that i wanted a basic computer that is simple to use and i got one -couldnt be happier\u003C/span>\n  \u003C/div>\u003Cdiv class=\"a-expander-header a-expander-partial-collapse-header\" style=\"opacity: 0; display: none;\">\u003Cdiv class=\"a-expander-content-fade\">\u003C/div>\u003Ca href=\"javascript:void(0)\" data-hook=\"expand-collapse-read-more-less\" data-action=\"a-expander-toggle\" class=\"a-declarative\" data-a-expander-toggle=\"{&quot;allowLinkDefault&quot;:true, &quot;expand_prompt&quot;:&quot;Read more&quot;, &quot;collapse_prompt&quot;:&quot;Read less&quot;}\">\u003Ci class=\"a-icon a-icon-extender-expand\">\u003C/i>\u003Cspan class=\"a-expander-prompt\">Read more\u003C/span>\u003C/a>\u003C/div>\u003C/div>\u003C/span>\u003C/div>\u003Cdiv data-hook=\"review-comments\" class=\"a-row review-comments cr-vote-action-bar\">\u003Cspan class=\"cr-vote\" data-hook=\"review-voting-widget\">\n  \u003Cdiv class=\"a-row a-spacing-small\">\u003Cspan data-hook=\"helpful-vote-statement\" class=\"a-size-base a-color-tertiary cr-vote-text\">332 people found this helpful\u003C/span>\u003C/div>\u003Cdiv class=\"cr-helpful-button aok-float-left\">\n      \u003Cspan class=\"a-button a-button-base\" id=\"a-autoid-29\">\u003Cspan class=\"a-button-inner\">\u003Ca href=\"https://www.amazon.com/ap/signin?openid.return_to=https%3A%2F%2Fwww.amazon.com%2Fdp%2FB06XD3LXXK%2Fref%3Dcm_cr_dp_d_vote_lft%3Fie%3DUTF8%26voteInstanceId%3DRRBK28J0YIYCW%26voteValue%3D1%26csrfT%3DgrrX3U%252FitqQWfExolST0GByJXCKmd7t6zoTV6%252BYAAAABAAAAAF2P%252Fq9yYXcAAAAA%252B4kUEk%252F7iMGR3xPcX6iU%23RRBK28J0YIYCW&amp;openid.identity=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.claimed_id=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.assoc_handle=usflex&amp;openid.mode=checkid_setup&amp;openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0\" data-hook=\"vote-helpful-button\" class=\"a-button-text\" role=\"button\" id=\"a-autoid-29-announce\">\u003Cdiv class=\"cr-helpful-text\">\n          Helpful\u003C/div>\n      \u003C/a>\u003C/span>\u003C/span>\u003C/div>\n  \u003C/span>\n\n\u003Ci class=\"a-icon a-icon-text-separator\" role=\"img\" aria-label=\"|\">\u003C/i>\u003Ca data-hook=\"review-comment\" class=\"a-size-base a-link-normal a-color-secondary a-text-normal\" href=\"/gp/customer-reviews/RRBK28J0YIYCW/ref=cm_cr_dp_d_rvw_btm?ie=UTF8&amp;ASIN=B06XD3LXXK#wasThisHelpful\">Comment\u003C/a>\u003Cspan class=\"cr-footer-line-height\">\n      \u003Cspan>\u003Ci class=\"a-icon a-icon-text-separator\" role=\"img\" aria-label=\"|\">\u003C/i>\u003Cspan class=\"a-declarative\" data-action=\"cr-popup\" data-cr-popup=\"{&quot;width&quot;:&quot;580&quot;,&quot;title&quot;:&quot;ReportAbuse&quot;,&quot;url&quot;:&quot;/hz/reviews-render/report-abuse?ie=UTF8&amp;voteDomain=Reviews&amp;ref=cm_cr_dp_d_rvw_hlp&amp;csrfT=grrX3U%2FitqQWfExolST0GByJXCKmd7t6zoTV6%2BYAAAABAAAAAF2P%2Fq9yYXcAAAAA%2B4kUEk%2F7iMGR3xPcX6iU&amp;entityId=RRBK28J0YIYCW&amp;sessionId=137-0530487-6192152&quot;,&quot;height&quot;:&quot;380&quot;}\">\u003Ca class=\"a-size-base a-link-normal a-color-secondary report-abuse-link a-text-normal\" href=\"/hz/reviews-render/report-abuse?ie=UTF8&amp;voteDomain=Reviews&amp;ref=cm_cr_dp_d_rvw_hlp&amp;csrfT=grrX3U%2FitqQWfExolST0GByJXCKmd7t6zoTV6%2BYAAAABAAAAAF2P%2Fq9yYXcAAAAA%2B4kUEk%2F7iMGR3xPcX6iU&amp;entityId=RRBK28J0YIYCW&amp;sessionId=137-0530487-6192152\">Report abuse\u003C/a>\u003C/span>\u003C/span>\u003C/span>\n  \u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv id=\"R3E5XP2N1Q7SLN\" data-hook=\"review\" class=\"a-section review aok-relative\">\u003Cdiv id=\"R3E5XP2N1Q7SLN-review-card\" class=\"a-row a-spacing-none\">\u003Cdiv id=\"customer_review-R3E5XP2N1Q7SLN\" class=\"a-section celwidget\">\u003Cdiv data-hook=\"genome-widget\" class=\"a-row a-spacing-mini\">\u003Ca href=\"/gp/profile/amzn1.account.AG6KBSNNDL7JWJNHYYMXBNYBM3CA/ref=cm_cr_dp_d_gw_tr?ie=UTF8\" class=\"a-profile\" data-a-size=\"small\">\u003Cdiv aria-hidden=\"true\" class=\"a-profile-avatar-wrapper\">\u003Cdiv class=\"a-profile-avatar\">\u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/grey-pixel.gif\" class=\"a-lazy-loaded\" data-src=\"https://images-na.ssl-images-amazon.com/images/S/amazon-avatars-global/13b68ac3-bd5c-4cf5-b562-63227a3a5d28._CR0,0,500,500_SX48_.jpg\">\u003Cnoscript>\u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/S/amazon-avatars-global/13b68ac3-bd5c-4cf5-b562-63227a3a5d28._CR0,0,500,500_SX48_.jpg\"/>\u003C/noscript>\u003C/div>\u003C/div>\u003Cdiv class=\"a-profile-content\">\u003Cspan class=\"a-profile-name\">Bunny Worcester\u003C/span>\u003C/div>\u003C/a>\u003C/div>\u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal\" title=\"5.0 out of 5 stars\" href=\"/gp/customer-reviews/R3E5XP2N1Q7SLN/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;ASIN=B06XD3LXXK\">\u003Ci data-hook=\"review-star-rating\" class=\"a-icon a-icon-star a-star-5 review-rating\">\u003Cspan class=\"a-icon-alt\">5.0 out of 5 stars\u003C/span>\u003C/i>\u003C/a>\u003Cspan class=\"a-letter-space\">\u003C/span>\u003Ca data-hook=\"review-title\" class=\"a-size-base a-link-normal review-title a-color-base review-title-content a-text-bold\" href=\"/gp/customer-reviews/R3E5XP2N1Q7SLN/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;ASIN=B06XD3LXXK\">\u003Cspan class=\"\">What a deal\u003C/span>\n            \u003C/a>\u003C/div>\u003Cspan data-hook=\"review-date\" class=\"a-size-base a-color-secondary review-date\">July 18, 2017\u003C/span>\u003Cdiv class=\"a-row a-spacing-mini review-data review-format-strip\">\u003Cspan data-hook=\"avp-badge-linkless\" class=\"a-size-mini a-color-state a-text-bold\">Verified Purchase\u003C/span>\u003C/div>\u003Cdiv class=\"a-row a-spacing-small review-data\">\u003Cspan data-hook=\"review-body\" class=\"a-size-base review-text\">\u003Cdiv aria-live=\"polite\" data-a-expander-name=\"review_text_read_more\" data-a-expander-collapsed-height=\"300\" class=\"a-expander-collapsed-height a-row a-expander-container a-expander-partial-collapse-container\" style=\"max-height:300px\">\u003Cdiv data-hook=\"review-collapsed\" aria-expanded=\"false\" class=\"a-expander-content reviewText review-text-content a-expander-partial-collapse-content\">\u003Cspan class=\"\">I will tell you this is a great buy.I can not believe the price and the product is great.I am so happy with my decision on this purchase.It moves very fast and adding external usb drive works fine .\u003Cbr>Thanks for a good deal.\u003C/span>\n  \u003C/div>\u003Cdiv class=\"a-expander-header a-expander-partial-collapse-header\" style=\"opacity: 0; display: none;\">\u003Cdiv class=\"a-expander-content-fade\">\u003C/div>\u003Ca href=\"javascript:void(0)\" data-hook=\"expand-collapse-read-more-less\" data-action=\"a-expander-toggle\" class=\"a-declarative\" data-a-expander-toggle=\"{&quot;allowLinkDefault&quot;:true, &quot;expand_prompt&quot;:&quot;Read more&quot;, &quot;collapse_prompt&quot;:&quot;Read less&quot;}\">\u003Ci class=\"a-icon a-icon-extender-expand\">\u003C/i>\u003Cspan class=\"a-expander-prompt\">Read more\u003C/span>\u003C/a>\u003C/div>\u003C/div>\u003C/span>\u003C/div>\u003Cdiv data-hook=\"review-comments\" class=\"a-row review-comments cr-vote-action-bar\">\u003Cspan class=\"cr-vote\" data-hook=\"review-voting-widget\">\n  \u003Cdiv class=\"a-row a-spacing-small\">\u003Cspan data-hook=\"helpful-vote-statement\" class=\"a-size-base a-color-tertiary cr-vote-text\">158 people found this helpful\u003C/span>\u003C/div>\u003Cdiv class=\"cr-helpful-button aok-float-left\">\n      \u003Cspan class=\"a-button a-button-base\" id=\"a-autoid-30\">\u003Cspan class=\"a-button-inner\">\u003Ca href=\"https://www.amazon.com/ap/signin?openid.return_to=https%3A%2F%2Fwww.amazon.com%2Fdp%2FB06XD3LXXK%2Fref%3Dcm_cr_dp_d_vote_lft%3Fie%3DUTF8%26voteInstanceId%3DR3E5XP2N1Q7SLN%26voteValue%3D1%26csrfT%3DgpnBOAm%252BltwszemmWLT06PintfziqEUyHAY3UUAAAAABAAAAAF2P%252Fq9yYXcAAAAA%252B4kUEk%252F7iMGR3xPcX6iU%23R3E5XP2N1Q7SLN&amp;openid.identity=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.claimed_id=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.assoc_handle=usflex&amp;openid.mode=checkid_setup&amp;openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0\" data-hook=\"vote-helpful-button\" class=\"a-button-text\" role=\"button\" id=\"a-autoid-30-announce\">\u003Cdiv class=\"cr-helpful-text\">\n          Helpful\u003C/div>\n      \u003C/a>\u003C/span>\u003C/span>\u003C/div>\n  \u003C/span>\n\n\u003Ci class=\"a-icon a-icon-text-separator\" role=\"img\" aria-label=\"|\">\u003C/i>\u003Ca data-hook=\"review-comment\" class=\"a-size-base a-link-normal a-color-secondary a-text-normal\" href=\"/gp/customer-reviews/R3E5XP2N1Q7SLN/ref=cm_cr_dp_d_rvw_btm?ie=UTF8&amp;ASIN=B06XD3LXXK#wasThisHelpful\">Comment\u003C/a>\u003Cspan class=\"cr-footer-line-height\">\n      \u003Cspan>\u003Ci class=\"a-icon a-icon-text-separator\" role=\"img\" aria-label=\"|\">\u003C/i>\u003Cspan class=\"a-declarative\" data-action=\"cr-popup\" data-cr-popup=\"{&quot;width&quot;:&quot;580&quot;,&quot;title&quot;:&quot;ReportAbuse&quot;,&quot;url&quot;:&quot;/hz/reviews-render/report-abuse?ie=UTF8&amp;voteDomain=Reviews&amp;ref=cm_cr_dp_d_rvw_hlp&amp;csrfT=gpnBOAm%2BltwszemmWLT06PintfziqEUyHAY3UUAAAAABAAAAAF2P%2Fq9yYXcAAAAA%2B4kUEk%2F7iMGR3xPcX6iU&amp;entityId=R3E5XP2N1Q7SLN&amp;sessionId=137-0530487-6192152&quot;,&quot;height&quot;:&quot;380&quot;}\">\u003Ca class=\"a-size-base a-link-normal a-color-secondary report-abuse-link a-text-normal\" href=\"/hz/reviews-render/report-abuse?ie=UTF8&amp;voteDomain=Reviews&amp;ref=cm_cr_dp_d_rvw_hlp&amp;csrfT=gpnBOAm%2BltwszemmWLT06PintfziqEUyHAY3UUAAAAABAAAAAF2P%2Fq9yYXcAAAAA%2B4kUEk%2F7iMGR3xPcX6iU&amp;entityId=R3E5XP2N1Q7SLN&amp;sessionId=137-0530487-6192152\">Report abuse\u003C/a>\u003C/span>\u003C/span>\u003C/span>\n  \u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv id=\"reviews-medley-footer\" data-hook=\"reviews-medley-footer\" class=\"a-section\">\u003Cdiv class=\"a-row\">\u003Cdiv class=\"a-box a-spacing-extra-large a-color-alternate-background review\">\u003Cdiv class=\"a-box-inner\">There are 948 customer reviews and 956 customer ratings.\u003C/div>\u003C/div>\u003C/div>\u003Cdiv class=\"a-row a-spacing-large\">\u003Ca data-hook=\"see-all-reviews-link-foot\" class=\"a-link-emphasis a-text-bold\" href=\"/Acer-Flagship-CB3-532-Premium-Chromebook/product-reviews/B06XD3LXXK/ref=cm_cr_dp_d_show_all_btm?ie=UTF8&amp;reviewerType=all_reviews\">See all 948 customer reviews\u003C/a>\u003C/div>\u003Cdiv class=\"a-row\">\u003Cspan class=\"a-button a-button-base writeReviewButton\" id=\"a-autoid-31\">\u003Cspan class=\"a-button-inner\">\u003Ca href=\"/review/create-review/ref=cm_cr_dp_d_wr_but_btm?ie=UTF8&amp;channel=glance-detail&amp;asin=B06XD3LXXK\" data-hook=\"write-review-button\" class=\"a-button-text\" role=\"button\" id=\"a-autoid-31-announce\">Write a customer review\u003C/a>\u003C/span>\u003C/span>\u003C/div>\u003C/div>\u003C/div>\n\u003C/div>\u003C/span>\n  \u003Cspan class=\"cr-widget-CrossMarketplaceSharing\" data-hook=\"cr-widget-CrossMarketplaceSharing\">\u003C/span>\n  \u003C/div>\u003C/div>\u003C/div>\u003C/div>\u003C/div>\n\n    \n    \n\n  \n\n\n\n        \n        \n        \n  \n\n\n\n\n\n\n\n\n    \n\n\n            \n\n\n            \n\n\n\n\n\n\n            \n\n        \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"giveaway_feature_div\" class=\"feature\" data-feature-name=\"giveaway\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n    \n    \n\n    \n    \u003Cdiv id=\"giveaway\" class=\"a-section a-spacing-extra-large\">\n        \u003Cdiv class=\"a-divider a-divider-section\">\u003Cdiv class=\"a-divider-inner\">\u003C/div>\u003C/div>\n        \n            \n            \n                \n                \n                \u003Cdiv class=\"a-row\">\n                    \u003Ch2>Set up an Amazon Giveaway\u003C/h2>\n                \u003C/div>\n                \u003Cdiv class=\"a-fixed-left-grid a-spacing-top-medium\">\u003Cdiv class=\"a-fixed-left-grid-inner\" style=\"padding-left:130px\">\n                    \u003Cdiv class=\"a-fixed-left-grid-col a-col-left\" style=\"width:130px;margin-left:-130px;float:left;\">\n                        \u003Cimg alt=\"Acer Flagship CB3-532 15.6&amp;quot; HD Premium Chromebook - Intel Dual-Core Celeron N3060 up to 2.48GH.z, 2GB RAM, 16GB SSD, Wireless AC, HDMI, USB 3.0, Webcam, Chrome OS (Renewed)\" src=\"https://images-na.ssl-images-amazon.com/images/I/51840t%2BtcFL._SL500_AA130_.jpg\" width=\"130\">\n                    \u003C/div>\n                    \u003Cdiv class=\"a-fixed-left-grid-col a-col-right\" style=\"padding-left:1.5%;float:left;\">\n                        \u003Cdiv class=\"a-row a-spacing-top-small text-and-btn\">\n                            \u003Cdiv class=\"a-column a-span6\">\n                                \u003Cspan>Amazon Giveaway allows you to run promotional giveaways in order to create buzz, reward your audience, and attract new followers and customers. \u003C/span>\u003Ca class=\"a-link-normal\" target=\"_blank\" rel=\"noopener\" href=\"/ga/giveaways/?i=dplm&amp;pageId=1&amp;ref=aga_dp_lm\">Learn more about Amazon Giveaway\u003C/a>\n                            \u003C/div>\n                        \u003C/div>\n                        \u003Cdiv class=\"a-row a-spacing-top-medium giveaway-product-title\">\n                            \u003Cspan class=\"a-text-bold\">This item: \u003C/span>\u003Cspan>Acer Flagship CB3-532 15.6\" HD Premium Chromebook - Intel Dual-Core Celeron N3060 up to 2.48GH.z, 2GB RAM, 16GB SSD, Wireless AC, HDMI, USB 3.0, Webcam, Chrome OS (Renewed)\u003C/span>\u003Cbr>\n                        \u003C/div>\n                        \u003Cdiv class=\"a-row a-spacing-top-medium\">\n                            \u003Cspan class=\"a-button a-button-base\" id=\"a-autoid-32\">\u003Cspan class=\"a-button-inner\">\u003Ca href=\"/giveaway/host/setup/ref=aga_h_su_dp?_encoding=UTF8&amp;asin=B06XD3LXXK\" name=\"submitGiveaway\" class=\"a-button-text\" role=\"button\" id=\"a-autoid-32-announce\">\n                                Set up a giveaway\n                            \u003C/a>\u003C/span>\u003C/span>\n                            \u003Cbr>\n                        \u003C/div>\n                    \u003C/div>\n                \u003C/div>\u003C/div>\n            \n        \n    \u003C/div>\n\n    \u003Cscript type=\"text/javascript\">\n        \n        P.when('jQuery').execute(function($) {\n            if ($(\"#giveaway\").is(\":hidden\") &&\n                    (typeof giveawayGiftingShareVar !== 'undefined' && giveawayGiftingShareVar)) {\n                $(\"#giveaway\").removeClass(\"a-hidden\");\n            }\n        });\n    \u003C/script>\n\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\u003Cscript type=\"text/javascript\">\nvar isAUI = typeof P === 'object' && typeof P.when === 'function';\n  if(typeof setCSMReq == 'function') {\n        setCSMReq('cf');\n  }else {\n     if(typeof uet == 'function') {\n        uet('cf');\n     }\n     if(isAUI){\n     \t   P.trigger(\"cf\");\n     \t}else{\n     \t\tamznJQ.completedStage('amznJQ.criticalFeature');\n     \t}\n  }\n\u003C/script>\n \n\n\n\n\n\n\n\u003Cscript type=\"text/javascript\">\n\n\n(window.AmazonUIPageJS ? AmazonUIPageJS : P).when('cf').execute(function(){\n  (window.AmazonUIPageJS ? AmazonUIPageJS : P).load.js('https://images-na.ssl-images-amazon.com/images/I/21AZkAfOA6L._RC|21XJFDMQuNL.js,11OyIHCq0lL.js,01GhKb2usNL.js_.js?AUIClients/HardlinesFeatureDetailPageMetaAsset');\n});\n\n\n\n\n  if(typeof P !== \"undefined\" && typeof P.when === \"function\"){\n    P.when('cf').execute(function() {\n          P.when('search-js-jq').execute(function(){});\n  P.when('amazonShoveler').execute(function(){});\n  P.when('simsJS').execute(function(){});\n  P.when('cmuAnnotations').execute(function(){});\n  P.when('externalJS.tagging').execute(function(){});\n  P.when('amzn-ratings-bar').execute(function(){});\n  P.when('accessoriesJS').execute(function(){});\n  P.when('priceformatterJS').execute(function(){});\n  P.when('CustomerPopover').execute(function(){});\n\n    });\n  }\n\u003C/script>\n\n\n\n\n\n\n \n\n\n \n\n\u003Cscript type=\"text/javascript\">\n// This will fetch the resource in a low impact way from the experiment server.\n// executeOnload will prevent fetching the resource until everything else on the page has loaded.\nvar cloudfrontImg = new Image();\nvar shouldExecuteOnload = (\"1\" == \"1\");\nif (shouldExecuteOnload) {\n    if (window.addEventListener) {\n        window.addEventListener(\"load\", function() {\n            setTimeout(function(){ cloudfrontImg.src = \"//cloudfront-labs.amazonaws.com/x.png\"; }, 400);}, false);\n    } else if (window.attachEvent) {\n        window.attachEvent(\"onload\", function() {\n            setTimeout(function(){ cloudfrontImg.src = \"//cloudfront-labs.amazonaws.com/x.png\"; }, 400);});\n    }\n} else {\n    setTimeout(function(){ cloudfrontImg.src = \"//cloudfront-labs.amazonaws.com/x.png\"; }, 400);\n}\n\u003C/script>\n \n\n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cscript>\n(window.AmazonUIPageJS ? AmazonUIPageJS : P).when('atf').execute(function(){\n  (window.AmazonUIPageJS ? AmazonUIPageJS : P).load.js('https://images-na.ssl-images-amazon.com/images/I/31%2BYJmkO6ZL.js?AUIClients/PageRefreshAsset#123392-T1');\n});\n\u003C/script>\n\n\n\n\n\n\n\n\n\n\n\u003Cscript language=\"JavaScript\">\n    P.register('page-refresh-js-init-mason-data', function() {\n        var dataToReturn = {\"divToUpdateData\":{\"twister\":{\"dpx-product-description\":{\"divToUpdate\":\"dpx-product-description_feature_div\"},\"dpx-btf-renewed-program-description\":{\"divToUpdate\":\"dpx-btf-renewed-program-description_feature_div\"},\"dpx-upsell-downsell-widget\":{\"divToUpdate\":\"dpx-upsell-downsell-widget_feature_div\"},\"twister-cf-marker\":{\"divToUpdate\":\"twister-cf-marker_feature_div\"},\"cpsia-product-safety-warning\":{\"divToUpdate\":\"cpsia-product-safety-warning_feature_div\"},\"dp-ads-center-promo\":{\"divToUpdate\":\"dp-ads-center-promo_feature_div\"},\"dpx-btf-feature-bullets\":{\"divToUpdate\":\"dpx-btf-feature-bullets_feature_div\"},\"sims-consolidated-4\":{\"divToUpdate\":\"sims-consolidated-4_feature_div\"},\"dp-fast-track-logger\":{\"divToUpdate\":\"dp-fast-track-logger_feature_div\"},\"dp-ads-middle\":{\"divToUpdate\":\"dp-ads-middle_feature_div\"},\"dp-ads-center-promo-top\":{\"divToUpdate\":\"dp-ads-center-promo-top_feature_div\"},\"dpx-ajax-block-components\":{\"divToUpdate\":\"dpx-ajax-block-components_feature_div\"},\"ask-dp-search\":{\"divToUpdate\":\"ask-dp-search_feature_div\"},\"va-related-videos-widget\":{\"divToUpdate\":\"va-related-videos-widget_feature_div\"},\"sims-consolidated-2\":{\"divToUpdate\":\"sims-consolidated-2_feature_div\"},\"dpx-aplus-brand-story\":{\"divToUpdate\":\"dpx-aplus-brand-story_feature_div\"},\"dvd-rental-badge\":{\"divToUpdate\":\"dvd-rental-badge_feature_div\"},\"dp-out-of-stock-top\":{\"divToUpdate\":\"dp-out-of-stock-top_feature_div\"},\"dpx-giveaway\":{\"divToUpdate\":\"dpx-giveaway_feature_div\"},\"andon-cord-pulling\":{\"divToUpdate\":\"andon-cord-pulling_feature_div\"},\"mags-dp-msg1\":{\"divToUpdate\":\"mags-dp-msg1_feature_div\"},\"view-dpv-rich-media-2\":{\"divToUpdate\":\"view-dpv-rich-media-2_feature_div\"},\"important-information\":{\"divToUpdate\":\"important-information_feature_div\"},\"dpx-aplus-product-description\":{\"divToUpdate\":\"dpx-aplus-product-description_feature_div\"},\"view-dpv-rich-media-1\":{\"divToUpdate\":\"view-dpv-rich-media-1_feature_div\"},\"dpx-btf-bundle\":{\"divToUpdate\":\"dpx-btf-bundle_feature_div\"},\"dpx-btf-hlcx-comparison\":{\"divToUpdate\":\"dpx-btf-hlcx-comparison_feature_div\"},\"qpe-title-tag\":{\"divToUpdate\":\"qpe-title-tag_feature_div\"},\"product-details-grid\":{\"divToUpdate\":\"product-details-grid_feature_div\"},\"sims-consolidated-3\":{\"divToUpdate\":\"sims-consolidated-3_feature_div\"},\"hero-quick-promo-grid\":{\"divToUpdate\":\"hero-quick-promo-grid_feature_div\"},\"twister-atf-marker\":{\"divToUpdate\":\"twister-atf-marker_feature_div\"},\"replacement-parts-fitment-widget\":{\"divToUpdate\":\"replacement-parts-fitment-widget_feature_div\"},\"petronas-promo-right-col\":{\"divToUpdate\":\"petronas-promo-right-col_feature_div\"},\"dpx-legal\":{\"divToUpdate\":\"dpx-legal_feature_div\"},\"ask-btf\":{\"divToUpdate\":\"ask-btf_feature_div\"},\"twister-log-metrics\":{\"divToUpdate\":\"twister-log-metrics_feature_div\"},\"services-widget-2\":{\"divToUpdate\":\"services-widget-2_feature_div\"},\"promotions\":{\"divToUpdate\":\"promotions_feature_div\"},\"services-widget-1\":{\"divToUpdate\":\"services-widget-1_feature_div\"},\"dpx-btf-bundle-discoverability\":{\"divToUpdate\":\"dpx-btf-bundle-discoverability_feature_div\"},\"center-28\":{\"divToUpdate\":\"center-28_feature_div\"},\"product-alert-grid\":{\"divToUpdate\":\"product-alert-grid_feature_div\"},\"dpx-image-block-variations\":{\"divToUpdate\":\"dpx-image-block-variations_feature_div\"},\"dpx-aplus-3p-product-description\":{\"divToUpdate\":\"dpx-aplus-3p-product-description_feature_div\"},\"sims-consolidated-1\":{\"divToUpdate\":\"sims-consolidated-1_feature_div\"}},\"location\":{},\"rentbuybox\":{},\"newbuybox\":{},\"upsell\":{}}}; //selectively not escaping this.\n        return dataToReturn;\n    });\n\u003C/script>\n\n\u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;page-refresh-data-mason&quot;}\">{\"pageRefreshUrlParams\":{\"sid\":\"137-0530487-6192152\",\"ptd\":\"NOTEBOOK_COMPUTER\",\"json\":\"1\",\"dpxAjaxFlag\":\"1\",\"sCac\":\"1\",\"isUDPFlag\":\"1\",\"twisterView\":\"glance\",\"ee\":\"2\",\"pgid\":\"pc_display_on_website\",\"nodeID\":\"541966\",\"tagActionCode\":\"joelfancom-20\",\"rid\":\"WY2K06V7WEMKTC0K2H7W\",\"parentAsin\":\"B06XD3LXXK\",\"enPre\":\"1\",\"dcm\":\"1\",\"asinList\":\"B06XD3LXXK\",\"numericGLProductGroupID\":\"147\",\"storeID\":\"pc\",\"auiAjax\":\"1\"}}\u003C/script>\n\n\n\n\n\n\n\n  \n\n\n\n        \n        \n        \n  \n\n\n\n\n\n\n\n\n    \n\n\n            \n\n\n            \n\n\n\n\n\n\n            \n\n        \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"imageBlockVariations_feature_div\" class=\"feature\" data-feature-name=\"imageBlockVariations\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\n\u003Cscript type=\"text/javascript\">\nP.when('A', 'jQuery', 'ImageBlockATF', 'cf').register('ImageBlockBTF', function(A, $, imageBlockATF, cf){\nvar data = {};\nvar obj = jQuery.parseJSON('{\"dataInJson\":null,\"alwaysIncludeVideo\":true,\"autoplayVideo\":false,\"defaultColor\":\"initial\",\"mainImageSizes\":[[\"355\",\"355\"],[\"450\",\"450\"],[\"425\",\"550\"],[\"466\",\"606\"],[\"522\",\"679\"],[\"569\",\"741\"],[\"679\",\"879\"]],\"maxAlts\":7,\"altsOnLeft\":true,\"productGroupID\":\"pc_display_on_website\",\"lazyLoadExperienceDisabled\":true,\"lazyLoadExperienceOnHoverDisabled\":false,\"useChromelessVideoPlayer\":false,\"colorToAsin\":{},\"refactorEnabled\":true,\"useIV\":true,\"tabletWeb\":false,\"views\":[\"ImageBlockMagnifierView\",\"ImageBlockAltImageView\",\"ImageBlockVideoView\",\"ImageBlockTwisterView\",\"ImageBlockImmersiveViewImages\",\"ImageBlockImmersiveViewVideos\",\"ImageBlockImmersiveView360\",\"ImageBlockTabbedImmersiveView\"],\"enhancedHoverOverlay\":false,\"landingAsinColor\":\"initial\",\"colorImages\":{},\"heroImages\":{},\"enable360Map\":{},\"staticImages\":{\"hoverZoomIcon\":\"https://images-na.ssl-images-amazon.com/images/G/01/img11/apparel/UX/DP/icon_zoom._CB138923886_.png\",\"zoomLensBackground\":\"https://images-na.ssl-images-amazon.com/images/G/01/apparel/rcxgs/tile._CB483369105_.gif\",\"zoomInCur\":\"https://images-na.ssl-images-amazon.com/images/G/01/detail-page/cursors/zoomIn._CB323082799_.cur\",\"arrow\":\"https://images-na.ssl-images-amazon.com/images/G/01/javascripts/lib/popover/images/light/sprite-vertical-popover-arrow._CB186877868_.png\",\"zoomIn\":\"https://images-na.ssl-images-amazon.com/images/G/01/detail-page/cursors/zoom-in._CB184888790_.bmp\",\"zoomOut\":\"https://images-na.ssl-images-amazon.com/images/G/01/detail-page/cursors/zoom-out._CB184888738_.bmp\",\"videoThumbIcon\":\"https://images-na.ssl-images-amazon.com/images/G/01/Quarterdeck/en_US/images/video._CB183716339_SS40_.gif\",\"spinnerNoLabel\":\"https://images-na.ssl-images-amazon.com/images/G/01/ui/loadIndicators/loading-large._CB192238965_.gif\",\"zoomOutCur\":\"https://images-na.ssl-images-amazon.com/images/G/01/detail-page/cursors/zoomOut._CB323082798_.cur\",\"videoSWFPath\":\"https://images-na.ssl-images-amazon.com/images/G/01/Quarterdeck/en_US/video/20110518115040892/Video._CB178668404_.swf\",\"grabbing\":\"https://images-na.ssl-images-amazon.com/images/G/01/HomeCustomProduct/grabbingbox._CB518076765_.cur\",\"icon360\":\"https://images-na.ssl-images-amazon.com/images/G/01/HomeCustomProduct/360_icon_73x73v2._CB510686333_SS40_.png\",\"grab\":\"https://images-na.ssl-images-amazon.com/images/G/01/HomeCustomProduct/grabbox._CB518076765_.cur\",\"spinner\":\"https://images-na.ssl-images-amazon.com/images/G/01/ui/loadIndicators/loading-large_labeled._CB192238949_.gif\"},\"staticStrings\":{\"images\":\"Images\",\"watchMoreVideos\":\"Click to see more videos\",\"allMedia\":\"All Media\",\"dragToSpin\":\"Drag to Spin\",\"videos\":\"Videos\",\"video\":\"video\",\"rollOverToZoom\":\"Roll over image to zoom in\",\"clickToExpand\":\"Click image to open expanded view\",\"playVideo\":\"Click to play video\",\"touchToZoom\":\"Touch the image to zoom in\",\"multipleVideos\":\"VIDEOS\",\"singleVideo\":\"VIDEO\",\"pleaseSelect\":\"Please select\",\"close\":\"Close\",\"clickToZoom\":\"Click on image to zoom in\"},\"useChildVideos\":true,\"useClickZoom\":false,\"useHoverZoom\":true,\"useHoverZoomIpad\":false,\"visualDimensions\":[],\"mainImageHeightPartitions\":null,\"mainImageMaxSizes\":null,\"heroFocalPoint\":null,\"showMagnifierOnHover\":false,\"disableHoverOnAltImages\":false,\"overrideAltImageClickAction\":false,\"naturalMainImageSize\":null,\"imgTagWrapperClasses\":null,\"prioritizeVideos\":false,\"usePeekHover\":false,\"fadeMagnifier\":false,\"repositionHeroImage\":false,\"heroVideoVariant\":null,\"videos\":[],\"title\":\"Acer Flagship CB3-532 15.6&quot; HD Premium Chromebook - Intel Dual-Core Celeron N3060 up to 2.48GH.z, 2GB RAM, 16GB SSD, Wireless AC, HDMI, USB 3.0, Webcam, Chrome OS (Renewed)\",\"airyConfigEnabled\":true,\"airyConfig\":{\"jsUrl\":\"https://images-na.ssl-images-amazon.com/images/G/01/vap/video/airy2/prod/2.0.1460.0/js/airy.skin._CB513066589_.js\",\"cssUrl\":\"https://images-na.ssl-images-amazon.com/images/G/01/vap/video/airy2/prod/2.0.1460.0/css/beacon._CB513066589_.css\",\"swfUrl\":\"https://images-na.ssl-images-amazon.com/images/G/01/vap/video/airy2/prod/2.0.1460.0/flash/AiryBasicRenderer._CB513066589_.swf\",\"foresterMetadataParams\":{\"marketplaceId\":\"ATVPDKIKX0DER\",\"method\":\"Pc.ImageBlock\",\"requestId\":\"WY2K06V7WEMKTC0K2H7W\",\"session\":\"137-0530487-6192152\",\"client\":\"Dpx\"}},\"vseVideoDataSourceTreatment\":\"T1\",\"mediaAsin\":\"B06XD3LXXK\",\"largeSCLVideoThumbnail\":false,\"displayVideoBanner\":false,\"useVSEVideos\":true,\"useTabbedImmersiveView\":true,\"dpRequestId\":\"WY2K06V7WEMKTC0K2H7W\",\"dp60VideoThumbMap\":null}');\ndata[\"alwaysIncludeVideo\"] = obj.alwaysIncludeVideo ? 1 : 0;\ndata[\"autoplayVideo\"] = obj.autoplayVideo ? 1 : 0;\ndata[\"defaultColor\"] = obj.defaultColor;\ndata[\"maxAlts\"] = obj.maxAlts;\ndata[\"altsOnLeft\"] = obj.altsOnLeft;\ndata[\"newVideoMissing\"] = obj.newVideoMissing;\ndata[\"lazyLoadExperienceDisabled\"] = obj.lazyLoadExperienceDisabled;\ndata[\"lazyLoadExperienceOnHoverDisabled\"] = obj.lazyLoadExperienceOnHoverDisabled;\ndata[\"useChromelessVideoPlayer\"] = obj.useChromelessVideoPlayer ? 1 : 0;\ndata[\"colorToAsin\"] = obj.colorToAsin;\ndata[\"ivRepresentativeAsin\"] = obj.ivRepresentativeAsin;\ndata[\"ivImageSetKeys\"] = obj.ivImageSetKeys;\ndata[\"useIV\"] = obj.useIV ? 1 : 0;\ndata[\"tabletWeb\"] = obj.tabletWeb ? 1 : 0;\ndata[\"views\"] = obj.views;\ndata[\"enhancedHoverOverlay\"] = obj.enhancedHoverOverlay;\ndata[\"landingAsinColor\"] = obj.landingAsinColor;\ndata[\"colorImages\"] = obj.colorImages;\ndata[\"heroImage\"] = obj.heroImages;\ndata[\"spin360ColorEnabled\"] = obj.enable360Map;\ndata[\"staticImages\"] = obj.staticImages;\ndata[\"staticStrings\"] = obj.staticStrings;\ndata[\"useChildVideos\"] = obj.useChildVideos ? 1 : 0;\ndata[\"useClickZoom\"] = obj.useClickZoom ? 1 : 0;\ndata[\"useHoverZoom\"] = obj.useHoverZoom ? 1 : 0;\ndata[\"useHoverZoomIpad\"] = obj.useHoverZoomIpad ? 1 : 0;\ndata[\"visualDimensions\"] = obj.visualDimensions;\ndata[\"isLargeSCLVideoThumbnail\"] = obj.largeSCLVideoThumbnail;\ndata[\"mainImageSizes\"] = obj.mainImageSizes;\ndata[\"displayVideoBanner\"] = obj.displayVideoBanner;\ndata[\"mainImageHeightPartitions\"] = obj.mainImageHeightPartitions;\ndata[\"mainImageMaxSizes\"] = obj.mainImageMaxSizes;\ndata[\"heroFocalPoint\"] = obj.heroFocalPoint;\ndata[\"showMagnifierOnHover\"] = obj.showMagnifierOnHover ? 1 : 0;\ndata[\"disableHoverOnAltImages\"] = obj.disableHoverOnAltImages ? 1 : 0;\ndata[\"overrideAltImageClickAction\"] = obj.overrideAltImageClickAction ? 1 : 0;\ndata[\"naturalMainImageSize\"] = obj.naturalMainImageSize;\ndata[\"imgTagWrapperClasses\"] = obj.imgTagWrapperClasses;\ndata[\"prioritizeVideos\"] = obj.prioritizeVideos;\ndata[\"usePeekHover\"] = obj.usePeekHover;\ndata[\"fadeMagnifier\"] = obj.fadeMagnifier;\ndata[\"repositionHeroImage\"] = obj.repositionHeroImage;\ndata[\"heroVideoVariant\"] = obj.heroVideoVariant;\ndata[\"videos\"] = obj.videos;\ndata[\"productGroupID\"] = obj.productGroupID;\ndata[\"title\"] = obj.title;\ndata[\"airyConfigEnabled\"] = obj.airyConfigEnabled;\nif (obj.airyConfigEnabled) {\n  data[\"airyConfig\"] = obj.airyConfig;\n}\ndata[\"isDPXFeatureEnabled\"] = true;\ndata[\"useTabbedImmersiveView\"] = obj.useTabbedImmersiveView;\ndata[\"vseVideoDataSourceTreatment\"] = obj.vseVideoDataSourceTreatment;\ndata[\"useVSEVideos\"] = obj.useVSEVideos;\ndata[\"dpRequestId\"] = obj.dpRequestId;\ndata[\"mediaAsin\"] = obj.mediaAsin;\ndata[\"dp60VideoThumbMap\"] = obj.dp60VideoThumbMap;\n\nreturn data;\n});\n\u003C/script>\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n\n\n\n\n\n  \n\n\n\n        \n        \n        \n  \n\n\n\n\n\n\n\n\n    \n\n\n            \n\n\n            \n\n\n\n\n\n\n            \n\n        \n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"ajaxBlockComponents_feature_div\" class=\"feature\" data-feature-name=\"ajaxBlockComponents\">\n         \n     \n\n\n\n\n    \n\n    \n    \n    \n        \n            \n                \n\t                \n\t                \n\t                \t\n\n\n\n\u003Cscript type=\"text/javascript\">\n\nP.when('A','jQuery').execute('triggerVideoAjax', function(A){\nvar obj = jQuery.parseJSON('{\"dataInJson\":null,\"colorImages\":{},\"videos\":[],\"lazyLoadExperienceDisabled\":true,\"lazyLoadExperienceOnHoverDisabled\":false,\"refactorEnabled\":false,\"mainImageSizes\":[[\"355\",\"355\"],[\"450\",\"450\"],[\"425\",\"550\"],[\"466\",\"606\"],[\"522\",\"679\"],[\"569\",\"741\"],[\"679\",\"879\"]]}');\nA.trigger('triggerVideoAjax',obj.videos);\n});\n\n\n\n\u003C/script>\n\n\t                \n                \n            \n        \n        \n        \n        \n        \n        \n        \n    \n    \n    \n\n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n    \u003C/div>\n\n    \n\n\n  \n\n\n  \n  \n\n\n\n\n\n\n\n\n\u003Cdiv id=\"dp-ads-middle-3psl\">\n\n\n\n\n\n\n\n\u003C/div>\n\n\n\n\n\u003C!--rbd-->\n\n\u003Cdiv class=\"celwidget pd_rd_w-ix7WL pf_rd_p-d66372fe-68a6-48a3-90ec-41d7f64212be pf_rd_r-WY2K06V7WEMKTC0K2H7W pd_rd_r-8177ea1a-d805-4c97-b06f-60ae0bbe12e0 pd_rd_wg-30NaA\" cel_widget_id=\"desktop-dp-sims_session-similarities\">\n\n\n\n\n\n\n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n        \u003Cdiv id=\"p13n-m-desktop-dp-sims_session-similarities-sims-feature-4\" class=\"celwidget\" cel_widget_id=\"desktop-dp-sims_session-similarities-sims-feature-4\">\n    \n            \u003Cdiv data-similarity-type=\"desktop-dp-sims_session-similarities\" class=\"a-section similarities-widget sims-carousel-holder\">\n                \u003Chr class=\"a-divider-normal sims-carousel-heading bucketDivider\">\n                \u003Cdiv id=\"desktop-dp-sims_session-similarities-sims-feature\" class=\"a-section a-spacing-large bucket\">\n                    \n        \u003Cdiv data-a-carousel-options=\"{&quot;ajax&quot;:{&quot;params&quot;:{&quot;asinMetadataKeys&quot;:&quot;adId&quot;,&quot;widgetTemplateClass&quot;:&quot;PI::Similarities::ViewTemplates::Carousel::Desktop&quot;,&quot;linkGetParameters&quot;:&quot;{\\&quot;pd_rd_wg\\&quot;:\\&quot;30NaA\\&quot;,\\&quot;pd_rd_r\\&quot;:\\&quot;8177ea1a-d805-4c97-b06f-60ae0bbe12e0\\&quot;,\\&quot;pf_rd_r\\&quot;:\\&quot;WY2K06V7WEMKTC0K2H7W\\&quot;,\\&quot;pf_rd_p\\&quot;:\\&quot;d66372fe-68a6-48a3-90ec-41d7f64212be\\&quot;,\\&quot;pd_rd_w\\&quot;:\\&quot;ix7WL\\&quot;}&quot;,&quot;productDetailsTemplateClass&quot;:&quot;PI::P13N::ViewTemplates::ProductDetails::Desktop::Base&quot;,&quot;forceFreshWin&quot;:0,&quot;featureId&quot;:&quot;SimilaritiesCarousel&quot;,&quot;reftagPrefix&quot;:&quot;pd_sbs_147&quot;,&quot;imageHeight&quot;:160,&quot;faceoutTemplateClass&quot;:&quot;PI::P13N::ViewTemplates::Product::Desktop::CarouselFaceout&quot;,&quot;imageWidth&quot;:160,&quot;auiDeviceType&quot;:&quot;desktop&quot;,&quot;schemaVersion&quot;:2,&quot;relatedRequestID&quot;:&quot;WY2K06V7WEMKTC0K2H7W&quot;,&quot;productDataFlavor&quot;:&quot;Faceout&quot;,&quot;maxLineCount&quot;:6,&quot;faceoutArgs&quot;:&quot;{\\&quot;productDetailsTemplateClass\\&quot;:\\&quot;PI::P13N::ViewTemplates::ProductDetails::Desktop::Base\\&quot;}&quot;},&quot;id_list&quot;:[&quot;B07K5H16HX:&quot;,&quot;B077YS9TYW:&quot;,&quot;B00M9K7L8S:&quot;,&quot;B0778F81ZG:&quot;,&quot;B0742HZW9B:&quot;,&quot;B07FDM6G66:&quot;,&quot;B07G3R2HR9:&quot;,&quot;B0759YSF4W:&quot;,&quot;B00L87JC80:&quot;,&quot;B07RHMBGCF:&quot;,&quot;B01E9GBRU2:&quot;,&quot;B077TLC1KQ:&quot;,&quot;B07L49MY9H:&quot;,&quot;B07VTB2BF2:&quot;,&quot;B01MSBZIU9:&quot;,&quot;B07N4CX2NK:&quot;,&quot;B07781S5L5:&quot;,&quot;B07S8CGX9X:&quot;,&quot;B06WWKYM1X:&quot;,&quot;B01MTKXQCZ:&quot;,&quot;B07BDFZMJ4:&quot;,&quot;B07KF1TC9T:&quot;,&quot;B01M1AQ316:&quot;,&quot;B07FDFFSMJ:&quot;,&quot;B07PSGC87H:&quot;,&quot;B07PZZ5GXV:&quot;,&quot;B074BWFPHX:&quot;,&quot;B07L6RCLM5:&quot;,&quot;B01NCDZ54V:&quot;,&quot;B07MGT236W:&quot;,&quot;B07BNX8N72:&quot;,&quot;B07QBVW6WR:&quot;,&quot;B01APA6K6M:&quot;,&quot;B07SW1KZ8J:&quot;,&quot;B07RF1XD36:&quot;,&quot;B06Y5FGSKT:&quot;,&quot;B07F2TKPFN:&quot;,&quot;B07JLVDP1Y:&quot;,&quot;B07K2JVLNQ:&quot;,&quot;B00W4AMWCI:&quot;],&quot;url&quot;:&quot;/gp/p13n-shared/faceout-partial&quot;,&quot;id_param_name&quot;:&quot;asins&quot;},&quot;baseAsin&quot;:&quot;B06XD3LXXK&quot;,&quot;name&quot;:&quot;desktop-dp-sims_session-similarities&quot;,&quot;set_size&quot;:40}\" data-p13n-feature-metadata=\"{&quot;baseAsin&quot;:&quot;B06XD3LXXK&quot;,&quot;pd_rd_wg&quot;:&quot;30NaA&quot;,&quot;pd_rd_r&quot;:&quot;8177ea1a-d805-4c97-b06f-60ae0bbe12e0&quot;,&quot;pf_rd_r&quot;:&quot;WY2K06V7WEMKTC0K2H7W&quot;,&quot;pf_rd_p&quot;:&quot;d66372fe-68a6-48a3-90ec-41d7f64212be&quot;,&quot;pd_rd_w&quot;:&quot;ix7WL&quot;}\" data-p13n-feature-name=\"pd_sbs_147\" data-p13n-global=\"{&quot;auiDeviceType&quot;:&quot;desktop&quot;,&quot;marketplaceId&quot;:&quot;ATVPDKIKX0DER&quot;,&quot;requestId&quot;:&quot;WY2K06V7WEMKTC0K2H7W&quot;,&quot;marketplace&quot;:&quot;US&quot;,&quot;customerId&quot;:0,&quot;session&quot;:&quot;137-0530487-6192152&quot;}\" data-a-display-strategy=\"swap\" data-a-transition-strategy=\"swap\" data-a-class=\"desktop\" class=\"a-begin a-carousel-container a-carousel-display-swap a-carousel-transition-swap similarities-aui-carousel p13n-sc-carousel\">\u003Cinput autocomplete=\"on\" type=\"hidden\" class=\"a-carousel-firstvisibleitem\">\n            \u003Cdiv class=\"a-row a-carousel-header-row a-size-large\">\u003Cdiv class=\"a-column a-span8\">\u003Ch2 class=\"a-carousel-heading\">Customers who viewed this item also viewed\u003C/h2>\u003C/div>\u003Cdiv class=\"a-column a-span4 a-span-last a-text-right\">\u003Cspan class=\"a-carousel-pagination a-size-base\">\u003Cspan class=\"a-carousel-page-count\">Page \u003Cspan class=\"a-carousel-page-current\">1\u003C/span> of \u003Cspan class=\"a-carousel-page-max\">1\u003C/span>  \u003C/span>\u003Cspan class=\"a-carousel-restart-container\">\u003Cspan class=\"a-text-separator\">\u003C/span>\u003Ca class=\"a-carousel-restart\" href=\"#\">Start over\u003C/a>\u003C/span>\u003Cspan class=\"a-carousel-accessibility-page-info a-offscreen\" aria-live=\"polite\">Page 1 of 1  \u003C/span>\u003C/span>\u003C/div>\u003C/div>\n            \u003Cspan class=\"aok-offscreen p13n-sc-offscreen\">This shopping feature will continue to load items. In order to navigate out of this carousel please use your heading shortcut key to navigate to the next or previous heading.\u003C/span>\n            \n            \u003Cdiv class=\"a-row a-carousel-controls a-carousel-row a-carousel-has-buttons\">\u003Cdiv class=\"a-carousel-row-inner\">\u003Cdiv class=\"a-carousel-col a-carousel-left\">\u003Ca class=\"a-button a-button-image a-carousel-button a-carousel-goto-prevpage\" tabindex=\"0\" href=\"#\" id=\"a-autoid-33\">\u003Cspan class=\"a-button-inner\">\u003Ci class=\"a-icon a-icon-previous\">\u003Cspan class=\"a-icon-alt\">Back\u003C/span>\u003C/i>\u003C/span>\u003C/a>\u003C/div>\u003Cdiv class=\"a-carousel-col a-carousel-center\">\u003Cdiv class=\"a-carousel-viewport\" style=\"height: 281px;\">\u003Col class=\"a-carousel\" role=\"list\">\n                \u003Cli class=\"a-carousel-card aok-float-left\" role=\"listitem\">\n        \u003Cdiv data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;pd_sbs_147_1&quot;,&quot;asin&quot;:&quot;B07K5H16HX&quot;}\" class=\"a-section a-spacing-none p13n-asin\">\n            \u003Ca class=\"a-link-normal\" href=\"/Acer-Chromebook-Dual-Core-12-Hours-Certified/dp/B07K5H16HX/ref=pd_sbs_147_1/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B07K5H16HX&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cdiv class=\"a-section a-spacing-mini\">\u003Cimg alt=\"2018 Newest Acer CB3-532 15.6&quot; HD Chromebook with 3x Faster WiFi, Intel Dual-Core Celeron N3060 upto 2.48GHz, 2GB RAM, 16GB SSD,HDMI,USB 3.0, Webcam, 12-Hrs Battery, Chrome OS (Renewed)\" src=\"https://images-na.ssl-images-amazon.com/images/I/71BJqmWtKSL._AC_UL160_SR160,160_.jpg\" class=\"a-dynamic-image p13n-sc-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/71BJqmWtKSL._AC_UL480_SR480,480_.jpg&quot;:[480,480],&quot;https://images-na.ssl-images-amazon.com/images/I/71BJqmWtKSL._AC_UL160_SR160,160_.jpg&quot;:[160,160],&quot;https://images-na.ssl-images-amazon.com/images/I/71BJqmWtKSL._AC_UL320_SR320,320_.jpg&quot;:[320,320]}\">\u003C/div>\n        \u003Cdiv class=\"p13n-sc-truncated\" aria-hidden=\"true\" data-rows=\"4\" title=\"2018 Newest Acer CB3-532 15.6&quot; HD Chromebook with 3x Faster WiFi, Intel Dual-Core Celeron N3060 upto 2.48GHz, 2GB RAM, 16GB SSD,HDMI,USB 3.0, Webcam, 12-Hrs Battery, Chrome OS (Renewed)\">2018 Newest Acer CB3-532 15.6\" HD Chromebook with 3x Faster WiFi, Intel Dual-Core Celeron…\u003C/div>\n    \u003C/a>\n            \n        \u003Cdiv class=\"a-icon-row a-spacing-none\">\n            \u003Ca class=\"a-link-normal\" title=\"4.1 out of 5 stars\" href=\"/product-reviews/B07K5H16HX/ref=pd_sbs_147_cr_1/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B07K5H16HX&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n                \u003Ci class=\"a-icon a-icon-star a-star-4\">\u003Cspan class=\"a-icon-alt\">4.1 out of 5 stars\u003C/span>\u003C/i>\n            \u003C/a>\n            \u003Ca class=\"a-size-small a-link-normal\" href=\"/product-reviews/B07K5H16HX/ref=pd_sbs_147_cr_1/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B07K5H16HX&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">115\u003C/a>\n        \u003C/div>\n    \u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal a-text-normal\" href=\"/Acer-Chromebook-Dual-Core-12-Hours-Certified/dp/B07K5H16HX/ref=pd_sbs_147_1/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B07K5H16HX&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cspan class=\"a-size-base a-color-price\">\u003Cspan class=\"p13n-sc-price\">$139.99\u003C/span>\u003C/span>\u003C/a>   \u003C/div>\n        \u003C/div>\n    \u003C/li>\u003Cli class=\"a-carousel-card aok-float-left\" role=\"listitem\">\n        \u003Cdiv data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;pd_sbs_147_2&quot;,&quot;asin&quot;:&quot;B077YS9TYW&quot;}\" class=\"a-section a-spacing-none p13n-asin\">\n            \u003Ca class=\"a-link-normal\" href=\"/Acer-CB3-532-Chromebook-Dual-Core-12-Hours/dp/B077YS9TYW/ref=pd_sbs_147_2/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B077YS9TYW&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cdiv class=\"a-section a-spacing-mini\">\u003Cimg alt=\"2018 Newest Acer CB3-532 15.6&quot; HD Chromebook with 3x Faster WiFi, Intel Dual-Core Celeron N3060 up to 2.48GHz, 2GB RAM, 16GB SSD, HDMI, USB 3.0, Webcam, 12-Hours Battery, Chrome OS\" src=\"https://images-na.ssl-images-amazon.com/images/I/813KEBB4D0L._AC_UL160_SR160,160_.jpg\" class=\"a-dynamic-image p13n-sc-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/813KEBB4D0L._AC_UL480_SR480,480_.jpg&quot;:[480,480],&quot;https://images-na.ssl-images-amazon.com/images/I/813KEBB4D0L._AC_UL160_SR160,160_.jpg&quot;:[160,160],&quot;https://images-na.ssl-images-amazon.com/images/I/813KEBB4D0L._AC_UL320_SR320,320_.jpg&quot;:[320,320]}\">\u003C/div>\n        \u003Cdiv class=\"p13n-sc-truncated\" aria-hidden=\"true\" data-rows=\"4\" title=\"2018 Newest Acer CB3-532 15.6&quot; HD Chromebook with 3x Faster WiFi, Intel Dual-Core Celeron N3060 up to 2.48GHz, 2GB RAM, 16GB SSD, HDMI, USB 3.0, Webcam, 12-Hours Battery, Chrome OS\">2018 Newest Acer CB3-532 15.6\" HD Chromebook with 3x Faster WiFi, Intel Dual-Core Celeron…\u003C/div>\n    \u003C/a>\n            \n        \u003Cdiv class=\"a-icon-row a-spacing-none\">\n            \u003Ca class=\"a-link-normal\" title=\"4.1 out of 5 stars\" href=\"/product-reviews/B077YS9TYW/ref=pd_sbs_147_cr_2/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B077YS9TYW&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n                \u003Ci class=\"a-icon a-icon-star a-star-4\">\u003Cspan class=\"a-icon-alt\">4.1 out of 5 stars\u003C/span>\u003C/i>\n            \u003C/a>\n            \u003Ca class=\"a-size-small a-link-normal\" href=\"/product-reviews/B077YS9TYW/ref=pd_sbs_147_cr_2/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B077YS9TYW&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">185\u003C/a>\n        \u003C/div>\n    \u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal a-text-normal\" href=\"/Acer-CB3-532-Chromebook-Dual-Core-12-Hours/dp/B077YS9TYW/ref=pd_sbs_147_2/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B077YS9TYW&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cspan class=\"a-size-base a-color-price\">\u003Cspan class=\"p13n-sc-price\">$172.15\u003C/span>\u003C/span>\u003C/a>   \u003C/div>\n        \u003C/div>\n    \u003C/li>\u003Cli class=\"a-carousel-card aok-float-left\" role=\"listitem\">\n        \u003Cdiv data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;pd_sbs_147_3&quot;,&quot;asin&quot;:&quot;B00M9K7L8S&quot;}\" class=\"a-section a-spacing-none p13n-asin\">\n            \u003Ca class=\"a-link-normal\" href=\"/Samsung-Chromebook-Wi-Fi-11-6-Inch-Refurbished/dp/B00M9K7L8S/ref=pd_sbs_147_3/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B00M9K7L8S&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cdiv class=\"a-section a-spacing-mini\">\u003Cimg alt=\"Samsung Chromebook (Wi-Fi, 11.6-Inch) - Silver (Renewed)\" src=\"https://images-na.ssl-images-amazon.com/images/I/81GZbsQ0TkL._AC_UL160_SR160,160_.jpg\" class=\"a-dynamic-image p13n-sc-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/81GZbsQ0TkL._AC_UL320_SR320,320_.jpg&quot;:[320,320],&quot;https://images-na.ssl-images-amazon.com/images/I/81GZbsQ0TkL._AC_UL480_SR480,480_.jpg&quot;:[480,480],&quot;https://images-na.ssl-images-amazon.com/images/I/81GZbsQ0TkL._AC_UL160_SR160,160_.jpg&quot;:[160,160]}\">\u003C/div>\n        \u003Cdiv class=\"p13n-sc-truncated\" aria-hidden=\"true\" data-rows=\"4\">Samsung Chromebook (Wi-Fi, 11.6-Inch) - Silver (Renewed)\u003C/div>\n    \u003C/a>\n            \n        \u003Cdiv class=\"a-icon-row a-spacing-none\">\n            \u003Ca class=\"a-link-normal\" title=\"3.1 out of 5 stars\" href=\"/product-reviews/B00M9K7L8S/ref=pd_sbs_147_cr_3/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B00M9K7L8S&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n                \u003Ci class=\"a-icon a-icon-star a-star-3\">\u003Cspan class=\"a-icon-alt\">3.1 out of 5 stars\u003C/span>\u003C/i>\n            \u003C/a>\n            \u003Ca class=\"a-size-small a-link-normal\" href=\"/product-reviews/B00M9K7L8S/ref=pd_sbs_147_cr_3/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B00M9K7L8S&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">947\u003C/a>\n        \u003C/div>\n    \u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal a-text-normal\" href=\"/Samsung-Chromebook-Wi-Fi-11-6-Inch-Refurbished/dp/B00M9K7L8S/ref=pd_sbs_147_3/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B00M9K7L8S&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cspan class=\"a-size-base a-color-price\">\u003Cspan class=\"p13n-sc-price\">$94.13\u003C/span>\u003C/span>\u003C/a>   \u003C/div>\n        \u003C/div>\n    \u003C/li>\u003Cli class=\"a-carousel-card aok-float-left\" role=\"listitem\">\n        \u003Cdiv data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;pd_sbs_147_4&quot;,&quot;asin&quot;:&quot;B0778F81ZG&quot;}\" class=\"a-section a-spacing-none p13n-asin\">\n            \u003Ca class=\"a-link-normal\" href=\"/Samsung-Electronics-XE500C13-Chromebook-Laptop/dp/B0778F81ZG/ref=pd_sbs_147_4/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B0778F81ZG&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cdiv class=\"a-section a-spacing-mini\">\u003Cimg alt=\"Samsung Electronics XE500C13 Chromebook 3 2GB RAM 16GB SSD Laptop, 11.6&quot;\" src=\"https://images-na.ssl-images-amazon.com/images/I/71OQVVl%2BMOL._AC_UL160_SR160,160_.jpg\" class=\"a-dynamic-image p13n-sc-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/71OQVVl%2BMOL._AC_UL480_SR480,480_.jpg&quot;:[480,480],&quot;https://images-na.ssl-images-amazon.com/images/I/71OQVVl%2BMOL._AC_UL160_SR160,160_.jpg&quot;:[160,160],&quot;https://images-na.ssl-images-amazon.com/images/I/71OQVVl%2BMOL._AC_UL320_SR320,320_.jpg&quot;:[320,320]}\">\u003C/div>\n        \u003Cdiv class=\"p13n-sc-truncated\" aria-hidden=\"true\" data-rows=\"4\">Samsung Electronics XE500C13 Chromebook 3 2GB RAM 16GB SSD Laptop, 11.6\"\u003C/div>\n    \u003C/a>\n            \n        \u003Cdiv class=\"a-icon-row a-spacing-none\">\n            \u003Ca class=\"a-link-normal\" title=\"4.1 out of 5 stars\" href=\"/product-reviews/B0778F81ZG/ref=pd_sbs_147_cr_4/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B0778F81ZG&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n                \u003Ci class=\"a-icon a-icon-star a-star-4\">\u003Cspan class=\"a-icon-alt\">4.1 out of 5 stars\u003C/span>\u003C/i>\n            \u003C/a>\n            \u003Ca class=\"a-size-small a-link-normal\" href=\"/product-reviews/B0778F81ZG/ref=pd_sbs_147_cr_4/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B0778F81ZG&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">262\u003C/a>\n        \u003C/div>\n    \u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal a-text-normal\" href=\"/Samsung-Electronics-XE500C13-Chromebook-Laptop/dp/B0778F81ZG/ref=pd_sbs_147_4/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B0778F81ZG&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cspan class=\"a-size-base a-color-price\">\u003Cspan class=\"p13n-sc-price\">$139.00\u003C/span>\u003C/span>\u003C/a>   \u003C/div>\n        \u003C/div>\n    \u003C/li>\u003Cli class=\"a-carousel-card aok-float-left\" role=\"listitem\">\n        \u003Cdiv data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;pd_sbs_147_5&quot;,&quot;asin&quot;:&quot;B0742HZW9B&quot;}\" class=\"a-section a-spacing-none p13n-asin\">\n            \u003Ca class=\"a-link-normal\" href=\"/Dell-ChromeBook-Celeron-1366x768-Renewed/dp/B0742HZW9B/ref=pd_sbs_147_5/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B0742HZW9B&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cdiv class=\"a-section a-spacing-mini\">\u003Cimg alt=\"Dell ChromeBook 11 -Intel Celeron 2955U, 4GB Ram, 16GB SSD, WebCam, HDMI, (11.6 HD Screen 1366x768) (Renewed)\" src=\"https://images-na.ssl-images-amazon.com/images/I/61mdECoYszL._AC_UL160_SR160,160_.jpg\" class=\"a-dynamic-image p13n-sc-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/61mdECoYszL._AC_UL480_SR480,480_.jpg&quot;:[480,480],&quot;https://images-na.ssl-images-amazon.com/images/I/61mdECoYszL._AC_UL320_SR320,320_.jpg&quot;:[320,320],&quot;https://images-na.ssl-images-amazon.com/images/I/61mdECoYszL._AC_UL160_SR160,160_.jpg&quot;:[160,160]}\">\u003C/div>\n        \u003Cdiv class=\"p13n-sc-truncated\" aria-hidden=\"true\" data-rows=\"4\" title=\"Dell ChromeBook 11 -Intel Celeron 2955U, 4GB Ram, 16GB SSD, WebCam, HDMI, (11.6 HD Screen 1366x768) (Renewed)\">Dell ChromeBook 11 -Intel Celeron 2955U, 4GB Ram, 16GB SSD, WebCam, HDMI, (11.6 HD Screen…\u003C/div>\n    \u003C/a>\n            \n        \u003Cdiv class=\"a-icon-row a-spacing-none\">\n            \u003Ca class=\"a-link-normal\" title=\"3.5 out of 5 stars\" href=\"/product-reviews/B0742HZW9B/ref=pd_sbs_147_cr_5/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B0742HZW9B&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n                \u003Ci class=\"a-icon a-icon-star a-star-3-5\">\u003Cspan class=\"a-icon-alt\">3.5 out of 5 stars\u003C/span>\u003C/i>\n            \u003C/a>\n            \u003Ca class=\"a-size-small a-link-normal\" href=\"/product-reviews/B0742HZW9B/ref=pd_sbs_147_cr_5/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B0742HZW9B&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">287\u003C/a>\n        \u003C/div>\n    \u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal a-text-normal\" href=\"/Dell-ChromeBook-Celeron-1366x768-Renewed/dp/B0742HZW9B/ref=pd_sbs_147_5/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B0742HZW9B&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cspan class=\"a-size-base a-color-price\">\u003Cspan class=\"p13n-sc-price\">$94.82\u003C/span>\u003C/span>\u003C/a>   \u003C/div>\n        \u003C/div>\n    \u003C/li>\u003Cli class=\"a-carousel-card aok-float-left\" role=\"listitem\">\n        \u003Cdiv data-p13n-asin-metadata=\"{&quot;ref&quot;:&quot;pd_sbs_147_6&quot;,&quot;asin&quot;:&quot;B07FDM6G66&quot;}\" class=\"a-section a-spacing-none p13n-asin\">\n            \u003Ca class=\"a-link-normal\" href=\"/Acer-15-6-inch-Chromebook-Intel-Dual-Core-Refurbished/dp/B07FDM6G66/ref=pd_sbs_147_6/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B07FDM6G66&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cdiv class=\"a-section a-spacing-mini\">\u003Cimg alt=\"2018 Newest Acer Aspire 15.6-inch HD Business Chromebook-Intel Dual-Core Celeron Processor, 4GB LPDDR3, 16GB eMMC Storage, Intel HD Graphics, HDMI, Chrome OS-Gray Color (Renewed)\" src=\"https://images-na.ssl-images-amazon.com/images/I/51iaLlEFk0L._AC_UL160_SR160,160_.jpg\" class=\"a-dynamic-image p13n-sc-dynamic-image\" height=\"160\" width=\"160\" data-a-dynamic-image=\"{&quot;https://images-na.ssl-images-amazon.com/images/I/51iaLlEFk0L._AC_UL480_SR480,480_.jpg&quot;:[480,480],&quot;https://images-na.ssl-images-amazon.com/images/I/51iaLlEFk0L._AC_UL320_SR320,320_.jpg&quot;:[320,320],&quot;https://images-na.ssl-images-amazon.com/images/I/51iaLlEFk0L._AC_UL160_SR160,160_.jpg&quot;:[160,160]}\">\u003C/div>\n        \u003Cdiv class=\"p13n-sc-truncated\" aria-hidden=\"true\" data-rows=\"4\" title=\"2018 Newest Acer Aspire 15.6-inch HD Business Chromebook-Intel Dual-Core Celeron Processor, 4GB LPDDR3, 16GB eMMC Storage, Intel HD Graphics, HDMI, Chrome OS-Gray Color (Renewed)\">2018 Newest Acer Aspire 15.6-inch HD Business Chromebook-Intel Dual-Core Celeron Processor,…\u003C/div>\n    \u003C/a>\n            \n        \u003Cdiv class=\"a-icon-row a-spacing-none\">\n            \u003Ca class=\"a-link-normal\" title=\"4.1 out of 5 stars\" href=\"/product-reviews/B07FDM6G66/ref=pd_sbs_147_cr_6/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B07FDM6G66&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\n                \u003Ci class=\"a-icon a-icon-star a-star-4\">\u003Cspan class=\"a-icon-alt\">4.1 out of 5 stars\u003C/span>\u003C/i>\n            \u003C/a>\n            \u003Ca class=\"a-size-small a-link-normal\" href=\"/product-reviews/B07FDM6G66/ref=pd_sbs_147_cr_6/137-0530487-6192152?ie=UTF8&amp;pd_rd_i=B07FDM6G66&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;refRID=WY2K06V7WEMKTC0K2H7W\">115\u003C/a>\n        \u003C/div>\n    \u003Cdiv class=\"a-row\">\u003Ca class=\"a-link-normal a-text-normal\" href=\"/Acer-15-6-inch-Chromebook-Intel-Dual-Core-Refurbished/dp/B07FDM6G66/ref=pd_sbs_147_6/137-0530487-6192152?_encoding=UTF8&amp;pd_rd_i=B07FDM6G66&amp;pd_rd_r=8177ea1a-d805-4c97-b06f-60ae0bbe12e0&amp;pd_rd_w=ix7WL&amp;pd_rd_wg=30NaA&amp;pf_rd_p=d66372fe-68a6-48a3-90ec-41d7f64212be&amp;pf_rd_r=WY2K06V7WEMKTC0K2H7W&amp;psc=1&amp;refRID=WY2K06V7WEMKTC0K2H7W\">\u003Cspan class=\"a-size-base a-color-price\">\u003Cspan class=\"p13n-sc-price\">$174.99\u003C/span>\u003C/span>\u003C/a>   \u003C/div>\n        \u003C/div>\n    \u003C/li>\n            \u003C/ol>\u003C/div>\u003C/div>\u003Cdiv class=\"a-carousel-col a-carousel-right\">\u003Ca class=\"a-button a-button-image a-carousel-button a-carousel-goto-nextpage\" tabindex=\"0\" href=\"#\" id=\"a-autoid-34\">\u003Cspan class=\"a-button-inner\">\u003Ci class=\"a-icon a-icon-next\">\u003Cspan class=\"a-icon-alt\">Next\u003C/span>\u003C/i>\u003C/span>\u003C/a>\u003C/div>\u003C/div>\u003C/div>\n            \n        \u003Cspan class=\"a-end aok-hidden\">\u003C/span>\u003C/div>\n    \n                \u003C/div>\n                \n                \n                \n            \u003C/div>\n        \n        \u003C/div>\n    \n    \n\n\n\n\n\n\n\n\u003C/div>\n\n\n\n  \n  \n  \n  \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cscript>if (typeof uet === 'function' && typeof ues === 'function') {var scope = 'Detail_ad-endcap-1_Glance';var placementId = '6e8849f7-64c3-45e5-a732-d4ef8c06246b';ues('wb', 'adplacements:' + scope.replace(/\\_/g, ':'), {wb:1}); uet('bb', 'adplacements:' + scope.replace(/\\_/g, ':'), {wb:1}); if (placementId) {ues('wb', 'adplacements:' + placementId, {wb:1});uet('bb', 'adplacements:' + placementId, {wb:1});}}\u003C/script>\u003Cdiv id=\"ape_Detail_ad-endcap-1_Glance_placement\" class=\"copilot-secure-display celwidget  text/x-dacx-safeframe\" cel_widget_id=\"adplacements:Detail:ad-endcap-1:Glance\" data-campaign=\"6621\" style=\"display: none; margin: auto; line-height: 0; width: 728px;\" data-ad-details=\"{&quot;slot&quot; :&quot;Detail_ad-endcap-1_Glance&quot;,&quot;slotName&quot; :&quot;ad-endcap-1&quot;,&quot;src&quot; : &quot;https://aax-us-east.amazon-adsystem.com/e/xsp/getAd?src=500&amp;slot=ad-endcap-1&amp;rid=0101674ec7c6792b7a2743885b416573c98637be0ddea85c80d8bce98ed4a2c70741&quot;,&quot;adServer&quot; :&quot;cs&quot;,&quot;campaignId&quot; :  &quot;6621&quot;,&quot;arid&quot; :&quot;ce5724de2717406bac423abbaf1a3976&quot;,&quot;placementId&quot;: &quot;6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;size&quot; :{&quot;width&quot;: &quot;100%&quot;,&quot;height&quot; : &quot;90px&quot;},&quot;allowedSizes&quot; :[{&quot;width&quot;:&quot;728px&quot;,&quot;height&quot;:&quot;90px&quot;}],&quot;allowedDomains&quot; :  [&quot;g-ecx.images-amazon.com&quot;],&quot;aanParams&quot; :   &quot;site%3Damazon.us%3Bpt%3DDetail%3Bslot%3Dad-endcap-1%3Bpid%3DB06XD3LXXK%3Bbn%3D565108%3Barid%3Dce5724de2717406bac423abbaf1a3976&quot;,&quot;loadAfter&quot; :   &quot;criticalFeature&quot;,&quot;extraDelay&quot; :  0,&quot;iframeExtraStyle&quot;: &quot;min-width: 728px;&quot;,&quot;iframeClass&quot;:  &quot;&quot;,&quot;adPixels&quot;: [],&quot;adPixelDelay&quot;: &quot;0&quot;,&quot;aaxInstrPixelUrl&quot;: &quot;&quot;,&quot;serverSideFetchAd&quot;: &quot;false&quot;,&quot;enableAdBlockerDetector&quot;: false,&quot;disableResizeFunc&quot;: true,&quot;fallbackStaticAdImgUrl&quot;: &quot;&quot;,&quot;fallbackStaticAdClickUrl&quot;: &quot;&quot;,&quot;fallbackStaticAdExtraStyle&quot;: &quot;&quot;,&quot;adFeedbackInfo&quot;: {&quot;endPoint&quot;: &quot;/gp/aq-feedback/lazyLoad/handler/af-link-handler.html&quot;,&quot;boolFeedback&quot;: true,&quot;slugText&quot;: &quot;Advertisement&quot;},&quot;adPlacementMetaData&quot;: {&quot;pageUrl&quot;: &quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwNlhEM0xYWEs/ZHBSZXF1ZXN0SWQ9V1kySzA2VjdXRU1LVEMwSzJIN1cmV0RHPXBjX2Rpc3BsYXlfb25fd2Vic2l0ZSYqZW50cmllcyo9MCYqVmVyc2lvbio9MSY=&quot;,&quot;adElementId&quot;: &quot;ape_Detail_ad-endcap-1_Glance_placement&quot;,&quot;pageType&quot;: &quot;Detail&quot;,&quot;slotName&quot;: &quot;ad-endcap-1&quot;},&quot;adCreativeMetaData&quot;: {&quot;adNetwork&quot;: &quot;cs&quot;},&quot;advertisementStyle&quot;: {&quot;position&quot;: &quot;absolute&quot;,&quot;top&quot;: &quot;2px&quot;,&quot;right&quot;: &quot;0px&quot;,&quot;display&quot;: &quot;inline-block&quot;,&quot;font&quot;: &quot;normal 11px Arial&quot;,&quot;color&quot;: &quot;grey&quot;},&quot;feedbackDivStyle&quot;: { &quot;position&quot;: &quot;relative&quot;, &quot;height&quot;: &quot;18px&quot;},&quot;viewabilityStandards&quot;: [{&quot;p&quot;: 0, &quot;t&quot;: 0, &quot;def&quot;: &quot;amzn&quot;}, {&quot;p&quot;: 50, &quot;t&quot;: 1, &quot;def&quot;: &quot;iab&quot;}, {&quot;p&quot;: 100, &quot;t&quot;: 1, &quot;def&quot;: &quot;groupm&quot;}],&quot;ajaxWeblabTriggerId&quot;: &quot;&quot;,&quot;abpStatus&quot;: &quot;-1&quot;,&quot;abpAcceptable&quot;: &quot;true&quot;,&quot;programIdsToCollapse&quot;: [],&quot;DAsfUrl&quot;:&quot;https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/desktop/DAsf-1.50.228f98c._V451950910_.js&quot;}\" aria-hidden=\"true\" data-arid=\"ce5724de2717406bac423abbaf1a3976\">\u003Ciframe name=\"{&quot;slot&quot;:&quot;Detail_ad-endcap-1_Glance&quot;,&quot;slotName&quot;:&quot;ad-endcap-1&quot;,&quot;src&quot;:&quot;https://aax-us-east.amazon-adsystem.com/e/xsp/getAd?src=500&amp;slot=ad-endcap-1&amp;rid=0101674ec7c6792b7a2743885b416573c98637be0ddea85c80d8bce98ed4a2c70741&quot;,&quot;adServer&quot;:&quot;cs&quot;,&quot;campaignId&quot;:&quot;6621&quot;,&quot;arid&quot;:&quot;ce5724de2717406bac423abbaf1a3976&quot;,&quot;placementId&quot;:&quot;6e8849f7-64c3-45e5-a732-d4ef8c06246b&quot;,&quot;size&quot;:{&quot;width&quot;:&quot;100%&quot;,&quot;height&quot;:&quot;90px&quot;},&quot;allowedSizes&quot;:[{&quot;width&quot;:&quot;728px&quot;,&quot;height&quot;:&quot;90px&quot;},{&quot;width&quot;:&quot;100%&quot;,&quot;height&quot;:&quot;90px&quot;}],&quot;allowedDomains&quot;:[&quot;g-ecx.images-amazon.com&quot;,&quot;d3l3lkinz3f56t.cloudfront.net&quot;,&quot;g-ecx.images-amazon.com&quot;,&quot;z-ecx.images-amazon.com&quot;,&quot;images-na.ssl-images-amazon.com&quot;,&quot;g-ec4.images-amazon.com&quot;,&quot;images-cn.ssl-images-amazon.com&quot;],&quot;aanParams&quot;:&quot;site%3Damazon.us%3Bpt%3DDetail%3Bslot%3Dad-endcap-1%3Bpid%3DB06XD3LXXK%3Bbn%3D565108%3Barid%3Dce5724de2717406bac423abbaf1a3976&quot;,&quot;loadAfter&quot;:&quot;criticalFeature&quot;,&quot;extraDelay&quot;:0,&quot;iframeExtraStyle&quot;:&quot;min-width: 728px;&quot;,&quot;iframeClass&quot;:&quot;&quot;,&quot;adPixels&quot;:[],&quot;adPixelDelay&quot;:&quot;0&quot;,&quot;aaxInstrPixelUrl&quot;:&quot;&quot;,&quot;serverSideFetchAd&quot;:&quot;false&quot;,&quot;enableAdBlockerDetector&quot;:false,&quot;disableResizeFunc&quot;:true,&quot;fallbackStaticAdImgUrl&quot;:&quot;&quot;,&quot;fallbackStaticAdClickUrl&quot;:&quot;&quot;,&quot;fallbackStaticAdExtraStyle&quot;:&quot;&quot;,&quot;adFeedbackInfo&quot;:{&quot;endPoint&quot;:&quot;/gp/aq-feedback/lazyLoad/handler/af-link-handler.html&quot;,&quot;boolFeedback&quot;:true,&quot;slugText&quot;:&quot;Advertisement&quot;},&quot;adPlacementMetaData&quot;:{&quot;pageUrl&quot;:&quot;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwNlhEM0xYWEs/ZHBSZXF1ZXN0SWQ9V1kySzA2VjdXRU1LVEMwSzJIN1cmV0RHPXBjX2Rpc3BsYXlfb25fd2Vic2l0ZSYqZW50cmllcyo9MCYqVmVyc2lvbio9MSY=&quot;,&quot;adElementId&quot;:&quot;ape_Detail_ad-endcap-1_Glance_placement&quot;,&quot;pageType&quot;:&quot;Detail&quot;,&quot;slotName&quot;:&quot;ad-endcap-1&quot;},&quot;adCreativeMetaData&quot;:{&quot;adNetwork&quot;:&quot;cs&quot;},&quot;advertisementStyle&quot;:{&quot;position&quot;:&quot;absolute&quot;,&quot;top&quot;:&quot;2px&quot;,&quot;right&quot;:&quot;0px&quot;,&quot;display&quot;:&quot;inline-block&quot;,&quot;font&quot;:&quot;normal 11px Arial&quot;,&quot;color&quot;:&quot;grey&quot;},&quot;feedbackDivStyle&quot;:{&quot;position&quot;:&quot;relative&quot;,&quot;height&quot;:&quot;18px&quot;},&quot;viewabilityStandards&quot;:[{&quot;p&quot;:0,&quot;t&quot;:0,&quot;def&quot;:&quot;amzn&quot;},{&quot;p&quot;:50,&quot;t&quot;:1,&quot;def&quot;:&quot;iab&quot;},{&quot;p&quot;:100,&quot;t&quot;:1,&quot;def&quot;:&quot;groupm&quot;}],&quot;ajaxWeblabTriggerId&quot;:&quot;&quot;,&quot;abpStatus&quot;:&quot;-1&quot;,&quot;abpAcceptable&quot;:&quot;true&quot;,&quot;programIdsToCollapse&quot;:[],&quot;DAsfUrl&quot;:&quot;https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/desktop/DAsf-1.50.228f98c._V451950910_.js&quot;,&quot;hostDomain&quot;:&quot;https://www.amazon.com&quot;,&quot;queryParams&quot;:{},&quot;aPageStart&quot;:1569718202649,&quot;adStartTime&quot;:1569718204447,&quot;safeFrameSrc&quot;:&quot;https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/whitelisted/desktop/sf-1.50.228f98c._V451950908_.html&quot;}\" id=\"ape_Detail_ad-endcap-1_Glance_iframe\" src=\"https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/whitelisted/desktop/sf-1.50.228f98c._V451950908_.html\" height=\"90px\" width=\"100%\" class=\"\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\" scrolling=\"no\" allowtransparency=\"true\" allowfullscreen=\"\" mozallowfullscreen=\"\" webkitallowfullscreen=\"\" data-arid=\"ce5724de2717406bac423abbaf1a3976\" sandbox=\"allow-scripts allow-top-navigation allow-popups allow-popups-to-escape-sandbox allow-same-origin\" style=\"min-width: 728px;\">\u003C/iframe>\u003C/div>\u003Cscript>(function(){function a(d,e){if(window.addEventListener){window.addEventListener(d,e,false);}else{if(window.attachEvent){window.attachEvent(\"on\"+d,e);}}}function c(d,e){if(window.removeEventListener){window.removeEventListener(d,e,false);}else{if(window.detachEvent){window.detachEvent(\"on\"+d,e);}}}var b=function(){(function(){(function(j,m){j.sfLogErrors=j.sfLogErrors||false;var o=o||function(s,r){r=r||new Error(s);if(j.ue&&typeof ue.count==\"function\"){ue.count(\"adplacements:safeFrameError\",1);}if(!j.sfLogErrors){return;}if(j.ueLogError){j.ueLogError(r,{logLevel:\"ERROR\",attribution:\"APE-safeframe\",message:s+\" \"});}else{if(typeof console!==\"undefined\"&&console.error){console.error(s,r);}}};j.aanParams=j.aanParams||{};j.aanParams[\"ad-endcap-1\"]=\"site=amazon.us;pt=Detail;slot=ad-endcap-1;pid=B06XD3LXXK;bn=565108;arid=ce5724de2717406bac423abbaf1a3976\";j[\"ad-endcap-1\"]={};j[\"ad-endcap-1\"].adStartTime=(new Date()).getTime();function d(){return j.innerHeight||m.documentElement.clientHeight;}function g(){return j.innerWidth||m.documentElement.clientWidth;}function e(t,r,s){if(t>0){return(s>t);}else{return(r>0);}}var f=function(){return(Date.now?Date.now():new Date().getTime());};throttle=function(s,u,y){var r,w,z;var x=null;var v=0;if(!y){y={};}var t=function(){v=y.leading===false?0:f();x=null;z=s.apply(r,w);if(!x){r=w=null;}};return function(){var B=f();if(!v&&y.leading===false){v=B;}var A=u-(B-v);r=this;w=arguments;if(A\u003C=0||A>u){if(x){clearTimeout(x);x=null;}v=B;z=s.apply(r,w);if(!x){r=w=null;}}else{if(!x&&y.trailing!==false){x=setTimeout(t,A);}}return z;};};function l(u,w,v,r){try{var t=m.getElementById(u).getBoundingClientRect();if(e(t.top,t.bottom,d())&&e(t.left,t.right,g())){if(typeof uet==\"function\"){uet(\"bb\",\"adplacements:viewablelatency:\"+w,{wb:1});if(v){uet(\"bb\",\"adplacements:viewablelatency:\"+v,{wb:1});}}if(typeof uex==\"function\"&&j.ue&&typeof ue.count==\"function\"){if(j.apeViewableLatencyTrackers[r].loaded){uex(\"ld\",\"adplacements:viewablelatency:\"+w,{wb:1});if(v){uex(\"ld\",\"adplacements:viewablelatency:\"+v,{wb:1});}ue.count(\"adplacements:htmlviewed:loaded:\"+w,1);if(v){ue.count(\"adplacements:htmlviewed:loaded:\"+v,1);}}ue.count(\"adplacements:htmlviewed:\"+w,1);if(v){ue.count(\"adplacements:htmlviewed:\"+v,1);}}j.apeViewableLatencyTrackers[r].viewed=true;if(j.apeViewableLatencyTrackers[r].tracker){c(\"scroll\",j.apeViewableLatencyTrackers[r].tracker);c(\"resize\",j.apeViewableLatencyTrackers[r].tracker);}}}catch(s){j.apeViewableLatencyTrackers[r].valid=false;}}try{j.apeViewableLatencyTrackers=j.apeViewableLatencyTrackers||{};var q=\"ape_Detail_ad-endcap-1_Glance_placement\";var p=\"Detail_ad-endcap-1_Glance\".replace(/\\_/g,\":\");var h=\"6e8849f7-64c3-45e5-a732-d4ef8c06246b\";var i=\"ce5724de2717406bac423abbaf1a3976\";j.apeViewableLatencyTrackers[i]=j.apeViewableLatencyTrackers[i]||{};j.apeViewableLatencyTrackers[i].valid=true;l(q,p,h,i);if(j.apeViewableLatencyTrackers[i].valid&&!j.apeViewableLatencyTrackers[i].viewed){j.apeViewableLatencyTrackers[i].tracker=throttle(function(){l(q,p,h,i);},20);a(\"scroll\",j.apeViewableLatencyTrackers[i].tracker);a(\"resize\",j.apeViewableLatencyTrackers[i].tracker);}}catch(k){if(j.apeViewableLatencyTrackers&&j.apeViewableLatencyTrackers.ce5724de2717406bac423abbaf1a3976){j.apeViewableLatencyTrackers.ce5724de2717406bac423abbaf1a3976.valid=false;}o(\"Error initializing viewable latency instrumentation\",k);}try{if(j.DAsf){j.DAsf.loadAds();}else{var n=m.createElement(\"script\");n.type=\"text/javascript\";n.async=true;n.charset=\"utf-8\";n.src=\"https://images-na.ssl-images-amazon.com/images/G/01/ape/sf/desktop/DAsf-1.50.228f98c._V451950910_.js?csm_attribution=APE-SafeFrame\";n.onerror=function(){o(\"Error loading SafeFrame library\");};n.setAttribute(\"crossorigin\",\"anonymous\");(m.getElementsByTagName(\"head\")[0]||m.getElementsByTagName(\"body\")[0]).appendChild(n);}}catch(k){o(\"Error appending DAsf library\",k);}}(window,document));})();};b();})();\u003C/script>\n\n\n\n\n\n\n\n\n\n\n            \n\n            \n        \u003Cdiv class=\"a-section\">\n        \u003Cspan class=\"a-text-bold\">Pages with related products.\u003C/span>\n        \u003Cspan>See and discover other items: \u003Ca class=\"a-link-normal\" href=\"/slp/acer-laptops/x92gc7b5kjya97f/137-0530487-6192152?_encoding=UTF8&amp;ref_=fs_blw_d_clp_1\">acer laptops\u003C/a>, \u003Ca class=\"a-link-normal\" href=\"/slp/2017-acer-laptop/2ck2ws2f4szx9n3/137-0530487-6192152?_encoding=UTF8&amp;ref_=fs_blw_d_clp_2\">2017 acer laptop\u003C/a>, \u003Ca class=\"a-link-normal\" href=\"/slp/chromebooks-2017/xd6obcbk9xpy9up/137-0530487-6192152?_encoding=UTF8&amp;ref_=fs_blw_d_clp_3\">chromebooks 2017\u003C/a>, \u003Ca class=\"a-link-normal\" href=\"/pcr/Best-Rated-Traditional-Laptop-Computers-Reviews/13896615011/137-0530487-6192152?_encoding=UTF8&amp;ref_=fs_blw_d_pcr_4\">Best Rated in Traditional Laptop Computers\u003C/a>, \u003Ca class=\"a-link-normal\" href=\"/pcr/Best-Rated-Laptop-Computers-Reviews/565108/137-0530487-6192152?_encoding=UTF8&amp;ref_=fs_blw_d_pcr_5\">Best Rated in Laptop Computers\u003C/a>, \u003Ca class=\"a-link-normal\" href=\"/slp/bluetooth-cameras/wn4vx7564ctt86e/137-0530487-6192152?_encoding=UTF8&amp;ref_=fs_blw_d_clp_6\">bluetooth cameras\u003C/a>\u003C/span>\n        \u003C/div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n            \n      \n\n\n\n\n\n\n\n\n            \n            \n  \u003Cscript type=\"text/javascript\">\n    // Only execute if performance object is defined in JS\n    if(typeof performance!= \"undefined\" && typeof performance.getEntries != \"undefined\") {\n\n\n\n\n\n        var metaAssetNames = [];\n        metaAssetNames.push(\"USHardlinesDetailPageMetaAssetFixed\");\n        metaAssetNames.push(\"DetailPageDesktopImageBlockMetaAsset\");\n        metaAssetNames.push(\"USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP\");\n        metaAssetNames.push(\"DetailPagePreRegistrationAssets\");\n        metaAssetNames.push(\"AmazonDevicesDetailPageUtilityAssets\");\n        if(metaAssetNames.length > 0)  {\n            for(assetIndex = 0; assetIndex \u003C metaAssetNames.length; assetIndex ++) {\n\t     var metaAssetName = metaAssetNames[assetIndex];\n             var re = new RegExp(\"\\\\.css\\\\?AUIClients/\" + metaAssetName); \n             for(i = 0; i \u003C performance.getEntries().length; i++) {\t   \t\n                var dpEntry = performance.getEntries()[i];\n\t\tvar res = dpEntry.name.match(re);\n                if(res && dpEntry.initiatorType  && dpEntry.initiatorType == \"link\") {\n                    var dpmaDuration = dpEntry.duration;\n                    ue.count(metaAssetName +\".duration\", dpmaDuration);\n                    if(dpmaDuration \u003C 50) {\n                        ue.tag(metaAssetName + \"Cached\");\n                    } else {\n                        ue.tag(metaAssetName + \"NotCached\");\n                    }\n                    ue.count(metaAssetName + \".startTime\", dpEntry.startTime);\n                }\n\t      }\n\t    }\n        }\n        else {\n                ue.count(\"DPMANoMetaAsset\", 1);\n        }\n\n        for(i = 0 ; i \u003C performance.getEntries().length ; i++) {\n            var name = performance.getEntries()[i].name ;\n            var res = name.match(/\\.css\\?AUIClients\\/AmazonUI/);\n\t    var initiatorType = performance.getEntries()[i].initiatorType;\n            if(res && initiatorType && initiatorType == \"link\") {\n                var duration = performance.getEntries()[i].duration ;\n                ue.count(\"aui.duration\", duration);\n                ue.count(\"aui.startTime\", performance.getEntries()[i].startTime);\n                if(duration \u003C 50) {\n                    csmTag = \"auiCached\";\n                }\n                else {\n                    csmTag = \"auiNotCached\";\n                }\n\n                if(window.ue && ue.tag) {\n                    ue.tag(csmTag);\n                }\n                break;\n            }\n        }\n    }\n\u003C/script>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cscript>\n(window.AmazonUIPageJS ? AmazonUIPageJS : P).when('A').execute(function(A){\n  if(A.preload){\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/614ihxQDWpL._RC|11-BZEJ8lnL.js,61GQ9IdK7HL.js,21Of0-9HPCL.js,012FVc3131L.js,119KAWlHU6L.js,51xL2QLv4YL.js,11AHlQhPRjL.js,016iHgpF74L.js,11aNYFFS5hL.js,116tgw9TSaL.js,211-p4GRUCL.js,01PoLXBDXWL.js,61UCC86QXoL.js,11BOgvnnntL.js,31UWuPgtTtL.js,01rpauTep4L.js,01iyxuSGj4L.js,01oGoEUF1PL.js_.js?AUIClients/AmazonUI#218320-T1.192338-T1.202051-T1');\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/517rp2NH2UL._RC|516fcOUE-HL.css,01evdoiemkL.css,01K+Ps1DeEL.css,31pdJv9iSzL.css,01tgK36lpGL.css,11UGC+GXOPL.css,21LK7jaicML.css,11L58Qpo0GL.css,21kyTi1FabL.css,01Xl9KigtzL.css,01YhS3Cs-hL.css,21GwE3cR-yL.css,019SHZnt8RL.css,01wAWQRgXzL.css,21bWcRJYNIL.css,11WgRxUdJRL.css,01dU8+SPlFL.css,11ocrgKoE-L.css,01SHjPML6tL.css,111-D2qRjiL.css,01QrWuRrZ-L.css,310Imb6LqFL.css,11Z1a0FxSIL.css,01cbS3UK11L.css,21mOLw+nYYL.css,01L8Y-JFEhL.css_.css?AUIClients/AmazonUI#us.not-trident.218320-T1');\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/31Nb5hZQizL._RC|11DbyV7EqEL.js,41-5yCIJLkL.js,31selSsN+1L.js,413u98XONQL.js,316nVZ1c+gL.js,21OYEBd8PVL.js,318rs4piGPL.js,01jEqq6I0UL.js,0185ITV0M6L.js,41DfHGdXUeL.js,217XOv1WjVL.js,210NjLk-UoL.js,31GSoUxkToL.js,11H+quk5jAL.js,21FBJlPfM6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,71-EksT4eaL.js,612N12HQlLL.js,31UjTApGOPL.js,01LHJt5PiyL.js,31Ac-cQ+ZWL.js,11oGaoYgbdL.js,0193uyIciNL.js,41D4kRuiy9L.js,314YideY-UL.js,11p0nLfNCcL.js,01s9HEfbt3L.js,11iHZuQapKL.js,61cXnq7ya3L.js,11AVRVWTouL.js,11MQqFPEK+L.js,417MzwaDKzL.js,11G4c43OZvL.js,21Gfl9VxXFL.js,31t4ojoCyTL.js,115eJenyunL.js,01X2zigX4kL.js,21YW9LKF2zL.js,21mymEONFtL.js,61no9IDtPrL.js,21OJDARBhQL.js,41s+OBPxTPL.js,51J6xjXWctL.js,01IWUb29Q4L.js,01JzE3-DfLL.js_.js?AUIClients/USHardlinesDetailPageMetaAssetFixed#desktop.us.213498-T1.195406-C.227948-T1.183511-T1.221330-T1.123392-T1.114779-T1.120067-T1.173971-T1.131900-T1.184660-C.162909-T1.155175-T1.108310-T1.156391-T1.195589-T1.107686-T1.172346-T1.133003-T1.181561-T1.187555-T1');\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/11UGK4%2BGCNL._RC|11ikU6MX1JL.css,01ekIXTj5kL.css,01KvCqKMBgL.css,21ckusqmu6L.css,21ByukFKG4L.css,014trSKrO3L.css,11xRy3bSkOL.css,01HK5awd8AL.css,01D-B-OeNDL.css,01zmYtfbgDL.css,21GOBxH5zHL.css,01tf3OZN+lL.css,01QUs5FVXoL.css,11MXghh1eBL.css,01aOzYidP0L.css,41vOQb1k0LL.css,31MkQHV3gaL.css,314gb2LkLML.css,01FtAuFRr3L.css,01rgQ3jqo7L.css,31-m45l23xL.css,31TJtSmBkXL.css,11X8K4AolpL.css,21PjfsP9YvL.css,31mDqH7l3AL.css,014Z+MbaRaL.css,01RRH0yFa4L.css,31Kc2gYPiuL.css,01ZGR4PDSTL.css,01dCidM2ztL.css,218XVPWf2YL.css,01f31VNCowL.css,01rgQ3jqo7L.css,01kwuiPOKIL.css,41fK6fT1tqL.css,01kymrLkG9L.css_.css?AUIClients/USHardlinesDetailPageMetaAssetFixed#desktop.us.not-trident.164396-T1.164400-T1.131900-T1.155175-T1.171569-T1.108310-T1.172346-T1.133003-T1.181561-T1');\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/617jioWLwdL.js?AUIClients/DetailPageDesktopImageBlockMetaAsset#230654-T2.210909-T1.169593-T1');\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/21PWs2LLIGL._RC|118Say7HIZL.js,21E2aIDj6DL.js,31qUdoxPE8L.js,4123BTTtUrL.js,31bEXnVglKL.js,31Gy8EGyyiL.js,41TmUB5al-L.js,21NDIsf0a1L.js,015TRQC5i+L.js,61Amz9+97tL.js,01lcH4zcTaL.js,01OtvpwikQL.js,5141J+X2WhL.js,01qwoVEkKlL.js,01g2etah0NL.js,21b+wrKJalL.js,21qOGqjcM7L.js,11wTwl+500L.js,61tb-S9yWnL.js,11zoAqkd2UL.js,01YivelYW5L.js,016QFWAAdML.js,51QhJu91XEL.js,11Gx+6S5O-L.js,31cxN9ZCWkL.js,41FXCYfSyrL.js,41f7ZYDPh6L.js,31ZS5TQVWDL.js,51Z6IpqcPCL.js,01IQoRXvpnL.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31SVhUHz1bL.js,21nsfrjkZaL.js,01u8ChFWgdL.js,011kwg0OTQL.js,01jLpHmb92L.js,014kCoIHgIL.js,01rd3UY3Z8L.js,01hkseOXj6L.js,01Sd4JgH9ML.js,01Zs681p9JL.js,01dXSEbmdvL.js,01IC-gBKyYL.js,51IVDV8MIiL.js,21rYUjMk16L.js,01OI0RzpxfL.js_.js?AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP#desktop.us.167162-T1.215485-T1.210547-T1.212549-T1.105844-C.153662-T1.103061-T1.150150-T1.200616-T1.184888-T1.162909-T1.212213-T1.213066-T1.207826-T1.190465-T1.190123-T1.144201-T1.221009-T1.169053-T2.184361-T1.126331-T1.188213-T1.179789-T1.109378-T1.147957-T1.154031-T3.198898-C.200963-T1.224722-T1.169593-T1.142088-C.187531-T1.217613-T1.187555-T1');\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/61pYyzGISmL._RC|210LbiKyCML.css,31j6BOPjmzL.css,01zWxM9Vh0L.css,41OwxGEUVPL.css,219oCRGl-sL.css,212hS9k0-iL.css,11h8y826C1L.css,31dTK1hHb6L.css,21W5fiSj06L.css,31Wg0ai095L.css,11Z7S+lK47L.css,01NW8VTUeVL.css,011uHgmxBfL.css,21km+KNFsKL.css,31j4n5vuY7L.css,11VQfXZOYWL.css,21u3+6tf0yL.css,21Wf53xZ5jL.css,01OhA16ND1L.css,01U22TK7kxL.css,312vW+EKiuL.css,01BwcPgON+L.css,41hOFRRMuHL.css,01YwSO+Cb3L.css,217hKFTenEL.css,11pBWCbQZ6L.css,31t0uInsh7L.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31LPDlue2jL.css,01-tcA2vk0L.css,01OHA2P-VJL.css,01GuAXVzA5L.css,01an-V9Fk9L.css,01goIIPoVxL.css_.css?AUIClients/USHardlinesDetailPageMetaAssetVariable_TURBO_DESKTOP#desktop.us.210019-T1.122952-T1.113788-C.119597-T1.210547-T1.200009-T1.103061-T1.172402-T1.228632-T1.167251-T1.150150-T1.133480-T1.129737-C.190465-T1.144201-T1.140477-T1.169053-T2.184361-T1.126331-T1.229206-T1.215632-T1.109378-T1.169593-T1.217613-T1');\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/31Nb5hZQizL._RC|21PWs2LLIGL.js,118Say7HIZL.js,21E2aIDj6DL.js,41-5yCIJLkL.js,01g2etah0NL.js,31selSsN+1L.js,413u98XONQL.js,21OYEBd8PVL.js,51-2jfuoxoL.js,316nVZ1c+gL.js,01AdYLY9rHL.js,01IOMCsVFCL.js,0185ITV0M6L.js,41DfHGdXUeL.js,210NjLk-UoL.js,31GSoUxkToL.js,01TQyo0bnIL.js,11SRkYWcpPL.js,71-EksT4eaL.js,01OrQ5AXqsL.js,31UjTApGOPL.js,01LHJt5PiyL.js,31Ac-cQ+ZWL.js,11oGaoYgbdL.js,01HmcbFsnFL.js,31sG+M5QN5L.js,11AVRVWTouL.js,11MQqFPEK+L.js,11G4c43OZvL.js,11DGcrZsUwL.js,01X2zigX4kL.js,01OtvpwikQL.js,31qUdoxPE8L.js,21qOGqjcM7L.js,01ZF+ovNflL.js,31Zl-BWE10L.js,61tb-S9yWnL.js,21YW9LKF2zL.js,21mymEONFtL.js,61no9IDtPrL.js,21OJDARBhQL.js,41s+OBPxTPL.js,51J6xjXWctL.js,01IWUb29Q4L.js,11zoAqkd2UL.js,01JzE3-DfLL.js,01YivelYW5L.js,016QFWAAdML.js,41f7ZYDPh6L.js,011bX2ciJbL.js,21222B+rAzL.js,01gp3oqpb5L.js,31SVhUHz1bL.js,21nsfrjkZaL.js,01u8ChFWgdL.js,01NKGaW0w5L.js,01rEmdLLpxL.js,31bEXnVglKL.js,01rd3UY3Z8L.js,01hkseOXj6L.js,01Zs681p9JL.js,01Sd4JgH9ML.js,31ZS5TQVWDL.js,51Z6IpqcPCL.js,01IC-gBKyYL.js,51IVDV8MIiL.js,21rYUjMk16L.js,01OI0RzpxfL.js_.js?AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP#desktop.us.213498-T1.167162-T1.215485-T1.210547-T1.195406-C.227948-T1.105844-C.183511-T1.153662-T1.103061-T1.221330-T1.123392-T1.232002-T1.200616-T1.173971-T1.184888-T1.131900-T1.184660-C.162909-T1.155175-T1.212213-T1.213066-T1.207826-T1.144201-T1.221009-T1.126331-T1.156391-T1.188213-T1.179789-T1.109378-T1.147957-T1.154031-T3.198898-C.200963-T1.224722-T1.169593-T1.217613-T1.181561-T1.187555-T1');\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/416kQIkBd-L._RC|41ufqE3zTRL.css,11UGK4+GCNL.css,210LbiKyCML.css,31j6BOPjmzL.css,01ekIXTj5kL.css,01KvCqKMBgL.css,21ckusqmu6L.css,014trSKrO3L.css,419B8xkIpdL.css,21ByukFKG4L.css,01f0Gtj6a9L.css,01HK5awd8AL.css,01D-B-OeNDL.css,21GOBxH5zHL.css,01tf3OZN+lL.css,01aOzYidP0L.css,31MkQHV3gaL.css,314gb2LkLML.css,01FtAuFRr3L.css,01QLwk8mu6L.css,014Z+MbaRaL.css,01RRH0yFa4L.css,01ZGR4PDSTL.css,018mGORJ7tL.css,01NW8VTUeVL.css,01rgQ3jqo7L.css,01zWxM9Vh0L.css,011uHgmxBfL.css,11VQfXZOYWL.css,01MLzcotflL.css,21u3+6tf0yL.css,01kwuiPOKIL.css,41fK6fT1tqL.css,01kymrLkG9L.css,21Wf53xZ5jL.css,01OhA16ND1L.css,11pBWCbQZ6L.css,01qwEWNuxuL.css,21qxDmhZV3L.css,11XXguyjjZL.css,31LPDlue2jL.css,01-tcA2vk0L.css,01OHA2P-VJL.css,219oCRGl-sL.css,01GuAXVzA5L.css,31t0uInsh7L.css,01goIIPoVxL.css_.css?AUIClients/USSoftlinesDetailPageMetaAsset_TURBO_DESKTOP#desktop.us.122952-T1.113788-C.119597-T1.210547-T1.200009-T1.103061-T1.172402-T1.232002-T1.131900-T1.155175-T1.144201-T1.140477-T1.126331-T1.215632-T1.109378-T1.169593-T1.217613-T1.181561-T1');\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/31cxN9ZCWkL.js?AUIClients/DetailPageMiraiAssets#150150-T1');\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/41hOFRRMuHL.css?AUIClients/DetailPageMiraiAssets#150150-T1.229206-T1');\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/31Nb5hZQizL._RC|21E2aIDj6DL.js,41-5yCIJLkL.js,01g2etah0NL.js,0185ITV0M6L.js,41DfHGdXUeL.js,31selSsN+1L.js,413u98XONQL.js,21PWs2LLIGL.js,118Say7HIZL.js,21FBJlPfM6L.js,01TQyo0bnIL.js,11SRkYWcpPL.js,01nCGM4u+qL.js,71-EksT4eaL.js,31UjTApGOPL.js,01LHJt5PiyL.js,31Ac-cQ+ZWL.js,11oGaoYgbdL.js,11MQqFPEK+L.js,01X2zigX4kL.js,21JtT0mJXEL.js,31vMFUg376L.js,01OtvpwikQL.js,31qUdoxPE8L.js,217XOv1WjVL.js,31bEXnVglKL.js,31Gy8EGyyiL.js,11p0nLfNCcL.js,11iHZuQapKL.js,21qOGqjcM7L.js,01GhKb2usNL.js,61tb-S9yWnL.js,21YW9LKF2zL.js,21mymEONFtL.js,61no9IDtPrL.js,21OJDARBhQL.js,41s+OBPxTPL.js,51J6xjXWctL.js,01IWUb29Q4L.js,11zoAqkd2UL.js,01VEXCxz+aL.js,01JzE3-DfLL.js,016QFWAAdML.js,41f7ZYDPh6L.js,01rd3UY3Z8L.js,01hkseOXj6L.js,01Sd4JgH9ML.js,31ZS5TQVWDL.js,51Z6IpqcPCL.js,01IC-gBKyYL.js,51IVDV8MIiL.js,21rYUjMk16L.js,01OI0RzpxfL.js_.js?AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP#desktop.us.213498-T1.167162-T1.215485-T1.210547-T1.195406-C.227948-T1.105844-C.183511-T1.153662-T1.103061-T1.123392-T1.200616-T1.173971-T1.184888-T1.131900-T1.184660-C.162909-T1.212213-T1.213066-T1.207826-T1.156391-T1.188213-T1.179789-T1.109378-T1.147957-T1.154031-T3.198898-C.200963-T1.224722-T1.169593-T1.133003-T1');\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/51za1s8qEiL._RC|11UGK4+GCNL.css,31j6BOPjmzL.css,01ekIXTj5kL.css,01HK5awd8AL.css,01D-B-OeNDL.css,01KvCqKMBgL.css,21ckusqmu6L.css,210LbiKyCML.css,11MXghh1eBL.css,01aOzYidP0L.css,31MkQHV3gaL.css,314gb2LkLML.css,01FtAuFRr3L.css,01RRH0yFa4L.css,01NW8VTUeVL.css,01rgQ3jqo7L.css,21jNhNxHFBL.css,01zWxM9Vh0L.css,011uHgmxBfL.css,01zmYtfbgDL.css,219oCRGl-sL.css,212hS9k0-iL.css,31TJtSmBkXL.css,21PjfsP9YvL.css,11VQfXZOYWL.css,01wsp46SQTL.css,21u3+6tf0yL.css,01kwuiPOKIL.css,41fK6fT1tqL.css,01kymrLkG9L.css,21Wf53xZ5jL.css,01-8BURvQmL.css,11pBWCbQZ6L.css,31t0uInsh7L.css,01goIIPoVxL.css_.css?AUIClients/USMediaDetailPageMetaAsset_TURBO_DESKTOP#desktop.us.122952-T1.113788-C.119597-T1.210547-T1.200009-T1.103061-T1.131900-T1.215632-T1.109378-T1.169593-T1.133003-T1');\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/31nZs05cq8L.js?AUIClients/DetailPagePreRegistrationAssets#199271-T1');\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/01mqQVb87-L.css?AUIClients/DetailPagePreRegistrationAssets#199271-T1');\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/41THdNCw4OL.js?AUIClients/AmazonDevicesDetailPageUtilityAssets#140997-T1.132048-T1');\n  }\n});\n\u003C/script>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cscript type=\"text/javascript\">\n\nfunction prefetchTYPAssets() {\n    var imageAssets = new Array();\n    var jsCssAssets = new Array();\n      imageAssets.push(\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/buy-buttons/review-1-click-order._CB192251243_.gif\");\n      imageAssets.push(\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/buttons/continue-shopping._CB192193522_.gif\");\n      imageAssets.push(\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/buy-buttons/thank-you-elbow._CB192238786_.gif\");\n      imageAssets.push(\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/communities/social/snwicons_v2._CB369764580_.png\");\n      imageAssets.push(\"https://images-na.ssl-images-amazon.com/images/G/01/checkout/assets/carrot._CB192196173_.gif\");\n      imageAssets.push(\"https://images-na.ssl-images-amazon.com/images/G/01/checkout/thank-you-page/assets/yellow-rounded-corner-sprite._CB192238288_.gif\");\n      imageAssets.push(\"https://images-na.ssl-images-amazon.com/images/G/01/checkout/thank-you-page/assets/white-rounded-corner-sprite._CB192259929_.gif\");\n      imageAssets.push(\"https://images-na.ssl-images-amazon.com/images/G/01/gno/sprites/nav-sprite-global_bluebeacon-1x_optimized_layout1._CB468670774_.png\");\n      imageAssets.push(\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/transparent-pixel._CB386942464_.gif\");\n\n    // pre-fetching image assets\n    for (var i=0; i\u003CimageAssets.length; i++) {\n       new Image().src = imageAssets[i];\n    }\n    // pre-fetching css and js assets based on different browser types\n    var isIE = /*@cc_on!@*/0;\n    var isFireFox = /Firefox/.test(navigator.userAgent);\n    if (isIE) {\n      for (var i=0; i\u003CjsCssAssets.length; i++) {\n        new Image().src = jsCssAssets[i];\n      }\n    }\n    else if (isFireFox) {\n      for (var i=0; i\u003CjsCssAssets.length; i++) {\n        var o =  document.createElement(\"object\");\n        o.data = jsCssAssets[i];\n        o.width = o.height = 0;\n        document.body.appendChild(o);\n      }\n    }\n}\n\n    var onload = function () {\n        setTimeout(prefetchTYPAssets, 2000);\n    };\n    if (window.addEventListener) {\n        window.addEventListener(\"load\", onload);\n    } else if (window.attachEvent) { /* for \u003C= IE 8 */\n        window.attachEvent(\"onload\", onload);\n    }\n\u003C/script>\n\n\u003Cinput type=\"hidden\" name=\"1click-tsdelta\" id=\"1click-tsdelta\">\n\u003Cscript type=\"text/javascript\">\nvar ocInitTimestamp = 1569717936;\n\u003C/script>\n\n\n\n\n\n\n\n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\u003Cscript type=\"text/javascript\">\n\n\nif (!window.$SearchJS && window.$Nav) {\n  window.$SearchJS = $Nav.make('sx');\n}\nif (window.$SearchJS) {\n\n\n}\n\n\n(function() {\n  var precacheMaterials = [\"https://images-na.ssl-images-amazon.com/images/G/01/nav2/images/gui/searchSprite._CB280429789_.png\"];\n      if (window.amznJQ) {\n        amznJQ.addPL(precacheMaterials);\n      } else if (window.P) {\n        P.when('A').execute(function(A){\n          A.preload(precacheMaterials);\n        });\n      }\n})();\n\n\n\u003C/script>\n\n\n\n\n\n\n\n\n\n\n\n\n        \n        \n            \n\u003C!--&&&Portal&Delimiter&&&-->\u003C!-- sp:end-feature:host-atf -->\n\u003C!-- sp:feature:nav-btf -->\n\u003C!-- btf pilu -->\n\n\n\n\n\n\n\u003Cdiv style=\"display: none\">\n  \u003Cdiv id=\"nav-prime-menu\" class=\"nav-empty nav-flyout-content nav-ajax-prime-menu\">\n    \u003Cdiv class=\"nav_dynamic\">\u003C/div>\n    \u003Cdiv class=\"nav-ajax-message\">\u003C/div>\n    \u003Cdiv class=\"nav-ajax-error-msg\">\n      \u003Cp class=\"nav_p nav-bold\">There's a problem loading this menu right now.\u003C/p>\n      \u003Cp class=\"nav_p\">\u003Ca href=\"/gp/prime/ref=nav_prime_ajax_err/137-0530487-6192152\" class=\"nav_a\">Learn more about Amazon Prime.\u003C/a>\u003C/p>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\n\n\n\n\n\n\n\u003Cstyle>\n  #nav-prime-tooltip{\n    padding: 0 20px 2px 20px;\n    background-color: white;\n    font-family: arial,sans-serif;\n  }\n  .nav-npt-text-title{\n    font-family: arial,sans-serif;\n    font-size: 18px;\n    font-weight: bold;\n    line-height: 21px;\n    color: #E47923;\n  }\n  .nav-npt-text-detail, a.nav-npt-a{\n    font-family: arial,sans-serif;\n    font-size: 12px;\n    line-height: 14px;\n    color: #333333;\n    margin: 2px 0px;\n  }\n  a.nav-npt-a {\n    text-decoration: underline;\n  }\n\u003C/style>\n\n\n\u003Cdiv style=\"display: none\">\n  \u003Cdiv id=\"nav-prime-tooltip\">\n    \u003Cdiv class=\"nav-npt-text-title\"> Get fast, free delivery with Amazon Prime \u003C/div>\n    \u003Cdiv class=\"nav-npt-text-detail\"> Prime members enjoy FREE Two-Day Delivery and exclusive access to music, movies, TV shows, original audio series, and Kindle books. \u003C/div>\n    \u003Cdiv class=\"nav-npt-text-detail\">\n      &gt;\n      \u003Ca class=\"nav-npt-a\" href=\"/prime/ref=nav_tooltip_redirect/137-0530487-6192152\">Get started\u003C/a>\n    \u003C/div>\n  \u003C/div>\n\u003C/div>\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cscript type=\"text/javascript\">\n  window.$Nav && $Nav.when(\"data\").run(function(data) { data({\"wishlistContent\":{\"template\":{\"name\":\"itemList\",\"data\":{\"items\":[{\"text\":\"Create a List\",\"url\":\"/gp/registry/wishlist?ie=UTF8&ref_=nav_wishlist_create&triggerElementID=createList\"},{\"text\":\"Find a Gift\",\"url\":\"/gcx/Gifts-for-Everyone/gfhz/?_encoding=UTF8&ref_=nav_wishlist_gf\"},{\"subtext\":\"Install Amazon Assistant\",\"text\":\"Save Items from the Web\",\"url\":\"/gp/BIT?ie=UTF8&bitCampaignCode=a0032&ref_=nav_wishlist_bit_v2_a0032\"},{\"text\":\"Wedding Registry\",\"url\":\"/wedding/home?_encoding=UTF8&ref_=nav_wishlist_wr\"},{\"text\":\"Baby Registry\",\"url\":\"/baby-reg/homepage?_encoding=UTF8&ref_=nav_wishlist_br\"},{\"text\":\"Friends & Family Gifting\",\"url\":\"/gp/gift-central/organizer?ie=UTF8&ref_=nav_wishlist_fafgift\"},{\"text\":\"AmazonSmile Charity Lists\",\"url\":\"/gp/clpf?ie=UTF8&ref_=nav_wishlist_smi_se_ya_lll_ll\"},{\"text\":\"Pantry Lists\",\"url\":\"/gp/pantry/yourlists?ie=UTF8&ref_=nav_wishlist_pntry_gno\"},{\"text\":\"Your Hearts\",\"url\":\"/ideas/saves?_encoding=UTF8&ref_=nav_wishlist_strm_in_youtique_lists\"},{\"text\":\"Explore Idea Lists\",\"url\":\"/ideas?_encoding=UTF8&ref_=nav_wishlist_idea_nav\"},{\"text\":\"Explore Showroom\",\"url\":\"/showroom?_encoding=UTF8&ref_=nav_wishlist_srm_your_desk_wl\"},{\"text\":\"Take the Home Style Quiz\",\"url\":\"/stylequiz/?_encoding=UTF8&ref_=nav_wishlist_sq_ya_yl\"}]}},\"url\":\"/gp/registry/wishlist?ie=UTF8&ref_=flyout_yl_header\",\"wlTriggers\":\"57042:165723\"},\"yourAccountContent\":{\"template\":{\"name\":\"itemList\",\"data\":{\"items\":[{\"text\":\"Your Account\",\"url\":\"/gp/css/homepage.html?ie=UTF8&ref_=nav_youraccount_ya\"},{\"text\":\"Your Orders\",\"url\":\"/gp/css/order-history?ie=UTF8&ref_=nav_youraccount_orders\",\"id\":\"nav_prefetch_yourorders\"},{\"text\":\"Your Lists\",\"url\":\"/gp/registry/wishlist?ie=UTF8&ref_=nav_youraccount_wl&requiresSignIn=1\"},{\"text\":\"Your Recommendations\",\"url\":\"/gp/yourstore?ie=UTF8&ref_=nav_youraccount_recs\"},{\"text\":\"Your Subscribe & Save Items\",\"url\":\"/gp/subscribe-and-save/manager/viewsubscriptions?ie=UTF8&ref_=nav_youraccount_sns\"},{\"text\":\"Memberships & Subscriptions\",\"url\":\"/yourmembershipsandsubscriptions?_encoding=UTF8&ref_=nav_youraccount_digital_subscriptions\"},{\"text\":\"Your Service Requests\",\"url\":\"/localservices/ya/servicerequests?_encoding=UTF8&ref_=nav_youraccount_desktop_vas_requestlist\"},{\"text\":\"Your Garage\",\"url\":\"/gp/your-garage/?ie=UTF8&ref_=nav_youraccount_au_pf_as_GNO\"},{\"text\":\"Your Fanshop\",\"url\":\"/fanshop?_encoding=UTF8&ref_=nav_youraccount_yfs\"},{\"text\":\"Your Pets\",\"url\":\"/yourpets?_encoding=UTF8&ref_=nav_youraccount_pet_profiles\"},{\"text\":\"Your Content and Devices\",\"url\":\"/mn/dcw/myx.html?_encoding=UTF8&ref_=nav_youraccount_myk\"},{\"text\":\"Your Music Library\",\"url\":\"/gp/dmusic/mp3/player?ie=UTF8&ref_=nav_youraccount_cldplyr\"},{\"text\":\"Your Amazon Drive\",\"url\":\"/clouddrive?_encoding=UTF8&ref_=nav_youraccount_clddrv\"},{\"text\":\"Your Prime Video\",\"url\":\"/Prime-Instant-Video/s/browse?_encoding=UTF8&node=2676882011&ref_=nav_youraccount_piv\"},{\"text\":\"Your Kindle Unlimited\",\"url\":\"/gp/kindle/ku/ku_central?ie=UTF8&ref_=nav_youraccount_ku\"},{\"text\":\"Your Watchlist\",\"url\":\"/gp/video/watchlist?ie=UTF8&ref_=nav_youraccount_ywl\"},{\"text\":\"Your Video Library\",\"url\":\"/gp/video/library?ie=UTF8&ref_=nav_youraccount_yvl\"},{\"text\":\"Your Android Apps & Devices\",\"url\":\"/gp/mas/your-account/myapps?ie=UTF8&ref_=nav_youraccount_aad\"}]}},\"url\":\"/gp/css/homepage.html?ie=UTF8&ref_=ya\",\"signInHtml\":\"\u003Cdiv id='nav-flyout-ya-signin' class='nav-flyout-content'>\u003Ca href='/gp/navigation/redirector.html/ref=sign-in-redirect?ie=UTF8&amp;associationHandle=usflex&amp;currentPageURL=https%3A%2F%2Fwww.amazon.com%2Fgp%2Fyourstore%2Fhome%3Fie%3DUTF8%26ref_%3Dnav_signin&amp;pageType=&amp;switchAccount=&amp;yshURL=https%3A%2F%2Fwww.amazon.com%2Fgp%2Fyourstore%2Fhome%3Fie%3DUTF8%26ref_%3Dnav_signin' rel='nofollow' class='nav-action-button' data-nav-role='signin' data-nav-ref='nav_signin'>\u003Cspan class='nav-action-inner'>Sign in\u003C/span>\u003C/a>\u003Cdiv id='nav-flyout-ya-newCust' class='nav_pop_new_cust nav-flyout-content'>New customer? \u003Ca href='https://www.amazon.com/ap/register?_encoding=UTF8&amp;openid.assoc_handle=usflex&amp;openid.claimed_id=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.identity=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.mode=checkid_setup&amp;openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0&amp;openid.ns.pape=http%3A%2F%2Fspecs.openid.net%2Fextensions%2Fpape%2F1.0&amp;openid.pape.max_auth_age=0&amp;openid.return_to=https%3A%2F%2Fwww.amazon.com%2Fgp%2Fyourstore%2Fhome%3Fie%3DUTF8%26ref_%3Dnav_newcust' rel='nofollow' class='nav-a'>Start here.\u003C/a>\u003C/div>\u003C/div>\"},\"shopAllContent\":{\"template\":{\"name\":\"itemList\",\"data\":{\"items\":[{\"text\":\"Prime Video\",\"url\":\"/s/browse?_encoding=UTF8&node=2858778011&ref_=nav_shopall-export_nav_mw_sbd_intl_video\"},{\"text\":\"Music, CDs & Vinyl\",\"url\":\"/s/browse?_encoding=UTF8&node=5174&ref_=nav_shopall-export_nav_mw_sbd_intl_cd\"},{\"text\":\"Digital Music\",\"url\":\"/s/browse?_encoding=UTF8&node=163856011&ref_=nav_shopall-export_nav_mw_sbd_intl_music\"},{\"text\":\"Kindle Store\",\"url\":\"/s/browse?_encoding=UTF8&node=133140011&ref_=nav_shopall-export_nav_mw_sbd_intl_kindle\"},{\"text\":\"Arts & Crafts\",\"url\":\"/s/browse?_encoding=UTF8&node=4954955011&ref_=nav_shopall-export_nav_mw_sbd_intl_arts\"},{\"text\":\"Automotive\",\"url\":\"/s/browse?_encoding=UTF8&node=2562090011&ref_=nav_shopall-export_nav_mw_sbd_intl_automotive\"},{\"text\":\"Baby\",\"url\":\"/s/browse?_encoding=UTF8&node=16225005011&ref_=nav_shopall-export_nav_mw_sbd_intl_baby\"},{\"text\":\"Beauty & Personal Care\",\"url\":\"/s/browse?_encoding=UTF8&node=16225006011&ref_=nav_shopall-export_nav_mw_sbd_intl_beauty\"},{\"text\":\"Books\",\"url\":\"/s/browse?_encoding=UTF8&node=283155&ref_=nav_shopall-export_nav_mw_sbd_intl_books\"},{\"text\":\"Computers\",\"url\":\"/s/browse?_encoding=UTF8&node=16225007011&ref_=nav_shopall-export_nav_mw_sbd_intl_computers\"},{\"text\":\"Electronics\",\"url\":\"/s/browse?_encoding=UTF8&node=16225009011&ref_=nav_shopall-export_nav_mw_sbd_intl_electronics\"},{\"text\":\"Women's Fashion\",\"url\":\"/s/browse?_encoding=UTF8&node=16225018011&ref_=nav_shopall-export_nav_mw_sbd_intl_womenfasion\"},{\"text\":\"Men's Fashion\",\"url\":\"/s/browse?_encoding=UTF8&node=16225019011&ref_=nav_shopall-export_nav_mw_sbd_intl_menfasion\"},{\"text\":\"Girls' Fashion\",\"url\":\"/s/browse?_encoding=UTF8&node=16225020011&ref_=nav_shopall-export_nav_mw_sbd_intl_girlfasion\"},{\"text\":\"Boys' Fashion\",\"url\":\"/s/browse?_encoding=UTF8&node=16225021011&ref_=nav_shopall-export_nav_mw_sbd_intl_boyfasion\"},{\"text\":\"Health & Household\",\"url\":\"/s/browse?_encoding=UTF8&node=16225010011&ref_=nav_shopall-export_nav_mw_sbd_intl_health\"},{\"text\":\"Home & Kitchen\",\"url\":\"/s/browse?_encoding=UTF8&node=16225011011&ref_=nav_shopall-export_nav_mw_sbd_intl_kitchen\"},{\"text\":\"Industrial & Scientific\",\"url\":\"/s/browse?_encoding=UTF8&node=16225012011&ref_=nav_shopall-export_nav_mw_sbd_intl_industrial\"},{\"text\":\"Luggage\",\"url\":\"/s/browse?_encoding=UTF8&node=16225017011&ref_=nav_shopall-export_nav_mw_sbd_intl_luggage\"},{\"text\":\"Movies & Television\",\"url\":\"/s/browse?_encoding=UTF8&node=2625373011&ref_=nav_shopall-export_nav_mw_sbd_intl_movies\"},{\"text\":\"Pet Supplies\",\"url\":\"/s/browse?_encoding=UTF8&node=16225013011&ref_=nav_shopall-export_nav_mw_sbd_intl_pet\"},{\"text\":\"Software\",\"url\":\"/s/browse?_encoding=UTF8&node=16225008011&ref_=nav_shopall-export_nav_mw_sbd_intl_software\"},{\"text\":\"Sports & Outdoors\",\"url\":\"/s/browse?_encoding=UTF8&node=16225014011&ref_=nav_shopall-export_nav_mw_sbd_intl_sports\"},{\"text\":\"Tools & Home Improvement\",\"url\":\"/s/browse?_encoding=UTF8&node=256643011&ref_=nav_shopall-export_nav_mw_sbd_intl_tools\"},{\"text\":\"Toys & Games\",\"url\":\"/s/browse?_encoding=UTF8&node=16225015011&ref_=nav_shopall-export_nav_mw_sbd_intl_toys\"},{\"text\":\"Video Games\",\"url\":\"/s/browse?_encoding=UTF8&node=16225016011&ref_=nav_shopall-export_nav_mw_sbd_intl_video_games\"},{\"text\":\"Deals\",\"url\":\"/s/browse?_encoding=UTF8&node=15529609011&ref_=nav_shopall-export_nav_mw_sbd_intl_sales\"}]}}},\"cartContent\":{\"html\":\"\u003Cdiv id='nav-cart-flyout' class='nav-empty nav-flyout-content' data-one='{count} item' data-many='{count} items'>\u003Cdiv class='nav-dynamic-full'>\u003Cdiv id='nav-cart-standard' class='nav-cart-content'>\u003Ca href='/gp/cart/view.html/ref=nav_flyout_viewcart?ie=UTF8&amp;hasWorkingJavascript=1' class='nav-cart-title'>Items in your Cart\u003C/a>\u003Cdiv class='nav-cart-subtitle'>\u003C/div>\u003Cdiv class='nav-cart-items'>\u003C/div>\u003C/div>\u003Cdiv id='nav-cart-pantry' class='nav-cart-content' data-box='{count} box' data-boxes='{count} boxes' data-box-filled='{pct}% filled' data-boxes-filled='{pct}% filled in current box'>\u003Ca href='/gp/cart/view.html/ref=nav_flyout_viewcart?ie=UTF8&amp;hasWorkingJavascript=1' class='nav-cart-title'>Prime Pantry Items\u003C/a>\u003Cdiv class='nav-cart-subtitle'>\u003C/div>\u003Cdiv class='nav-cart-items'>\u003C/div>\u003C/div>\u003Cdiv id='nav-cart-fresh' class='nav-cart-content'>\u003Ca href='/gp/cart/view.html/ref=nav_flyout_viewcart?ie=UTF8&amp;hasWorkingJavascript=1' class='nav-cart-title'>\u003Cimg id='nav-cart-fresh-logo' src='https://images-na.ssl-images-amazon.com/images/G/01/gno/ec-logo-fresh-color._CB305770688_.png'>\u003C/a>\u003Cdiv class='nav-cart-subtitle'>\u003C/div>\u003Cdiv class='nav-cart-items'>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv class='nav-ajax-message'>\u003C/div>\u003Cdiv class='nav-dynamic-empty'>\u003Cp class='nav_p nav-bold nav-cart-empty'> Your Shopping Cart is empty.\u003C/p>\u003Cp class='nav_p '> Give it purpose&mdash;fill it with books, DVDs, clothes, electronics, and more.\u003C/p>\u003Cp class='nav_p '> If you already have an account, \u003Ca href='/gp/navigation/redirector.html/ref=sign-in-redirect?ie=UTF8&associationHandle=usflex&currentPageURL=https%3A%2F%2Fwww.amazon.com%2Fgp%2Fyourstore%2Fhome%3Fie%3DUTF8%26ref_%3Dnav_signin_cart&pageType=&switchAccount=&yshURL=https%3A%2F%2Fwww.amazon.com%2Fgp%2Fyourstore%2Fhome%3Fie%3DUTF8%26ref_%3Dnav_signin_cart' class='nav_a'>sign in\u003C/a>.\u003C/p>\u003C/div>\u003Cdiv class='nav-ajax-error-msg'>\u003Cp class='nav_p nav-bold'> There's a problem previewing your cart right now.\u003C/p>\u003Cp class='nav_p '> Check your Internet connection and \u003Ca href='/gp/cart/view.html/ref=nav_flyout_viewcart?ie=UTF8&hasWorkingJavascript=1' class='nav_a'>go to your cart\u003C/a>, or \u003Ca href='javascript:void(0);' class='nav_a nav-try-again'>try again\u003C/a>.\u003C/p>\u003C/div>\u003Cdiv id='nav-cart-footer'>\u003Ca href='/gp/cart/view.html/ref=nav_flyout_viewcart?ie=UTF8&amp;hasWorkingJavascript=1' id='nav-cart-menu-button' class='nav-action-button'>\u003Cspan class='nav-action-inner'>View Cart\u003Cspan id='nav-cart-menu-button-count' >\u003Cspan id='nav-cart-zero'>(\u003Cspan class='nav-cart-count'>0\u003C/span> items)\u003C/span>\u003Cspan id='nav-cart-one' style='display: none;'>(\u003Cspan class='nav-cart-count'>0\u003C/span> item)\u003C/span>\u003Cspan id='nav-cart-many' style='display: none;'>(\u003Cspan class='nav-cart-count'>0\u003C/span> items)\u003C/span>\u003C/span>\u003C/span>\u003C/a>\u003C/div>\u003C/div>\"},\"signinContent\":{\"html\":\"\u003Cdiv id='nav-signin-tooltip'>\u003Ca href='/gp/navigation/redirector.html/ref=sign-in-redirect?ie=UTF8&amp;associationHandle=usflex&amp;currentPageURL=https%3A%2F%2Fwww.amazon.com%2Fgp%2Fyourstore%2Fhome%3Fie%3DUTF8%26ref_%3Dnav_custrec_signin&amp;pageType=&amp;switchAccount=&amp;yshURL=https%3A%2F%2Fwww.amazon.com%2Fgp%2Fyourstore%2Fhome%3Fie%3DUTF8%26ref_%3Dnav_custrec_signin' class='nav-action-button' data-nav-role='signin' data-nav-ref='nav_custrec_signin'>\u003Cspan class='nav-action-inner'>Sign in\u003C/span>\u003C/a>\u003Cdiv class='nav-signin-tooltip-footer'>New customer? \u003Ca href='https://www.amazon.com/ap/register?_encoding=UTF8&amp;openid.assoc_handle=usflex&amp;openid.claimed_id=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.identity=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.mode=checkid_setup&amp;openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0&amp;openid.ns.pape=http%3A%2F%2Fspecs.openid.net%2Fextensions%2Fpape%2F1.0&amp;openid.pape.max_auth_age=0&amp;openid.return_to=https%3A%2F%2Fwww.amazon.com%2Fgp%2Fyourstore%2Fhome%3Fie%3DUTF8%26ref_%3Dnav_custrec_newcust' class='nav-a'>Start here.\u003C/a>\u003C/div>\u003C/div>\"},\"accountListContent\":{\"html\":\"\u003Cdiv id='nav-al-container'>\u003Cdiv id='nav-al-signin'>\u003Cdiv id='nav-flyout-ya-signin' class='nav-flyout-content'>\u003Ca href='/gp/navigation/redirector.html/ref=sign-in-redirect?ie=UTF8&amp;associationHandle=usflex&amp;currentPageURL=https%3A%2F%2Fwww.amazon.com%2Fgp%2Fyourstore%2Fhome%3Fie%3DUTF8%26ref_%3Dnav_signin&amp;pageType=&amp;switchAccount=&amp;yshURL=https%3A%2F%2Fwww.amazon.com%2Fgp%2Fyourstore%2Fhome%3Fie%3DUTF8%26ref_%3Dnav_signin' rel='nofollow' class='nav-action-button' data-nav-role='signin' data-nav-ref='nav_signin'>\u003Cspan class='nav-action-inner'>Sign in\u003C/span>\u003C/a>\u003Cdiv id='nav-flyout-ya-newCust' class='nav_pop_new_cust nav-flyout-content'>New customer? \u003Ca href='https://www.amazon.com/ap/register?_encoding=UTF8&amp;openid.assoc_handle=usflex&amp;openid.claimed_id=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.identity=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;openid.mode=checkid_setup&amp;openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0&amp;openid.ns.pape=http%3A%2F%2Fspecs.openid.net%2Fextensions%2Fpape%2F1.0&amp;openid.pape.max_auth_age=0&amp;openid.return_to=https%3A%2F%2Fwww.amazon.com%2Fgp%2Fyourstore%2Fhome%3Fie%3DUTF8%26ref_%3Dnav_newcust' rel='nofollow' class='nav-a'>Start here.\u003C/a>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv id='nav-al-wishlist' class='nav-al-column nav-tpl-itemList'>\u003Ca href='/gp/registry/wishlist?ie=UTF8&amp;ref_=flyout_yl_header' class='nav-al-flyout-header' id='nav-al-title'>\u003Cdiv class='nav-title'>Your Lists\u003C/div>\u003C/a>\u003Ca href='/gp/registry/wishlist?ie=UTF8&amp;ref_=nav_wishlist_create&amp;triggerElementID=createList' class='nav-link nav-item'>\u003Cspan class='nav-text'>Create a List\u003C/span>\u003C/a>\u003Ca href='/gcx/Gifts-for-Everyone/gfhz/?_encoding=UTF8&amp;ref_=nav_wishlist_gf' class='nav-link nav-item'>\u003Cspan class='nav-text'>Find a Gift\u003C/span>\u003C/a>\u003Ca href='/gp/BIT?ie=UTF8&amp;bitCampaignCode=a0032&amp;ref_=nav_wishlist_bit_v2_a0032' class='nav-link nav-item'>\u003Cspan class='nav-text'>Save Items from the Web\u003C/span>\u003C/a>\u003Ca href='/wedding/home?_encoding=UTF8&amp;ref_=nav_wishlist_wr' class='nav-link nav-item'>\u003Cspan class='nav-text'>Wedding Registry\u003C/span>\u003C/a>\u003Ca href='/baby-reg/homepage?_encoding=UTF8&amp;ref_=nav_wishlist_br' class='nav-link nav-item'>\u003Cspan class='nav-text'>Baby Registry\u003C/span>\u003C/a>\u003Ca href='/gp/gift-central/organizer?ie=UTF8&amp;ref_=nav_wishlist_fafgift' class='nav-link nav-item'>\u003Cspan class='nav-text'>Friends & Family Gifting\u003C/span>\u003C/a>\u003Ca href='/gp/clpf?ie=UTF8&amp;ref_=nav_wishlist_smi_se_ya_lll_ll' class='nav-link nav-item'>\u003Cspan class='nav-text'>AmazonSmile Charity Lists\u003C/span>\u003C/a>\u003Ca href='/gp/pantry/yourlists?ie=UTF8&amp;ref_=nav_wishlist_pntry_gno' class='nav-link nav-item'>\u003Cspan class='nav-text'>Pantry Lists\u003C/span>\u003C/a>\u003Ca href='/ideas/saves?_encoding=UTF8&amp;ref_=nav_wishlist_strm_in_youtique_lists' class='nav-link nav-item'>\u003Cspan class='nav-text'>Your Hearts\u003C/span>\u003C/a>\u003Ca href='/ideas?_encoding=UTF8&amp;ref_=nav_wishlist_idea_nav' class='nav-link nav-item'>\u003Cspan class='nav-text'>Explore Idea Lists\u003C/span>\u003C/a>\u003Ca href='/showroom?_encoding=UTF8&amp;ref_=nav_wishlist_srm_your_desk_wl' class='nav-link nav-item'>\u003Cspan class='nav-text'>Explore Showroom\u003C/span>\u003C/a>\u003Ca href='/stylequiz/?_encoding=UTF8&amp;ref_=nav_wishlist_sq_ya_yl' class='nav-link nav-item'>\u003Cspan class='nav-text'>Take the Home Style Quiz\u003C/span>\u003C/a>\u003C/div>\u003Cdiv id='nav-al-your-account' class='nav-al-column nav-template nav-flyout-content nav-tpl-itemList'>\u003Ca href='/gp/css/homepage.html?ie=UTF8&amp;ref_=ya' class='nav-al-flyout-header'>\u003Cdiv class='nav-title'>Your Account\u003C/div>\u003C/a>\u003Ca href='/gp/css/homepage.html?ie=UTF8&amp;ref_=nav_youraccount_ya' class='nav-link nav-item'>\u003Cspan class='nav-text'>Your Account\u003C/span>\u003C/a>\u003Ca href='/gp/css/order-history?ie=UTF8&amp;ref_=nav_youraccount_orders' class='nav-link nav-item' id='nav_prefetch_yourorders'>\u003Cspan class='nav-text'>Your Orders\u003C/span>\u003C/a>\u003Ca href='/gp/registry/wishlist?ie=UTF8&amp;ref_=nav_youraccount_wl&amp;requiresSignIn=1' class='nav-link nav-item'>\u003Cspan class='nav-text'>Your Lists\u003C/span>\u003C/a>\u003Ca href='/gp/yourstore?ie=UTF8&amp;ref_=nav_youraccount_recs' class='nav-link nav-item'>\u003Cspan class='nav-text'>Your Recommendations\u003C/span>\u003C/a>\u003Ca href='/gp/subscribe-and-save/manager/viewsubscriptions?ie=UTF8&amp;ref_=nav_youraccount_sns' class='nav-link nav-item'>\u003Cspan class='nav-text'>Your Subscribe & Save Items\u003C/span>\u003C/a>\u003Ca href='/yourmembershipsandsubscriptions?_encoding=UTF8&amp;ref_=nav_youraccount_digital_subscriptions' class='nav-link nav-item'>\u003Cspan class='nav-text'>Memberships & Subscriptions\u003C/span>\u003C/a>\u003Ca href='/localservices/ya/servicerequests?_encoding=UTF8&amp;ref_=nav_youraccount_desktop_vas_requestlist' class='nav-link nav-item'>\u003Cspan class='nav-text'>Your Service Requests\u003C/span>\u003C/a>\u003Ca href='/gp/your-garage/?ie=UTF8&amp;ref_=nav_youraccount_au_pf_as_GNO' class='nav-link nav-item'>\u003Cspan class='nav-text'>Your Garage\u003C/span>\u003C/a>\u003Ca href='/fanshop?_encoding=UTF8&amp;ref_=nav_youraccount_yfs' class='nav-link nav-item'>\u003Cspan class='nav-text'>Your Fanshop\u003C/span>\u003C/a>\u003Ca href='/yourpets?_encoding=UTF8&amp;ref_=nav_youraccount_pet_profiles' class='nav-link nav-item'>\u003Cspan class='nav-text'>Your Pets\u003C/span>\u003C/a>\u003Ca href='/mn/dcw/myx.html?_encoding=UTF8&amp;ref_=nav_youraccount_myk' class='nav-link nav-item'>\u003Cspan class='nav-text'>Your Content and Devices\u003C/span>\u003C/a>\u003Ca href='/gp/dmusic/mp3/player?ie=UTF8&amp;ref_=nav_youraccount_cldplyr' class='nav-link nav-item'>\u003Cspan class='nav-text'>Your Music Library\u003C/span>\u003C/a>\u003Ca href='/clouddrive?_encoding=UTF8&amp;ref_=nav_youraccount_clddrv' class='nav-link nav-item'>\u003Cspan class='nav-text'>Your Amazon Drive\u003C/span>\u003C/a>\u003Ca href='/Prime-Instant-Video/s/browse?_encoding=UTF8&amp;node=2676882011&amp;ref_=nav_youraccount_piv' class='nav-link nav-item'>\u003Cspan class='nav-text'>Your Prime Video\u003C/span>\u003C/a>\u003Ca href='/gp/kindle/ku/ku_central?ie=UTF8&amp;ref_=nav_youraccount_ku' class='nav-link nav-item'>\u003Cspan class='nav-text'>Your Kindle Unlimited\u003C/span>\u003C/a>\u003Ca href='/gp/video/watchlist?ie=UTF8&amp;ref_=nav_youraccount_ywl' class='nav-link nav-item'>\u003Cspan class='nav-text'>Your Watchlist\u003C/span>\u003C/a>\u003Ca href='/gp/video/library?ie=UTF8&amp;ref_=nav_youraccount_yvl' class='nav-link nav-item'>\u003Cspan class='nav-text'>Your Video Library\u003C/span>\u003C/a>\u003Ca href='/gp/mas/your-account/myapps?ie=UTF8&amp;ref_=nav_youraccount_aad' class='nav-link nav-item'>\u003Cspan class='nav-text'>Your Android Apps & Devices\u003C/span>\u003C/a>\u003C/div>\u003C/div>\"},\"templates\":{\"asin-promo\":\"\u003Ca href='\u003C#=destination #>' class='nav_asin_promo'>  \u003Cimg src='\u003C#=image #>' class='nav_asin_promo_img'/>  \u003Cspan class='nav_asin_promo_headline'>\u003C#=headline #>\u003C/span>  \u003Cspan class='nav_asin_promo_info'>    \u003Cspan class='nav_asin_promo_title'>\u003C#=productTitle #>\u003C/span>    \u003Cspan class='nav_asin_promo_title2'>\u003C#=productTitle2 #>\u003C/span>    \u003Cspan class='nav_asin_promo_price'>\u003C#=price #>\u003C/span>  \u003C/span>  \u003Cspan class='nav_asin_promo_button nav-sprite'>\u003C#=button #>\u003C/span>\u003C/a>\",\"discoveryPanelList\":\"\u003C# var renderItems = function(items) { #>    \u003Cspan class='nav-dp-title nav-item'>    Deliveries at a glance    \u003Cdiv class='nav-divider-container'>\u003Cdiv class='nav-divider'>\u003C/div>\u003C/div>\u003C/span>    \u003C# jQuery.each(items, function (i, item) { #>        \u003Cspan class='nav-item'>            \u003Ca href='\u003C#=item.order_link#>' class='nav-dp-link'>                \u003Cspan class='nav-dp-left-column'>                    \u003Cimg src='\u003C#=item.image#>' class='nav-dp-image'/>                \u003C/span>                \u003Cspan class='nav-dp-right-column'>                    \u003Cspan class='nav-dp-text \u003C#=item.status#>'>                        \u003C#=item.status_text#>                        \u003Cbr/>                    \u003C/span>                    \u003C# if(item.secondary_status_text) { #>                        \u003Cspan class='nav-dp-text-secondary \u003C#=item.status#>'>                            \u003C#=item.secondary_status_text#>                        \u003C/span>                    \u003C# } #>                \u003C/span>            \u003C/a>            \u003Cdiv class='nav-divider-container'>\u003Cdiv class='nav-divider'>\u003C/div>\u003C/div>        \u003C/span>  \u003C# }); #>  \u003Ca href='/your-orders/ref=nav_dp_ayo' class='nav-dp-link-emphasis'>      View all orders  \u003C/a>\u003C# }; #>\u003C# renderItems(items); #>\",\"itemList\":\"\u003C# var hasColumns = (function () {  var checkColumns = function (_items) {    if (!_items) {      return false;    }    for (var i=0; i\u003C_items.length; i++) {      if (_items[i].columnBreak || (_items[i].items && checkColumns(_items[i].items))) {        return true;      }    }    return false;  };  return checkColumns(items);}()); #>\u003C# if(hasColumns) { #>  \u003C# if(items[0].image && items[0].image.src) { #>    \u003Cdiv class='nav-column nav-column-first nav-column-image'>  \u003C# } else if (items[0].greeting) { #>    \u003Cdiv class='nav-column nav-column-first nav-column-greeting'>  \u003C# } else { #>    \u003Cdiv class='nav-column nav-column-first'>  \u003C# } #>\u003C# } #>\u003C# var renderItems = function(items) { #>  \u003C# jQuery.each(items, function (i, item) { #>    \u003C# if(hasColumns && item.columnBreak) { #>      \u003C# if(item.image && item.image.src) { #>        \u003C/div>\u003Cdiv class='nav-column nav-column-notfirst nav-column-break nav-column-image'>      \u003C# } else if (item.greeting) { #>        \u003C/div>\u003Cdiv class='nav-column nav-column-notfirst nav-column-break nav-column-greeting'>      \u003C# } else { #>        \u003C/div>\u003Cdiv class='nav-column nav-column-notfirst nav-column-break'>      \u003C# } #>    \u003C# } #>    \u003C# if(item.dividerBefore) { #>      \u003Cdiv class='nav-divider'>\u003C/div>    \u003C# } #>    \u003C# if(item.text || item.content) { #>      \u003C# if(item.url) { #>        \u003Ca href='\u003C#=item.url #>' class='nav-link      \u003C# } else {#>        \u003Cspan class='      \u003C# } #>      \u003C# if(item.panelKey) { #>        nav-hasPanel      \u003C# } #>      \u003C# if(item.items) { #>        nav-title      \u003C# } #>      \u003C# if(item.decorate == 'carat') { #>        nav-carat      \u003C# } #>      \u003C# if(item.decorate == 'nav-action-button') { #>        nav-action-button      \u003C# } #>      nav-item'      \u003C# if(item.extra) { #>        \u003C#=item.extra #>      \u003C# } #>      \u003C# if(item.id) { #>        id='\u003C#=item.id #>'      \u003C# } #>      \u003C# if(item.dataNavRole) { #>        data-nav-role='\u003C#=item.dataNavRole #>'      \u003C# } #>      \u003C# if(item.dataNavRef) { #>        data-nav-ref='\u003C#=item.dataNavRef #>'      \u003C# } #>      \u003C# if(item.panelKey) { #>        data-nav-panelkey='\u003C#=item.panelKey #>'        role='navigation'        aria-label='\u003C#=item.text#>'      \u003C# } #>      \u003C# if(item.subtextKey) { #>        data-nav-subtextkey='\u003C#=item.subtextKey #>'      \u003C# } #>      \u003C# if(item.image && item.image.height > 16) { #>        style='line-height:\u003C#=item.image.height #>px;'      \u003C# } #>      >      \u003C# if(item.decorate == 'carat') { #>        \u003Ci class='nav-icon'>\u003C/i>      \u003C# } #>      \u003C# if(item.image && item.image.src) { #>        \u003Cimg class='nav-image' src='\u003C#=item.image.src #>' style='height:\u003C#=item.image.height #>px; width:\u003C#=item.image.width #>px;' />      \u003C# } #>      \u003C# if(item.text) { #>        \u003Cspan class='nav-text\u003C# if(item.classname) { #> \u003C#=item.classname #>\u003C# } #>'>\u003C#=item.text#>\u003C# if(item.badgeText) { #>          \u003Cspan class='nav-badge'>\u003C#=item.badgeText#>\u003C/span>        \u003C# } #>\u003C/span>      \u003C# } else if (item.content) { #>        \u003Cspan class='nav-content'>\u003C# jQuery.each(item.content, function (j, cItem) { #>\u003C# if(cItem.url && cItem.text) { #>\u003Ca href='\u003C#=cItem.url #>' class='nav-a'>\u003C#=cItem.text #>\u003C/a>\u003C# } else if (cItem.text) { #>\u003C#=cItem.text#>\u003C# } #>\u003C# }); #>\u003C/span>      \u003C# } #>      \u003C# if(item.subtext) { #>        \u003Cspan class='nav-subtext'>\u003C#=item.subtext #>\u003C/span>      \u003C# } #>      \u003C# if(item.url) { #>        \u003C/a>      \u003C# } else {#>        \u003C/span>      \u003C# } #>    \u003C# } #>    \u003C# if(item.image && item.image.src) { #>      \u003C# if(item.url) { #>        \u003Ca href='\u003C#=item.url #>'>       \u003C# } #>      \u003Cimg class='nav-image'      \u003C# if(item.id) { #>        id='\u003C#=item.id #>'      \u003C# } #>      src='\u003C#=item.image.src #>' \u003C# if (item.alt) { #> alt='\u003C#= item.alt #>'\u003C# } #>/>      \u003C# if(item.url) { #>        \u003C/a>       \u003C# } #>    \u003C# } #>    \u003C# if(item.items) { #>      \u003Cdiv class='nav-panel'> \u003C# renderItems(item.items); #> \u003C/div>    \u003C# } #>  \u003C# }); #>\u003C# }; #>\u003C# renderItems(items); #>\u003C# if(hasColumns) { #>  \u003C/div>\u003C# } #>\",\"notificationsList\":\"\u003Cdiv class='nav-item nav-title'>  Notifications\u003C/div>\u003C# jQuery.each(items || [], function (i, item) { #>  \u003Cdiv class='nav-item\u003C# if (item.type) { #> nav-noti-list-\u003C#= item.type #>\u003C# } #>\u003C# if (item.image && item.image.src) { #> nav-noti-list-with-image\u003C# } #>'>    \u003C# if (item.dismissId) { #>      \u003Cdiv class='nav-noti-list-x' data-noti-id='\u003C#= item.dismissId #>'>&times;\u003C/div>    \u003C# } #>    \u003C# if (item.image && item.image.src) { #>      \u003Cdiv class='nav-noti-list-image'>        \u003Cimg class='nav-noti-list-image-tag' src='\u003C#= item.image.src #>' \u003C# if (item.image.alt) { #> alt='\u003C#= item.image.alt #>'\u003C# } #> \u003C# if (item.image.title) { #> title='\u003C#= item.image.title #>'\u003C# } #>/>      \u003C/div>    \u003C# } #>    \u003C# if (item.heading) { #>      \u003Cdiv class='nav-noti-list-heading'>\u003C#= item.heading #>\u003C/div>    \u003C# } #>    \u003C# jQuery.each(item.content || [], function (j, itemContent) { #>      \u003C# if (itemContent.url) { #>        \u003Ca href='\u003C#= itemContent.url #>' class='nav-noti-list-content'>      \u003C# } else { #>        \u003Cdiv class='nav-noti-list-content'>      \u003C# } #>        \u003C# if (itemContent.text) { #>          \u003Cspan class='nav-noti-list-text'>\u003C#= itemContent.text #>\u003C/span>        \u003C# } #>        \u003C# if (itemContent.subtext) { #>          \u003Cspan class='nav-noti-list-subtext'>\u003C#= itemContent.subtext #>\u003C/span>        \u003C# } #>      \u003C# if (itemContent.url) { #>        \u003C/a>      \u003C# } else { #>        \u003C/div>      \u003C# } #>    \u003C# }); #>  \u003C/div>\u003C# }); #>\",\"discoveryPanelSummary\":\"    \u003Cspan class='nav-dp-title nav-item'>    Deliveries at a glance    \u003Cdiv class='nav-divider-container'>\u003Cdiv class='nav-divider'>\u003C/div>\u003C/div>\u003C/span>    \u003C# jQuery.each(items || [], function (i, item) { #>        \u003Cspan class='nav-item'>            \u003Cspan class='nav-dp-left-column'>                \u003Cimg src='\u003C#=item.image.url#>' class='nav-dp-image' height='\u003C#=item.image.height#>'/>            \u003C/span>            \u003Cspan class='nav-dp-right-column'>                \u003C#=item.status_text#>                \u003Cdiv class='nav-dp-secondary-row'>                    \u003Ca href='/your-orders/ref=nav_dp_ryo' class='nav-dp-link-emphasis'>                        Sign in to view orders                    \u003C/a>                \u003C/div>            \u003C/span>        \u003C/span>    \u003C# }); #>\",\"htmlList\":\"  \u003C# jQuery.each(items, function (i, item) { #>    \u003Cdiv class='nav-item'>      \u003C#=item #>    \u003C/div>  \u003C# }); #>\",\"subnav\":\"\u003C# if (obj && obj.type === 'vertical') { #>  \u003C# jQuery.each(obj.rows, function (i, row) { #>    \u003C# if (row.flyoutElement === 'button') { #>      \u003Cdiv class='nav_sv_fo_v_button'        \u003C# if (row.elementStyle) { #>          style='\u003C#= row.elementStyle #>'        \u003C# } #>      >        \u003Ca href='\u003C#=row.url #>' class='nav-action-button nav-sprite'>          \u003C#=row.text #>        \u003C/a>      \u003C/div>    \u003C# } else if (row.flyoutElement === 'list' && row.list) { #>      \u003C# jQuery.each(row.list, function (j, list) { #>        \u003Cdiv class='nav_sv_fo_v_column \u003C#=(j === 0) ? 'nav_sv_fo_v_first' : '' #>'>          \u003Cul class='\u003C#=list.elementClass #>'>          \u003C# jQuery.each(list.linkList, function (k, link) { #>            \u003C# if (k === 0) { link.elementClass += ' nav_sv_fo_v_first'; } #>            \u003Cli class='\u003C#=link.elementClass #>'>              \u003C# if (link.url) { #>                \u003Ca href='\u003C#=link.url #>' class='nav_a'>\u003C#=link.text #>\u003C/a>              \u003C# } else { #>                \u003Cspan class='nav_sv_fo_v_span'>\u003C#=link.text #>\u003C/span>              \u003C# } #>            \u003C/li>          \u003C# }); #>          \u003C/ul>        \u003C/div>      \u003C# }); #>    \u003C# } else if (row.flyoutElement === 'link') { #>      \u003C# if (row.topSpacer) { #>        \u003Cdiv class='nav_sv_fo_v_clear'>\u003C/div>      \u003C# } #>      \u003Cdiv class='\u003C#=row.elementClass #>'>        \u003Ca href='\u003C#=row.url #>' class='nav_sv_fo_v_lmargin nav_a'>          \u003C#=row.text #>        \u003C/a>      \u003C/div>    \u003C# } #>  \u003C# }); #>\u003C# } else if (obj) { #>  \u003Cdiv class='nav_sv_fo_scheduled'>    \u003C#= obj #>  \u003C/div>\u003C# } #>\",\"wishlist\":\"\u003C# jQuery.each(wishlist, function (i, item) { #>  \u003Cli class='nav_pop_li'>    \u003Ca href='\u003C#=item.url #>' class='nav_a'>      \u003C#=item.name #>    \u003C/a>    \u003Cdiv class='nav_tag'>      \u003C!-- TODO this logic should now be in dynamic-wish-list.mi -->      \u003C# if(typeof item.count !='undefined') { #>        \u003C#=          (item.count == 1 ? '{count} item' : '{count} items')            .replace('{count}', item.count)        #>      \u003C# } #>    \u003C/div>  \u003C/li>\u003C# }); #>\",\"cart\":\"\u003C# jQuery.each(items, function (i, item) { #>  \u003Cdiv class='nav-cart-item'>    \u003Ca href='\u003C#=item.url #>' class='nav-cart-item-link'>      \u003Cimg src='\u003C#=item.img #>' class='nav-cart-item-image' />      \u003Cspan class='nav-cart-item-title'>\u003C#=item.name #>\u003C/span>      \u003C# if (item.weight) { #>        \u003Cspan class='nav-cart-item-weight' style='display:none;'>          \u003C#= 'Ship weight: {value} {unit}'.replace('{value}', item.weight.value).replace('{unit}', item.weight.unit) #>        \u003C/span>      \u003C# } #>      \u003C# if (item.ourPrice) { #>        \u003Cspan class='nav-cart-item-buyingPrice'>\u003C#=item.ourPrice #>\u003C/span>      \u003C# } #>      \u003C# if (item.scarcityMessage) { #>        \u003Cspan class='\u003C#=item.scarcityClass #>'>\u003C#=item.scarcityMessage #>\u003C/span>      \u003C# } #>      \u003Cspan class='nav-cart-item-quantity'>        \u003C#= 'Quantity: {count}'.replace('{count}', item.qty) #>      \u003C/span>    \u003C/a>  \u003C/div>  \u003C# if (i%2==1) { #>    \u003Cdiv class='nav-cart-item-break'>\u003C/div>  \u003C# } #>\u003C# }); #>\u003Cdiv class='nav-cart-item-break'>\u003C/div>\"}}); });\n\u003C/script>\n\n  \u003Cscript type=\"text/javascript\">\n      window.$Nav && $Nav.declare('config.prefetchUrls', [\"https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/images/amazon_logo_no-org_mid._CB153387053_.png\",\"https://images-na.ssl-images-amazon.com/images/G/01/authportal/common/images/amznbtn-sprite03._CB395592492_.png\",\"https://images-na.ssl-images-amazon.com/images/G/01/authportal/flex/reduced-nav/ap-flex-reduced-nav-2.0._CB309092102_.js\",\"https://images-na.ssl-images-amazon.com/images/G/01/authportal/flex/reduced-nav/ap-flex-reduced-nav-2.1._CB343920894_.css\",\"https://images-na.ssl-images-amazon.com/images/G/01/gno/sprites/nav-sprite-global_bluebeacon-1x_optimized_layout1._CB468670774_.png\",\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/buttons/sign-in-secure._CB192194766_.gif\",\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/login/fwcim._CB454428048_.js\",\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/transparent-pixel._CB386942464_.gif\"]);\nwindow.$Nav && $Nav.declare('config.prefetch',function() {\n    var pUrls = window.$Nav.getNow('config.prefetchUrls');\n    (window.AmazonUIPageJS ? AmazonUIPageJS : P).when('A').execute(function (A) { A.preload(pUrls); });\n});\n\n  /*  */\n  \n(window.AmazonUIPageJS ? AmazonUIPageJS : P).when('A').execute(function(A){\n  if(A.preload){\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/41AnM0WSfWL._RC|71UWkiiJbeL.js,61om8hpg0-L.js,41W9ohA0e+L.js,11vrNkbdcvL.js,21SHd9g2LAL.js,31xiyyWg1kL.js,51+klsvwgqL.js,31s6nx4RntL.js_.js?AUIClients/AmazonNavigationDesktopMetaAsset#desktop');\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/21kpNOwB5dL._RC|71IGFd-taTL.css,11WnO6PP7GL.css,31X8VRHy8QL.css,21+aU+R3IiL.css,31wWWC6YAvL.css,11G4HxMtMSL.css,31OvHRW+XiL.css,01XHMOHpK1L.css_.css?AUIClients/AmazonNavigationDesktopMetaAsset#desktop');\n  }\n});\n\n\n\n\n    window.$Nav && $Nav.declare('config.flyoutURL', null);\n    window.$Nav && $Nav.declare('btf.lite');\n    window.$Nav && $Nav.declare('btf.full');\n    window.$Nav && $Nav.declare('btf.exists');\n    (window.AmazonUIPageJS ? AmazonUIPageJS : P).register('navCF');\n  \u003C/script>\n\n    \n\n\n\n\n\n\n\n\n\n\n\u003Cscript type=\"text/javascript\">\n    window.$Nav && $Nav.when('$').run('CAMarketplaceRedirectOverlay',function($) {\n        $.ajax({\n            type: 'POST',\n            url: '/gp/redirection/canada.html',\n            data: {\n                path: '/dp/B06XD3LXXK',\n                queryString: '?ie=UTF8',\n                pageType: 'Detail',\n                referer: ''\n            },\n            success: function(data) {\n                if (data) {\n                    $('body').append(data);\n                }\n            }\n        });\n    });\n\u003C/script>\n\n\n\n\n\n\n\n\n\n\n\u003Cscript type=\"text/javascript\">\n    window.$Nav && $Nav.when('$', 'page.ready').run('MXMarketplaceRedirectOverlay',function($) {\n        $.ajax({\n            type: 'POST',\n            url: '/gp/redirection/mexico.html/137-0530487-6192152',\n            data: {\n                path: '/dp/B06XD3LXXK',\n                queryString: '?ie=UTF8',\n                pageType: 'Detail',\n                 referer: ''\n            },\n            success: function(data) {\n                if (data) {\n                    $('body').append(data);\n                }\n            }\n        });\n    });\n\u003C/script>\n\n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n    \u003Clink rel=\"stylesheet\" type=\"text/css\" href=\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/redirect-overlay/redirect-overlay-nav-https-20190717._CB442365648_.css\">\n    \u003C!--[if lte IE 9]>\u003Clink rel=\"stylesheet\" type=\"text/css\" href=\"https://images-na.ssl-images-amazon.com/images/G/01/x-locale/redirect-overlay/redirect-overlay-lte-ie9._CB336734515_.css\">\u003C![endif]-->\n\n\n\u003Cscript type=\"text/javascript\">\n    window.$Nav && $Nav.when('$').run('AUMarketplaceRedirectOverlay',function($) {\n        $.ajax({\n            type: 'POST',\n            url: '/gp/redirection/australia.html',\n            data: {\n                path: '/dp/B06XD3LXXK',\n                queryString: '?ie=UTF8',\n                pageType: 'Detail',\n                referer: ''\n            },\n            success: function(data) {\n                if (data) {\n                    $('body').append(data);\n                }\n            }\n        });\n    });\n\u003C/script>\n\n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cform style=\"display: none;\">\n  \u003Cinput type=\"hidden\" id=\"rwol-display-called\" value=\"1\">\n\u003C/form>\n\n    \u003Cscript type=\"a-state\" data-a-state=\"{&quot;key&quot;:&quot;rw-dynamic-modal-bootstrap&quot;}\">{\"origSessionId\":\"137-0530487-6192152\",\"subPageType\":null,\"pageType\":\"Detail\",\"ASIN\":\"B06XD3LXXK\",\"path\":\"/dp/B06XD3LXXK\",\"isAUI\":\"1\"}\u003C/script>\n      \n\n      \u003Cscript>\n(window.AmazonUIPageJS ? AmazonUIPageJS : P).when('navCF').execute(function(){\n  (window.AmazonUIPageJS ? AmazonUIPageJS : P).load.js('https://images-na.ssl-images-amazon.com/images/I/11VbV%2B%2BKhQL.js?AUIClients/RetailWebsiteOverlayAUIAssets');\n});\n\u003C/script>\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cscript type=\"text/javascript\">\n  window.$Nav && window.$Nav.build('PldnLocalStorage', function() {\n    var PldnLocalStorage = function() {};\n\n    PldnLocalStorage.prototype.setItem = function(key, obj) {\n      if (typeof obj !== 'string') {\n        obj = window.JSON && window.JSON.stringify(obj);\n      }\n\n      try {\n        window.localStorage && window.localStorage.setItem(key, obj);\n        return true;\n      } catch (exception) {\n        return false;\n      };\n    };\n\n    PldnLocalStorage.prototype.getItem = function(key) {\n      try {\n        return window.localStorage && window.localStorage.getItem(key);\n      } catch(exception) {};\n    };\n\n    return new PldnLocalStorage();\n  });\n\n  window.$Nav && window.$Nav.when('PldnLocalStorage').run('PldnUcolCheck', function(storage) {\n    if (!storage.getItem('amazonSmileCampaigns')) {\n      storage.setItem('amazonSmileCampaigns', {\n        \"ucol\": {\n          \"optOut\": false,\n          \"hits\": [\n            {\n              \"date\": new Date(),\n              \"redirect\": false,\n              \"optOut\": false\n            }\n          ]\n        }\n      });\n    }\n  });\n\u003C/script>\n\u003C!-- btf tilu -->\n\n\n\u003C!-- sp:feature:host-btf -->\n\n\n  \u003C/div>\n\n  \u003C/div>\n\n\u003C!-- htmlEndMarker -->\n\n\n\n\n\n\n\n\n\n\n\n\u003C!-- sp:end-feature:host-btf -->\n\u003C!-- sp:feature:aui-preload -->\n\u003Cscript>\n(window.AmazonUIPageJS ? AmazonUIPageJS : P).when('A').execute(function(A) {\n  if(A.preload){\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/614ihxQDWpL._RC|11-BZEJ8lnL.js,61GQ9IdK7HL.js,21Of0-9HPCL.js,012FVc3131L.js,119KAWlHU6L.js,51xL2QLv4YL.js,11AHlQhPRjL.js,016iHgpF74L.js,11aNYFFS5hL.js,116tgw9TSaL.js,211-p4GRUCL.js,01PoLXBDXWL.js,61UCC86QXoL.js,11BOgvnnntL.js,31UWuPgtTtL.js,01rpauTep4L.js,01iyxuSGj4L.js,01oGoEUF1PL.js_.js?AUIClients/AmazonUI#218320-T1.192338-T1.202051-T1');\n    A.preload('https://images-na.ssl-images-amazon.com/images/I/517rp2NH2UL._RC|516fcOUE-HL.css,01evdoiemkL.css,01K+Ps1DeEL.css,31pdJv9iSzL.css,01tgK36lpGL.css,11UGC+GXOPL.css,21LK7jaicML.css,11L58Qpo0GL.css,21kyTi1FabL.css,01Xl9KigtzL.css,01YhS3Cs-hL.css,21GwE3cR-yL.css,019SHZnt8RL.css,01wAWQRgXzL.css,21bWcRJYNIL.css,11WgRxUdJRL.css,01dU8+SPlFL.css,11ocrgKoE-L.css,01SHjPML6tL.css,111-D2qRjiL.css,01QrWuRrZ-L.css,310Imb6LqFL.css,11Z1a0FxSIL.css,01cbS3UK11L.css,21mOLw+nYYL.css,01L8Y-JFEhL.css_.css?AUIClients/AmazonUI#us.not-trident.218320-T1');\n  }\n});\n\u003C/script>\n\u003C!-- sp:feature:nav-footer -->\n\u003C!-- footer pilu -->\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"rhf\" class=\"copilot-secure-display\" style=\"clear:both\" role=\"complementary\" aria-label=\"Your recently viewed items and featured recommendations\">\n\n    \u003Cdiv class=\"rhf-frame\" style=\"display:none\">\n        \u003Cbr>\n        \u003Cdiv id=\"rhf-container\">\n\n\n\n\n\n\n    \u003Cdiv class=\"rhf-loading-outer\">\n        \u003Ctable class=\"rhf-loading-middle\">\n            \u003Ctbody>\u003Ctr>\n                \u003Ctd class=\"rhf-loading-inner\">\n                    \u003Cimg src=\"https://images-na.ssl-images-amazon.com/images/G/01/personalization/ybh/loading-4x-gray._CB317976265_.gif\">\n                \u003C/td>\n            \u003C/tr>\n        \u003C/tbody>\u003C/table>\n    \u003C/div>\n\n\n\n\n\n\n\n\n\u003Cdiv id=\"rhf-context\">\n    \u003Cscript type=\"application/json\">\n        {\"rhfHandlerParams\":{\"rhfAsins\":\"\",\"noP13NCache\":\"\",\"weblabTriggers\":\"\",\"auiDebug\":\"\",\"keywords\":\"\",\"k\":\"\",\"rviAsins\":\"\",\"url\":\"\",\"parentSession\":\"137-0530487-6192152\",\"rhfState\":\"\",\"contextMetadataOverride\":\"\",\"currentSubPageType\":null,\"field-keywords\":\"\",\"relatedRequestId\":\"WY2K06V7WEMKTC0K2H7W\",\"recsAsins\":\"\",\"excludeASIN\":\"QjA2WEQzTFhYSw==\",\"auditEnabled\":\"\",\"customerId\":\"\",\"testRecsFailure\":\"\",\"previewCampaigns\":\"\",\"forceWidgets\":\"\",\"currentPageType\":\"Detail\",\"stringDebug\":\"\"},\"subPageType\":null,\"requestId\":\"WY2K06V7WEMKTC0K2H7W\",\"sessionId\":\"137-0530487-6192152\",\"customerId\":\"\",\"pageType\":\"Detail\",\"ybhHandlerParams\":{\"relatedRequestId\":\"WY2K06V7WEMKTC0K2H7W\",\"currentPageType\":\"Detail\",\"parentSession\":\"137-0530487-6192152\"}}\n    \u003C/script>\n\u003C/div>\n\n\u003C/div>\u003Cnoscript>\n\n\u003Cdiv class=\"rhf-border\">\n\n        \u003Cdiv class=\"rhf-header\">\n        Your recently viewed items and featured recommendations\n    \u003C/div>\n\n\u003Cdiv class=\"rhf-footer\">\n    \u003Cdiv class=\"rvi-container\">\n\n\u003Cdiv class=\"ybh-edit\">\n    \u003Cdiv class=\"ybh-edit-arrow\"> &#8250; \u003C/div>\n    \u003Cdiv class=\"ybh-edit-link\">\u003Ca href=\"/gp/yourstore/pym/ref=pd_pyml_rhf/137-0530487-6192152\">View or edit your browsing history\u003C/a>\u003C/div>\n\u003C/div>\n        \u003Cspan class=\"no-rvi-message\">After viewing product detail pages, look here to find an easy way to navigate back to pages you are interested in.\u003C/span>\n    \u003C/div>\n\u003C/div>\n\u003C/div>\n\u003C/noscript>\u003Cdiv id=\"rhf-error\" style=\"display:none;\">\n\n\u003Cdiv class=\"rhf-border\">\n\n        \u003Cdiv class=\"rhf-header\">\n        Your recently viewed items and featured recommendations\n    \u003C/div>\n\n\u003Cdiv class=\"rhf-footer\">\n    \u003Cdiv class=\"rvi-container\">\n\n\u003Cdiv class=\"ybh-edit\">\n    \u003Cdiv class=\"ybh-edit-arrow\"> › \u003C/div>\n    \u003Cdiv class=\"ybh-edit-link\">\u003Ca href=\"/gp/yourstore/pym/ref=pd_pyml_rhf/137-0530487-6192152\">View or edit your browsing history\u003C/a>\u003C/div>\n\u003C/div>\n        \u003Cspan class=\"no-rvi-message\">After viewing product detail pages, look here to find an easy way to navigate back to pages you are interested in.\u003C/span>\n    \u003C/div>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n        \u003Cbr>\n    \u003C/div>\n\u003C/div>\n\n\u003Cdiv class=\"navLeftFooter nav-sprite-v1\" id=\"navFooter\">\u003Ca href=\"#nav-top\" id=\"navBackToTop\">\u003Cdiv class=\"navFooterBackToTop\">\u003Cspan class=\"navFooterBackToTopText\">Back to top\u003C/span>\u003C/div>\u003C/a>\n\n\u003Cdiv class=\"navFooterVerticalColumn navAccessibility\" role=\"presentation\">\u003Cdiv class=\"navFooterVerticalRow navAccessibility\" style=\"display: table-row;\">\u003Cdiv class=\"navFooterLinkCol navAccessibility\">\u003Cdiv class=\"navFooterColHead\">Get to Know Us\u003C/div>\u003Cul>\u003Cli class=\"nav_first\">\u003Ca href=\"https://www.amazon.jobs\" class=\"nav_a\">Careers\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"https://blog.aboutamazon.com/?utm_source=gateway&amp;utm_medium=footer\" class=\"nav_a\">Blog\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"https://www.aboutamazon.com/?utm_source=gateway&amp;utm_medium=footer\" class=\"nav_a\">About Amazon\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"https://www.amazon.com/ir\" class=\"nav_a\">Investor Relations\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"/amazon-devices/b?ie=UTF8&amp;node=2102313011&amp;ref_=footer_devices\" class=\"nav_a\">Amazon Devices\u003C/a>\u003C/li>\u003Cli class=\"nav_last\">\u003Ca href=\"https://www.aboutamazon.com/amazon-fulfillment-center-tours?utm_source=gateway&amp;utm_medium=footer&amp;utm_campaign=fctours\" class=\"nav_a\">Amazon Tours\u003C/a>\u003C/li>\u003C/ul>\u003C/div>\u003Cdiv class=\"navFooterColSpacerInner navAccessibility\">\u003C/div>\u003Cdiv class=\"navFooterLinkCol navAccessibility\">\u003Cdiv class=\"navFooterColHead\">Make Money with Us\u003C/div>\u003Cul>\u003Cli class=\"nav_first\">\u003Ca href=\"/gp/redirect.html?_encoding=UTF8&amp;location=https%3A%2F%2Fservices.amazon.com%2Fcontent%2Fsell-on-amazon.html%3Fld%3DAZFSSOA%26ref_%3Dfooter_soa&amp;source=standards&amp;token=67305B06938EF184959C25FEBF1B83085480E205\" class=\"nav_a\">Sell on Amazon\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"/gp/redirect.html?_encoding=UTF8&amp;location=https%3A%2F%2Fservices.amazon.com%2Fselling-services%2Fbenefits.htm%3Fld%3DAZUSVAS-globalfooter%26ref_%3Dfooter_sell_svcs&amp;source=standards&amp;token=E93858F0E946F93FEAC7F36EFB8E10F5C54CDBFC\" class=\"nav_a\">Sell Your Services on Amazon\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"https://services.amazon.com/amazon-business.html?ld=usb2bunifooter&amp;ref_=footer_b2b\" class=\"nav_a\">Sell on Amazon Business\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"https://developer.amazon.com\" class=\"nav_a\">Sell Your Apps on Amazon\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"https://affiliate-program.amazon.com/\" class=\"nav_a\">Become an Affiliate\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"https://advertising.amazon.com/?ref=ext_amzn_ftr\" class=\"nav_a\">Advertise Your Products\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"/gp/seller-account/mm-summary-page.html?ie=UTF8&amp;ld=AZFooterSelfPublish&amp;ref_=footer_publishing&amp;topic=200260520\" class=\"nav_a\">Self-Publish with Us\u003C/a>\u003C/li>\u003Cli class=\"nav_last nav_a_carat\">\u003Cspan class=\"nav_a_carat\">›\u003C/span>\u003Ca href=\"/b/?_encoding=UTF8&amp;ld=AZUSSOA-seemore&amp;node=18190131011&amp;ref_=footer_seemore\" class=\"nav_a\">See More\u003C/a>\u003C/li>\u003C/ul>\u003C/div>\u003Cdiv class=\"navFooterColSpacerInner navAccessibility\">\u003C/div>\u003Cdiv class=\"navFooterLinkCol navAccessibility\">\u003Cdiv class=\"navFooterColHead\">Amazon Payment Products\u003C/div>\u003Cul>\u003Cli class=\"nav_first\">\u003Ca href=\"/dp/B07984JN3L?_encoding=UTF8&amp;ie=UTF-8&amp;plattr=ACOMFO\" class=\"nav_a\">Amazon Business Card\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"/b?ie=UTF8&amp;node=16218619011&amp;ref_=footer_swp\" class=\"nav_a\">Shop with Points\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"/Reload-Your-Gift-Card-Balance/b?ie=UTF8&amp;node=10232440011&amp;ref_=footer_reload_us\" class=\"nav_a\">Reload Your Balance\u003C/a>\u003C/li>\u003Cli class=\"nav_last\">\u003Ca href=\"/Currency-Converter/b?ie=UTF8&amp;node=388305011&amp;ref_=footer_tfx\" class=\"nav_a\">Amazon Currency Converter\u003C/a>\u003C/li>\u003C/ul>\u003C/div>\u003Cdiv class=\"navFooterColSpacerInner navAccessibility\">\u003C/div>\u003Cdiv class=\"navFooterLinkCol navAccessibility\">\u003Cdiv class=\"navFooterColHead\">Let Us Help You\u003C/div>\u003Cul>\u003Cli class=\"nav_first\">\u003Ca href=\"/gp/css/homepage.html?ie=UTF8&amp;ref_=footer_ya\" class=\"nav_a\">Your Account\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"/gp/css/order-history?ie=UTF8&amp;ref_=footer_yo\" class=\"nav_a\">Your Orders\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"/gp/help/customer/display.html?ie=UTF8&amp;nodeId=468520&amp;ref_=footer_shiprates\" class=\"nav_a\">Shipping Rates &amp; Policies\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"/gp/css/returns/homepage.html?ie=UTF8&amp;ref_=footer_hy_f_4\" class=\"nav_a\">Returns &amp; Replacements\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"/gp/digital/fiona/manage?ie=UTF8&amp;ref_=footer_myk\" class=\"nav_a\">Manage Your Content and Devices\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"/gp/BIT/ref=footer_bit_v2_us_A0029?bitCampaignCode=A0029\" class=\"nav_a\">Amazon Assistant\u003C/a>\u003C/li>\u003Cli class=\"nav_last\">\u003Ca href=\"/gp/help/customer/display.html?ie=UTF8&amp;nodeId=508510&amp;ref_=footer_gw_m_b_he\" class=\"nav_a\">Help\u003C/a>\u003C/li>\u003C/ul>\u003C/div>\u003C/div>\u003C/div>\u003Cdiv class=\"nav-footer-line\">\u003C/div>\n   \n\u003Cdiv class=\"navFooterLine navFooterLinkLine navFooterPadItemLine\">\u003Cspan>\u003Cdiv class=\"navFooterLine navFooterLogoLine\">\u003Ca href=\"/ref=footer_logo\">\u003Cdiv class=\"nav-logo-base nav-sprite\">\u003C/div>\u003C/a>\u003C/div>\n\u003C/span>\u003Cul>\u003C/ul>\u003Cspan class=\"icp-container-desktop\">\u003Cdiv class=\"navFooterLine\">\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\u003Cstyle type=\"text/css\">\n  #icp-touch-link-language { display: none; }\n\u003C/style>\n\n\u003Ca href=\"/gp/customer-preferences/select-language/ref=footer_lang?ie=UTF8&amp;preferencesReturnUrl=%2Fdp%2FB06XD3LXXK\" class=\"icp-button a-declarative\" id=\"icp-touch-link-language\">\n  \u003Cdiv class=\"icp-nav-globe-img-2 icp-button-globe-2 icp-nav-globe-curr-fix\">​\u003C/div>\u003Cspan class=\"icp-color-base\">English\u003C/span>\u003Cspan class=\"nav-arrow icp-up-down-arrow\">\u003C/span>\u003Cspan class=\"aok-hidden\" style=\"display:none\">Choose a language for shopping.\u003C/span>\n\u003C/a>\n\n\n\n\n\n\n\n  \n\n\n\n\n\u003Cstyle type=\"text/css\">\n  #icp-touch-link-cop { display: none; }\n\u003C/style>\n\n\u003Ca href=\"/gp/customer-preferences/select-currency/ref=footer_cop?ie=UTF8&amp;preferencesReturnUrl=%2Fdp%2FB06XD3LXXK\" class=\"icp-button\" id=\"icp-touch-link-cop\">\n  \u003Cspan class=\"icp-currency-symbol\">$\u003C/span>\u003Cspan class=\"icp-color-base\">USD - U.S. Dollar\u003C/span>\n\u003C/a>\n\n\n\n\n\n\n\n\n\n\n\n\u003Cstyle type=\"text/css\">\n#icp-touch-link-country { display: none; }\n\u003C/style>\n\n  \n\n\u003Ca href=\"/gp/navigation-country/select-country/ref=?ie=UTF8&amp;preferencesReturnUrl=%2Fdp%2FB06XD3LXXK\" class=\"icp-button a-declarative\" id=\"icp-touch-link-country\">\n  \u003Cspan class=\"icp-flag-3 icp-flag-3-us\">​\u003C/span>\u003Cspan class=\"icp-color-base\">United States\u003C/span>\u003Cspan class=\"aok-hidden\" style=\"display:none\">Choose a country/region for shopping.\u003C/span>\n\u003C/a>\n\n\n\u003C/div>\n\u003C/span>\u003Cul>\u003C/ul>\u003C/div>\n\n\u003Cdiv class=\"navFooterLine navFooterLinkLine navFooterDescLine\" role=\"navigation\" aria-label=\"More on Amazon.com\">\u003Ctable class=\"navFooterMoreOnAmazon\" cellspacing=\"0\">\u003Ctbody>\u003Ctr>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://music.amazon.com?ref=dm_aff_amz_com\" class=\"nav_a\">Amazon Music\u003Cbr> \u003Cspan class=\"navFooterDescText\">Stream millions\u003Cbr> of songs\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://advertising.amazon.com/?ref=footer_advtsing_amzn_com\" class=\"nav_a\">Amazon Advertising\u003Cbr> \u003Cspan class=\"navFooterDescText\">Find, attract, and\u003Cbr> engage customers\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"/STRING-subnav_primephotos_amazondrive/b?ie=UTF8&amp;node=15547130011&amp;ref_=us_footer_drive\" class=\"nav_a\">Amazon Drive\u003Cbr> \u003Cspan class=\"navFooterDescText\">Cloud storage\u003Cbr> from Amazon\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.6pm.com\" class=\"nav_a\">6pm\u003Cbr> \u003Cspan class=\"navFooterDescText\">Score deals\u003Cbr> on fashion brands\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.abebooks.com\" class=\"nav_a\">AbeBooks\u003Cbr> \u003Cspan class=\"navFooterDescText\">Books, art\u003Cbr> &amp; collectibles\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.acx.com/\" class=\"nav_a\">ACX \u003Cbr> \u003Cspan class=\"navFooterDescText\">Audiobook Publishing\u003Cbr> Made Easy\u003C/span>\u003C/a>\u003C/td>\n\u003C/tr>\n\u003Ctr>\u003Ctd>&nbsp;\u003C/td>\u003C/tr>\n\u003Ctr>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.alexa.com\" class=\"nav_a\">Alexa\u003Cbr> \u003Cspan class=\"navFooterDescText\">Actionable Analytics\u003Cbr> for the Web\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"/gp/redirect.html?_encoding=UTF8&amp;location=https%3A%2F%2Fservices.amazon.com%2Fcontent%2Fsell-on-amazon.htm%3Fld%3DAZUSSOA-footer-aff%26ref%3Dfooter_sell&amp;source=standards&amp;token=9C20DC45C16BB27C88A9F9FF2131288939F17ADB\" class=\"nav_a\">Sell on Amazon\u003Cbr> \u003Cspan class=\"navFooterDescText\">Start a Selling Account\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"/business?_encoding=UTF8&amp;ref_=footer_retail_b2b\" class=\"nav_a\">Amazon Business\u003Cbr> \u003Cspan class=\"navFooterDescText\">Everything For\u003Cbr> Your Business\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"/International-Shipping-Direct/b?ie=UTF8&amp;node=230659011&amp;ref_=footer_amazonglobal\" class=\"nav_a\">AmazonGlobal\u003Cbr> \u003Cspan class=\"navFooterDescText\">Ship Orders\u003Cbr> Internationally\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"/services?_encoding=UTF8&amp;ref_=footer_services\" class=\"nav_a\">Home Services\u003Cbr> \u003Cspan class=\"navFooterDescText\">Handpicked Pros\u003Cbr> Happiness Guarantee\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.amazoninspire.com/?ref=amazon_footer\" class=\"nav_a\">Amazon Inspire\u003Cbr> \u003Cspan class=\"navFooterDescText\">Digital Educational\u003Cbr>  Resources\u003C/span>\u003C/a>\u003C/td>\n\u003C/tr>\n\u003Ctr>\u003Ctd>&nbsp;\u003C/td>\u003C/tr>\n\u003Ctr>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://rapids.amazon.com/?ref=rapids_acq_gatewayfooter\" class=\"nav_a\">Amazon Rapids\u003Cbr> \u003Cspan class=\"navFooterDescText\">Fun stories for\u003Cbr>  kids on the go\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://aws.amazon.com/what-is-cloud-computing/?sc_channel=EL&amp;sc_campaign=amazonfooter\" class=\"nav_a\">Amazon Web Services\u003Cbr> \u003Cspan class=\"navFooterDescText\">Scalable Cloud\u003Cbr> Computing Services\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.audible.com\" class=\"nav_a\">Audible\u003Cbr> \u003Cspan class=\"navFooterDescText\">Listen to Books &amp; Original\u003Cbr> Audio Performances\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.bookdepository.com\" class=\"nav_a\">Book Depository\u003Cbr> \u003Cspan class=\"navFooterDescText\">Books With Free\u003Cbr> Delivery Worldwide\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.boxofficemojo.com/?ref_=amzn_nav_ftr\" class=\"nav_a\">Box Office Mojo\u003Cbr> \u003Cspan class=\"navFooterDescText\">Find Movie\u003Cbr> Box Office Data\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.comixology.com\" class=\"nav_a\">ComiXology\u003Cbr> \u003Cspan class=\"navFooterDescText\">Thousands of\u003Cbr> Digital Comics\u003C/span>\u003C/a>\u003C/td>\n\u003C/tr>\n\u003Ctr>\u003Ctd>&nbsp;\u003C/td>\u003C/tr>\n\u003Ctr>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.createspace.com\" class=\"nav_a\">CreateSpace\u003Cbr> \u003Cspan class=\"navFooterDescText\">Indie Print Publishing\u003Cbr> Made Easy\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.dpreview.com\" class=\"nav_a\">DPReview\u003Cbr> \u003Cspan class=\"navFooterDescText\">Digital\u003Cbr> Photography\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.eastdane.com/welcome\" class=\"nav_a\">East Dane\u003Cbr> \u003Cspan class=\"navFooterDescText\">Designer Men's\u003Cbr> Fashion\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.fabric.com\" class=\"nav_a\">Fabric\u003Cbr> \u003Cspan class=\"navFooterDescText\">Sewing, Quilting\u003Cbr> &amp; Knitting\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.goodreads.com\" class=\"nav_a\">Goodreads\u003Cbr> \u003Cspan class=\"navFooterDescText\">Book reviews\u003Cbr> &amp; recommendations\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.imdb.com\" class=\"nav_a\">IMDb\u003Cbr> \u003Cspan class=\"navFooterDescText\">Movies, TV\u003Cbr> &amp; Celebrities\u003C/span>\u003C/a>\u003C/td>\n\u003C/tr>\n\u003Ctr>\u003Ctd>&nbsp;\u003C/td>\u003C/tr>\n\u003Ctr>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://pro.imdb.com?ref_=amzn_nav_ftr\" class=\"nav_a\">IMDbPro\u003Cbr> \u003Cspan class=\"navFooterDescText\">Get Info Entertainment\u003Cbr> Professionals Need\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://kdp.amazon.com\" class=\"nav_a\">Kindle Direct Publishing\u003Cbr> \u003Cspan class=\"navFooterDescText\">Indie Digital Publishing\u003Cbr> Made Easy\n\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://videodirect.amazon.com/home/landing\" class=\"nav_a\">Prime Video Direct\u003Cbr> \u003Cspan class=\"navFooterDescText\">Video Distribution\u003Cbr> Made Easy\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.shopbop.com/welcome\" class=\"nav_a\">Shopbop\u003Cbr> \u003Cspan class=\"navFooterDescText\">Designer\u003Cbr> Fashion Brands\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.woot.com/\" class=\"nav_a\">Woot!\u003Cbr> \u003Cspan class=\"navFooterDescText\">Deals and \u003Cbr> Shenanigans\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.zappos.com\" class=\"nav_a\">Zappos\u003Cbr> \u003Cspan class=\"navFooterDescText\">Shoes &amp;\u003Cbr> Clothing\u003C/span>\u003C/a>\u003C/td>\n\u003C/tr>\n\u003Ctr>\u003Ctd>&nbsp;\u003C/td>\u003C/tr>\n\u003Ctr>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://ring.com\" class=\"nav_a\">Ring\u003Cbr> \u003Cspan class=\"navFooterDescText\">Smart Home\u003Cbr> Security Systems\n\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://eero.com/\" class=\"nav_a\">eero WiFi\u003Cbr> \u003Cspan class=\"navFooterDescText\">Stream 4K Video\u003Cbr> in Every Room\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://shop.ring.com/pages/neighbors-app\" class=\"nav_a\">Neighbors App \u003Cbr> \u003Cspan class=\"navFooterDescText\"> Real-Time Crime\u003Cbr> &amp; Safety Alerts\n\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"/b?ie=UTF8&amp;node=14498690011&amp;ref_=amzn_nav_ftr_swa\" class=\"nav_a\">Subscribe with Amazon\u003Cbr> \u003Cspan class=\"navFooterDescText\">Discover &amp; try\u003Cbr> subscription services\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"https://www.pillpack.com\" class=\"nav_a\">PillPack\u003Cbr> \u003Cspan class=\"navFooterDescText\">Pharmacy Simplified\u003C/span>\u003C/a>\u003C/td>\n\u003Ctd class=\"navFooterDescSpacer\" style=\"width: 4%\">\u003C/td>\n\u003Ctd class=\"navFooterDescItem\">\u003Ca href=\"/amazonsecondchance?_encoding=UTF8&amp;ref_=footer_asc\" class=\"nav_a\">Amazon Second Chance\u003Cbr> \u003Cspan class=\"navFooterDescText\">Pass it on, trade it in,\u003Cbr> give it a second life\u003C/span>\u003C/a>\u003C/td>\n\u003C/tr>\n\u003C/tbody>\u003C/table>\u003C/div>\n   \n\u003Cdiv class=\"navFooterLine navFooterLinkLine navFooterPadItemLine navFooterCopyright\">\u003Cul>\u003Cli class=\"nav_first\">\u003Ca href=\"/gp/help/customer/display.html?ie=UTF8&amp;nodeId=508088&amp;ref_=footer_cou\" class=\"nav_a\">Conditions of Use\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"/gp/help/customer/display.html?ie=UTF8&amp;nodeId=468496&amp;ref_=footer_privacy\" class=\"nav_a\">Privacy Notice\u003C/a>\u003C/li>\u003Cli>\u003Ca href=\"/interestbasedads/ref=footer_iba\" class=\"nav_a\">Interest-Based Ads\u003C/a>\u003C/li>\u003Cli class=\"nav_last\">© 1996-2019, Amazon.com, Inc. or its affiliates\u003C/li>\u003C/ul>\u003C/div>\n\u003C/div>\u003C!-- whfh-scPKEnrDZhmFgoavAbsjBBYxLtvuBMnwWQm+wXw5kriYavtTMHIG6UFH9o2bi7bFQ4OrBihY80c= rid-WY2K06V7WEMKTC0K2H7W -->\n\u003Cdiv id=\"sis_pixel_r2\" aria-hidden=\"true\" style=\"height:1px; position: absolute; left: -1000000px; top: -1000000px;\">\u003C/div>\u003Cscript>(function(a,b){a.attachEvent?a.attachEvent(\"onload\",b):a.addEventListener&&a.addEventListener(\"load\",b,!1)})(window,function(){setTimeout(function(){var el=document.getElementById(\"sis_pixel_r2\");el&&(el.innerHTML='\u003Ciframe id=\"DAsis\" src=\"//s.amazon-adsystem.com/iu3?d=amazon.com&slot=navFooter&a2=01017f3d2e68f58580701b9c1a5f0a9aebe9b65dbbc97520e2375c5aafacd14756ec&old_oo=0&ts=1569717935067&s=AQhZmPU3MQWxTmYRhKXpYgnBdo-1CZD7eW9T76ZZVpHl&cb=1569717935067\" width=\"1\" height=\"1\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\">\u003C/iframe>')},300)});\u003C/script>\u003C!-- footer tilu -->\n\n\n\u003C!-- sp:feature:amazon-pay-iframe -->\n\u003C!-- sp:end-feature:amazon-pay-iframe -->\n\u003C!-- sp:feature:associate-tracker-pixel -->\n\u003Cimg src=\"https://assoc-na.associates-amazon.com/abid/um?s=137-0530487-6192152&amp;m=ATVPDKIKX0DER\" style=\"display:none\" alt=\"\">\u003C!-- sp:end-feature:associate-tracker-pixel -->\n\u003Cdiv id=\"be\" style=\"display:none;visibility:hidden;\">\u003Cform name=\"ue_backdetect\" action=\"get\">\u003Cinput type=\"hidden\" name=\"ue_back\" value=\"2\">\u003C/form>\n\n\n\u003Cscript type=\"text/javascript\">\nwindow.ue_ibe = (window.ue_ibe || 0) + 1;\nif (window.ue_ibe === 1) {\n\n(function(e,c){function h(b,a){f.push([b,a])}function g(b,a){if(b){var c=e.head||e.getElementsByTagName(\"head\")[0]||e.documentElement,d=e.createElement(\"script\");d.async=\"async\";d.src=b;d.setAttribute(\"crossorigin\",\"anonymous\");a&&a.onerror&&(d.onerror=a.onerror);a&&a.onload&&(d.onload=a.onload);c.insertBefore(d,c.firstChild)}}function k(){ue.uels=g;for(var b=0;b\u003Cf.length;b++){var a=f[b];g(a[0],a[1])}ue.deffered=1}var f=[];c.ue&&(ue.uels=h,c.ue.attach&&c.ue.attach(\"load\",k))})(document,window);\n\n\nif (window.ue && window.ue.uels) {\n        var cel_widgets = [ { \"c\":\"celwidget\" },{ \"s\":\"#nav-swmslot > div\", \"id_gen\":function(elem, index){ return 'nav_sitewide_msg'; } },{ \"c\":\"feature\" },{ \"id\":\"detail-ilm_div\" } ];\n\n                ue.uels(\"https://images-na.ssl-images-amazon.com/images/G/01/AUIClients/ClientSideMetricsAUIJavascript@jserrorsForester.10f2559e93ec589d92509318a7e2acbac74c343a._V2_.js\");\n}\nvar ue_mbl=ue_csm.ue.exec(function(e,a){function l(f){b=f||{};a.AMZNPerformance=b;b.transition=b.transition||{};b.timing=b.timing||{};e.ue.exec(m,\"csm-android-check\")()&&b.tags instanceof Array&&(f=-1!=b.tags.indexOf(\"usesAppStartTime\")||b.transition.type?!b.transition.type&&-1\u003Cb.tags.indexOf(\"usesAppStartTime\")?\"warm-start\":void 0:\"view-transition\",f&&(b.transition.type=f));\"reload\"===c._nt&&e.ue_orct||\"intrapage-transition\"===c._nt?a.performance&&performance.timing&&performance.timing.navigationStart?\nb.timing.transitionStart=a.performance.timing.navigationStart:delete b.timing.transitionStart:\"undefined\"===typeof c._nt&&a.performance&&performance.timing&&performance.timing.navigationStart&&a.history&&\"function\"===typeof a.History&&\"object\"===typeof a.history&&history.length&&1!=history.length&&(b.timing.transitionStart=a.performance.timing.navigationStart);f=b.transition;var d;d=c._nt?c._nt:void 0;f.subType=d;a.ue&&a.ue.tag&&a.ue.tag(\"has-AMZNPerformance\");c.isl&&a.uex&&uex(\"at\",\"csm-timing\");\nn()}function p(b){a.ue&&a.ue.count&&a.ue.count(\"csm-cordova-plugin-failed\",1)}function m(){return a.webclient&&\"function\"===typeof a.webclient.getRealClickTime?a.cordova&&a.cordova.platformId&&\"ios\"==a.cordova.platformId?!1:!0:!1}function n(){try{P.register(\"AMZNPerformance\",function(){return b})}catch(a){}}function h(){if(!b)return\"\";ue_mbl.cnt=null;for(var a=b.timing,d=b.transition,a=[\"mts\",k(a.transitionStart),\"mps\",k(a.processStart),\"mtt\",d.type,\"mtst\",d.subType,\"mtlt\",d.launchType],d=\"\",c=0;c\u003C\na.length;c+=2){var e=a[c],g=a[c+1];\"undefined\"!==typeof g&&(d+=\"&\"+e+\"=\"+g)}return d}function k(a){if(\"undefined\"!==typeof a&&\"undefined\"!==typeof g)return a-g}function q(a,c){b&&(g=c,b.timing.transitionStart=a,b.transition.type=\"view-transition\",b.transition.subType=\"ajax-transition\",b.transition.launchType=\"normal\",ue_mbl.cnt=h)}var c=e.ue||{},g=e.ue_t0,b;if(a.P&&a.P.when&&a.P.register)return a.P.when(\"CSMPlugin\").execute(function(a){a.buildAMZNPerformance&&a.buildAMZNPerformance({successCallback:l,\nfailCallback:p})}),{cnt:h,ajax:q}},\"mobile-timing\")(ue_csm,window);\n\n(function(d){d._uess=function(){var a=\"\";screen&&screen.width&&screen.height&&(a+=\"&sw=\"+screen.width+\"&sh=\"+screen.height);var b=function(a){var b=document.documentElement[\"client\"+a];return\"CSS1Compat\"===document.compatMode&&b||document.body[\"client\"+a]||b},c=b(\"Width\"),b=b(\"Height\");c&&b&&(a+=\"&vw=\"+c+\"&vh=\"+b);return a}})(ue_csm);\n\n(function(a){var b=document.ue_backdetect;b&&b.ue_back&&a.ue&&(a.ue.bfini=b.ue_back.value);a.uet&&a.uet(\"be\");a.onLdEnd&&(window.addEventListener?window.addEventListener(\"load\",a.onLdEnd,!1):window.attachEvent&&window.attachEvent(\"onload\",a.onLdEnd));a.ueh&&a.ueh(0,window,\"load\",a.onLd,1);a.ue&&a.ue.tag&&(a.ue_furl&&a.ue_furl.split?(b=a.ue_furl.split(\".\"))&&b[0]&&a.ue.tag(b[0]):a.ue.tag(\"nofls\"))})(ue_csm);\n(function(g,h){function d(a,d){var b={};if(!e||!f)try{var c=h.sessionStorage;c?a&&(\"undefined\"!==typeof d?c.setItem(a,d):b.val=c.getItem(a)):f=1}catch(g){e=1}e&&(b.e=1);return b}var b=g.ue||{},a=\"\",f,e,c,a=d(\"csmtid\");f?a=\"NA\":a.e?a=\"ET\":(a=a.val,a||(a=b.oid||\"NI\",d(\"csmtid\",a)),c=d(b.oid),c.e||(c.val=c.val||0,d(b.oid,c.val+1)),b.ssw=d);b.tabid=a})(ue_csm,window);\nue_csm.ue.exec(function(e,f){var a=e.ue||{},b=a._wlo,d;if(a.ssw){d=a.ssw(\"CSM_previousURL\").val;var c=f.location,b=b?b:c&&c.href?c.href.split(\"#\")[0]:void 0;c=(b||\"\")===a.ssw(\"CSM_previousURL\").val;!c&&b&&a.ssw(\"CSM_previousURL\",b);d=c?\"reload\":d?\"intrapage-transition\":\"first-view\"}else d=\"unknown\";a._nt=d},\"NavTypeModule\")(ue_csm,window);\nue_csm.ue.exec(function(c,a){function g(a){a.run(function(e){d.tag(\"csm-feature-\"+a.name+\":\"+e);d.isl&&c.uex(\"at\")})}if(a.addEventListener)for(var d=c.ue||{},f=[{name:\"touch-enabled\",run:function(b){var e=function(){a.removeEventListener(\"touchstart\",c,!0);a.removeEventListener(\"mousemove\",d,!0)},c=function(){b(\"true\");e()},d=function(){b(\"false\");e()};a.addEventListener(\"touchstart\",c,!0);a.addEventListener(\"mousemove\",d,!0)}}],b=0;b\u003Cf.length;b++)g(f[b])},\"csm-features\")(ue_csm,window);\n\n\n(function(b,c){var a=c.images;a&&a.length&&b.ue.count(\"totalImages\",a.length)})(ue_csm,document);\n(function(b){function c(){var d=[];a.log&&a.log.isStub&&a.log.replay(function(a){e(d,a)});a.clog&&a.clog.isStub&&a.clog.replay(function(a){e(d,a)});d.length&&(a._flhs+=1,n(d),p(d))}function g(){a.log&&a.log.isStub&&(a.onflush&&a.onflush.replay&&a.onflush.replay(function(a){a[0]()}),a.onunload&&a.onunload.replay&&a.onunload.replay(function(a){a[0]()}),c())}function e(d,b){var c=b[1],f=b[0],e={};a._lpn[c]=(a._lpn[c]||0)+1;e[c]=f;d.push(e)}function n(b){q&&(a._lpn.csm=(a._lpn.csm||0)+1,b.push({csm:{k:\"chk\",\nf:a._flhs,l:a._lpn,s:\"inln\"}}))}function p(a){if(h)a=k(a),b.navigator.sendBeacon(l,a);else{a=k(a);var c=new b[f];c.open(\"POST\",l,!0);c.setRequestHeader&&c.setRequestHeader(\"Content-type\",\"text/plain\");c.send(a)}}function k(a){return JSON.stringify({rid:b.ue_id,sid:b.ue_sid,mid:b.ue_mid,mkt:b.ue_mkt,sn:b.ue_sn,reqs:a})}var f=\"XMLHttpRequest\",q=1===b.ue_ddq,a=b.ue,r=b[f]&&\"withCredentials\"in new b[f],h=b.navigator&&b.navigator.sendBeacon,l=\"//\"+b.ue_furl+\"/1/batch/1/OE/\",m=b.ue_fci_ft||5E3;a&&(r||h)&&\n(a._flhs=a._flhs||0,a._lpn=a._lpn||{},a.attach&&(a.attach(\"beforeunload\",g),a.attach(\"pagehide\",g)),m&&b.setTimeout(c,m),a._ffci=c)})(window);\n\n\n(function(k,c){function l(a,b){return a.filter(function(a){return a.initiatorType==b})}function f(a,c){if(b.t[a]){var g=b.t[a]-b._t0,e=c.filter(function(a){return 0!==a.responseEnd&&m(a)\u003Cg}),f=l(e,\"script\"),h=l(e,\"link\"),k=l(e,\"img\"),n=e.map(function(a){return a.name.split(\"/\")[2]}).filter(function(a,b,c){return a&&c.lastIndexOf(a)==b}),q=e.filter(function(a){return a.duration\u003Cp}),s=g-Math.max.apply(null,e.map(m))\u003Cr|0;\"af\"==a&&(b._afjs=f.length);return a+\":\"+[e[d],f[d],h[d],k[d],n[d],q[d],s].join(\"-\")}}\nfunction m(a){return a.responseEnd-(b._t0-c.timing.navigationStart)}function n(){var a=c[h](\"resource\"),d=f(\"cf\",a),g=f(\"af\",a),a=f(\"ld\",a);delete b._rt;b._ld=b.t.ld-b._t0;b._art&&b._art();return[d,g,a].join(\"_\")}var p=20,r=50,d=\"length\",b=k.ue,h=\"getEntriesByType\";b._rre=m;b._rt=c&&c.timing&&c[h]&&n})(ue_csm,window.performance);\n\n\nue_csm.ue._rtn = 1;\n(function(e,f){function h(a){a=a.split(\"?\")[0]||a;a=a.replace(\"http://\",\"\").replace(\"https://\",\"\").replace(\"resource://\",\"\").replace(\"res://\",\"\").replace(\"undefined://\",\"\").replace(\"chrome://\",\"\").replace(/\\*/g,\"\").replace(/!/g,\"\").replace(/~/g,\"\");var b=a.split(\"/\");a=a.substr(a.lastIndexOf(\"/\")+1);b.splice(-1);b=b.map(function(a){c[a]||(c[a]=(k++).toString(36));return c[a]});b.push(a);return b.join(\"!\")}function l(){return f.getEntriesByType(\"resource\").filter(function(a){return d._rre(a)\u003Cd._ld}).sort(function(a,\nb){return a.responseEnd-b.responseEnd}).splice(0,m).map(function(a){var b=[],c;for(c in a)g[c]&&a[c]&&b.push(g[c]+Math.max(a[c]|0,-1).toString(36));b.push(\"i\"+a.initiatorType);(1==d._rtn&&d._afjs>n||2==d._rtn)&&b.push(\"n\"+h(a.name));return b.join(\"_\")}).join(\"*\")}function p(){var a=\"pm\",b;for(b in c)c.hasOwnProperty(b)&&(a+=\"*\"+c[b]+\"_\"+b);return a}function q(){d.log({k:\"rtiming\",value:l()+\"~\"+p()},\"csm\")}if(f&&f.getEntriesByType&&Array.prototype.map&&Array.prototype.filter&&e.ue&&e.ue.log){var g=\n{connectStart:\"c\",connectEnd:\"C\",domainLookupStart:\"d\",domainLookupEnd:\"D\",duration:\"z\",encodedBodySize:\"e\",decodedBodySize:\"E\",fetchStart:\"f\",redirectStart:\"r\",redirectEnd:\"R\",requestStart:\"q\",responseStart:\"s\",responseEnd:\"S\",startTime:\"a\",transferSize:\"t\"},d=e.ue,c={},k=1,n=20,m=200;d&&d._rre&&(d._art=function(){d._ld&&window.setTimeout(q,0)})}})(ue_csm||{},window.performance);\n\n\n(function(c,d){var b=c.ue,a=d.navigator;b&&b.tag&&a&&(a=a.connection||a.mozConnection||a.webkitConnection)&&a.type&&b.tag(\"netInfo:\"+a.type)})(ue_csm,window);\n\n\n(function(c,d){function h(a,b){for(var c=[],d=0;d\u003Ca.length;d++){var e=a[d],f=b.encode(e);if(e[k]){var g=b.metaSep,e=e[k],l=b.metaPairSep,h=[],m=void 0;for(m in e)e.hasOwnProperty(m)&&h.push(m+\"=\"+e[m]);e=h.join(l);f+=g+e}c.push(f)}return c.join(b.resourceSep)}function s(a){var b=a[k]=a[k]||{};b[t]||(b[t]=c.ue_mid);b[u]||(b[u]=c.ue_sid);b[f]||(b[f]=c.ue_id);b.csm=1;a=\"//\"+c.ue_furl+\"/1/\"+a[v]+\"/1/OP/\"+a[w]+\"/\"+a[x]+\"/\"+h([a],y);if(n)try{n.call(d[p],a)}catch(g){c.ue.sbf=1,(new Image).src=a}else(new Image).src=\na}function q(){g&&g.isStub&&g.replay(function(a,b,c){a=a[0];b=a[k]=a[k]||{};b[f]=b[f]||c;s(a)});l.impression=s;g=null}if(!(1\u003Cc.ueinit)){var k=\"metadata\",x=\"impressionType\",v=\"foresterChannel\",w=\"programGroup\",t=\"marketplaceId\",u=\"session\",f=\"requestId\",p=\"navigator\",l=c.ue||{},n=d[p]&&d[p].sendBeacon,r=function(a,b,c,d){return{encode:d,resourceSep:a,metaSep:b,metaPairSep:c}},y=r(\"\",\"?\",\"&\",function(a){return h(a.impressionData,z)}),z=r(\"/\",\":\",\",\",function(a){return a.featureName+\":\"+h(a.resources,\nA)}),A=r(\",\",\"@\",\"|\",function(a){return a.id}),g=l.impression;n?q():(l.attach(\"load\",q),l.attach(\"beforeunload\",q));try{d.P&&d.P.register&&d.P.register(\"impression-client\",function(){})}catch(B){c.ueLogError(B,{logLevel:\"WARN\"})}}})(ue_csm,window);\n\n\n\nvar ue_pty = \"Detail\";\n\nvar ue_spty = \"Glance\";\n\nvar ue_pti = \"B06XD3LXXK\";\n\n\nvar ue_adb = 4;\nvar ue_adb_rtla = 1;\nue_csm.ue.exec(function(w,a){function q(){if(d&&f){var a;a:{try{a=d.getItem(g);break a}catch(c){}a=void 0}if(a)return b=a,!0}return!1}function r(){b=h;k();if(f)try{d.setItem(g,b)}catch(a){}}function s(){b=1===a.ue_adb_chk?l:h;k();if(f)try{d.setItem(g,b)}catch(c){}}function m(){a.ue_adb_rtla&&c&&0\u003Cc.ec&&!1===n&&(c.elh=null,ueLogError({m:\"Hit Info\",fromOnError:1},{logLevel:\"INFO\",adb:b}),n=!0)}function k(){e.tag(b);e.isl&&a.uex&&uex(\"at\",b);p&&p.updateCsmHit(\"adb\",b);c&&0\u003Cc.ec?m():a.ue_adb_rtla&&c&&\n(c.elh=m)}function t(){return b}if(a.ue_adb){a.ue_fadb=a.ue_fadb||10;var e=a.ue,h=\"adblk_yes\",l=\"adblk_no\",b=\"adblk_unk\",d;a:{try{d=a.localStorage;break a}catch(x){}d=void 0}var g=\"csm:adb\",c=a.ue_err,p=e.cookie,f=void 0!==a.localStorage,u=Math.random()>1-1/a.ue_fadb,n=!1,v=q();u||!v?e.uels(\"https://m.media-amazon.com/images/G/01/csm/showads.v2.js\",{onerror:r,onload:s}):k();a.ue_isAdb=t;a.ue_isAdb.unk=\"adblk_unk\";a.ue_isAdb.no=l;a.ue_isAdb.yes=h}},\"adb\")(document,window);\n\n\n\n\n(function(c,l,m){function h(a){if(a)try{if(a.id)return\"//*[@id='\"+a.id+\"']\";var b,d=1,e;for(e=a.previousSibling;e;e=e.previousSibling)e.nodeName===a.nodeName&&(d+=1);b=d;var c=a.nodeName;1!==b&&(c+=\"[\"+b+\"]\");a.parentNode&&(c=h(a.parentNode)+\"/\"+c);return c}catch(f){return\"DETACHED\"}}function f(a){if(a&&a.getAttribute)return a.getAttribute(k)?a.getAttribute(k):f(a.parentElement)}var k=\"data-cel-widget\",g=!1,d=[];(c.ue||{}).isBF=function(){try{var a=JSON.parse(localStorage[\"csm-bf\"]||\"[]\"),b=0\u003C=a.indexOf(c.ue_id);\na.unshift(c.ue_id);a=a.slice(0,20);localStorage[\"csm-bf\"]=JSON.stringify(a);return b}catch(d){return!1}}();c.ue_utils={getXPath:h,getFirstAscendingWidget:function(a,b){c.ue_cel&&c.ue_fem?!0===g?b(f(a)):d.push({element:a,callback:b}):b()},notifyWidgetsLabeled:function(){if(!1===g){g=!0;for(var a=f,b=0;b\u003Cd.length;b++)if(d[b].hasOwnProperty(\"callback\")&&d[b].hasOwnProperty(\"element\")){var c=d[b].callback,e=d[b].element;\"function\"===typeof c&&\"function\"===typeof a&&c(a(e))}d=null}},extractStringValue:function(a){if(\"string\"===\ntypeof a)return a}}})(ue_csm,window,document);\n\n\n(function(a,c){a.ue_cel||(a.ue_cel=function(){function h(a,b){b?b.r=y:b={r:y,c:1};!ue_csm.ue_sclog&&b.clog&&e.clog?e.clog(a,b.ns||n,b):b.glog&&e.glog?e.glog(a,b.ns||n,b):e.log(a,b.ns||n,b)}function l(){var a=b.length;if(0\u003Ca){for(var f=[],c=0;c\u003Ca;c++){var g=b[c].api;g.ready()?(g.on({ts:e.d,ns:n}),d.push(b[c]),h({k:\"mso\",n:b[c].name,t:e.d()})):f.push(b[c])}b=f}}function f(){if(!f.executed){for(var a=0;a\u003Cd.length;a++)d[a].api.off&&d[a].api.off({ts:e.d,ns:n});q();h({k:\"eod\",t0:e.t0,t:e.d()},{c:1,il:1});\nf.executed=1;for(a=0;a\u003Cd.length;a++)b.push(d[a]);d=[];clearTimeout(t);clearTimeout(v)}}function q(a){h({k:\"hrt\",t:e.d()},{c:1,il:1,n:a});g=Math.min(k,r*g);z()}function z(){clearTimeout(v);v=setTimeout(function(){q(!0)},g)}function u(){f.executed||q()}var r=1.5,k=c.ue_cel_max_hrt||3E4,b=[],d=[],n=a.ue_cel_ns||\"cel\",t,v,e=a.ue,m=a.uet,w=a.uex,y=e.rid,g=c.ue_cel_hrt_int||3E3,s=c.requestAnimationFrame||function(a){a()};if(e.isBF)h({k:\"bft\",t:e.d()});else{\"function\"==typeof m&&m(\"bb\",\"csmCELLSframework\",\n{wb:1});setTimeout(l,0);e.onunload(f);if(e.onflush)e.onflush(u);t=setTimeout(f,6E5);z();\"function\"==typeof w&&w(\"ld\",\"csmCELLSframework\",{wb:1});return{registerModule:function(a,c){b.push({name:a,api:c});h({k:\"mrg\",n:a,t:e.d()});l()},reset:function(a){h({k:\"rst\",t0:e.t0,t:e.d()});b=b.concat(d);d=[];for(var c=b.length,g=0;g\u003Cc;g++)b[g].api.off(),b[g].api.reset();y=a||e.rid;l();clearTimeout(t);t=setTimeout(f,6E5);f.executed=0},timeout:function(a,b){return c.setTimeout(function(){s(function(){f.executed||\na()})},b)},log:h,off:f}}}())})(ue_csm,window);\n(function(a,c,h){a.ue_pdm||!a.ue_cel||ue.isBF||(a.ue_pdm=function(){function l(){try{var b=window.screen;if(b){var c={w:b.width,aw:b.availWidth,h:b.height,ah:b.availHeight,cd:b.colorDepth,pd:b.pixelDepth};e&&e.w===c.w&&e.h===c.h&&e.aw===c.aw&&e.ah===c.ah&&e.pd===c.pd&&e.cd===c.cd||(e=c,e.t=t(),e.k=\"sci\",s(e))}var g=h.body||{},f=h.documentElement||{},d={w:Math.max(g.scrollWidth||0,g.offsetWidth||0,f.clientWidth||0,f.scrollWidth||0,f.offsetWidth||0),h:Math.max(g.scrollHeight||0,g.offsetHeight||0,f.clientHeight||\n0,f.scrollHeight||0,f.offsetHeight||0)};m&&m.w===d.w&&m.h===d.h||(m=d,m.t=t(),m.k=\"doi\",s(m));n=a.ue_cel.timeout(l,v);y+=1}catch(r){window.ueLogError&&ueLogError(r,{attribution:\"csm-cel-page-module\",logLevel:\"WARN\"})}}function f(){k(\"ebl\",\"default\",!1)}function q(){k(\"efo\",\"default\",!0)}function z(){k(\"ebl\",\"app\",!1)}function u(){k(\"efo\",\"app\",!0)}function r(){c.setTimeout(function(){h[D]?k(\"ebl\",\"pageviz\",!1):k(\"efo\",\"pageviz\",!0)},0)}function k(a,b,c){w!==c&&s({k:a,t:t(),s:b},{ff:!0===c?0:1});w=\nc}function b(){g.attach&&(x&&g.attach(p,r,h),A&&P.when(\"mash\").execute(function(a){a&&a.addEventListener&&(a.addEventListener(\"appPause\",z),a.addEventListener(\"appResume\",u))}),g.attach(\"blur\",f,c),g.attach(\"focus\",q,c))}function d(){g.detach&&(x&&g.detach(p,r,h),A&&P.when(\"mash\").execute(function(a){a&&a.removeEventListener&&(a.removeEventListener(\"appPause\",z),a.removeEventListener(\"appResume\",u))}),g.detach(\"blur\",f,c),g.detach(\"focus\",q,c))}var n,t,v,e,m,w=null,y=0,g=a.ue,s=a.ue_cel.log,B=a.uet,\nE=a.uex,x=!!g.pageViz,p=x&&g.pageViz.event,D=x&&g.pageViz.propHid,A=c.P&&c.P.when;\"function\"==typeof B&&B(\"bb\",\"csmCELLSpdm\",{wb:1});return{on:function(a){v=a.timespan||500;t=a.ts;b();a=c.location;s({k:\"pmd\",o:a.origin,p:a.pathname,t:t()});l();\"function\"==typeof E&&E(\"ld\",\"csmCELLSpdm\",{wb:1})},off:function(a){clearTimeout(n);d();g.count&&g.count(\"cel.PDM.TotalExecutions\",y)},ready:function(){return h.body&&a.ue_cel&&a.ue_cel.log},reset:function(){e=m=null}}}(),a.ue_cel&&a.ue_cel.registerModule(\"page module\",\na.ue_pdm))})(ue_csm,window,document);\n(function(a,c){a.ue_vpm||!a.ue_cel||ue.isBF||(a.ue_vpm=function(){function h(){var a=u(),b={w:c.innerWidth,h:c.innerHeight,x:c.pageXOffset,y:c.pageYOffset};f&&f.w==b.w&&f.h==b.h&&f.x==b.x&&f.y==b.y||(b.t=a,b.k=\"vpi\",f=b,d(f,{clog:1}));q=0;r=u()-a;k+=1}function l(){q||(q=a.ue_cel.timeout(h,z))}var f,q,z,u,r=0,k=0,b=a.ue,d=a.ue_cel.log,n=a.uet,t=a.uex,v=b.attach,e=b.detach;\"function\"==typeof n&&n(\"bb\",\"csmCELLSvpm\",{wb:1});return{on:function(a){u=a.ts;z=a.timespan||100;h();v&&(v(\"scroll\",l),v(\"resize\",\nl));\"function\"==typeof t&&t(\"ld\",\"csmCELLSvpm\",{wb:1})},off:function(a){clearTimeout(q);e&&(e(\"scroll\",l),e(\"resize\",l));b.count&&(b.count(\"cel.VPI.TotalExecutions\",k),b.count(\"cel.VPI.TotalExecutionTime\",r),b.count(\"cel.VPI.AverageExecutionTime\",r/k))},ready:function(){return a.ue_cel&&a.ue_cel.log},reset:function(){f=void 0},getVpi:function(){return f}}}(),a.ue_cel&&a.ue_cel.registerModule(\"viewport module\",a.ue_vpm))})(ue_csm,window);\n(function(a,c,h){if(!a.ue_fem&&a.ue_cel&&a.ue_utils){var l=a.ue||{};!l.isBF&&!a.ue_fem&&h.querySelector&&c.getComputedStyle&&[].forEach&&(a.ue_fem=function(){function f(a,b){return a>b?3>a-b:3>b-a}function q(a,b){var e=c.pageXOffset,g=c.pageYOffset,d;a:{try{if(a){var h=a.getBoundingClientRect(),r,l=0===a.offsetWidth&&0===a.offsetHeight;c:{for(var k=a.parentNode,n=h.left||0,p=h.top||0,s=h.width||0,t=h.height||0;k&&k!==document.body;){var m;d:{try{var q=void 0;if(k)var C=k.getBoundingClientRect(),q=\n{x:C.left||0,y:C.top||0,w:C.width||0,h:C.height||0};else q=void 0;m=q;break d}catch(v){}m=void 0}var u=window.getComputedStyle(k),w=\"hidden\"===u.overflow,N=w||\"hidden\"===u.overflowX,J=w||\"hidden\"===u.overflowY,z=p+t-1\u003Cm.y+1||p+1>m.y+m.h-1;if((n+s-1\u003Cm.x+1||n+1>m.x+m.w-1)&&N||z&&J){r=!0;break c}k=k.parentNode}r=!1}d={x:h.left+e||0,y:h.top+g||0,w:h.width||0,h:h.height||0,d:(l||r)|0}}else d=void 0;break a}catch(A){}d=void 0}if(d&&!a.cel_b)a.cel_b=d,x({n:a.getAttribute(y),w:a.cel_b.w,h:a.cel_b.h,d:a.cel_b.d,\nx:a.cel_b.x,y:a.cel_b.y,t:b,k:\"ewi\",cl:a.className},{clog:1});else{if(e=d)e=a.cel_b,g=d,e=g.d===e.d&&1===g.d?!1:!(f(e.x,g.x)&&f(e.y,g.y)&&f(e.w,g.w)&&f(e.h,g.h)&&e.d===g.d);e&&(a.cel_b=d,x({n:a.getAttribute(y),w:a.cel_b.w,h:a.cel_b.h,d:a.cel_b.d,x:a.cel_b.x,y:a.cel_b.y,t:b,k:\"ewi\"},{clog:1}))}}function z(b,e){var c;c=b.c?h.getElementsByClassName(b.c):b.id?[h.getElementById(b.id)]:h.querySelectorAll(b.s);b.w=[];for(var d=0;d\u003Cc.length;d++){var f=c[d];if(f){if(!f.getAttribute(y)){var r=f.getAttribute(\"cel_widget_id\")||\n(b.id_gen||E)(f,d)||f.id;f.setAttribute(y,r)}b.w.push(f);k(Q,f,e)}}!1===B&&(s++,s===g.length&&(B=!0,a.ue_utils.notifyWidgetsLabeled()))}function u(a,b){p.contains(a)||x({n:a.getAttribute(y),t:b,k:\"ewd\"},{clog:1})}function r(a){I.length&&ue_cel.timeout(function(){if(m){for(var b=R(),c=!1;R()-b\u003Ce&&!c;){for(c=S;0\u003Cc--&&0\u003CI.length;){var g=I.shift();T[g.type](g.elem,g.time)}c=0===I.length}U++;r(a)}},0)}function k(a,b,c){I.push({type:a,elem:b,time:c})}function b(a,b){for(var c=0;c\u003Cg.length;c++)for(var e=\ng[c].w||[],d=0;d\u003Ce.length;d++)k(a,e[d],b)}function d(){K||(K=a.ue_cel.timeout(function(){K=null;var c=w();b(W,c);for(var e=0;e\u003Cg.length;e++)k(X,g[e],c);0===g.length&&!1===B&&(B=!0,a.ue_utils.notifyWidgetsLabeled());r(c)},v))}function n(){K||O||(O=a.ue_cel.timeout(function(){O=null;var a=w();b(Q,a);r(a)},v))}function t(){return A&&F&&p&&p.contains&&p.getBoundingClientRect&&w}var v=50,e=4.5,m=!1,w,y=\"data-cel-widget\",g=[],s=0,B=!1,E=function(){},x=a.ue_cel.log,p,D,A,F,G=c.MutationObserver||c.WebKitMutationObserver||\nc.MozMutationObserver,N=!!G,H,C,J=\"DOMAttrModified\",L=\"DOMNodeInserted\",M=\"DOMNodeRemoved\",O,K,I=[],U=0,S=null,W=\"removedWidget\",X=\"updateWidgets\",Q=\"processWidget\",T,V=c.performance||{},R=V.now&&function(){return V.now()}||function(){return Date.now()};\"function\"==typeof uet&&uet(\"bb\",\"csmCELLSfem\",{wb:1});return{on:function(b){function c(){if(t()){T={removedWidget:u,updateWidgets:z,processWidget:q};if(N){var a={attributes:!0,subtree:!0};H=new G(n);C=new G(d);H.observe(p,a);C.observe(p,{childList:!0,\nsubtree:!0});C.observe(D,a)}else A.call(p,J,n),A.call(p,L,d),A.call(p,M,d),A.call(D,L,n),A.call(D,M,n);d()}}p=h.body;D=h.head;A=p.addEventListener;F=p.removeEventListener;w=b.ts;g=a.cel_widgets||[];S=b.bs||5;l.deffered?c():l.attach&&l.attach(\"load\",c);\"function\"==typeof uex&&uex(\"ld\",\"csmCELLSfem\",{wb:1});m=!0},off:function(){t()&&(C&&(C.disconnect(),C=null),H&&(H.disconnect(),H=null),F.call(p,J,n),F.call(p,L,d),F.call(p,M,d),F.call(D,L,n),F.call(D,M,n));l.count&&l.count(\"cel.widgets.batchesProcessed\",\nU);m=!1},ready:function(){return a.ue_cel&&a.ue_cel.log},reset:function(){g=a.cel_widgets||[]}}}(),a.ue_cel&&a.ue_fem&&a.ue_cel.registerModule(\"features module\",a.ue_fem))}})(ue_csm,window,document);\n(function(a,c,h){!a.ue_mcm&&a.ue_cel&&a.ue_utils&&!a.ue.isBF&&(a.ue_mcm=function(){function l(a,k){var b=a.srcElement||a.target||{},d={k:f,w:(k||{}).ow||(c.body||{}).scrollWidth,h:(k||{}).oh||(c.body||{}).scrollHeight,t:(k||{}).ots||q(),x:a.pageX,y:a.pageY,p:u.getXPath(b),n:b.nodeName};h&&\"function\"===typeof h.now&&a.timeStamp&&(d.dt=(k||{}).odt||h.now()-a.timeStamp,d.dt=parseFloat(d.dt.toFixed(2)));a.button&&(d.b=a.button);b.href&&(d.r=u.extractStringValue(b.href));b.id&&(d.i=b.id);b.className&&\nb.className.split&&(d.c=b.className.split(/\\s+/));z(d,{c:1})}var f=\"mcm\",q,z=a.ue_cel.log,u=a.ue_utils;return{on:function(c){q=c.ts;a.ue_cel_stub&&a.ue_cel_stub.replayModule(f,l);window.addEventListener&&window.addEventListener(\"mousedown\",l,!0)},off:function(a){window.addEventListener&&window.removeEventListener(\"mousedown\",l,!0)},ready:function(){return a.ue_cel&&a.ue_cel.log},reset:function(){}}}(),a.ue_cel&&a.ue_cel.registerModule(\"mouse click module\",a.ue_mcm))})(ue_csm,document,window.performance);\n(function(a,c){a.ue_mmm||!a.ue_cel||a.ue.isBF||(a.ue_mmm=function(h){function l(a,b){var c={x:a.pageX||a.x||0,y:a.pageY||a.y||0,t:k()};!b&&x&&(c.t-x.t\u003Cz||c.x==x.x&&c.y==x.y)||(x=c,s.push(c))}function f(){if(s.length){y=G.now();for(var a=0;a\u003Cs.length;a++){var b=s[a],c=a;p=s[E];D=b;var d=void 0;if(!(d=2>c)){d=void 0;a:if(s[c].t-s[c-1].t>q)d=0;else{for(d=E+1;d\u003Cc;d++){var f=p,h=D,k=s[d];A=(h.x-f.x)*(f.y-k.y)-(f.x-k.x)*(h.y-f.y);if(A*A/((h.x-f.x)*(h.x-f.x)+(h.y-f.y)*(h.y-f.y))>u){d=0;break a}}d=1}d=!d}(F=\nd)?E=c-1:B.pop();B.push(b)}g=G.now()-y;v=Math.min(v,g);e=Math.max(e,g);m=(m*w+g)/(w+1);w+=1;n({k:r,e:B,min:Math.floor(1E3*v),max:Math.floor(1E3*e),avg:Math.floor(1E3*m)},{c:1});s=[];B=[];E=0}}var q=100,z=20,u=25,r=\"mmm1\",k,b,d=a.ue,n=a.ue_cel.log,t,v=1E3,e=0,m=0,w=0,y,g,s=[],B=[],E=0,x,p,D,A,F,G=h&&h.now&&h||Date.now&&Date||{now:function(){return(new Date).getTime()}};return{on:function(a){k=a.ts;b=a.ns;d.attach&&d.attach(\"mousemove\",l,c);t=setInterval(f,3E3)},off:function(a){b&&(x&&l(x,!0),f());\nclearInterval(t);d.detach&&d.detach(\"mousemove\",l,c)},ready:function(){return a.ue_cel&&a.ue_cel.log},reset:function(){s=[];B=[];E=0;x=null}}}(window.performance),a.ue_cel&&a.ue_cel.registerModule(\"mouse move module\",a.ue_mmm))})(ue_csm,document);\n\n\n\nue_csm.ue.exec(function(b,c){var e=function(){},f=function(){return{send:function(b,d){if(d&&b){var a;if(c.XDomainRequest)a=new XDomainRequest,a.onerror=e,a.ontimeout=e,a.onprogress=e,a.onload=e,a.timeout=0;else if(c.XMLHttpRequest){if(a=new XMLHttpRequest,!(\"withCredentials\"in a))throw\"\";}else a=void 0;if(!a)throw\"\";a.open(\"POST\",b,!0);a.setRequestHeader&&a.setRequestHeader(\"Content-type\",\"text/plain\");a.send(d)}},isSupported:!0}}(),g=function(){return{send:function(c,d){if(c&&d)if(navigator.sendBeacon(c,\nd))b.ue_sbuimp&&b.ue&&b.ue.ssw&&b.ue.ssw(\"eelsts\",\"scs\");else throw\"\";},isSupported:!!navigator.sendBeacon&&!(c.cordova&&c.cordova.platformId&&\"ios\"==c.cordova.platformId)}}();b.ue._ajx=f;b.ue._sBcn=g},\"Transportation-clients\")(ue_csm,window);\nue_csm.ue.exec(function(c,f){function C(){for(var a=0;a\u003Carguments.length;a++){var b=arguments[a];try{var c;if(b.isSupported){var g=t.buildPayload(k,e);c=b.send(N,g)}else throw dummyException;return c}catch(m){}}D({m:\"All supported clients failed\",attribution:\"CSMSushiClient_TRANSPORTATION_FAIL\",f:\"sushi-client.js\",logLevel:\"ERROR\"},f.ue_err_chan||\"jserr\")}function n(){if(e.length){for(var a=0;a\u003Cp.length;a++)p[a]();C(d._sBcn||{},d._ajx||{});e=[];h={};k={};u=v=q=w=0}}function O(){var a=new Date,b=function(a){return 10>\na?\"0\"+a:a};return Date.prototype.toISOString?a.toISOString():a.getUTCFullYear()+\"-\"+b(a.getUTCMonth()+1)+\"-\"+b(a.getUTCDate())+\"T\"+b(a.getUTCHours())+\":\"+b(a.getUTCMinutes())+\":\"+b(a.getUTCSeconds())+\".\"+String((a.getUTCMilliseconds()/1E3).toFixed(3)).slice(2,5)+\"Z\"}function x(a){try{return JSON.stringify(a)}catch(b){}return null}function E(a,b,l,g){var m=!1;g=g||{};r++;r==F&&D({m:\"Max number of Sushi Logs exceeded\",f:\"sushi-client.js\",logLevel:\"ERROR\",attribution:\"CSMSushiClient_MAX_CALLS\"},f.ue_err_chan||\n\"jserr\");var y;if(y=!(r>=F))(y=a&&-1\u003Ca.constructor.toString().indexOf(\"Object\")&&b&&-1\u003Cb.constructor.toString().indexOf(\"String\")&&l&&-1\u003Cl.constructor.toString().indexOf(\"String\"))||P++;y&&(d.count&&d.count(\"Event:\"+l,1),a.producerId=a.producerId||b,a.schemaId=a.schemaId||l,a.timestamp=O(),b=Date.now?Date.now():+new Date,l=Math.random().toString().substring(2,12),a.messageId=c.ue_id+\"-\"+b+\"-\"+l,g&&!g.ssd&&(a.sessionId=a.sessionId||c.ue_sid,a.requestId=a.requestId||c.ue_id,a.obfuscatedMarketplaceId=\na.obfuscatedMarketplaceId||c.ue_mid),(b=x(a))?(b=b.length,(e.length==Q||q+b>R)&&n(),q+=b,a={data:t.compressEvent(a)},e.push(a),(g||{}).n?0===G?n():u||(u=f.setTimeout(n,G)):v||(v=f.setTimeout(n,S)),m=!0):m=!1);!m&&c.ue_int&&console.error(\"Invalid JS Nexus API call\");return m}function H(){if(!I){for(var a=0;a\u003Cz.length;a++)z[a]();for(a=0;a\u003Cp.length;a++)p[a]();e.length&&(c.ue_sbuimp&&c.ue&&c.ue.ssw&&(a=x({dct:k,evt:e}),c.ue.ssw(\"eeldata\",a),c.ue.ssw(\"eelsts\",\"unk\")),C(d._sBcn||{}));I=!0}}function J(a){z.push(a)}\nfunction K(a){p.push(a)}var F=1E3,Q=499,R=524288,s=function(){},d=c.ue||{},D=d.log||s,T=c.uex||s;(c.uet||s)(\"bb\",\"ue_sushi_v1\",{wb:1});var N=c.ue_surl||\"https://unagi-na.amazon.com/1/events/com.amazon.csm.nexusclient.gamma\",U=[\"messageId\",\"timestamp\"],A=\"#\",e=[],h={},k={},q=0,w=0,P=0,r=0,B=0,L=1,M=2,z=[],p=[],I=!1,u,v,G=void 0===c.ue_hpsi?1E3:c.ue_hpsi,S=void 0===c.ue_lpsi?1E4:c.ue_lpsi,t=function(){function a(a){h[a]=A+w++;k[h[a]]=a;return h[a]}function b(a){return a.length>(A+w).length||a.charAt(0)===\nA}function c(a){if(a)switch(typeof a){case \"number\":return!(isNaN(a)||Infinity===a)&&b(a.toString());case \"boolean\":break;case \"string\":return b(a);default:return!0}return!1}function g(b){if(c(b)){var d=B;b instanceof Array?d=M:b instanceof Function?d=B:b instanceof Object&&(d=L);switch(d){case B:b=h[b]?h[b]:a(b);break;case M:var e=b;b=[];for(var d=e.length,f=0;f\u003Cd;f++)b[f]=g(e[f]);break;case L:d={};for(e in b)b.hasOwnProperty(e)&&(d[h[e]?h[e]:a(e)]=-1==U.indexOf(e)?g(b[e]):b[e]);b=d}}return b}return{compressEvent:g,\nbuildPayload:function(){return x({cs:{dct:k},events:e})}}}();(function(){if(d.event&&d.event.isStub){if(c.ue_sbuimp&&c.ue&&c.ue.ssw){var a=c.ue.ssw(\"eelsts\").val;if(a&&\"unk\"===a&&(a=c.ue.ssw(\"eeldata\").val)){var b;a:{try{b=JSON.parse(a);break a}catch(f){}b=null}b&&b.evt instanceof Array&&b.dct instanceof Object&&(e=b.evt,k=b.dct,e&&k&&(n(),c.ue.ssw(\"eeldata\",\"{}\"),c.ue.ssw(\"eelsts\",\"scs\")))}}d.event.replay(function(a){a[3]=a[3]||{};a[3].n=1;E.apply(this,a)});d.onSushiUnload.replay(function(a){J(a[0])});\nd.onSushiFlush.replay(function(a){K(a[0])})}})();d.attach(\"beforeunload\",H);d.attach(\"pagehide\",H);d._cmps=t;d.event=E;d.event.reset=function(){r=0};d.onSushiUnload=J;d.onSushiFlush=K;try{f.P&&f.P.register&&f.P.register(\"sushi-client\",s)}catch(V){c.ueLogError(V,{logLevel:\"WARN\"})}T(\"ld\",\"ue_sushi_v1\",{wb:1})},\"Nxs-JS-Client\")(ue_csm,window);\n\n\nue_csm.ue_unrt = 750;\n(function(d,b,t){function u(a,b){var c=a.srcElement||a.target||{},e={k:w,t:b.t,dt:b.dt,x:a.pageX,y:a.pageY,p:f.getXPath(c),n:c.nodeName};a.button&&(e.b=a.button);c.type&&(e.ty=c.type);c.href&&(e.r=f.extractStringValue(c.href));c.id&&(e.i=c.id);c.className&&c.className.split&&(e.c=c.className.split(/\\s+/));g+=1;f.getFirstAscendingWidget(c,function(a){e.wd=a;d.ue.log(e,r)})}function x(a){if(!y(a.srcElement||a.target)){k+=1;n=!0;var v=h=d.ue.d(),c;p&&\"function\"===typeof p.now&&a.timeStamp&&(c=p.now()-\na.timeStamp,c=parseFloat(c.toFixed(2)));s=b.setTimeout(function(){u(a,{t:v,dt:c})},z)}}function A(a){if(a){var b=a.filter(B);a.length!==b.length&&(q=!0,l=d.ue.d(),n&&q&&(l&&h&&d.ue.log({k:C,t:h,m:Math.abs(l-h)},r),m(),q=!1,l=0))}}function B(a){if(!a)return!1;var b=\"characterData\"===a.type?a.target.parentElement:a.target;if(!b||!b.hasAttributes||!b.attributes)return!1;var c={\"class\":\"gw-clock gw-clock-aria s-item-container-height-auto feed-carousel using-mouse kfs-inner-container\".split(\" \"),id:[\"dealClock\",\n\"deal_expiry_timer\",\"timer\"],role:[\"timer\"]},e=!1;Object.keys(c).forEach(function(a){var d=b.attributes[a]?b.attributes[a].value:\"\";(c[a]||\"\").forEach(function(a){-1!==d.indexOf(a)&&(e=!0)})});return e}function y(a){if(!a)return!1;var b=(f.extractStringValue(a.nodeName)||\"\").toLowerCase(),c=(f.extractStringValue(a.type)||\"\").toLowerCase(),d=(f.extractStringValue(a.href)||\"\").toLowerCase();a=(f.extractStringValue(a.id)||\"\").toLowerCase();var g=\"checkbox color date datetime-local email file month number password radio range reset search tel text time url week\".split(\" \");\nif(-1!==[\"select\",\"textarea\",\"html\"].indexOf(b)||\"input\"===b&&-1!==g.indexOf(c)||\"a\"===b&&-1!==d.indexOf(\"http\")||-1!==[\"sitbreaderrightpageturner\",\"sitbreaderleftpageturner\",\"sitbreaderpagecontainer\"].indexOf(a))return!0}function m(){n=!1;h=0;b.clearTimeout(s)}function D(){b.ue.onSushiUnload(function(){ue.event({violationType:\"unresponsive-clicks\",violationCount:g,totalScanned:k},\"csm\",\"csm.ArmoredCXGuardrailsViolation.3\")});b.ue.onunload(function(){ue.count(\"armored-cxguardrails.unresponsive-clicks.violations\",\ng);ue.count(\"armored-cxguardrails.unresponsive-clicks.violationRate\",g/k*100||0)})}if(b.MutationObserver&&b.addEventListener&&Object.keys&&d&&d.ue&&d.ue.log&&d.ue_unrt&&d.ue_utils){var z=d.ue_unrt,r=\"cel\",w=\"unr_mcm\",C=\"res_mcm\",p=b.performance,f=d.ue_utils,n=!1,h=0,s=0,q=!1,l=0,g=0,k=0;b.addEventListener&&(b.addEventListener(\"mousedown\",x,!0),b.addEventListener(\"beforeunload\",m,!0),b.addEventListener(\"visibilitychange\",m,!0),b.addEventListener(\"pagehide\",m,!0));b.ue&&b.ue.event&&b.ue.onSushiUnload&&\nb.ue.onunload&&D();(new MutationObserver(A)).observe(t,{childList:!0,attributes:!0,characterData:!0,subtree:!0})}})(ue_csm,window,document);\n\n\nue_csm.ue.exec(function(g,e){if(e.ue_err){var f=\"\";e.ue_err.errorHandlers||(e.ue_err.errorHandlers=[]);e.ue_err.errorHandlers.push({name:\"fctx\",handler:function(a){if(!a.logLevel||\"FATAL\"===a.logLevel)if(f=g.getElementsByTagName(\"html\")[0].innerHTML){var b=f.indexOf(\"var ue_t0=ue_t0||+new Date();\");if(-1!==b){var b=f.substr(0,b).split(String.fromCharCode(10)),d=Math.max(b.length-10-1,0),b=b.slice(d,b.length-1);a.fcsmln=d+b.length+1;a.cinfo=a.cinfo||{};for(var c=0;c\u003Cb.length;c++)a.cinfo[d+c+1+\"\"]=\nb[c]}b=f.split(String.fromCharCode(10));a.cinfo=a.cinfo||{};if(!(a.f||void 0===a.l||a.l in a.cinfo))for(c=+a.l-1,d=Math.max(c-5,0),c=Math.min(c+5,b.length-1);d\u003C=c;d++)a.cinfo[d+1+\"\"]=b[d]}}})}},\"fatals-context\")(document,window);\n\n\n(function(m,b){function c(k){function f(a){a&&\"string\"===typeof a&&(a=(a=a.match(/^(?:https?:)?\\/\\/(.*?)(\\/|$)/i))&&1\u003Ca.length?a[1]:null,a&&a&&(\"number\"===typeof e[a]?e[a]++:e[a]=1))}function d(a){var e=10,d=+new Date;a&&a.timeRemaining?e=a.timeRemaining():a={timeRemaining:function(){return Math.max(0,e-(+new Date-d))}};for(var c=b.performance.getEntries(),k=e;g\u003Cc.length&&k>n;)c[g].name&&f(c[g].name),g++,k=a.timeRemaining();g>=c.length?h(!0):l()}function h(a){if(!a){a=m.scripts;var c;if(a)for(var d=\n0;d\u003Ca.length;d++)(c=a[d].getAttribute(\"src\"))&&\"undefined\"!==c&&f(c)}0\u003CObject.keys(e).length&&(p&&ue_csm.ue&&ue_csm.ue.event&&ue_csm.ue.event({domains:e},\"csm\",\"csm.CrossOriginDomains.1\"),b.ue_ext=e)}function l(){!0===k?d():b.requestIdleCallback?b.requestIdleCallback(d):b.requestAnimationFrame?b.requestAnimationFrame(d):b.setTimeout(d,100)}function c(){if(b.performance&&b.performance.getEntries){var a=b.performance.getEntries();!a||0>=a.length?h(!1):l()}else h(!1)}var e=b.ue_ext||{};b.ue_ext||c();\nreturn e}function q(){setTimeout(c,r)}var s=b.ue_dserr||!1,p=!0,n=1,r=2E3,g=0;b.ue_err&&s&&(b.ue_err.errorHandlers||(b.ue_err.errorHandlers=[]),b.ue_err.errorHandlers.push({name:\"ext\",handler:function(b){if(!b.logLevel||\"FATAL\"===b.logLevel){var f=c(!0),d=[],h;for(h in f){var f=h,g=f.match(/amazon(\\.com?)?\\.\\w{2,3}$/i);g&&1\u003Cg.length||-1!==f.indexOf(\"amazon-adsystem.com\")||-1!==f.indexOf(\"amazonpay.com\")||-1!==f.indexOf(\"cloudfront-labs.amazonaws.com\")||d.push(h)}b.ext=d}}}));b.ue&&b.ue.isl?c():b.ue&&\nue.attach&&ue.attach(\"load\",q)})(document,window);\n\n\n\n\n\nue_csm.ue.exec(function(b,e){function q(){for(var a=0;a\u003Cf.length;a++)a:for(var d=r.replace(A,f[a])+g[f[a]]+s,c=arguments,b=0;b\u003Cc.length;b++)try{c[b].send(d);break a}catch(e){}g={};f=[];m=0;k=n}function t(){q(B,u)}function v(a,l,c){p++;if(p>w)d.count&&1==p-w&&(d.count(\"WeblabTriggerThresholdReached\",1),b.ue_int&&console.error(\"Number of max call reached. Data will no longer be send\"));else{var h=c||{};h&&-1\u003Ch.constructor.toString().indexOf(C)&&a&&-1\u003Ca.constructor.toString().indexOf(x)&&l&&-1\u003Cl.constructor.toString().indexOf(x)?\n(h=b.ue_id,c&&c.rid&&(h=c.rid),c=h,a=encodeURIComponent(\",wl=\"+a+\"/\"+l),2E3>a.length+n?(2E3\u003Ck+a.length&&t(),void 0===g[c]&&(g[c]=\"\",f.push(c)),g[c]+=a,k+=a.length,m||(m=e.setTimeout(t,D))):b.ue_int&&console.error(\"Invalid API call. The input provided is over 2000 chars.\")):d.count&&(d.count(\"WeblabTriggerImproperAPICall\",1),b.ue_int&&console.error(\"Invalid API call. The input provided does not match the API protocol i.e ue.trigger(String, String, Object).\"))}}function E(){d.trigger&&d.trigger.isStub&&\nd.trigger.replay(function(a){v.apply(this,a)})}function y(){z||(f.length&&q(u),z=!0)}var s=\":1234\",r=\"//\"+b.ue_furl+\"/1/remote-weblab-triggers/1/OE/\"+b.ue_mid+\":\"+b.ue_sid+\":PLCHLDR_RID$s:wl-client-id%3DCSMTriger\",A=\"PLCHLDR_RID\",D=b.wtt||1E4,n=r.length+s.length,w=b.mwtc||2E3,F=e.XMLHttpRequest&&\"withCredentials\"in new e.XMLHttpRequest,x=\"String\",C=\"Object\",d=b.ue,g={},f=[],k=n,m,z=!1,p=0,B=function(){return{send:function(a){if(F){var b=new e.XMLHttpRequest;b.open(\"GET\",a,!0);b.send()}else throw\"\";\n}}}(),u=function(){return{send:function(a){(new Image).src=a}}}();e.encodeURIComponent&&(d.attach&&(d.attach(\"beforeunload\",y),d.attach(\"pagehide\",y)),E(),d.trigger=v)},\"client-wbl-trg\")(ue_csm,window);\n\n\n(function(k,d,h){function f(a,c,b){a&&a.indexOf&&0===a.indexOf(\"http\")&&0!==a.indexOf(\"https\")&&l(s,c,a,b)}function g(a,c,b){a&&a.indexOf&&(location.href.split(\"#\")[0]!=a&&null!==a&&\"undefined\"!==typeof a||l(t,c,a,b))}function l(a,c,b,e){m[b]||(e=u&&e?n(e):\"N/A\",d.ueLogError&&d.ueLogError({message:a+c+\" : \"+b,logLevel:v,stack:\"N/A\"},{attribution:e}),m[b]=1,p++)}function e(a,c){if(a&&c)for(var b=0;b\u003Ca.length;b++)try{c(a[b])}catch(d){}}function q(){return d.performance&&d.performance.getEntriesByType?\nd.performance.getEntriesByType(\"resource\"):[]}function n(a){if(a.id)return\"//*[@id='\"+a.id+\"']\";var c;c=1;var b;for(b=a.previousSibling;b;b=b.previousSibling)b.nodeName==a.nodeName&&(c+=1);b=a.nodeName;1!=c&&(b+=\"[\"+c+\"]\");a.parentNode&&(b=n(a.parentNode)+\"/\"+b);return b}function w(){var a=h.images;a&&a.length&&e(a,function(a){var b=a.getAttribute(\"src\");f(b,\"img\",a);g(b,\"img\",a)})}function x(){var a=h.scripts;a&&a.length&&e(a,function(a){var b=a.getAttribute(\"src\");f(b,\"script\",a);g(b,\"script\",a)})}\nfunction y(){var a=h.styleSheets;a&&a.length&&e(a,function(a){if(a=a.ownerNode){var b=a.getAttribute(\"href\");f(b,\"style\",a);g(b,\"style\",a)}})}function z(){if(A){var a=q();e(a,function(a){f(a.name,a.initiatorType)})}}function B(){e(q(),function(a){g(a.name,a.initiatorType)})}function r(){var a;a=d.location&&d.location.protocol?d.location.protocol:void 0;\"https:\"==a&&(z(),w(),x(),y(),B(),p\u003CC&&setTimeout(r,D))}var s=\"[CSM] Insecure content detected \",t=\"[CSM] Ajax request to same page detected \",v=\"WARN\",\nm={},p=0,D=k.ue_nsip||1E3,C=5,A=1==k.ue_urt,u=!0;ue_csm.ue_disableNonSecure||(d.performance&&d.performance.setResourceTimingBufferSize&&d.performance.setResourceTimingBufferSize(300),r())})(ue_csm,window,document);\n\n\nvar ue_aa_a = \"T1\";\nif (ue.trigger && (ue_aa_a === \"C\" || ue_aa_a === \"T1\")) {\n    ue.trigger(\"UEDATA_AA_SERVERSIDE_ASSIGNMENT_CLIENTSIDE_TRIGGER_190249\", ue_aa_a);\n}\n(function(f,b){function g(){try{b.PerformanceObserver&&\"function\"===typeof b.PerformanceObserver&&(a=new b.PerformanceObserver(function(b){c(b.getEntries())}),a.observe(d))}catch(h){k()}}function m(){for(var h=d.entryTypes,a=0;a\u003Ch.length;a++)c(b.performance.getEntriesByType(h[a]))}function c(a){if(a&&Array.isArray(a)){for(var c=0,e=0;e\u003Ca.length;e++){var d=l.indexOf(a[e].name);if(-1!==d){var g=Math.round(b.performance.timing.navigationStart+a[e].startTime);f.uet(n[d],void 0,void 0,g);c++}}l.length===\nc&&k()}}function k(){a&&a.disconnect&&\"function\"===typeof a.disconnect&&a.disconnect()}if(\"function\"===typeof f.uet&&b.performance&&\"object\"===typeof b.performance&&b.performance.getEntriesByType&&\"function\"===typeof b.performance.getEntriesByType&&b.performance.timing&&\"object\"===typeof b.performance.timing&&\"number\"===typeof b.performance.timing.navigationStart){var d={entryTypes:[\"paint\"]},l=[\"first-paint\",\"first-contentful-paint\"],n=[\"fp\",\"fcp\"],a;try{m(),g()}catch(p){f.ueLogError(p,{logLevel:\"ERROR\",\nattribution:\"performanceMetrics\"})}}})(ue_csm,window);\n\n\nif (window.csa) {\n    csa(\"Events\")(\"setEntity\", {\n        page:{pageType: \"Detail\", subPageType: \"Glance\", pageTypeId: \"B06XD3LXXK\"}\n    });\n}\n\n}\n/* ◬ */\n\u003C/script>\n\n\u003C/div>\n\n\u003Cnoscript>\n    \u003Cimg height=\"1\" width=\"1\" style='display:none;visibility:hidden;' src='//fls-na.amazon.com/1/batch/1/OP/ATVPDKIKX0DER:137-0530487-6192152:WY2K06V7WEMKTC0K2H7W$uedata=s:%2Fgp%2Fuedata%3Fnoscript%26id%3DWY2K06V7WEMKTC0K2H7W:0' alt=\"\"/>\n\u003C/noscript>\n\u003C/div>\n\u003C!--       _\n       .__(.)\u003C (MEOW)\n        \\___)   \n ~~~~~~~~~~~~~~~~~~-->\n\u003C!-- sp:eh:Zcw0c+k7HpYLEzqxCgmTCtRS/Qrr7kPnX8q5pcrHpkdCL+jOefJrHEGR+WueUoMNEqkgjCU6hj4be/6FcM4jPcgmsxiJ2AgZduXt4+97Ct9Dz9yfh9Q2Uw== -->\n\u003Cdiv id=\"a-popover-root\" style=\"z-index:-1;position:absolute;\">\u003C/div>\u003Cscript type=\"text/html\" id=\"s-suggestion\">\u003Cdiv id=\"\u003C#= suggestionId #>\"class=\"s-suggestion\"data-alias=\"\u003C#= alias #>\"data-keyword=\"\u003C#= keyword #>\"data-store=\"\u003C#= store #>\"data-isSc=\"\u003C#= isSpellCorrected #>\"data-isFb=\"\u003C#= isFallback #>\"data-type=\"\u003C#= type #>\"data-nid=\"\u003C#= browseNodeId #>\"data-reftag=\"\u003C#= refTag #>\"data-crid=\"\u003C#= completionResponseId #>\">\u003C# if (!skipDisplay) { for (var i = 0; i \u003C highlightFragments.length; i++) {if (!highlightFragments[i].isHit) { #>\u003Cspan class=\"s-heavy\">\u003C# } #>\u003C#= highlightFragments[i].text #>\u003C# if (!highlightFragments[i].isHit) { #>\u003C/span>\u003C# } #>\u003C# } #>\u003C# } #>\u003C# if (typeof storeHtml === \"string\") { #> \u003C#= storeHtml #>\u003C# } #>\u003C/div>\u003C/script>\u003Cscript type=\"text/html\" id=\"suggestions-template\">\u003Cdiv id=\"suggestions-template\">\u003C# if (typeof suggestionTitle !== \"undefined\") { #>\u003Cdiv id=\"suggestion-title\">\u003C#= suggestionTitle #>\u003C/div>\u003C# } #>\u003C# if (typeof biaTitle !== \"undefined\") { #>\u003Ca href=\"\u003C#= biaWidgetUrl #>\" style=\"text-decoration: none !important;\">\u003Cp class=\"s-bia-suggestion\">\u003Cstrong>\u003C#= biaTitle #>\u003C/strong>\u003C/p>\u003C/a>\u003C# } #>\u003Cdiv id=\"suggestions\" dir=\"auto\">\u003C# if (typeof suggestions !== \"undefined\") {for(var i=0; i \u003C suggestions.length; i++) {var displayString = suggestions[i].display; #>\u003C#= displayString #>\u003C# }} #>\u003C/div>\u003C/div>\u003C/script>\u003Cscript type=\"text/html\" id=\"promoted-suggestion\">\u003Cdiv class=\"s-suggestion s-suggestion-link-template\">\u003Ca href=\"\u003C#= widgetItems[0].metadata.link_url #>\">\u003C#for (var i = 0; i \u003C highlightFragments.length; i++) {if (highlightFragments[i].isHighlight) { #>\u003Cspan class=\"s-heavy\">\u003C# } #>\u003C#= highlightFragments[i].text #>\u003C# if (highlightFragments[i].isHighlight) { #>\u003C/span>\u003C# } #>\u003C# } #>\u003C/a>\u003C/div>\u003C/script>\u003Cscript type=\"text/html\" id=\"s-recentSearch\">\u003Cdiv id=\"\u003C#= suggestionId #>\" class=\"s-suggestion s-recentSearch s-recentSearchDistinct\" data-alias=\"\u003C#= alias #>\" data-keyword=\"\u003C#= keyword #>\" data-store=\"\u003C#= store #>\" data-isSc=\"false\" data-isFb=\"false\" data-type=\"\u003C#= type #>\">\u003Cspan class=\"s-heavy\">\u003C#= bprefix #>\u003C/span>\u003C#= prefix #>\u003Cspan class=\"s-heavy\">\u003C#= suffix #>\u003C/span>\u003C# if (typeof storeHtml === \"string\") { #> \u003C#= storeHtml #>\u003C# } #>\u003Cspan id=\"delete-\u003C#= suggestionId #>\" class=\"s-suggestion-deleteDistinct\">\u003Ci id=\"delete-icon-\u003C#= suggestionId #>\" class=\"a-icon a-icon-remove\">\u003C/i>\u003C/span> \u003C/div>\u003C/script>\u003Cscript type=\"text/html\" id=\"s-separator\">\u003Cdiv id=\"s-separator\">\u003Cdiv class=\"s-separator\">\u003C/div>\u003C/div>\u003C/script>\u003Cscript type=\"text/html\" id=\"s-option\">\u003Coption value=\"\u003C#= value #>\">\u003C#= store #>\u003C/option>\u003C/script>\u003Cscript type=\"text/html\" id=\"s-minimal\">\u003Cdiv class=\"s-suggestion s-custom\" data-url=\"\u003C#= url #>\">\u003C#= bprefix #>\u003Cspan class=\"s-heavy\">\u003C#= prefix #>\u003C/span>\u003C#= suffix #>\u003C/div>\u003C/script>\u003Cscript type=\"text/html\" id=\"s-storeText\">\u003Cspan class=\"\u003C#= cssClasses #>\">\u003C#= store #>\u003C/span>\u003C/script>\u003Cscript type=\"text/html\" id=\"s-nextSearch\">\u003Cdiv id=\"\u003C#= suggestionId #>\" \u003C# if (nextSearchTemplateType === \"T2\") { #>class=\"s-suggestion s-nextSearch s-nextSearch-block s-nextSearch-cell\" \u003C# } else { #>class=\"s-suggestion s-nextSearch\" \u003C# } #>data-alias=\"\u003C#= alias #>\" data-keyword=\"\u003C#= keywords #>\" data-isSc=\"false\" data-isFb=\"false\" data-type=\"\u003C#= type #>\">\u003C#= keywords #>\u003C/div>\u003C/script>\u003Cscript type=\"text/html\" id=\"s-qu-suggestion\">\u003Cdiv id=\"\u003C#= suggestionId #>\"class=\"s-suggestion s-qu-suggestion\"data-keyword=\"\u003C#= keyword #>\"data-store=\"\u003C#= store #>\"data-isSc=\"\u003C#= isSpellCorrected #>\"data-type=\"\u003C#= type #>\"data-qu-type=\"\u003C#= qu.type #>\"data-qu-value=\"\u003C#= qu.value #>\"data-crid=\"\u003C#= completionResponseId #>\">\u003Cspan class=\"s-qu-display-string\">\u003C#= qu.displayString  #>\u003C/span>\u003C/div>\u003C/script>\u003Cscript type=\"text/html\" id=\"asin\">\u003Cdiv class=\"s-asin-suggestion s-suggestion\">\u003Ca class=\"s-asin-sug-link\" href=\"\u003C#= widgetItems[0].metadata.link_url #>\">\u003Cdiv class=\"s-asin-sug-left\">\u003Cdiv class=\"s-asin-image-container\" style=\"opacity: 1;\">\u003Cimg class=\"s-asin-image\" src=\"\u003C#= widgetItems[0].metadata.image_url #>\">\u003C/div>\u003C/div>\u003Cdiv class=\"s-asin-sug-right\">\u003Cdiv class=\"s-size-mini s-sug-pp-caption\">\u003C#= widgetItems[0].metadata.asin_header #>\u003C/div>\u003Cdiv class=\"s-asin-title\">\u003C#= widgetItems[0].metadata.asin_title #>\u003C/div>\u003C/div>\u003C/a>\u003C/div>\u003C/script>\n\n    \n            \n            \n\n    \n            \n            \u003C/body>\u003C/html>"}
    http_version: 
  recorded_at: Sun, 29 Sep 2019 00:50:06 GMT
recorded_with: VCR 5.0.0
