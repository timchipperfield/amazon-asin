---
http_interactions:
- request:
    method: post
    uri: http://127.0.0.1:9526/session
    body:
      encoding: UTF-8
      string: '{"desiredCapabilities":{"browserName":"chrome","version":"","platform":"ANY","javascriptEnabled":true,"cssSelectorsEnabled":true,"takesScreenshot":false,"nativeEvents":false,"rotatable":false,"goog:chromeOptions":{"args":["--headless","--disable-gpu"]}},"capabilities":{"firstMatch":[{"browserName":"chrome","goog:chromeOptions":{"args":["--headless","--disable-gpu"]}}]}}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.4 (ruby macosx)
      Content-Length:
      - '372'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '688'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"77.0.3865.90","chrome":{"chromedriverVersion":"77.0.3865.40
        (f484704e052e0b556f8030b65b953dce96503217-refs/branch-heads/3865@{#442})","userDataDir":"/var/folders/jt/sw87myz574l4x42760rl5fy80000gn/T/.com.google.Chrome.UKzE9w"},"goog:chromeOptions":{"debuggerAddress":"localhost:58819"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"mac
        os x","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss
        and notify"},"sessionId":"aed2dc3602fd171640b6304f7d47e6d5"}}'
    http_version: 
  recorded_at: Sun, 29 Sep 2019 22:00:58 GMT
- request:
    method: post
    uri: http://127.0.0.1:9526/session/aed2dc3602fd171640b6304f7d47e6d5/url
    body:
      encoding: UTF-8
      string: '{"url":"http://www.amazon.com/dp/B01GKQI392"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.4 (ruby macosx)
      Content-Length:
      - '45'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '14'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: UTF-8
      string: '{"value":null}'
    http_version: 
  recorded_at: Sun, 29 Sep 2019 22:01:06 GMT
- request:
    method: post
    uri: http://127.0.0.1:9526/session/aed2dc3602fd171640b6304f7d47e6d5/execute/sync
    body:
      encoding: UTF-8
      string: '{"script":"var source = document.documentElement.outerHTML;if (!source)
        { source = new XMLSerializer().serializeToString(document); }return source;","args":[]}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/3.142.4 (ruby macosx)
      Content-Length:
      - '159'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '1384143'
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJ2YWx1ZSI6Ilx1MDAzQ2h0bWwgbGFuZz1cImVuLXVzXCIgY2xhc3M9XCIgYS1qcyBhLWF1ZGlvIGEtdmlkZW8gYS1jYW52YXMgYS1zdmcgYS1kcmFnLWRyb3AgYS1nZW9sb2NhdGlvbiBhLWhpc3RvcnkgYS13ZWJ3b3JrZXIgYS1hdXRvZm9jdXMgYS1pbnB1dC1wbGFjZWhvbGRlciBhLXRleHRhcmVhLXBsYWNlaG9sZGVyIGEtbG9jYWwtc3RvcmFnZSBhLWdyYWRpZW50cyBhLWhpcmVzIGEtdHJhbnNmb3JtM2QgLXNjcm9sbGluZyBhLXRleHQtc2hhZG93IGEtdGV4dC1zdHJva2UgYS1ib3gtc2hhZG93IGEtYm9yZGVyLXJhZGl1cyBhLWJvcmRlci1pbWFnZSBhLW9wYWNpdHkgYS10cmFuc2Zvcm0gYS10cmFuc2l0aW9uIG51bGxcIiBkYXRhLTE5YXg1YTlqZj1cImRpbmdvXCIgZGF0YS1hdWktYnVpbGQtZGF0ZT1cIjMuMTkuNi0yMDE5LTA5LTI3XCI+XHUwMDNDIS0tIHNwOmZlYXR1cmU6aGVhZC1zdGFydCAtLT5cdTAwM0NoZWFkPlx1MDAzQ3NjcmlwdCBhc3luYz1cIlwiIHNyYz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2NzbS9zaG93YWRzLnYyLmpzXCIgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIj5cdTAwM0Mvc2NyaXB0Plx1MDAzQ3NjcmlwdCBhc3luYz1cIlwiIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0NsaWVudFNpZGVNZXRyaWNzQVVJSmF2YXNjcmlwdEBqc2Vycm9yc0ZvcmVzdGVyLjEwZjI1NTllOTNlYzU4OWQ5MjUwOTMxOGE3ZTJhY2JhYzc0YzM0M2EuX1YyXy5qc1wiIGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCI+XHUwMDNDL3NjcmlwdD5cdTAwM0NzdHlsZSBjbGFzcz1cInZqcy1zdHlsZXMtZGVmYXVsdHNcIj5cbiAgICAgIC52aWRlby1qcyB7XG4gICAgICAgIHdpZHRoOiAzMDBweDtcbiAgICAgICAgaGVpZ2h0OiAxNTBweDtcbiAgICAgIH1cblxuICAgICAgLnZqcy1mbHVpZCB7XG4gICAgICAgIHBhZGRpbmctdG9wOiA1Ni4yNSVcbiAgICAgIH1cbiAgICBcdTAwM0Mvc3R5bGU+XHUwMDNDc2NyaXB0PnZhciBhUGFnZVN0YXJ0ID0gKG5ldyBEYXRlKCkpLmdldFRpbWUoKTtcdTAwM0Mvc2NyaXB0Plx1MDAzQ21ldGEgY2hhcnNldD1cInV0Zi04XCI+XG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPnZhciB1ZV90MD11ZV90MHx8K25ldyBEYXRlKCk7XHUwMDNDL3NjcmlwdD5cdTAwM0MhLS0gc3A6ZmVhdHVyZTpjcy1vcHRpbWl6YXRpb24gLS0+XG5cdTAwM0NtZXRhIGh0dHAtZXF1aXY9XCJ4LWRucy1wcmVmZXRjaC1jb250cm9sXCIgY29udGVudD1cIm9uXCI+XHUwMDNDbGluayByZWw9XCJkbnMtcHJlZmV0Y2hcIiBocmVmPVwiLy9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tXCI+XHUwMDNDbGluayByZWw9XCJkbnMtcHJlZmV0Y2hcIiBocmVmPVwiLy9tLm1lZGlhLWFtYXpvbi5jb21cIj5cdTAwM0NsaW5rIHJlbD1cImRucy1wcmVmZXRjaFwiIGhyZWY9XCIvL2NvbXBsZXRpb24uYW1hem9uLmNvbVwiPlx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG53aW5kb3cudWVfaWhiID0gKHdpbmRvdy51ZV9paGIgfHwgd2luZG93LnVlaW5pdCB8fCAwKSArIDE7XG5pZiAod2luZG93LnVlX2loYiA9PT0gMSkge1xuXG52YXIgdWVfY3NtID0gd2luZG93LFxuICAgIHVlX2hvYiA9ICtuZXcgRGF0ZSgpO1xuKGZ1bmN0aW9uKGQpe3ZhciBlPWQudWU9ZC51ZXx8e30sZj1EYXRlLm5vd3x8ZnVuY3Rpb24oKXtyZXR1cm4rbmV3IERhdGV9O2UuZD1mdW5jdGlvbihiKXtyZXR1cm4gZigpLShiPzA6ZC51ZV90MCl9O2Uuc3R1Yj1mdW5jdGlvbihiLGEpe2lmKCFiW2FdKXt2YXIgYz1bXTtiW2FdPWZ1bmN0aW9uKCl7Yy5wdXNoKFtjLnNsaWNlLmNhbGwoYXJndW1lbnRzKSxlLmQoKSxkLnVlX2lkXSl9O2JbYV0ucmVwbGF5PWZ1bmN0aW9uKGIpe2Zvcih2YXIgYTthPWMuc2hpZnQoKTspYihhWzBdLGFbMV0sYVsyXSl9O2JbYV0uaXNTdHViPTF9fTtlLmV4ZWM9ZnVuY3Rpb24oYixhKXtyZXR1cm4gZnVuY3Rpb24oKXt0cnl7cmV0dXJuIGIuYXBwbHkodGhpcyxhcmd1bWVudHMpfWNhdGNoKGMpe3VlTG9nRXJyb3IoYyx7YXR0cmlidXRpb246YXx8XCJ1bmRlZmluZWRcIixsb2dMZXZlbDpcIldBUk5cIn0pfX19fSkodWVfY3NtKTtcblxuXG4gICAgdmFyIHVlX2Vycl9jaGFuID0gJ2pzZXJyLXJ3JztcbihmdW5jdGlvbihkLGUpe2Z1bmN0aW9uIGgoZixiKXtpZighKGEuZWM+YS5teGUpJiZmKXthLnRlci5wdXNoKGYpO2I9Ynx8e307dmFyIGM9Zi5sb2dMZXZlbHx8Yi5sb2dMZXZlbDtjJiZjIT09ayYmYyE9PW0mJmMhPT1uJiZjIT09cHx8YS5lYysrO2MmJmMhPWt8fGEuZWNmKys7Yi5wYWdlVVJMPVwiXCIrKGUubG9jYXRpb24/ZS5sb2NhdGlvbi5ocmVmOlwiXCIpO2IubG9nTGV2ZWw9YztiLmF0dHJpYnV0aW9uPWYuYXR0cmlidXRpb258fGIuYXR0cmlidXRpb247YS5lcmwucHVzaCh7ZXg6ZixpbmZvOmJ9KX19ZnVuY3Rpb24gbChhLGIsYyxlLGcpe2QudWVMb2dFcnJvcih7bTphLGY6YixsOmMsYzpcIlwiK2UsZXJyOmcsZnJvbU9uRXJyb3I6MSxhcmdzOmFyZ3VtZW50c30sZz97YXR0cmlidXRpb246Zy5hdHRyaWJ1dGlvbixsb2dMZXZlbDpnLmxvZ0xldmVsfTp2b2lkIDApO3JldHVybiExfXZhciBrPVwiRkFUQUxcIixtPVwiRVJST1JcIixuPVwiV0FSTlwiLHA9XCJET1dOR1JBREVEXCIsYT17ZWM6MCxlY2Y6MCxcbnBlYzowLHRzOjAsZXJsOltdLHRlcjpbXSxteGU6NTAsc3RhcnRUaW1lcjpmdW5jdGlvbigpe2EudHMrKztzZXRJbnRlcnZhbChmdW5jdGlvbigpe2QudWUmJmEucGVjXHUwMDNDYS5lYyYmZC51ZXgoXCJhdFwiKTthLnBlYz1hLmVjfSwxRTQpfX07bC5za2lwVHJhY2U9MTtoLnNraXBUcmFjZT0xO2guaXNTdHViPTE7ZC51ZUxvZ0Vycm9yPWg7ZC51ZV9lcnI9YTtlLm9uZXJyb3I9bH0pKHVlX2NzbSx3aW5kb3cpO1xuXG5cbnZhciB1ZV9pZCA9ICc0NzVFMzRKUVY5Rk5QSEo5U1NURCcsXG4gICAgdWVfdXJsID0gJy9ncC91ZWRhdGEnLFxuICAgIHVlX25hdnRpbWluZyA9IDEsXG4gICAgdWVfbWlkID0gJ0FUVlBES0lLWDBERVInLFxuICAgIHVlX3NpZCA9ICcxNDUtODk3NTM5MC01MDY0MTEzJyxcbiAgICB1ZV9zbiA9ICd3d3cuYW1hem9uLmNvbScsXG4gICAgdWVfZnVybCA9ICdmbHMtbmEuYW1hem9uLmNvbScsXG4gICAgdWVfc3VybCA9ICdodHRwczovL3VuYWdpLW5hLmFtYXpvbi5jb20vMS9ldmVudHMvY29tLmFtYXpvbi5jc20ubmV4dXNjbGllbnQucHJvZCcsXG4gICAgdWVfaW50ID0gMCxcbiAgICB1ZV9mY3NuID0gMSxcbiAgICB1ZV91cnQgPSAzLFxuICAgIHVlX3JwbF9ucyA9ICdjZWwtcnBsJyxcbiAgICB1ZV9kZHEgPSAxLFxuICAgIHVlX2ZwZiA9ICcvL2Zscy1uYS5hbWF6b24uY29tLzEvYmF0Y2gvMS9PUC9BVFZQREtJS1gwREVSOjE0NS04OTc1MzkwLTUwNjQxMTM6NDc1RTM0SlFWOUZOUEhKOVNTVEQkdWVkYXRhPXM6JyxcbiAgICB1ZV9zYnVpbXAgPSAxLFxuXG4gICAgdWVfc3dpID0gMTtcbmZ1bmN0aW9uIHVlX3ZpeigpeyhmdW5jdGlvbihjLGUsYSl7ZnVuY3Rpb24gayhiKXtpZihjLnVlLnZpei5sZW5ndGhcdTAwM0NwJiYhbCl7dmFyIGE9Yi50eXBlO2I9Yi5vcmlnaW5hbEV2ZW50Oy9eZm9jdXMuLy50ZXN0KGEpJiZiJiYoYi50b0VsZW1lbnR8fGIuZnJvbUVsZW1lbnR8fGIucmVsYXRlZFRhcmdldCl8fChhPWVbbV18fChcImJsdXJcIj09YXx8XCJmb2N1c291dFwiPT1hP1wiaGlkZGVuXCI6XCJ2aXNpYmxlXCIpLGMudWUudml6LnB1c2goYStcIjpcIisoK25ldyBEYXRlLWMudWUudDApKSxcInZpc2libGVcIj09YSYmKHVlLmlzbCYmdWV4KFwiYXRcIiksbD0xKSl9fWZvcih2YXIgbD0wLGYsZyxtLG49W1wiXCIsXCJ3ZWJraXRcIixcIm9cIixcIm1zXCIsXCJtb3pcIl0sZD0wLHA9MjAsaD0wO2hcdTAwM0NuLmxlbmd0aCYmIWQ7aCsrKWlmKGE9bltoXSxmPShhP2ErXCJIXCI6XCJoXCIpK1wiaWRkZW5cIixkPVwiYm9vbGVhblwiPT10eXBlb2YgZVtmXSlnPWErXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsbT0oYT9hK1wiVlwiOlwidlwiKStcImlzaWJpbGl0eVN0YXRlXCI7XG5rKHt9KTtkJiZlLmFkZEV2ZW50TGlzdGVuZXIoZyxrLDApO2MudWUmJmQmJihjLnVlLnBhZ2VWaXo9e2V2ZW50OmcscHJvcEhpZDpmfSl9KSh1ZV9jc20sZG9jdW1lbnQsd2luZG93KX07XG5cbihmdW5jdGlvbihkLGssSil7ZnVuY3Rpb24gQyhhKXtyZXR1cm4gYSYmYS5yZXBsYWNlJiZhLnJlcGxhY2UoL15cXHMrfFxccyskL2csXCJcIil9ZnVuY3Rpb24gcShhKXtyZXR1cm5cInVuZGVmaW5lZFwiPT09dHlwZW9mIGF9ZnVuY3Rpb24gRChhLGIpe2Zvcih2YXIgYyBpbiBiKWJbcl0oYykmJihhW2NdPWJbY10pfWZ1bmN0aW9uIEUoYSl7dHJ5e3ZhciBiPUouY29va2llLm1hdGNoKFJlZ0V4cChcIihefCApXCIrYStcIj0oW147XSspXCIpKTtpZihiKXJldHVybiBiWzJdLnRyaW0oKX1jYXRjaChjKXt9fWZ1bmN0aW9uIEsocCxiKXtwJiYoZC51ZV9pZD1hLmlkPWEucmlkPXAsdD10LnJlcGxhY2UoLygoLio/Oil7Mn0pKFxcdyspLyxmdW5jdGlvbihhLGIpe3JldHVybiBiK3B9KSk7YiYmKHQ9dC5yZXBsYWNlKC8oLio/OikoXFx3fC0pKy8sZnVuY3Rpb24oYSxkKXtyZXR1cm4gZCtifSksZC51ZV9zaWQ9Yik7ZC51ZV9mcGY9dDtkLnVlLnRhZyhcImFjY2VsZXJhdGVkLWV4cGVyaWVuY2VcIil9ZnVuY3Rpb24gTCgpe3ZhciBhPVxue307cmV0dXJuIGZ1bmN0aW9uKGIpe2ImJihhW2JdPTEpO2I9W107Zm9yKHZhciBjIGluIGEpYVtyXShjKSYmYi5wdXNoKGMpO3JldHVybiBifX1mdW5jdGlvbiB1KGQsYixjLGUpe2U9ZXx8K25ldyB6O3ZhciBmLGs7aWYoYnx8cShjKSl7aWYoZClmb3IoayBpbiBmPWI/aChcInRcIixiKXx8aChcInRcIixiLHt9KTphLnQsZltkXT1lLGMpY1tyXShrKSYmaChrLGIsY1trXSk7cmV0dXJuIGV9fWZ1bmN0aW9uIGgoZCxiLGMpe3ZhciBlPWImJmIhPWEuaWQ/YS5zY1tiXTphO2V8fChlPWEuc2NbYl09e30pO1wiaWRcIj09PWQmJmMmJihOPTEpO3JldHVybiBlW2RdPWN8fGVbZF19ZnVuY3Rpb24gTyhkLGIsYyxlLGYpe2M9XCJvblwiK2M7dmFyIGg9YltjXTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgaD9kJiYoYS5oW2RdPWgpOmg9ZnVuY3Rpb24oKXt9O2JbY109ZnVuY3Rpb24oYSl7Zj8oZShhKSxoKGEpKTooaChhKSxlKGEpKX07YltjXSYmKGJbY10uaXNVZWg9MSl9ZnVuY3Rpb24gUChwLGIsYyxlKXtmdW5jdGlvbiB3KGIsXG5jKXt2YXIgZD1bYl0sZz0wLGU9e30sZixrO2M/KGQucHVzaChcIm09MVwiKSxlW2NdPTEpOmU9YS5zYztmb3IoayBpbiBlKWlmKGVbcl0oaykpe3ZhciBsPWgoXCJ3YlwiLGspLG09aChcInRcIixrKXx8e30sdz1oKFwidDBcIixrKXx8YS50MCxuO2lmKGN8fDI9PWwpe2w9bD9nKys6XCJcIjtkLnB1c2goXCJzY1wiK2wrXCI9XCIrayk7Zm9yKG4gaW4gbSkzPj1uLmxlbmd0aCYmIXEobVtuXSkmJm51bGwhPT1tW25dJiZkLnB1c2gobitsK1wiPVwiKyhtW25dLXcpKTtkLnB1c2goXCJ0XCIrbCtcIj1cIittW3BdKTtpZihoKFwiY3RiXCIsayl8fGgoXCJ3YlwiLGspKWY9MX19IUYmJmYmJmQucHVzaChcImN0Yj0xXCIpO3JldHVybiBkLmpvaW4oXCImXCIpfWZ1bmN0aW9uIE0oYixjLGcsZSl7aWYoYil7dmFyIGY9ZC51ZV9lcnI7ZC51ZV91cmwmJiFlJiZiJiYwXHUwMDNDYi5sZW5ndGgmJihlPW5ldyBJbWFnZSxhLmllbC5wdXNoKGUpLGUuc3JjPWIsYS5jb3VudCYmYS5jb3VudChcInBvc3RiYWNrSW1hZ2VTaXplXCIsYi5sZW5ndGgpKTtpZih0KXt2YXIgaD1cbmsuZW5jb2RlVVJJQ29tcG9uZW50O2gmJmImJihlPW5ldyBJbWFnZSxiPVwiXCIrZC51ZV9mcGYraChiKStcIjpcIisoK25ldyB6LWQudWVfdDApLGEuaWVsLnB1c2goZSksZS5zcmM9Yil9ZWxzZSBhLmxvZyYmKGEubG9nKGIsXCJ1ZWRhdGFcIix7bjoxfSksYS5pZWxmLnB1c2goYikpO2YmJiFmLnRzJiZmLnN0YXJ0VGltZXIoKTthLmImJihmPWEuYixhLmI9XCJcIixNKGYsYyxnLDEpKX19ZnVuY3Rpb24gdihiKXt2YXIgYz14P3gudHlwZTpBLGQ9YyYmMiE9YyxlPWEuYmZpbmk7Tnx8KGUmJjFcdTAwM0NlJiYoYis9XCImYmZmb3JtPTFcIixkfHwoYS5pc0JGVD1lLTEpKSwyPT1jJiYoYis9XCImYmZudD0xXCIsYS5pc0JGVD1hLmlzQkZUfHwxKSxhLnNzdyYmYS5pc0JGVCYmKHEoYS5pc05SQkYpJiYoYz1hLnNzdyhhLm9pZCksYy5lfHxxKGMudmFsKXx8KGEuaXNOUkJGPTFcdTAwM0NjLnZhbD8wOjEpKSxxKGEuaXNOUkJGKXx8KGIrPVwiJm5yYmY9XCIrYS5pc05SQkYpKSxhLmlzQkZUJiYhYS5pc05SQkYmJihiKz1cIiZiZnQ9XCIrXG5hLmlzQkZUKSk7cmV0dXJuIGJ9aWYoIWEucGF1c2VkJiYoYnx8cShjKSkpe2Zvcih2YXIgbSBpbiBjKWNbcl0obSkmJmgobSxiLGNbbV0pO3UoXCJwY1wiLGIsYyk7bT1oKFwiaWRcIixiKXx8YS5pZDt2YXIgZz1hLnVybCtcIj9cIitwK1wiJnY9XCIrYS52K1wiJmlkPVwiK20sRj1oKFwiY3RiXCIsYil8fGgoXCJ3YlwiLGIpLGwscztGJiYoZys9XCImY3RiPVwiK0YpOzFcdTAwM0NkLnVlaW5pdCYmKGcrPVwiJmljPVwiK2QudWVpbml0KTtpZighKFwibGRcIiE9cCYmXCJ1bFwiIT1wfHxiJiZiIT1tKSl7aWYoXCJsZFwiPT1wKXt0cnl7a1tHXSYma1tHXS5pc1VlaCYmKGtbR109bnVsbCl9Y2F0Y2goRSl7fWlmKGsuY2hyb21lKWZvcihzPTA7c1x1MDAzQ0gubGVuZ3RoO3MrKylRKEIsSFtzXSk7KHM9Si51ZV9iYWNrZGV0ZWN0KSYmcy51ZV9iYWNrJiZzLnVlX2JhY2sudmFsdWUrKztkLl91ZXNzJiYobD1kLl91ZXNzKCkpO2EuaXNsPTF9YS5fYmYmJihnKz1cIiZiZj1cIithLl9iZigpKTtkLnVlX25hdnRpbWluZyYmZiYmKGgoXCJjdGJcIixtLFwiMVwiKSxcbnUoXCJ0Y1wiLEEsQSxJKSk7eSYmIVImJihmJiZEKGEudCx7bmFfOmYubmF2aWdhdGlvblN0YXJ0LHVsXzpmLnVubG9hZEV2ZW50U3RhcnQsX3VsOmYudW5sb2FkRXZlbnRFbmQscmRfOmYucmVkaXJlY3RTdGFydCxfcmQ6Zi5yZWRpcmVjdEVuZCxmZV86Zi5mZXRjaFN0YXJ0LGxrXzpmLmRvbWFpbkxvb2t1cFN0YXJ0LF9sazpmLmRvbWFpbkxvb2t1cEVuZCxjb186Zi5jb25uZWN0U3RhcnQsX2NvOmYuY29ubmVjdEVuZCxzY186Zi5zZWN1cmVDb25uZWN0aW9uU3RhcnQscnFfOmYucmVxdWVzdFN0YXJ0LHJzXzpmLnJlc3BvbnNlU3RhcnQsX3JzOmYucmVzcG9uc2VFbmQsZGxfOmYuZG9tTG9hZGluZyxkaV86Zi5kb21JbnRlcmFjdGl2ZSxkZV86Zi5kb21Db250ZW50TG9hZGVkRXZlbnRTdGFydCxfZGU6Zi5kb21Db250ZW50TG9hZGVkRXZlbnRFbmQsX2RjOmYuZG9tQ29tcGxldGUsbGRfOmYubG9hZEV2ZW50U3RhcnQsX2xkOmYubG9hZEV2ZW50RW5kLG50ZDooXCJmdW5jdGlvblwiIT09dHlwZW9mIHkubm93fHxcbnEoSSk/MDpuZXcgeihJK3kubm93KCkpLW5ldyB6KSthLnQwfSkseCYmRChhLnQse3R5OngudHlwZSthLnQwLHJjOngucmVkaXJlY3RDb3VudCthLnQwfSksUj0xKTtEKGEudCx7aG9iOmQudWVfaG9iLGhvZTpkLnVlX2hvZX0pO2EuaWZyJiYoZys9XCImaWZyPTFcIil9dShwLGIsYyxlKTtjPVwibGRcIj09cCYmYiYmaChcIndiXCIsYik7dmFyIG47Y3x8YiYmYiE9PW18fFooYik7Y3x8bT09YS5vaWR8fCQoKGgoXCJ0XCIsYil8fHt9KS50Y3x8K2goXCJ0MFwiLGIpLCtoKFwidDBcIixiKSk7KGU9ZC51ZV9tYmwpJiZlLmNudCYmIWMmJihnKz1lLmNudCgpKTtjP2goXCJ3YlwiLGIsMik6XCJsZFwiPT1wJiYoYS5saWQ9QyhtKSk7Zm9yKG4gaW4gYS5zYylpZigxPT1oKFwid2JcIixuKSlicmVhaztpZihjKXtpZihhLnMpcmV0dXJuO2c9dyhnLG51bGwpfWVsc2UgZT13KGcsbnVsbCksZSE9ZyYmKGU9dihlKSxhLmI9ZSksbCYmKGcrPWwpLGc9dyhnLGJ8fGEuaWQpO2c9dihnKTtpZihhLmJ8fGMpZm9yKG4gaW4gYS5zYykyPT1cbmgoXCJ3YlwiLG4pJiZkZWxldGUgYS5zY1tuXTtsPTA7YS5fcnQmJihnKz1cIiZydD1cIithLl9ydCgpKTtjfHwoYS5zPTAsKGw9ZC51ZV9lcnIpJiYwXHUwMDNDbC5lYyYmbC5wZWNcdTAwM0NsLmVjJiYobC5wZWM9bC5lYyxnKz1cIiZlYz1cIitsLmVjK1wiJmVjZj1cIitsLmVjZiksbD1oKFwiY3RiXCIsYiksaChcInRcIixiLHt9KSk7YS50YWcmJmEudGFnKCkubGVuZ3RoJiYoZys9XCImY3NtdGFncz1cIithLnRhZygpLmpvaW4oXCJ8XCIpLGEudGFnPUwoKSk7bj1hLnZpenx8W107KGU9bi5sZW5ndGgpJiYoZys9XCImdml6PVwiK24uc3BsaWNlKDAsZSkuam9pbihcInxcIikpO3EoZC51ZV9wdHkpfHwoZys9XCImcHR5PVwiK2QudWVfcHR5K1wiJnNwdHk9XCIrZC51ZV9zcHR5K1wiJnB0aT1cIitkLnVlX3B0aSk7YS50YWJpZCYmKGcrPVwiJnRpZD1cIithLnRhYmlkKTthLmFmdGImJihnKz1cIiZhZnRiPTFcIik7IWEuX3VpfHxiJiZiIT1tfHwoZys9YS5fdWkoKSk7YS5hPWc7TShnLHAsbCxjKX19ZnVuY3Rpb24gWihhKXt2YXIgYj1rLnVlX2NzbV9tYXJrZXJzfHxcbnt9LGM7Zm9yKGMgaW4gYiliW3JdKGMpJiZ1KGMsYSxBLGJbY10pfWZ1bmN0aW9uIHYoYSxiLGMpe2M9Y3x8aztpZihjW1NdKWNbU10oYSxiLCExKTtlbHNlIGlmKGNbVF0pY1tUXShcIm9uXCIrYSxiKX1mdW5jdGlvbiBRKGEsYixjKXtjPWN8fGs7aWYoY1tVXSljW1VdKGEsYiwhMSk7ZWxzZSBpZihjW1ZdKWNbVl0oXCJvblwiK2EsYil9ZnVuY3Rpb24gVygpe2Z1bmN0aW9uIGEoKXtkLm9uVWwoKX1mdW5jdGlvbiBiKGEpe3JldHVybiBmdW5jdGlvbigpe2NbYV18fChjW2FdPTEsUChhKSl9fXZhciBjPXt9LGUsZjtkLm9uTGQ9YihcImxkXCIpO2Qub25MZEVuZD1iKFwibGRcIik7ZC5vblVsPWIoXCJ1bFwiKTtlPXtzdG9wOmIoXCJvc1wiKX07ay5jaHJvbWU/KHYoQixhKSxILnB1c2goYSkpOmVbQl09ZC5vblVsO2ZvcihmIGluIGUpZVtyXShmKSYmTygwLGssZixlW2ZdKTtkLnVlX3ZpeiYmdWVfdml6KCk7dihcImxvYWRcIixkLm9uTGQpO3UoXCJ1ZVwiKX1mdW5jdGlvbiAkKGYsYil7dmFyIGM9ZC51ZV9tYmw7XG5jJiZjLmFqYXgmJmMuYWpheChmLGIpO2EudGFnKFwiYWpheC10cmFuc2l0aW9uXCIpfWQudWVpbml0PShkLnVlaW5pdHx8MCkrMTt2YXIgYT1kLnVlPWQudWV8fHt9O2EudDA9ay5hUGFnZVN0YXJ0fHxkLnVlX3QwO2EuaWQ9ZC51ZV9pZDthLnVybD1kLnVlX3VybDthLnJpZD1kLnVlX2lkO2EuYT1cIlwiO2EuYj1cIlwiO2EuaD17fTthLnM9MTthLnQ9e307YS5zYz17fTthLmllbD1bXTthLmllbGY9W107YS52aXo9W107YS52PVwiMC4yMDUzNDEuMFwiO2EucGF1c2VkPSExO3ZhciByPVwiaGFzT3duUHJvcGVydHlcIixCPVwiYmVmb3JldW5sb2FkXCIsRz1cIm9uXCIrQixTPVwiYWRkRXZlbnRMaXN0ZW5lclwiLFU9XCJyZW1vdmVFdmVudExpc3RlbmVyXCIsVD1cImF0dGFjaEV2ZW50XCIsVj1cImRldGFjaEV2ZW50XCIsej1rLkRhdGUseT1rLnBlcmZvcm1hbmNlfHxrLndlYmtpdFBlcmZvcm1hbmNlLGY9KHl8fHt9KS50aW1pbmcseD0oeXx8e30pLm5hdmlnYXRpb24sST0oZnx8e30pLm5hdmlnYXRpb25TdGFydCx0PWQudWVfZnBmLFxuTj0wLFI9MCxIPVtdLEE7YS5vaWQ9QyhhLmlkKTthLmxpZD1DKGEuaWQpO2EuX3QwPWEudDA7YS50YWc9TCgpO2EuaWZyPWsudG9wIT09ay5zZWxmfHxrLmZyYW1lRWxlbWVudD8xOjA7YS5hdHRhY2g9djthLmRldGFjaD1RO2lmKFwiMDAwLTAwMDAwMDAtODY3NTMwOVwiPT09ZC51ZV9zaWQpe3ZhciBYPUUoXCJjZG4tcmlkXCIpLFk9RShcInNlc3Npb24taWRcIik7WCYmWSYmSyhYLFkpfWQudWVpPVc7ZC51ZWg9TztkLnVlcz1oO2QudWV0PXU7ZC51ZXg9UDthLnJlc2V0PUs7YS5wYXVzZT1mdW5jdGlvbihkKXthLnBhdXNlZD1kfTtXKCl9KSh1ZV9jc20sd2luZG93LHVlX2NzbS5kb2N1bWVudCk7XG5cblxudWUuc3R1Yih1ZSxcImV2ZW50XCIpO3VlLnN0dWIodWUsXCJvblN1c2hpVW5sb2FkXCIpO3VlLnN0dWIodWUsXCJvblN1c2hpRmx1c2hcIik7XG5cbnVlLnN0dWIodWUsXCJsb2dcIik7dWUuc3R1Yih1ZSxcIm9udW5sb2FkXCIpO3VlLnN0dWIodWUsXCJvbmZsdXNoXCIpO1xuKGZ1bmN0aW9uKGMpe3ZhciBhPWMudWU7YS5jdj17fTthLmN2LnNjb3Blcz17fTthLmNvdW50PWZ1bmN0aW9uKGQsYyxiKXt2YXIgZT17fSxmPWEuY3YsZz1iJiYwPT09Yi5jO2UuY291bnRlcj1kO2UudmFsdWU9YztlLnQ9YS5kKCk7YiYmYi5zY29wZSYmKGY9YS5jdi5zY29wZXNbYi5zY29wZV09YS5jdi5zY29wZXNbYi5zY29wZV18fHt9LGUuc2NvcGU9Yi5zY29wZSk7aWYodm9pZCAwPT09YylyZXR1cm4gZltkXTtmW2RdPWM7ZD0wO2ImJmIuYmYmJihkPTEpO3VlX2NzbS51ZV9zY2xvZ3x8IWEuY2xvZ3x8MCE9PWR8fGc/YS5sb2cmJmEubG9nKGUsXCJjc21jb3VudFwiLHtjOjEsYmY6ZH0pOmEuY2xvZyhlLFwiY3NtY291bnRcIix7YmY6ZH0pfTthLmNvdW50KFwiYmFzZWxpbmVDb3VudGVyMlwiLDEpO2EmJmEuZXZlbnQmJihhLmV2ZW50KHtyZXF1ZXN0SWQ6Yy51ZV9pZHx8XCJyaWRcIixzZXJ2ZXI6Yy51ZV9zbnx8XCJzblwiLG9iZnVzY2F0ZWRNYXJrZXRwbGFjZUlkOmMudWVfbWlkfHxcIm1pZFwifSxcblwiY3NtXCIsXCJjc20uQ1NNQmFzZWxpbmVFdmVudC40XCIpLGEuY291bnQoXCJuZXh1c0Jhc2VsaW5lQ291bnRlclwiLDEse2JmOjF9KSl9KSh1ZV9jc20pO1xuXG5cblxudmFyIHVlX2hvZSA9ICtuZXcgRGF0ZSgpO1xufVxud2luZG93LnVlaW5pdCA9IHdpbmRvdy51ZV9paGI7XG5cdTAwM0Mvc2NyaXB0PlxuXG5cdTAwM0MhLS0gMWs0NWI1d2ZkdjFjZmRuMnVyaWp4cGhid2VqMWJ6MHp5cXJndCAtLT5cdTAwM0MhLS0gc3A6ZmVhdHVyZTphdWktYXNzZXRzIC0tPlxuXHUwMDNDc3R5bGU+XG4uYS1pY29uLC5hLWxpbmstZW1waGFzaXM6YWZ0ZXJ7YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9BbWF6b25VSUljb25Ac3ByaXRlUGFja2VySW1hZ2VzLXNwcml0ZV8xeC0wMDNhMDUzNDRlNmE1MjYzYzk0NTY4NGM2Njc0ODM5NGI0Y2JiOWEyLl9WMl8ucG5nKTstd2Via2l0LWJhY2tncm91bmQtc2l6ZTo0MDBweCA5MDBweDtiYWNrZ3JvdW5kLXNpemU6NDAwcHggOTAwcHg7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2Rpc3BsYXk6aW5saW5lLWJsb2NrO3ZlcnRpY2FsLWFsaWduOnRvcH0uYS1oaXJlcyAuYS1pY29uLC5hLWhpcmVzIC5hLWxpbmstZW1waGFzaXM6YWZ0ZXJ7YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9BbWF6b25VSUljb25Ac3ByaXRlUGFja2VySW1hZ2VzLXNwcml0ZV8yeC1jNWQ5OWUzZmY1OWZkZTdiNzNjM2E2MjcwY2FkZjQ3MGRhNGQ5ZjY0Ll9WMl8ucG5nKX0uYS1hZGRvbi1iYWRnZSwuYS1pY29uLWFkZG9ue2JhY2tncm91bmQtaW1hZ2U6bm9uZSFpbXBvcnRhbnQ7Ym9yZGVyLXJhZGl1czozcHggMCAwIDNweDtiYWNrZ3JvdW5kLWNvbG9yOiMzRjY5OTg7Zm9udC1zaXplOjExcHg7bGluZS1oZWlnaHQ6MS4wNTtwYWRkaW5nOjRweCA1cHggNHB4IDZweDtjb2xvcjojZmZmO2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0OjcwMDtwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6MXB4fS5hLWFkZG9uLWJhZGdlOmFmdGVyLC5hLWFkZG9uLWJhZGdlOmJlZm9yZSwuYS1pY29uLWFkZG9uOmFmdGVyLC5hLWljb24tYWRkb246YmVmb3Jle2NvbnRlbnQ6XCJcIjtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDotNXB4O2JvcmRlci1sZWZ0LXdpZHRoOjB9LmEtYWRkb24tYmFkZ2U6YWZ0ZXIsLmEtaWNvbi1hZGRvbjphZnRlcnt0b3A6MDtib3JkZXItc3R5bGU6ZGFzaGVkO2JvcmRlci13aWR0aDo2cHg7Ym9yZGVyLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMCk7Ym9yZGVyLXRvcDo2cHggc29saWQgIzNGNjk5ODtib3JkZXItYm90dG9tLXdpZHRoOjA7d2lkdGg6MDtoZWlnaHQ6MDtmb250LXNpemU6MDtsaW5lLWhlaWdodDowOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO2JvcmRlci10b3Atd2lkdGg6MTBweH0uYS1hZGRvbi1iYWRnZTpiZWZvcmUsLmEtaWNvbi1hZGRvbjpiZWZvcmV7Ym90dG9tOjA7Ym9yZGVyLXN0eWxlOmRhc2hlZDtib3JkZXItd2lkdGg6NnB4O2JvcmRlci1jb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDApO2JvcmRlci1ib3R0b206NnB4IHNvbGlkICMzRjY5OTg7Ym9yZGVyLXRvcC13aWR0aDowO3dpZHRoOjA7aGVpZ2h0OjA7Zm9udC1zaXplOjA7bGluZS1oZWlnaHQ6MDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTtib3JkZXItYm90dG9tLXdpZHRoOjEwcHh9LmEtaWNvbi1uYXYtY2FydCwuYS1uYXYtY2FydHtwb3NpdGlvbjpyZWxhdGl2ZX0uYS1pY29uLWFycm93e3dpZHRoOjExcHg7aGVpZ2h0OjE1cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotNXB4IC0zNXB4fS5hLWljb24tY29sbGFwc2UsLmEtaWNvbi1leHBhbmR7d2lkdGg6N3B4O2hlaWdodDo3cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMzY2cHggLTg2cHg7cG9zaXRpb246YWJzb2x1dGU7dG9wOjUwJTttYXJnaW4tdG9wOi00cHg7bGVmdDowfS5hLW5vLWpzIC5hLWljb24tZXhwYW5ke2JhY2tncm91bmQtcG9zaXRpb246LTM4MnB4IC04NnB4fS5hLWljb24tY29sbGFwc2V7YmFja2dyb3VuZC1wb3NpdGlvbjotMzgycHggLTg2cHh9LmEtaWNvbi1zZWN0aW9uLWNvbGxhcHNlLC5hLWljb24tc2VjdGlvbi1leHBhbmR7d2lkdGg6MTVweDtoZWlnaHQ6MTJweDtvcGFjaXR5Oi42NDtwb3NpdGlvbjpyZWxhdGl2ZX0uYS1pY29uLXNlY3Rpb24tZXhwYW5ke2JhY2tncm91bmQtcG9zaXRpb246LTVweCAtNTlweH0uYS1pY29uLXNlY3Rpb24tY29sbGFwc2V7YmFja2dyb3VuZC1wb3NpdGlvbjotNXB4IC04MnB4fS5hLWljb24tZXh0ZW5kZXItY29sbGFwc2UsLmEtaWNvbi1leHRlbmRlci1leHBhbmR7cG9zaXRpb246cmVsYXRpdmU7dmVydGljYWwtYWxpZ246YmFzZWxpbmU7bWFyZ2luLXJpZ2h0Oi4zODVlbX0uYS1pY29uLXN0YXIsLmEtaWNvbi1zdGFyLW1lZGl1bSwuYS1pY29uLXN0YXItbWluaSwuYS1pY29uLXN0YXItc21hbGx7cG9zaXRpb246cmVsYXRpdmU7dmVydGljYWwtYWxpZ246dGV4dC10b3B9LmEtaWNvbi1zdGFyLW1lZGl1bXt3aWR0aDo5NXB4O2hlaWdodDoyMXB4O21hcmdpbi1yaWdodDoxcHg7dG9wOi0ycHh9LmEtc3Rhci1tZWRpdW0tNXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi01cHggLTM5NnB4fS5hLXN0YXItbWVkaXVtLTR7YmFja2dyb3VuZC1wb3NpdGlvbjotMjRweCAtMzk2cHh9LmEtc3Rhci1tZWRpdW0tM3tiYWNrZ3JvdW5kLXBvc2l0aW9uOi00M3B4IC0zOTZweH0uYS1zdGFyLW1lZGl1bS0ye2JhY2tncm91bmQtcG9zaXRpb246LTYycHggLTM5NnB4fS5hLXN0YXItbWVkaXVtLTF7YmFja2dyb3VuZC1wb3NpdGlvbjotODFweCAtMzk2cHh9LmEtc3Rhci1tZWRpdW0tMHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xMDBweCAtMzk2cHh9LmEtc3Rhci1tZWRpdW0tNC01e2JhY2tncm91bmQtcG9zaXRpb246LTIwNXB4IC0zOTZweH0uYS1zdGFyLW1lZGl1bS0zLTV7YmFja2dyb3VuZC1wb3NpdGlvbjotMjI0cHggLTM5NnB4fS5hLXN0YXItbWVkaXVtLTItNXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yNDNweCAtMzk2cHh9LmEtc3Rhci1tZWRpdW0tMS01e2JhY2tncm91bmQtcG9zaXRpb246LTI2MnB4IC0zOTZweH0uYS1zdGFyLW1lZGl1bS0wLTV7YmFja2dyb3VuZC1wb3NpdGlvbjotMjgxcHggLTM5NnB4fS5hLXN0YXItYnJhbmQtbWVkaXVtLTV7YmFja2dyb3VuZC1wb3NpdGlvbjotNXB4IC00NTVweH0uYS1zdGFyLWJyYW5kLW1lZGl1bS00e2JhY2tncm91bmQtcG9zaXRpb246LTI0cHggLTQ1NXB4fS5hLXN0YXItYnJhbmQtbWVkaXVtLTN7YmFja2dyb3VuZC1wb3NpdGlvbjotNDNweCAtNDU1cHh9LmEtc3Rhci1icmFuZC1tZWRpdW0tMntiYWNrZ3JvdW5kLXBvc2l0aW9uOi02MnB4IC00NTVweH0uYS1zdGFyLWJyYW5kLW1lZGl1bS0xe2JhY2tncm91bmQtcG9zaXRpb246LTgxcHggLTQ1NXB4fS5hLXN0YXItYnJhbmQtbWVkaXVtLTB7YmFja2dyb3VuZC1wb3NpdGlvbjotMTAwcHggLTQ1NXB4fS5hLXN0YXItYnJhbmQtbWVkaXVtLTQtNXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yMDVweCAtNDU1cHh9LmEtc3Rhci1icmFuZC1tZWRpdW0tMy01e2JhY2tncm91bmQtcG9zaXRpb246LTIyNHB4IC00NTVweH0uYS1zdGFyLWJyYW5kLW1lZGl1bS0yLTV7YmFja2dyb3VuZC1wb3NpdGlvbjotMjQzcHggLTQ1NXB4fS5hLXN0YXItYnJhbmQtbWVkaXVtLTEtNXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yNjJweCAtNDU1cHh9LmEtc3Rhci1icmFuZC1tZWRpdW0tMC01e2JhY2tncm91bmQtcG9zaXRpb246LTI4MXB4IC00NTVweH0uYS1pY29uLXN0YXItc21hbGx7d2lkdGg6ODBweDtoZWlnaHQ6MThweH0uYS1zdGFyLXNtYWxsLTV7YmFja2dyb3VuZC1wb3NpdGlvbjotNXB4IC0zNjhweH0uYS1zdGFyLXNtYWxsLTR7YmFja2dyb3VuZC1wb3NpdGlvbjotMjFweCAtMzY4cHh9LmEtc3Rhci1zbWFsbC0ze2JhY2tncm91bmQtcG9zaXRpb246LTM3cHggLTM2OHB4fS5hLXN0YXItc21hbGwtMntiYWNrZ3JvdW5kLXBvc2l0aW9uOi01M3B4IC0zNjhweH0uYS1zdGFyLXNtYWxsLTF7YmFja2dyb3VuZC1wb3NpdGlvbjotNjlweCAtMzY4cHh9LmEtc3Rhci1zbWFsbC0we2JhY2tncm91bmQtcG9zaXRpb246LTg1cHggLTM2OHB4fS5hLXN0YXItc21hbGwtNC01e2JhY2tncm91bmQtcG9zaXRpb246LTE3NXB4IC0zNjhweH0uYS1zdGFyLXNtYWxsLTMtNXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xOTFweCAtMzY4cHh9LmEtc3Rhci1zbWFsbC0yLTV7YmFja2dyb3VuZC1wb3NpdGlvbjotMjA3cHggLTM2OHB4fS5hLXN0YXItc21hbGwtMS01e2JhY2tncm91bmQtcG9zaXRpb246LTIyM3B4IC0zNjhweH0uYS1zdGFyLXNtYWxsLTAtNXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yMzlweCAtMzY4cHh9LmEtc3Rhci1icmFuZC1zbWFsbC01e2JhY2tncm91bmQtcG9zaXRpb246LTVweCAtNDI3cHh9LmEtc3Rhci1icmFuZC1zbWFsbC00e2JhY2tncm91bmQtcG9zaXRpb246LTIxcHggLTQyN3B4fS5hLXN0YXItYnJhbmQtc21hbGwtM3tiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zN3B4IC00MjdweH0uYS1zdGFyLWJyYW5kLXNtYWxsLTJ7YmFja2dyb3VuZC1wb3NpdGlvbjotNTNweCAtNDI3cHh9LmEtc3Rhci1icmFuZC1zbWFsbC0xe2JhY2tncm91bmQtcG9zaXRpb246LTY5cHggLTQyN3B4fS5hLXN0YXItYnJhbmQtc21hbGwtMHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi04NXB4IC00MjdweH0uYS1zdGFyLWJyYW5kLXNtYWxsLTQtNXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xNzVweCAtNDI3cHh9LmEtc3Rhci1icmFuZC1zbWFsbC0zLTV7YmFja2dyb3VuZC1wb3NpdGlvbjotMTkxcHggLTQyN3B4fS5hLXN0YXItYnJhbmQtc21hbGwtMi01e2JhY2tncm91bmQtcG9zaXRpb246LTIwN3B4IC00MjdweH0uYS1zdGFyLWJyYW5kLXNtYWxsLTEtNXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yMjNweCAtNDI3cHh9LmEtc3Rhci1icmFuZC1zbWFsbC0wLTV7YmFja2dyb3VuZC1wb3NpdGlvbjotMjM5cHggLTQyN3B4fS5hLWljb24tc3Rhci1taW5pe3dpZHRoOjYwcHg7aGVpZ2h0OjEycHg7dG9wOjNweH0uYS1zdGFyLW1pbmktNXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xMDBweCAtNTkwcHh9LmEtc3Rhci1taW5pLTR7YmFja2dyb3VuZC1wb3NpdGlvbjotMTEycHggLTU5MHB4fS5hLXN0YXItbWluaS0ze2JhY2tncm91bmQtcG9zaXRpb246LTEyNHB4IC01OTBweH0uYS1zdGFyLW1pbmktMntiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xMzZweCAtNTkwcHh9LmEtc3Rhci1taW5pLTF7YmFja2dyb3VuZC1wb3NpdGlvbjotMTQ4cHggLTU5MHB4fS5hLXN0YXItbWluaS0we2JhY2tncm91bmQtcG9zaXRpb246LTE2MHB4IC01OTBweH0uYS1zdGFyLW1pbmktNC01e2JhY2tncm91bmQtcG9zaXRpb246LTIzMHB4IC01OTBweH0uYS1zdGFyLW1pbmktMy01e2JhY2tncm91bmQtcG9zaXRpb246LTI0MnB4IC01OTBweH0uYS1zdGFyLW1pbmktMi01e2JhY2tncm91bmQtcG9zaXRpb246LTI1NHB4IC01OTBweH0uYS1zdGFyLW1pbmktMS01e2JhY2tncm91bmQtcG9zaXRpb246LTI2NnB4IC01OTBweH0uYS1zdGFyLW1pbmktMC01e2JhY2tncm91bmQtcG9zaXRpb246LTI3OHB4IC01OTBweH0uYS1zdGFyLWJyYW5kLW1pbmktNXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xMDBweCAtNjEwcHh9LmEtc3Rhci1icmFuZC1taW5pLTR7YmFja2dyb3VuZC1wb3NpdGlvbjotMTEycHggLTYxMHB4fS5hLXN0YXItYnJhbmQtbWluaS0ze2JhY2tncm91bmQtcG9zaXRpb246LTEyNHB4IC02MTBweH0uYS1zdGFyLWJyYW5kLW1pbmktMntiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xMzZweCAtNjEwcHh9LmEtc3Rhci1icmFuZC1taW5pLTF7YmFja2dyb3VuZC1wb3NpdGlvbjotMTQ4cHggLTYxMHB4fS5hLXN0YXItYnJhbmQtbWluaS0we2JhY2tncm91bmQtcG9zaXRpb246LTE2MHB4IC02MTBweH0uYS1zdGFyLWJyYW5kLW1pbmktNC01e2JhY2tncm91bmQtcG9zaXRpb246LTIzMHB4IC02MTBweH0uYS1zdGFyLWJyYW5kLW1pbmktMy01e2JhY2tncm91bmQtcG9zaXRpb246LTI0MnB4IC02MTBweH0uYS1zdGFyLWJyYW5kLW1pbmktMi01e2JhY2tncm91bmQtcG9zaXRpb246LTI1NHB4IC02MTBweH0uYS1zdGFyLWJyYW5kLW1pbmktMS01e2JhY2tncm91bmQtcG9zaXRpb246LTI2NnB4IC02MTBweH0uYS1zdGFyLWJyYW5kLW1pbmktMC01e2JhY2tncm91bmQtcG9zaXRpb246LTI3OHB4IC02MTBweH1hLmEtaWNvbi1saW5rLWVtcGhhc2lzOmFmdGVyLGEuYS1saW5rLWVtcGhhc2lzOmFmdGVye2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0FVSUNsaWVudHMvQW1hem9uVUlJY29uQHNwcml0ZVBhY2tlckltYWdlcy1zcHJpdGVfMXgtMDAzYTA1MzQ0ZTZhNTI2M2M5NDU2ODRjNjY3NDgzOTRiNGNiYjlhMi5fVjJfLnBuZyk7LXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6NDAwcHggOTAwcHg7YmFja2dyb3VuZC1zaXplOjQwMHB4IDkwMHB4O2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtwb2ludGVyLWV2ZW50czpub25lO2NvbnRlbnQ6XCJcIjtkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjNweDtyaWdodDoxcHg7dG9wOjUwJTtoZWlnaHQ6NnB4O21hcmdpbi10b3A6LTNweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zNDZweCAtODZweDt2ZXJ0aWNhbC1hbGlnbjp0b3B9LmEtaGlyZXMgYS5hLWljb24tbGluay1lbXBoYXNpczphZnRlciwuYS1oaXJlcyBhLmEtbGluay1lbXBoYXNpczphZnRlcntiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJSWNvbkBzcHJpdGVQYWNrZXJJbWFnZXMtc3ByaXRlXzJ4LWM1ZDk5ZTNmZjU5ZmRlN2I3M2MzYTYyNzBjYWRmNDcwZGE0ZDlmNjQuX1YyXy5wbmcpfS5hLWljb24tcHJldmlvdXN7d2lkdGg6MTFweDtoZWlnaHQ6MTVweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xMjNweCAtN3B4fS5hLWljb24tbmV4dHt3aWR0aDoxMXB4O2hlaWdodDoxNXB4O2JhY2tncm91bmQtcG9zaXRpb246LTEwNXB4IC03cHh9LmEtaWNvbi1yZXN0YXJ0e3dpZHRoOjE1cHg7aGVpZ2h0OjE5cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMTQycHggLTVweH0uYS1pY29uLXBvcG92ZXJ7bWFyZ2luOjVweCAwIDAgLjM4NWVtO3ZlcnRpY2FsLWFsaWduOnRleHQtdG9wO3dpZHRoOjdweDtoZWlnaHQ6NXB4O2JhY2tncm91bmQtcG9zaXRpb246LTkwcHggLTVweDtvcGFjaXR5Oi42fS5hLXNpemUtc21hbGwgLmEtaWNvbi1wb3BvdmVye21hcmdpbi10b3A6NHB4fS5hLWljb24tc2VhcmNoe29wYWNpdHk6LjU1O3dpZHRoOjEzcHg7aGVpZ2h0OjEzcHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMjcxcHggLTg2cHh9LmEtaWNvbi1jaGVja21hcmstaW52ZXJzZXt3aWR0aDoxNXB4O2hlaWdodDoxN3B4O2JhY2tncm91bmQtcG9zaXRpb246LTE3MnB4IC04MnB4O29wYWNpdHk6LjY7bWFyZ2luLXJpZ2h0Oi42ZW07dmVydGljYWwtYWxpZ246YmFzZWxpbmV9LmEtaWNvbi1ncmlkdmlld3t3aWR0aDoxMXB4O2hlaWdodDoxMXB4O2JhY2tncm91bmQtcG9zaXRpb246LTE2MnB4IC01cHh9LmEtaWNvbi1saXN0dmlld3t3aWR0aDoxMXB4O2hlaWdodDoxMXB4O2JhY2tncm91bmQtcG9zaXRpb246LTE3OHB4IC01cHh9LmEtaWNvbi10ZXh0LXNlcGFyYXRvciwuYS10ZXh0LXNlcGFyYXRvcntkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW46LTJweCAuNjczNzVlbSAwO3dpZHRoOjFweDtiYWNrZ3JvdW5kLWNvbG9yOiNkZGQ7bGluZS1oZWlnaHQ6MDtoZWlnaHQ6MTRweDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9LmEtc2l6ZS1zbWFsbCAuYS1pY29uLXRleHQtc2VwYXJhdG9yLC5hLXNpemUtc21hbGwgLmEtdGV4dC1zZXBhcmF0b3J7aGVpZ2h0OjEzcHh9LmEtc2l6ZS1taW5pIC5hLWljb24tdGV4dC1zZXBhcmF0b3IsLmEtc2l6ZS1taW5pIC5hLXRleHQtc2VwYXJhdG9ye2hlaWdodDoxMnB4fS5hLWljb24tcm93e2Rpc3BsYXk6YmxvY2s7bGluZS1oZWlnaHQ6MH0uYS1pY29uLXJvdy5hLXNwYWNpbmctbm9uZXtwYWRkaW5nLWJvdHRvbTowfS5hLWljb24tcm93LmEtc2l6ZS1iYXNle2xpbmUtaGVpZ2h0OjE5cHh9LmEtaWNvbi1yb3cuYS1zaXplLXNtYWxse2xpbmUtaGVpZ2h0OjEuNX0uYS1pY29uLXJvdyAuYS1yb3d7bWFyZ2luLXRvcDoxcHh9LmEtYWxlcnQtZXJyb3IgLmEtaWNvbi1hbGVydCwuYS1pY29uLWVycm9ye2JhY2tncm91bmQtcG9zaXRpb246LTI0OHB4IC0zNXB4fS5hLWFsZXJ0LWluZm8gLmEtaWNvbi1hbGVydCwuYS1pY29uLWluZm97YmFja2dyb3VuZC1wb3NpdGlvbjotMzUwcHggLTM1cHh9LmEtYWxlcnQtc3VjY2VzcyAuYS1pY29uLWFsZXJ0LC5hLWljb24tc3VjY2Vzc3t3aWR0aDoyN3B4O2JhY2tncm91bmQtcG9zaXRpb246LTMxOHB4IC0zNXB4fS5hLWFsZXJ0LXdhcm5pbmcgLmEtaWNvbi1hbGVydCwuYS1pY29uLXdhcm5pbmd7YmFja2dyb3VuZC1wb3NpdGlvbjotMjgzcHggLTM1cHh9LmEtYWxlcnQtc3VidGxlLXdhcm5pbmcgLmEtaWNvbi1hbGVydHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zNTZweCAtMTY4cHh9LmEtaWNvbi1lcnJvciwuYS1pY29uLWluZm8sLmEtaWNvbi1zdWNjZXNzLC5hLWljb24td2FybmluZ3toZWlnaHQ6MjdweDt3aWR0aDozMHB4fS5hLWljb24tZXJyb3IuYS1pY29uLXNtYWxsLC5hLWljb24taW5mby5hLWljb24tc21hbGwsLmEtaWNvbi1zdWNjZXNzLmEtaWNvbi1zbWFsbCwuYS1pY29uLXdhcm5pbmcuYS1pY29uLXNtYWxse2hlaWdodDoxM3B4O3dpZHRoOjE0cHh9LmEtYWxlcnQtaW5saW5lLWVycm9yIC5hLWljb24tYWxlcnQsLmEtaWNvbi1lcnJvci5hLWljb24tc21hbGx7d2lkdGg6NXB4O2JhY2tncm91bmQtcG9zaXRpb246LTE0MXB4IC0xMzBweH0uYS1hbGVydC1pbmxpbmUtaW5mbyAuYS1pY29uLWFsZXJ0LC5hLWljb24taW5mby5hLWljb24tc21hbGx7d2lkdGg6NnB4O2JhY2tncm91bmQtcG9zaXRpb246LTE2NnB4IC0xMzBweH0uYS1hbGVydC1pbmxpbmUtc3VjY2VzcyAuYS1pY29uLWFsZXJ0LC5hLWljb24tc3VjY2Vzcy5hLWljb24tc21hbGx7YmFja2dyb3VuZC1wb3NpdGlvbjotMTE3cHggLTEzMHB4fS5hLWFsZXJ0LWlubGluZS13YXJuaW5nIC5hLWljb24tYWxlcnQsLmEtaWNvbi13YXJuaW5nLmEtaWNvbi1zbWFsbHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xNDhweCAtODZweH0uYS1hbGVydC1pbmxpbmUtc3VidGxlLXdhcm5pbmcgLmEtaWNvbi1hbGVydHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zNTZweCAtMTY4cHh9LmEtYWxlcnQtaW5saW5lLWxhcmdlLXdhcm5pbmcgLmEtaWNvbi1hbGVydHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yODNweCAtMzVweH0uYS1pY29uLWFsdHtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi05OTk5cHg7dG9wOmF1dG87ZGlzcGxheTpibG9jazt3aWR0aDoxcHg7aGVpZ2h0OjFweDtsaW5lLWhlaWdodDoxcHg7Zm9udC1zaXplOjFweDtvdmVyZmxvdzpoaWRkZW59LmEtaWNvbi1jYWxlbmRhcntiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zMDBweCAtNDgwcHg7d2lkdGg6MTVweDtoZWlnaHQ6MTVweH0uYS1pY29uLWNhbGVuZGFyLWZvY3Vze2JhY2tncm91bmQtcG9zaXRpb246LTMwMHB4IC01MDBweDt3aWR0aDoxNXB4O2hlaWdodDoxNXB4fS5hLWljb24tdGltZXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zMjBweCAtNDgwcHg7d2lkdGg6MTZweDtoZWlnaHQ6MTZweH0uYS1pY29uLXRpbWUtZm9jdXN7YmFja2dyb3VuZC1wb3NpdGlvbjotMzIwcHggLTUwMHB4O3dpZHRoOjE2cHg7aGVpZ2h0OjE2cHh9LmEtcHJvZmlsZVtkYXRhLWEtdHlwZT1lbnRodXNpYXN0XSAuYS1wcm9maWxlLWF2YXRhcjphZnRlcntiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJSWNvbkBzcHJpdGVQYWNrZXJJbWFnZXMtc3ByaXRlXzF4LTAwM2EwNTM0NGU2YTUyNjNjOTQ1Njg0YzY2NzQ4Mzk0YjRjYmI5YTIuX1YyXy5wbmcpOy13ZWJraXQtYmFja2dyb3VuZC1zaXplOjQwMHB4IDkwMHB4O2JhY2tncm91bmQtc2l6ZTo0MDBweCA5MDBweDtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7YmFja2dyb3VuZC1wb3NpdGlvbjotMjkzcHggLTY2NHB4O3dpZHRoOjI3cHg7aGVpZ2h0OjI3cHh9LmEtaGlyZXMgLmEtcHJvZmlsZVtkYXRhLWEtdHlwZT1lbnRodXNpYXN0XSAuYS1wcm9maWxlLWF2YXRhcjphZnRlcntiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJSWNvbkBzcHJpdGVQYWNrZXJJbWFnZXMtc3ByaXRlXzJ4LWM1ZDk5ZTNmZjU5ZmRlN2I3M2MzYTYyNzBjYWRmNDcwZGE0ZDlmNjQuX1YyXy5wbmcpfS5hLXByb2ZpbGVbZGF0YS1hLXNpemU9c21hbGxdIC5hLXByb2ZpbGUtYXZhdGFyOmFmdGVye2JhY2tncm91bmQtcG9zaXRpb246LTI2N3B4IC02NjRweDt3aWR0aDoxN3B4O2hlaWdodDoxN3B4fS5hLXByb2ZpbGUtdmVyaWZpZWQtYmFkZ2V7YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9BbWF6b25VSUljb25Ac3ByaXRlUGFja2VySW1hZ2VzLXNwcml0ZV8xeC0wMDNhMDUzNDRlNmE1MjYzYzk0NTY4NGM2Njc0ODM5NGI0Y2JiOWEyLl9WMl8ucG5nKTstd2Via2l0LWJhY2tncm91bmQtc2l6ZTo0MDBweCA5MDBweDtiYWNrZ3JvdW5kLXNpemU6NDAwcHggOTAwcHg7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtcG9zaXRpb246LTM0NXB4IC00ODBweDtwYWRkaW5nLWxlZnQ6MTVweDtwYWRkaW5nLXRvcDoxNXB4O2xpbmUtaGVpZ2h0OjE1cHg7Zm9udC1zaXplOjB9LmEtaGlyZXMgLmEtcHJvZmlsZS12ZXJpZmllZC1iYWRnZXtiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJSWNvbkBzcHJpdGVQYWNrZXJJbWFnZXMtc3ByaXRlXzJ4LWM1ZDk5ZTNmZjU5ZmRlN2I3M2MzYTYyNzBjYWRmNDcwZGE0ZDlmNjQuX1YyXy5wbmcpfS5hLXByb2ZpbGVbZGF0YS1hLXNpemU9c21hbGxdIC5hLXByb2ZpbGUtdmVyaWZpZWQtYmFkZ2V7YmFja2dyb3VuZC1wb3NpdGlvbjotMzQ1cHggLTUwMHB4O3BhZGRpbmctbGVmdDoxM3B4O3BhZGRpbmctdG9wOjEzcHg7bGluZS1oZWlnaHQ6MTNweH0uYS1pY29uLXdyYXBwZXJ7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wfS5hLWNoZWNrYm94LWZhbmN5IC5hLWljb24uYS1pY29uLS1jaGVja2JveCwuYS1jaGVja2JveC1mYW5jeSAuYS1pY29uLmEtaWNvbi0tcmFkaW8sLmEtcmFkaW8tZmFuY3kgLmEtaWNvbi5hLWljb24tLWNoZWNrYm94LC5hLXJhZGlvLWZhbmN5IC5hLWljb24uYS1pY29uLS1yYWRpb3tiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJSWNvbkBzcHJpdGVQYWNrZXJJbWFnZXMtc3ByaXRlXzF4LTAwM2EwNTM0NGU2YTUyNjNjOTQ1Njg0YzY2NzQ4Mzk0YjRjYmI5YTIuX1YyXy5wbmcpOy13ZWJraXQtYmFja2dyb3VuZC1zaXplOjQwMHB4IDkwMHB4O2JhY2tncm91bmQtc2l6ZTo0MDBweCA5MDBweDtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXR9LmEtaGlyZXMgLmEtY2hlY2tib3gtZmFuY3kgLmEtaWNvbi5hLWljb24tLWNoZWNrYm94LC5hLWhpcmVzIC5hLWNoZWNrYm94LWZhbmN5IC5hLWljb24uYS1pY29uLS1yYWRpbywuYS1oaXJlcyAuYS1yYWRpby1mYW5jeSAuYS1pY29uLmEtaWNvbi0tY2hlY2tib3gsLmEtaGlyZXMgLmEtcmFkaW8tZmFuY3kgLmEtaWNvbi5hLWljb24tLXJhZGlve2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0FVSUNsaWVudHMvQW1hem9uVUlJY29uQHNwcml0ZVBhY2tlckltYWdlcy1zcHJpdGVfMngtYzVkOTllM2ZmNTlmZGU3YjczYzNhNjI3MGNhZGY0NzBkYTRkOWY2NC5fVjJfLnBuZyl9LmEtbm8tanMgLmEtY2hlY2tib3gtZmFuY3kgaSwuYS1uby1qcyAuYS1jaGVja2JveC5hLWNoZWNrYm94LWZhbmN5IGksLmEtbm8tanMgLmEtcmFkaW8tZmFuY3kgaSwuYS1uby1qcyAuYS1yYWRpby5hLXJhZGlvLWZhbmN5IGl7ZGlzcGxheTpub25lfS5hLW5vLWpzIC5hLWNoZWNrYm94LWZhbmN5IGlucHV0LC5hLW5vLWpzIC5hLWNoZWNrYm94LmEtY2hlY2tib3gtZmFuY3kgaW5wdXQsLmEtbm8tanMgLmEtcmFkaW8tZmFuY3kgaW5wdXQsLmEtbm8tanMgLmEtcmFkaW8uYS1yYWRpby1mYW5jeSBpbnB1dHtwb3NpdGlvbjpyZWxhdGl2ZSFpbXBvcnRhbnQ7ei1pbmRleDphdXRvIWltcG9ydGFudDtvcGFjaXR5OjF9LmEtZG9tYWluLC5hLWljb24tYW1hem9uLWFwcCwuYS1pY29uLWF1dG9yaXAsLmEtaWNvbi1kb21haW4sLmEtaWNvbi1mYmEsLmEtaWNvbi1mcmVzaCwuYS1pY29uLWtpbmRsZS11bmxpbWl0ZWQtaGVhZHBob25lcywuYS1pY29uLWxvZ28sLmEtaWNvbi1sb2dvLWNoaW5hLC5hLWljb24tcHJlbWl1bSwuYS1pY29uLXByZW1pdW0tbmF2LC5hLWljb24tcHJpbWUsLmEtaWNvbi1wcmltZS1jYW1wdXMsLmEtaWNvbi1wcmltZS1mcmVzaCwuYS1pY29uLXByaW1lLWhlYWRwaG9uZXMsLmEtaWNvbi1wcmltZS1uYXYsLmEtaWNvbi1wcmltZS1wYXNzLC5hLWljb24tcHJpbWUtd2FyZHJvYmUtYmFkZ2UsLmEtaWNvbi1wcmltZS13YXJkcm9iZS1sb2dvLC5hLWljb24tcHJpbWVmcmVzaC1uYXYsLmEtaWNvbi1zaGFyZS1kb3ViYW4sLmEtaWNvbi1zaGFyZS1lbWFpbCwuYS1pY29uLXNoYXJlLWZhY2Vib29rLC5hLWljb24tc2hhcmUta2FpeGluMDAxLC5hLWljb24tc2hhcmUtbGluZSwuYS1pY29uLXNoYXJlLWxpbmssLmEtaWNvbi1zaGFyZS1taXhpLC5hLWljb24tc2hhcmUtcGVuZ3lvdSwuYS1pY29uLXNoYXJlLXBpbnRlcmVzdCwuYS1pY29uLXNoYXJlLXFxLC5hLWljb24tc2hhcmUtcXpvbmUsLmEtaWNvbi1zaGFyZS1yZW5yZW4sLmEtaWNvbi1zaGFyZS1zaW5hLC5hLWljb24tc2hhcmUtc21zLC5hLWljb24tc2hhcmUtdGVuY2VudCwuYS1pY29uLXNoYXJlLXR3aXR0ZXIsLmEtaWNvbi1zaGFyZS13ZWNoYXQsLmEtaWNvbi1zaGFyZS13aGF0c2FwcCwuYS1pY29uLXNtaWxlLC5hLWxvZ28sLmEtbG9nby1jaGluYSwuYS1wcmVtaXVtLWxvZ28sLmEtcHJlbWl1bS1uYXYtbG9nbywuYS1wcmltZS1sb2dvLC5hLXByaW1lLW5hdi1sb2dvLC5hLXNoYXJlLWRvdWJhbiwuYS1zaGFyZS1lbWFpbCwuYS1zaGFyZS1mYWNlYm9vaywuYS1zaGFyZS1rYWl4aW4wMDEsLmEtc2hhcmUtbGluZSwuYS1zaGFyZS1saW5rLC5hLXNoYXJlLW1peGksLmEtc2hhcmUtcGVuZ3lvdSwuYS1zaGFyZS1waW50ZXJlc3QsLmEtc2hhcmUtcXEsLmEtc2hhcmUtcXpvbmUsLmEtc2hhcmUtcmVucmVuLC5hLXNoYXJlLXNpbmEsLmEtc2hhcmUtc21zLC5hLXNoYXJlLXRlbmNlbnQsLmEtc2hhcmUtdHdpdHRlciwuYS1zaGFyZS13ZWNoYXQsLmEtc2hhcmUtd2hhdHNhcHB7YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9BbWF6b25VSUljb25Ac3ByaXRlUGFja2VySW1hZ2VzLWJlYWNvbl9saWdodF8xeC02ZDExYmQxZWNkMjE3ODlmNTMyNzBjYmQ0NjJjNDQ1MWVmYWNjZjc4Ll9WMl8ucG5nKTstd2Via2l0LWJhY2tncm91bmQtc2l6ZTo1MTJweCAyNTZweDtiYWNrZ3JvdW5kLXNpemU6NTEycHggMjU2cHg7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0fS5hLWhpcmVzIC5hLWRvbWFpbiwuYS1oaXJlcyAuYS1pY29uLWFtYXpvbi1hcHAsLmEtaGlyZXMgLmEtaWNvbi1hdXRvcmlwLC5hLWhpcmVzIC5hLWljb24tZG9tYWluLC5hLWhpcmVzIC5hLWljb24tZmJhLC5hLWhpcmVzIC5hLWljb24tZnJlc2gsLmEtaGlyZXMgLmEtaWNvbi1raW5kbGUtdW5saW1pdGVkLWhlYWRwaG9uZXMsLmEtaGlyZXMgLmEtaWNvbi1sb2dvLC5hLWhpcmVzIC5hLWljb24tbG9nby1jaGluYSwuYS1oaXJlcyAuYS1pY29uLXByZW1pdW0sLmEtaGlyZXMgLmEtaWNvbi1wcmVtaXVtLW5hdiwuYS1oaXJlcyAuYS1pY29uLXByaW1lLC5hLWhpcmVzIC5hLWljb24tcHJpbWUtY2FtcHVzLC5hLWhpcmVzIC5hLWljb24tcHJpbWUtZnJlc2gsLmEtaGlyZXMgLmEtaWNvbi1wcmltZS1oZWFkcGhvbmVzLC5hLWhpcmVzIC5hLWljb24tcHJpbWUtbmF2LC5hLWhpcmVzIC5hLWljb24tcHJpbWUtcGFzcywuYS1oaXJlcyAuYS1pY29uLXByaW1lLXdhcmRyb2JlLWJhZGdlLC5hLWhpcmVzIC5hLWljb24tcHJpbWUtd2FyZHJvYmUtbG9nbywuYS1oaXJlcyAuYS1pY29uLXByaW1lZnJlc2gtbmF2LC5hLWhpcmVzIC5hLWljb24tc2hhcmUtZG91YmFuLC5hLWhpcmVzIC5hLWljb24tc2hhcmUtZW1haWwsLmEtaGlyZXMgLmEtaWNvbi1zaGFyZS1mYWNlYm9vaywuYS1oaXJlcyAuYS1pY29uLXNoYXJlLWthaXhpbjAwMSwuYS1oaXJlcyAuYS1pY29uLXNoYXJlLWxpbmUsLmEtaGlyZXMgLmEtaWNvbi1zaGFyZS1saW5rLC5hLWhpcmVzIC5hLWljb24tc2hhcmUtbWl4aSwuYS1oaXJlcyAuYS1pY29uLXNoYXJlLXBlbmd5b3UsLmEtaGlyZXMgLmEtaWNvbi1zaGFyZS1waW50ZXJlc3QsLmEtaGlyZXMgLmEtaWNvbi1zaGFyZS1xcSwuYS1oaXJlcyAuYS1pY29uLXNoYXJlLXF6b25lLC5hLWhpcmVzIC5hLWljb24tc2hhcmUtcmVucmVuLC5hLWhpcmVzIC5hLWljb24tc2hhcmUtc2luYSwuYS1oaXJlcyAuYS1pY29uLXNoYXJlLXNtcywuYS1oaXJlcyAuYS1pY29uLXNoYXJlLXRlbmNlbnQsLmEtaGlyZXMgLmEtaWNvbi1zaGFyZS10d2l0dGVyLC5hLWhpcmVzIC5hLWljb24tc2hhcmUtd2VjaGF0LC5hLWhpcmVzIC5hLWljb24tc2hhcmUtd2hhdHNhcHAsLmEtaGlyZXMgLmEtaWNvbi1zbWlsZSwuYS1oaXJlcyAuYS1sb2dvLC5hLWhpcmVzIC5hLWxvZ28tY2hpbmEsLmEtaGlyZXMgLmEtcHJlbWl1bS1sb2dvLC5hLWhpcmVzIC5hLXByZW1pdW0tbmF2LWxvZ28sLmEtaGlyZXMgLmEtcHJpbWUtbG9nbywuYS1oaXJlcyAuYS1wcmltZS1uYXYtbG9nbywuYS1oaXJlcyAuYS1zaGFyZS1kb3ViYW4sLmEtaGlyZXMgLmEtc2hhcmUtZW1haWwsLmEtaGlyZXMgLmEtc2hhcmUtZmFjZWJvb2ssLmEtaGlyZXMgLmEtc2hhcmUta2FpeGluMDAxLC5hLWhpcmVzIC5hLXNoYXJlLWxpbmUsLmEtaGlyZXMgLmEtc2hhcmUtbGluaywuYS1oaXJlcyAuYS1zaGFyZS1taXhpLC5hLWhpcmVzIC5hLXNoYXJlLXBlbmd5b3UsLmEtaGlyZXMgLmEtc2hhcmUtcGludGVyZXN0LC5hLWhpcmVzIC5hLXNoYXJlLXFxLC5hLWhpcmVzIC5hLXNoYXJlLXF6b25lLC5hLWhpcmVzIC5hLXNoYXJlLXJlbnJlbiwuYS1oaXJlcyAuYS1zaGFyZS1zaW5hLC5hLWhpcmVzIC5hLXNoYXJlLXNtcywuYS1oaXJlcyAuYS1zaGFyZS10ZW5jZW50LC5hLWhpcmVzIC5hLXNoYXJlLXR3aXR0ZXIsLmEtaGlyZXMgLmEtc2hhcmUtd2VjaGF0LC5hLWhpcmVzIC5hLXNoYXJlLXdoYXRzYXBwe2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0FVSUNsaWVudHMvQW1hem9uVUlJY29uQHNwcml0ZVBhY2tlckltYWdlcy1iZWFjb25fbGlnaHRfMngtZjIxZjE1NjA3YjhiYWI4ODgwZjFlZmUzNDhlNWFmMDBhNmRiNTY3MS5fVjJfLnBuZyl9LmEtZG9tYWluLWpwLC5hLWljb24tZG9tYWluLWpwLC5hLWljb24tanB7YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9BbWF6b25VSUljb25Ac3ByaXRlUGFja2VySW1hZ2VzLWJlYWNvbl9saWdodF9qcF8xeC02YzRjODY5ZWFkM2RkYzVmMmNmYTA3ZTBlZGZlYjg4MTc4MTM3MGFmLl9WMl8ucG5nKTstd2Via2l0LWJhY2tncm91bmQtc2l6ZToyNTZweCAzMnB4O2JhY2tncm91bmQtc2l6ZToyNTZweCAzMnB4fS5hLWhpcmVzIC5hLWRvbWFpbi1qcCwuYS1oaXJlcyAuYS1pY29uLWRvbWFpbi1qcCwuYS1oaXJlcyAuYS1pY29uLWpwe2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0FVSUNsaWVudHMvQW1hem9uVUlJY29uQHNwcml0ZVBhY2tlckltYWdlcy1iZWFjb25fbGlnaHRfanBfMngtN2FlYTM3Yjc1MzcyZTc4NDJjMzU4NjM1MGEzNDM0NWEyNTI3MzY1OC5fVjJfLnBuZyl9LmEtaWNvbi1hbWF6b24tYXBwe3dpZHRoOjU1cHg7aGVpZ2h0OjU1cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMnB4IC02OHB4fS5hLWljb24tYXV0b3JpcHt3aWR0aDo2MnB4O2hlaWdodDoxNXB4O2JhY2tncm91bmQtcG9zaXRpb246LTcwcHggLTQ5cHg7dmVydGljYWwtYWxpZ246YmFzZWxpbmU7cG9zaXRpb246cmVsYXRpdmU7Ym90dG9tOi0ycHh9LmEtaWNvbi1zbWlsZXt3aWR0aDo1MHB4O2hlaWdodDoyMXB4O2JhY2tncm91bmQtcG9zaXRpb246LTI1NnB4IC0yMDFweH0uYS1pY29uLWZyZWV0aW1lLC5hLWljb24tZnJlZXRpbWUtbWVkLC5hLWljb24tZnJlZXRpbWUtc217YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9BbWF6b25VSUljb25Ac3ByaXRlUGFja2VySW1hZ2VzLWJlYWNvbl9saWdodF8xeC02ZDExYmQxZWNkMjE3ODlmNTMyNzBjYmQ0NjJjNDQ1MWVmYWNjZjc4Ll9WMl8ucG5nKTstd2Via2l0LWJhY2tncm91bmQtc2l6ZTo1MTJweCAyNTZweDtiYWNrZ3JvdW5kLXNpemU6NTEycHggMjU2cHg7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lfS5hLWhpcmVzIC5hLWljb24tZnJlZXRpbWUsLmEtaGlyZXMgLmEtaWNvbi1mcmVldGltZS1tZWQsLmEtaGlyZXMgLmEtaWNvbi1mcmVldGltZS1zbXtiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJSWNvbkBzcHJpdGVQYWNrZXJJbWFnZXMtYmVhY29uX2xpZ2h0XzJ4LWYyMWYxNTYwN2I4YmFiODg4MGYxZWZlMzQ4ZTVhZjAwYTZkYjU2NzEuX1YyXy5wbmcpfS5hLWljb24tZnJlZXRpbWUtc20sLmEtaWNvbi1mcmVldGltZS5hLWljb24tc21hbGx7YmFja2dyb3VuZC1wb3NpdGlvbjotMTMwcHggLTIwOXB4O2hlaWdodDoxMHB4O3dpZHRoOjEwMXB4fS5hLWljb24tZnJlZXRpbWUsLmEtaWNvbi1mcmVldGltZS1tZWR7YmFja2dyb3VuZC1wb3NpdGlvbjotMTQ0cHggLTIzN3B4O2hlaWdodDoxNHB4O3dpZHRoOjE0MnB4fS5hLWljb24ta2luZGxlLXVubGltaXRlZHtiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJSWNvbkBzcHJpdGVQYWNrZXJJbWFnZXMtYmVhY29uX2xpZ2h0XzF4LTZkMTFiZDFlY2QyMTc4OWY1MzI3MGNiZDQ2MmM0NDUxZWZhY2NmNzguX1YyXy5wbmcpOy13ZWJraXQtYmFja2dyb3VuZC1zaXplOjUxMnB4IDI1NnB4O2JhY2tncm91bmQtc2l6ZTo1MTJweCAyNTZweDtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXR9LmEtaGlyZXMgLmEtaWNvbi1raW5kbGUtdW5saW1pdGVke2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0FVSUNsaWVudHMvQW1hem9uVUlJY29uQHNwcml0ZVBhY2tlckltYWdlcy1iZWFjb25fbGlnaHRfMngtZjIxZjE1NjA3YjhiYWI4ODgwZjFlZmUzNDhlNWFmMDBhNmRiNTY3MS5fVjJfLnBuZyl9LmEtaWNvbi1raW5kbGUtdW5saW1pdGVke3dpZHRoOjExMHB4O2hlaWdodDoxNHB4O2JhY2tncm91bmQtcG9zaXRpb246LTE0NHB4IC0yMjFweDt2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZX0uYS1pY29uLWtpbmRsZS11bmxpbWl0ZWQuYS1pY29uLXNtYWxse3dpZHRoOjgwcHg7aGVpZ2h0OjE2cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMnB4IC0yMHB4fS5hLWljb24ta2luZGxlLXVubGltaXRlZC1mcntiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJSWNvbkBzcHJpdGVQYWNrZXJJbWFnZXMtYmVhY29uX2xpZ2h0X2ZyXzF4LTZiZjY0MGU1MWMyMjIxYTFlZjBkY2JjNTI5Y2I4NjA4OTA0ZmE0YTcuX1YyXy5wbmcpOy13ZWJraXQtYmFja2dyb3VuZC1zaXplOjEyOHB4IDE2cHg7YmFja2dyb3VuZC1zaXplOjEyOHB4IDE2cHg7d2lkdGg6ODZweDtoZWlnaHQ6MTBweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0ycHggLTJweDt2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZX0uYS1oaXJlcyAuYS1pY29uLWtpbmRsZS11bmxpbWl0ZWQtZnJ7YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9BbWF6b25VSUljb25Ac3ByaXRlUGFja2VySW1hZ2VzLWJlYWNvbl9saWdodF9mcl8yeC0zMTQxMTRiY2VkZTc0ZGZhZTE4YjNkZThhMzBmNDY3ZDA2MjRlMWZkLl9WMl8ucG5nKX0uYS1pY29uLXByZW1pdW0sLmEtaWNvbi1wcmltZSwuYS1wcmVtaXVtLWxvZ28sLmEtcHJpbWUtbG9nb3t3aWR0aDo1M3B4O2hlaWdodDoxNXB4O2JhY2tncm91bmQtcG9zaXRpb246LTg0cHggLTJweDt2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZX0uYS1pY29uLXByZW1pdW0uYS1pY29uLXNtYWxsLC5hLWljb24tcHJpbWUuYS1pY29uLXNtYWxsLC5hLXByZW1pdW0tbG9nby5hLWljb24tc21hbGwsLmEtcHJpbWUtbG9nby5hLWljb24tc21hbGx7d2lkdGg6NDJweDtoZWlnaHQ6MTJweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zMDhweCAtMTkycHh9LmEtaWNvbi1wcmVtaXVtLmEtaWNvbi1taW5pLC5hLWljb24tcHJpbWUuYS1pY29uLW1pbmksLmEtcHJlbWl1bS1sb2dvLmEtaWNvbi1taW5pLC5hLXByaW1lLWxvZ28uYS1pY29uLW1pbml7d2lkdGg6MzVweDtoZWlnaHQ6MTBweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi00MzhweCAtMjA3cHh9LmEtaWNvbi10ZXh0e3BhZGRpbmctbGVmdDozcHg7cG9zaXRpb246cmVsYXRpdmU7Ym90dG9tOjNweH0uYS1pY29uLXByZW1pdW0td2l0aC10ZXh0LC5hLWljb24tcHJpbWUtanAtd2l0aC10ZXh0LC5hLWljb24tcHJpbWUtd2l0aC10ZXh0e3ZlcnRpY2FsLWFsaWduOnRvcDtmb250LXN0eWxlOm5vcm1hbDtjb2xvcjojMTExfS5hLWljb24tcHJlbWl1bS13aXRoLXRleHQuYS1pY29uLXNtYWxsIC5hLWljb24tdGV4dCwuYS1pY29uLXByaW1lLWpwLXdpdGgtdGV4dC5hLWljb24tc21hbGwgLmEtaWNvbi10ZXh0LC5hLWljb24tcHJpbWUtd2l0aC10ZXh0LmEtaWNvbi1zbWFsbCAuYS1pY29uLXRleHR7Zm9udC1zaXplOjEwcHg7Ym90dG9tOjNweH0uYS1pY29uLXByaW1lLWpwLXdpdGgtdGV4dCAuYS1pY29uLXRleHQsLmEtaWNvbi1wcmltZS13aXRoLXRleHQgLmEtaWNvbi10ZXh0e2JvdHRvbToycHh9LmEtaWNvbi1wcmltZS1wYXNze2JhY2tncm91bmQtcG9zaXRpb246LTkxcHggLTEzNHB4O2hlaWdodDoxNXB4O3dpZHRoOjc3cHh9LmEtaWNvbi1wcmltZS1jYW1wdXN7YmFja2dyb3VuZC1wb3NpdGlvbjotNDAxcHggLTIxOXB4O2hlaWdodDoxNnB4O3dpZHRoOjEwMnB4O3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lfS5hLWljb24tcHJpbWUtY2FtcHVzLmEtaWNvbi1zbWFsbHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xMDdweCAtMTUxcHg7aGVpZ2h0OjE0cHg7d2lkdGg6ODhweH0uYS1pY29uLXBhbnRyeSwuYS1pY29uLXByaW1lLWpwLC5hLWljb24tcHJpbWUtanAtbmF2LC5hLWljb24tcHJpbWUtcGFudHJ5LC5hLXByaW1lLWpwLWxvZ28sLmEtcHJpbWUtanAtbmF2LWxvZ297YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9BbWF6b25VSUljb25Ac3ByaXRlUGFja2VySW1hZ2VzLWJlYWNvbl9saWdodF8xeC02ZDExYmQxZWNkMjE3ODlmNTMyNzBjYmQ0NjJjNDQ1MWVmYWNjZjc4Ll9WMl8ucG5nKTstd2Via2l0LWJhY2tncm91bmQtc2l6ZTo1MTJweCAyNTZweDtiYWNrZ3JvdW5kLXNpemU6NTEycHggMjU2cHg7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0fS5hLWhpcmVzIC5hLWljb24tcGFudHJ5LC5hLWhpcmVzIC5hLWljb24tcHJpbWUtanAsLmEtaGlyZXMgLmEtaWNvbi1wcmltZS1qcC1uYXYsLmEtaGlyZXMgLmEtaWNvbi1wcmltZS1wYW50cnksLmEtaGlyZXMgLmEtcHJpbWUtanAtbG9nbywuYS1oaXJlcyAuYS1wcmltZS1qcC1uYXYtbG9nb3tiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJSWNvbkBzcHJpdGVQYWNrZXJJbWFnZXMtYmVhY29uX2xpZ2h0XzJ4LWYyMWYxNTYwN2I4YmFiODg4MGYxZWZlMzQ4ZTVhZjAwYTZkYjU2NzEuX1YyXy5wbmcpfS5hLWljb24tcHJpbWUtcGFudHJ5e2JhY2tncm91bmQtcG9zaXRpb246LTkxcHggLTExNnB4O2hlaWdodDoxNnB4O3dpZHRoOjc0cHg7dmVydGljYWwtYWxpZ246YmFzZWxpbmV9LmEtaWNvbi1wcmltZS1wYW50cnkuYS1pY29uLXNtYWxse2JhY2tncm91bmQtcG9zaXRpb246LTg0cHggLTgzcHg7aGVpZ2h0OjE0cHg7d2lkdGg6NjlweH0uYS1pY29uLXBhbnRyeXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zMDhweCAtMjA2cHg7d2lkdGg6NDNweDtoZWlnaHQ6MTRweH0uYS1pY29uLXBhbnRyeS5hLWljb24tc21hbGx7YmFja2dyb3VuZC1wb3NpdGlvbjotMTkxcHggLTEyNHB4O3dpZHRoOjM3cHg7aGVpZ2h0OjExcHh9LmEtaWNvbi1wcmltZS1qcC1uYXYsLmEtcHJpbWUtanAtbmF2LWxvZ297d2lkdGg6MzRweDtoZWlnaHQ6MTJweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zODdweCAtMTkycHh9LmEtaWNvbi1wcmltZS1qcCwuYS1wcmltZS1qcC1sb2dve3dpZHRoOjUzcHg7aGVpZ2h0OjE1cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotODRweCAtMnB4O3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lfS5hLWljb24tcHJpbWUtanAuYS1pY29uLXNtYWxsLC5hLXByaW1lLWpwLWxvZ28uYS1pY29uLXNtYWxse3dpZHRoOjQycHg7aGVpZ2h0OjEycHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMzA4cHggLTE5MnB4fS5hLWljb24tcHJpbWUtanAuYS1pY29uLW1pbmksLmEtcHJpbWUtanAtbG9nby5hLWljb24tbWluaXt3aWR0aDozNXB4O2hlaWdodDoxMHB4O2JhY2tncm91bmQtcG9zaXRpb246LTQzOHB4IC0yMDdweH0uYS1pY29uLWZyZXNoe2JhY2tncm91bmQtcG9zaXRpb246LTQwMXB4IC0yMDZweDtoZWlnaHQ6MTFweDt3aWR0aDozNXB4O3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lfS5hLWljb24tcHJpbWUtZnJlc2h7YmFja2dyb3VuZC1wb3NpdGlvbjotMnB4IC0ycHg7aGVpZ2h0OjE2cHg7d2lkdGg6ODBweDt2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZX0uYS1pY29uLXByaW1lLWZyZXNoLmEtaWNvbi1zbWFsbHt3aWR0aDo3MnB4O2hlaWdodDoxNXB4O2JhY2tncm91bmQtcG9zaXRpb246LTg0cHggLTk5cHh9LmEtaWNvbi1wcmltZS1oZWFkcGhvbmVze3dpZHRoOjYzcHg7aGVpZ2h0OjE1cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotODRweCAtNjZweH0uYS1pY29uLXByaW1lLWhlYWRwaG9uZXMuYS1pY29uLXNtYWxse3dpZHRoOjUwcHg7aGVpZ2h0OjEycHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMzIxcHggLTIyMnB4fS5hLWljb24ta2luZGxlLXVubGltaXRlZC1oZWFkcGhvbmVze3dpZHRoOjEyNnB4O2hlaWdodDoxNHB4O2JhY2tncm91bmQtcG9zaXRpb246LTJweCAtMjE2cHg7dmVydGljYWwtYWxpZ246YmFzZWxpbmV9LmEtaWNvbi1raW5kbGUtdW5saW1pdGVkLWhlYWRwaG9uZXMuYS1pY29uLXNtYWxse3dpZHRoOjkxcHg7aGVpZ2h0OjEwcHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMTI3cHggLTE5N3B4fS5hLWJ1dHRvbi5hLWljb24tcHJlbWl1bSwuYS1idXR0b24uYS1pY29uLXByaW1lLC5hLWJ1dHRvbi5hLWljb24tcHJpbWUtanAsLmEtYnV0dG9uLmEtcHJlbWl1bS1sb2dvLC5hLWJ1dHRvbi5hLXByaW1lLWpwLWxvZ28sLmEtYnV0dG9uLmEtcHJpbWUtbG9nb3twb3NpdGlvbjpyZWxhdGl2ZTt0b3A6MXB4fS5hLWljb24tcHJlbWl1bS1uYXYsLmEtaWNvbi1wcmltZS1qcC1uYXYsLmEtaWNvbi1wcmltZS1uYXYsLmEtaWNvbi1wcmltZWZyZXNoLW5hdiwuYS1wcmVtaXVtLW5hdi1sb2dvLC5hLXByaW1lLWpwLW5hdi1sb2dvLC5hLXByaW1lLW5hdi1sb2dve3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6NzNweDtib3R0b206MH0uYS1pY29uLXByZW1pdW0tbmF2LC5hLWljb24tcHJpbWUtbmF2LC5hLXByZW1pdW0tbmF2LWxvZ28sLmEtcHJpbWUtbmF2LWxvZ297d2lkdGg6MzRweDtoZWlnaHQ6MTJweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zODdweCAtMTkycHh9LmEtaWNvbi1wcmltZWZyZXNoLW5hdnt3aWR0aDo2M3B4O2hlaWdodDoxMHB4O2JhY2tncm91bmQtcG9zaXRpb246LTI1NnB4IC0yMjRweH0uYS1pY29uLXByaW1lLXdhcmRyb2JlLWJhZGdlLXdpdGgtdGV4dCwuYS1pY29uLXByaW1lLXdhcmRyb2JlLWxvZ28td2l0aC10ZXh0e3ZlcnRpY2FsLWFsaWduOnRvcDtmb250LXN0eWxlOm5vcm1hbDtjb2xvcjojNzY3Njc2fS5hLWljb24tcHJpbWUtd2FyZHJvYmUtYmFkZ2Utd2l0aC10ZXh0LmEtaWNvbi1zbWFsbCAuYS1pY29uLXRleHQsLmEtaWNvbi1wcmltZS13YXJkcm9iZS1sb2dvLXdpdGgtdGV4dC5hLWljb24tc21hbGwgLmEtaWNvbi10ZXh0e2ZvbnQtc2l6ZToxMHB4O2JvdHRvbTozcHh9LmEtaWNvbi1wcmltZS13YXJkcm9iZS1iYWRnZS13aXRoLXRleHQuYS1pY29uLW1pbmkgLmEtaWNvbi10ZXh0LC5hLWljb24tcHJpbWUtd2FyZHJvYmUtbG9nby13aXRoLXRleHQuYS1pY29uLW1pbmkgLmEtaWNvbi10ZXh0e2ZvbnQtc2l6ZToxMnB4O2JvdHRvbToycHh9LmEtaWNvbi1wcmltZS13YXJkcm9iZS1sb2dvLXdpdGgtdGV4dCAuYS1pY29uLXRleHR7Ym90dG9tOjB9LmEtaWNvbi1wcmltZS13YXJkcm9iZS1iYWRnZS13aXRoLXRleHQgLmEtaWNvbi10ZXh0e2JvdHRvbToycHh9LmEtaWNvbi1wcmltZS13YXJkcm9iZS1sb2dve3dpZHRoOjE0MHB4O2hlaWdodDoxOXB4O2JhY2tncm91bmQtcG9zaXRpb246LTJweCAtMjMycHh9LmEtaWNvbi1wcmltZS13YXJkcm9iZS1iYWRnZXt3aWR0aDoxMjNweDtoZWlnaHQ6MTZweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0ycHggLTE5OHB4fS5hLWljb24tcHJpbWUtd2FyZHJvYmUtYmFkZ2UuYS1pY29uLXNtYWxse2JhY2tncm91bmQtcG9zaXRpb246LTI4OHB4IC0yMzZweDtoZWlnaHQ6MTVweDt3aWR0aDoxMTFweH0uYS1pY29uLXByaW1lLXdhcmRyb2JlLWJhZGdlLmEtaWNvbi1taW5pe2JhY2tncm91bmQtcG9zaXRpb246LTQwMXB4IC0yMzdweDtoZWlnaHQ6MTRweDt3aWR0aDoxMDVweH0uYS1oaXJlcyAuYS1pY29uLXByZW1pdW0td2l0aC10ZXh0LmEtaWNvbi1zbWFsbCAuYS1pY29uLXRleHR7Ym90dG9tOjNweH0uYS1kb21haW4sLmEtaWNvbi1kb21haW57aGVpZ2h0OjI4cHh9LmEtZG9tYWluLXVrLC5hLWljb24tZG9tYWluLXVre3dpZHRoOjMycHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMzUzcHggLTE5MnB4fS5hLWRvbWFpbi1jYSwuYS1pY29uLWRvbWFpbi1jYXt3aWR0aDoxNXB4O2JhY2tncm91bmQtcG9zaXRpb246LTEzNHB4IC0zNnB4fS5hLWRvbWFpbi1kZSwuYS1pY29uLWRvbWFpbi1kZXt3aWR0aDoxN3B4O2JhY2tncm91bmQtcG9zaXRpb246LTU5cHggLTk1cHh9LmEtZG9tYWluLWl0LC5hLWljb24tZG9tYWluLWl0e3dpZHRoOjEzcHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMjQxcHggLTE5MXB4fS5hLWRvbWFpbi1lcywuYS1pY29uLWRvbWFpbi1lc3t3aWR0aDoxNnB4O2JhY2tncm91bmQtcG9zaXRpb246LTI0MXB4IC0xMzFweH0uYS1kb21haW4tZnIsLmEtaWNvbi1kb21haW4tZnJ7d2lkdGg6MTJweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zODdweCAtMjA2cHh9LmEtZG9tYWluLWpwLC5hLWljb24tZG9tYWluLWpwe3dpZHRoOjI4cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMjE3cHggLTJweH0uYS1kb21haW4tYnIsLmEtaWNvbi1kb21haW4tYnJ7d2lkdGg6NDJweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xOTdweCAtMTM3cHh9LmEtZG9tYWluLWluLC5hLWljb24tZG9tYWluLWlue3dpZHRoOjE0cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotNDk1cHggLTE4OXB4fS5hLWljb24tZG9tYWluLW14e3dpZHRoOjQ4cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotODRweCAtMTlweH0uYS1pY29uLWRvbWFpbi1hdXt3aWR0aDo0NHB4O2JhY2tncm91bmQtcG9zaXRpb246LTE4NXB4IC0xNjdweH0uYS1pY29uLWRvbWFpbi1ydXt3aWR0aDoxNnB4O2JhY2tncm91bmQtcG9zaXRpb246LTI1OXB4IC0xMzNweH0uYS1pY29uLWRvbWFpbi1ubHt3aWR0aDoxM3B4O2JhY2tncm91bmQtcG9zaXRpb246LTI0MXB4IC0xNjFweH0uYS1pY29uLXNoYXJlLWxpbmUsLmEtc2hhcmUtbGluZXt3aWR0aDoxN3B4O2hlaWdodDoxN3B4O2JhY2tncm91bmQtcG9zaXRpb246LTI3N3B4IC0xNDRweDtwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6MXB4fS5hLWljb24tc2hhcmUtZG91YmFuLC5hLWljb24tc2hhcmUtZW1haWwsLmEtaWNvbi1zaGFyZS1mYWNlYm9vaywuYS1pY29uLXNoYXJlLWthaXhpbjAwMSwuYS1pY29uLXNoYXJlLWxpbmssLmEtaWNvbi1zaGFyZS1taXhpLC5hLWljb24tc2hhcmUtcGVuZ3lvdSwuYS1pY29uLXNoYXJlLXBpbnRlcmVzdCwuYS1pY29uLXNoYXJlLXFxLC5hLWljb24tc2hhcmUtcXpvbmUsLmEtaWNvbi1zaGFyZS1yZW5yZW4sLmEtaWNvbi1zaGFyZS1zaW5hLC5hLWljb24tc2hhcmUtc21zLC5hLWljb24tc2hhcmUtdGVuY2VudCwuYS1pY29uLXNoYXJlLXR3aXR0ZXIsLmEtaWNvbi1zaGFyZS13ZWNoYXQsLmEtaWNvbi1zaGFyZS13aGF0c2FwcCwuYS1zaGFyZS1kb3ViYW4sLmEtc2hhcmUtZW1haWwsLmEtc2hhcmUtZmFjZWJvb2ssLmEtc2hhcmUta2FpeGluMDAxLC5hLXNoYXJlLWxpbmssLmEtc2hhcmUtbWl4aSwuYS1zaGFyZS1wZW5neW91LC5hLXNoYXJlLXBpbnRlcmVzdCwuYS1zaGFyZS1xcSwuYS1zaGFyZS1xem9uZSwuYS1zaGFyZS1yZW5yZW4sLmEtc2hhcmUtc2luYSwuYS1zaGFyZS1zbXMsLmEtc2hhcmUtdGVuY2VudCwuYS1zaGFyZS10d2l0dGVyLC5hLXNoYXJlLXdlY2hhdCwuYS1zaGFyZS13aGF0c2FwcHtwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6MXB4fS5hLWljb24tc2hhcmUtZmFjZWJvb2ssLmEtc2hhcmUtZmFjZWJvb2t7d2lkdGg6MTdweDtoZWlnaHQ6MTdweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yNTZweCAtMTYzcHh9LmEtaWNvbi1zaGFyZS10d2l0dGVyLC5hLXNoYXJlLXR3aXR0ZXJ7d2lkdGg6MThweDtoZWlnaHQ6MTdweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yNTZweCAtMTgycHh9LmEtaWNvbi1zaGFyZS1waW50ZXJlc3QsLmEtc2hhcmUtcGludGVyZXN0e3dpZHRoOjE3cHg7aGVpZ2h0OjE3cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotNDIzcHggLTE4N3B4fS5hLWljb24tc2hhcmUtZW1haWwsLmEtc2hhcmUtZW1haWx7d2lkdGg6MTlweDtoZWlnaHQ6MTdweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xNzBweCAtMTMycHh9LmEtaWNvbi1zaGFyZS1taXhpLC5hLXNoYXJlLW1peGl7d2lkdGg6MTlweDtoZWlnaHQ6MTdweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xNjdweCAtMTEzcHh9LmEtaWNvbi1zaGFyZS1rYWl4aW4wMDEsLmEtc2hhcmUta2FpeGluMDAxe3dpZHRoOjE3cHg7aGVpZ2h0OjE3cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMjc1cHggLTE2M3B4fS5hLWljb24tc2hhcmUtdGVuY2VudCwuYS1zaGFyZS10ZW5jZW50e3dpZHRoOjE3cHg7aGVpZ2h0OjE3cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMTU4cHggLTk0cHh9LmEtaWNvbi1zaGFyZS1wZW5neW91LC5hLXNoYXJlLXBlbmd5b3V7d2lkdGg6MTdweDtoZWlnaHQ6MTdweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yNzdweCAtMTI1cHh9LmEtaWNvbi1zaGFyZS1yZW5yZW4sLmEtc2hhcmUtcmVucmVue3dpZHRoOjE3cHg7aGVpZ2h0OjE3cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMjA3cHggLTEwNXB4fS5hLWljb24tc2hhcmUtZG91YmFuLC5hLXNoYXJlLWRvdWJhbnt3aWR0aDoxN3B4O2hlaWdodDoxN3B4O2JhY2tncm91bmQtcG9zaXRpb246LTI3NnB4IC0xODJweH0uYS1pY29uLXNoYXJlLXF6b25lLC5hLXNoYXJlLXF6b25le3dpZHRoOjE3cHg7aGVpZ2h0OjE3cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMTg4cHggLTEwNXB4fS5hLWljb24tc2hhcmUtc2luYSwuYS1zaGFyZS1zaW5he3dpZHRoOjE3cHg7aGVpZ2h0OjE3cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMTM5cHggLTJweH0uYS1pY29uLXNoYXJlLXdlY2hhdCwuYS1zaGFyZS13ZWNoYXR7d2lkdGg6MTdweDtoZWlnaHQ6MTdweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xNTVweCAtNzVweH0uYS1pY29uLXNoYXJlLXFxLC5hLXNoYXJlLXFxe3dpZHRoOjE3cHg7aGVpZ2h0OjE3cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotNDQycHggLTE4OHB4fS5hLWljb24tc2hhcmUtc21zLC5hLXNoYXJlLXNtc3t3aWR0aDoxOXB4O2hlaWdodDoxOXB4O2JhY2tncm91bmQtcG9zaXRpb246LTU5cHggLTc0cHh9LmEtaWNvbi1zaGFyZS1saW5rLC5hLXNoYXJlLWxpbmt7d2lkdGg6MThweDtoZWlnaHQ6MThweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi00NzVweCAtMTk5cHh9LmEtaWNvbi1zaGFyZS13aGF0c2FwcCwuYS1zaGFyZS13aGF0c2FwcHt3aWR0aDoxN3B4O2hlaWdodDoxN3B4O2JhY2tncm91bmQtcG9zaXRpb246LTE1MXB4IC01NnB4fS5hLWljb24tZmJhLXdpdGgtdGV4dHtiYWNrZ3JvdW5kLWltYWdlOm5vbmUhaW1wb3J0YW50O2JvcmRlci1yYWRpdXM6MnB4IDAgMCAycHg7YmFja2dyb3VuZC1jb2xvcjojM2U0NjUwO2xpbmUtaGVpZ2h0OjEuMDU7Zm9udC1zaXplOjEycHg7Y29sb3I6I2ZmZjtwYWRkaW5nOjNweCA0cHggM3B4IDVweDtmb250LXN0eWxlOm5vcm1hbDtwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6MXB4O2xldHRlci1zcGFjaW5nOi4wOGVtOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApfS5hLWljb24tZmJhLXdpdGgtdGV4dDphZnRlcntjb250ZW50OlwiXCI7cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6LTVweDt0b3A6MDtib3JkZXItc3R5bGU6ZGFzaGVkO2JvcmRlci13aWR0aDo2cHg7Ym9yZGVyLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMCk7Ym9yZGVyLXRvcDo2cHggc29saWQgIzNlNDY1MDtib3JkZXItYm90dG9tLXdpZHRoOjA7d2lkdGg6MDtoZWlnaHQ6MDtmb250LXNpemU6MDtsaW5lLWhlaWdodDowOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO2JvcmRlci1sZWZ0LXdpZHRoOjA7Ym9yZGVyLXRvcC13aWR0aDoxMHB4fS5hLWljb24tZmJhLXdpdGgtdGV4dDpiZWZvcmV7Y29udGVudDpcIlwiO3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0Oi01cHg7Ym90dG9tOjA7Ym9yZGVyLXN0eWxlOmRhc2hlZDtib3JkZXItd2lkdGg6NnB4O2JvcmRlci1jb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDApO2JvcmRlci1ib3R0b206NnB4IHNvbGlkICMzZTQ2NTA7Ym9yZGVyLXRvcC13aWR0aDowO3dpZHRoOjA7aGVpZ2h0OjA7Zm9udC1zaXplOjA7bGluZS1oZWlnaHQ6MDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTtib3JkZXItbGVmdC13aWR0aDowO2JvcmRlci1ib3R0b20td2lkdGg6MTBweH0uYS1pY29uLWZiYXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xMzRweCAtMjFweDtoZWlnaHQ6MTNweDt3aWR0aDoxM3B4fS5hLWljb24tdGV4dC1mYmF7Zm9udC1mYW1pbHk6J0FyaWFsIE5hcnJvdycsQXJpYWwsc2Fucy1zZXJpZjtmb250LXN0cmV0Y2g6Y29uZGVuc2VkO3BhZGRpbmctbGVmdDozcHg7dmVydGljYWwtYWxpZ246Ym90dG9tfS5hLWljb24tbG9nbywuYS1sb2dve2JhY2tncm91bmQtcG9zaXRpb246LTJweCAtMTY1cHg7aGVpZ2h0OjMxcHg7d2lkdGg6MTAzcHh9LmEtaWNvbi1sb2dvLWNoaW5hLC5hLWxvZ28tY2hpbmF7YmFja2dyb3VuZC1wb3NpdGlvbjotMnB4IC0xMjVweDtoZWlnaHQ6MzhweDt3aWR0aDo4N3B4fS5hLWljb24tbmF2LWNhcnQsLmEtbmF2LWNhcnR7d2lkdGg6MzhweDtoZWlnaHQ6MjZweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xNTdweCAtMjQ1cHh9LmEtaWNvbi0xY2xpY2t7aGVpZ2h0OjI1cHg7d2lkdGg6MjVweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi01cHggLTVweH0uYS1pY29uLWNhcnR7aGVpZ2h0OjI1cHg7d2lkdGg6MjVweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zNXB4IC01cHh9LmEtaWNvbi1zbnN7aGVpZ2h0OjI1cHg7d2lkdGg6MjVweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi04OHB4IC0zNXB4fS5hLWljb24tc3VwcGxlbWVudGFse29wYWNpdHk6LjY0O3dpZHRoOjhweDtoZWlnaHQ6MTFweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi03N3B4IC01cHh9LmEtaWNvbi1kcm9wZG93bnt3aWR0aDoxMHB4O2hlaWdodDo4cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotN3B4IC0xMDJweH0uYS1pY29uLWFycm93LXVwe2JhY2tncm91bmQtcG9zaXRpb246LTM1NHB4IC01cHg7d2lkdGg6N3B4O2hlaWdodDo0cHg7b3BhY2l0eTouNjR9LmEtaWNvbi1yYWRpby1hY3RpdmUsLmEtaWNvbi1yYWRpby1pbmFjdGl2ZXt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7d2lkdGg6MTlweDtoZWlnaHQ6MTlweH0uYS1pY29uLXJhZGlvLWluYWN0aXZle2JhY2tncm91bmQtcG9zaXRpb246LTZweCAtMjk0cHh9LmEtaWNvbi1yYWRpby1pbmFjdGl2ZS5hLWljb24tcmFkaW8tZGlzYWJsZWR7YmFja2dyb3VuZC1wb3NpdGlvbjotMzYwcHggLTU2MHB4fS5hLWljb24tcmFkaW8taW5hY3RpdmU6aG92ZXJ7YmFja2dyb3VuZC1wb3NpdGlvbjotNTRweCAtMjk0cHh9LmEtaWNvbi1yYWRpby1hY3RpdmV7YmFja2dyb3VuZC1wb3NpdGlvbjotMzBweCAtMjk0cHh9LmEtaWNvbi1yYWRpby1hY3RpdmUuYS1pY29uLXJhZGlvLWRpc2FibGVke2JhY2tncm91bmQtcG9zaXRpb246LTM4MHB4IC01NjBweH0uYS1yYWRpby1mYW5jeTpob3ZlciAuYS1pY29uLXJhZGlvLWluYWN0aXZle2JhY2tncm91bmQtcG9zaXRpb246LTU0cHggLTI5NHB4fS5hLXJhZGlvLWZhbmN5OmhvdmVyIC5hLWljb24tcmFkaW8taW5hY3RpdmUuYS1pY29uLXJhZGlvLWRpc2FibGVke2JhY2tncm91bmQtcG9zaXRpb246LTM2MHB4IC01NjBweH0uYS1jaGVja2JveC1mYW5jeSAuYS1pY29uLWNoZWNrYm94e3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtoZWlnaHQ6MTZweDt3aWR0aDoxNnB4fS5hLWNoZWNrYm94LWZhbmN5OmhvdmVyIC5hLWljb24tY2hlY2tib3h7YmFja2dyb3VuZC1wb3NpdGlvbjotNTRweCAtMjc0cHh9LmEtY2hlY2tib3gtZmFuY3kgLmEtaWNvbi1jaGVja2JveCwuYS1jaGVja2JveC1mYW5jeS5hLWhvdmVyLWRpc2FibGU6aG92ZXIgLmEtaWNvbi1jaGVja2JveHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi02cHggLTI3NHB4fS5hLWNoZWNrYm94LWZhbmN5IDpjaGVja2VkKy5hLWljb24tY2hlY2tib3h7YmFja2dyb3VuZC1wb3NpdGlvbjotMzBweCAtMjc0cHh9LmEtY2hlY2tib3gtZmFuY3k6aG92ZXIgOmNoZWNrZWQrLmEtaWNvbi1jaGVja2JveHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zMHB4IC0yNzRweH0uYS1jaGVja2JveC1mYW5jeSA6ZGlzYWJsZWQrLmEtaWNvbi1jaGVja2JveHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zNjBweCAtNTMwcHh9LmEtY2hlY2tib3gtZmFuY3kgOmNoZWNrZWQ6ZGlzYWJsZWQrLmEtaWNvbi1jaGVja2JveHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zODBweCAtNTMwcHh9LmEtcmFkaW8tZmFuY3kgLmEtaWNvbi1yYWRpb3t2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7aGVpZ2h0OjE3cHg7d2lkdGg6MTdweH0uYS1yYWRpby1mYW5jeTpob3ZlciAuYS1pY29uLXJhZGlve2JhY2tncm91bmQtcG9zaXRpb246LTU0cHggLTI5NHB4fS5hLXJhZGlvLWZhbmN5IC5hLWljb24tcmFkaW8sLmEtcmFkaW8tZmFuY3kuYS1ob3Zlci1kaXNhYmxlOmhvdmVyIC5hLWljb24tcmFkaW97YmFja2dyb3VuZC1wb3NpdGlvbjotNnB4IC0yOTRweH0uYS1yYWRpby1mYW5jeSA6Y2hlY2tlZCsuYS1pY29uLXJhZGlve2JhY2tncm91bmQtcG9zaXRpb246LTMwcHggLTI5NHB4fS5hLXJhZGlvLWZhbmN5OmhvdmVyIDpjaGVja2VkKy5hLWljb24tcmFkaW97YmFja2dyb3VuZC1wb3NpdGlvbjotMzBweCAtMjk0cHh9LmEtcmFkaW8tZmFuY3kgOmRpc2FibGVkKy5hLWljb24tcmFkaW97YmFja2dyb3VuZC1wb3NpdGlvbjotMzYwcHggLTU2MHB4fS5hLXJhZGlvLWZhbmN5IDpjaGVja2VkOmRpc2FibGVkKy5hLWljb24tcmFkaW97YmFja2dyb3VuZC1wb3NpdGlvbjotMzgwcHggLTU2MHB4fS5hLWljb24tZXh0ZW5kZXItY29sbGFwc2UsLmEtaWNvbi1leHRlbmRlci1leHBhbmR7d2lkdGg6N3B4O2hlaWdodDo5cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotODJweCAtMjkzcHh9LmEtaWNvbi1leHRlbmRlci1jb2xsYXBzZXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi05NHB4IC0yOTNweH0uYS1pY29uLXN0YXJ7d2lkdGg6ODBweDtoZWlnaHQ6MThweH1bY2xhc3MqPWEtaWNvbi1zdGFyXT4uYS1pY29uLWFsdHtsZWZ0OmF1dG87d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtmb250LXNpemU6aW5oZXJpdDtsaW5lLWhlaWdodDpub3JtYWw7b3BhY2l0eTowfS5hLXN0YXItNXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi01cHggLTM2OHB4fS5hLXN0YXItNHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yMXB4IC0zNjhweH0uYS1zdGFyLTN7YmFja2dyb3VuZC1wb3NpdGlvbjotMzdweCAtMzY4cHh9LmEtc3Rhci0ye2JhY2tncm91bmQtcG9zaXRpb246LTUzcHggLTM2OHB4fS5hLXN0YXItMXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi02OXB4IC0zNjhweH0uYS1zdGFyLTB7YmFja2dyb3VuZC1wb3NpdGlvbjotODVweCAtMzY4cHh9LmEtc3Rhci00LTV7YmFja2dyb3VuZC1wb3NpdGlvbjotMTc1cHggLTM2OHB4fS5hLXN0YXItMy01e2JhY2tncm91bmQtcG9zaXRpb246LTE5MXB4IC0zNjhweH0uYS1zdGFyLTItNXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yMDdweCAtMzY4cHh9LmEtc3Rhci0xLTV7YmFja2dyb3VuZC1wb3NpdGlvbjotMjIzcHggLTM2OHB4fS5hLXN0YXItMC01e2JhY2tncm91bmQtcG9zaXRpb246LTIzOXB4IC0zNjhweH0uYS1zdGFyLWJyYW5kLTV7YmFja2dyb3VuZC1wb3NpdGlvbjotNXB4IC00MjdweH0uYS1zdGFyLWJyYW5kLTR7YmFja2dyb3VuZC1wb3NpdGlvbjotMjFweCAtNDI3cHh9LmEtc3Rhci1icmFuZC0ze2JhY2tncm91bmQtcG9zaXRpb246LTM3cHggLTQyN3B4fS5hLXN0YXItYnJhbmQtMntiYWNrZ3JvdW5kLXBvc2l0aW9uOi01M3B4IC00MjdweH0uYS1zdGFyLWJyYW5kLTF7YmFja2dyb3VuZC1wb3NpdGlvbjotNjlweCAtNDI3cHh9LmEtc3Rhci1icmFuZC0we2JhY2tncm91bmQtcG9zaXRpb246LTg1cHggLTQyN3B4fS5hLXN0YXItYnJhbmQtNC01e2JhY2tncm91bmQtcG9zaXRpb246LTE3NXB4IC00MjdweH0uYS1zdGFyLWJyYW5kLTMtNXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xOTFweCAtNDI3cHh9LmEtc3Rhci1icmFuZC0yLTV7YmFja2dyb3VuZC1wb3NpdGlvbjotMjA3cHggLTQyN3B4fS5hLXN0YXItYnJhbmQtMS01e2JhY2tncm91bmQtcG9zaXRpb246LTIyM3B4IC00MjdweH0uYS1zdGFyLWJyYW5kLTAtNXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yMzlweCAtNDI3cHh9YS5hLWljb24tbGluay1lbXBoYXNpczpob3ZlcjphZnRlcixhLmEtbGluay1lbXBoYXNpczpob3ZlcjphZnRlcntiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zNDZweCAtMTAxcHh9LmEtaWNvbi1jbG9zZXtvcGFjaXR5Oi42NDt3aWR0aDoxMHB4O2hlaWdodDo5cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMjk3cHggLTVweH0uYS1pY29uLXJlbW92ZXt3aWR0aDoxM3B4O2hlaWdodDoxMnB4O2JhY2tncm91bmQtcG9zaXRpb246LTMxMXB4IC01cHg7b3BhY2l0eTouNjR9LmEtaWNvbi1yb3d7cGFkZGluZy10b3A6MXB4O3BhZGRpbmctYm90dG9tOjFweH0uYS1pY29uLXJvdzpob3ZlciBhe3RleHQtZGVjb3JhdGlvbjpub25lfS5hLWljb24tY2hlY2tvdXR7YmFja2dyb3VuZC1wb3NpdGlvbjotNThweCAtMzVweDtoZWlnaHQ6MjVweDt3aWR0aDoyNXB4fS5hLWljb24tYnV5bm93e3dpZHRoOjI1cHg7aGVpZ2h0OjI1cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMzVweCAtNjBweH0uYS1pY29uLXN0YXItbGFyZ2UsLmEtaWNvbi1zdGFyLWxhcmdlLWZ1bGwsLmEtaWNvbi1zdGFyLWxhcmdlLWhvdmVye2hlaWdodDozNXB4O3dpZHRoOjM4cHh9LmEtaWNvbi1zdGFyLWxhcmdle2JhY2tncm91bmQtcG9zaXRpb246LTM1MHB4IC03MDVweH0uYS1pY29uLXN0YXItbGFyZ2UtZnVsbHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zMDBweCAtNzA1cHh9LmEtaWNvbi1zdGFyLWxhcmdlLWhvdmVye2JhY2tncm91bmQtcG9zaXRpb246LTI1MHB4IC03MDVweH0uYS1pY29uLmEtaWNvbi1oZWFydC1ob2xsb3ctZGFyaywuYS1pY29uLmEtaWNvbi1oZWFydC1ob2xsb3ctbGlnaHQsLmEtaWNvbi5hLWljb24taGVhcnQtc29saWQtcmVke2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0FVSUNsaWVudHMvQW1hem9uVUlJY29uQHNwcml0ZVBhY2tlckltYWdlcy1zcHJpdGVfaGVhcnRfZGVza3RvcF8xeC00N2NiOTNjYWY1NTVkZDRkNjQ3MDJkMGM0MGUwMTRhZWRmNDdiMTA3Ll9WMl8ucG5nKTstd2Via2l0LWJhY2tncm91bmQtc2l6ZToyNnB4IDc4cHg7YmFja2dyb3VuZC1zaXplOjI2cHggNzhweH0uYS1oaXJlcyAuYS1pY29uLmEtaWNvbi1oZWFydC1ob2xsb3ctZGFyaywuYS1oaXJlcyAuYS1pY29uLmEtaWNvbi1oZWFydC1ob2xsb3ctbGlnaHQsLmEtaGlyZXMgLmEtaWNvbi5hLWljb24taGVhcnQtc29saWQtcmVke2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0FVSUNsaWVudHMvQW1hem9uVUlJY29uQHNwcml0ZVBhY2tlckltYWdlcy1zcHJpdGVfaGVhcnRfZGVza3RvcF8yeC02ODQzMThhMmVkMjI4ZWE2OWEyNTQ4MGNkM2M2NTlmMjhjNGNmZjQ1Ll9WMl8ucG5nKX0uYS1pY29uLWhlYXJ0LWhvbGxvdy1saWdodHt3aWR0aDoyNnB4O2hlaWdodDoyNnB4O2JhY2tncm91bmQtcG9zaXRpb246MCAwfS5hLWljb24taGVhcnQtaG9sbG93LWRhcmt7d2lkdGg6MjZweDtoZWlnaHQ6MjZweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTUycHh9LmEtaWNvbi1oZWFydC1zb2xpZC1yZWR7d2lkdGg6MjZweDtoZWlnaHQ6MjZweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTI2cHh9LmEtaWNvbi1WT0ItYmxvY2tlZCwuYS1pY29uLVZPQi1pbmZvLC5hLWljb24tVk9CLXByZWZlcnJlZCwuYS1pY29uLVZPQi1yZXN0cmljdGVke2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0FVSUNsaWVudHMvQW1hem9uVUlJY29uQHNwcml0ZVBhY2tlckltYWdlcy1zcHJpdGUzX2xpZ2h0XzF4LTU3Mzc5OWQ3OTA0NTYxNDUzZjUzODNmNzk2Zjc5NzQzNDlhNDJlMjcuX1YyXy5wbmcpOy13ZWJraXQtYmFja2dyb3VuZC1zaXplOjUxMnB4IDY0cHg7YmFja2dyb3VuZC1zaXplOjUxMnB4IDY0cHg7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0fS5hLWhpcmVzIC5hLWljb24tVk9CLWJsb2NrZWQsLmEtaGlyZXMgLmEtaWNvbi1WT0ItaW5mbywuYS1oaXJlcyAuYS1pY29uLVZPQi1wcmVmZXJyZWQsLmEtaGlyZXMgLmEtaWNvbi1WT0ItcmVzdHJpY3RlZHtiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJSWNvbkBzcHJpdGVQYWNrZXJJbWFnZXMtc3ByaXRlM19saWdodF8yeC1mOTdlNjk0YzhhNDA3OTc0MTI1NjBhNmIxNTdiN2Q0NmU0NzY3Y2FiLl9WMl8ucG5nKX0uYS1pY29uLVZPQi1pbmZve2JhY2tncm91bmQtcG9zaXRpb246LTU3cHggLTJweDtoZWlnaHQ6NTNweDt3aWR0aDo1M3B4fS5hLWljb24tVk9CLWluZm8uYS1pY29uLXNtYWxse2JhY2tncm91bmQtcG9zaXRpb246LTIyMnB4IC0xM3B4O2hlaWdodDoyMHB4O3dpZHRoOjIxcHh9LmEtaWNvbi1WT0ItYmxvY2tlZHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0ycHggLTJweDtoZWlnaHQ6NTNweDt3aWR0aDo1M3B4fS5hLWljb24tVk9CLWJsb2NrZWQuYS1pY29uLXNtYWxse2JhY2tncm91bmQtcG9zaXRpb246LTIyMnB4IC0zNXB4O2hlaWdodDoyMHB4O3dpZHRoOjIxcHh9LmEtaWNvbi1WT0ItcmVzdHJpY3RlZHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xNjdweCAtMnB4O2hlaWdodDo1M3B4O3dpZHRoOjUzcHh9LmEtaWNvbi1WT0ItcmVzdHJpY3RlZC5hLWljb24tc21hbGx7YmFja2dyb3VuZC1wb3NpdGlvbjotMjQ1cHggLTEzcHg7aGVpZ2h0OjIwcHg7d2lkdGg6MjFweH0uYS1pY29uLVZPQi1wcmVmZXJyZWR7YmFja2dyb3VuZC1wb3NpdGlvbjotMTEycHggLTJweDtoZWlnaHQ6NTNweDt3aWR0aDo1M3B4fS5hLWljb24tVk9CLXByZWZlcnJlZC5hLWljb24tc21hbGx7YmFja2dyb3VuZC1wb3NpdGlvbjotMjQ1cHggLTM1cHg7aGVpZ2h0OjIwcHg7d2lkdGg6MjFweH0qey1tb3otYm94LXNpemluZzpib3JkZXItYm94Oy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveH1ib2R5e21pbi1oZWlnaHQ6MTAwJX1hcnRpY2xlLGFzaWRlLGRldGFpbHMsZmlnY2FwdGlvbixmaWd1cmUsZm9vdGVyLGhlYWRlcixoZ3JvdXAsbmF2LHNlY3Rpb257ZGlzcGxheTpibG9ja31hdWRpbyxjYW52YXMsdmlkZW97ZGlzcGxheTppbmxpbmUtYmxvY2t9YXVkaW86bm90KFtjb250cm9sc10pe2Rpc3BsYXk6bm9uZX1odG1se2ZvbnQtc2l6ZToxMDAlOy13ZWJraXQtdGV4dC1zaXplLWFkanVzdDoxMDAlfXByZXttYXJnaW46MH1hOmZvY3Vze291dGxpbmU6dGhpbiBkb3R0ZWQ7b3V0bGluZTo1cHggYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3I7b3V0bGluZS1vZmZzZXQ6LTJweH1hOmFjdGl2ZSxhOmhvdmVye291dGxpbmU6MH1zdWIsc3Vwe3Bvc2l0aW9uOnJlbGF0aXZlO2ZvbnQtc2l6ZTo3NSU7bGluZS1oZWlnaHQ6MDt2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZX1zdXB7dG9wOi0uNWVtfXN1Yntib3R0b206LS4yNWVtfWFiYnJ7Ym9yZGVyLWJvdHRvbTowIG5vbmV9aW1ne21heC13aWR0aDoxMDAlO2JvcmRlcjowfWJ1dHRvbixpbnB1dCxzZWxlY3QsdGV4dGFyZWF7bWFyZ2luOjA7Zm9udC1zaXplOjEwMCU7dmVydGljYWwtYWxpZ246bWlkZGxlfWJ1dHRvbixpbnB1dHtsaW5lLWhlaWdodDpub3JtYWx9YnV0dG9uOjotbW96LWZvY3VzLWlubmVyLGlucHV0OjotbW96LWZvY3VzLWlubmVye3BhZGRpbmc6MDtib3JkZXI6MH1idXR0b24saW5wdXRbdHlwZT1idXR0b25dLGlucHV0W3R5cGU9cmVzZXRdLGlucHV0W3R5cGU9c3VibWl0XXtjdXJzb3I6cG9pbnRlcjstd2Via2l0LWFwcGVhcmFuY2U6YnV0dG9ufWlucHV0W3R5cGU9c2VhcmNoXXstd2Via2l0LWFwcGVhcmFuY2U6dGV4dGZpZWxkfWlucHV0W3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixpbnB1dFt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb257LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmV9dGV4dGFyZWF7b3ZlcmZsb3c6YXV0bzt2ZXJ0aWNhbC1hbGlnbjp0b3B9Ym9keXtwYWRkaW5nOjA7bWFyZ2luOjA7YmFja2dyb3VuZDojZmZmfS5hLWJveC1ncm91cD4uYS1ib3h7bWFyZ2luLXRvcDotMXB4O2JvcmRlci1yYWRpdXM6MH0uYS1ib3gtZ3JvdXA+LmEtYm94LmEtZmlyc3QsLmEtYm94LWdyb3VwPi5hLWJveDpmaXJzdC1jaGlsZHtib3JkZXItcmFkaXVzOjRweCA0cHggMCAwO21hcmdpbi10b3A6MH0uYS1ib3gtZ3JvdXA+LmEtYm94LmEtZmlyc3Q+LmEtYm94LWlubmVyLC5hLWJveC1ncm91cD4uYS1ib3g6Zmlyc3QtY2hpbGQ+LmEtYm94LWlubmVye2JvcmRlci1yYWRpdXM6NHB4IDRweCAwIDB9LmEtYm94LWdyb3VwPi5hLWJveC5hLWxhc3QsLmEtYm94LWdyb3VwPi5hLWJveDpsYXN0LWNoaWxke2JvcmRlci1yYWRpdXM6MCAwIDRweCA0cHh9LmEtYm94LWdyb3VwPi5hLWJveC5hLWxhc3Q+LmEtYm94LWlubmVyLC5hLWJveC1ncm91cD4uYS1ib3g6bGFzdC1jaGlsZD4uYS1ib3gtaW5uZXJ7Ym9yZGVyLXJhZGl1czowIDAgNHB4IDRweH0uYS1ib3gtZ3JvdXA+LmEtYm94LmEtb25seWNoaWxkLC5hLWJveC1ncm91cD4uYS1ib3g6b25seS1jaGlsZHtib3JkZXItcmFkaXVzOjRweH0uYS1ib3gtZ3JvdXA+LmEtYm94LmEtb25seWNoaWxkPi5hLWJveC1pbm5lciwuYS1ib3gtZ3JvdXA+LmEtYm94Om9ubHktY2hpbGQ+LmEtYm94LWlubmVye2JvcmRlci1yYWRpdXM6NHB4fS5hLWJveHtkaXNwbGF5OmJsb2NrO2JvcmRlci1yYWRpdXM6NHB4O2JvcmRlcjoxcHggI2RkZCBzb2xpZDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LmEtYm94IC5hLWJveC1pbm5lcntib3JkZXItcmFkaXVzOjRweDtwb3NpdGlvbjpyZWxhdGl2ZTtwYWRkaW5nOjE0cHggMThweH0uYS1ib3gtdGh1bWJuYWlse2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5hLWJveC10aHVtYm5haWwgLmEtYm94LWlubmVye3BhZGRpbmc6MCFpbXBvcnRhbnR9LmEtYm94LXRodW1ibmFpbCAuYS1ib3gtaW5uZXIgaW1ne2JvcmRlci1yYWRpdXM6NHB4fS5hLWJveC10aXRsZXtvdmVyZmxvdzpoaWRkZW59LmEtYm94LXRpdGxlIC5hLWJveC1pbm5lcntvdmVyZmxvdzpoaWRkZW47cGFkZGluZzoxMnB4IDE4cHggMTFweDtiYWNrZ3JvdW5kOiNmMGYwZjA7Ym94LXNoYWRvdzowIDFweCAwIHJnYmEoMjU1LDI1NSwyNTUsLjUpIGluc2V0O2JhY2tncm91bmQ6I2YzZjNmMztiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwjZjhmOGY4LCNlZWUpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwjZjhmOGY4LCNlZWUpfS5hLWJveC10aXRsZSBoNHt0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7Zm9udC1zaXplOjExcHg7Zm9udC13ZWlnaHQ6NzAwO2NvbG9yOiMxMTE7bGluZS1oZWlnaHQ6MX0uYS1ib3gtdGl0bGUrLmEtYm94e2JvcmRlci10b3AtY29sb3I6I2Q4ZDhkOH0uYS1hZGRvbi1ib3gtdGl0bGV7YmFja2dyb3VuZC1jb2xvcjojM0Y2OTk4O2JvcmRlci1jb2xvcjojM0Y2OTk4O3Bvc2l0aW9uOnJlbGF0aXZlO292ZXJmbG93OnZpc2libGV9LmEtYWRkb24tYm94LXRpdGxlIC5hLWJveC1pbm5lcntwYWRkaW5nOjZweCAxNHB4O2NvbG9yOiNmZmY7Zm9udC13ZWlnaHQ6NzAwO3RleHQtYWxpZ246Y2VudGVyfS5hLWFkZG9uLWJveC10aXRsZTphZnRlcntib3JkZXItc3R5bGU6ZGFzaGVkO2JvcmRlci13aWR0aDo2cHg7Ym9yZGVyLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMCk7Ym9yZGVyLXRvcDo2cHggc29saWQgIzNGNjk5ODtib3JkZXItYm90dG9tLXdpZHRoOjA7d2lkdGg6MDtoZWlnaHQ6MDtmb250LXNpemU6MDtsaW5lLWhlaWdodDowOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO3Bvc2l0aW9uOmFic29sdXRlO2JvdHRvbTotN3B4O2xlZnQ6NTAlO21hcmdpbi1sZWZ0Oi0zcHg7Y29udGVudDpcIlwifS5hLXRleHQtY2VudGVyIC5hLWJveCwuYS10ZXh0LWNlbnRlciAuYS1ib3gtZ3JvdXB7bWFyZ2luLWxlZnQ6YXV0bzttYXJnaW4tcmlnaHQ6YXV0b30uYS1ib3gtaW5uZXI+LmEtYm94Om9ubHktb2YtdHlwZXttYXJnaW46NHB4IDB9LmEtY29sb3ItYmFzZS1iYWNrZ3JvdW5ke2JhY2tncm91bmQtY29sb3I6I2ZmZiFpbXBvcnRhbnR9LmEtY29sb3ItYWx0ZXJuYXRlLWJhY2tncm91bmR7YmFja2dyb3VuZC1jb2xvcjojZjNmM2YzIWltcG9ydGFudH0uYS1jb2xvci1vZmZzZXQtYmFja2dyb3VuZHtiYWNrZ3JvdW5kLWNvbG9yOiNmNmY2ZjYhaW1wb3J0YW50fS5hLWNvbG9yLWJhc2V7Y29sb3I6IzExMSFpbXBvcnRhbnR9LmEtY29sb3Itc2Vjb25kYXJ5e2NvbG9yOiM1NTUhaW1wb3J0YW50fS5hLWNvbG9yLXRlcnRpYXJ5e2NvbG9yOiM3Njc2NzYhaW1wb3J0YW50fS5hLWNvbG9yLXN0YXRle2NvbG9yOiNjNDU1MDAhaW1wb3J0YW50fS5hLWNvbG9yLWxpbmt7Y29sb3I6IzAwNjZjMCFpbXBvcnRhbnR9LmEtY29sb3ItcHJpY2V7Y29sb3I6I0IxMjcwNCFpbXBvcnRhbnR9LmEtY29sb3Itc3VjY2Vzc3tjb2xvcjojMDA3NjAwIWltcG9ydGFudH0uYS1jb2xvci1lcnJvcntjb2xvcjojZDAwIWltcG9ydGFudH0uYS1jb2xvci1hdHRhaW5hYmxle2NvbG9yOiMwMDhhMDAhaW1wb3J0YW50fS5hLXJvd3t3aWR0aDoxMDAlfS5hLXJvdzphZnRlciwuYS1yb3c6YmVmb3Jle2Rpc3BsYXk6dGFibGU7Y29udGVudDpcIlwiO2xpbmUtaGVpZ2h0OjA7Zm9udC1zaXplOjB9LmEtcm93OmFmdGVye2NsZWFyOmJvdGh9LmEtd3MgZGl2LmEtY29sdW1uLGRpdi5hLWNvbHVtbnttYXJnaW4tcmlnaHQ6MiU7ZmxvYXQ6bGVmdDttaW4taGVpZ2h0OjFweDtvdmVyZmxvdzp2aXNpYmxlfXRkLmEtc3BhbjEsdGQuYS1zcGFuMTAsdGQuYS1zcGFuMTEsdGQuYS1zcGFuMTIsdGQuYS1zcGFuMix0ZC5hLXNwYW4zLHRkLmEtc3BhbjQsdGQuYS1zcGFuNSx0ZC5hLXNwYW42LHRkLmEtc3BhbjcsdGQuYS1zcGFuOCx0ZC5hLXNwYW45LHRoLmEtc3BhbjEsdGguYS1zcGFuMTAsdGguYS1zcGFuMTEsdGguYS1zcGFuMTIsdGguYS1zcGFuMix0aC5hLXNwYW4zLHRoLmEtc3BhbjQsdGguYS1zcGFuNSx0aC5hLXNwYW42LHRoLmEtc3BhbjcsdGguYS1zcGFuOCx0aC5hLXNwYW45e2Zsb2F0Om5vbmU7bWFyZ2luLXJpZ2h0OjB9LmEtc3BhbjEyIGlucHV0e2Zsb2F0Om5vbmU7bWFyZ2luLXJpZ2h0OjB9LmEtcHVsbDEsLmEtcHVsbDEwLC5hLXB1bGwxMSwuYS1wdWxsMTIsLmEtcHVsbDIsLmEtcHVsbDMsLmEtcHVsbDQsLmEtcHVsbDUsLmEtcHVsbDYsLmEtcHVsbDcsLmEtcHVsbDgsLmEtcHVsbDksLmEtcHVzaDEsLmEtcHVzaDEwLC5hLXB1c2gxMSwuYS1wdXNoMTIsLmEtcHVzaDIsLmEtcHVzaDMsLmEtcHVzaDQsLmEtcHVzaDUsLmEtcHVzaDYsLmEtcHVzaDcsLmEtcHVzaDgsLmEtcHVzaDl7cG9zaXRpb246cmVsYXRpdmV9LmEtcm93IC5hLXNwYW4xLC5hLXdzIC5hLXJvdyAuYS13cy1zcGFuMXt3aWR0aDo2LjQ0OCV9LmEtcm93IC5hLXB1c2gxe2xlZnQ6OC40NDglfS5hLXJvdyAuYS1wdWxsMXtsZWZ0Oi04LjQ0OCV9dGQuYS1zcGFuMSx0aC5hLXNwYW4xe3dpZHRoOjguNjglO2Zsb2F0Om5vbmUhaW1wb3J0YW50fS5hLXJvdyAuYS1zcGFuMiwuYS13cyAuYS1yb3cgLmEtd3Mtc3BhbjJ7d2lkdGg6MTQuOTQ4JX0uYS1yb3cgLmEtcHVzaDJ7bGVmdDoxNi45NDglfS5hLXJvdyAuYS1wdWxsMntsZWZ0Oi0xNi45NDglfXRkLmEtc3BhbjIsdGguYS1zcGFuMnt3aWR0aDoxNy40MyU7ZmxvYXQ6bm9uZSFpbXBvcnRhbnR9LmEtcm93IC5hLXNwYW4zLC5hLXdzIC5hLXJvdyAuYS13cy1zcGFuM3t3aWR0aDoyMy40NDglfS5hLXJvdyAuYS1wdXNoM3tsZWZ0OjI1LjQ0OCV9LmEtcm93IC5hLXB1bGwze2xlZnQ6LTI1LjQ0OCV9dGQuYS1zcGFuMyx0aC5hLXNwYW4ze3dpZHRoOjI2LjE4JTtmbG9hdDpub25lIWltcG9ydGFudH0uYS1yb3cgLmEtc3BhbjQsLmEtd3MgLmEtcm93IC5hLXdzLXNwYW40e3dpZHRoOjMxLjk0OCV9LmEtcm93IC5hLXB1c2g0e2xlZnQ6MzMuOTQ4JX0uYS1yb3cgLmEtcHVsbDR7bGVmdDotMzMuOTQ4JX10ZC5hLXNwYW40LHRoLmEtc3BhbjR7d2lkdGg6MzQuOTMlO2Zsb2F0Om5vbmUhaW1wb3J0YW50fS5hLXJvdyAuYS1zcGFuNSwuYS13cyAuYS1yb3cgLmEtd3Mtc3BhbjV7d2lkdGg6NDAuNDQ4JX0uYS1yb3cgLmEtcHVzaDV7bGVmdDo0Mi40NDglfS5hLXJvdyAuYS1wdWxsNXtsZWZ0Oi00Mi40NDglfXRkLmEtc3BhbjUsdGguYS1zcGFuNXt3aWR0aDo0My42OCU7ZmxvYXQ6bm9uZSFpbXBvcnRhbnR9LmEtcm93IC5hLXNwYW42LC5hLXdzIC5hLXJvdyAuYS13cy1zcGFuNnt3aWR0aDo0OC45NDglfS5hLXJvdyAuYS1wdXNoNntsZWZ0OjUwLjk0OCV9LmEtcm93IC5hLXB1bGw2e2xlZnQ6LTUwLjk0OCV9dGQuYS1zcGFuNix0aC5hLXNwYW42e3dpZHRoOjUyLjQzJTtmbG9hdDpub25lIWltcG9ydGFudH0uYS1yb3cgLmEtc3BhbjcsLmEtd3MgLmEtcm93IC5hLXdzLXNwYW43e3dpZHRoOjU3LjQ0OCV9LmEtcm93IC5hLXB1c2g3e2xlZnQ6NTkuNDQ4JX0uYS1yb3cgLmEtcHVsbDd7bGVmdDotNTkuNDQ4JX10ZC5hLXNwYW43LHRoLmEtc3Bhbjd7d2lkdGg6NjEuMTglO2Zsb2F0Om5vbmUhaW1wb3J0YW50fS5hLXJvdyAuYS1zcGFuOCwuYS13cyAuYS1yb3cgLmEtd3Mtc3Bhbjh7d2lkdGg6NjUuOTQ4JX0uYS1yb3cgLmEtcHVzaDh7bGVmdDo2Ny45NDglfS5hLXJvdyAuYS1wdWxsOHtsZWZ0Oi02Ny45NDglfXRkLmEtc3BhbjgsdGguYS1zcGFuOHt3aWR0aDo2OS45MyU7ZmxvYXQ6bm9uZSFpbXBvcnRhbnR9LmEtcm93IC5hLXNwYW45LC5hLXdzIC5hLXJvdyAuYS13cy1zcGFuOXt3aWR0aDo3NC40NDglfS5hLXJvdyAuYS1wdXNoOXtsZWZ0Ojc2LjQ0OCV9LmEtcm93IC5hLXB1bGw5e2xlZnQ6LTc2LjQ0OCV9dGQuYS1zcGFuOSx0aC5hLXNwYW45e3dpZHRoOjc4LjY4JTtmbG9hdDpub25lIWltcG9ydGFudH0uYS1yb3cgLmEtc3BhbjEwLC5hLXdzIC5hLXJvdyAuYS13cy1zcGFuMTB7d2lkdGg6ODIuOTQ4JX0uYS1yb3cgLmEtcHVzaDEwe2xlZnQ6ODQuOTQ4JX0uYS1yb3cgLmEtcHVsbDEwe2xlZnQ6LTg0Ljk0OCV9dGQuYS1zcGFuMTAsdGguYS1zcGFuMTB7d2lkdGg6ODcuNDMlO2Zsb2F0Om5vbmUhaW1wb3J0YW50fS5hLXJvdyAuYS1zcGFuMTEsLmEtd3MgLmEtcm93IC5hLXdzLXNwYW4xMXt3aWR0aDo5MS40NDglfS5hLXJvdyAuYS1wdXNoMTF7bGVmdDo5My40NDglfS5hLXJvdyAuYS1wdWxsMTF7bGVmdDotOTMuNDQ4JX10ZC5hLXNwYW4xMSx0aC5hLXNwYW4xMXt3aWR0aDo5Ni4xOCU7ZmxvYXQ6bm9uZSFpbXBvcnRhbnR9LmEtcm93IC5hLXNwYW4xMiwuYS13cyAuYS1yb3cgLmEtd3Mtc3BhbjEye3dpZHRoOjk5Ljk0OCV9LmEtcm93IC5hLXB1c2gxMntsZWZ0OjEwMS45NDglfS5hLXJvdyAuYS1wdWxsMTJ7bGVmdDotMTAxLjk0OCV9dGQuYS1zcGFuMTIsdGguYS1zcGFuMTJ7d2lkdGg6MTA0LjkzJTtmbG9hdDpub25lIWltcG9ydGFudH0uYS1jb2x1bW4uYS1zcGFuLWxhc3R7bWFyZ2luLXJpZ2h0OjA7ZmxvYXQ6cmlnaHR9LmEtcm93IC5hLXNwYW4xMiwuYS1zcGFuMTIsLmEtd3MgLmEtcm93IC5hLXdzLXNwYW4xMiwuYS13cyAuYS13cy1zcGFuMTJ7d2lkdGg6MTAwJTttYXJnaW4tcmlnaHQ6MH0uYS1yb3cgLmEtcmlnaHR7ZmxvYXQ6cmlnaHQhaW1wb3J0YW50O21hcmdpbi1sZWZ0OjIlIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6MCFpbXBvcnRhbnR9LmEtd3MgLmEtd3Mtcm93Pi5hLWNvbHVtbi5hLXNwYW4tbGFzdHtmbG9hdDpsZWZ0O21hcmdpbi1yaWdodDoyJX0uYS13cyAuYS13cy1zcGFuMTIsZGl2LmEtY29sdW1uLmEtc3Bhbi1sYXN0e21hcmdpbi1yaWdodDowO2Zsb2F0OnJpZ2h0fS5hLXdzIC5hLXdzLXJvdyAuYS13cy1zcGFuLWxhc3QsLmEtd3MgLmEtd3Mtc3Bhbi1sYXN0e21hcmdpbi1yaWdodDowIWltcG9ydGFudDtmbG9hdDpyaWdodCFpbXBvcnRhbnR9LmEtZml4ZWQtbGVmdC1ncmlkLWlubmVyLC5hLWZpeGVkLXJpZ2h0LWdyaWQtaW5uZXJ7cG9zaXRpb246cmVsYXRpdmU7cGFkZGluZzowfS5hLWZpeGVkLWxlZnQtZ3JpZC1pbm5lcjphZnRlciwuYS1maXhlZC1sZWZ0LWdyaWQtaW5uZXI6YmVmb3JlLC5hLWZpeGVkLXJpZ2h0LWdyaWQtaW5uZXI6YWZ0ZXIsLmEtZml4ZWQtcmlnaHQtZ3JpZC1pbm5lcjpiZWZvcmV7ZGlzcGxheTp0YWJsZTtjb250ZW50OlwiXCI7bGluZS1oZWlnaHQ6MDtmb250LXNpemU6MH0uYS1maXhlZC1sZWZ0LWdyaWQtaW5uZXI6YWZ0ZXIsLmEtZml4ZWQtcmlnaHQtZ3JpZC1pbm5lcjphZnRlcntjbGVhcjpib3RofS5hLWZpeGVkLWxlZnQtZ3JpZC1jb2wsLmEtZml4ZWQtcmlnaHQtZ3JpZC1jb2x7cG9zaXRpb246cmVsYXRpdmU7b3ZlcmZsb3c6dmlzaWJsZTt6b29tOjE7bWluLWhlaWdodDoxcHh9LmEtZml4ZWQtcmlnaHQtZ3JpZHtwb3NpdGlvbjpyZWxhdGl2ZX0uYS1maXhlZC1yaWdodC1ncmlkIC5hLWNvbC1sZWZ0e3dpZHRoOjEwMCU7cGFkZGluZy1yaWdodDozLjUlfS5hLWZpeGVkLXJpZ2h0LWdyaWQgLmEtZml4ZWQtbGVmdC1mbGlwcGVkLWdyaWQgLmEtY29sLWxlZnQsLmEtZml4ZWQtcmlnaHQtZ3JpZCAuYS1maXhlZC1sZWZ0LWdyaWQgLmEtY29sLWxlZnR7cGFkZGluZy1yaWdodDowfS5hLWZpeGVkLWxlZnQtZ3JpZHtwb3NpdGlvbjpyZWxhdGl2ZX0uYS1maXhlZC1sZWZ0LWdyaWQgLmEtY29sLXJpZ2h0e3dpZHRoOjEwMCU7cGFkZGluZy1sZWZ0OjMuNSV9LmEtZml4ZWQtbGVmdC1ncmlkIC5hLWZpeGVkLXJpZ2h0LWZsaXBwZWQtZ3JpZCAuYS1jb2wtcmlnaHQsLmEtZml4ZWQtbGVmdC1ncmlkIC5hLWZpeGVkLXJpZ2h0LWdyaWQgLmEtY29sLXJpZ2h0e3BhZGRpbmctbGVmdDowfS5hLWdyaWQtdmVydGljYWwtYWxpZ24uYS1maXhlZC1sZWZ0LWdyaWQtaW5uZXIsLmEtZ3JpZC12ZXJ0aWNhbC1hbGlnbi5hLWZpeGVkLXJpZ2h0LWdyaWQtaW5uZXJ7ZGlzcGxheTp0YWJsZSFpbXBvcnRhbnQ7dGFibGUtbGF5b3V0OmZpeGVkO3pvb206MTtib3JkZXItY29sbGFwc2U6Y29sbGFwc2U7d2lkdGg6MTAwJX0uYS1ncmlkLXZlcnRpY2FsLWFsaWduLmEtZml4ZWQtbGVmdC1ncmlkLWlubmVyPi5hLWZpeGVkLWxlZnQtZ3JpZC1jb2wsLmEtZ3JpZC12ZXJ0aWNhbC1hbGlnbi5hLWZpeGVkLXJpZ2h0LWdyaWQtaW5uZXI+LmEtZml4ZWQtcmlnaHQtZ3JpZC1jb2x7ZmxvYXQ6bm9uZSFpbXBvcnRhbnQ7ZGlzcGxheTp0YWJsZS1jZWxsIWltcG9ydGFudDt6b29tOjF9LmEtZml4ZWQtcmlnaHQtZmxpcHBlZC1ncmlkIC5hLWNvbC1sZWZ0e292ZXJmbG93OmhpZGRlbjt6b29tOjE7d2lkdGg6YXV0b30uYS1jb250YWluZXJ7bWluLXdpZHRoOjk5OHB4O3BhZGRpbmc6MTRweCAxOHB4IDE4cHg7bWFyZ2luOjAgYXV0b30uYS1ncmlkLXZlcnRpY2FsLWFsaWduLmEtcm93e2Rpc3BsYXk6dGFibGUhaW1wb3J0YW50O3RhYmxlLWxheW91dDpmaXhlZDt6b29tOjE7Ym9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlfS5hLWdyaWQtdmVydGljYWwtYWxpZ24uYS1yb3c6YWZ0ZXIsLmEtZ3JpZC12ZXJ0aWNhbC1hbGlnbi5hLXJvdzpiZWZvcmV7ZGlzcGxheTpub25lfS5hLWdyaWQtdmVydGljYWwtYWxpZ24uYS1yb3c+ZGl2LmEtY29sdW1ue2Zsb2F0Om5vbmUhaW1wb3J0YW50O2Rpc3BsYXk6dGFibGUtY2VsbCFpbXBvcnRhbnQ7em9vbToxO3BhZGRpbmctcmlnaHQ6MTRweH0uYS1ncmlkLXZlcnRpY2FsLWFsaWduLmEtcm93PmRpdi5hLWNvbHVtbi5hLXNwYW4tbGFzdHtwYWRkaW5nLXJpZ2h0OjB9LmEtZ3JpZC12ZXJ0aWNhbC1hbGlnbi5hLXJvdz5kaXYuYS1zcGFuMXt3aWR0aDo4LjY4JX0uYS1ncmlkLXZlcnRpY2FsLWFsaWduLmEtcm93PmRpdi5hLXNwYW4ye3dpZHRoOjE3LjQzJX0uYS1ncmlkLXZlcnRpY2FsLWFsaWduLmEtcm93PmRpdi5hLXNwYW4ze3dpZHRoOjI2LjE4JX0uYS1ncmlkLXZlcnRpY2FsLWFsaWduLmEtcm93PmRpdi5hLXNwYW40e3dpZHRoOjM0LjkzJX0uYS1ncmlkLXZlcnRpY2FsLWFsaWduLmEtcm93PmRpdi5hLXNwYW41e3dpZHRoOjQzLjY4JX0uYS1ncmlkLXZlcnRpY2FsLWFsaWduLmEtcm93PmRpdi5hLXNwYW42e3dpZHRoOjUyLjQzJX0uYS1ncmlkLXZlcnRpY2FsLWFsaWduLmEtcm93PmRpdi5hLXNwYW43e3dpZHRoOjYxLjE4JX0uYS1ncmlkLXZlcnRpY2FsLWFsaWduLmEtcm93PmRpdi5hLXNwYW44e3dpZHRoOjY5LjkzJX0uYS1ncmlkLXZlcnRpY2FsLWFsaWduLmEtcm93PmRpdi5hLXNwYW45e3dpZHRoOjc4LjY4JX0uYS1ncmlkLXZlcnRpY2FsLWFsaWduLmEtcm93PmRpdi5hLXNwYW4xMHt3aWR0aDo4Ny40MyV9LmEtZ3JpZC12ZXJ0aWNhbC1hbGlnbi5hLXJvdz5kaXYuYS1zcGFuMTF7d2lkdGg6OTYuMTglfS5hLWdyaWQtdmVydGljYWwtYWxpZ24uYS1yb3c+ZGl2LmEtc3BhbjEye3dpZHRoOjEwNC45MyV9LmEtZ3JpZC12ZXJ0aWNhbC1hbGlnbi5hLXJvdyBkaXYuYS1zcGFuMTJ7cGFkZGluZy1yaWdodDowfS5hLWdyaWQtdmVydGljYWwtYWxpZ24uYS1yb3cgZGl2LmEtd2lkdGgtbWljcm97d2lkdGg6MXB4fS5hLWdyaWQtdmVydGljYWwtYWxpZ24uYS1yb3cgZGl2LmEtd2lkdGgtbWluaXt3aWR0aDo0OXB4fS5hLWdyaWQtdmVydGljYWwtYWxpZ24uYS1yb3cgZGl2LmEtd2lkdGgtc21hbGx7d2lkdGg6OTFweH0uYS1ncmlkLXZlcnRpY2FsLWFsaWduLmEtcm93IGRpdi5hLXdpZHRoLWJhc2V7d2lkdGg6MTI3cHh9LmEtZ3JpZC12ZXJ0aWNhbC1hbGlnbi5hLXJvdyBkaXYuYS13aWR0aC1tZWRpdW17d2lkdGg6MTc1cHh9LmEtZ3JpZC12ZXJ0aWNhbC1hbGlnbi5hLXJvdyBkaXYuYS13aWR0aC1sYXJnZXt3aWR0aDoyNTBweH0uYS1ncmlkLXZlcnRpY2FsLWFsaWduLmEtcm93IGRpdi5hLXdpZHRoLWV4dHJhLWxhcmdle3dpZHRoOjQwMHB4fS5hLWdyaWQtYm90dG9tLmEtZml4ZWQtbGVmdC1ncmlkLWlubmVyPi5hLWZpeGVkLWxlZnQtZ3JpZC1jb2wsLmEtZ3JpZC1ib3R0b20uYS1maXhlZC1yaWdodC1ncmlkLWlubmVyPi5hLWZpeGVkLXJpZ2h0LWdyaWQtY29sLC5hLWdyaWQtYm90dG9tLmEtcm93PmRpdi5hLWNvbHVtbnt2ZXJ0aWNhbC1hbGlnbjpib3R0b219LmEtZ3JpZC10b3AuYS1maXhlZC1sZWZ0LWdyaWQtaW5uZXI+LmEtZml4ZWQtbGVmdC1ncmlkLWNvbCwuYS1ncmlkLXRvcC5hLWZpeGVkLXJpZ2h0LWdyaWQtaW5uZXI+LmEtZml4ZWQtcmlnaHQtZ3JpZC1jb2wsLmEtZ3JpZC10b3AuYS1yb3c+ZGl2LmEtY29sdW1ue3ZlcnRpY2FsLWFsaWduOnRvcH0uYS1ncmlkLWNlbnRlci5hLWZpeGVkLWxlZnQtZ3JpZC1pbm5lcj4uYS1maXhlZC1sZWZ0LWdyaWQtY29sLC5hLWdyaWQtY2VudGVyLmEtZml4ZWQtcmlnaHQtZ3JpZC1pbm5lcj4uYS1maXhlZC1yaWdodC1ncmlkLWNvbCwuYS1ncmlkLWNlbnRlci5hLXJvdz5kaXYuYS1jb2x1bW57dmVydGljYWwtYWxpZ246bWlkZGxlfS5hLXNwYW40IGRpdi5hLXNwYW4xLC5hLXdzIC5hLXNwYW40IC5hLXdzLXJvdyAuYS13cy1zcGFuMSwuYS13cyAuYS13cy1zcGFuNCAuYS13cy1yb3cgLmEtd3Mtc3BhbjEsLmEtd3MgLmEtd3Mtc3BhbjQgZGl2LmEtc3BhbjF7d2lkdGg6Mi41Mzc4NyV9LmEtc3BhbjUgZGl2LmEtc3BhbjEsLmEtd3MgLmEtc3BhbjUgLmEtd3Mtcm93IC5hLXdzLXNwYW4xLC5hLXdzIC5hLXdzLXNwYW41IC5hLXdzLXJvdyAuYS13cy1zcGFuMSwuYS13cyAuYS13cy1zcGFuNSBkaXYuYS1zcGFuMXt3aWR0aDozLjcyJX0uYS1zcGFuNiBkaXYuYS1zcGFuMSwuYS13cyAuYS1zcGFuNiAuYS13cy1yb3cgLmEtd3Mtc3BhbjEsLmEtd3MgLmEtd3Mtc3BhbjYgLmEtd3Mtcm93IC5hLXdzLXNwYW4xLC5hLXdzIC5hLXdzLXNwYW42IGRpdi5hLXNwYW4xe3dpZHRoOjQuNjI5MzMlfS5hLXNwYW43IGRpdi5hLXNwYW4xLC5hLXdzIC5hLXNwYW43IC5hLXdzLXJvdyAuYS13cy1zcGFuMSwuYS13cyAuYS13cy1zcGFuNyAuYS13cy1yb3cgLmEtd3Mtc3BhbjEsLmEtd3MgLmEtd3Mtc3BhbjcgZGl2LmEtc3BhbjF7d2lkdGg6NS4wODQlfS5hLXNwYW44IGRpdi5hLXNwYW4xLC5hLXdzIC5hLXNwYW44IC5hLXdzLXJvdyAuYS13cy1zcGFuMSwuYS13cyAuYS13cy1zcGFuOCAuYS13cy1yb3cgLmEtd3Mtc3BhbjEsLmEtd3MgLmEtd3Mtc3BhbjggZGl2LmEtc3BhbjF7d2lkdGg6NS41Mzg2NyV9LmEtc3BhbjkgZGl2LmEtc3BhbjEsLmEtd3MgLmEtc3BhbjkgLmEtd3Mtcm93IC5hLXdzLXNwYW4xLC5hLXdzIC5hLXdzLXNwYW45IC5hLXdzLXJvdyAuYS13cy1zcGFuMSwuYS13cyAuYS13cy1zcGFuOSBkaXYuYS1zcGFuMXt3aWR0aDo1LjgxMTQ3JX0uYS1zcGFuMTAgZGl2LmEtc3BhbjEsLmEtd3MgLmEtc3BhbjEwIC5hLXdzLXJvdyAuYS13cy1zcGFuMSwuYS13cyAuYS13cy1zcGFuMTAgLmEtd3Mtcm93IC5hLXdzLXNwYW4xLC5hLXdzIC5hLXdzLXNwYW4xMCBkaXYuYS1zcGFuMXt3aWR0aDo2LjA4NDI3JX0uYS1zcGFuNCBkaXYuYS1zcGFuMiwuYS13cyAuYS1zcGFuNCAuYS13cy1yb3cgLmEtd3Mtc3BhbjIsLmEtd3MgLmEtd3Mtc3BhbjQgLmEtd3Mtcm93IC5hLXdzLXNwYW4yLC5hLXdzIC5hLXdzLXNwYW40IGRpdi5hLXNwYW4ye3dpZHRoOjExLjM5NjIlfS5hLXNwYW41IGRpdi5hLXNwYW4yLC5hLXdzIC5hLXNwYW41IC5hLXdzLXJvdyAuYS13cy1zcGFuMiwuYS13cyAuYS13cy1zcGFuNSAuYS13cy1yb3cgLmEtd3Mtc3BhbjIsLmEtd3MgLmEtd3Mtc3BhbjUgZGl2LmEtc3BhbjJ7d2lkdGg6MTIuNDclfS5hLXNwYW42IGRpdi5hLXNwYW4yLC5hLXdzIC5hLXNwYW42IC5hLXdzLXJvdyAuYS13cy1zcGFuMiwuYS13cyAuYS13cy1zcGFuNiAuYS13cy1yb3cgLmEtd3Mtc3BhbjIsLmEtd3MgLmEtd3Mtc3BhbjYgZGl2LmEtc3BhbjJ7d2lkdGg6MTMuMjk2JX0uYS1zcGFuNyBkaXYuYS1zcGFuMiwuYS13cyAuYS1zcGFuNyAuYS13cy1yb3cgLmEtd3Mtc3BhbjIsLmEtd3MgLmEtd3Mtc3BhbjcgLmEtd3Mtcm93IC5hLXdzLXNwYW4yLC5hLXdzIC5hLXdzLXNwYW43IGRpdi5hLXNwYW4ye3dpZHRoOjEzLjcwOSV9LmEtc3BhbjggZGl2LmEtc3BhbjIsLmEtd3MgLmEtc3BhbjggLmEtd3Mtcm93IC5hLXdzLXNwYW4yLC5hLXdzIC5hLXdzLXNwYW44IC5hLXdzLXJvdyAuYS13cy1zcGFuMiwuYS13cyAuYS13cy1zcGFuOCBkaXYuYS1zcGFuMnt3aWR0aDoxNC4xMjIlfS5hLXNwYW45IGRpdi5hLXNwYW4yLC5hLXdzIC5hLXNwYW45IC5hLXdzLXJvdyAuYS13cy1zcGFuMiwuYS13cyAuYS13cy1zcGFuOSAuYS13cy1yb3cgLmEtd3Mtc3BhbjIsLmEtd3MgLmEtd3Mtc3BhbjkgZGl2LmEtc3BhbjJ7d2lkdGg6MTQuMzY5OCV9LmEtc3BhbjEwIGRpdi5hLXNwYW4yLC5hLXdzIC5hLXNwYW4xMCAuYS13cy1yb3cgLmEtd3Mtc3BhbjIsLmEtd3MgLmEtd3Mtc3BhbjEwIC5hLXdzLXJvdyAuYS13cy1zcGFuMiwuYS13cyAuYS13cy1zcGFuMTAgZGl2LmEtc3BhbjJ7d2lkdGg6MTQuNjE3NiV9LmEtc3BhbjQgZGl2LmEtc3BhbjMsLmEtd3MgLmEtc3BhbjQgLmEtd3Mtcm93IC5hLXdzLXNwYW4zLC5hLXdzIC5hLXdzLXNwYW40IC5hLXdzLXJvdyAuYS13cy1zcGFuMywuYS13cyAuYS13cy1zcGFuNCBkaXYuYS1zcGFuM3t3aWR0aDoyMC4yNTQ1MyV9LmEtc3BhbjUgZGl2LmEtc3BhbjMsLmEtd3MgLmEtc3BhbjUgLmEtd3Mtcm93IC5hLXdzLXNwYW4zLC5hLXdzIC5hLXdzLXNwYW41IC5hLXdzLXJvdyAuYS13cy1zcGFuMywuYS13cyAuYS13cy1zcGFuNSBkaXYuYS1zcGFuM3t3aWR0aDoyMS4yMiV9LmEtc3BhbjYgZGl2LmEtc3BhbjMsLmEtd3MgLmEtc3BhbjYgLmEtd3Mtcm93IC5hLXdzLXNwYW4zLC5hLXdzIC5hLXdzLXNwYW42IC5hLXdzLXJvdyAuYS13cy1zcGFuMywuYS13cyAuYS13cy1zcGFuNiBkaXYuYS1zcGFuM3t3aWR0aDoyMS45NjI2NyV9LmEtc3BhbjcgZGl2LmEtc3BhbjMsLmEtd3MgLmEtc3BhbjcgLmEtd3Mtcm93IC5hLXdzLXNwYW4zLC5hLXdzIC5hLXdzLXNwYW43IC5hLXdzLXJvdyAuYS13cy1zcGFuMywuYS13cyAuYS13cy1zcGFuNyBkaXYuYS1zcGFuM3t3aWR0aDoyMi4zMzQlfS5hLXNwYW44IGRpdi5hLXNwYW4zLC5hLXdzIC5hLXNwYW44IC5hLXdzLXJvdyAuYS13cy1zcGFuMywuYS13cyAuYS13cy1zcGFuOCAuYS13cy1yb3cgLmEtd3Mtc3BhbjMsLmEtd3MgLmEtd3Mtc3BhbjggZGl2LmEtc3BhbjN7d2lkdGg6MjIuNzA1MzMlfS5hLXNwYW45IGRpdi5hLXNwYW4zLC5hLXdzIC5hLXNwYW45IC5hLXdzLXJvdyAuYS13cy1zcGFuMywuYS13cyAuYS13cy1zcGFuOSAuYS13cy1yb3cgLmEtd3Mtc3BhbjMsLmEtd3MgLmEtd3Mtc3BhbjkgZGl2LmEtc3BhbjN7d2lkdGg6MjIuOTI4MTMlfS5hLXNwYW4xMCBkaXYuYS1zcGFuMywuYS13cyAuYS1zcGFuMTAgLmEtd3Mtcm93IC5hLXdzLXNwYW4zLC5hLXdzIC5hLXdzLXNwYW4xMCAuYS13cy1yb3cgLmEtd3Mtc3BhbjMsLmEtd3MgLmEtd3Mtc3BhbjEwIGRpdi5hLXNwYW4ze3dpZHRoOjIzLjE1MDkzJX0uYS1zcGFuNCBkaXYuYS1zcGFuNCwuYS13cyAuYS1zcGFuNCAuYS13cy1yb3cgLmEtd3Mtc3BhbjQsLmEtd3MgLmEtd3Mtc3BhbjQgLmEtd3Mtcm93IC5hLXdzLXNwYW40LC5hLXdzIC5hLXdzLXNwYW40IGRpdi5hLXNwYW40e3dpZHRoOjI5LjExMjg3JX0uYS1zcGFuNSBkaXYuYS1zcGFuNCwuYS13cyAuYS1zcGFuNSAuYS13cy1yb3cgLmEtd3Mtc3BhbjQsLmEtd3MgLmEtd3Mtc3BhbjUgLmEtd3Mtcm93IC5hLXdzLXNwYW40LC5hLXdzIC5hLXdzLXNwYW41IGRpdi5hLXNwYW40e3dpZHRoOjI5Ljk3JX0uYS1zcGFuNiBkaXYuYS1zcGFuNCwuYS13cyAuYS1zcGFuNiAuYS13cy1yb3cgLmEtd3Mtc3BhbjQsLmEtd3MgLmEtd3Mtc3BhbjYgLmEtd3Mtcm93IC5hLXdzLXNwYW40LC5hLXdzIC5hLXdzLXNwYW42IGRpdi5hLXNwYW40e3dpZHRoOjMwLjYyOTMzJX0uYS1zcGFuNyBkaXYuYS1zcGFuNCwuYS13cyAuYS1zcGFuNyAuYS13cy1yb3cgLmEtd3Mtc3BhbjQsLmEtd3MgLmEtd3Mtc3BhbjcgLmEtd3Mtcm93IC5hLXdzLXNwYW40LC5hLXdzIC5hLXdzLXNwYW43IGRpdi5hLXNwYW40e3dpZHRoOjMwLjk1OSV9LmEtc3BhbjggZGl2LmEtc3BhbjQsLmEtd3MgLmEtc3BhbjggLmEtd3Mtcm93IC5hLXdzLXNwYW40LC5hLXdzIC5hLXdzLXNwYW44IC5hLXdzLXJvdyAuYS13cy1zcGFuNCwuYS13cyAuYS13cy1zcGFuOCBkaXYuYS1zcGFuNHt3aWR0aDozMS4yODg2NyV9LmEtc3BhbjkgZGl2LmEtc3BhbjQsLmEtd3MgLmEtc3BhbjkgLmEtd3Mtcm93IC5hLXdzLXNwYW40LC5hLXdzIC5hLXdzLXNwYW45IC5hLXdzLXJvdyAuYS13cy1zcGFuNCwuYS13cyAuYS13cy1zcGFuOSBkaXYuYS1zcGFuNHt3aWR0aDozMS40ODY0NyV9LmEtc3BhbjEwIGRpdi5hLXNwYW40LC5hLXdzIC5hLXNwYW4xMCAuYS13cy1yb3cgLmEtd3Mtc3BhbjQsLmEtd3MgLmEtd3Mtc3BhbjEwIC5hLXdzLXJvdyAuYS13cy1zcGFuNCwuYS13cyAuYS13cy1zcGFuMTAgZGl2LmEtc3BhbjR7d2lkdGg6MzEuNjg0MjclfS5hLXNwYW40IGRpdi5hLXNwYW41LC5hLXdzIC5hLXNwYW40IC5hLXdzLXJvdyAuYS13cy1zcGFuNSwuYS13cyAuYS13cy1zcGFuNCAuYS13cy1yb3cgLmEtd3Mtc3BhbjUsLmEtd3MgLmEtd3Mtc3BhbjQgZGl2LmEtc3BhbjV7d2lkdGg6MzcuOTcxMiV9LmEtc3BhbjUgZGl2LmEtc3BhbjUsLmEtd3MgLmEtc3BhbjUgLmEtd3Mtcm93IC5hLXdzLXNwYW41LC5hLXdzIC5hLXdzLXNwYW41IC5hLXdzLXJvdyAuYS13cy1zcGFuNSwuYS13cyAuYS13cy1zcGFuNSBkaXYuYS1zcGFuNXt3aWR0aDozOC43MiV9LmEtc3BhbjYgZGl2LmEtc3BhbjUsLmEtd3MgLmEtc3BhbjYgLmEtd3Mtcm93IC5hLXdzLXNwYW41LC5hLXdzIC5hLXdzLXNwYW42IC5hLXdzLXJvdyAuYS13cy1zcGFuNSwuYS13cyAuYS13cy1zcGFuNiBkaXYuYS1zcGFuNXt3aWR0aDozOS4yOTYlfS5hLXNwYW43IGRpdi5hLXNwYW41LC5hLXdzIC5hLXNwYW43IC5hLXdzLXJvdyAuYS13cy1zcGFuNSwuYS13cyAuYS13cy1zcGFuNyAuYS13cy1yb3cgLmEtd3Mtc3BhbjUsLmEtd3MgLmEtd3Mtc3BhbjcgZGl2LmEtc3BhbjV7d2lkdGg6MzkuNTg0JX0uYS1zcGFuOCBkaXYuYS1zcGFuNSwuYS13cyAuYS1zcGFuOCAuYS13cy1yb3cgLmEtd3Mtc3BhbjUsLmEtd3MgLmEtd3Mtc3BhbjggLmEtd3Mtcm93IC5hLXdzLXNwYW41LC5hLXdzIC5hLXdzLXNwYW44IGRpdi5hLXNwYW41e3dpZHRoOjM5Ljg3MiV9LmEtc3BhbjkgZGl2LmEtc3BhbjUsLmEtd3MgLmEtc3BhbjkgLmEtd3Mtcm93IC5hLXdzLXNwYW41LC5hLXdzIC5hLXdzLXNwYW45IC5hLXdzLXJvdyAuYS13cy1zcGFuNSwuYS13cyAuYS13cy1zcGFuOSBkaXYuYS1zcGFuNXt3aWR0aDo0MC4wNDQ4JX0uYS1zcGFuMTAgZGl2LmEtc3BhbjUsLmEtd3MgLmEtc3BhbjEwIC5hLXdzLXJvdyAuYS13cy1zcGFuNSwuYS13cyAuYS13cy1zcGFuMTAgLmEtd3Mtcm93IC5hLXdzLXNwYW41LC5hLXdzIC5hLXdzLXNwYW4xMCBkaXYuYS1zcGFuNXt3aWR0aDo0MC4yMTc2JX0uYS1zcGFuNCBkaXYuYS1zcGFuNiwuYS13cyAuYS1zcGFuNCAuYS13cy1yb3cgLmEtd3Mtc3BhbjYsLmEtd3MgLmEtd3Mtc3BhbjQgLmEtd3Mtcm93IC5hLXdzLXNwYW42LC5hLXdzIC5hLXdzLXNwYW40IGRpdi5hLXNwYW42e3dpZHRoOjQ2LjgyOTUzJX0uYS1zcGFuNSBkaXYuYS1zcGFuNiwuYS13cyAuYS1zcGFuNSAuYS13cy1yb3cgLmEtd3Mtc3BhbjYsLmEtd3MgLmEtd3Mtc3BhbjUgLmEtd3Mtcm93IC5hLXdzLXNwYW42LC5hLXdzIC5hLXdzLXNwYW41IGRpdi5hLXNwYW42e3dpZHRoOjQ3LjQ3JX0uYS1zcGFuNiBkaXYuYS1zcGFuNiwuYS13cyAuYS1zcGFuNiAuYS13cy1yb3cgLmEtd3Mtc3BhbjYsLmEtd3MgLmEtd3Mtc3BhbjYgLmEtd3Mtcm93IC5hLXdzLXNwYW42LC5hLXdzIC5hLXdzLXNwYW42IGRpdi5hLXNwYW42e3dpZHRoOjQ3Ljk2MjY3JX0uYS1zcGFuNyBkaXYuYS1zcGFuNiwuYS13cyAuYS1zcGFuNyAuYS13cy1yb3cgLmEtd3Mtc3BhbjYsLmEtd3MgLmEtd3Mtc3BhbjcgLmEtd3Mtcm93IC5hLXdzLXNwYW42LC5hLXdzIC5hLXdzLXNwYW43IGRpdi5hLXNwYW42e3dpZHRoOjQ4LjIwOSV9LmEtc3BhbjggZGl2LmEtc3BhbjYsLmEtd3MgLmEtc3BhbjggLmEtd3Mtcm93IC5hLXdzLXNwYW42LC5hLXdzIC5hLXdzLXNwYW44IC5hLXdzLXJvdyAuYS13cy1zcGFuNiwuYS13cyAuYS13cy1zcGFuOCBkaXYuYS1zcGFuNnt3aWR0aDo0OC40NTUzMyV9LmEtc3BhbjkgZGl2LmEtc3BhbjYsLmEtd3MgLmEtc3BhbjkgLmEtd3Mtcm93IC5hLXdzLXNwYW42LC5hLXdzIC5hLXdzLXNwYW45IC5hLXdzLXJvdyAuYS13cy1zcGFuNiwuYS13cyAuYS13cy1zcGFuOSBkaXYuYS1zcGFuNnt3aWR0aDo0OC42MDMxMyV9LmEtc3BhbjEwIGRpdi5hLXNwYW42LC5hLXdzIC5hLXNwYW4xMCAuYS13cy1yb3cgLmEtd3Mtc3BhbjYsLmEtd3MgLmEtd3Mtc3BhbjEwIC5hLXdzLXJvdyAuYS13cy1zcGFuNiwuYS13cyAuYS13cy1zcGFuMTAgZGl2LmEtc3BhbjZ7d2lkdGg6NDguNzUwOTMlfS5hLXNwYW40IGRpdi5hLXNwYW43LC5hLXdzIC5hLXNwYW40IC5hLXdzLXJvdyAuYS13cy1zcGFuNywuYS13cyAuYS13cy1zcGFuNCAuYS13cy1yb3cgLmEtd3Mtc3BhbjcsLmEtd3MgLmEtd3Mtc3BhbjQgZGl2LmEtc3Bhbjd7d2lkdGg6NTUuNjg3ODclfS5hLXNwYW41IGRpdi5hLXNwYW43LC5hLXdzIC5hLXNwYW41IC5hLXdzLXJvdyAuYS13cy1zcGFuNywuYS13cyAuYS13cy1zcGFuNSAuYS13cy1yb3cgLmEtd3Mtc3BhbjcsLmEtd3MgLmEtd3Mtc3BhbjUgZGl2LmEtc3Bhbjd7d2lkdGg6NTYuMjIlfS5hLXNwYW42IGRpdi5hLXNwYW43LC5hLXdzIC5hLXNwYW42IC5hLXdzLXJvdyAuYS13cy1zcGFuNywuYS13cyAuYS13cy1zcGFuNiAuYS13cy1yb3cgLmEtd3Mtc3BhbjcsLmEtd3MgLmEtd3Mtc3BhbjYgZGl2LmEtc3Bhbjd7d2lkdGg6NTYuNjI5MzMlfS5hLXNwYW43IGRpdi5hLXNwYW43LC5hLXdzIC5hLXNwYW43IC5hLXdzLXJvdyAuYS13cy1zcGFuNywuYS13cyAuYS13cy1zcGFuNyAuYS13cy1yb3cgLmEtd3Mtc3BhbjcsLmEtd3MgLmEtd3Mtc3BhbjcgZGl2LmEtc3Bhbjd7d2lkdGg6NTYuODM0JX0uYS1zcGFuOCBkaXYuYS1zcGFuNywuYS13cyAuYS1zcGFuOCAuYS13cy1yb3cgLmEtd3Mtc3BhbjcsLmEtd3MgLmEtd3Mtc3BhbjggLmEtd3Mtcm93IC5hLXdzLXNwYW43LC5hLXdzIC5hLXdzLXNwYW44IGRpdi5hLXNwYW43e3dpZHRoOjU3LjAzODY3JX0uYS1zcGFuOSBkaXYuYS1zcGFuNywuYS13cyAuYS1zcGFuOSAuYS13cy1yb3cgLmEtd3Mtc3BhbjcsLmEtd3MgLmEtd3Mtc3BhbjkgLmEtd3Mtcm93IC5hLXdzLXNwYW43LC5hLXdzIC5hLXdzLXNwYW45IGRpdi5hLXNwYW43e3dpZHRoOjU3LjE2MTQ3JX0uYS1zcGFuMTAgZGl2LmEtc3BhbjcsLmEtd3MgLmEtc3BhbjEwIC5hLXdzLXJvdyAuYS13cy1zcGFuNywuYS13cyAuYS13cy1zcGFuMTAgLmEtd3Mtcm93IC5hLXdzLXNwYW43LC5hLXdzIC5hLXdzLXNwYW4xMCBkaXYuYS1zcGFuN3t3aWR0aDo1Ny4yODQyNyV9LmEtc3BhbjQgZGl2LmEtc3BhbjgsLmEtd3MgLmEtc3BhbjQgLmEtd3Mtcm93IC5hLXdzLXNwYW44LC5hLXdzIC5hLXdzLXNwYW40IC5hLXdzLXJvdyAuYS13cy1zcGFuOCwuYS13cyAuYS13cy1zcGFuNCBkaXYuYS1zcGFuOHt3aWR0aDo2NC41NDYyJX0uYS1zcGFuNSBkaXYuYS1zcGFuOCwuYS13cyAuYS1zcGFuNSAuYS13cy1yb3cgLmEtd3Mtc3BhbjgsLmEtd3MgLmEtd3Mtc3BhbjUgLmEtd3Mtcm93IC5hLXdzLXNwYW44LC5hLXdzIC5hLXdzLXNwYW41IGRpdi5hLXNwYW44e3dpZHRoOjY0Ljk3JX0uYS1zcGFuNiBkaXYuYS1zcGFuOCwuYS13cyAuYS1zcGFuNiAuYS13cy1yb3cgLmEtd3Mtc3BhbjgsLmEtd3MgLmEtd3Mtc3BhbjYgLmEtd3Mtcm93IC5hLXdzLXNwYW44LC5hLXdzIC5hLXdzLXNwYW42IGRpdi5hLXNwYW44e3dpZHRoOjY1LjI5NiV9LmEtc3BhbjcgZGl2LmEtc3BhbjgsLmEtd3MgLmEtc3BhbjcgLmEtd3Mtcm93IC5hLXdzLXNwYW44LC5hLXdzIC5hLXdzLXNwYW43IC5hLXdzLXJvdyAuYS13cy1zcGFuOCwuYS13cyAuYS13cy1zcGFuNyBkaXYuYS1zcGFuOHt3aWR0aDo2NS40NTklfS5hLXNwYW44IGRpdi5hLXNwYW44LC5hLXdzIC5hLXNwYW44IC5hLXdzLXJvdyAuYS13cy1zcGFuOCwuYS13cyAuYS13cy1zcGFuOCAuYS13cy1yb3cgLmEtd3Mtc3BhbjgsLmEtd3MgLmEtd3Mtc3BhbjggZGl2LmEtc3Bhbjh7d2lkdGg6NjUuNjIyJX0uYS1zcGFuOSBkaXYuYS1zcGFuOCwuYS13cyAuYS1zcGFuOSAuYS13cy1yb3cgLmEtd3Mtc3BhbjgsLmEtd3MgLmEtd3Mtc3BhbjkgLmEtd3Mtcm93IC5hLXdzLXNwYW44LC5hLXdzIC5hLXdzLXNwYW45IGRpdi5hLXNwYW44e3dpZHRoOjY1LjcxOTglfS5hLXNwYW4xMCBkaXYuYS1zcGFuOCwuYS13cyAuYS1zcGFuMTAgLmEtd3Mtcm93IC5hLXdzLXNwYW44LC5hLXdzIC5hLXdzLXNwYW4xMCAuYS13cy1yb3cgLmEtd3Mtc3BhbjgsLmEtd3MgLmEtd3Mtc3BhbjEwIGRpdi5hLXNwYW44e3dpZHRoOjY1LjgxNzYlfS5hLXNwYW40IGRpdi5hLXNwYW45LC5hLXdzIC5hLXNwYW40IC5hLXdzLXJvdyAuYS13cy1zcGFuOSwuYS13cyAuYS13cy1zcGFuNCAuYS13cy1yb3cgLmEtd3Mtc3BhbjksLmEtd3MgLmEtd3Mtc3BhbjQgZGl2LmEtc3Bhbjl7d2lkdGg6NzMuNDA0NTMlfS5hLXNwYW41IGRpdi5hLXNwYW45LC5hLXdzIC5hLXNwYW41IC5hLXdzLXJvdyAuYS13cy1zcGFuOSwuYS13cyAuYS13cy1zcGFuNSAuYS13cy1yb3cgLmEtd3Mtc3BhbjksLmEtd3MgLmEtd3Mtc3BhbjUgZGl2LmEtc3Bhbjl7d2lkdGg6NzMuNzIlfS5hLXNwYW42IGRpdi5hLXNwYW45LC5hLXdzIC5hLXNwYW42IC5hLXdzLXJvdyAuYS13cy1zcGFuOSwuYS13cyAuYS13cy1zcGFuNiAuYS13cy1yb3cgLmEtd3Mtc3BhbjksLmEtd3MgLmEtd3Mtc3BhbjYgZGl2LmEtc3Bhbjl7d2lkdGg6NzMuOTYyNjclfS5hLXNwYW43IGRpdi5hLXNwYW45LC5hLXdzIC5hLXNwYW43IC5hLXdzLXJvdyAuYS13cy1zcGFuOSwuYS13cyAuYS13cy1zcGFuNyAuYS13cy1yb3cgLmEtd3Mtc3BhbjksLmEtd3MgLmEtd3Mtc3BhbjcgZGl2LmEtc3Bhbjl7d2lkdGg6NzQuMDg0JX0uYS1zcGFuOCBkaXYuYS1zcGFuOSwuYS13cyAuYS1zcGFuOCAuYS13cy1yb3cgLmEtd3Mtc3BhbjksLmEtd3MgLmEtd3Mtc3BhbjggLmEtd3Mtcm93IC5hLXdzLXNwYW45LC5hLXdzIC5hLXdzLXNwYW44IGRpdi5hLXNwYW45e3dpZHRoOjc0LjIwNTMzJX0uYS1zcGFuOSBkaXYuYS1zcGFuOSwuYS13cyAuYS1zcGFuOSAuYS13cy1yb3cgLmEtd3Mtc3BhbjksLmEtd3MgLmEtd3Mtc3BhbjkgLmEtd3Mtcm93IC5hLXdzLXNwYW45LC5hLXdzIC5hLXdzLXNwYW45IGRpdi5hLXNwYW45e3dpZHRoOjc0LjI3ODEzJX0uYS1zcGFuMTAgZGl2LmEtc3BhbjksLmEtd3MgLmEtc3BhbjEwIC5hLXdzLXJvdyAuYS13cy1zcGFuOSwuYS13cyAuYS13cy1zcGFuMTAgLmEtd3Mtcm93IC5hLXdzLXNwYW45LC5hLXdzIC5hLXdzLXNwYW4xMCBkaXYuYS1zcGFuOXt3aWR0aDo3NC4zNTA5MyV9LmEtc3BhbjQgZGl2LmEtc3BhbjEwLC5hLXdzIC5hLXNwYW40IC5hLXdzLXJvdyAuYS13cy1zcGFuMTAsLmEtd3MgLmEtd3Mtc3BhbjQgLmEtd3Mtcm93IC5hLXdzLXNwYW4xMCwuYS13cyAuYS13cy1zcGFuNCBkaXYuYS1zcGFuMTB7d2lkdGg6ODIuMjYyODclfS5hLXNwYW41IGRpdi5hLXNwYW4xMCwuYS13cyAuYS1zcGFuNSAuYS13cy1yb3cgLmEtd3Mtc3BhbjEwLC5hLXdzIC5hLXdzLXNwYW41IC5hLXdzLXJvdyAuYS13cy1zcGFuMTAsLmEtd3MgLmEtd3Mtc3BhbjUgZGl2LmEtc3BhbjEwe3dpZHRoOjgyLjQ3JX0uYS1zcGFuNiBkaXYuYS1zcGFuMTAsLmEtd3MgLmEtc3BhbjYgLmEtd3Mtcm93IC5hLXdzLXNwYW4xMCwuYS13cyAuYS13cy1zcGFuNiAuYS13cy1yb3cgLmEtd3Mtc3BhbjEwLC5hLXdzIC5hLXdzLXNwYW42IGRpdi5hLXNwYW4xMHt3aWR0aDo4Mi42MjkzMyV9LmEtc3BhbjcgZGl2LmEtc3BhbjEwLC5hLXdzIC5hLXNwYW43IC5hLXdzLXJvdyAuYS13cy1zcGFuMTAsLmEtd3MgLmEtd3Mtc3BhbjcgLmEtd3Mtcm93IC5hLXdzLXNwYW4xMCwuYS13cyAuYS13cy1zcGFuNyBkaXYuYS1zcGFuMTB7d2lkdGg6ODIuNzA5JX0uYS1zcGFuOCBkaXYuYS1zcGFuMTAsLmEtd3MgLmEtc3BhbjggLmEtd3Mtcm93IC5hLXdzLXNwYW4xMCwuYS13cyAuYS13cy1zcGFuOCAuYS13cy1yb3cgLmEtd3Mtc3BhbjEwLC5hLXdzIC5hLXdzLXNwYW44IGRpdi5hLXNwYW4xMHt3aWR0aDo4Mi43ODg2NyV9LmEtc3BhbjkgZGl2LmEtc3BhbjEwLC5hLXdzIC5hLXNwYW45IC5hLXdzLXJvdyAuYS13cy1zcGFuMTAsLmEtd3MgLmEtd3Mtc3BhbjkgLmEtd3Mtcm93IC5hLXdzLXNwYW4xMCwuYS13cyAuYS13cy1zcGFuOSBkaXYuYS1zcGFuMTB7d2lkdGg6ODIuODM2NDclfS5hLXNwYW4xMCBkaXYuYS1zcGFuMTAsLmEtd3MgLmEtc3BhbjEwIC5hLXdzLXJvdyAuYS13cy1zcGFuMTAsLmEtd3MgLmEtd3Mtc3BhbjEwIC5hLXdzLXJvdyAuYS13cy1zcGFuMTAsLmEtd3MgLmEtd3Mtc3BhbjEwIGRpdi5hLXNwYW4xMHt3aWR0aDo4Mi44ODQyNyV9LmEtc3BhbjQgZGl2LmEtc3BhbjExLC5hLXdzIC5hLXNwYW40IC5hLXdzLXJvdyAuYS13cy1zcGFuMTEsLmEtd3MgLmEtd3Mtc3BhbjQgLmEtd3Mtcm93IC5hLXdzLXNwYW4xMSwuYS13cyAuYS13cy1zcGFuNCBkaXYuYS1zcGFuMTF7d2lkdGg6OTEuMTIxMiV9LmEtc3BhbjUgZGl2LmEtc3BhbjExLC5hLXdzIC5hLXNwYW41IC5hLXdzLXJvdyAuYS13cy1zcGFuMTEsLmEtd3MgLmEtd3Mtc3BhbjUgLmEtd3Mtcm93IC5hLXdzLXNwYW4xMSwuYS13cyAuYS13cy1zcGFuNSBkaXYuYS1zcGFuMTF7d2lkdGg6OTEuMjIlfS5hLXNwYW42IGRpdi5hLXNwYW4xMSwuYS13cyAuYS1zcGFuNiAuYS13cy1yb3cgLmEtd3Mtc3BhbjExLC5hLXdzIC5hLXdzLXNwYW42IC5hLXdzLXJvdyAuYS13cy1zcGFuMTEsLmEtd3MgLmEtd3Mtc3BhbjYgZGl2LmEtc3BhbjExe3dpZHRoOjkxLjI5NiV9LmEtc3BhbjcgZGl2LmEtc3BhbjExLC5hLXdzIC5hLXNwYW43IC5hLXdzLXJvdyAuYS13cy1zcGFuMTEsLmEtd3MgLmEtd3Mtc3BhbjcgLmEtd3Mtcm93IC5hLXdzLXNwYW4xMSwuYS13cyAuYS13cy1zcGFuNyBkaXYuYS1zcGFuMTF7d2lkdGg6OTEuMzM0JX0uYS1zcGFuOCBkaXYuYS1zcGFuMTEsLmEtd3MgLmEtc3BhbjggLmEtd3Mtcm93IC5hLXdzLXNwYW4xMSwuYS13cyAuYS13cy1zcGFuOCAuYS13cy1yb3cgLmEtd3Mtc3BhbjExLC5hLXdzIC5hLXdzLXNwYW44IGRpdi5hLXNwYW4xMXt3aWR0aDo5MS4zNzIlfS5hLXNwYW45IGRpdi5hLXNwYW4xMSwuYS13cyAuYS1zcGFuOSAuYS13cy1yb3cgLmEtd3Mtc3BhbjExLC5hLXdzIC5hLXdzLXNwYW45IC5hLXdzLXJvdyAuYS13cy1zcGFuMTEsLmEtd3MgLmEtd3Mtc3BhbjkgZGl2LmEtc3BhbjExe3dpZHRoOjkxLjM5NDglfS5hLXNwYW4xMCBkaXYuYS1zcGFuMTEsLmEtd3MgLmEtc3BhbjEwIC5hLXdzLXJvdyAuYS13cy1zcGFuMTEsLmEtd3MgLmEtd3Mtc3BhbjEwIC5hLXdzLXJvdyAuYS13cy1zcGFuMTEsLmEtd3MgLmEtd3Mtc3BhbjEwIGRpdi5hLXNwYW4xMXt3aWR0aDo5MS40MTc2JX0uYS1zcGFuNCBkaXYuYS1zcGFuMTIsLmEtd3MgLmEtc3BhbjQgLmEtd3Mtcm93IC5hLXdzLXNwYW4xMiwuYS13cyAuYS13cy1zcGFuNCAuYS13cy1yb3cgLmEtd3Mtc3BhbjEyLC5hLXdzIC5hLXdzLXNwYW40IGRpdi5hLXNwYW4xMnt3aWR0aDo5OS45Nzk1MyV9LmEtc3BhbjUgZGl2LmEtc3BhbjEyLC5hLXdzIC5hLXNwYW41IC5hLXdzLXJvdyAuYS13cy1zcGFuMTIsLmEtd3MgLmEtd3Mtc3BhbjUgLmEtd3Mtcm93IC5hLXdzLXNwYW4xMiwuYS13cyAuYS13cy1zcGFuNSBkaXYuYS1zcGFuMTJ7d2lkdGg6OTkuOTclfS5hLXNwYW42IGRpdi5hLXNwYW4xMiwuYS13cyAuYS1zcGFuNiAuYS13cy1yb3cgLmEtd3Mtc3BhbjEyLC5hLXdzIC5hLXdzLXNwYW42IC5hLXdzLXJvdyAuYS13cy1zcGFuMTIsLmEtd3MgLmEtd3Mtc3BhbjYgZGl2LmEtc3BhbjEye3dpZHRoOjk5Ljk2MjY3JX0uYS1zcGFuNyBkaXYuYS1zcGFuMTIsLmEtd3MgLmEtc3BhbjcgLmEtd3Mtcm93IC5hLXdzLXNwYW4xMiwuYS13cyAuYS13cy1zcGFuNyAuYS13cy1yb3cgLmEtd3Mtc3BhbjEyLC5hLXdzIC5hLXdzLXNwYW43IGRpdi5hLXNwYW4xMnt3aWR0aDo5OS45NTklfS5hLXNwYW44IGRpdi5hLXNwYW4xMiwuYS13cyAuYS1zcGFuOCAuYS13cy1yb3cgLmEtd3Mtc3BhbjEyLC5hLXdzIC5hLXdzLXNwYW44IC5hLXdzLXJvdyAuYS13cy1zcGFuMTIsLmEtd3MgLmEtd3Mtc3BhbjggZGl2LmEtc3BhbjEye3dpZHRoOjk5Ljk1NTMzJX0uYS1zcGFuOSBkaXYuYS1zcGFuMTIsLmEtd3MgLmEtc3BhbjkgLmEtd3Mtcm93IC5hLXdzLXNwYW4xMiwuYS13cyAuYS13cy1zcGFuOSAuYS13cy1yb3cgLmEtd3Mtc3BhbjEyLC5hLXdzIC5hLXdzLXNwYW45IGRpdi5hLXNwYW4xMnt3aWR0aDo5OS45NTMxMyV9LmEtc3BhbjEwIGRpdi5hLXNwYW4xMiwuYS13cyAuYS1zcGFuMTAgLmEtd3Mtcm93IC5hLXdzLXNwYW4xMiwuYS13cyAuYS13cy1zcGFuMTAgLmEtd3Mtcm93IC5hLXdzLXNwYW4xMiwuYS13cyAuYS13cy1zcGFuMTAgZGl2LmEtc3BhbjEye3dpZHRoOjk5Ljk1MDkzJX0uYS1zcGFuNCAuYS1jb2x1bW4sLmEtd3MgLmEtc3BhbjQgLmEtY29sdW1uLC5hLXdzIC5hLXdzLXNwYW40IC5hLWNvbHVtbnttYXJnaW4tcmlnaHQ6Ni4zJTtmbG9hdDpsZWZ0O21pbi1oZWlnaHQ6MXB4fS5hLXNwYW40IGRpdi5hLXNwYW4xMiwuYS13cyAuYS1zcGFuNCBkaXYuYS1zcGFuMTIsLmEtd3MgLmEtd3Mtc3BhbjQgZGl2LmEtc3BhbjEye21hcmdpbi1yaWdodDowfS5hLXNwYW40IGRpdi5hLXNwYW4tbGFzdCwuYS13cyAuYS1zcGFuNCBkaXYuYS1zcGFuLWxhc3QsLmEtd3MgLmEtd3Mtc3BhbjQgZGl2LmEtc3Bhbi1sYXN0e21hcmdpbi1yaWdodDowO2Zsb2F0OnJpZ2h0fS5hLXNwYW41IC5hLWNvbHVtbiwuYS13cyAuYS1zcGFuNSAuYS1jb2x1bW4sLmEtd3MgLmEtd3Mtc3BhbjUgLmEtY29sdW1ue21hcmdpbi1yaWdodDo1JTtmbG9hdDpsZWZ0O21pbi1oZWlnaHQ6MXB4fS5hLXNwYW41IGRpdi5hLXNwYW4xMiwuYS13cyAuYS1zcGFuNSBkaXYuYS1zcGFuMTIsLmEtd3MgLmEtd3Mtc3BhbjUgZGl2LmEtc3BhbjEye21hcmdpbi1yaWdodDowfS5hLXNwYW41IGRpdi5hLXNwYW4tbGFzdCwuYS13cyAuYS1zcGFuNSBkaXYuYS1zcGFuLWxhc3QsLmEtd3MgLmEtd3Mtc3BhbjUgZGl2LmEtc3Bhbi1sYXN0e21hcmdpbi1yaWdodDowO2Zsb2F0OnJpZ2h0fS5hLXNwYW42IC5hLWNvbHVtbiwuYS13cyAuYS1zcGFuNiAuYS1jb2x1bW4sLmEtd3MgLmEtd3Mtc3BhbjYgLmEtY29sdW1ue21hcmdpbi1yaWdodDo0JTtmbG9hdDpsZWZ0O21pbi1oZWlnaHQ6MXB4fS5hLXNwYW42IGRpdi5hLXNwYW4xMiwuYS13cyAuYS1zcGFuNiBkaXYuYS1zcGFuMTIsLmEtd3MgLmEtd3Mtc3BhbjYgZGl2LmEtc3BhbjEye21hcmdpbi1yaWdodDowfS5hLXNwYW42IGRpdi5hLXNwYW4tbGFzdCwuYS13cyAuYS1zcGFuNiBkaXYuYS1zcGFuLWxhc3QsLmEtd3MgLmEtd3Mtc3BhbjYgZGl2LmEtc3Bhbi1sYXN0e21hcmdpbi1yaWdodDowO2Zsb2F0OnJpZ2h0fS5hLXNwYW43IC5hLWNvbHVtbiwuYS13cyAuYS1zcGFuNyAuYS1jb2x1bW4sLmEtd3MgLmEtd3Mtc3BhbjcgLmEtY29sdW1ue21hcmdpbi1yaWdodDozLjUlO2Zsb2F0OmxlZnQ7bWluLWhlaWdodDoxcHh9LmEtc3BhbjcgZGl2LmEtc3BhbjEyLC5hLXdzIC5hLXNwYW43IGRpdi5hLXNwYW4xMiwuYS13cyAuYS13cy1zcGFuNyBkaXYuYS1zcGFuMTJ7bWFyZ2luLXJpZ2h0OjB9LmEtc3BhbjcgZGl2LmEtc3Bhbi1sYXN0LC5hLXdzIC5hLXNwYW43IGRpdi5hLXNwYW4tbGFzdCwuYS13cyAuYS13cy1zcGFuNyBkaXYuYS1zcGFuLWxhc3R7bWFyZ2luLXJpZ2h0OjA7ZmxvYXQ6cmlnaHR9LmEtc3BhbjggLmEtY29sdW1uLC5hLXdzIC5hLXNwYW44IC5hLWNvbHVtbiwuYS13cyAuYS13cy1zcGFuOCAuYS1jb2x1bW57bWFyZ2luLXJpZ2h0OjMlO2Zsb2F0OmxlZnQ7bWluLWhlaWdodDoxcHh9LmEtc3BhbjggZGl2LmEtc3BhbjEyLC5hLXdzIC5hLXNwYW44IGRpdi5hLXNwYW4xMiwuYS13cyAuYS13cy1zcGFuOCBkaXYuYS1zcGFuMTJ7bWFyZ2luLXJpZ2h0OjB9LmEtc3BhbjggZGl2LmEtc3Bhbi1sYXN0LC5hLXdzIC5hLXNwYW44IGRpdi5hLXNwYW4tbGFzdCwuYS13cyAuYS13cy1zcGFuOCBkaXYuYS1zcGFuLWxhc3R7bWFyZ2luLXJpZ2h0OjA7ZmxvYXQ6cmlnaHR9LmEtc3BhbjkgLmEtY29sdW1uLC5hLXdzIC5hLXNwYW45IC5hLWNvbHVtbiwuYS13cyAuYS13cy1zcGFuOSAuYS1jb2x1bW57bWFyZ2luLXJpZ2h0OjIuNyU7ZmxvYXQ6bGVmdDttaW4taGVpZ2h0OjFweH0uYS1zcGFuOSBkaXYuYS1zcGFuMTIsLmEtd3MgLmEtc3BhbjkgZGl2LmEtc3BhbjEyLC5hLXdzIC5hLXdzLXNwYW45IGRpdi5hLXNwYW4xMnttYXJnaW4tcmlnaHQ6MH0uYS1zcGFuOSBkaXYuYS1zcGFuLWxhc3QsLmEtd3MgLmEtc3BhbjkgZGl2LmEtc3Bhbi1sYXN0LC5hLXdzIC5hLXdzLXNwYW45IGRpdi5hLXNwYW4tbGFzdHttYXJnaW4tcmlnaHQ6MDtmbG9hdDpyaWdodH0uYS1zcGFuMTAgLmEtY29sdW1uLC5hLXdzIC5hLXNwYW4xMCAuYS1jb2x1bW4sLmEtd3MgLmEtd3Mtc3BhbjEwIC5hLWNvbHVtbnttYXJnaW4tcmlnaHQ6Mi40JTtmbG9hdDpsZWZ0O21pbi1oZWlnaHQ6MXB4fS5hLXNwYW4xMCBkaXYuYS1zcGFuMTIsLmEtd3MgLmEtc3BhbjEwIGRpdi5hLXNwYW4xMiwuYS13cyAuYS13cy1zcGFuMTAgZGl2LmEtc3BhbjEye21hcmdpbi1yaWdodDowfS5hLXNwYW4xMCBkaXYuYS1zcGFuLWxhc3QsLmEtd3MgLmEtc3BhbjEwIGRpdi5hLXNwYW4tbGFzdCwuYS13cyAuYS13cy1zcGFuMTAgZGl2LmEtc3Bhbi1sYXN0e21hcmdpbi1yaWdodDowO2Zsb2F0OnJpZ2h0fS5hLXdzIC5hLWNvbHVtbiAuYS13cy1yb3c+LmEtc3Bhbi1sYXN0e2Zsb2F0OmxlZnR9LmEtd3MgLmEtc3BhbjQgLmEtd3Mtcm93Pi5hLXNwYW4tbGFzdCwuYS13cyAuYS13cy1zcGFuNCAuYS13cy1yb3c+LmEtc3Bhbi1sYXN0e21hcmdpbi1yaWdodDo2LjMlfS5hLXdzIC5hLXNwYW41IC5hLXdzLXJvdz4uYS1zcGFuLWxhc3QsLmEtd3MgLmEtd3Mtc3BhbjUgLmEtd3Mtcm93Pi5hLXNwYW4tbGFzdHttYXJnaW4tcmlnaHQ6NSV9LmEtd3MgLmEtc3BhbjYgLmEtd3Mtcm93Pi5hLXNwYW4tbGFzdCwuYS13cyAuYS13cy1zcGFuNiAuYS13cy1yb3c+LmEtc3Bhbi1sYXN0e21hcmdpbi1yaWdodDo0JX0uYS13cyAuYS1zcGFuNyAuYS13cy1yb3c+LmEtc3Bhbi1sYXN0LC5hLXdzIC5hLXdzLXNwYW43IC5hLXdzLXJvdz4uYS1zcGFuLWxhc3R7bWFyZ2luLXJpZ2h0OjMuNSV9LmEtd3MgLmEtc3BhbjggLmEtd3Mtcm93Pi5hLXNwYW4tbGFzdCwuYS13cyAuYS13cy1zcGFuOCAuYS13cy1yb3c+LmEtc3Bhbi1sYXN0e21hcmdpbi1yaWdodDozJX0uYS13cyAuYS1zcGFuOSAuYS13cy1yb3c+LmEtc3Bhbi1sYXN0LC5hLXdzIC5hLXdzLXNwYW45IC5hLXdzLXJvdz4uYS1zcGFuLWxhc3R7bWFyZ2luLXJpZ2h0OjIuNyV9LmEtd3MgLmEtc3BhbjEwIC5hLXdzLXJvdz4uYS1zcGFuLWxhc3QsLmEtd3MgLmEtd3Mtc3BhbjEwIC5hLXdzLXJvdz4uYS1zcGFuLWxhc3R7bWFyZ2luLXJpZ2h0OjIuNCV9LmEtbGFzdHttYXJnaW4tYm90dG9tOjAhaW1wb3J0YW50fS5hLXNwYWNpbmctbm9uZSwuYS13cyAuYS13cy1zcGFjaW5nLW5vbmV7bWFyZ2luLWJvdHRvbTowIWltcG9ydGFudH0uYS1zcGFjaW5nLW1pY3JvLC5hLXdzIC5hLXdzLXNwYWNpbmctbWljcm97bWFyZ2luLWJvdHRvbTo0cHghaW1wb3J0YW50fS5hLXNwYWNpbmctdG9wLW1pY3Jve21hcmdpbi10b3A6NHB4IWltcG9ydGFudH0uYS1zcGFjaW5nLXRvcC1taWNyby5hLWJ1dHRvbi1zdGFjaywuYS1zcGFjaW5nLXRvcC1taWNyby5hLXNlY3Rpb257cGFkZGluZy10b3A6NHB4O21hcmdpbi10b3A6MCFpbXBvcnRhbnR9LmEtc3BhY2luZy1taW5pLC5hLXdzIC5hLXdzLXNwYWNpbmctbWluaXttYXJnaW4tYm90dG9tOjZweCFpbXBvcnRhbnR9LmEtc3BhY2luZy10b3AtbWluaXttYXJnaW4tdG9wOjZweCFpbXBvcnRhbnR9LmEtc3BhY2luZy10b3AtbWluaS5hLWJ1dHRvbi1zdGFjaywuYS1zcGFjaW5nLXRvcC1taW5pLmEtc2VjdGlvbntwYWRkaW5nLXRvcDo2cHg7bWFyZ2luLXRvcDowIWltcG9ydGFudH0uYS1zcGFjaW5nLXNtYWxsLC5hLXdzIC5hLXdzLXNwYWNpbmctc21hbGx7bWFyZ2luLWJvdHRvbToxMHB4IWltcG9ydGFudH0uYS1zcGFjaW5nLXRvcC1zbWFsbHttYXJnaW4tdG9wOjEwcHghaW1wb3J0YW50fS5hLXNwYWNpbmctYmFzZSwuYS13cyAuYS13cy1zcGFjaW5nLWJhc2V7bWFyZ2luLWJvdHRvbToxNHB4IWltcG9ydGFudH0uYS1zcGFjaW5nLXRvcC1iYXNle21hcmdpbi10b3A6MTRweCFpbXBvcnRhbnR9LmEtc3BhY2luZy1tZWRpdW0sLmEtd3MgLmEtd3Mtc3BhY2luZy1tZWRpdW17bWFyZ2luLWJvdHRvbToxOHB4IWltcG9ydGFudH0uYS1zcGFjaW5nLXRvcC1tZWRpdW17bWFyZ2luLXRvcDoxOHB4IWltcG9ydGFudH0uYS1zcGFjaW5nLWxhcmdlLC5hLXdzIC5hLXdzLXNwYWNpbmctbGFyZ2V7bWFyZ2luLWJvdHRvbToyMnB4IWltcG9ydGFudH0uYS1zcGFjaW5nLXRvcC1sYXJnZXttYXJnaW4tdG9wOjIycHghaW1wb3J0YW50fS5hLXNwYWNpbmctZXh0cmEtbGFyZ2UsLmEtd3MgLmEtd3Mtc3BhY2luZy1leHRyYS1sYXJnZXttYXJnaW4tYm90dG9tOjI2cHghaW1wb3J0YW50fS5hLXNwYWNpbmctdG9wLWV4dHJhLWxhcmdle21hcmdpbi10b3A6MjZweCFpbXBvcnRhbnR9LmEtc3BhY2luZy1kb3VibGUtbGFyZ2UsLmEtd3MgLmEtd3Mtc3BhY2luZy1kb3VibGUtbGFyZ2V7bWFyZ2luLWJvdHRvbTo0NHB4IWltcG9ydGFudH0uYS1zcGFjaW5nLXRvcC1kb3VibGUtbGFyZ2V7bWFyZ2luLXRvcDo0NHB4IWltcG9ydGFudH0uYS1zcGFjaW5nLWJsb2NrLXRvcHttYXJnaW4tdG9wOjRweH0uYS1zcGFjaW5nLWJsb2Nre21hcmdpbjo0cHggMH0uYS1zcGFjaW5nLXRpZ2h0e2xpbmUtaGVpZ2h0OjB9LmEtcGFkZGluZy1ub25le3BhZGRpbmc6MCFpbXBvcnRhbnR9LmEtcGFkZGluZy1taW5pe3BhZGRpbmc6NHB4IDZweCFpbXBvcnRhbnR9LmEtcGFkZGluZy1zbWFsbHtwYWRkaW5nOjZweCAxMHB4IWltcG9ydGFudH0uYS1wYWRkaW5nLWJhc2V7cGFkZGluZzoxMHB4IDE0cHghaW1wb3J0YW50fS5hLXBhZGRpbmctbWVkaXVte3BhZGRpbmc6MTRweCAxOHB4IWltcG9ydGFudH0uYS1wYWRkaW5nLWxhcmdle3BhZGRpbmc6MThweCAyMnB4IWltcG9ydGFudH0uYS1wYWRkaW5nLWRvdWJsZS1sYXJnZXtwYWRkaW5nOjQ0cHghaW1wb3J0YW50fS5hLXRleHQtbGVmdHt0ZXh0LWFsaWduOmxlZnQhaW1wb3J0YW50fS5hLXRleHQtY2VudGVye3RleHQtYWxpZ246Y2VudGVyIWltcG9ydGFudH0uYS10ZXh0LXJpZ2h0e3RleHQtYWxpZ246cmlnaHQhaW1wb3J0YW50fS5hLXdpZHRoLW1pY3Jve3dpZHRoOjFweCFpbXBvcnRhbnR9LmEtd2lkdGgtbWluaXt3aWR0aDozNXB4fS5hLXdpZHRoLXNtYWxse3dpZHRoOjc3cHh9LmEtd2lkdGgtYmFzZXt3aWR0aDoxMTNweH0uYS13aWR0aC1tZWRpdW17d2lkdGg6MTc1cHghaW1wb3J0YW50fS5hLXdpZHRoLWxhcmdle3dpZHRoOjI1MHB4IWltcG9ydGFudH0uYS13aWR0aC1leHRyYS1sYXJnZXt3aWR0aDo0MDBweCFpbXBvcnRhbnR9LmEtd2lkdGgtbGltaXRlZHttYXgtd2lkdGg6MTAwJX0uYS1zcGFuLWZsZXh7d2lkdGg6YXV0byFpbXBvcnRhbnR9LmEtc3Bhbi1zbWFsbHt3aWR0aDozMHB4IWltcG9ydGFudH0uYS1zcGFuLWJhc2V7d2lkdGg6NTZweCFpbXBvcnRhbnR9LmEtc3Bhbi1tZWRpdW17d2lkdGg6NzJweCFpbXBvcnRhbnR9LmEtc2VjdGlvbnttYXJnaW4tYm90dG9tOjIycHh9LmEtc2VjdGlvbjpsYXN0LWNoaWxke21hcmdpbi1ib3R0b206MH0uYS1sZXR0ZXItc3BhY2V7ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6LjM4NWVtfS5hLXBhZGRpbmctZXh0cmEtbGFyZ2V7cGFkZGluZzoyMHB4IDI2cHghaW1wb3J0YW50fWJvZHl7Zm9udC1zaXplOjEzcHg7bGluZS1oZWlnaHQ6MTlweDtjb2xvcjojMTExO2ZvbnQtZmFtaWx5OkFyaWFsLHNhbnMtc2VyaWZ9YnV0dG9uLGlucHV0LHNlbGVjdCx0ZXh0YXJlYXtmb250LWZhbWlseTppbmhlcml0fWgxLGgyLGgzLGg0LGg1LGg2e3BhZGRpbmc6MDttYXJnaW46MH1oMSxoMixoMyxoNHtwYWRkaW5nLWJvdHRvbTo0cHh9aDEsaDIsaDMsaDR7dGV4dC1yZW5kZXJpbmc6b3B0aW1pemVMZWdpYmlsaXR5fWgxOmxhc3QtY2hpbGQsaDI6bGFzdC1jaGlsZCxoMzpsYXN0LWNoaWxkLGg0Omxhc3QtY2hpbGR7cGFkZGluZy1ib3R0b206MH1oMS5hLXNwYWNpbmctbm9uZSxoMi5hLXNwYWNpbmctbm9uZSxoMy5hLXNwYWNpbmctbm9uZSxoNC5hLXNwYWNpbmctbm9uZXtwYWRkaW5nLWJvdHRvbTowfWgxIC5hLXNpemUtYmFzZSxoMSAuYS1zaXplLW1pbmksaDEgLmEtc2l6ZS1zbWFsbCxoMS5hLXNpemUtYmFzZSxoMS5hLXNpemUtbWluaSxoMS5hLXNpemUtc21hbGwsaDIgLmEtc2l6ZS1iYXNlLGgyIC5hLXNpemUtbWluaSxoMiAuYS1zaXplLXNtYWxsLGgyLmEtc2l6ZS1iYXNlLGgyLmEtc2l6ZS1taW5pLGgyLmEtc2l6ZS1zbWFsbCxoMyAuYS1zaXplLWJhc2UsaDMgLmEtc2l6ZS1taW5pLGgzIC5hLXNpemUtc21hbGwsaDMuYS1zaXplLWJhc2UsaDMuYS1zaXplLW1pbmksaDMuYS1zaXplLXNtYWxsLGg0IC5hLXNpemUtYmFzZSxoNCAuYS1zaXplLW1pbmksaDQgLmEtc2l6ZS1zbWFsbCxoNC5hLXNpemUtYmFzZSxoNC5hLXNpemUtbWluaSxoNC5hLXNpemUtc21hbGx7cGFkZGluZy1ib3R0b206MH1oMSxoMntwYWRkaW5nLWJvdHRvbTo0cHh9aDMsaDR7cGFkZGluZy1ib3R0b206NHB4fS5hLXNpemUtbWVkaXVtIC5hLXJvdy5hLXNpemUtYmFzZSxoMSAuYS1yb3cuYS1zaXplLWJhc2UsaDIgLmEtcm93LmEtc2l6ZS1iYXNlLGgzIC5hLXJvdy5hLXNpemUtYmFzZSxoNCAuYS1zaXplLWxhcmdlIC5hLXJvdy5hLXNpemUtYmFzZXtwYWRkaW5nLXRvcDoxcHh9LmEtc2l6ZS1iYXNlIC5hLXJvdy5hLXNpemUtYmFzZXtwYWRkaW5nLXRvcDowfS5hLWJveCBoNDpsYXN0LWNoaWxke3BhZGRpbmctYm90dG9tOjB9aDF7Zm9udC13ZWlnaHQ6NDAwO2ZvbnQtc2l6ZToyOHB4O2xpbmUtaGVpZ2h0OjEuMn1oMntmb250LXdlaWdodDo3MDA7Zm9udC1zaXplOjIxcHg7bGluZS1oZWlnaHQ6MS4zfWgze2ZvbnQtd2VpZ2h0OjcwMDtmb250LXNpemU6MTdweDtsaW5lLWhlaWdodDoxLjI1NX1oNHtmb250LXdlaWdodDo3MDA7Zm9udC1zaXplOjE3cHg7bGluZS1oZWlnaHQ6MS4yNTV9aDV7Zm9udC13ZWlnaHQ6NzAwO2ZvbnQtc2l6ZToxM3B4O2xpbmUtaGVpZ2h0OjE5cHh9aDZ7Zm9udC13ZWlnaHQ6NzAwO3RleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtmb250LXNpemU6MTFweDtsaW5lLWhlaWdodDoxLjQ2NTtwYWRkaW5nLWJvdHRvbToxcHh9cHtwYWRkaW5nOjA7bWFyZ2luOjAgMCAxNHB4IDB9cDpsYXN0LWNoaWxke21hcmdpbi1ib3R0b206MH1wK3B7bWFyZ2luLXRvcDotNHB4fWIsc3Ryb25ne2ZvbnQtd2VpZ2h0OjcwMH1lbSxpe2ZvbnQtc3R5bGU6aXRhbGljfWJsb2NrcXVvdGV7bWFyZ2luOjEzcHh9c21hbGx7Zm9udC1zaXplOjEycHh9LmEtc2l6ZS1taW5pe2ZvbnQtc2l6ZToxMXB4IWltcG9ydGFudDtsaW5lLWhlaWdodDoxLjQ2NSFpbXBvcnRhbnR9LmEtc2l6ZS1zbWFsbHtmb250LXNpemU6MTJweCFpbXBvcnRhbnQ7bGluZS1oZWlnaHQ6MS41IWltcG9ydGFudH0uYS1zaXplLWJhc2V7Zm9udC1zaXplOjEzcHghaW1wb3J0YW50O2xpbmUtaGVpZ2h0OjE5cHghaW1wb3J0YW50fS5hLXNpemUtYmFzZS1wbHVze2ZvbnQtc2l6ZToxNXB4IWltcG9ydGFudDtsaW5lLWhlaWdodDoxLjQhaW1wb3J0YW50fS5hLXNpemUtbWVkaXVte2ZvbnQtc2l6ZToxN3B4IWltcG9ydGFudDtsaW5lLWhlaWdodDoxLjI1NSFpbXBvcnRhbnR9LmEtc2l6ZS1tZWRpdW17dGV4dC1yZW5kZXJpbmc6b3B0aW1pemVMZWdpYmlsaXR5fS5hLXNpemUtbGFyZ2V7Zm9udC1zaXplOjIxcHghaW1wb3J0YW50O2xpbmUtaGVpZ2h0OjEuMyFpbXBvcnRhbnR9LmEtc2l6ZS1sYXJnZXt0ZXh0LXJlbmRlcmluZzpvcHRpbWl6ZUxlZ2liaWxpdHl9LmEtc2l6ZS1leHRyYS1sYXJnZXtmb250LXNpemU6MjhweCFpbXBvcnRhbnQ7bGluZS1oZWlnaHQ6MS4yIWltcG9ydGFudH0uYS1zaXplLWV4dHJhLWxhcmdle3RleHQtcmVuZGVyaW5nOm9wdGltaXplTGVnaWJpbGl0eX0uYS10ZXh0LXN0cmlrZXt0ZXh0LWRlY29yYXRpb246bGluZS10aHJvdWdoIWltcG9ydGFudH0uYS10ZXh0LW5vcm1hbHtmb250LXdlaWdodDo0MDAhaW1wb3J0YW50O2ZvbnQtc3R5bGU6bm9ybWFsIWltcG9ydGFudDt0ZXh0LXRyYW5zZm9ybTpub25lIWltcG9ydGFudDt0ZXh0LWRlY29yYXRpb246bm9uZSFpbXBvcnRhbnR9LmEtdGV4dC1ib2xke2ZvbnQtd2VpZ2h0OjcwMCFpbXBvcnRhbnR9LmEtdGV4dC1pdGFsaWN7Zm9udC1zdHlsZTppdGFsaWMhaW1wb3J0YW50fS5hLXRleHQtdW5kZXJsaW5le3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmUhaW1wb3J0YW50fS5hLXRleHQtY2Fwc3t0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2UhaW1wb3J0YW50fS5hLXRleHQtZWxsaXBzaXN7dGV4dC1vdmVyZmxvdzplbGxpcHNpcztvdmVyZmxvdzpoaWRkZW4haW1wb3J0YW50O3doaXRlLXNwYWNlOm5vd3JhcDtkaXNwbGF5OmJsb2NrfXNwYW4uYS1ub3dyYXB7ZGlzcGxheTpibG9ja30uYS10ZXh0LXF1b3Rle3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6YmxvY2s7Zm9udC1mYW1pbHk6R2VvcmdpYSxzZXJpZjtmb250LXNpemU6MTRweDtmb250LXN0eWxlOml0YWxpYztwYWRkaW5nLWxlZnQ6LjVlbX0uYS10ZXh0LXF1b3RlOmJlZm9yZXtjb250ZW50OlwiXFwyMDFDXCI7cG9zaXRpb246YWJzb2x1dGU7bWFyZ2luLXRvcDotM3B4O2NvbG9yOiM3Njc2NzY7bGVmdDowfS5hLXRleHQtcXVvdGU6YWZ0ZXJ7Y29udGVudDpcIlxcMjAxRFwiO3Bvc2l0aW9uOmFic29sdXRlO21hcmdpbi10b3A6LTNweDttYXJnaW4tbGVmdDozcHg7Y29sb3I6Izc2NzY3Nn0uYS10ZXh0LWJlc2lkZS1idXR0b257ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246cmVsYXRpdmU7dG9wOjFweDtwYWRkaW5nOjRweCAwIDAgNnB4fS5jbGVhcmZpeDphZnRlciwuY2xlYXJmaXg6YmVmb3Jle2Rpc3BsYXk6dGFibGU7Y29udGVudDpcIlwiO2xpbmUtaGVpZ2h0OjA7Zm9udC1zaXplOjB9LmNsZWFyZml4OmFmdGVye2NsZWFyOmJvdGh9LmhpZGUtdGV4dHtmb250OjAvMCBhO2NvbG9yOnRyYW5zcGFyZW50O3RleHQtc2hhZG93Om5vbmU7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXI6MH0ub2Zmc2NyZWVue3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6LTEwMDAwcHg7dG9wOmF1dG87d2lkdGg6MXB4O2hlaWdodDoxcHg7b3ZlcmZsb3c6aGlkZGVufS5hLXZpc2libGUtcGhvbmV7ZGlzcGxheTpub25lIWltcG9ydGFudH0uYS12aXNpYmxlLXRhYmxldHtkaXNwbGF5Om5vbmUhaW1wb3J0YW50fS5hLWhpZGRlbi1kZXNrdG9we2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnR9QG1lZGlhIChtYXgtd2lkdGg6NzY3cHgpey5hLXZpc2libGUtcGhvbmV7ZGlzcGxheTppbmhlcml0IWltcG9ydGFudH0uYS1oaWRkZW4tcGhvbmV7ZGlzcGxheTpub25lIWltcG9ydGFudH0uYS1oaWRkZW4tZGVza3RvcHtkaXNwbGF5OmluaGVyaXQhaW1wb3J0YW50fS5hLXZpc2libGUtZGVza3RvcHtkaXNwbGF5Om5vbmUhaW1wb3J0YW50fX1AbWVkaWEgKG1pbi13aWR0aDo3NjhweCkgYW5kIChtYXgtd2lkdGg6OTc5cHgpey5hLXZpc2libGUtdGFibGV0e2Rpc3BsYXk6aW5oZXJpdCFpbXBvcnRhbnR9LmEtaGlkZGVuLXRhYmxldHtkaXNwbGF5Om5vbmUhaW1wb3J0YW50fS5hLWhpZGRlbi1kZXNrdG9we2Rpc3BsYXk6aW5oZXJpdCFpbXBvcnRhbnR9LmEtdmlzaWJsZS1kZXNrdG9we2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnR9fWhye2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7ZGlzcGxheTpibG9jaztoZWlnaHQ6MXB4O2JvcmRlci13aWR0aDowO2JvcmRlci10b3A6MXB4IHNvbGlkICNlN2U3ZTc7bGluZS1oZWlnaHQ6MTlweDttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbToxNHB4fS5hLWNvbG9yLWFsdGVybmF0ZS1iYWNrZ3JvdW5kIC5hLWRpdmlkZXIuYS1kaXZpZGVyLWJyZWFrOmFmdGVye2JvcmRlci10b3A6MXB4IHNvbGlkICNkZGR9LmEtY29sb3ItYWx0ZXJuYXRlLWJhY2tncm91bmQgLmEtZGl2aWRlci5hLWRpdmlkZXItYnJlYWsgaDV7YmFja2dyb3VuZC1jb2xvcjojZjNmM2YzO2NvbG9yOiM0ZDRkNGR9LmEtYm94LmEtY29sb3Itb2Zmc2V0LWJhY2tncm91bmQgLmEtZGl2aWRlci5hLWRpdmlkZXItYnJlYWs6YWZ0ZXIsLmEtY29sb3Itb2Zmc2V0LWJhY2tncm91bmQgLmEtZGl2aWRlci5hLWRpdmlkZXItYnJlYWs6YWZ0ZXJ7Ym9yZGVyLXRvcDoxcHggc29saWQgI2RkZH0uYS1ib3guYS1jb2xvci1vZmZzZXQtYmFja2dyb3VuZCAuYS1kaXZpZGVyLmEtZGl2aWRlci1icmVhayBoNSwuYS1jb2xvci1vZmZzZXQtYmFja2dyb3VuZCAuYS1kaXZpZGVyLmEtZGl2aWRlci1icmVhayBoNXtiYWNrZ3JvdW5kLWNvbG9yOiNmNmY2ZjY7Y29sb3I6IzRkNGQ0ZH0uYS1ib3guYS1jb2xvci1vZmZzZXQtYmFja2dyb3VuZCAuYS1kaXZpZGVyLmEtZGl2aWRlci1zZWN0aW9uIC5hLWRpdmlkZXItaW5uZXI6YWZ0ZXIsLmEtY29sb3Itb2Zmc2V0LWJhY2tncm91bmQgLmEtZGl2aWRlci5hLWRpdmlkZXItc2VjdGlvbiAuYS1kaXZpZGVyLWlubmVyOmFmdGVye2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0byByaWdodCwjZjZmNmY2LHJnYmEoMjU1LDI1NSwyNTUsMCksI2Y2ZjZmNik7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsI2Y2ZjZmNixyZ2JhKDI1NSwyNTUsMjU1LDApLCNmNmY2ZjYpfS5hLWJveCAuYS1kaXZpZGVyLmEtZGl2aWRlci1zZWN0aW9uIC5hLWRpdmlkZXItaW5uZXIsLmEtY29sb3ItYmFzZS1iYWNrZ3JvdW5kIC5hLWRpdmlkZXIuYS1kaXZpZGVyLXNlY3Rpb24gLmEtZGl2aWRlci1pbm5lciwuYS1kaXZpZGVyLmEtZGl2aWRlci1zZWN0aW9uIC5hLWRpdmlkZXItaW5uZXJ7aGVpZ2h0OjQ0cHg7bWFyZ2luLWJvdHRvbTotMThweDtiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSxyZ2JhKDAsMCwwLC4xNCkscmdiYSgwLDAsMCwuMDMpIDNweCx0cmFuc3BhcmVudCk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLHJnYmEoMCwwLDAsLjE0KSxyZ2JhKDAsMCwwLC4wMykgM3B4LHRyYW5zcGFyZW50KTt6LWluZGV4OjA7em9vbToxfS5hLWJveCAuYS1kaXZpZGVyLmEtZGl2aWRlci1zZWN0aW9uIC5hLWRpdmlkZXItaW5uZXI6YWZ0ZXIsLmEtY29sb3ItYmFzZS1iYWNrZ3JvdW5kIC5hLWRpdmlkZXIuYS1kaXZpZGVyLXNlY3Rpb24gLmEtZGl2aWRlci1pbm5lcjphZnRlciwuYS1kaXZpZGVyLmEtZGl2aWRlci1zZWN0aW9uIC5hLWRpdmlkZXItaW5uZXI6YWZ0ZXJ7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO2hlaWdodDo0NHB4O2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0byByaWdodCwjZmZmLHJnYmEoMjU1LDI1NSwyNTUsMCksI2ZmZik7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsI2ZmZixyZ2JhKDI1NSwyNTUsMjU1LDApLCNmZmYpO3otaW5kZXg6MTtjb250ZW50OlwiXCJ9LmEtYm94IC5hLWRpdmlkZXIuYS1kaXZpZGVyLWJyZWFrLC5hLWNvbG9yLWJhc2UtYmFja2dyb3VuZCAuYS1kaXZpZGVyLmEtZGl2aWRlci1icmVhaywuYS1kaXZpZGVyLmEtZGl2aWRlci1icmVha3t0ZXh0LWFsaWduOmNlbnRlcjtwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6MnB4O3BhZGRpbmctdG9wOjFweDttYXJnaW4tYm90dG9tOjE0cHg7bGluZS1oZWlnaHQ6MH0uYS1ib3ggLmEtZGl2aWRlci5hLWRpdmlkZXItYnJlYWs6YWZ0ZXIsLmEtY29sb3ItYmFzZS1iYWNrZ3JvdW5kIC5hLWRpdmlkZXIuYS1kaXZpZGVyLWJyZWFrOmFmdGVyLC5hLWRpdmlkZXIuYS1kaXZpZGVyLWJyZWFrOmFmdGVye2NvbnRlbnQ6XCJcIjt3aWR0aDoxMDAlO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7ZGlzcGxheTpibG9jaztoZWlnaHQ6MXB4O2JvcmRlci10b3A6MXB4IHNvbGlkICNlN2U3ZTc7cG9zaXRpb246YWJzb2x1dGU7dG9wOjUwJTttYXJnaW4tdG9wOi0xcHg7ei1pbmRleDoxfS5hLWJveCAuYS1kaXZpZGVyLmEtZGl2aWRlci1icmVhayBoNSwuYS1jb2xvci1iYXNlLWJhY2tncm91bmQgLmEtZGl2aWRlci5hLWRpdmlkZXItYnJlYWsgaDUsLmEtZGl2aWRlci5hLWRpdmlkZXItYnJlYWsgaDV7bGluZS1oZWlnaHQ6MTtmb250LXNpemU6MTJweDtjb2xvcjojNzY3Njc2O2ZvbnQtd2VpZ2h0OjQwMDt6LWluZGV4OjI7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTppbmxpbmUtYmxvY2s7YmFja2dyb3VuZC1jb2xvcjojZmZmO3BhZGRpbmc6MCA4cHggMCA3cHh9LmEtZ2xvYmFsLW5hdi13cmFwcGVye2JhY2tncm91bmQ6I2Y3ZjdmNztiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwjZmZmLCNlZWUpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwjZmZmLCNlZWUpO2JvcmRlci1ib3R0b206MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjE3KX0uYS1nbG9iYWwtbmF2LXN1Ym5hdntiYWNrZ3JvdW5kLWNvbG9yOiNlZWU7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgcmdiYSgwLDAsMCwuMTcpO3BhZGRpbmc6OHB4IDE4cHggN3B4fS5hLWZvb3RlciB0YWJsZXttYXgtd2lkdGg6OTk2cHh9LmEtZm9vdGVyIHVsIGF7dGV4dC1kZWNvcmF0aW9uOm5vbmV9LmEtZm9vdGVyIHVsIGE6aG92ZXJ7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZX0uYS1zdWJoZWFkZXI6YWZ0ZXIsLmEtc3ViaGVhZGVyOmJlZm9yZXtkaXNwbGF5OnRhYmxlO2NvbnRlbnQ6XCJcIjtsaW5lLWhlaWdodDowO2ZvbnQtc2l6ZTowfS5hLXN1YmhlYWRlcjphZnRlcntjbGVhcjpib3RofS5hLXN1YmhlYWRlci5hLWJyZWFkY3J1bWIgdWwgbGl7bWFyZ2luLXJpZ2h0Oi40MjM1ZW07ZmxvYXQ6bGVmdH0uYS1zdWJoZWFkZXIuYS1icmVhZGNydW1iIHVsIGxpLmEtYnJlYWRjcnVtYi1kaXZpZGVye2NvbG9yOiM5NDk0OTQ7cG9zaXRpb246cmVsYXRpdmU7dG9wOi0xcHh9LmEtc3ViaGVhZGVyLmEtYnJlYWRjcnVtYiB1bCBsaSBhe2NvbG9yOiM1NTV9LmEtc3ViaGVhZGVyLmEtYnJlYWRjcnVtYiB1bCBsaSBhOmhvdmVye2NvbG9yOiNjNDU1MDB9LmEtc3ViaGVhZGVyLmEtYnJlYWRjcnVtYiB1bCBsaS5hLXNlbGVjdGVkIGF7Y29sb3I6I2M0NTUwMH0jYS1kcmFnZ2FibGVzLW1vdXNlZG93bi1sYXllcnt0b3A6MDtsZWZ0OjA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtwb3NpdGlvbjpmaXhlZH0uYS1zY3JvbGxlcnt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO292ZXJmbG93OmF1dG99LmEtc2Nyb2xsZXItdmVydGljYWx7b3ZlcmZsb3cteDpoaWRkZW59LmEtc2Nyb2xsZXItaG9yaXpvbnRhbHtvdmVyZmxvdy15OmhpZGRlbn0uYS1zY3JvbGxlci1ub25le292ZXJmbG93OmhpZGRlbn0uYS1hbGVydCAuYS1pY29uLWFsZXJ0e2hlaWdodDoyN3B4O3dpZHRoOjMwcHg7cG9zaXRpb246YWJzb2x1dGU7bGVmdDoxOHB4O3RvcDoxMXB4fS5hLWFsZXJ0LWVycm9ye2JvcmRlci1jb2xvcjojYzQwMDAwfS5hLWFsZXJ0LWVycm9yIC5hLWFsZXJ0LWNvbnRhaW5lcntiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym94LXNoYWRvdzowIDAgMCA0cHggI2ZjZjRmNCBpbnNldDtwYWRkaW5nLWxlZnQ6NjNweH0uYS1hbGVydC1lcnJvciAuYS1hbGVydC1jb250YWluZXIgLmEtYWxlcnQtaGVhZGluZ3tjb2xvcjojYzQwMDAwfS5hLWFsZXJ0LWluZm97Ym9yZGVyLWNvbG9yOiNCQkQzREV9LmEtYWxlcnQtaW5mbyAuYS1hbGVydC1jb250YWluZXJ7YmFja2dyb3VuZC1jb2xvcjojZjZmNmY2O3BhZGRpbmctbGVmdDo2MHB4fS5hLWFsZXJ0LWluZm8gLmEtYWxlcnQtY29udGFpbmVyIC5hLWFsZXJ0LWhlYWRpbmd7Y29sb3I6IzJiMmIyYn0uYS1hbGVydC1zdWNjZXNze2JvcmRlci1jb2xvcjojN2ZjODdmfS5hLWFsZXJ0LXN1Y2Nlc3MgLmEtYWxlcnQtY29udGFpbmVye2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3gtc2hhZG93OjAgMCAwIDRweCAjZGZmN2RmIGluc2V0O3BhZGRpbmctbGVmdDo2MHB4fS5hLWFsZXJ0LXN1Y2Nlc3MgLmEtYWxlcnQtY29udGFpbmVyIC5hLWFsZXJ0LWhlYWRpbmd7Y29sb3I6IzAwNzYwMH0uYS1hbGVydC13YXJuaW5ne2JvcmRlci1jb2xvcjojOGM2ZTAwfS5hLWFsZXJ0LXdhcm5pbmcgLmEtYWxlcnQtY29udGFpbmVye2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3gtc2hhZG93OjAgMCAwIDRweCAjZmZmYWU3IGluc2V0O3BhZGRpbmctbGVmdDo2M3B4fS5hLWFsZXJ0LXdhcm5pbmcgLmEtYWxlcnQtY29udGFpbmVyIC5hLWFsZXJ0LWhlYWRpbmd7Y29sb3I6IzdjNjIwMH0uYS1hbGVydC1pbmxpbmUgLmEtaWNvbi1hbGVydHtoZWlnaHQ6MTNweDt3aWR0aDoxNHB4O3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MnB4O3RvcDoycHh9LmEtYWxlcnQtaW5saW5le2Rpc3BsYXk6aW5saW5lLWJsb2NrO2JvcmRlcjpub25lO3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fS5hLWFsZXJ0LWlubGluZSAuYS1hbGVydC1jb250YWluZXJ7cGFkZGluZzowfS5hLWFsZXJ0LWlubGluZSAuYS1hbGVydC1jb250YWluZXIgLmEtYWxlcnQtY29udGVudHttYXJnaW4tYm90dG9tOjA7dGV4dC1hbGlnbjpsZWZ0O2ZvbnQtc2l6ZToxMnB4O2xpbmUtaGVpZ2h0OjE1cHh9LmEtYWxlcnQtaW5saW5lLWVycm9yIC5hLWFsZXJ0LWNvbnRhaW5lcntwYWRkaW5nLWxlZnQ6MTZweDtjb2xvcjojYzQwMDAwfS5hLWFsZXJ0LWlubGluZS1pbmZvIC5hLWFsZXJ0LWNvbnRhaW5lcntwYWRkaW5nLWxlZnQ6MTZweDtjb2xvcjojMmIyYjJifS5hLWFsZXJ0LWlubGluZS1zdWNjZXNzIC5hLWFsZXJ0LWNvbnRhaW5lcntwYWRkaW5nLWxlZnQ6MjJweDtjb2xvcjojMDA3NjAwfS5hLWFsZXJ0LWlubGluZS13YXJuaW5nIC5hLWFsZXJ0LWNvbnRhaW5lcntwYWRkaW5nLWxlZnQ6MjJweDtjb2xvcjojMTExfS5hLWJhZGdle3RleHQtZGVjb3JhdGlvbjpub25lO2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5hLWJhZGdlIC5hLWJhZGdlLWxhYmVse3Bvc2l0aW9uOnJlbGF0aXZlO2hlaWdodDoyNnB4O3otaW5kZXg6MTtmbG9hdDpsZWZ0fS5hLWJhZGdlIC5hLWJhZGdlLWxhYmVsIC5hLWJhZGdlLWxhYmVsLWlubmVye2xpbmUtaGVpZ2h0OjI2cHg7aGVpZ2h0OjI2cHg7Zm9udC1zaXplOjEycHh9YS5hLWJhZGdlOmZvY3VzLGEuYS1iYWRnZTpob3Zlcntjb2xvcjojYzQ1NTAwfVtkYXRhLWEtYmFkZ2UtdHlwZT1zdGF0dXNdIC5hLWJhZGdlLWxhYmVse21heC13aWR0aDoxMzBweDtiYWNrZ3JvdW5kLWNvbG9yOiMyMzJGM0U7Y29sb3I6IzIzMkYzRTtwYWRkaW5nOjAgNnB4IDAgMTBweH1bZGF0YS1hLWJhZGdlLXR5cGU9c3RhdHVzXSAuYS1iYWRnZS1sYWJlbCAuYS1iYWRnZS1sYWJlbC1pbm5lcntjb2xvcjojZmZmfVtkYXRhLWEtYmFkZ2UtdHlwZT1zdGF0dXNdIC5hLWJhZGdlLWxhYmVsIC5hLWJhZGdlLWxhYmVsLWlubmVyIFtkYXRhLWEtYmFkZ2UtY29sb3I9b3JhbmdlXXtjb2xvcjojRjY5OTMxfVtkYXRhLWEtYmFkZ2UtdHlwZT1zdGF0dXNdIC5hLWJhZGdlLWxhYmVsOmFmdGVye2NvbnRlbnQ6XCJcIjt3aWR0aDoxMHB4O2hlaWdodDoyNnB4O2JvcmRlci1yaWdodDoxMHB4IHNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci10b3A6MjZweCBzb2xpZDstbW96LWJveC1zaXppbmc6Ym9yZGVyLWJveDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7cmlnaHQ6LTEwcHh9W2RhdGEtYS1iYWRnZS10eXBlPWRlYWxdIC5hLWJhZGdlLWxhYmVse21heC13aWR0aDoxNDBweDtiYWNrZ3JvdW5kLWNvbG9yOiMyMzJGM0U7cGFkZGluZzowIDEwcHh9W2RhdGEtYS1iYWRnZS10eXBlPWRlYWxdIC5hLWJhZGdlLWxhYmVsW2RhdGEtYS1iYWRnZS1jb2xvcj1ldmVyZ3JlZW5de2JhY2tncm91bmQtY29sb3I6Izk3RURGQ31bZGF0YS1hLWJhZGdlLXR5cGU9ZGVhbF0gLmEtYmFkZ2UtbGFiZWxbZGF0YS1hLWJhZGdlLWNvbG9yPWV2ZXJncmVlbl0gLmEtYmFkZ2UtbGFiZWwtaW5uZXJ7Y29sb3I6IzMzM0U0OH1bZGF0YS1hLWJhZGdlLXR5cGU9ZGVhbF0gLmEtYmFkZ2UtbGFiZWwgLmEtYmFkZ2UtbGFiZWwtaW5uZXJ7Y29sb3I6I2ZmZn0uYS1iYWRnZVtkYXRhLWEtYmFkZ2Utc3VwcGxlbWVudGFyeS1wb3NpdGlvbl17ZmxvYXQ6bGVmdH0uYS1iYWRnZVtkYXRhLWEtYmFkZ2Utc3VwcGxlbWVudGFyeS1wb3NpdGlvbj1yaWdodF0gLmEtYmFkZ2Utc3VwcGxlbWVudGFyeS10ZXh0e2Rpc3BsYXk6bm9uZTtwYWRkaW5nLWxlZnQ6MTZweDtsaW5lLWhlaWdodDoyNnB4O2hlaWdodDoyNnB4O3Bvc2l0aW9uOnJlbGF0aXZlO3otaW5kZXg6MX0uYS1iYWRnZVtkYXRhLWEtYmFkZ2Utc3VwcGxlbWVudGFyeS1wb3NpdGlvbj1ib3R0b21dIC5hLWJhZGdlLXN1cHBsZW1lbnRhcnktdGV4dHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7cGFkZGluZzozMnB4IDEwcHggMTBweCAxMHB4O3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCU7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI0RERDtib3gtc2hhZG93OjAgMXB4IDJweCAwIHJnYmEoMCwwLDAsLjEpO2Rpc3BsYXk6bm9uZX0uYS1iYWRnZTpmb2N1cyAuYS1iYWRnZS1zdXBwbGVtZW50YXJ5LXRleHQsLmEtYmFkZ2U6aG92ZXIgLmEtYmFkZ2Utc3VwcGxlbWVudGFyeS10ZXh0e2Rpc3BsYXk6YmxvY2t9LmEtYmFkZ2U6Zm9jdXNbZGF0YS1hLWJhZGdlLXN1cHBsZW1lbnRhcnktcG9zaXRpb249cmlnaHRdLC5hLWJhZGdlOmhvdmVyW2RhdGEtYS1iYWRnZS1zdXBwbGVtZW50YXJ5LXBvc2l0aW9uPXJpZ2h0XXt3aWR0aDoxMDAlfS5hLWJ1dHRvbntiYWNrZ3JvdW5kOiNlN2U5ZWM7Ym9yZGVyLXJhZGl1czozcHg7Ym9yZGVyLWNvbG9yOiNBREIxQjggI0EyQTZBQyAjOEQ5MDk2O2JvcmRlci1zdHlsZTpzb2xpZDtib3JkZXItd2lkdGg6MXB4O2N1cnNvcjpwb2ludGVyO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3BhZGRpbmc6MDt0ZXh0LWFsaWduOmNlbnRlcjt0ZXh0LWRlY29yYXRpb246bm9uZSFpbXBvcnRhbnQ7dmVydGljYWwtYWxpZ246bWlkZGxlfS5hLWJ1dHRvbiAuYS1idXR0b24taW5uZXJ7YmFja2dyb3VuZDojZWZmMWYzO2JhY2tncm91bmQ6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCNmN2Y4ZmEsI2U3ZTllYyk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCNmN2Y4ZmEsI2U3ZTllYyl9LmEtYnV0dG9uOmhvdmVyIC5hLWJ1dHRvbi1pbm5lcntiYWNrZ3JvdW5kOiNlMGUzZTg7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsI2U3ZWFmMCwjZDlkY2UxKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCh0byBib3R0b20sI2U3ZWFmMCwjZDlkY2UxKX0uYS1idXR0b246YWN0aXZlIC5hLWJ1dHRvbi1pbm5lcntib3gtc2hhZG93OjAgMXB4IDNweCByZ2JhKDAsMCwwLC4yKSBpbnNldDtiYWNrZ3JvdW5kLWNvbG9yOiNlN2U5ZWM7YmFja2dyb3VuZC1pbWFnZTpub25lfS5hLWJ1dHRvbjphY3RpdmUgLmEtYnV0dG9uLWlubmVye2JhY2tncm91bmQtY29sb3I6I2RjZGZlM30uYS1idXR0b246YWN0aXZlLC5hLWJ1dHRvbjphY3RpdmU6aG92ZXJ7Ym9yZGVyLWNvbG9yOiNhZGIxYjggI2EyYTZhYyAjYTJhNmFjfS5hLWJ1dHRvbjpob3Zlcntib3JkZXItY29sb3I6I2EyYTZhYyAjOTc5YWExICM4Mjg1OGF9LmEtYnV0dG9uLmEtYnV0dG9uLWZvY3VzLC5hLWJ1dHRvbjpmb2N1c3tvdXRsaW5lOjA7Ym9yZGVyLWNvbG9yOiNlNzc2MDA7Ym94LXNoYWRvdzowIDAgM3B4IDJweCByZ2JhKDIyOCwxMjEsMTcsLjUpfS5hLWJ1dHRvbi5hLWJ1dHRvbi1wcmVzc2VkLC5hLWJ1dHRvbi5hLWJ1dHRvbi1wcmVzc2VkOmhvdmVye2JvcmRlci1jb2xvcjojYWRiMWI4ICNhMmE2YWMgI2EyYTZhY30uYS1idXR0b24uYS1idXR0b24tcHJlc3NlZCAuYS1idXR0b24taW5uZXIsLmEtYnV0dG9uLmEtYnV0dG9uLXByZXNzZWQ6aG92ZXIgLmEtYnV0dG9uLWlubmVye2JhY2tncm91bmQtY29sb3I6I2RjZGZlMztiYWNrZ3JvdW5kLWltYWdlOm5vbmU7Ym94LXNoYWRvdzowIDAgM3B4IDJweCByZ2JhKDIyOCwxMjEsMTcsLjUpfS5hLWJ1dHRvbi5hLWJ1dHRvbi1lcnJvcntib3JkZXItY29sb3I6I2QwMH0uYS1idXR0b24gLmEtYnV0dG9uLXRleHR7Y29sb3I6IzExMX0uYS1idXR0b24gLmEtaWNvbi1wcmV2aW91c3ttYXJnaW46NXB4IDZweCA1cHggNXB4fS5hLWJ1dHRvbiAuYS1pY29uLW5leHR7bWFyZ2luOjVweCA1cHggNXB4IDZweH0uYS1idXR0b24gLmEtaWNvbi1yZXN0YXJ0e21hcmdpbjozcHggM3B4IDNweCA0cHh9LmEtYnV0dG9uLXRleHR7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXI6MDtkaXNwbGF5OmJsb2NrO2ZvbnQtc2l6ZToxM3B4O2xpbmUtaGVpZ2h0OjI5cHg7bWFyZ2luOjA7b3V0bGluZTowO3BhZGRpbmc6MCAxMHB4IDAgMTFweDt0ZXh0LWFsaWduOmNlbnRlcjt3aGl0ZS1zcGFjZTpub3dyYXB9LmEtYnV0dG9uLXRleHQ6Zm9jdXN7b3V0bGluZTowfWEuYS1idXR0b24tdGV4dCxidXR0b24uYS1idXR0b24tdGV4dHt3aWR0aDoxMDAlO2hlaWdodDoxMDAlfS5hLWJ1dHRvbi1pbm5lcntkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOnJlbGF0aXZlO292ZXJmbG93OmhpZGRlbjtoZWlnaHQ6MjlweDtib3gtc2hhZG93OjAgMXB4IDAgcmdiYSgyNTUsMjU1LDI1NSwuNikgaW5zZXQ7Ym9yZGVyLXJhZGl1czoycHh9LmEtYnV0dG9uLWlucHV0e3Bvc2l0aW9uOmFic29sdXRlO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Y29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyOjA7Y3Vyc29yOnBvaW50ZXI7aGVpZ2h0OjEwMCU7d2lkdGg6MTAwJTtsZWZ0OjA7dG9wOjA7b3BhY2l0eTouMDE7b3V0bGluZTowO292ZXJmbG93OnZpc2libGU7ei1pbmRleDoyMH0uYS1idXR0b24gYSwuYS1idXR0b246aG92ZXIgYXtjb2xvcjojMTExO3RleHQtZGVjb3JhdGlvbjpub25lIWltcG9ydGFudH0uYS1idXR0b24taW1hZ2V7aGVpZ2h0OmF1dG99LmEtYnV0dG9uLWltYWdlIC5hLWJ1dHRvbi1pbm5lcntwYWRkaW5nOjZweDtsaW5lLWhlaWdodDowO2hlaWdodDphdXRvfS5hLWJ1dHRvbi1pbWFnZS5hLWJ1dHRvbi1zbWFsbCAuYS1idXR0b24taW5uZXJ7aGVpZ2h0OjMzcHh9LmEtYnV0dG9uLWljb24gLmEtaWNvbntwb3NpdGlvbjphYnNvbHV0ZX0uYS1idXR0b24taWNvbiAuYS1pY29uLTFjbGljaywuYS1idXR0b24taWNvbiAuYS1pY29uLWJ1eW5vdywuYS1idXR0b24taWNvbiAuYS1pY29uLWNhcnQsLmEtYnV0dG9uLWljb24gLmEtaWNvbi1zbnN7dG9wOjJweDtsZWZ0OjJweH0uYS1idXR0b24taWNvbiAuYS1idXR0b24tdGV4dHtwYWRkaW5nLWxlZnQ6MzVweDtwb3NpdGlvbjpyZWxhdGl2ZTt6LWluZGV4OjEwfS5hLWJ1dHRvbi1zdHJldGNoe3dpZHRoOjEwMCV9LmEtYnV0dG9uLWJlc2lkZS10ZXh0e21hcmdpbi10b3A6LTNweH0uYS1idXR0b24tdGV4dCBpbWd7bWluLXdpZHRoOjVweH0uYS1idXR0b24rLmEtYnV0dG9ue21hcmdpbi1sZWZ0Oi4zODVlbX1ALW1vei1kb2N1bWVudCB1cmwtcHJlZml4KCl7LmEtYnV0dG9uIC5hLWJ1dHRvbi10ZXh0e2xpbmUtaGVpZ2h0OjI5cHh9LmEtYnV0dG9uLXNtYWxsIC5hLWJ1dHRvbi10ZXh0e2xpbmUtaGVpZ2h0OjIxcHh9fS5hLWJ1dHRvbi5hLWJ1dHRvbi1zbWFsbHtoZWlnaHQ6MjJweH0uYS1idXR0b24uYS1idXR0b24tc21hbGwgLmEtYnV0dG9uLXRleHR7Zm9udC1zaXplOjExcHg7aGVpZ2h0OjIwcHg7bGluZS1oZWlnaHQ6MjBweDtwYWRkaW5nOjAgNnB4IDAgN3B4fS5hLWJ1dHRvbi5hLWJ1dHRvbi1zbWFsbCAuYS1idXR0b24taW5uZXIsLmEtYnV0dG9uLmEtYnV0dG9uLXNtYWxsLmEtYnV0dG9uLWRpc2FibGVkIC5hLWJ1dHRvbi1pbm5lciwuYS1idXR0b24uYS1idXR0b24tc21hbGwuYS1idXR0b24tZGlzYWJsZWQuYS1idXR0b24tZm9jdXMgLmEtYnV0dG9uLWlubmVyLC5hLWJ1dHRvbi5hLWJ1dHRvbi1zbWFsbC5hLWJ1dHRvbi1kaXNhYmxlZDphY3RpdmUgLmEtYnV0dG9uLWlubmVyLC5hLWJ1dHRvbi5hLWJ1dHRvbi1zbWFsbC5hLWJ1dHRvbi1kaXNhYmxlZDpmb2N1cyAuYS1idXR0b24taW5uZXIsLmEtYnV0dG9uLmEtYnV0dG9uLXNtYWxsLmEtYnV0dG9uLWRpc2FibGVkOmhvdmVyIC5hLWJ1dHRvbi1pbm5lciwuYS1idXR0b24uYS1idXR0b24tc21hbGwuYS1idXR0b24tZm9jdXMgLmEtYnV0dG9uLWlubmVyLC5hLWJ1dHRvbi5hLWJ1dHRvbi1zbWFsbC5hLWJ1dHRvbi1mb2N1czphY3RpdmUgLmEtYnV0dG9uLWlubmVyLC5hLWJ1dHRvbi5hLWJ1dHRvbi1zbWFsbDphY3RpdmUgLmEtYnV0dG9uLWlubmVyLC5hLWJ1dHRvbi5hLWJ1dHRvbi1zbWFsbDpmb2N1cyAuYS1idXR0b24taW5uZXIsLmEtYnV0dG9uLmEtYnV0dG9uLXNtYWxsOmZvY3VzOmFjdGl2ZSAuYS1idXR0b24taW5uZXIsLmEtYnV0dG9uLmEtYnV0dG9uLXNtYWxsOmhvdmVyIC5hLWJ1dHRvbi1pbm5lcntoZWlnaHQ6MjBweCFpbXBvcnRhbnR9LmEtYnV0dG9uLXRvZ2dsZXtib3JkZXItY29sb3I6I2FkYjFiOCAjYTJhNmFjICM4ZDkwOTY7YmFja2dyb3VuZC1jb2xvcjojZmZmfS5hLWJ1dHRvbi10b2dnbGUgLmEtYnV0dG9uLWlubmVye2JveC1zaGFkb3c6MCAxcHggMCByZ2JhKDI1NSwyNTUsMjU1LC42KSBpbnNldDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7YmFja2dyb3VuZC1pbWFnZTpub25lO2hlaWdodDphdXRvfS5hLWJ1dHRvbi10b2dnbGUgLmEtYnV0dG9uLXRleHR7d2hpdGUtc3BhY2U6bm9ybWFsO3RleHQtYWxpZ246bGVmdDtwYWRkaW5nOjVweCAxMHB4IDVweCAxMXB4O2xpbmUtaGVpZ2h0OjE5cHh9LmEtYnV0dG9uLXRvZ2dsZS5hLWJ1dHRvbi1mb2N1cywuYS1idXR0b24tdG9nZ2xlOmZvY3VzLC5hLWJ1dHRvbi10b2dnbGU6aG92ZXJ7Ym9yZGVyLWNvbG9yOiNhMmE2YWMgIzk3OWFhMSAjODI4NThhfS5hLWJ1dHRvbi10b2dnbGUuYS1idXR0b24tZm9jdXMgLmEtYnV0dG9uLWlubmVyLC5hLWJ1dHRvbi10b2dnbGU6Zm9jdXMgLmEtYnV0dG9uLWlubmVyLC5hLWJ1dHRvbi10b2dnbGU6aG92ZXIgLmEtYnV0dG9uLWlubmVye2JhY2tncm91bmQtY29sb3I6I2YzZjNmMztiYWNrZ3JvdW5kLWltYWdlOm5vbmV9LmEtYnV0dG9uLXRvZ2dsZS5hLWJ1dHRvbi10aHVtYm5haWwuYS1idXR0b24tdW5hdmFpbGFibGUsLmEtYnV0dG9uLXRvZ2dsZS5hLWJ1dHRvbi11bmF2YWlsYWJsZXtib3JkZXItY29sb3I6I2FkYjFiOCAjYTJhNmFjICM4ZDkwOTY7Ym9yZGVyLXN0eWxlOmRhc2hlZH0uYS1idXR0b24tdG9nZ2xlLmEtYnV0dG9uLXRodW1ibmFpbC5hLWJ1dHRvbi11bmF2YWlsYWJsZTpob3Zlcjpub3QoLmEtYnV0dG9uLXNlbGVjdGVkKSwuYS1idXR0b24tdG9nZ2xlLmEtYnV0dG9uLXVuYXZhaWxhYmxlOmhvdmVyOm5vdCguYS1idXR0b24tc2VsZWN0ZWQpe2JvcmRlci1jb2xvcjojYTJhNmFjICM5NzlhYTEgIzgyODU4YX0uYS1idXR0b24tdG9nZ2xlLmEtYnV0dG9uLXRodW1ibmFpbC5hLWJ1dHRvbi11bmF2YWlsYWJsZTphY3RpdmUsLmEtYnV0dG9uLXRvZ2dsZS5hLWJ1dHRvbi10aHVtYm5haWwuYS1idXR0b24tdW5hdmFpbGFibGU6YWN0aXZlOmhvdmVyOm5vdCguYS1idXR0b24tc2VsZWN0ZWQpLC5hLWJ1dHRvbi10b2dnbGUuYS1idXR0b24tdW5hdmFpbGFibGU6YWN0aXZlLC5hLWJ1dHRvbi10b2dnbGUuYS1idXR0b24tdW5hdmFpbGFibGU6YWN0aXZlOmhvdmVyOm5vdCguYS1idXR0b24tc2VsZWN0ZWQpe2JvcmRlci1jb2xvcjojOGM4YzhjO2JvcmRlci1zdHlsZTpzb2xpZH0uYS1idXR0b24tdG9nZ2xlLmEtYnV0dG9uLXRodW1ibmFpbC5hLWJ1dHRvbi11bmF2YWlsYWJsZSAuYS1idXR0b24tdGV4dCwuYS1idXR0b24tdG9nZ2xlLmEtYnV0dG9uLXVuYXZhaWxhYmxlIC5hLWJ1dHRvbi10ZXh0e2NvbG9yOiM3Njc2NzZ9LmEtYnV0dG9uLXRvZ2dsZTphY3RpdmUsLmEtYnV0dG9uLXRvZ2dsZTphY3RpdmU6aG92ZXJ7Ym9yZGVyLWNvbG9yOiNhZGIxYjggI2EyYTZhYyAjYTJhNmFjfS5hLWJ1dHRvbi10b2dnbGU6YWN0aXZlIC5hLWJ1dHRvbi1pbm5lcntiYWNrZ3JvdW5kLWltYWdlOm5vbmU7YmFja2dyb3VuZC1jb2xvcjojZWFlY2VlfS5hLWJ1dHRvbi10b2dnbGUuYS1idXR0b24tc2VsZWN0ZWR7YmFja2dyb3VuZC1jb2xvcjojZmZmO292ZXJmbG93OnZpc2libGV9LmEtYnV0dG9uLXRvZ2dsZS5hLWJ1dHRvbi1zZWxlY3RlZCwuYS1idXR0b24tdG9nZ2xlLmEtYnV0dG9uLXNlbGVjdGVkLmEtYnV0dG9uLXVuYXZhaWxhYmxle2JvcmRlci1jb2xvcjojZTc3NjAwfS5hLWJ1dHRvbi10b2dnbGUuYS1idXR0b24tc2VsZWN0ZWQgLmEtYnV0dG9uLWlubmVyLC5hLWJ1dHRvbi10b2dnbGUuYS1idXR0b24tc2VsZWN0ZWQuYS1idXR0b24tZm9jdXMgLmEtYnV0dG9uLWlubmVyLC5hLWJ1dHRvbi10b2dnbGUuYS1idXR0b24tc2VsZWN0ZWQuYS1idXR0b24tZm9jdXM6aG92ZXIgLmEtYnV0dG9uLWlubmVyLC5hLWJ1dHRvbi10b2dnbGUuYS1idXR0b24tc2VsZWN0ZWQ6Zm9jdXMgLmEtYnV0dG9uLWlubmVyLC5hLWJ1dHRvbi10b2dnbGUuYS1idXR0b24tc2VsZWN0ZWQ6Zm9jdXM6aG92ZXIgLmEtYnV0dG9uLWlubmVyLC5hLWJ1dHRvbi10b2dnbGUuYS1idXR0b24tc2VsZWN0ZWQ6aG92ZXIgLmEtYnV0dG9uLWlubmVye2JhY2tncm91bmQtY29sb3I6I2ZlZjhmMjtiYWNrZ3JvdW5kLWltYWdlOm5vbmV9LmEtYnV0dG9uLXRvZ2dsZS5hLWJ1dHRvbi1zZWxlY3RlZCAuYS1idXR0b24tdGV4dHtmb250LXdlaWdodDo3MDB9LmEtYnV0dG9uLXRvZ2dsZS5hLWJ1dHRvbi1lcnJvciAuYS1idXR0b24tdGV4dHtjb2xvcjojZDAwfS5hLWJ1dHRvbi10b2dnbGUuYS1idXR0b24tdGh1bWJuYWlse2JvcmRlci1yYWRpdXM6MnB4O2hlaWdodDphdXRvO292ZXJmbG93OnZpc2libGU7Ym9yZGVyLWNvbG9yOiNhMmE2YWM7Ym9yZGVyLXJhZGl1czoycHh9LmEtYnV0dG9uLXRvZ2dsZS5hLWJ1dHRvbi10aHVtYm5haWwuYS1idXR0b24tZm9jdXMsLmEtYnV0dG9uLXRvZ2dsZS5hLWJ1dHRvbi10aHVtYm5haWw6Zm9jdXMsLmEtYnV0dG9uLXRvZ2dsZS5hLWJ1dHRvbi10aHVtYm5haWw6aG92ZXJ7Ym9yZGVyLWNvbG9yOiNhMmE2YWMgIzk3OWFhMSAjODI4NThhfS5hLWJ1dHRvbi10b2dnbGUuYS1idXR0b24tdGh1bWJuYWlsOmhvdmVyIC5hLWJ1dHRvbi1pbm5lcntiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LmEtYnV0dG9uLXRvZ2dsZS5hLWJ1dHRvbi10aHVtYm5haWw6YWN0aXZle2JvcmRlci1jb2xvcjojYWRiMWI4ICNhMmE2YWMgI2EyYTZhY30uYS1idXR0b24tdG9nZ2xlLmEtYnV0dG9uLXRodW1ibmFpbC5hLWJ1dHRvbi1zZWxlY3RlZHtib3JkZXItY29sb3I6I2U3NzYwMH0uYS1idXR0b24tdG9nZ2xlLmEtYnV0dG9uLXRodW1ibmFpbCAuYS1idXR0b24taW5uZXJ7Ym9yZGVyLXJhZGl1czoycHg7aGVpZ2h0OmF1dG87b3ZlcmZsb3c6aGlkZGVuO3BhZGRpbmc6MH0uYS1idXR0b24tdG9nZ2xlLmEtYnV0dG9uLXRodW1ibmFpbCAuYS1idXR0b24taW5uZXIgaW1ne2JvcmRlci1yYWRpdXM6MnB4fS5hLWJ1dHRvbi10b2dnbGUuYS1idXR0b24tdGh1bWJuYWlsIC5hLWJ1dHRvbi10ZXh0e3BhZGRpbmc6MH0uYS1idXR0b24tdG9nZ2xlLmEtYnV0dG9uLXRodW1ibmFpbCBidXR0b24uYS1idXR0b24tdGV4dHtoZWlnaHQ6YXV0b30uYS1idXR0b24tdG9nZ2xlLmEtYnV0dG9uLXRodW1ibmFpbC5hLWJ1dHRvbi1kaXNhYmxlZHtiYWNrZ3JvdW5kOiNmZmYhaW1wb3J0YW50O2JvcmRlci1jb2xvcjojZTdlN2U3IWltcG9ydGFudH0uYS1idXR0b24tdG9nZ2xlLmEtYnV0dG9uLXRodW1ibmFpbC5hLWJ1dHRvbi1kaXNhYmxlZCAuYS1idXR0b24taW5uZXJ7YmFja2dyb3VuZDowIDAhaW1wb3J0YW50fS5hLWJ1dHRvbi10b2dnbGUuYS1idXR0b24tdGh1bWJuYWlsLmEtYnV0dG9uLWRpc2FibGVkIGltZ3tvcGFjaXR5Oi4zMn0uYS1idXR0b24tdG9nZ2xlLXNlY3Rpb257aGVpZ2h0OmF1dG99LmEtYnV0dG9uLXRvZ2dsZS1zZWN0aW9uIC5hLWJ1dHRvbi1pbm5lcntwYWRkaW5nOjE0cHggMThweH0uYS1idXR0b24tdG9nZ2xlLXNlY3Rpb24gLmEtYnV0dG9uLXRleHR7bGluZS1oZWlnaHQ6MTlweH0uYS1idXR0b24tdG9nZ2xlLWdyb3VwOmFmdGVyLC5hLWJ1dHRvbi10b2dnbGUtZ3JvdXA6YmVmb3Jle2Rpc3BsYXk6dGFibGU7Y29udGVudDpcIlwiO2xpbmUtaGVpZ2h0OjA7Zm9udC1zaXplOjB9LmEtYnV0dG9uLXRvZ2dsZS1ncm91cDphZnRlcntjbGVhcjpib3RofS5hLWJ1dHRvbi1kcm9wZG93biAuYS1idXR0b24tdGV4dHtwYWRkaW5nLXJpZ2h0OjI2cHg7dGV4dC1hbGlnbjpsZWZ0O292ZXJmbG93OmhpZGRlbjt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO3Bvc2l0aW9uOnJlbGF0aXZlO3otaW5kZXg6MTB9LmEtYnV0dG9uLWRyb3Bkb3duLmEtYnV0dG9uLXNtYWxsIC5hLWJ1dHRvbi10ZXh0e3BhZGRpbmctcmlnaHQ6MjBweH0uYS1idXR0b24tZ3JvdXAgLmEtYnV0dG9uLWRyb3Bkb3duLC5hLWJ1dHRvbi1ncm91cCAuYS1idXR0b24tc3BsaXRkcm9wZG93bnt3aWR0aDoyNnB4IWltcG9ydGFudDttaW4td2lkdGg6MjZweCFpbXBvcnRhbnR9LmEtYnV0dG9uIC5hLWljb24tZHJvcGRvd257cG9zaXRpb246YWJzb2x1dGU7dG9wOjEwcHg7cmlnaHQ6OHB4fS5hLWJ1dHRvbi5hLWJ1dHRvbi1zbWFsbCAuYS1pY29uLWRyb3Bkb3due3RvcDo2cHh9LmEtYnV0dG9uLmEtYnV0dG9uLXNtYWxsLmEtYnV0dG9uLWRyb3Bkb3duIC5hLWljb24tZHJvcGRvd257cmlnaHQ6NXB4fS5hLWJ1dHRvbi1kaXNhYmxlZHtiYWNrZ3JvdW5kOiNmN2Y4ZmE7YmFja2dyb3VuZC1pbWFnZTpub25lIWltcG9ydGFudDtib3JkZXItY29sb3I6I2UwZTBlMCFpbXBvcnRhbnQ7Y3Vyc29yOmRlZmF1bHQhaW1wb3J0YW50fS5hLWJ1dHRvbi1kaXNhYmxlZCAuYS1idXR0b24taW5uZXIgLmEtaWNvbntvcGFjaXR5Oi40IWltcG9ydGFudH0uYS1idXR0b24tZGlzYWJsZWQgLmEtYnV0dG9uLXByaW1hcnl7YmFja2dyb3VuZC1jb2xvcjojZjlmM2U1IWltcG9ydGFudH0uYS1idXR0b24tZGlzYWJsZWQ6YWN0aXZlIC5hLWJ1dHRvbi1pbm5lciwuYS1idXR0b24tZGlzYWJsZWQ6Zm9jdXMgLmEtYnV0dG9uLWlubmVyLC5hLWJ1dHRvbi1kaXNhYmxlZDpob3ZlciAuYS1idXR0b24taW5uZXJ7YmFja2dyb3VuZC1jb2xvcjojZjdmOGZhO2JhY2tncm91bmQtaW1hZ2U6bm9uZSFpbXBvcnRhbnQ7Ym94LXNoYWRvdzpub25lIWltcG9ydGFudH0uYS1idXR0b24tZGlzYWJsZWQgLmEtYnV0dG9uLXRleHR7Y29sb3I6IzU1NSFpbXBvcnRhbnQ7Y3Vyc29yOmRlZmF1bHQhaW1wb3J0YW50O2ZvbnQtd2VpZ2h0OjQwMDt0ZXh0LXNoYWRvdzpub25lIWltcG9ydGFudH0uYS1idXR0b24tZGlzYWJsZWQgLmEtYnV0dG9uLWlubmVye2JhY2tncm91bmQtaW1hZ2U6bm9uZSFpbXBvcnRhbnQ7YmFja2dyb3VuZC1jb2xvcjojZjdmOGZhIWltcG9ydGFudDtib3gtc2hhZG93Om5vbmUhaW1wb3J0YW50fS5hLWJ1dHRvbi1kaXNhYmxlZCAuYS1idXR0b24taW5wdXR7ZGlzcGxheTpub25lfS5hLWJ1dHRvbi1wcmltYXJ5e2JhY2tncm91bmQ6I2YwYzE0Yjtib3JkZXItY29sb3I6I2E4ODczNCAjOWM3ZTMxICM4NDZhMjk7Y29sb3I6IzExMX0uYS1idXR0b24tcHJpbWFyeSAuYS1idXR0b24taW5uZXJ7YmFja2dyb3VuZDojZjRkMDc4O2JhY2tncm91bmQ6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCNmN2RmYTUsI2YwYzE0Yik7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCNmN2RmYTUsI2YwYzE0Yil9LmEtYnV0dG9uLXByaW1hcnk6aG92ZXIgLmEtYnV0dG9uLWlubmVye2JhY2tncm91bmQ6I2YxYzg2MTtiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwjZjVkNzhlLCNlZWI5MzMpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwjZjVkNzhlLCNlZWI5MzMpfS5hLWJ1dHRvbi1wcmltYXJ5OmFjdGl2ZSAuYS1idXR0b24taW5uZXJ7YmFja2dyb3VuZC1jb2xvcjojZjBjMTRiO2JhY2tncm91bmQtaW1hZ2U6bm9uZX0uYS1idXR0b24tcHJpbWFyeS5hLWJ1dHRvbi1mb2N1cywuYS1idXR0b24tcHJpbWFyeTpmb2N1cywuYS1idXR0b24tcHJpbWFyeTpob3ZlciwuYS1idXR0b24tcHJpbWFyeTpob3ZlcjphY3RpdmV7Ym9yZGVyLWNvbG9yOiNhODg3MzQgIzljN2UzMSAjODQ2YTI5fS5hLWJ1dHRvbi1wcmltYXJ5OmFjdGl2ZXtib3JkZXItY29sb3I6I2E4ODczNCAjOWM3ZTMxICM5YzdlMzF9LmEtYnV0dG9uLXByaW1hcnkuYS1idXR0b24tZm9jdXMsLmEtYnV0dG9uLXByaW1hcnk6Zm9jdXN7Ym9yZGVyLWNvbG9yOiNlNzc2MDB9LmEtYnV0dG9uLXByaW1hcnkuYS1idXR0b24tZGlzYWJsZWR7YmFja2dyb3VuZC1jb2xvcjojZjlmM2U1IWltcG9ydGFudDtib3JkZXItY29sb3I6I2U4ZTBjZCFpbXBvcnRhbnR9LmEtYnV0dG9uLXByaW1hcnkuYS1idXR0b24tZGlzYWJsZWQgLmEtYnV0dG9uLWlubmVye2JhY2tncm91bmQtY29sb3I6I2Y5ZjNlNSFpbXBvcnRhbnR9LmEtYnV0dG9uLXByaW1hcnkuYS1idXR0b24tZGlzYWJsZWQgLmEtYnV0dG9uLXRleHR7Y29sb3I6YV9udWxsYWJsZV93aXRoX2ltcG9ydGFudCgpfS5hLWJ1dHRvbi1wcmltYXJ5LmEtYnV0dG9uLXByZXNzZWQsLmEtYnV0dG9uLXByaW1hcnkuYS1idXR0b24tcHJlc3NlZDpob3Zlcntib3JkZXItY29sb3I6I2E4ODczNCAjOWM3ZTMxICM5YzdlMzF9LmEtYnV0dG9uLXByaW1hcnkuYS1idXR0b24tcHJlc3NlZCAuYS1idXR0b24taW5uZXIsLmEtYnV0dG9uLXByaW1hcnkuYS1idXR0b24tcHJlc3NlZDpob3ZlciAuYS1idXR0b24taW5uZXJ7YmFja2dyb3VuZC1pbWFnZTpub25lO2JveC1zaGFkb3c6MCAxcHggM3B4IHJnYmEoMCwwLDAsLjIpIGluc2V0O2JhY2tncm91bmQtY29sb3I6I2YwYzE0Yn0uYS1idXR0b24tcHJpbWFyeSAuYS1idXR0b24taW5uZXJ7Ym94LXNoYWRvdzowIDFweCAwIHJnYmEoMjU1LDI1NSwyNTUsLjQpIGluc2V0fS5hLWJ1dHRvbi1wcmltYXJ5IC5hLWJ1dHRvbi10ZXh0e2NvbG9yOiMxMTF9LmEtYnV0dG9uLWRpc2FibGVkPi5hLWJ1dHRvbi1wcmltYXJ5IC5hLWJ1dHRvbi1pbm5lcntiYWNrZ3JvdW5kLWNvbG9yOiNmOWYzZTUhaW1wb3J0YW50fS5hLWJ1dHRvbi1kYXJrLC5hLWJ1dHRvbi1zZWFyY2h7YmFja2dyb3VuZDojNDQ0QzU1O2JvcmRlci1jb2xvcjojM2Q0NDRjICMyZjM1M2IgIzJjMzEzNztjb2xvcjojZmZmfS5hLWJ1dHRvbi1kYXJrIC5hLWJ1dHRvbi1pbm5lciwuYS1idXR0b24tc2VhcmNoIC5hLWJ1dHRvbi1pbm5lcntiYWNrZ3JvdW5kOiM1YjYyNmE7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsIzcyNzg3RiwjNDQ0QzU1KTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIzcyNzg3RiwjNDQ0QzU1KX0uYS1idXR0b24tZGFyazpob3ZlciAuYS1idXR0b24taW5uZXIsLmEtYnV0dG9uLXNlYXJjaDpob3ZlciAuYS1idXR0b24taW5uZXJ7YmFja2dyb3VuZDojNGY1NTVjO2JhY2tncm91bmQ6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCM2NjZiNzIsIzM5M2Y0Nyk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCM2NjZiNzIsIzM5M2Y0Nyl9LmEtYnV0dG9uLWRhcms6YWN0aXZlIC5hLWJ1dHRvbi1pbm5lciwuYS1idXR0b24tc2VhcmNoOmFjdGl2ZSAuYS1idXR0b24taW5uZXJ7YmFja2dyb3VuZC1jb2xvcjojNDQ0QzU1O2JhY2tncm91bmQtaW1hZ2U6bm9uZX0uYS1idXR0b24tZGFyay5hLWJ1dHRvbi1mb2N1cywuYS1idXR0b24tZGFyazpmb2N1cywuYS1idXR0b24tZGFyazpob3ZlciwuYS1idXR0b24tZGFyazpob3ZlcjphY3RpdmUsLmEtYnV0dG9uLXNlYXJjaC5hLWJ1dHRvbi1mb2N1cywuYS1idXR0b24tc2VhcmNoOmZvY3VzLC5hLWJ1dHRvbi1zZWFyY2g6aG92ZXIsLmEtYnV0dG9uLXNlYXJjaDpob3ZlcjphY3RpdmV7Ym9yZGVyLWNvbG9yOiMzMjM3M2UgIzI0MjgyZCAjMjEyNDI5fS5hLWJ1dHRvbi1kYXJrOmFjdGl2ZSwuYS1idXR0b24tc2VhcmNoOmFjdGl2ZXtib3JkZXItY29sb3I6IzNkNDQ0YyAjMmYzNTNiICMyYzMxMzd9LmEtYnV0dG9uLWRhcmsgLmEtYnV0dG9uLXRleHQsLmEtYnV0dG9uLXNlYXJjaCAuYS1idXR0b24tdGV4dHtmb250LXdlaWdodDo3MDA7Y29sb3I6I2ZmZn0uYS1idXR0b24tZGFyay5hLWJ1dHRvbi1kaXNhYmxlZCAuYS1idXR0b24tdGV4dCwuYS1idXR0b24tc2VhcmNoLmEtYnV0dG9uLWRpc2FibGVkIC5hLWJ1dHRvbi10ZXh0e2NvbG9yOmFfbnVsbGFibGVfd2l0aF9pbXBvcnRhbnQoKX0uYS1idXR0b24tZGFyayAuYS1idXR0b24taW5uZXIsLmEtYnV0dG9uLXNlYXJjaCAuYS1idXR0b24taW5uZXJ7Ym94LXNoYWRvdzowIDFweCAwIHJnYmEoMjU1LDI1NSwyNTUsLjE1KSBpbnNldDt0ZXh0LXNoYWRvdzowIC0xcHggMCByZ2JhKDAsMCwwLC4yNSl9LmEtYnV0dG9uLW9uZWNsaWNre2JhY2tncm91bmQ6I2VkOTIyMDtib3JkZXItY29sb3I6I2NhN2MxYiAjYmU3NTFhICNhNTY2MTZ9LmEtYnV0dG9uLW9uZWNsaWNrIC5hLWJ1dHRvbi1pbm5lcntiYWNrZ3JvdW5kOiNmMmFkNTg7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsI2Y2Yzg4ZiwjZWQ5MjIwKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCh0byBib3R0b20sI2Y2Yzg4ZiwjZWQ5MjIwKX0uYS1idXR0b24tb25lY2xpY2s6aG92ZXIgLmEtYnV0dG9uLWlubmVye2JhY2tncm91bmQ6I2ViYTE0NTtiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwjZjRiYzc3LCNlMTg1MTIpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwjZjRiYzc3LCNlMTg1MTIpfS5hLWJ1dHRvbi1vbmVjbGljazphY3RpdmUgLmEtYnV0dG9uLWlubmVye2JhY2tncm91bmQtY29sb3I6I2VkOTIyMDtiYWNrZ3JvdW5kLWltYWdlOm5vbmV9LmEtYnV0dG9uLW9uZWNsaWNrLmEtYnV0dG9uLWZvY3VzLC5hLWJ1dHRvbi1vbmVjbGljazpmb2N1cywuYS1idXR0b24tb25lY2xpY2s6aG92ZXIsLmEtYnV0dG9uLW9uZWNsaWNrOmhvdmVyOmFjdGl2ZXtib3JkZXItY29sb3I6I2JlNzUxYSAjYjI2ZDE4ICM5YTVmMTV9LmEtYnV0dG9uLW9uZWNsaWNrOmFjdGl2ZXtib3JkZXItY29sb3I6I2NhN2MxYiAjYmU3NTFhICNiZTc1MWF9LmEtYnV0dG9uLW9uZWNsaWNrLmEtYnV0dG9uLWRpc2FibGVkIC5hLWJ1dHRvbi10ZXh0e2NvbG9yOmFfbnVsbGFibGVfd2l0aF9pbXBvcnRhbnQoKX0uYS1idXR0b24tcHJlb3JkZXJ7YmFja2dyb3VuZDojQ0RDREExO2JvcmRlci1jb2xvcjojOGY4ZjcwICM4NTg1NjkgIzcxNzE1OH0uYS1idXR0b24tcHJlb3JkZXIgLmEtYnV0dG9uLWlubmVye2JhY2tncm91bmQ6I2RhZGFiOTtiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwjZTZlNmQwLCNDRENEQTEpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwjZTZlNmQwLCNDRENEQTEpfS5hLWJ1dHRvbi1wcmVvcmRlcjpob3ZlciAuYS1idXR0b24taW5uZXJ7YmFja2dyb3VuZDojZDFkMWE4O2JhY2tncm91bmQ6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCNkZGRkYmYsI2M0YzQ5MCk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCNkZGRkYmYsI2M0YzQ5MCl9LmEtYnV0dG9uLXByZW9yZGVyOmFjdGl2ZSAuYS1idXR0b24taW5uZXJ7YmFja2dyb3VuZC1jb2xvcjojQ0RDREExO2JhY2tncm91bmQtaW1hZ2U6bm9uZX0uYS1idXR0b24tcHJlb3JkZXIuYS1idXR0b24tZm9jdXMsLmEtYnV0dG9uLXByZW9yZGVyOmZvY3VzLC5hLWJ1dHRvbi1wcmVvcmRlcjpob3ZlciwuYS1idXR0b24tcHJlb3JkZXI6aG92ZXI6YWN0aXZle2JvcmRlci1jb2xvcjojODU4NTY5ICM3YjdiNjEgIzY2NjY1MH0uYS1idXR0b24tcHJlb3JkZXI6YWN0aXZle2JvcmRlci1jb2xvcjojOGY4ZjcwICM4NTg1NjkgIzg1ODU2OX0uYS1idXR0b24tcHJlb3JkZXIuYS1idXR0b24tZGlzYWJsZWQgLmEtYnV0dG9uLXRleHR7Y29sb3I6YV9udWxsYWJsZV93aXRoX2ltcG9ydGFudCgpfS5hLWJ1dHRvbi1zdXBwbGVtZW50YWwgLmEtYnV0dG9uLXRleHR7dGV4dC1hbGlnbjpsZWZ0O3otaW5kZXg6MTA7cGFkZGluZy1yaWdodDoyM3B4fS5hLWJ1dHRvbi1zdXBwbGVtZW50YWwgLmEtaWNvbi1zdXBwbGVtZW50YWx7cG9zaXRpb246YWJzb2x1dGU7dG9wOjUwJTtyaWdodDo5cHg7bWFyZ2luLXRvcDotNnB4fS5hLWJ1dHRvbi1zcGFuMXt3aWR0aDo4JSFpbXBvcnRhbnR9LmEtYnV0dG9uLXNwYW4ye3dpZHRoOjE3JSFpbXBvcnRhbnR9LmEtYnV0dG9uLXNwYW4ze3dpZHRoOjI1JSFpbXBvcnRhbnR9LmEtYnV0dG9uLXNwYW40e3dpZHRoOjMzJSFpbXBvcnRhbnR9LmEtYnV0dG9uLXNwYW41e3dpZHRoOjQyJSFpbXBvcnRhbnR9LmEtYnV0dG9uLXNwYW42e3dpZHRoOjUwJSFpbXBvcnRhbnR9LmEtYnV0dG9uLXNwYW43e3dpZHRoOjU4JSFpbXBvcnRhbnR9LmEtYnV0dG9uLXNwYW44e3dpZHRoOjY3JSFpbXBvcnRhbnR9LmEtYnV0dG9uLXNwYW45e3dpZHRoOjc1JSFpbXBvcnRhbnR9LmEtYnV0dG9uLXNwYW4xMHt3aWR0aDo4MyUhaW1wb3J0YW50fS5hLWJ1dHRvbi1zcGFuMTF7d2lkdGg6OTIlIWltcG9ydGFudH0uYS1idXR0b24tc3BhbjEye3dpZHRoOjEwMCUhaW1wb3J0YW50fS5hLWJ1dHRvbi1ncm91cHtkaXNwbGF5OnRhYmxlO2ZvbnQtc2l6ZTowO2xpbmUtaGVpZ2h0OjA7b3V0bGluZTowO3Bvc2l0aW9uOnJlbGF0aXZlO3doaXRlLXNwYWNlOm5vd3JhcH0uYS1idXR0b24tZ3JvdXAgLmEtYnV0dG9ue2JvcmRlci1yYWRpdXM6MDtib3JkZXI6MXB4IHNvbGlkO2JvcmRlci1jb2xvcjojYWRiMWI4ICNhMmE2YWMgIzhkOTA5Njtib3JkZXItbGVmdC13aWR0aDowO3ZlcnRpY2FsLWFsaWduOnRvcDtkaXNwbGF5OnRhYmxlLWNlbGw7d2lkdGg6YXV0b30uYS1idXR0b24tZ3JvdXAgLmEtYnV0dG9uOmFmdGVye2JvcmRlci1yYWRpdXM6MH0uYS1idXR0b24tZ3JvdXAgLmEtYnV0dG9uIC5hLWJ1dHRvbi10ZXh0e3doaXRlLXNwYWNlOm5vd3JhcH0uYS1idXR0b24tZ3JvdXAgLmEtYnV0dG9uIC5hLWJ1dHRvbi1pbm5lcntib3JkZXItcmFkaXVzOjB9LmEtYnV0dG9uLWdyb3VwIC5hLWJ1dHRvbjpob3Zlcntib3JkZXItY29sb3I6I2EyYTZhYyAjOTc5YWExICM4Mjg1OGF9LmEtYnV0dG9uLWdyb3VwIC5hLWJ1dHRvbjphY3RpdmV7Ym9yZGVyLWNvbG9yOiNhZGIxYjggI2EyYTZhYyAjYTJhNmFjfS5hLWJ1dHRvbi1ncm91cCAuYS1idXR0b24uYS1idXR0b24tZm9jdXMsLmEtYnV0dG9uLWdyb3VwIC5hLWJ1dHRvbjpmb2N1c3tib3gtc2hhZG93OjAgMCAzcHggMnB4IHJnYmEoMjI4LDEyMSwxNywuNSk7b3V0bGluZTowO3otaW5kZXg6MTtib3JkZXItY29sb3I6I2U3NzYwMH0uYS1idXR0b24tZ3JvdXAgLmEtYnV0dG9uIC5hLWJ1dHRvbi1ncm91cC1maXJzdCwuYS1idXR0b24tZ3JvdXAgLmEtYnV0dG9uOmZpcnN0LWNoaWxke2JvcmRlci1yYWRpdXM6M3B4IDAgMCAzcHg7Ym9yZGVyLWxlZnQtd2lkdGg6MXB4fS5hLWJ1dHRvbi1ncm91cCAuYS1idXR0b24gLmEtYnV0dG9uLWdyb3VwLWZpcnN0IC5hLWJ1dHRvbi1pbm5lciwuYS1idXR0b24tZ3JvdXAgLmEtYnV0dG9uOmZpcnN0LWNoaWxkIC5hLWJ1dHRvbi1pbm5lcntib3JkZXItcmFkaXVzOjNweCAwIDAgM3B4fS5hLWJ1dHRvbi1ncm91cCAuYS1idXR0b24gLmEtYnV0dG9uLWdyb3VwLWxhc3QsLmEtYnV0dG9uLWdyb3VwIC5hLWJ1dHRvbjpsYXN0LWNoaWxke2JvcmRlci1yYWRpdXM6MCAzcHggM3B4IDB9LmEtYnV0dG9uLWdyb3VwIC5hLWJ1dHRvbiAuYS1idXR0b24tZ3JvdXAtbGFzdCAuYS1idXR0b24taW5uZXIsLmEtYnV0dG9uLWdyb3VwIC5hLWJ1dHRvbjpsYXN0LWNoaWxkIC5hLWJ1dHRvbi1pbm5lcntib3JkZXItcmFkaXVzOjAgM3B4IDNweCAwfS5hLWJ1dHRvbi1ncm91cCAuYS1idXR0b246b25seS1jaGlsZHtib3JkZXItcmFkaXVzOjNweH0uYS1idXR0b24tZ3JvdXAgLmEtYnV0dG9uOm9ubHktY2hpbGQgLmEtYnV0dG9uLWlubmVye2JvcmRlci1yYWRpdXM6M3B4fS5hLWJ1dHRvbi1ncm91cCAuYS1idXR0b24tc2VsZWN0ZWR7Ym9yZGVyLWNvbG9yOiNhZGIyYmIgI2JhYmFiYSAjYmFiYWJhO3Bvc2l0aW9uOnJlbGF0aXZlO292ZXJmbG93OnZpc2libGV9LmEtYnV0dG9uLWdyb3VwIC5hLWJ1dHRvbi1zZWxlY3RlZCAuYS1idXR0b24taW5uZXJ7YmFja2dyb3VuZC1pbWFnZTpub25lO2JhY2tncm91bmQtY29sb3I6Izc2NzY3Njtib3gtc2hhZG93OjAgMXB4IDNweCByZ2JhKDAsMCwwLC4yKSBpbnNldH0uYS1idXR0b24tZ3JvdXAgLmEtYnV0dG9uLXNlbGVjdGVkIC5hLWJ1dHRvbi1pbm5lciAuYS1idXR0b24tdGV4dHtjb2xvcjojZmZmfS5hLXRleHQtY2VudGVyIC5hLWJ1dHRvbi1ncm91cHttYXJnaW4tbGVmdDphdXRvO21hcmdpbi1yaWdodDphdXRvfS5hLWJ1dHRvbi1zdGFjayAuYS1idXR0b257bWFyZ2luLWJvdHRvbToxMHB4O2Rpc3BsYXk6YmxvY2t9LmEtYnV0dG9uLXN0YWNrIC5hLWJ1dHRvbjpsYXN0LWNoaWxke21hcmdpbi1ib3R0b206MH0uYS1idXR0b24tc3RhY2sgLmEtYnV0dG9uLWxpc3QgLmEtYnV0dG9ue2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5hLWJ1dHRvbi1zdGFjayAuYS1idXR0b24tZ3JvdXB7d2lkdGg6MTAwJX0uYS1idXR0b24tc3RhY2sgLmEtYnV0dG9uLWdyb3VwIC5hLWJ1dHRvbnttYXJnaW4tYm90dG9tOjA7d2lkdGg6YXV0bztkaXNwbGF5OnRhYmxlLWNlbGx9LmEtYnV0dG9uLXN0YWNrIC5hLWJ1dHRvbisuYS1idXR0b257bWFyZ2luLWxlZnQ6MH0uYS1idXR0b24tc3RhY2sgLmEtYnV0dG9uLXRvZ2dsZS5hLWJ1dHRvbi10aHVtYm5haWx7ZGlzcGxheTppbmxpbmUtYmxvY2t9QC13ZWJraXQta2V5ZnJhbWVzIHJvdGF0ZTM2MHtmcm9te3RyYW5zZm9ybTpyb3RhdGUoMCl9dG97dHJhbnNmb3JtOnJvdGF0ZSgzNjBkZWcpfX1Aa2V5ZnJhbWVzIHJvdGF0ZTM2MHtmcm9te3RyYW5zZm9ybTpyb3RhdGUoMCl9dG97dHJhbnNmb3JtOnJvdGF0ZSgzNjBkZWcpfX0uYS1pbWFnZS1jb250YWluZXJ7cG9zaXRpb246cmVsYXRpdmV9LmEtaW1hZ2UtY29udGFpbmVyIGltZ3twb3NpdGlvbjphYnNvbHV0ZTttYXJnaW46YXV0bzt0b3A6MDtyaWdodDowO2JvdHRvbTowO2xlZnQ6MDttYXgtd2lkdGg6MTAwJTttYXgtaGVpZ2h0OjEwMCV9aW1ne3ZlcnRpY2FsLWFsaWduOnRvcH1pbWcuYS1hdXRvLXNjYWxle21heC13aWR0aDoxMDAlIWltcG9ydGFudDttYXgtaGVpZ2h0OjEwMCU7aGVpZ2h0OmF1dG99aW1nLmEtc2NhbGV7d2lkdGg6MTAwJX0uYS1keW5hbWljLWltYWdlLmEtc3RyZXRjaC12ZXJ0aWNhbHtoZWlnaHQ6MTAwJSFpbXBvcnRhbnQ7d2lkdGg6YXV0byFpbXBvcnRhbnR9LmEtZHluYW1pYy1pbWFnZS5hLXN0cmV0Y2gtaG9yaXpvbnRhbHt3aWR0aDoxMDAlIWltcG9ydGFudDtoZWlnaHQ6YXV0byFpbXBvcnRhbnR9ZGl2LmEtbGF6eS1sb2FkZWQsZGl2LmEtbWFudWFsbHktbG9hZGVke2JhY2tncm91bmQ6dXJsKGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0FVSUNsaWVudHMvQW1hem9uVUlTcGlubmVyLXNwaW5uZXJfZ3JheV8yeC0zMDU5OTc0MzRlYmQ1YTcyY2QzYWE1OThhMDE5ZmNjNmUxZWZlMjNhLl9WMl8uZ2lmKSA1MCUgNTAlIG5vLXJlcGVhdDttaW4taGVpZ2h0OjUwcHg7bWluLXdpZHRoOjUwcHh9QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOjEuNSksb25seSBzY3JlZW4gYW5kIChtaW4tcmVzb2x1dGlvbjoxNDRkcGkpe2Rpdi5hLWxhenktbG9hZGVkLGRpdi5hLW1hbnVhbGx5LWxvYWRlZHtiYWNrZ3JvdW5kOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJU3Bpbm5lci1zcGlubmVyX2dyYXlfNHgtMTcwMGM5N2E4MDk5OGVlMTBmOGQ5NzJhNGM4OWI2ZWI2NGNjZmRiMS5fVjJfLmdpZikgNTAlIDUwJSBuby1yZXBlYXQ7YmFja2dyb3VuZC1zaXplOjUwcHh9fS5hLW5vLWpzIGltZy5hLWxhenktbG9hZGVke2Rpc3BsYXk6bm9uZX1kaXYuYS1pbWFnZS13cmFwcGVye2Rpc3BsYXk6aW5saW5lLWJsb2NrfWltZy5hLXRodW1ibmFpbC1sZWZ0e2Zsb2F0OmxlZnQ7bWFyZ2luOjAgMTRweCA0cHggMH1pbWcuYS10aHVtYm5haWwtcmlnaHR7ZmxvYXQ6cmlnaHQ7bWFyZ2luOjAgMCA0cHggMTRweH0uYS1sb2FkaW5nLXN0YXRpY3tiYWNrZ3JvdW5kOiNmM2YzZjM7Ym9yZGVyOjFweCBzb2xpZCAjZjBmMGYwO2JvcmRlci10b3AtY29sb3I6I2VlZTt3aWR0aDo4MCU7aGVpZ2h0OjEyMHB4O21heC13aWR0aDoxMjBweDttYXJnaW46MCBhdXRvO2JvcmRlci1yYWRpdXM6M3B4O2JveC1zaGFkb3c6MCAxcHggN3B4IHJnYmEoMCwwLDAsLjA1KSBpbnNldDtwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6MjAlfS5hLWxvYWRpbmctc3RhdGljLWlubmVye3dpZHRoOjUxcHg7aGVpZ2h0OjUwcHg7YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9BbWF6b25VSUljb25AbGVnYWN5SW1hZ2VzLXNwcml0ZV8xeC02YzQ2MmY1ZGMzYmMzZTQwZDA3ODg1MDI4MTRmYTcwNDMzNTU3MTJhLl9WMl8ucG5nKTtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7YmFja2dyb3VuZC1wb3NpdGlvbjotMTQzcHggLTI5NnB4O21hcmdpbjotMjNweCBhdXRvIDA7cG9zaXRpb246cmVsYXRpdmU7dG9wOjUwJX1hLGE6YWN0aXZlLGE6bGluayxhOnZpc2l0ZWR7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Y29sb3I6IzAwNjZjMH1hLmEtY29sb3ItYmFzZSxhOmFjdGl2ZS5hLWNvbG9yLWJhc2UsYTpsaW5rLmEtY29sb3ItYmFzZSxhOnZpc2l0ZWQuYS1jb2xvci1iYXNle2NvbG9yOiMxMTF9cCBhLHAgYTphY3RpdmUscCBhOmxpbmsscCBhOnZpc2l0ZWR7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZX1hLmEtbGluay1lbXBoYXNpc3twb3NpdGlvbjpyZWxhdGl2ZTtwYWRkaW5nLXJpZ2h0OjlweH1hLmEtbGluay1jaGlsZHtkaXNwbGF5OmlubGluZS1ibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTtwYWRkaW5nLWxlZnQ6OHB4fWEuYS1saW5rLWNoaWxkOmJlZm9yZXtjb250ZW50OlwiXFwyMDNBXCI7Y29sb3I6Izk0OTQ5NDtkaXNwbGF5OmJsb2NrO2ZvbnQtd2VpZ2h0OjcwMDtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjA7dG9wOi0xcHh9YS5hLWxpbmstZXhwYW5kZXJ7ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246cmVsYXRpdmU7cGFkZGluZy1sZWZ0OjExcHh9LmEtZXhwYW5kZXItaW5uZXJ7bWFyZ2luLXRvcDo0cHg7cGFkZGluZy1sZWZ0OjExcHh9LmEtZXhwYW5kZXItaGVhZGVye291dGxpbmU6MH0uYS1zZWN0aW9uLWV4cGFuZGVyLWNvbnRhaW5lcntib3JkZXI6MXB4IHNvbGlkICNkZGQ7bWFyZ2luLXRvcDotMXB4O292ZXJmbG93OmhpZGRlbjtib3JkZXItcmFkaXVzOjB9LmEtc2VjdGlvbi1leHBhbmRlci1jb250YWluZXI6Zmlyc3QtY2hpbGR7Ym9yZGVyLXJhZGl1czo0cHggNHB4IDAgMDttYXJnaW4tdG9wOjB9LmEtc2VjdGlvbi1leHBhbmRlci1jb250YWluZXI6Zmlyc3QtY2hpbGQgYS5hLWxpbmstc2VjdGlvbi1leHBhbmRlcntib3JkZXItcmFkaXVzOjRweCA0cHggMCAwfS5hLXNlY3Rpb24tZXhwYW5kZXItY29udGFpbmVyOmxhc3QtY2hpbGR7Ym9yZGVyLXJhZGl1czowIDAgNHB4IDRweH0uYS1zZWN0aW9uLWV4cGFuZGVyLWNvbnRhaW5lcjpvbmx5LW9mLXR5cGV7Ym9yZGVyLXJhZGl1czo0cHh9LmEtZXhwYW5kZXItYm9yZGVybGVzc3tib3JkZXI6bm9uZX1hLmEtbGluay1zZWN0aW9uLWV4cGFuZGVye2ZvbnQtc2l6ZToxN3B4O2xpbmUtaGVpZ2h0OjEuMjU1O2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246cmVsYXRpdmU7Y29sb3I6IzExMTtiYWNrZ3JvdW5kLWNvbG9yOiNmM2YzZjM7LXdlYmtpdC10cmFuc2l0aW9uOmFsbCAuMXMgbGluZWFyO3RyYW5zaXRpb246YWxsIC4xcyBsaW5lYXJ9YS5hLWxpbmstc2VjdGlvbi1leHBhbmRlcnt0ZXh0LXJlbmRlcmluZzpvcHRpbWl6ZUxlZ2liaWxpdHl9YS5hLWxpbmstc2VjdGlvbi1leHBhbmRlciAuYS1pY29uLXNlY3Rpb24tY29sbGFwc2UsYS5hLWxpbmstc2VjdGlvbi1leHBhbmRlciAuYS1pY29uLXNlY3Rpb24tZXhwYW5ke3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjE2cHg7dG9wOjUwJTttYXJnaW46MDttYXJnaW4tdG9wOi02cHh9YS5hLWxpbmstc2VjdGlvbi1leHBhbmRlcjpmb2N1cyxhLmEtbGluay1zZWN0aW9uLWV4cGFuZGVyOmhvdmVye3RleHQtZGVjb3JhdGlvbjpub25lfWEuYS1saW5rLXNlY3Rpb24tZXhwYW5kZXI6Zm9jdXMgLmEtaWNvbi1zZWN0aW9uLWV4cGFuZCxhLmEtbGluay1zZWN0aW9uLWV4cGFuZGVyOmhvdmVyIC5hLWljb24tc2VjdGlvbi1leHBhbmR7b3BhY2l0eTouNjR9YS5hLWxpbmstc2VjdGlvbi1leHBhbmRlcjpmb2N1cyAuYS1pY29uLXNlY3Rpb24tY29sbGFwc2UsYS5hLWxpbmstc2VjdGlvbi1leHBhbmRlcjpob3ZlciAuYS1pY29uLXNlY3Rpb24tY29sbGFwc2V7b3BhY2l0eTouOTZ9YS5hLWxpbmstc2VjdGlvbi1leHBhbmRlcjpob3Zlcntjb2xvcjojMTExO2JhY2tncm91bmQtY29sb3I6I2U5ZTllOX1hLmEtbGluay1zZWN0aW9uLWV4cGFuZGVyOmZvY3Vze2NvbG9yOiMxMTE7YmFja2dyb3VuZC1jb2xvcjojZTllOWU5fS5hLWV4cGFuZGVyLWJvcmRlcmxlc3MgYS5hLWxpbmstc2VjdGlvbi1leHBhbmRlcntib3gtc2hhZG93Om5vbmU7cGFkZGluZzowIDM5cHggMCAwO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9LmEtZXhwYW5kZXItYm9yZGVybGVzcyBhLmEtbGluay1zZWN0aW9uLWV4cGFuZGVyOmhvdmVye2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9LmEtc2VjdGlvbi1leHBhbmRlci1pbm5lcntib3JkZXItdG9wOjFweCBzb2xpZCAjZGRkO3BhZGRpbmc6MTJweCAxOHB4fS5hLWV4cGFuZGVyLWJvcmRlcmxlc3MgLmEtc2VjdGlvbi1leHBhbmRlci1pbm5lcntib3JkZXItdG9wOm5vbmU7cGFkZGluZzo0cHggMCAwIDB9LmEtZXh0ZW5kZXItdHJpZ2dlcntkaXNwbGF5OmJsb2NrfS5hLWV4dGVuZGVyLXRyaWdnZXIgLmEtZXh0ZW5kZXJ7cGFkZGluZy10b3A6MnB4O3RleHQtZGVjb3JhdGlvbjpub25lO2Rpc3BsYXk6YmxvY2t9LmEtZXhwYW5kZXItcHJvbXB0e3dvcmQtd3JhcDpicmVhay13b3JkfWE6aG92ZXJ7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTtjdXJzb3I6cG9pbnRlcjtjb2xvcjojYzQ1NTAwfWE6aG92ZXIuYS1jb2xvci1iYXNlLGE6aG92ZXIuYS1jb2xvci1zZWNvbmRhcnksYTpob3Zlci5hLWNvbG9yLXRlcnRpYXJ5e2NvbG9yOiNjNDU1MDAhaW1wb3J0YW50fWEuYS1saW5rLXNlY3Rpb24tZXhwYW5kZXJ7cGFkZGluZzoxMXB4IDU0cHggMTFweCAxOHB4fS5hLW1ldGVye292ZXJmbG93OmhpZGRlbjtiYWNrZ3JvdW5kOiNmMmYyZjI7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsI2VlZSwjZjZmNmY2KTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCh0byBib3R0b20sI2VlZSwjZjZmNmY2KTtiYWNrZ3JvdW5kLWNvbG9yOiNmM2YzZjM7aGVpZ2h0OjE3cHh9LmEtbWV0ZXIgLmEtbWV0ZXItYmFyey13ZWJraXQtdHJhbnNpdGlvbjp3aWR0aCAuNXMgZWFzZTt0cmFuc2l0aW9uOndpZHRoIC41cyBlYXNlO2Zsb2F0OmxlZnQ7Zm9udC1zaXplOjA7aGVpZ2h0OjEwMCU7d2lkdGg6MH0uYS1tZXRlciAuYS1tZXRlci1iYXI6YmVmb3Jle2NvbnRlbnQ6XCJcIjtkaXNwbGF5OmJsb2NrO2ZvbnQtc2l6ZTowO2hlaWdodDoxcHg7bWFyZ2luOjFweH0uYS1tZXRlciAuYS1tZXRlci1iYXJ7Ym9yZGVyLXJhZGl1czoxcHg7YmFja2dyb3VuZDojZmIwO2JhY2tncm91bmQ6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCNmZmNlMDAsI2ZmYTcwMCk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCNmZmNlMDAsI2ZmYTcwMCk7YmFja2dyb3VuZC1jb2xvcjojZmZjZTAwfS5hLW1ldGVyIC5hLW1ldGVyLWJhcjpiZWZvcmV7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LC4yNSl9LmEtbWV0ZXIuYS1pbmFjdGl2ZSAuYS1tZXRlci1iYXJ7YmFja2dyb3VuZDojYjNiM2IzO2JhY2tncm91bmQ6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCNiY2JjYmMsI2FhYSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCNiY2JjYmMsI2FhYSk7YmFja2dyb3VuZC1jb2xvcjojZGRkfS5hLW1ldGVyLXdpdGgtdHh0e292ZXJmbG93OmhpZGRlbjtiYWNrZ3JvdW5kOiNmMmYyZjI7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsI2VlZSwjZjZmNmY2KTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCh0byBib3R0b20sI2VlZSwjZjZmNmY2KTtiYWNrZ3JvdW5kLWNvbG9yOiNmM2YzZjM7aGVpZ2h0OjE3cHg7cG9zaXRpb246cmVsYXRpdmV9LmEtbWV0ZXItd2l0aC10eHQgLmEtbWV0ZXItYmFyey13ZWJraXQtdHJhbnNpdGlvbjp3aWR0aCAuNXMgZWFzZTt0cmFuc2l0aW9uOndpZHRoIC41cyBlYXNlO2Zsb2F0OmxlZnQ7Zm9udC1zaXplOjA7aGVpZ2h0OjEwMCU7d2lkdGg6MH0uYS1tZXRlci13aXRoLXR4dCAuYS1tZXRlci1iYXI6YmVmb3Jle2NvbnRlbnQ6XCJcIjtkaXNwbGF5OmJsb2NrO2ZvbnQtc2l6ZTowO2hlaWdodDoxcHg7bWFyZ2luOjFweH0uYS1tZXRlci13aXRoLXR4dCAuYS1tZXRlci1iYXJ7Ym9yZGVyLXJhZGl1czoxcHg7YmFja2dyb3VuZDojZmIwO2JhY2tncm91bmQ6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCNmZmNlMDAsI2ZmYTcwMCk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCNmZmNlMDAsI2ZmYTcwMCl9LmEtbWV0ZXItd2l0aC10eHQgLmEtbWV0ZXItYmFyOmJlZm9yZXtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsLjI1KX0uYS1tZXRlci13aXRoLXR4dCAuYS1tZXRlci1wcm9ncmVzcy10eHR7Y29sb3I6IzExMTtsaW5lLWhlaWdodDoxN3B4O292ZXJmbG93OmhpZGRlbjtwb3NpdGlvbjphYnNvbHV0ZTt0ZXh0LWFsaWduOmNlbnRlcjt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO3doaXRlLXNwYWNlOm5vd3JhcDt3aWR0aDoxMDAlfS5hLW1ldGVyLXdpdGgtdHh0IC5hLW1ldGVyLXByb2dyZXNzLXR4dDpob3Zlcnt0ZXh0LWRlY29yYXRpb246bm9uZX0uYS1tZXRlci13aXRoLXR4dC5hLWluYWN0aXZlIC5hLW1ldGVyLWJhcntiYWNrZ3JvdW5kOiNiM2IzYjM7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsI2JjYmNiYywjYWFhKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCh0byBib3R0b20sI2JjYmNiYywjYWFhKTtiYWNrZ3JvdW5kLWNvbG9yOiNkZGR9dHIuYS1oaXN0b2dyYW0tcm93e2NvbG9yOiM3Njc2NzZ9dHIuYS1oaXN0b2dyYW0tcm93IHRke3BhZGRpbmc6MXB4IDNweH10ci5hLWhpc3RvZ3JhbS1yb3cgdGQ6Zmlyc3QtY2hpbGR7cGFkZGluZy1sZWZ0OjB9dHIuYS1oaXN0b2dyYW0tcm93IHRkOmxhc3QtY2hpbGR7cGFkZGluZy1yaWdodDowfXRyLmEtaGlzdG9ncmFtLXJvdzpmaXJzdC1jaGlsZCB0ZHtwYWRkaW5nLXRvcDowfXRyLmEtaGlzdG9ncmFtLXJvdzpsYXN0LWNoaWxkIHRke3BhZGRpbmctYm90dG9tOjB9dHIuYS1oaXN0b2dyYW0tcm93OmFjdGl2ZSBhLHRyLmEtaGlzdG9ncmFtLXJvdzpob3ZlciBhe2NvbG9yOiNjNDU1MDA7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZX10ci5hLWhpc3RvZ3JhbS1yb3c6YWN0aXZlIC5hLW1ldGVye2JhY2tncm91bmQtY29sb3I6I2ZhZjFkYTtiYWNrZ3JvdW5kOiNmYWYxZGE7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsI2ZhZjFkYSwjZmFmMWRhKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCh0byBib3R0b20sI2ZhZjFkYSwjZmFmMWRhKX10ci5hLWhpc3RvZ3JhbS1yb3cuYS1hY3RpdmV7Y29sb3I6IzExMX10ci5hLWhpc3RvZ3JhbS1yb3cuYS1hY3RpdmUgYXtjb2xvcjojYzQ1NTAwO2ZvbnQtd2VpZ2h0OjcwMH10ci5hLWhpc3RvZ3JhbS1yb3cuYS1hY3RpdmUgLmEtbWV0ZXJ7YmFja2dyb3VuZC1jb2xvcjojZmFmMWRhO2JhY2tncm91bmQ6I2ZhZjFkYTtiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwjZmFmMWRhLCNmYWYxZGEpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwjZmFmMWRhLCNmYWYxZGEpfXRyLmEtaGlzdG9ncmFtLXJvdy5hLWluYWN0aXZlIC5hLW1ldGVye2JhY2tncm91bmQtY29sb3I6I2YzZjNmMztiYWNrZ3JvdW5kOiNmMmYyZjI7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsI2VlZSwjZjZmNmY2KTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCh0byBib3R0b20sI2VlZSwjZjZmNmY2KX10ci5hLWhpc3RvZ3JhbS1yb3cuYS1pbmFjdGl2ZSAuYS1tZXRlciAuYS1tZXRlci1iYXJ7YmFja2dyb3VuZC1jb2xvcjojZmZhNzAwO2JhY2tncm91bmQ6I2ZmZDA3NjtiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwjZmZkODhmLCNmZmM3NWMpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwjZmZkODhmLCNmZmM3NWMpfXRyLmEtaGlzdG9ncmFtLXJvdy5hLWRpc2FibGVkIC5hLW1ldGVye2JhY2tncm91bmQtY29sb3I6I2YzZjNmMztiYWNrZ3JvdW5kOiNmMmYyZjI7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsI2VlZSwjZjZmNmY2KTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCh0byBib3R0b20sI2VlZSwjZjZmNmY2KX10ci5hLWhpc3RvZ3JhbS1yb3cuYS1kaXNhYmxlZCAuYS1tZXRlciAuYS1tZXRlci1iYXJ7dmlzaWJpbGl0eTpoaWRkZW59LmEtbWV0ZXJ7Ym9yZGVyLXJhZGl1czoxcHg7Ym94LXNoYWRvdzppbnNldCAwIDFweCAycHggcmdiYSgwLDAsMCwuNCksaW5zZXQgMCAwIDAgMXB4IHJnYmEoMCwwLDAsLjEpfS5hLW1ldGVyIC5hLW1ldGVyLWJhcntib3gtc2hhZG93Omluc2V0IDAgMCAwIDFweCByZ2JhKDAsMCwwLC4yNSksaW5zZXQgMCAtMXB4IDAgcmdiYSgwLDAsMCwuMDUpfS5hLW1ldGVyLXdpdGgtdHh0e2JvcmRlci1yYWRpdXM6MXB4O2JveC1zaGFkb3c6aW5zZXQgMCAxcHggMnB4IHJnYmEoMCwwLDAsLjQpLGluc2V0IDAgMCAwIDFweCByZ2JhKDAsMCwwLC4xKX0uYS1tZXRlci13aXRoLXR4dCAuYS1tZXRlci1iYXJ7Ym94LXNoYWRvdzppbnNldCAwIDAgMCAxcHggcmdiYSgwLDAsMCwuMjUpLGluc2V0IDAgLTFweCAwIHJnYmEoMCwwLDAsLjA1KX0uYS1qcy5hLXRyYW5zaXRpb24gLmEtbWV0ZXItYW5pbWF0ZSAuYS1tZXRlci11bmZpbGxlZHstd2Via2l0LXRyYW5zaXRpb246bm9uZTt0cmFuc2l0aW9uOm5vbmU7d2lkdGg6MCFpbXBvcnRhbnR9LmEtanMuYS10cmFuc2l0aW9uIC5hLW1ldGVyLWFuaW1hdGUgLmEtcG9wb3Zlci1jb250ZW50IC5hLW1ldGVyLWJhcjpub3QoLmEtbWFudWFsLWFuaW1hdGlvbil7dmlzaWJpbGl0eTpoaWRkZW59LmEtanMuYS10cmFuc2l0aW9uIC5hLW1ldGVyLWFuaW1hdGUgLmEtcG9wb3Zlci1jb250ZW50IC5hLW1ldGVyLWJhci5hLW1ldGVyLWZpbGxlZCwuYS1qcy5hLXRyYW5zaXRpb24gLmEtbWV0ZXItYW5pbWF0ZSAuYS1wb3BvdmVyLWNvbnRlbnQgLmEtbWV0ZXItYmFyLmEtbWV0ZXItdW5maWxsZWR7dmlzaWJpbGl0eTp2aXNpYmxlfXRhYmxle21hcmdpbi1ib3R0b206MThweDtib3JkZXItY29sbGFwc2U6Y29sbGFwc2U7d2lkdGg6MTAwJX10YWJsZTpsYXN0LWNoaWxke21hcmdpbi1ib3R0b206MCFpbXBvcnRhbnR9dGFibGUuYS1hbGlnbi10b3AgdGQsdGFibGUuYS1hbGlnbi10b3AgdGh7dmVydGljYWwtYWxpZ246dG9wfXRhYmxlLmEtYWxpZ24tY2VudGVyIHRkLHRhYmxlLmEtYWxpZ24tY2VudGVyIHRoe3ZlcnRpY2FsLWFsaWduOm1pZGRsZX10YWJsZS5hLWFsaWduLWJvdHRvbSB0ZCx0YWJsZS5hLWFsaWduLWJvdHRvbSB0aHt2ZXJ0aWNhbC1hbGlnbjpib3R0b219dGFibGUuYS1ib3JkZXJlZHttYXJnaW4tYm90dG9tOjIycHg7Ym9yZGVyOjFweCBzb2xpZCAjZTdlN2U3O2JvcmRlci10b3AtY29sb3I6I2VhZWFlYTtib3JkZXItYm90dG9tOm5vbmU7Ym9yZGVyLXNwYWNpbmc6MH10YWJsZS5hLWJvcmRlcmVkIHRkLHRhYmxlLmEtYm9yZGVyZWQgdGh7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2VhZWFlYX10YWJsZS5hLWJvcmRlcmVkIHRyOmZpcnN0LWNoaWxkIHRoe2JhY2tncm91bmQ6I2YwZjBmMDtiYWNrZ3JvdW5kOiNmM2YzZjM7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsI2Y4ZjhmOCwjZWVlKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCh0byBib3R0b20sI2Y4ZjhmOCwjZWVlKTtib3gtc2hhZG93OjAgMXB4IDAgcmdiYSgyNTUsMjU1LDI1NSwuNSkgaW5zZXQ7Ym9yZGVyLWNvbG9yOiNlN2U3ZTc7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RkZH10YWJsZS5hLWJvcmRlcmVkIHRyOmxhc3QtY2hpbGQgdGR7Ym9yZGVyLWNvbG9yOiNlN2U3ZTd9dGFibGUuYS1ib3JkZXJlZC5hLXZlcnRpY2FsLXN0cmlwZXN7Ym9yZGVyLXJpZ2h0Om5vbmV9dGFibGUuYS1ib3JkZXJlZC5hLXZlcnRpY2FsLXN0cmlwZXMgdHIgdGQsdGFibGUuYS1ib3JkZXJlZC5hLXZlcnRpY2FsLXN0cmlwZXMgdHIgdGh7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjZWFlYWVhfXRhYmxlLmEtYm9yZGVyZWQuYS12ZXJ0aWNhbC1zdHJpcGVzIHRyIHRkOmxhc3QtY2hpbGQsdGFibGUuYS1ib3JkZXJlZC5hLXZlcnRpY2FsLXN0cmlwZXMgdHIgdGg6bGFzdC1jaGlsZHtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNlN2U3ZTd9dGFibGUuYS1ib3JkZXJlZC5hLXZlcnRpY2FsLXN0cmlwZXMgdGQ6bnRoLWNoaWxkKGV2ZW4pLHRhYmxlLmEtYm9yZGVyZWQuYS12ZXJ0aWNhbC1zdHJpcGVzIHRoOm50aC1jaGlsZChldmVuKXtiYWNrZ3JvdW5kLWNvbG9yOiNmNmY2ZjZ9dGFibGUuYS1ib3JkZXJlZC5hLXZlcnRpY2FsLXN0cmlwZXMgdHI6bnRoLWNoaWxkKGV2ZW4pe2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9dGFibGUuYS1rZXl2YWx1ZXttYXJnaW4tYm90dG9tOjIycHg7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2U3ZTdlN310YWJsZS5hLWtleXZhbHVlIHRoe2JhY2tncm91bmQtY29sb3I6I2YzZjNmMztjb2xvcjojMTExO2ZvbnQtd2VpZ2h0OjQwMH10YWJsZS5hLWtleXZhbHVlIHRkLHRhYmxlLmEta2V5dmFsdWUgdGh7Ym9yZGVyLXRvcDoxcHggc29saWQgI2U3ZTdlN310ZCx0aHt2ZXJ0aWNhbC1hbGlnbjp0b3B9dGQ6Zmlyc3QtY2hpbGQsdGg6Zmlyc3QtY2hpbGR7cGFkZGluZy1sZWZ0OjB9dGQ6bGFzdC1jaGlsZCx0aDpsYXN0LWNoaWxke3BhZGRpbmctcmlnaHQ6MH10aHt0ZXh0LWFsaWduOmxlZnR9dHI6bGFzdC1jaGlsZCB0ZCx0cjpsYXN0LWNoaWxkIHRoe3BhZGRpbmctYm90dG9tOjB9dHI6Zmlyc3QtY2hpbGQgdGQsdHI6Zmlyc3QtY2hpbGQgdGh7cGFkZGluZy10b3A6MH0uYS10ZXh0LWNlbnRlciB0YWJsZXttYXJnaW4tbGVmdDphdXRvO21hcmdpbi1yaWdodDphdXRvfXRkLHRoe3BhZGRpbmc6M3B4fXRhYmxlLmEtYm9yZGVyZWQgdGQsdGFibGUuYS1ib3JkZXJlZCB0aHtwYWRkaW5nOjdweCAxNHB4IDZweH10YWJsZS5hLWJvcmRlcmVkIHRyOm50aC1jaGlsZChldmVuKXtiYWNrZ3JvdW5kLWNvbG9yOiNmNmY2ZjZ9dGFibGUuYS1saW5laXRlbSB0ZCx0YWJsZS5hLWxpbmVpdGVtIHRoe3BhZGRpbmc6MCAzcHh9dGFibGUuYS1saW5laXRlbSB0ZDpmaXJzdC1jaGlsZCx0YWJsZS5hLWxpbmVpdGVtIHRoOmZpcnN0LWNoaWxke3BhZGRpbmctbGVmdDowfXRhYmxlLmEtbGluZWl0ZW0gdGQ6bGFzdC1jaGlsZCx0YWJsZS5hLWxpbmVpdGVtIHRoOmxhc3QtY2hpbGR7cGFkZGluZy1yaWdodDowfXRhYmxlLmEta2V5dmFsdWUgdGQsdGFibGUuYS1rZXl2YWx1ZSB0aHtwYWRkaW5nOjdweCAxNHB4IDZweH0uYS11bm9yZGVyZWQtbGlzdCx1bHttYXJnaW46MCAwIDAgMThweDtjb2xvcjojMTExfS5hLXVub3JkZXJlZC1saXN0IGxpLHVsIGxpe2xpc3Qtc3R5bGU6ZGlzY30uYS11bm9yZGVyZWQtbGlzdCAuYS11bm9yZGVyZWQtbGlzdCBsaSwuYS11bm9yZGVyZWQtbGlzdCB1bCBsaSx1bCAuYS11bm9yZGVyZWQtbGlzdCBsaSx1bCB1bCBsaXtsaXN0LXN0eWxlOmNpcmNsZX0uYS1vcmRlcmVkLWxpc3Qsb2x7bWFyZ2luOjAgMCAwIDIwcHg7Y29sb3I6IzExMX0uYS1vcmRlcmVkLWxpc3QgbGksb2wgbGl7bGlzdC1zdHlsZTpkZWNpbWFsfS5hLW9yZGVyZWQtbGlzdCAuYS1vcmRlcmVkLWxpc3QgbGksLmEtb3JkZXJlZC1saXN0IG9sIGxpLG9sIC5hLW9yZGVyZWQtbGlzdCBsaSxvbCBvbCBsaXtsaXN0LXN0eWxlOmxvd2VyLWFscGhhfS5hLW9yZGVyZWQtbGlzdCAuYS1vcmRlcmVkLWxpc3QgLmEtb3JkZXJlZC1saXN0IGxpLC5hLW9yZGVyZWQtbGlzdCAuYS1vcmRlcmVkLWxpc3Qgb2wgbGksLmEtb3JkZXJlZC1saXN0IG9sIC5hLW9yZGVyZWQtbGlzdCBsaSwuYS1vcmRlcmVkLWxpc3Qgb2wgb2wgbGksb2wgLmEtb3JkZXJlZC1saXN0IC5hLW9yZGVyZWQtbGlzdCBsaSxvbCAuYS1vcmRlcmVkLWxpc3Qgb2wgbGksb2wgb2wgLmEtb3JkZXJlZC1saXN0IGxpLG9sIG9sIG9sIGxpe2xpc3Qtc3R5bGU6bG93ZXItcm9tYW59LmEtb3JkZXJlZC1saXN0IC5hLXVub3JkZXJlZC1saXN0IGxpLC5hLW9yZGVyZWQtbGlzdCB1bCBsaSxvbCAuYS11bm9yZGVyZWQtbGlzdCBsaSxvbCB1bCBsaXtsaXN0LXN0eWxlLXR5cGU6ZGlzY30uYS1vcmRlcmVkLWxpc3QgLmEtdW5vcmRlcmVkLWxpc3QgLmEtdW5vcmRlcmVkLWxpc3QgbGksLmEtb3JkZXJlZC1saXN0IC5hLXVub3JkZXJlZC1saXN0IHVsIGxpLC5hLW9yZGVyZWQtbGlzdCB1bCAuYS11bm9yZGVyZWQtbGlzdCBsaSwuYS1vcmRlcmVkLWxpc3QgdWwgdWwgbGksb2wgLmEtdW5vcmRlcmVkLWxpc3QgLmEtdW5vcmRlcmVkLWxpc3QgbGksb2wgLmEtdW5vcmRlcmVkLWxpc3QgdWwgbGksb2wgdWwgLmEtdW5vcmRlcmVkLWxpc3QgbGksb2wgdWwgdWwgbGl7bGlzdC1zdHlsZS10eXBlOmNpcmNsZX0uYS1vcmRlcmVkLWxpc3QsLmEtdW5vcmRlcmVkLWxpc3Qsb2wsdWx7cGFkZGluZzowfS5hLW9yZGVyZWQtbGlzdCAuYS1saXN0LWl0ZW0sLmEtdW5vcmRlcmVkLWxpc3QgLmEtbGlzdC1pdGVtLG9sIC5hLWxpc3QtaXRlbSx1bCAuYS1saXN0LWl0ZW17Y29sb3I6IzExMX0uYS1vcmRlcmVkLWxpc3QgbGksLmEtdW5vcmRlcmVkLWxpc3QgbGksb2wgbGksdWwgbGl7d29yZC13cmFwOmJyZWFrLXdvcmQ7bWFyZ2luOjB9LmEtb3JkZXJlZC1saXN0IGxpLmEtbGlzdC1tb3JlLC5hLXVub3JkZXJlZC1saXN0IGxpLmEtbGlzdC1tb3JlLG9sIGxpLmEtbGlzdC1tb3JlLHVsIGxpLmEtbGlzdC1tb3Jle2xpc3Qtc3R5bGU6bm9uZX0uYS1vcmRlcmVkLWxpc3QuYS1ub3N0eWxlLC5hLXVub3JkZXJlZC1saXN0LmEtbm9zdHlsZSxvbC5hLW5vc3R5bGUsdWwuYS1ub3N0eWxle21hcmdpbi1sZWZ0OjA7Y29sb3I6IzExMX0uYS1vcmRlcmVkLWxpc3QuYS1ub3N0eWxlIGxpLC5hLXVub3JkZXJlZC1saXN0LmEtbm9zdHlsZSBsaSxvbC5hLW5vc3R5bGUgbGksdWwuYS1ub3N0eWxlIGxpe2xpc3Qtc3R5bGU6bm9uZX0uYS1vcmRlcmVkLWxpc3QuYS1ub3N0eWxlIC5hLXVub3JkZXJlZC1saXN0LC5hLW9yZGVyZWQtbGlzdC5hLW5vc3R5bGUgdWwsLmEtdW5vcmRlcmVkLWxpc3QuYS1ub3N0eWxlIC5hLXVub3JkZXJlZC1saXN0LC5hLXVub3JkZXJlZC1saXN0LmEtbm9zdHlsZSB1bCxvbC5hLW5vc3R5bGUgLmEtdW5vcmRlcmVkLWxpc3Qsb2wuYS1ub3N0eWxlIHVsLHVsLmEtbm9zdHlsZSAuYS11bm9yZGVyZWQtbGlzdCx1bC5hLW5vc3R5bGUgdWx7bWFyZ2luLWxlZnQ6MTRweH0uYS1vcmRlcmVkLWxpc3QuYS1ub3N0eWxlIC5hLXVub3JkZXJlZC1saXN0IGxpLC5hLW9yZGVyZWQtbGlzdC5hLW5vc3R5bGUgdWwgbGksLmEtdW5vcmRlcmVkLWxpc3QuYS1ub3N0eWxlIC5hLXVub3JkZXJlZC1saXN0IGxpLC5hLXVub3JkZXJlZC1saXN0LmEtbm9zdHlsZSB1bCBsaSxvbC5hLW5vc3R5bGUgLmEtdW5vcmRlcmVkLWxpc3QgbGksb2wuYS1ub3N0eWxlIHVsIGxpLHVsLmEtbm9zdHlsZSAuYS11bm9yZGVyZWQtbGlzdCBsaSx1bC5hLW5vc3R5bGUgdWwgbGl7bGlzdC1zdHlsZTpub25lfS5hLW9yZGVyZWQtbGlzdC5hLWxpc3QtbGluaywuYS11bm9yZGVyZWQtbGlzdC5hLWxpc3QtbGluayxvbC5hLWxpc3QtbGluayx1bC5hLWxpc3QtbGlua3ttYXJnaW46LTJweCAwIDB9LmEtb3JkZXJlZC1saXN0LmEtbGlzdC1saW5rIGEsLmEtdW5vcmRlcmVkLWxpc3QuYS1saXN0LWxpbmsgYSxvbC5hLWxpc3QtbGluayBhLHVsLmEtbGlzdC1saW5rIGF7Y29sb3I6IzExMTtkaXNwbGF5OmJsb2NrfS5hLW9yZGVyZWQtbGlzdC5hLWxpc3QtbGluayBsaSwuYS11bm9yZGVyZWQtbGlzdC5hLWxpc3QtbGluayBsaSxvbC5hLWxpc3QtbGluayBsaSx1bC5hLWxpc3QtbGluayBsaXtkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOnJlbGF0aXZlfS5hLW9yZGVyZWQtbGlzdC5hLWxpc3QtbGluayBsaSBhLC5hLXVub3JkZXJlZC1saXN0LmEtbGlzdC1saW5rIGxpIGEsb2wuYS1saXN0LWxpbmsgbGkgYSx1bC5hLWxpc3QtbGluayBsaSBhe3BhZGRpbmc6MnB4IDB9LmEtb3JkZXJlZC1saXN0LmEtbGlzdC1saW5rIGxpLmEtc2VsZWN0ZWQgYSwuYS11bm9yZGVyZWQtbGlzdC5hLWxpc3QtbGluayBsaS5hLXNlbGVjdGVkIGEsb2wuYS1saXN0LWxpbmsgbGkuYS1zZWxlY3RlZCBhLHVsLmEtbGlzdC1saW5rIGxpLmEtc2VsZWN0ZWQgYXtjb2xvcjojYzQ1NTAwfS5hLW9yZGVyZWQtbGlzdC5hLWxpc3QtbGluayBociwuYS11bm9yZGVyZWQtbGlzdC5hLWxpc3QtbGluayBocixvbC5hLWxpc3QtbGluayBocix1bC5hLWxpc3QtbGluayBocnttYXJnaW46N3B4IDB9LmEtb3JkZXJlZC1saXN0LmEtaG9yaXpvbnRhbCwuYS11bm9yZGVyZWQtbGlzdC5hLWhvcml6b250YWwsb2wuYS1ob3Jpem9udGFsLHVsLmEtaG9yaXpvbnRhbHtkaXNwbGF5OmJsb2NrO21hcmdpbi1sZWZ0OjB9LmEtb3JkZXJlZC1saXN0LmEtaG9yaXpvbnRhbDphZnRlciwuYS1vcmRlcmVkLWxpc3QuYS1ob3Jpem9udGFsOmJlZm9yZSwuYS11bm9yZGVyZWQtbGlzdC5hLWhvcml6b250YWw6YWZ0ZXIsLmEtdW5vcmRlcmVkLWxpc3QuYS1ob3Jpem9udGFsOmJlZm9yZSxvbC5hLWhvcml6b250YWw6YWZ0ZXIsb2wuYS1ob3Jpem9udGFsOmJlZm9yZSx1bC5hLWhvcml6b250YWw6YWZ0ZXIsdWwuYS1ob3Jpem9udGFsOmJlZm9yZXtkaXNwbGF5OnRhYmxlO2NvbnRlbnQ6XCJcIjtsaW5lLWhlaWdodDowO2ZvbnQtc2l6ZTowfS5hLW9yZGVyZWQtbGlzdC5hLWhvcml6b250YWw6YWZ0ZXIsLmEtdW5vcmRlcmVkLWxpc3QuYS1ob3Jpem9udGFsOmFmdGVyLG9sLmEtaG9yaXpvbnRhbDphZnRlcix1bC5hLWhvcml6b250YWw6YWZ0ZXJ7Y2xlYXI6Ym90aH0uYS1vcmRlcmVkLWxpc3QuYS1ob3Jpem9udGFsIGxpLC5hLXVub3JkZXJlZC1saXN0LmEtaG9yaXpvbnRhbCBsaSxvbC5hLWhvcml6b250YWwgbGksdWwuYS1ob3Jpem9udGFsIGxpe2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbjowIDEwcHggMCAwfS5hLW9yZGVyZWQtbGlzdC5hLWhvcml6b250YWwgbGkuYS1sYXN0LC5hLW9yZGVyZWQtbGlzdC5hLWhvcml6b250YWwgbGk6bGFzdC1jaGlsZCwuYS11bm9yZGVyZWQtbGlzdC5hLWhvcml6b250YWwgbGkuYS1sYXN0LC5hLXVub3JkZXJlZC1saXN0LmEtaG9yaXpvbnRhbCBsaTpsYXN0LWNoaWxkLG9sLmEtaG9yaXpvbnRhbCBsaS5hLWxhc3Qsb2wuYS1ob3Jpem9udGFsIGxpOmxhc3QtY2hpbGQsdWwuYS1ob3Jpem9udGFsIGxpLmEtbGFzdCx1bC5hLWhvcml6b250YWwgbGk6bGFzdC1jaGlsZHttYXJnaW4tcmlnaHQ6MH0uYS1vcmRlcmVkLWxpc3QuYS1ob3Jpem9udGFsLmEtc2l6ZS1zbWFsbCBsaSwuYS11bm9yZGVyZWQtbGlzdC5hLWhvcml6b250YWwuYS1zaXplLXNtYWxsIGxpLG9sLmEtaG9yaXpvbnRhbC5hLXNpemUtc21hbGwgbGksdWwuYS1ob3Jpem9udGFsLmEtc2l6ZS1zbWFsbCBsaXtsaW5lLWhlaWdodDoxNHB4fS5hLXVub3JkZXJlZC1saXN0K3AsdWwrcHttYXJnaW4tdG9wOi00cHh9LmEtb3JkZXJlZC1saXN0K3Asb2wrcHttYXJnaW4tdG9wOi00cHh9LmEtZGVmaW5pdGlvbi1saXN0K3AsZGwrcHttYXJnaW4tdG9wOi00cHh9LmEtdW5vcmRlcmVkLWxpc3QuYS1ib3gtbGlzdCAuYS10b3VjaC1tdWx0aS1zZWxlY3QsLmEtdW5vcmRlcmVkLWxpc3QuYS1ib3gtbGlzdCBhLHVsLmEtYm94LWxpc3QgLmEtdG91Y2gtbXVsdGktc2VsZWN0LHVsLmEtYm94LWxpc3QgYXtkaXNwbGF5OmJsb2NrO3BhZGRpbmc6MTRweCAxOHB4O3RleHQtZGVjb3JhdGlvbjpub25lfS5hLXVub3JkZXJlZC1saXN0LmEtYm94LWxpc3QgLmEtdG91Y2gtbXVsdGktc2VsZWN0OmFjdGl2ZSwuYS11bm9yZGVyZWQtbGlzdC5hLWJveC1saXN0IGE6YWN0aXZlLHVsLmEtYm94LWxpc3QgLmEtdG91Y2gtbXVsdGktc2VsZWN0OmFjdGl2ZSx1bC5hLWJveC1saXN0IGE6YWN0aXZle2JhY2tncm91bmQtY29sb3I6I2Y2ZjZmNiFpbXBvcnRhbnR9LmEtdW5vcmRlcmVkLWxpc3QuYS1ib3gtbGlzdCBhLmEtdG91Y2gtbGluay1ub2JvcmRlcix1bC5hLWJveC1saXN0IGEuYS10b3VjaC1saW5rLW5vYm9yZGVye3BhZGRpbmc6MH0uYS11bm9yZGVyZWQtbGlzdC5hLWJveC1saXN0IGxpLHVsLmEtYm94LWxpc3QgbGl7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2U3ZTdlN30uYS11bm9yZGVyZWQtbGlzdC5hLWJveC1saXN0IGxpIC5hLWJveCwuYS11bm9yZGVyZWQtbGlzdC5hLWJveC1saXN0IGxpIC5hLWJveC1pbm5lcix1bC5hLWJveC1saXN0IGxpIC5hLWJveCx1bC5hLWJveC1saXN0IGxpIC5hLWJveC1pbm5lcntib3JkZXItcmFkaXVzOjB9LmEtdW5vcmRlcmVkLWxpc3QuYS1ib3gtbGlzdCBsaS5hLWxhc3QsLmEtdW5vcmRlcmVkLWxpc3QuYS1ib3gtbGlzdCBsaTpsYXN0LWNoaWxkLHVsLmEtYm94LWxpc3QgbGkuYS1sYXN0LHVsLmEtYm94LWxpc3QgbGk6bGFzdC1jaGlsZHtib3JkZXItYm90dG9tOm5vbmV9LmEtdW5vcmRlcmVkLWxpc3QuYS1ib3gtbGlzdCBsaS5hLWxhc3QgLmEtYm94LC5hLXVub3JkZXJlZC1saXN0LmEtYm94LWxpc3QgbGkuYS1sYXN0IC5hLWJveC1pbm5lciwuYS11bm9yZGVyZWQtbGlzdC5hLWJveC1saXN0IGxpLmEtbGFzdD5hLC5hLXVub3JkZXJlZC1saXN0LmEtYm94LWxpc3QgbGk6bGFzdC1jaGlsZCAuYS1ib3gsLmEtdW5vcmRlcmVkLWxpc3QuYS1ib3gtbGlzdCBsaTpsYXN0LWNoaWxkIC5hLWJveC1pbm5lciwuYS11bm9yZGVyZWQtbGlzdC5hLWJveC1saXN0IGxpOmxhc3QtY2hpbGQ+YSx1bC5hLWJveC1saXN0IGxpLmEtbGFzdCAuYS1ib3gsdWwuYS1ib3gtbGlzdCBsaS5hLWxhc3QgLmEtYm94LWlubmVyLHVsLmEtYm94LWxpc3QgbGkuYS1sYXN0PmEsdWwuYS1ib3gtbGlzdCBsaTpsYXN0LWNoaWxkIC5hLWJveCx1bC5hLWJveC1saXN0IGxpOmxhc3QtY2hpbGQgLmEtYm94LWlubmVyLHVsLmEtYm94LWxpc3QgbGk6bGFzdC1jaGlsZD5he2JvcmRlci1yYWRpdXM6MCAwIDNweCAzcHh9LmEtdW5vcmRlcmVkLWxpc3QuYS1ib3gtbGlzdCBsaTpmaXJzdC1jaGlsZCAuYS1ib3gsLmEtdW5vcmRlcmVkLWxpc3QuYS1ib3gtbGlzdCBsaTpmaXJzdC1jaGlsZCAuYS1ib3gtaW5uZXIsLmEtdW5vcmRlcmVkLWxpc3QuYS1ib3gtbGlzdCBsaTpmaXJzdC1jaGlsZD5hLHVsLmEtYm94LWxpc3QgbGk6Zmlyc3QtY2hpbGQgLmEtYm94LHVsLmEtYm94LWxpc3QgbGk6Zmlyc3QtY2hpbGQgLmEtYm94LWlubmVyLHVsLmEtYm94LWxpc3QgbGk6Zmlyc3QtY2hpbGQ+YXtib3JkZXItcmFkaXVzOjNweCAzcHggMCAwfS5hLWRlZmluaXRpb24tbGlzdCxkbHtkaXNwbGF5OmJsb2NrO3BhZGRpbmc6MDttYXJnaW46MCAwIDE4cHggMH0uYS1kZWZpbml0aW9uLWxpc3Q6YWZ0ZXIsLmEtZGVmaW5pdGlvbi1saXN0OmJlZm9yZSxkbDphZnRlcixkbDpiZWZvcmV7ZGlzcGxheTp0YWJsZTtjb250ZW50OlwiXCI7bGluZS1oZWlnaHQ6MDtmb250LXNpemU6MH0uYS1kZWZpbml0aW9uLWxpc3Q6YWZ0ZXIsZGw6YWZ0ZXJ7Y2xlYXI6Ym90aH0uYS1kZWZpbml0aW9uLWxpc3Q6bGFzdC1jaGlsZCxkbDpsYXN0LWNoaWxke21hcmdpbi1ib3R0b206MCFpbXBvcnRhbnR9LmEtZGVmaW5pdGlvbi1saXN0IGRkLC5hLWRlZmluaXRpb24tbGlzdCBkdCxkbCBkZCxkbCBkdHtkaXNwbGF5OmlubGluZS1ibG9jaztmbG9hdDpsZWZ0O3BhZGRpbmc6MDttYXJnaW46MH0uYS1kZWZpbml0aW9uLWxpc3QgZGQrZGQsLmEtZGVmaW5pdGlvbi1saXN0IGRkK2R0LGRsIGRkK2RkLGRsIGRkK2R0e2NsZWFyOmJvdGh9LmEtZGVmaW5pdGlvbi1saXN0IGRkLGRsIGRke21hcmdpbi1sZWZ0Oi4zODVlbTt6b29tOjF9LmEtZGVmaW5pdGlvbi1saXN0IGR0LGRsIGR0e2ZvbnQtd2VpZ2h0OjcwMH0uYS1vcmRlcmVkLWxpc3QuYS1ob3Jpem9udGFsLmEtYnV0dG9uLWxpc3QsLmEtdW5vcmRlcmVkLWxpc3QuYS1ob3Jpem9udGFsLmEtYnV0dG9uLWxpc3Qsb2wuYS1ob3Jpem9udGFsLmEtYnV0dG9uLWxpc3QsdWwuYS1ob3Jpem9udGFsLmEtYnV0dG9uLWxpc3R7bWFyZ2luLWxlZnQ6LTZweH0uYS1vcmRlcmVkLWxpc3QuYS1ob3Jpem9udGFsLmEtYnV0dG9uLWxpc3QgbGksLmEtdW5vcmRlcmVkLWxpc3QuYS1ob3Jpem9udGFsLmEtYnV0dG9uLWxpc3QgbGksb2wuYS1ob3Jpem9udGFsLmEtYnV0dG9uLWxpc3QgbGksdWwuYS1ob3Jpem9udGFsLmEtYnV0dG9uLWxpc3QgbGl7bWFyZ2luLWxlZnQ6NnB4O21hcmdpbi1yaWdodDowfS5hLW9yZGVyZWQtbGlzdC5hLWhvcml6b250YWwgbGkgYTpob3ZlciwuYS11bm9yZGVyZWQtbGlzdC5hLWhvcml6b250YWwgbGkgYTpob3ZlcixvbC5hLWhvcml6b250YWwgbGkgYTpob3Zlcix1bC5hLWhvcml6b250YWwgbGkgYTpob3Zlcnt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lfS5hLW9yZGVyZWQtbGlzdC5hLWxpc3QtbGluayBhOmhvdmVyLC5hLXVub3JkZXJlZC1saXN0LmEtbGlzdC1saW5rIGE6aG92ZXIsb2wuYS1saXN0LWxpbmsgYTpob3Zlcix1bC5hLWxpc3QtbGluayBhOmhvdmVye2NvbG9yOiNjNDU1MDA7dGV4dC1kZWNvcmF0aW9uOm5vbmV9dWwuYS1wYWdpbmF0aW9ue2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1sZWZ0OjB9dWwuYS1wYWdpbmF0aW9uOmFmdGVyLHVsLmEtcGFnaW5hdGlvbjpiZWZvcmV7ZGlzcGxheTp0YWJsZTtjb250ZW50OlwiXCI7bGluZS1oZWlnaHQ6MDtmb250LXNpemU6MH11bC5hLXBhZ2luYXRpb246YWZ0ZXJ7Y2xlYXI6Ym90aH11bC5hLXBhZ2luYXRpb24gbGl7YmFja2dyb3VuZC1jb2xvcjojZmZmO2Rpc3BsYXk6YmxvY2s7ZmxvYXQ6bGVmdDtsaW5lLWhlaWdodDoxNnB4O2xpc3Qtc3R5bGU6bm9uZTtwb3NpdGlvbjpyZWxhdGl2ZX11bC5hLXBhZ2luYXRpb24gbGkuYS1sYXN0LHVsLmEtcGFnaW5hdGlvbiBsaTpsYXN0LWNoaWxke21hcmdpbi1yaWdodDpub25lfXVsLmEtcGFnaW5hdGlvbiBsaSBhLHVsLmEtcGFnaW5hdGlvbiBsaS5hLWRpc2FibGVke2Rpc3BsYXk6YmxvY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmV9dWwuYS1wYWdpbmF0aW9uIGxpLmEtc2VsZWN0ZWR7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlci1jb2xvcjojZTc3NjAwfXVsLmEtcGFnaW5hdGlvbiBsaS5hLXNlbGVjdGVkIGF7Zm9udC13ZWlnaHQ6NzAwO2JhY2tncm91bmQtY29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWltYWdlOm5vbmU7Y29sb3I6I2M0NTUwMDtib3JkZXItY29sb3I6I2U3NzYwMH11bC5hLXBhZ2luYXRpb24gbGkgYXtib3JkZXItcmFkaXVzOjNweDtib3gtc2hhZG93OjAgMXB4IDAgcmdiYSgyNTUsMjU1LDI1NSwuNikgaW5zZXQ7YmFja2dyb3VuZDojZWZmMWYzO2JhY2tncm91bmQ6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCNmN2Y4ZmEsI2U3ZTllYyk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCNmN2Y4ZmEsI2U3ZTllYyk7Ym9yZGVyOjFweCBzb2xpZCAjNmM2ZTczO2JvcmRlci1jb2xvcjojYWRiMWI4ICNhMmE2YWMgIzhkOTA5Nn11bC5hLXBhZ2luYXRpb24gbGkuYS1kaXNhYmxlZHtjb2xvcjojOTk5O2JvcmRlcjoxcHggc29saWQgdHJhbnNwYXJlbnR9dWwuYS1wYWdpbmF0aW9uIGxpe21hcmdpbi1yaWdodDo0cHh9dWwuYS1wYWdpbmF0aW9uIGxpIGEsdWwuYS1wYWdpbmF0aW9uIGxpLmEtZGlzYWJsZWR7cGFkZGluZzo4cHggMTJweCA3cHggMTNweH11bC5hLXBhZ2luYXRpb24gbGkgYXtjb2xvcjojMTExfXVsLmEtcGFnaW5hdGlvbiBsaSBhOmhvdmVye2JhY2tncm91bmQ6I2UwZTNlOTtiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwjZTdlYWYwLCNkOWRjZTEpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwjZTdlYWYwLCNkOWRjZTEpO2JvcmRlci1jb2xvcjojYTJhNmFjICM5NzlhYTEgIzgyODU4YX11bC5hLXBhZ2luYXRpb24gbGkgYTpmb2N1c3tib3gtc2hhZG93OjAgMCAzcHggMnB4IHJnYmEoMjI4LDEyMSwxNywuNSk7b3V0bGluZTowfXVsLmEtcGFnaW5hdGlvbiBsaSBhOmFjdGl2ZXtib3JkZXItcmFkaXVzOjNweDtib3JkZXItY29sb3I6I2U3NzYwMDtib3gtc2hhZG93OjAgMXB4IDNweCByZ2JhKDAsMCwwLC4yKSBpbnNldDtiYWNrZ3JvdW5kLWNvbG9yOiNlN2U5ZWM7YmFja2dyb3VuZC1pbWFnZTpub25lfUBmb250LWZhY2V7Zm9udC1mYW1pbHk6J0FtYXpvbiBFbWJlcic7c3JjOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJRm9udC1hbWF6b25lbWJlcl9yZy1jYzdlYmFhMDVhMmNkM2IwMmMwOTI5YWMwNDc1YTQ0YWIzMGI3ZWZhLl9WMl8ud29mZjIpIGZvcm1hdChcIndvZmYyXCIpLHVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJRm9udC1hbWF6b25lbWJlcl9yZy04YTlkYjQwMmQ4OTY2YWU5MzcxN2MzNDhiOWFiMGJkMDg3MDNhN2E3Ll9WMl8ud29mZikgZm9ybWF0KFwid29mZlwiKX1AZm9udC1mYWNle2ZvbnQtZmFtaWx5OidBbWF6b24gRW1iZXInO2ZvbnQtc3R5bGU6aXRhbGljO3NyYzp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9BbWF6b25VSUZvbnQtYW1hem9uZW1iZXJfcmdpdC05Y2MxYmI2NGViMjcwMTM1ZjFhZGYzYTQ4ODFjMmVlNWU3YzM3YmU1Ll9WMl8ud29mZjIpIGZvcm1hdChcIndvZmYyXCIpLHVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJRm9udC1hbWF6b25lbWJlcl9yZ2l0LWE0ZGM5OGQ2NDRmZjJhZWRkNDFkYTNkYTQ2MmYwOWZmY2U4NmVhZmIuX1YyXy53b2ZmKSBmb3JtYXQoXCJ3b2ZmXCIpfUBmb250LWZhY2V7Zm9udC1mYW1pbHk6J0FtYXpvbiBFbWJlcic7Zm9udC13ZWlnaHQ6NzAwO3NyYzp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9BbWF6b25VSUZvbnQtYW1hem9uZW1iZXJfYmQtNDZiOTFiZGE2ODE2MWMxNGU1NTRhNzc5NjQzZWY0OTU3NDMxOTg3Yi5fVjJfLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKSx1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9BbWF6b25VSUZvbnQtYW1hem9uZW1iZXJfYmQtYjYwNTI1MmY4N2I4YjNkZjVhZTIwNjU5NmRhYzA5MzhmYzU4ODhiYy5fVjJfLndvZmYpIGZvcm1hdChcIndvZmZcIil9QGZvbnQtZmFjZXtmb250LWZhbWlseTonQW1hem9uIEVtYmVyJztmb250LXN0eWxlOml0YWxpYztmb250LXdlaWdodDo3MDA7c3JjOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJRm9udC1hbWF6b25lbWJlcl9iZGl0LTgwZmY3YWJhMzdkZDFmZjVhNmI5MDIzM2ExOWUzYTc4MGE5NmRjMmYuX1YyXy53b2ZmMikgZm9ybWF0KFwid29mZjJcIiksdXJsKGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0FVSUNsaWVudHMvQW1hem9uVUlGb250LWFtYXpvbmVtYmVyX2JkaXQtNTc1OThjZTQyNmE2MTJiZTVhMWQxNWVlZTA4MjUyNjY4ZmNhNWU3YS5fVjJfLndvZmYpIGZvcm1hdChcIndvZmZcIil9LmEtZW1iZXIgYm9keXtmb250LWZhbWlseTpcIkFtYXpvbiBFbWJlclwiLEFyaWFsLHNhbnMtc2VyaWZ9LmEtZW1iZXIgLmEtdGV4dC1xdW90ZXtmb250LWZhbWlseTpcIkFtYXpvbiBFbWJlclwiLEFyaWFsLHNhbnMtc2VyaWZ9Zm9ybXttYXJnaW4tYm90dG9tOjE0cHh9Zm9ybS5hLW5vc3R5bGV7bWFyZ2luLWJvdHRvbTowfWZvcm0uYS1ub3N0eWxlIGZpZWxkc2V0e2JvcmRlcjpub25lO3BhZGRpbmc6MH1sYWJlbCxsZWdlbmR7ZGlzcGxheTpibG9jaztwYWRkaW5nLWxlZnQ6MnB4O3BhZGRpbmctYm90dG9tOjJweDtmb250LXdlaWdodDo3MDB9LmEtZm9ybS1sYWJlbHtmb250LXdlaWdodDo3MDB9bGFiZWwgLmEtc3BhY2luZy1ub25le3BhZGRpbmctYm90dG9tOjB9LmEtdGV4dC1jZW50ZXI+bGFiZWx7bWFyZ2luLXJpZ2h0OjhweH1maWVsZHNldHtib3JkZXI6bm9uZTtwYWRkaW5nOjA7bWFyZ2luOjB9ZmllbGRzZXQgbGFiZWw6bGFzdC1jaGlsZHttYXJnaW4tYm90dG9tOjB9aW5wdXQ6bm90KFt0eXBlPWhpZGRlbl0pK2lucHV0e21hcmdpbi1sZWZ0Oi4zODVlbX0uYS1pbnB1dC10ZXh0LGlucHV0W3R5cGU9dGV4dF0saW5wdXRbdHlwZT1zZWFyY2hdLGlucHV0W3R5cGU9bnVtYmVyXSxpbnB1dFt0eXBlPXRlbF0saW5wdXRbdHlwZT1wYXNzd29yZF0sc2VsZWN0LmEtc2VsZWN0LW11bHRpcGxlLHRleHRhcmVhe2JvcmRlcjoxcHggc29saWQgI2E2YTZhNjtib3JkZXItdG9wLWNvbG9yOiM5NDk0OTQ7Ym9yZGVyLXJhZGl1czozcHg7Ym94LXNoYWRvdzowIDFweCAwIHJnYmEoMjU1LDI1NSwyNTUsLjUpLDAgMXB4IDAgcmdiYSgwLDAsMCwuMDcpIGluc2V0O291dGxpbmU6MH0uYS1pbnB1dC10ZXh0LmEtZm9ybS1mb2N1cywuYS1pbnB1dC10ZXh0OmZvY3VzLGlucHV0W3R5cGU9dGV4dF0uYS1mb3JtLWZvY3VzLGlucHV0W3R5cGU9dGV4dF06Zm9jdXMsaW5wdXRbdHlwZT1zZWFyY2hdLmEtZm9ybS1mb2N1cyxpbnB1dFt0eXBlPXNlYXJjaF06Zm9jdXMsaW5wdXRbdHlwZT1udW1iZXJdLmEtZm9ybS1mb2N1cyxpbnB1dFt0eXBlPW51bWJlcl06Zm9jdXMsaW5wdXRbdHlwZT10ZWxdLmEtZm9ybS1mb2N1cyxpbnB1dFt0eXBlPXRlbF06Zm9jdXMsaW5wdXRbdHlwZT1wYXNzd29yZF0uYS1mb3JtLWZvY3VzLGlucHV0W3R5cGU9cGFzc3dvcmRdOmZvY3VzLHNlbGVjdC5hLXNlbGVjdC1tdWx0aXBsZS5hLWZvcm0tZm9jdXMsc2VsZWN0LmEtc2VsZWN0LW11bHRpcGxlOmZvY3VzLHRleHRhcmVhLmEtZm9ybS1mb2N1cyx0ZXh0YXJlYTpmb2N1c3tib3JkZXItY29sb3I6I2U3NzYwMDtib3gtc2hhZG93OjAgMCAzcHggMnB4IHJnYmEoMjI4LDEyMSwxNywuNSl9LmEtaW5wdXQtdGV4dCBpbnB1dC5hLWZvcm0tZXJyb3IsLmEtaW5wdXQtdGV4dC5hLWZvcm0tZXJyb3IsaW5wdXRbdHlwZT10ZXh0XSBpbnB1dC5hLWZvcm0tZXJyb3IsaW5wdXRbdHlwZT10ZXh0XS5hLWZvcm0tZXJyb3IsaW5wdXRbdHlwZT1zZWFyY2hdIGlucHV0LmEtZm9ybS1lcnJvcixpbnB1dFt0eXBlPXNlYXJjaF0uYS1mb3JtLWVycm9yLGlucHV0W3R5cGU9bnVtYmVyXSBpbnB1dC5hLWZvcm0tZXJyb3IsaW5wdXRbdHlwZT1udW1iZXJdLmEtZm9ybS1lcnJvcixpbnB1dFt0eXBlPXRlbF0gaW5wdXQuYS1mb3JtLWVycm9yLGlucHV0W3R5cGU9dGVsXS5hLWZvcm0tZXJyb3IsaW5wdXRbdHlwZT1wYXNzd29yZF0gaW5wdXQuYS1mb3JtLWVycm9yLGlucHV0W3R5cGU9cGFzc3dvcmRdLmEtZm9ybS1lcnJvcixzZWxlY3QuYS1zZWxlY3QtbXVsdGlwbGUgaW5wdXQuYS1mb3JtLWVycm9yLHNlbGVjdC5hLXNlbGVjdC1tdWx0aXBsZS5hLWZvcm0tZXJyb3IsdGV4dGFyZWEgaW5wdXQuYS1mb3JtLWVycm9yLHRleHRhcmVhLmEtZm9ybS1lcnJvcntib3JkZXItY29sb3I6I2QwMDtib3gtc2hhZG93OjAgMCAwIDNweCByZ2JhKDIyMSwwLDAsLjEpIGluc2V0fS5hLWlucHV0LXRleHQgaW5wdXQuYS1mb3JtLXdhcm5pbmcsLmEtaW5wdXQtdGV4dC5hLWZvcm0td2FybmluZyxpbnB1dFt0eXBlPXRleHRdIGlucHV0LmEtZm9ybS13YXJuaW5nLGlucHV0W3R5cGU9dGV4dF0uYS1mb3JtLXdhcm5pbmcsaW5wdXRbdHlwZT1zZWFyY2hdIGlucHV0LmEtZm9ybS13YXJuaW5nLGlucHV0W3R5cGU9c2VhcmNoXS5hLWZvcm0td2FybmluZyxpbnB1dFt0eXBlPW51bWJlcl0gaW5wdXQuYS1mb3JtLXdhcm5pbmcsaW5wdXRbdHlwZT1udW1iZXJdLmEtZm9ybS13YXJuaW5nLGlucHV0W3R5cGU9dGVsXSBpbnB1dC5hLWZvcm0td2FybmluZyxpbnB1dFt0eXBlPXRlbF0uYS1mb3JtLXdhcm5pbmcsaW5wdXRbdHlwZT1wYXNzd29yZF0gaW5wdXQuYS1mb3JtLXdhcm5pbmcsaW5wdXRbdHlwZT1wYXNzd29yZF0uYS1mb3JtLXdhcm5pbmcsc2VsZWN0LmEtc2VsZWN0LW11bHRpcGxlIGlucHV0LmEtZm9ybS13YXJuaW5nLHNlbGVjdC5hLXNlbGVjdC1tdWx0aXBsZS5hLWZvcm0td2FybmluZyx0ZXh0YXJlYSBpbnB1dC5hLWZvcm0td2FybmluZyx0ZXh0YXJlYS5hLWZvcm0td2FybmluZ3tib3JkZXItY29sb3I6IzhjNmUwMDtib3gtc2hhZG93OjAgMCAwIDNweCByZ2JhKDI1NSwyMTQsNjMsLjEpIGluc2V0fS5hLWlucHV0LXRleHQuYS1mb3JtLWRpc2FibGVkLGlucHV0W3R5cGU9dGV4dF0uYS1mb3JtLWRpc2FibGVkLGlucHV0W3R5cGU9c2VhcmNoXS5hLWZvcm0tZGlzYWJsZWQsaW5wdXRbdHlwZT1udW1iZXJdLmEtZm9ybS1kaXNhYmxlZCxpbnB1dFt0eXBlPXRlbF0uYS1mb3JtLWRpc2FibGVkLGlucHV0W3R5cGU9cGFzc3dvcmRdLmEtZm9ybS1kaXNhYmxlZCxzZWxlY3QuYS1zZWxlY3QtbXVsdGlwbGUuYS1mb3JtLWRpc2FibGVkLHRleHRhcmVhLmEtZm9ybS1kaXNhYmxlZHtib3JkZXItY29sb3I6cmdiYSgxODYsMTg2LDE4NiwuNSk7YmFja2dyb3VuZC1jb2xvcjojZjNmM2YzO2JveC1zaGFkb3c6bm9uZTtjdXJzb3I6bm90LWFsbG93ZWR9LmEtaW5wdXQtdGV4dC5hLWZvcm0tZGlzYWJsZWQgaW5wdXQsaW5wdXRbdHlwZT10ZXh0XS5hLWZvcm0tZGlzYWJsZWQgaW5wdXQsaW5wdXRbdHlwZT1zZWFyY2hdLmEtZm9ybS1kaXNhYmxlZCBpbnB1dCxpbnB1dFt0eXBlPW51bWJlcl0uYS1mb3JtLWRpc2FibGVkIGlucHV0LGlucHV0W3R5cGU9dGVsXS5hLWZvcm0tZGlzYWJsZWQgaW5wdXQsaW5wdXRbdHlwZT1wYXNzd29yZF0uYS1mb3JtLWRpc2FibGVkIGlucHV0LHNlbGVjdC5hLXNlbGVjdC1tdWx0aXBsZS5hLWZvcm0tZGlzYWJsZWQgaW5wdXQsdGV4dGFyZWEuYS1mb3JtLWRpc2FibGVkIGlucHV0e2NvbG9yOiM3Njc2NzZ9aW5wdXQsc2VsZWN0LHRleHRhcmVhey13ZWJraXQtdHJhbnNpdGlvbjphbGwgLjFzIGxpbmVhcjt0cmFuc2l0aW9uOmFsbCAuMXMgbGluZWFyO2xpbmUtaGVpZ2h0OjE5cHg7Y29sb3I6IzExMX10ZXh0YXJlYXtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7d2lkdGg6MTAwJTtwYWRkaW5nOjVweCA3cHg7cmVzaXplOnZlcnRpY2FsfS5hLWlucHV0LXRleHQsaW5wdXRbdHlwZT10ZXh0XSxpbnB1dFt0eXBlPXNlYXJjaF0saW5wdXRbdHlwZT1udW1iZXJdLGlucHV0W3R5cGU9dGVsXSxpbnB1dFt0eXBlPXBhc3N3b3JkXSxpbnB1dFt0eXBlPWRhdGVdLGlucHV0W3R5cGU9ZW1haWxde2JhY2tncm91bmQtY29sb3I6I2ZmZjtoZWlnaHQ6MzFweDtwYWRkaW5nOjNweCA3cHg7bGluZS1oZWlnaHQ6bm9ybWFsfXNlbGVjdC5hLXNlbGVjdC1tdWx0aXBsZXtoZWlnaHQ6YXV0bzt3aWR0aDoxMDAlO3BhZGRpbmc6N3B4fS5hLXNlYXJjaHtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmlubGluZS1ibG9ja30uYS1zZWFyY2ggLmEtaWNvbi1zZWFyY2h7cG9zaXRpb246YWJzb2x1dGU7dG9wOjUwJTttYXJnaW4tdG9wOi03cHg7bGVmdDoxMHB4fS5hLXNlYXJjaCBpbnB1dHtwYWRkaW5nLWxlZnQ6MjlweH0uYS1mb3JtLWFjdGlvbnN7Ym9yZGVyLXRvcDoxcHggc29saWQgI2RkZDtiYWNrZ3JvdW5kLWNvbG9yOiNmM2YzZjM7YmFja2dyb3VuZDojZjlmOWY5O2JhY2tncm91bmQ6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCNmM2YzZjMsI2ZmZik7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCNmM2YzZjMsI2ZmZik7Ym94LXNoYWRvdzowIDFweCAxcHggcmdiYSgwLDAsMCwuMDUpIGluc2V0O3BhZGRpbmc6MTRweDt0ZXh0LWFsaWduOnJpZ2h0fS5hLWZvcm0tZGlzYWJsZWR7Y29sb3I6Izc2NzY3Nn0uYS1mb3JtLWRpc2FibGVkOi1tb3otcGxhY2Vob2xkZXJ7Y29sb3I6Izc2NzY3NiFpbXBvcnRhbnR9LmEtZm9ybS1kaXNhYmxlZDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcntjb2xvcjojNzY3Njc2IWltcG9ydGFudH1pbnB1dDotbW96LXBsYWNlaG9sZGVye2NvbG9yOiM1NTV9aW5wdXQ6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXJ7Y29sb3I6IzU1NX10ZXh0YXJlYTotbW96LXBsYWNlaG9sZGVye2NvbG9yOiM1NTV9dGV4dGFyZWE6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXJ7Y29sb3I6IzU1NX0uYS1jaGVja2JveC5hLWNoZWNrYm94LWZhbmN5LC5hLXJhZGlvLmEtcmFkaW8tZmFuY3l7cG9zaXRpb246cmVsYXRpdmV9LmEtY2hlY2tib3guYS1jaGVja2JveC1mYW5jeSBpbnB1dCwuYS1yYWRpby5hLXJhZGlvLWZhbmN5IGlucHV0e29wYWNpdHk6LjAyO2JvcmRlcjowIG5vbmU7bWFyZ2luOjA7b3V0bGluZTowIG5vbmU7b3ZlcmZsb3c6aGlkZGVuO3BhZGRpbmc6MDtwb3NpdGlvbjphYnNvbHV0ZTtib3R0b206YXV0bztsZWZ0OjA7ei1pbmRleDotMX0uYS1jaGVja2JveC5hLWNoZWNrYm94LWZhbmN5IC5hLWxhYmVsLC5hLXJhZGlvLmEtcmFkaW8tZmFuY3kgLmEtbGFiZWx7Zm9udC13ZWlnaHQ6NDAwfS5hLWNoZWNrYm94LmEtY2hlY2tib3gtZmFuY3kgaW5wdXQ6Zm9jdXMrLmEtaWNvbiwuYS1yYWRpby5hLXJhZGlvLWZhbmN5IGlucHV0OmZvY3VzKy5hLWljb257Ym94LXNoYWRvdzowIDAgM3B4IDJweCByZ2JhKDIyOCwxMjEsMTcsLjUpfS5hLWNoZWNrYm94LmEtY2hlY2tib3gtZmFuY3kgaW5wdXQ6Zm9jdXMrLmEtaWNvbjphZnRlciwuYS1yYWRpby5hLXJhZGlvLWZhbmN5IGlucHV0OmZvY3VzKy5hLWljb246YWZ0ZXJ7Ym9yZGVyOjFweCBzb2xpZCAjZTc3NjAwO2NvbnRlbnQ6JyAnO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MH0uYS1jaGVja2JveC5hLWNoZWNrYm94LWZhbmN5IC5hLWljb24uYS1pY29uLWNoZWNrYm94LC5hLWNoZWNrYm94LmEtY2hlY2tib3gtZmFuY3kgLmEtaWNvbi5hLWljb24tY2hlY2tib3g6YWZ0ZXJ7Ym9yZGVyLXJhZGl1czoycHh9LmEtcmFkaW8uYS1yYWRpby1mYW5jeSAuYS1pY29uLmEtaWNvbi1yYWRpbywuYS1yYWRpby5hLXJhZGlvLWZhbmN5IC5hLWljb24uYS1pY29uLXJhZGlvOmFmdGVye2JvcmRlci1yYWRpdXM6NTAlfWlucHV0W3R5cGU9cmFkaW9de2hlaWdodDoxNHB4O3dpZHRoOjE0cHg7dmVydGljYWwtYWxpZ246dG9wO3Bvc2l0aW9uOnJlbGF0aXZlO2JvdHRvbTotM3B4fWlucHV0W3R5cGU9Y2hlY2tib3hde2hlaWdodDoxM3B4O3dpZHRoOjEzcHg7dmVydGljYWwtYWxpZ246dG9wO3Bvc2l0aW9uOnJlbGF0aXZlO2JvdHRvbTotM3B4fS5hLWNoZWNrYm94IGxhYmVsLC5hLXJhZGlvIGxhYmVse3Bvc2l0aW9uOnJlbGF0aXZlO2ZvbnQtd2VpZ2h0OjQwMDtjb2xvcjojMTExO3BhZGRpbmctbGVmdDoxNXB4O3RleHQtaW5kZW50Oi0xNXB4O21hcmdpbi1sZWZ0OjNweDt0b3A6LTJweDtwYWRkaW5nLWJvdHRvbTowfS5hLWZvcm0taG9yaXpvbnRhbCAuYS1jaGVja2JveCwuYS1mb3JtLWhvcml6b250YWwgLmEtcmFkaW97ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLXJpZ2h0OjE0cHh9LmEtZm9ybS1ob3Jpem9udGFsIC5hLWNoZWNrYm94Omxhc3QtY2hpbGQsLmEtZm9ybS1ob3Jpem9udGFsIC5hLXJhZGlvOmxhc3QtY2hpbGR7bWFyZ2luLXJpZ2h0OjB9LmEtZm9ybS1ob3Jpem9udGFsIC5hLWNoZWNrYm94IGxhYmVsLC5hLWZvcm0taG9yaXpvbnRhbCAuYS1yYWRpbyBsYWJlbHtwYWRkaW5nLWxlZnQ6MDt0ZXh0LWluZGVudDowfS5hLWNoZWNrYm94LWZhbmN5OmZvY3VzLC5hLXJhZGlvLWZhbmN5OmZvY3Vze291dGxpbmU6MH0uYS1jaGVja2JveC1mYW5jeSAuYS1jaGVja2JveC1sYWJlbCwuYS1jaGVja2JveC1mYW5jeSAuYS1yYWRpby1sYWJlbCwuYS1yYWRpby1mYW5jeSAuYS1jaGVja2JveC1sYWJlbCwuYS1yYWRpby1mYW5jeSAuYS1yYWRpby1sYWJlbHt0b3A6MXB4O3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0uYS1jaGVja2JveC1mYW5jeSBsYWJlbCwuYS1yYWRpby1mYW5jeSBsYWJlbHtwYWRkaW5nLWxlZnQ6MTlweDt0ZXh0LWluZGVudDotMTlweH0uYS1jaGVja2JveC1mYW5jeSBsYWJlbCBpbnB1dDpmb2N1cysuYS1pY29uLC5hLXJhZGlvLWZhbmN5IGxhYmVsIGlucHV0OmZvY3VzKy5hLWljb257cG9zaXRpb246cmVsYXRpdmV9LmEtY2hlY2tib3gtZmFuY3kgbGFiZWwgaW5wdXQ6Zm9jdXMrLmEtaWNvbjphZnRlciwuYS1yYWRpby1mYW5jeSBsYWJlbCBpbnB1dDpmb2N1cysuYS1pY29uOmFmdGVye3RvcDowO2xlZnQ6MH0uYS1jaGVja2JveC1sYWJlbCwuYS1yYWRpby1sYWJlbHtwb3NpdGlvbjpyZWxhdGl2ZTtwYWRkaW5nLWxlZnQ6NXB4O3RleHQtaW5kZW50OjA7ZGlzcGxheTppbmxpbmUtYmxvY2t9LmEtY2hlY2tib3gtZmFuY3kgaW5wdXR7aGVpZ2h0OjE2cHg7d2lkdGg6MTZweH0uYS1jaGVja2JveC1mYW5jeSBpbnB1dDpmb2N1cysuYS1pY29uOmFmdGVye2hlaWdodDoxNHB4O3dpZHRoOjE0cHh9LmEtcmFkaW8tZmFuY3kgaW5wdXR7aGVpZ2h0OjE3cHg7d2lkdGg6MTdweH0uYS1yYWRpby1mYW5jeSBpbnB1dDpmb2N1cysuYS1pY29uOmFmdGVye2hlaWdodDoxNXB4O3dpZHRoOjE1cHh9QC1tb3otZG9jdW1lbnQgdXJsLXByZWZpeCgpe2xhYmVsIC5hLWNoZWNrYm94LWxhYmVse3RvcDoxcHh9fUAtd2Via2l0LWtleWZyYW1lcyByb3RhdGUzNjB7ZnJvbXt0cmFuc2Zvcm06cm90YXRlKDApfXRve3RyYW5zZm9ybTpyb3RhdGUoMzYwZGVnKX19QGtleWZyYW1lcyByb3RhdGUzNjB7ZnJvbXt0cmFuc2Zvcm06cm90YXRlKDApfXRve3RyYW5zZm9ybTpyb3RhdGUoMzYwZGVnKX19LmEtc3Bpbm5lcntkaXNwbGF5OmlubGluZS1ibG9ja30uYS1zcGlubmVyLXNtYWxse3dpZHRoOjE2cHg7aGVpZ2h0OjE2cHg7LXdlYmtpdC1hbmltYXRpb246cm90YXRlMzYwIDFzIGxpbmVhciBpbmZpbml0ZTthbmltYXRpb246cm90YXRlMzYwIDFzIGxpbmVhciBpbmZpbml0ZTtiYWNrZ3JvdW5kOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJU3Bpbm5lci1zcGlubmVyX3NpbXBsZV8xeC1kZWI1NTA2OTZhZDVmYTVhZjlkODJlZjU1OWZmZmE3ZmUzZjEwZjU0Ll9WMl8ucG5nKSA1MCUgNTAlIG5vLXJlcGVhdH0uYS1oaXJlcyAuYS1zcGlubmVyLXNtYWxse2JhY2tncm91bmQ6dXJsKGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0FVSUNsaWVudHMvQW1hem9uVUlTcGlubmVyLXNwaW5uZXJfc2ltcGxlXzJ4LWZlYjdkZjMyZjllOTExZGZlZmVlZDgwZDA1NDhiNjE2YzE3YjAxN2YuX1YyXy5wbmcpIDUwJSA1MCUgbm8tcmVwZWF0O2JhY2tncm91bmQtc2l6ZToxNnB4fS5hLXNwaW5uZXItbWVkaXVte3dpZHRoOjMycHg7aGVpZ2h0OjMycHg7LXdlYmtpdC1hbmltYXRpb246cm90YXRlMzYwIDFzIGxpbmVhciBpbmZpbml0ZTthbmltYXRpb246cm90YXRlMzYwIDFzIGxpbmVhciBpbmZpbml0ZTtiYWNrZ3JvdW5kOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJU3Bpbm5lci1zcGlubmVyX3NpbXBsZV8yeC1mZWI3ZGYzMmY5ZTkxMWRmZWZlZWQ4MGQwNTQ4YjYxNmMxN2IwMTdmLl9WMl8ucG5nKSA1MCUgNTAlIG5vLXJlcGVhdH0uYS1oaXJlcyAuYS1zcGlubmVyLW1lZGl1bXtiYWNrZ3JvdW5kOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJU3Bpbm5lci1zcGlubmVyX3NpbXBsZV80eC02MjI5MmUwMGY2MWQ4YjEzOTQ5NzEyMmNjZWU5Y2ZjZThkMmI0MDU3Ll9WMl8ucG5nKSA1MCUgNTAlIG5vLXJlcGVhdDtiYWNrZ3JvdW5kLXNpemU6MzJweH0uYS1zcGlubmVyLXdyYXBwZXJ7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtkaXNwbGF5OnRhYmxlfS5hLXNwaW5uZXItd3JhcHBlciAuYS1zcGlubmVye21hcmdpbjowIGF1dG87ZGlzcGxheTp0YWJsZS1jZWxsO3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0uYS1wcmljZXt0ZXh0LWRlY29yYXRpb246bm9uZTtwb3NpdGlvbjpyZWxhdGl2ZTtsaW5lLWhlaWdodDpub3JtYWx9LmEtcHJpY2VbZGF0YS1hLXN0cmlrZT10cnVlXTphZnRlcntib3JkZXItdG9wOjFweCBzb2xpZDtwb3NpdGlvbjphYnNvbHV0ZTtjb250ZW50OlwiXCI7cmlnaHQ6MDt0b3A6NTAlO2xlZnQ6MH0uYS1wcmljZSAuYS1wcmljZS1mcmFjdGlvbisuYS1wcmljZS1zeW1ib2x7bGVmdDouMmVtfS5hLXByaWNlIC5hLW9mZnNjcmVlbnstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmV9LmEtcHJpY2VbZGF0YS1hLWNvbG9yPWJhc2Vde2NvbG9yOiMxMTF9LmEtcHJpY2VbZGF0YS1hLWNvbG9yPXByaWNlXXtjb2xvcjojQjEyNzA0fS5hLXByaWNlW2RhdGEtYS1jb2xvcj1zZWNvbmRhcnlde2NvbG9yOiM1NTV9LmEtcHJpY2VbZGF0YS1hLWNvbG9yPXRlcnRpYXJ5XXtjb2xvcjojNzY3Njc2fS5hLXByaWNlW2RhdGEtYS1zaXplJD1sXSAuYS1wcmljZS1mcmFjdGlvbiwuYS1wcmljZVtkYXRhLWEtc2l6ZSQ9bF0gLmEtcHJpY2Utc3ltYm9se3Bvc2l0aW9uOnJlbGF0aXZlfS5hLXByaWNlW2RhdGEtYS1zaXplJD1sXSAuYS1wcmljZS1kZWNpbWFse3Bvc2l0aW9uOmFic29sdXRlO29wYWNpdHk6MH0uYS1wcmljZVtkYXRhLWEtc2l6ZT14eGxde2ZvbnQtc2l6ZTozOHB4O2xpbmUtaGVpZ2h0Om5vcm1hbH0uYS1wcmljZVtkYXRhLWEtc2l6ZT14eGxdIC5hLXByaWNlLXN5bWJvbHt0b3A6LTEuMjhlbTtmb250LXNpemU6MTNweH0uYS1wcmljZVtkYXRhLWEtc2l6ZT14eGxdIC5hLXByaWNlLWZyYWN0aW9ue3RvcDotMS4yOGVtO2ZvbnQtc2l6ZToxM3B4fS5hLXByaWNlW2RhdGEtYS1zaXplPXhsXXtmb250LXNpemU6MjhweH0uYS1wcmljZVtkYXRhLWEtc2l6ZT14bF0gLmEtcHJpY2Utc3ltYm9se3RvcDotLjc1ZW07Zm9udC1zaXplOjEzcHh9LmEtcHJpY2VbZGF0YS1hLXNpemU9eGxdIC5hLXByaWNlLWZyYWN0aW9ue3RvcDotLjc1ZW07Zm9udC1zaXplOjEzcHh9LmEtcHJpY2VbZGF0YS1hLXNpemU9bF17Zm9udC1zaXplOjIxcHh9LmEtcHJpY2VbZGF0YS1hLXNpemU9bF0gLmEtcHJpY2Utc3ltYm9se3RvcDotLjVlbTtmb250LXNpemU6MTJweH0uYS1wcmljZVtkYXRhLWEtc2l6ZT1sXSAuYS1wcmljZS1mcmFjdGlvbnt0b3A6LS41ZW07Zm9udC1zaXplOjEycHh9LmEtcHJpY2VbZGF0YS1hLXNpemU9bV17Zm9udC1zaXplOjE3cHh9LmEtcHJpY2VbZGF0YS1hLXNpemU9bV0gLmEtcHJpY2Utc3ltYm9se3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDotLjNlbTtmb250LXNpemU6MTFweH0uYS1wcmljZVtkYXRhLWEtc2l6ZT1iXXtmb250LXNpemU6MTNweH0uYS1wcmljZVtkYXRhLWEtc2l6ZT1zXXtmb250LXNpemU6MTJweH0uYS1wcmljZS1yYW5nZXtmb250LXNpemU6MH0uYS1wcmljZS1kYXNoW2RhdGEtYS1jb2xvcj1iYXNlXXtjb2xvcjojMTExfS5hLXByaWNlLWRhc2hbZGF0YS1hLWNvbG9yPXByaWNlXXtjb2xvcjojQjEyNzA0fS5hLXByaWNlLWRhc2hbZGF0YS1hLWNvbG9yPXNlY29uZGFyeV17Y29sb3I6IzU1NX0uYS1wcmljZS1kYXNoW2RhdGEtYS1jb2xvcj10ZXJ0aWFyeV17Y29sb3I6Izc2NzY3Nn0uYS1wcmljZS1kYXNoW2RhdGEtYS1zaXplPW1de2ZvbnQtc2l6ZToxN3B4O3BhZGRpbmctbGVmdDoxcHg7cGFkZGluZy1yaWdodDoxcHh9LmEtcHJpY2UtZGFzaFtkYXRhLWEtc2l6ZT1sXXtmb250LXNpemU6MjFweDtwYWRkaW5nLWxlZnQ6NHB4O3BhZGRpbmctcmlnaHQ6NHB4fS5hLXByaWNlLWRhc2hbZGF0YS1hLXNpemU9eGxde2ZvbnQtc2l6ZToyOHB4O3BhZGRpbmctbGVmdDo0cHg7cGFkZGluZy1yaWdodDo0cHh9LmEtcHJpY2UtZGFzaFtkYXRhLWEtc2l6ZT14eGxde2ZvbnQtc2l6ZTozOHB4O3BhZGRpbmctbGVmdDo0cHg7cGFkZGluZy1yaWdodDo0cHh9LmEtdGV4dC1wcmljZXtjb2xvcjppbmhlcml0fUAtd2Via2l0LWtleWZyYW1lcyByb3RhdGUzNjB7ZnJvbXt0cmFuc2Zvcm06cm90YXRlKDApfXRve3RyYW5zZm9ybTpyb3RhdGUoMzYwZGVnKX19QGtleWZyYW1lcyByb3RhdGUzNjB7ZnJvbXt0cmFuc2Zvcm06cm90YXRlKDApfXRve3RyYW5zZm9ybTpyb3RhdGUoMzYwZGVnKX19LmEtaWNvbi5hLWljb24tbmV4dC1yb3VuZGVkLC5hLWljb24uYS1pY29uLXByZXZpb3VzLXJvdW5kZWR7YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9BbWF6b25VSUNhcm91c2VsLWFycm93cy1jNDk1YTliNTlhZmQ5YjM1YTA4YzEyNTEzZDQwYjhjN2U3NzcxNDk5Ll9WMl8ucG5nKX0uYS1jYXJvdXNlbC1jb250YWluZXJ7cG9zaXRpb246cmVsYXRpdmU7b3ZlcmZsb3c6aGlkZGVufS5hLWNhcm91c2VsLXN0YXRle21hcmdpbjowO3BhZGRpbmc6MH0uYS1jYXJvdXNlbC1oZWFkZXItcm93e21hcmdpbi1ib3R0b206MjBweH0uYS1jYXJvdXNlbC1oZWFkZXItcm93IC5hLXNwYW4tbGFzdHtmbG9hdDpyaWdodCFpbXBvcnRhbnR9LmEtY2Fyb3VzZWwtaGVhZGVyLXJvdyAuYS1jb2x1bW4sLmEtY2Fyb3VzZWwtaGVhZGVyLXJvdyBoMSwuYS1jYXJvdXNlbC1oZWFkZXItcm93IGgyLC5hLWNhcm91c2VsLWhlYWRlci1yb3cgaDMsLmEtY2Fyb3VzZWwtaGVhZGVyLXJvdyBoNCwuYS1jYXJvdXNlbC1oZWFkZXItcm93IGg1LC5hLWNhcm91c2VsLWhlYWRlci1yb3cgaDZ7bGluZS1oZWlnaHQ6aW5oZXJpdDtmb250LXNpemU6aW5oZXJpdH0uYS1jYXJvdXNlbC1yb3ctaW5uZXJ7cG9zaXRpb246cmVsYXRpdmU7aGVpZ2h0OjEwMCV9LmEtY2Fyb3VzZWwtcm93LWlubmVyOmFmdGVyLC5hLWNhcm91c2VsLXJvdy1pbm5lcjpiZWZvcmV7ZGlzcGxheTp0YWJsZTtjb250ZW50OlwiXCI7bGluZS1oZWlnaHQ6MDtmb250LXNpemU6MH0uYS1jYXJvdXNlbC1yb3ctaW5uZXI6YWZ0ZXJ7Y2xlYXI6Ym90aH0uYS1jYXJvdXNlbC1jb2x7b3ZlcmZsb3c6dmlzaWJsZTttaW4taGVpZ2h0OjFweDtwb3NpdGlvbjpyZWxhdGl2ZTt6b29tOjF9LmEtY2Fyb3VzZWwtaGFzLWJ1dHRvbnMgLmEtY2Fyb3VzZWwtY2VudGVye21hcmdpbjowIDQwcHh9LmEtY2Fyb3VzZWwtaGFzLWJ1dHRvbnMuYS1jYXJvdXNlbC1vdmVybGF5LWJ1dHRvbnMgLmEtY2Fyb3VzZWwtY2VudGVye21hcmdpbjowfS5hLWNhcm91c2VsLWNlbnRlcntvdmVyZmxvdzpoaWRkZW59LmEtY2Fyb3VzZWwtbGVmdHtsZWZ0OjA7cGFkZGluZy1sZWZ0OjNweH0uYS1jYXJvdXNlbC1yaWdodHt0ZXh0LWFsaWduOnJpZ2h0O3JpZ2h0OjA7cGFkZGluZy1yaWdodDozcHh9LmEtY2Fyb3VzZWwtbGVmdCwuYS1jYXJvdXNlbC1yaWdodHt3aWR0aDo0MHB4O2hlaWdodDoxMDAlO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3otaW5kZXg6MX0uYS1jYXJvdXNlbC1sZWZ0LC5hLWNhcm91c2VsLXBhZ2luYXRpb24sLmEtY2Fyb3VzZWwtcmlnaHR7dmlzaWJpbGl0eTpoaWRkZW59LmEtY2Fyb3VzZWwtdmlld3BvcnR7d2lkdGg6MTAwJTtvdmVyZmxvdzpoaWRkZW59LmEtY2Fyb3VzZWwtdmlld3BvcnQ6Zm9jdXN7b3V0bGluZTowfS5hLWNhcm91c2VsLWJ1dHRvbntwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6NDAlO21hcmdpbi10b3A6LTE2cHh9b2wuYS1jYXJvdXNlbHttYXJnaW46MDtsaXN0LXN0eWxlLXR5cGU6bm9uZTtoZWlnaHQ6MTAwJTt3aGl0ZS1zcGFjZTpub3dyYXA7b3ZlcmZsb3cteDp2aXNpYmxlO2NvbG9yOiMxMTE7bGV0dGVyLXNwYWNpbmc6LTRweH0uYS1jYXJvdXNlbC1jYXJke3ZlcnRpY2FsLWFsaWduOnRvcDt0ZXh0LWFsaWduOmxlZnQ7b3ZlcmZsb3c6aGlkZGVuO21hcmdpbi1sZWZ0OjE2cHg7d2lkdGg6MTYwcHg7bWluLWhlaWdodDoxMDAlO2xpc3Qtc3R5bGUtdHlwZTpub25lO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3doaXRlLXNwYWNlOm5vcm1hbDtsZXR0ZXItc3BhY2luZzpub3JtYWx9LmEtY2Fyb3VzZWwtY2FyZC1lbXB0eXttYXgtaGVpZ2h0OjE3NXB4O2hlaWdodDoxMDAlO2JhY2tncm91bmQ6dXJsKGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0FVSUNsaWVudHMvQW1hem9uVUlTcGlubmVyLXNwaW5uZXJfZ3JheV8yeC0zMDU5OTc0MzRlYmQ1YTcyY2QzYWE1OThhMDE5ZmNjNmUxZWZlMjNhLl9WMl8uZ2lmKSA1MCUgNTAlIG5vLXJlcGVhdH1AbWVkaWEgb25seSBzY3JlZW4gYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86MS41KSxvbmx5IHNjcmVlbiBhbmQgKG1pbi1yZXNvbHV0aW9uOjE0NGRwaSl7LmEtY2Fyb3VzZWwtY2FyZC1lbXB0eXtiYWNrZ3JvdW5kOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvblVJU3Bpbm5lci1zcGlubmVyX2dyYXlfNHgtMTcwMGM5N2E4MDk5OGVlMTBmOGQ5NzJhNGM4OWI2ZWI2NGNjZmRiMS5fVjJfLmdpZikgNTAlIDUwJSBuby1yZXBlYXQ7YmFja2dyb3VuZC1zaXplOjUwcHh9fS5hLWNhcm91c2VsLXRyYW5zaXRpb24tc2xpZGUgLmEtY2Fyb3VzZWx7cG9zaXRpb246cmVsYXRpdmV9LmEtY2Fyb3VzZWwtdHJhbnNpdGlvbi1zbGlkZSAuYS1jYXJvdXNlbCwuYS1jYXJvdXNlbC10cmFuc2l0aW9uLXNsaWRlIC5hLWNhcm91c2VsLXZpZXdwb3J0ey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApfS5hLWNhcm91c2VsLWRpc3BsYXktc2luZ2xlIC5hLWNhcm91c2VsLWNhcmR7d2lkdGg6MTAwJTt0ZXh0LWFsaWduOmNlbnRlcjttYXJnaW46MH0uYS1jYXJvdXNlbC1kaXNwbGF5LXNpbmdsZSAuYS1jYXJvdXNlbC1jYXJkIGltZ3ttYXgtd2lkdGg6MTAwJTttYXgtaGVpZ2h0OjEwMCV9LmEtY2Fyb3VzZWwtdHJhbnNpdGlvbi1mcmVlU2Nyb2xsIC5hLWNhcm91c2VsLXZpZXdwb3J0LC5hLWNhcm91c2VsLXRyYW5zaXRpb24tbm9uZSAuYS1jYXJvdXNlbC12aWV3cG9ydHtvdmVyZmxvdy14OnNjcm9sbDtvdmVyZmxvdy15OnZpc2libGV9LmEtY2Fyb3VzZWwtaW5pdC1lbXB0eSAuYS1jYXJvdXNlbC12aWV3cG9ydHtoZWlnaHQ6MTUwcHh9LmEtY2Fyb3VzZWwtcm93IC5hLWNhcm91c2VsLXBob3Rve2Rpc3BsYXk6dGFibGU7dGFibGUtbGF5b3V0OmZpeGVkO3dpZHRoOjEwMCU7bWFyZ2luLWJvdHRvbTo2cHh9LmEtY2Fyb3VzZWwtcm93IC5hLWNhcm91c2VsLXBob3RvLWlubmVye2Rpc3BsYXk6dGFibGUtY2VsbDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7b3ZlcmZsb3c6aGlkZGVufS5hLWNhcm91c2VsLWRpc3BsYXktdmFyaWFibGVXaWR0aCAuYS1jYXJvdXNlbC1jYXJke3dpZHRoOmF1dG87dmVydGljYWwtYWxpZ246bWlkZGxlO21pbi13aWR0aDoxMTBweDttYXgtd2lkdGg6MjcwcHg7bWFyZ2luLWxlZnQ6OHB4O21hcmdpbi1yaWdodDo4cHh9LmEtaWNvbi5hLWljb24tbmV4dC1yb3VuZGVkLC5hLWljb24uYS1pY29uLXByZXZpb3VzLXJvdW5kZWR7YmFja2dyb3VuZC1zaXplOjY4cHggNTJweDt3aWR0aDozNHB4O2hlaWdodDo1MnB4O291dGxpbmU6MH0uYS1pY29uLmEtaWNvbi1wcmV2aW91cy1yb3VuZGVke2JhY2tncm91bmQtcG9zaXRpb246MCAwfS5hLWljb24uYS1pY29uLW5leHQtcm91bmRlZHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zNHB4IDB9LmEtY2Fyb3VzZWwtcm91bmRlZC1idXR0b25zIC5hLWNhcm91c2VsLWxlZnQsLmEtY2Fyb3VzZWwtcm91bmRlZC1idXR0b25zIC5hLWNhcm91c2VsLXJpZ2h0e3dpZHRoOjgwcHg7cG9zaXRpb246YWJzb2x1dGV9LmEtY2Fyb3VzZWwtcm91bmRlZC1idXR0b25zIC5hLWNhcm91c2VsLWdvdG8tbmV4dHBhZ2UsLmEtY2Fyb3VzZWwtcm91bmRlZC1idXR0b25zIC5hLWNhcm91c2VsLWdvdG8tcHJldnBhZ2V7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO3JpZ2h0OjA7Ym90dG9tOjA7b3V0bGluZTowfS5hLWNhcm91c2VsLXJvdW5kZWQtYnV0dG9ucyAuYS1pY29uLW5leHQtcm91bmRlZCwuYS1jYXJvdXNlbC1yb3VuZGVkLWJ1dHRvbnMgLmEtaWNvbi1wcmV2aW91cy1yb3VuZGVke3Bvc2l0aW9uOmFic29sdXRlO3RvcDo1MCU7bGVmdDo1MCU7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsLTUwJSk7dHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLC01MCUpfS5hLWNhcm91c2VsLXRyYW5zaXRpb24tc2xpZGUgLmEtY2Fyb3VzZWwsLmEtY2Fyb3VzZWwtdHJhbnNpdGlvbi1zbGlkZSAuYS1jYXJvdXNlbC12aWV3cG9ydHstd2Via2l0LXRyYW5zZm9ybS1zdHlsZTpwcmVzZXJ2ZS0zZDstbW96LXRyYW5zZm9ybS1zdHlsZTpwcmVzZXJ2ZS0zZDt0cmFuc2Zvcm0tc3R5bGU6cHJlc2VydmUtM2R9LmEtY2Fyb3VzZWwtdHJhbnNpdGlvbi1zbGlkZSAuYS1jYXJvdXNlbCwuYS1jYXJvdXNlbC10cmFuc2l0aW9uLXNsaWRlIC5hLWNhcm91c2VsLWNhcmQsLmEtY2Fyb3VzZWwtdHJhbnNpdGlvbi1zbGlkZSAuYS1jYXJvdXNlbC12aWV3cG9ydHstd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6aGlkZGVufS5hLXZpZXdvcHRpb25zLXNlY3Rpb257cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpibG9jaztib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZGRkO2ZvbnQtc2l6ZTowfXVsLmEtdmlld29wdGlvbnMtbGlzdHtsaXN0LXN0eWxlLXR5cGU6bm9uZTttYXJnaW46MDtmb250LXNpemU6MDtsaW5lLWhlaWdodDoxO2Rpc3BsYXk6aW5saW5lLWJsb2NrfXVsLmEtdmlld29wdGlvbnMtbGlzdCBsaS5hLXZpZXdvcHRpb25zLWxpc3QtaXRlbXtsaXN0LXN0eWxlLXR5cGU6bm9uZTtkaXNwbGF5OmlubGluZS1ibG9ja311bC5hLXZpZXdvcHRpb25zLWxpc3QgbGkuYS12aWV3b3B0aW9ucy1saXN0LWl0ZW0gYSx1bC5hLXZpZXdvcHRpb25zLWxpc3QgbGkuYS12aWV3b3B0aW9ucy1saXN0LWl0ZW0uYS12aWV3b3B0aW9ucy1saXN0LWluZm97Y29sb3I6IzExMTt0ZXh0LWRlY29yYXRpb246bm9uZTtmb250LXNpemU6MTNweDtkaXNwbGF5OmJsb2NrO2xpbmUtaGVpZ2h0OjE7cGFkZGluZzo4cHggNnB4O2JvcmRlci1ib3R0b206MnB4IHNvbGlkIHRyYW5zcGFyZW50O3Bvc2l0aW9uOnJlbGF0aXZlO2JvdHRvbTotMXB4fXVsLmEtdmlld29wdGlvbnMtbGlzdCBsaS5hLXZpZXdvcHRpb25zLWxpc3QtaXRlbSBhIC5hLWljb257cG9zaXRpb246cmVsYXRpdmU7Ym90dG9tOi0xcHg7bWFyZ2luLXJpZ2h0Oi40MjM1ZW07b3BhY2l0eTouNH11bC5hLXZpZXdvcHRpb25zLWxpc3QgbGkuYS12aWV3b3B0aW9ucy1saXN0LWl0ZW0gYTphY3RpdmUsdWwuYS12aWV3b3B0aW9ucy1saXN0IGxpLmEtdmlld29wdGlvbnMtbGlzdC1pdGVtIGE6aG92ZXJ7Y29sb3I6I2M0NTUwMH11bC5hLXZpZXdvcHRpb25zLWxpc3QgbGkuYS12aWV3b3B0aW9ucy1saXN0LWl0ZW0gYTphY3RpdmUgLmEtaWNvbix1bC5hLXZpZXdvcHRpb25zLWxpc3QgbGkuYS12aWV3b3B0aW9ucy1saXN0LWl0ZW0gYTpob3ZlciAuYS1pY29ue29wYWNpdHk6Ljd9dWwuYS12aWV3b3B0aW9ucy1saXN0IGxpLmEtdmlld29wdGlvbnMtbGlzdC1pdGVtLmEtdmlld29wdGlvbnMtbGlzdC1pbmZve2NvbG9yOiM1NTV9dWwuYS12aWV3b3B0aW9ucy1saXN0IGxpLmEtdmlld29wdGlvbnMtbGlzdC1pdGVtLmEtc2VsZWN0ZWQgYXtmb250LXdlaWdodDo3MDA7Y29sb3I6IzExMTtib3JkZXItYm90dG9tLWNvbG9yOiNlNzc2MDB9dWwuYS12aWV3b3B0aW9ucy1saXN0IGxpLmEtdmlld29wdGlvbnMtbGlzdC1pdGVtLmEtc2VsZWN0ZWQgYSAuYS1pY29ue29wYWNpdHk6MX11bC5hLXZpZXdvcHRpb25zLWxpc3QgbGkuYS12aWV3b3B0aW9ucy1saXN0LWl0ZW0uYS12aWV3b3B0aW9ucy1saXN0LWRyb3Bkb3duIGF7cGFkZGluZy1yaWdodDoxNnB4fXVsLmEtdmlld29wdGlvbnMtbGlzdCBsaS5hLXZpZXdvcHRpb25zLWxpc3QtaXRlbS5hLXZpZXdvcHRpb25zLWxpc3QtZHJvcGRvd24gYSAuYS1pY29uLWRyb3Bkb3due3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjZweDt0b3A6MTBweDtvcGFjaXR5OjE7bWFyZ2luLXJpZ2h0OjA7Ym90dG9tOmF1dG99dWwuYS12aWV3b3B0aW9ucy1saXN0IGxpLmEtdmlld29wdGlvbnMtbGlzdC1pdGVtLmEtdmlld29wdGlvbnMtbGlzdC1kcm9wZG93biBhOmhvdmVyIC5hLWljb24tZHJvcGRvd257b3BhY2l0eTouN311bC5hLXZpZXdvcHRpb25zLWxpc3QgbGkuYS12aWV3b3B0aW9ucy1saXN0LWl0ZW0uYS12aWV3b3B0aW9ucy1saXN0LWljb24gLmEtaWNvbnttYXJnaW4tcmlnaHQ6MH11bC5hLXZpZXdvcHRpb25zLWxpc3QgbGkuYS12aWV3b3B0aW9ucy1saXN0LWl0ZW0rbGkuYS12aWV3b3B0aW9ucy1saXN0LWl0ZW17bWFyZ2luOjAgMCAwIDRweH11bC5hLXZpZXdvcHRpb25zLWxpc3QrdWwuYS12aWV3b3B0aW9ucy1saXN0e21hcmdpbi1sZWZ0OjE4cHg7cGFkZGluZy1sZWZ0OjE4cHg7Ym9yZGVyLWxlZnQ6MXB4IHNvbGlkICNkZGR9dWwuYS12aWV3b3B0aW9ucy1saXN0K3VsLmEtdmlld29wdGlvbnMtbGlzdCAuYS12aWV3b3B0aW9ucy1saXN0LWxhYmVse2ZvbnQtc2l6ZToxM3B4O2ZvbnQtd2VpZ2h0OjQwMDtjb2xvcjojNTU1O21hcmdpbi1yaWdodDouMzg1ZW19LmEtYm94LWdyb3VwPi5hLWJveCAuYS1ib3gtdGFie2JvcmRlci1yYWRpdXM6MCAwIDRweCA0cHh9LmEtYm94LWdyb3VwPi5hLWJveCAuYS1ib3gtdGFiPi5hLWJveC1pbm5lcntib3JkZXItcmFkaXVzOjAgMCA0cHggNHB4fS5hLWJveC10YWJ7Ym9yZGVyLXJhZGl1czowIDAgNHB4IDRweDttYXJnaW4tdG9wOi0xcHh9dWwuYS10YWJze21hcmdpbjowO2xpc3Qtc3R5bGUtdHlwZTpub25lO2JvcmRlcjoxcHggc29saWQgI2RkZDtwYWRkaW5nOjA7YmFja2dyb3VuZC1jb2xvcjojZjNmM2YzfXVsLmEtdGFiczphZnRlcix1bC5hLXRhYnM6YmVmb3Jle2Rpc3BsYXk6dGFibGU7Y29udGVudDpcIlwiO2xpbmUtaGVpZ2h0OjA7Zm9udC1zaXplOjB9dWwuYS10YWJzOmFmdGVye2NsZWFyOmJvdGh9dWwuYS10YWJzIC5hLXRhYi1oZWFkaW5nLHVsLmEtdGFicyBsaXtmbG9hdDpsZWZ0O21hcmdpbi1ib3R0b206LTFweDttYXJnaW4tdG9wOi0xcHg7bGlzdC1zdHlsZS10eXBlOm5vbmV9dWwuYS10YWJzIC5hLXRhYi1oZWFkaW5nIGEsdWwuYS10YWJzIGxpIGF7LXdlYmtpdC10cmFuc2l0aW9uOmFsbCAuMXMgbGluZWFyO3RyYW5zaXRpb246YWxsIC4xcyBsaW5lYXI7dGV4dC1kZWNvcmF0aW9uOm5vbmU7bGluZS1oZWlnaHQ6MTtwYWRkaW5nOjE1cHggMTdweCAxNXB4IDE4cHg7ZGlzcGxheTpibG9jaztib3JkZXI6MXB4IHNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci1ib3R0b206MDtwb3NpdGlvbjpyZWxhdGl2ZTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fXVsLmEtdGFicyAuYS10YWItaGVhZGluZyBhOmFmdGVyLHVsLmEtdGFicyBsaSBhOmFmdGVye2NvbnRlbnQ6XCJcIjt3aWR0aDoxMDAlO2hlaWdodDoxcHg7cG9zaXRpb246YWJzb2x1dGU7Ym90dG9tOjA7bGVmdDowOy13ZWJraXQtdHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIC4xcyBsaW5lYXI7dHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIC4xcyBsaW5lYXJ9dWwuYS10YWJzIC5hLXRhYi1oZWFkaW5nIGE6aG92ZXIsdWwuYS10YWJzIGxpIGE6aG92ZXJ7Ym9yZGVyLXRvcC1jb2xvcjojZTc3NjAwO3RleHQtZGVjb3JhdGlvbjpub25lfXVsLmEtdGFicyAuYS10YWItaGVhZGluZy5hLWFjdGl2ZSBhLHVsLmEtdGFicyBsaS5hLWFjdGl2ZSBhe2JvcmRlci1jb2xvcjojZGRkO2JhY2tncm91bmQtY29sb3I6I2ZmZjtjb2xvcjojYzQ1NTAwO2JvcmRlci10b3AtY29sb3I6I2U3NzYwMDtmb250LXdlaWdodDo3MDB9dWwuYS10YWJzIC5hLXRhYi1oZWFkaW5nLmEtYWN0aXZlIGE6aG92ZXI6YWZ0ZXIsdWwuYS10YWJzIGxpLmEtYWN0aXZlIGE6aG92ZXI6YWZ0ZXJ7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH11bC5hLXRhYnMgLmEtdGFiLWhlYWRpbmc6Zmlyc3QtY2hpbGQgYSx1bC5hLXRhYnMgbGk6Zmlyc3QtY2hpbGQgYXtib3JkZXItbGVmdDpub25lfS5hLWFjY29yZGlvbiAuYS1ib3h7b3ZlcmZsb3c6aGlkZGVufS5hLWFjY29yZGlvbiAuYS1ib3g6Zmlyc3QtY2hpbGQgLmEtYWNjb3JkaW9uLXJvd3tib3JkZXItcmFkaXVzOjRweCA0cHggMCAwfS5hLWFjY29yZGlvbiAuYS1hY2NvcmRpb24tcm93LWNvbnRhaW5lcntwYWRkaW5nOjB9LmEtYWNjb3JkaW9uIC5hLWFjY29yZGlvbi1yb3d7cG9zaXRpb246cmVsYXRpdmU7YmFja2dyb3VuZC1jb2xvcjojZjNmM2YzOy13ZWJraXQtdHJhbnNpdGlvbjphbGwgLjFzIGxpbmVhcjt0cmFuc2l0aW9uOmFsbCAuMXMgbGluZWFyO2Rpc3BsYXk6YmxvY2s7Y29sb3I6aW5oZXJpdDt0ZXh0LWRlY29yYXRpb246bm9uZTtvdXRsaW5lOjA7Y3Vyc29yOnBvaW50ZXI7cGFkZGluZzoxMHB4IDE4cHggMTBweCA0M3B4fS5hLWFjY29yZGlvbiAuYS1hY2NvcmRpb24tcm93IGg1e2ZvbnQtd2VpZ2h0OjQwMH0uYS1hY2NvcmRpb24gLmEtYWNjb3JkaW9uLXJvdyAuYS1pY29uLXJhZGlvLWFjdGl2ZSwuYS1hY2NvcmRpb24gLmEtYWNjb3JkaW9uLXJvdyAuYS1pY29uLXJhZGlvLWluYWN0aXZle3Bvc2l0aW9uOmFic29sdXRlO3RvcDo1MCU7bGVmdDoxN3B4O2hlaWdodDoxN3B4O3dpZHRoOjE3cHg7bWFyZ2luLXRvcDotOC41cHh9LmEtYWNjb3JkaW9uIC5hLWFjY29yZGlvbi1yb3c6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZTllOWU5fS5hLWFjY29yZGlvbiAuYS1hY2NvcmRpb24tcm93OmhvdmVyIC5hLWljb24tcmFkaW8taW5hY3RpdmV7YmFja2dyb3VuZC1wb3NpdGlvbjotNTRweCAtMjk0cHh9LmEtYWNjb3JkaW9uIC5hLWFjY29yZGlvbi1pbm5lcntwYWRkaW5nOjAgMThweDttYXJnaW4tYm90dG9tOjE0cHg7ZGlzcGxheTpub25lO292ZXJmbG93OmhpZGRlbn0uYS1hY2NvcmRpb24gLmEtYWNjb3JkaW9uLWFjdGl2ZSAuYS1hY2NvcmRpb24tcm93e2N1cnNvcjpkZWZhdWx0O2JhY2tncm91bmQtY29sb3I6I2ZmZn0uYS1hY2NvcmRpb24gLmEtYWNjb3JkaW9uLWFjdGl2ZSAuYS1hY2NvcmRpb24tcm93IGg1e2ZvbnQtd2VpZ2h0OjcwMH0uYS1hY2NvcmRpb24gLmEtYWNjb3JkaW9uLWFjdGl2ZSAuYS1hY2NvcmRpb24taW5uZXJ7ZGlzcGxheTpibG9jaztiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LmEtYWNjb3JkaW9uIC5hLWJveDpub3QoLmEtYWNjb3JkaW9uLWFjdGl2ZSkgLmEtYWNjb3JkaW9uLXJvdzpob3Zlcntib3gtc2hhZG93OjAgMCAwIDFweCB0cmFuc3BhcmVudCBpbnNldH0uYS1hY2NvcmRpb24gLmEtYm94Om5vdCguYS1hY2NvcmRpb24tYWN0aXZlKSAuYS1hY2NvcmRpb24tcm93OmFjdGl2ZXtib3gtc2hhZG93OjAgMCAwIDFweCB0cmFuc3BhcmVudCBpbnNldDtiYWNrZ3JvdW5kLWNvbG9yOiNlOWU5ZTl9LmEtYWNjb3JkaW9uIC5hLWFjY29yZGlvbi1yb3c6YWN0aXZlIC5hLWljb24tcmFkaW8taW5hY3RpdmV7Ym94LXNoYWRvdzowIDAgM3B4IDJweCByZ2JhKDIyOCwxMjEsMTcsLjUpO2JvcmRlci1yYWRpdXM6NTAlfS5hLWFjY29yZGlvbiAuYS1hY2NvcmRpb24tcm93OmFjdGl2ZSAuYS1pY29uLXJhZGlvLWluYWN0aXZlOmFmdGVye2JvcmRlcjoxcHggc29saWQgI2U3NzYwMDtib3JkZXItcmFkaXVzOjUwJTtjb250ZW50OicgJztkaXNwbGF5OmJsb2NrO2hlaWdodDoxNXB4O3dpZHRoOjE1cHh9LmEtYWNjb3JkaW9uIC5hLWFjY29yZGlvbi1yb3c6YWN0aXZlIC5hLWljb24tcmFkaW8tYWN0aXZle2JveC1zaGFkb3c6MCAwIDNweCAycHggcmdiYSgyMjgsMTIxLDE3LC41KTtib3JkZXItcmFkaXVzOjUwJX0uYS1hY2NvcmRpb24gLmEtYWNjb3JkaW9uLXJvdzphY3RpdmUgLmEtaWNvbi1yYWRpby1hY3RpdmU6YWZ0ZXJ7Ym9yZGVyOjFweCBzb2xpZCAjZTc3NjAwO2JvcmRlci1yYWRpdXM6NTAlO2NvbnRlbnQ6JyAnO2Rpc3BsYXk6YmxvY2s7aGVpZ2h0OjE1cHg7d2lkdGg6MTVweH0uYS1hY2NvcmRpb24gLmEtYWNjb3JkaW9uLXJvdzpmb2N1cyAuYS1pY29uLXJhZGlvLWluYWN0aXZle2JveC1zaGFkb3c6MCAwIDNweCAycHggcmdiYSgyMjgsMTIxLDE3LC41KTtib3JkZXItcmFkaXVzOjUwJX0uYS1hY2NvcmRpb24gLmEtYWNjb3JkaW9uLXJvdzpmb2N1cyAuYS1pY29uLXJhZGlvLWluYWN0aXZlOmFmdGVye2JvcmRlcjoxcHggc29saWQgI2U3NzYwMDtib3JkZXItcmFkaXVzOjUwJTtjb250ZW50OicgJztkaXNwbGF5OmJsb2NrO2hlaWdodDoxNXB4O3dpZHRoOjE1cHh9LmEtYWNjb3JkaW9uIC5hLWFjY29yZGlvbi1yb3c6Zm9jdXMgLmEtaWNvbi1yYWRpby1hY3RpdmV7Ym94LXNoYWRvdzowIDAgM3B4IDJweCByZ2JhKDIyOCwxMjEsMTcsLjUpO2JvcmRlci1yYWRpdXM6NTAlfS5hLWFjY29yZGlvbiAuYS1hY2NvcmRpb24tcm93OmZvY3VzIC5hLWljb24tcmFkaW8tYWN0aXZlOmFmdGVye2JvcmRlcjoxcHggc29saWQgI2U3NzYwMDtib3JkZXItcmFkaXVzOjUwJTtjb250ZW50OicgJztkaXNwbGF5OmJsb2NrO2hlaWdodDoxNXB4O3dpZHRoOjE1cHh9LmEtYWNjb3JkaW9uLWExMXk6Zm9jdXN7b3V0bGluZTowfS5hLWV4cGFuZGVyLXBhcnRpYWwtY29sbGFwc2UtY29udGFpbmVyLC5hLWV4cGFuZGVyLXBhcnRpYWwtY29sbGFwc2UtY29udGVudHtvdmVyZmxvdzpoaWRkZW47cG9zaXRpb246cmVsYXRpdmV9LmEtZXhwYW5kZXItcGFydGlhbC1jb2xsYXBzZS1oZWFkZXJ7cG9zaXRpb246YWJzb2x1dGU7Ym90dG9tOjA7d2lkdGg6MTAwJTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7LXdlYmtpdC10cmFuc2l0aW9uOm9wYWNpdHkgLjRzIGVhc2Utb3V0O3RyYW5zaXRpb246b3BhY2l0eSAuNHMgZWFzZS1vdXR9LmEtZXhwYW5kZXItY29udGVudC1mYWRle2hlaWdodDoxNnB4O3dpZHRoOjEwMCU7cG9zaXRpb246YWJzb2x1dGU7dG9wOi0xNnB4O2xlZnQ6MDtiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCxyZ2JhKDI1NSwyNTUsMjU1LDApLCNmZmYpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSxyZ2JhKDI1NSwyNTUsMjU1LDApLCNmZmYpfS5hLWFsZXJ0LmEtYWxlcnQtaW5mbyAuYS1leHBhbmRlci1wYXJ0aWFsLWNvbGxhcHNlLWhlYWRlcntiYWNrZ3JvdW5kLWNvbG9yOiNmNmY2ZjZ9LmEtYWxlcnQuYS1hbGVydC1pbmZvIC5hLWV4cGFuZGVyLWNvbnRlbnQtZmFkZXtiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCxyZ2JhKDI0NiwyNDYsMjQ2LDApLCNmNmY2ZjYpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSxyZ2JhKDI0NiwyNDYsMjQ2LDApLCNmNmY2ZjYpfS5hLWFsZXJ0LmEtYWxlcnQtc3VjY2VzcyAuYS1leHBhbmRlci1wYXJ0aWFsLWNvbGxhcHNlLWhlYWRlcntiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LmEtYWxlcnQuYS1hbGVydC1zdWNjZXNzIC5hLWV4cGFuZGVyLWNvbnRlbnQtZmFkZXtiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCxyZ2JhKDI1NSwyNTUsMjU1LDApLCNmZmYpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSxyZ2JhKDI1NSwyNTUsMjU1LDApLCNmZmYpfS5hLWFsZXJ0LmEtYWxlcnQtd2FybmluZyAuYS1leHBhbmRlci1wYXJ0aWFsLWNvbGxhcHNlLWhlYWRlcntiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LmEtYWxlcnQuYS1hbGVydC13YXJuaW5nIC5hLWV4cGFuZGVyLWNvbnRlbnQtZmFkZXtiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCxyZ2JhKDI1NSwyNTUsMjU1LDApLCNmZmYpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSxyZ2JhKDI1NSwyNTUsMjU1LDApLCNmZmYpfS5hLWFsZXJ0LmEtYWxlcnQtZXJyb3IgLmEtZXhwYW5kZXItcGFydGlhbC1jb2xsYXBzZS1oZWFkZXJ7YmFja2dyb3VuZC1jb2xvcjojZmZmfS5hLWFsZXJ0LmEtYWxlcnQtZXJyb3IgLmEtZXhwYW5kZXItY29udGVudC1mYWRle2JhY2tncm91bmQ6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLHJnYmEoMjU1LDI1NSwyNTUsMCksI2ZmZik7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLHJnYmEoMjU1LDI1NSwyNTUsMCksI2ZmZil9LmEtc3dpdGNoLXJvd3tkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nLXJpZ2h0OjMxcHg7cG9zaXRpb246cmVsYXRpdmV9LmEtc3dpdGNoLXJvdzphZnRlciwuYS1zd2l0Y2gtcm93OmJlZm9yZXtkaXNwbGF5OnRhYmxlO2NvbnRlbnQ6XCJcIjtsaW5lLWhlaWdodDowO2ZvbnQtc2l6ZTowfS5hLXN3aXRjaC1yb3c6YWZ0ZXJ7Y2xlYXI6Ym90aH0uYS1zd2l0Y2gtcm93IC5hLXN3aXRjaC1sYWJlbHstd2Via2l0LXRyYW5zaXRpb246YWxsIC4zcyBlYXNlO3RyYW5zaXRpb246YWxsIC4zcyBlYXNlO2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1yaWdodDo2cHg7bGluZS1oZWlnaHQ6MjFweCFpbXBvcnRhbnQ7Y29sb3I6Izc2NzY3NjtjdXJzb3I6cG9pbnRlcn0uYS1zd2l0Y2gtcm93LmEtZGlzYWJsZWR7b3BhY2l0eTouNX0uYS1zd2l0Y2gtcm93LmEtZGlzYWJsZWQgLmEtc3dpdGNoLWNvbCwuYS1zd2l0Y2gtcm93LmEtZGlzYWJsZWQgLmEtc3dpdGNoLWNvbnRyb2wsLmEtc3dpdGNoLXJvdy5hLWRpc2FibGVkIC5hLXN3aXRjaC1sYWJlbHtjdXJzb3I6ZGVmYXVsdH0uYS1zd2l0Y2gtcm93LmEtZGlzYWJsZWQgLmEtc3dpdGNoLWNvbnRyb2w6YWN0aXZle2JvcmRlci1jb2xvcjojZDJkNWRiICNiN2JhYmUgI2I3YmFiZX0uYS1zd2l0Y2gtcm93OmhvdmVyIC5hLXN3aXRjaC1jb250cm9se2JvcmRlci1jb2xvcjojYWQ1ODAwICNiOTVlMDAgI2NmNmEwMH0uYS1zd2l0Y2gtcm93OmhvdmVyLmEtYWN0aXZlIC5hLXN3aXRjaC1jb250cm9se2JvcmRlci1jb2xvcjojYTk1YjBlICNjMDY3MTAgI2MwNjcxMH0uYS1zd2l0Y2gtcm93LmEtZGlzYWJsZWQ6aG92ZXIgLmEtc3dpdGNoLWNvbnRyb2x7Ym9yZGVyLWNvbG9yOiNkMmQ1ZGIgI2I3YmFiZSAjYjdiYWJlfS5hLXN3aXRjaC1yb3cuYS1kaXNhYmxlZDpob3Zlci5hLWFjdGl2ZSAuYS1zd2l0Y2gtY29udHJvbHtib3JkZXItY29sb3I6I2E5NWIwZSAjYzA2NzEwICNjMDY3MTB9LmEtc3dpdGNoe2Rpc3BsYXk6YmxvY2s7ZmxvYXQ6cmlnaHQ7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7cmlnaHQ6MDtoZWlnaHQ6MjFweDt3aWR0aDozMXB4O2JvcmRlci1yYWRpdXM6M3B4O2JvcmRlcjoxcHggc29saWQgI2FkYjFiODtib3JkZXItdG9wLWNvbG9yOiM4ZDkwOTY7YmFja2dyb3VuZC1jb2xvcjojZjBmMGYwO2JveC1zaGFkb3c6MCAxcHggMnB4IHJnYmEoMCwwLDAsLjA3KSBpbnNldDstd2Via2l0LXRyYW5zaXRpb246YmFja2dyb3VuZC1jb2xvciAuM3MgZWFzZTt0cmFuc2l0aW9uOmJhY2tncm91bmQtY29sb3IgLjNzIGVhc2U7LXdlYmtpdC10b3VjaC1jYWxsb3V0Om5vbmU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lfS5hLXN3aXRjaDphZnRlciwuYS1zd2l0Y2g6YmVmb3Jle2Rpc3BsYXk6dGFibGU7Y29udGVudDpcIlwiO2xpbmUtaGVpZ2h0OjA7Zm9udC1zaXplOjB9LmEtc3dpdGNoOmFmdGVye2NsZWFyOmJvdGh9LmEtc3dpdGNoLWNvbnRyb2x7cG9zaXRpb246YWJzb2x1dGU7bGVmdDotMXB4O3RvcDotMXB4O2Rpc3BsYXk6YmxvY2s7ei1pbmRleDoxO2N1cnNvcjpwb2ludGVyO2hlaWdodDoyMXB4O3dpZHRoOjIxcHg7Ym9yZGVyLXJhZGl1czozcHg7Ym9yZGVyOjFweCBzb2xpZCAjYTJhNmFjO2JvcmRlci10b3AtY29sb3I6I2FkYjFiODtib3JkZXItYm90dG9tLWNvbG9yOiM4ZDkwOTY7YmFja2dyb3VuZDojZjVmNmY5O2JhY2tncm91bmQ6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCNlZmYxZjMsI2ZmZik7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCNlZmYxZjMsI2ZmZik7Ym94LXNoYWRvdzowIDFweCAwIDAgI2ZmZiBpbnNldCwwIDFweCAzcHggcmdiYSgwLDAsMCwuMSkgaW5zZXQsMCAwIDFweCAjZmZmIGluc2V0LDAgMXB4IDJweCByZ2JhKDAsMCwwLC4xNSl9LmEtc3dpdGNoLWNvbnRyb2w6YWN0aXZle2JvcmRlci1jb2xvcjojYWQ1ODAwICNiOTVlMDAgI2NmNmEwMH0uYS1hY3RpdmUgLmEtc3dpdGNoe2JhY2tncm91bmQtY29sb3I6I2U3NzYwMDtib3JkZXItY29sb3I6I2FkNTgwMCAjYjk1ZTAwICNjZjZhMDB9LmEtYWN0aXZlIC5hLXN3aXRjaC1jb250cm9se2JvcmRlci1jb2xvcjojYWQ1ODAwICNiOTVlMDAgI2NmNmEwMDtsZWZ0OjEwcHh9LmEtYWN0aXZlIC5hLXN3aXRjaC1sYWJlbHtjb2xvcjojYzQ1NTAwfS5hLXN3aXRjaC1pbnB1dC5hLWZvY3VzK2xhYmVsIC5hLXN3aXRjaCwuYS1zd2l0Y2gtaW5wdXQ6Zm9jdXMrbGFiZWwgLmEtc3dpdGNoe2JveC1zaGFkb3c6MCAwIDNweCAycHggcmdiYSgyMjgsMTIxLDE3LC41KX0uYS10cmFuc2l0aW9uIC5hLXN3aXRjaC1jb250cm9se2xlZnQ6MDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGVYKC0xcHgpOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTFweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTFweCl9LmEtdHJhbnNpdGlvbiAuYS1hY3RpdmUgLmEtc3dpdGNoLWNvbnRyb2x7bGVmdDowOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZVgoMTBweCk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlWCgxMHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlWCgxMHB4KX11bC5hLWJveC1saXN0IGEuYS1zd2l0Y2gtY29sLHVsLmEtYm94LWxpc3QgYS5hLXN3aXRjaC1jb250cm9se3BhZGRpbmc6MH0uYS1uby1qcyAuYS1zd2l0Y2gtcm93IC5hLXN3aXRjaHtkaXNwbGF5Om5vbmV9LmEtbm8tanMgLmEtc3dpdGNoLXJvdyAuYS1zd2l0Y2gtbGFiZWx7Y29sb3I6IzU1NX0uYS1qcyAuYS1zd2l0Y2gtcm93IGlucHV0e3Bvc2l0aW9uOmFic29sdXRlIWltcG9ydGFudDtsZWZ0OjAhaW1wb3J0YW50O2JvdHRvbTotMXB4IWltcG9ydGFudDt6LWluZGV4Oi0xIWltcG9ydGFudDtvcGFjaXR5OjB9LmEtcHJvZ3Jlc3MtYmFye3Bvc2l0aW9uOnJlbGF0aXZlfS5hLXByb2dyZXNzLWJhciAuYS1tZXRlciwuYS1wcm9ncmVzcy1iYXIgLmEtbWV0ZXItd2l0aC10eHR7aGVpZ2h0OjE1cHh9LmEtcHJvZ3Jlc3MtYmFyIC5hLW1ldGVyIC5hLW1ldGVyLXByb2dyZXNzLXR4dCwuYS1wcm9ncmVzcy1iYXIgLmEtbWV0ZXItd2l0aC10eHQgLmEtbWV0ZXItcHJvZ3Jlc3MtdHh0e2Rpc3BsYXk6bm9uZX0uYS1wcm9ncmVzcy1iYXIgLmEtbWV0ZXIgLmEtbWV0ZXItYmFyLC5hLXByb2dyZXNzLWJhciAuYS1tZXRlci13aXRoLXR4dCAuYS1tZXRlci1iYXJ7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCM3NUUzNzUsIzJCQUMyQik7YmFja2dyb3VuZC1jb2xvcjojNzVFMzc1fS5hLXByb2dyZXNzLWluZGljYXRvcnttYXJnaW4tYm90dG9tOjFweH0uYS1wcm9ncmVzcy1pbmRpY2F0b3IgLmEtdG9vbHRpcHtwb3NpdGlvbjpyZWxhdGl2ZTt2aXNpYmlsaXR5OnZpc2libGU7bWF4LXdpZHRoOjEwMCU7bWluLXdpZHRoOjUwcHg7cGFkZGluZzowO3Zpc2liaWxpdHk6aGlkZGVuO29wYWNpdHk6MDstd2Via2l0LXRyYW5zaXRpb246LjVzIG9wYWNpdHkgZWFzZTt0cmFuc2l0aW9uOi41cyBvcGFjaXR5IGVhc2V9LmEtcHJvZ3Jlc3MtaW5kaWNhdG9yIC5hLXRvb2x0aXAuYS1wcm9ncmVzcy10b29sdGlwLXJldmVhbGVke3Zpc2liaWxpdHk6dmlzaWJsZTtvcGFjaXR5OjF9LmEtcHJvZ3Jlc3MtaW5kaWNhdG9yIC5hLXRvb2x0aXAuYS1wcm9ncmVzcy10b29sdGlwe3otaW5kZXg6MX0uYS1wcm9ncmVzcy1pbmRpY2F0b3IgLmEtdG9vbHRpcC5hLXByb2dyZXNzLXRvb2x0aXAgLmEtdG9vbHRpcC1pbm5lcntiYWNrZ3JvdW5kLWNvbG9yOiM0NDRjNTY7cGFkZGluZzoxcHggMTBweDt2ZXJ0aWNhbC1hbGlnbjpib3R0b207Ym9yZGVyLXJhZGl1czozcHg7Ym94LXNoYWRvdzppbnNldCAwIDFweCAycHggMCByZ2JhKDI1NSwyNTUsMjU1LC4yKX0uYS1wcm9ncmVzcy1pbmRpY2F0b3IgLmEtdG9vbHRpcC5hLXByb2dyZXNzLXRvb2x0aXAgLmEtYXJyb3d7cmlnaHQ6LTlweDtib3R0b206MXB4O2JvcmRlci13aWR0aDoxMHB4IDlweCAwO2JvcmRlci10b3AtY29sb3I6IzQ0NGM1Nn0uYS1wcm9ncmVzcy1pbmRpY2F0b3IgLmEtdG9vbHRpcC5hLXByb2dyZXNzLXRvb2x0aXAgLmEtYXJyb3ctYm9yZGVye2JvdHRvbTotOXB4O2xlZnQ6NDklO2JvcmRlci13aWR0aDoxMHB4IDlweCAwO2JvcmRlci10b3AtY29sb3I6IzJmMzUzYn0uYS1wcm9ncmVzcy1wcm9tcHR7bWFyZ2luOjhweCAwfUAtd2Via2l0LWtleWZyYW1lcyByb3RhdGUzNjB7ZnJvbXt0cmFuc2Zvcm06cm90YXRlKDApfXRve3RyYW5zZm9ybTpyb3RhdGUoMzYwZGVnKX19QGtleWZyYW1lcyByb3RhdGUzNjB7ZnJvbXt0cmFuc2Zvcm06cm90YXRlKDApfXRve3RyYW5zZm9ybTpyb3RhdGUoMzYwZGVnKX19LmEtcG9wb3Zlci1sb2FkaW5ne21pbi13aWR0aDo3NXB4O2hlaWdodDo3NXB4O2JvcmRlcjowO3dpZHRoOjc1cHg7YmFja2dyb3VuZDp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9BbWF6b25VSVNwaW5uZXItc3Bpbm5lcl9ncmF5XzJ4LTMwNTk5NzQzNGViZDVhNzJjZDNhYTU5OGEwMTlmY2M2ZTFlZmUyM2EuX1YyXy5naWYpIDUwJSA1MCUgbm8tcmVwZWF0fUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzoxLjUpLG9ubHkgc2NyZWVuIGFuZCAobWluLXJlc29sdXRpb246MTQ0ZHBpKXsuYS1wb3BvdmVyLWxvYWRpbmd7YmFja2dyb3VuZDp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9BbWF6b25VSVNwaW5uZXItc3Bpbm5lcl9ncmF5XzR4LTE3MDBjOTdhODA5OThlZTEwZjhkOTcyYTRjODliNmViNjRjY2ZkYjEuX1YyXy5naWYpIDUwJSA1MCUgbm8tcmVwZWF0O2JhY2tncm91bmQtc2l6ZTo1MHB4fX0uYS1wb3BvdmVyLWxvYWRpbmctd3JhcHBlcnttaW4td2lkdGg6MTIwcHh9LmEtcG9wb3Zlci1wcmVsb2Fke2Rpc3BsYXk6bm9uZX0uYS1wb3BvdmVyLWhpZGRlbnt2aXNpYmlsaXR5OmhpZGRlbiFpbXBvcnRhbnR9LmEtcG9wb3Zlci10cmFuc3BhcmVudHtvcGFjaXR5OjB9LmEtcG9wb3ZlcntkaXNwbGF5OmlubGluZS1ibG9jaztwb3NpdGlvbjphYnNvbHV0ZTt2aXNpYmlsaXR5OmhpZGRlbjt0b3A6MDtsZWZ0OjA7ei1pbmRleDoxMDEwO3BhZGRpbmc6OHB4O21heC13aWR0aDo0NDBweH0uYS1wb3BvdmVyOmZvY3Vze291dGxpbmU6MH0uYS1wb3BvdmVyLXdyYXBwZXJ7b3ZlcmZsb3c6aGlkZGVuO2JvcmRlcjoxcHggc29saWQgI2NkY2RjZDtib3JkZXItY29sb3I6cmdiYSgwLDAsMCwuMik7aGVpZ2h0OjEwMCU7d2lkdGg6MTAwJTtib3JkZXItcmFkaXVzOjRweDtib3gtc2hhZG93OjAgMnB4IDRweCByZ2JhKDAsMCwwLC4xMyk7YmFja2dyb3VuZC1jb2xvcjojZmZmfS5hLXBvcG92ZXItaW5uZXJ7YmFja2dyb3VuZC1jb2xvcjojZmZmO3BhZGRpbmc6MTRweCAxOHB4O3RleHQtYWxpZ246bGVmdDtvdmVyZmxvdy14OmhpZGRlbn0uYS1wb3BvdmVyLWlubmVyIC5hLWJ1dHRvbi1jbG9zZXtwb3NpdGlvbjpzdGF0aWM7bWFyZ2luOi0xMHB4IC0xNHB4IDZweCA2cHh9LmEtcG9wb3Zlci1pbm5lci5hLXBhZGRpbmctbm9uZSAuYS1idXR0b24tY2xvc2V7bWFyZ2luOjB9LmEtcG9wb3Zlci1pbm5lciBkbDpsYXN0LWNoaWxkLC5hLXBvcG92ZXItaW5uZXIgb2w6bGFzdC1jaGlsZCwuYS1wb3BvdmVyLWlubmVyIHA6bGFzdC1jaGlsZCwuYS1wb3BvdmVyLWlubmVyIHVsOmxhc3QtY2hpbGR7bWFyZ2luLWJvdHRvbTowfS5hLXBvcG92ZXIuYS1hcnJvdy10b3AgLmEtYXJyb3d7Ym9yZGVyLXRvcC1jb2xvcjojZmZmfS5hLXBvcG92ZXIuYS1hcnJvdy1yaWdodCAuYS1hcnJvd3tib3JkZXItcmlnaHQtY29sb3I6I2ZmZn0uYS1wb3BvdmVyLmEtYXJyb3ctYm90dG9tIC5hLWFycm93e2JvcmRlci1ib3R0b20tY29sb3I6I2ZmZn0uYS1wb3BvdmVyLmEtYXJyb3ctbGVmdCAuYS1hcnJvd3tib3JkZXItbGVmdC1jb2xvcjojZmZmfS5hLXBvcG92ZXItaGVhZGVye3Bvc2l0aW9uOnJlbGF0aXZlO3RleHQtYWxpZ246bGVmdDtiYWNrZ3JvdW5kOiNmMmYyZjI7YmFja2dyb3VuZDojZjFmMWYxO2JhY2tncm91bmQ6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCNmN2Y3ZjcsI2VhZWFlYSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCNmN2Y3ZjcsI2VhZWFlYSk7Ym9yZGVyLXJhZGl1czo0cHggNHB4IDAgMDtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjY2RjZGNkO2JvcmRlci1ib3R0b20tY29sb3I6cmdiYSgwLDAsMCwuMik7Ym94LXNoYWRvdzowIDFweCAwIHJnYmEoMjU1LDI1NSwyNTUsLjUpIGluc2V0LDAgLTFweCAwIHJnYmEoMjU1LDI1NSwyNTUsLjQpIGluc2V0O3BhZGRpbmc6MCAxNHB4O21hcmdpbjowO3otaW5kZXg6MTB9LmEtcG9wb3Zlci1oZWFkZXIgLmEtcG9wb3Zlci1oZWFkZXItY29udGVudHttaW4taGVpZ2h0OjM1cHg7bGluZS1oZWlnaHQ6MTZweDtwYWRkaW5nOjEwcHggMCA5cHg7Zm9udC1zaXplOjEzcHg7Zm9udC13ZWlnaHQ6NzAwO21hcmdpbi1yaWdodDoyMHB4fS5hLXBvcG92ZXIgLmEtYXJyb3csLmEtcG9wb3ZlciAuYS1hcnJvdy1ib3JkZXJ7Ym9yZGVyOjhweCBzb2xpZCB0cmFuc3BhcmVudH0uYS1wb3BvdmVyIC5hLWFycm93e3dpZHRoOjA7aGVpZ2h0OjA7cG9zaXRpb246YWJzb2x1dGU7ZGlzcGxheTpibG9jazt6LWluZGV4OjEwMTF9LmEtcG9wb3ZlciAuYS1hcnJvdy1ib3JkZXJ7cG9zaXRpb246YWJzb2x1dGV9LmEtcG9wb3Zlci5hLWFycm93LXJpZ2h0IC5hLWFycm93LWJvcmRlcntsZWZ0OjA7bWFyZ2luLXRvcDotOHB4O2JvcmRlci1sZWZ0OjA7Ym9yZGVyLXJpZ2h0LWNvbG9yOnJnYmEoMCwwLDAsLjIpfS5hLXBvcG92ZXIuYS1hcnJvdy1yaWdodCAuYS1hcnJvd3t0b3A6LThweDtsZWZ0OjFweDtib3JkZXItbGVmdDowfS5hLXBvcG92ZXIuYS1hcnJvdy1sZWZ0IC5hLWFycm93LWJvcmRlcntyaWdodDowO21hcmdpbi10b3A6LThweDtib3JkZXItcmlnaHQ6MDtib3JkZXItbGVmdC1jb2xvcjpyZ2JhKDAsMCwwLC4yKX0uYS1wb3BvdmVyLmEtYXJyb3ctbGVmdCAuYS1hcnJvd3t0b3A6LThweDtyaWdodDoxcHg7Ym9yZGVyLXJpZ2h0OjB9LmEtcG9wb3Zlci5hLWFycm93LXRvcCAuYS1hcnJvdy1ib3JkZXJ7Ym90dG9tOjA7bWFyZ2luLWxlZnQ6LThweDtib3JkZXItYm90dG9tOjA7Ym9yZGVyLXRvcC1jb2xvcjpyZ2JhKDAsMCwwLC4yKX0uYS1wb3BvdmVyLmEtYXJyb3ctdG9wIC5hLWFycm93e2JvdHRvbToxcHg7cmlnaHQ6LThweDtib3JkZXItYm90dG9tOjB9LmEtcG9wb3Zlci5hLWFycm93LWJvdHRvbSAuYS1hcnJvdy1ib3JkZXJ7dG9wOjA7bWFyZ2luLWxlZnQ6LThweDtib3JkZXItdG9wOjA7Ym9yZGVyLWJvdHRvbS1jb2xvcjpyZ2JhKDAsMCwwLC4yKX0uYS1wb3BvdmVyLmEtYXJyb3ctYm90dG9tIC5hLWFycm93e3RvcDoxcHg7cmlnaHQ6LThweDtib3JkZXItdG9wOjB9LmEtcG9wb3Zlcjpmb2N1c3tvdXRsaW5lOjB9LmEtcG9wb3ZlciAuYS1wb3BvdmVyLWExMXktb2Zmc2NyZWVue29wYWNpdHk6MDtvdmVyZmxvdzpoaWRkZW4haW1wb3J0YW50O2Rpc3BsYXk6YmxvY2shaW1wb3J0YW50O3dpZHRoOjFweCFpbXBvcnRhbnQ7aGVpZ2h0OjFweCFpbXBvcnRhbnQ7bWFyZ2luOjAhaW1wb3J0YW50O3BhZGRpbmc6MCFpbXBvcnRhbnQ7Ym9yZGVyOjAhaW1wb3J0YW50O3Bvc2l0aW9uOmFic29sdXRlIWltcG9ydGFudDtsZWZ0OjAhaW1wb3J0YW50fS5hLXBvcG92ZXIgLmEtcG9wb3Zlci1zdGFydHt0b3A6MXB4IWltcG9ydGFudH0uYS1wb3BvdmVyIC5hLXBvcG92ZXItZW5ke2JvdHRvbToxcHghaW1wb3J0YW50fS5hLXBvcG92ZXItdHJpZ2dlcjpob3ZlcntjdXJzb3I6cG9pbnRlcn0uYS1wb3BvdmVyLXRyaWdnZXI6aG92ZXIgLmEtaWNvbi1wb3BvdmVye29wYWNpdHk6Ljg1fS5hLWJ1dHRvbi1jbG9zZXtkaXNwbGF5OmJsb2NrO3pvb206MTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlci1yYWRpdXM6M3B4O2JvcmRlcjoxcHggc29saWQ7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50O2Zsb2F0OnJpZ2h0O3BhZGRpbmc6OHB4O3Bvc2l0aW9uOmFic29sdXRlO3RvcDo1MCU7cmlnaHQ6NXB4O21hcmdpbjotMTNweCAwIDA7bGluZS1oZWlnaHQ6MH0uYS1idXR0b24tY2xvc2U6YWN0aXZle2JhY2tncm91bmQtY29sb3I6I2U5ZTllOX0uYS1idXR0b24tY2xvc2U6Zm9jdXN7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXItY29sb3I6I2U3NzYwMDtib3gtc2hhZG93OjAgMCAzcHggMnB4IHJnYmEoMjI4LDEyMSwxNywuNSk7b3V0bGluZTowO3BhZGRpbmc6OHB4fS5hLWJ1dHRvbi1jbG9zZTpob3ZlcntjdXJzb3I6cG9pbnRlcn0uYS1idXR0b24tY2xvc2U6aG92ZXIgLmEtaWNvbi1jbG9zZXtvcGFjaXR5Oi44fS5hLWJ1dHRvbi1jbG9zZS1hMTF5e29wYWNpdHk6MDt3aWR0aDoxcHg7aGVpZ2h0OjFweDtwYWRkaW5nOjB9LmEtYnV0dG9uLWNsb3NlLWExMXk6Zm9jdXN7cGFkZGluZzowfS5hLWJ1dHRvbi1jbG9zZS1hMTF5IC5hLWljb24tY2xvc2V7ZGlzcGxheTpub25lfSNhLXBvcG92ZXItbGd0Ym94LC5hLW1vZGFse29wYWNpdHk6Ljc1O2Rpc3BsYXk6bm9uZTtwb3NpdGlvbjpmaXhlZDt0b3A6MDtsZWZ0OjA7aGVpZ2h0OjEwMCU7d2lkdGg6MTAwJTtiYWNrZ3JvdW5kOiMwMDB9I2EtcG9wb3Zlci1vZmZzZXQtdHJhY2tlcntvcGFjaXR5Oi4wMTtwb3NpdGlvbjphYnNvbHV0ZTtoZWlnaHQ6MXB4O3dpZHRoOjFweDt0b3A6MDtsZWZ0OjB9LmEtZHJvcGRvd24tY29tbW9ue3BhZGRpbmc6MDttYXJnaW46MXB4IDAgMDttYXgtd2lkdGg6bm9uZX0uYS1kcm9wZG93bi1jb21tb24gLmEtcG9wb3Zlci1pbm5lcntwYWRkaW5nOjhweCAwfS5hLWRyb3Bkb3duLWNvbW1vbiAuYS1saXN0LWxpbmt7cG9zaXRpb246cmVsYXRpdmU7bGVmdDotMXB4O21hcmdpbi1yaWdodDotMXB4fS5hLWRyb3Bkb3duLWNvbW1vbiAuYS1kcm9wZG93bi1pdGVtOmZvY3VzIC5hLWRyb3Bkb3duLWxpbmt7Ym9yZGVyLWNvbG9yOiNhNmE2YTY7YmFja2dyb3VuZC1jb2xvcjojZjNmM2YzO2NvbG9yOmluaGVyaXR9LmEtZHJvcGRvd24tY29tbW9uIC5hLWRyb3Bkb3duLWl0ZW06Zm9jdXMgLmEtZHJvcGRvd24tbGluay5hLWFjdGl2ZXtiYWNrZ3JvdW5kLWNvbG9yOiNmM2YzZjM7Ym9yZGVyLWNvbG9yOiNhNmE2YTZ9LmEtZHJvcGRvd24tY29tbW9uIC5hLWRyb3Bkb3duLWl0ZW17bWFyZ2luOjA7b3V0bGluZTowfS5hLWRyb3Bkb3duLWNvbW1vbiAuYS1kcm9wZG93bi1pdGVtLmEtY29sb3ItdGVydGlhcnkgLmEtZHJvcGRvd24tbGlua3tjb2xvcjppbmhlcml0fS5hLWRyb3Bkb3duLWNvbW1vbiAuYS1kcm9wZG93bi1saW5re3BhZGRpbmc6MnB4IDEycHggMXB4IDEzcHg7ZGlzcGxheTpibG9jazt3aGl0ZS1zcGFjZTpub3dyYXA7b3V0bGluZTowO2JvcmRlcjoxcHggc29saWQgdHJhbnNwYXJlbnQ7bWFyZ2luLWxlZnQ6MXB4fS5hLWRyb3Bkb3duLWNvbW1vbiAuYS1kcm9wZG93bi1saW5rLmEtYWN0aXZle2JhY2tncm91bmQtY29sb3I6I2YzZjNmMztib3JkZXItY29sb3I6I2U3ZTdlNztib3JkZXItdG9wLWNvbG9yOiNlN2U3ZTc7Ym9yZGVyLWxlZnQtY29sb3I6I2U3NzYwMCFpbXBvcnRhbnR9LmEtZHJvcGRvd24tY29tbW9uIC5hLWRyb3Bkb3duLWxpbmsgaW1ne21hcmdpbi1yaWdodDo1cHh9LmEtZHJvcGRvd24tY29tbW9uIC5hLWRyb3Bkb3duLWxpbmsgLmEtc2l6ZS1iYXNlLC5hLWRyb3Bkb3duLWNvbW1vbiAuYS1kcm9wZG93bi1saW5rIC5hLXNpemUtbWluaSwuYS1kcm9wZG93bi1jb21tb24gLmEtZHJvcGRvd24tbGluayAuYS1zaXplLXNtYWxse2xpbmUtaGVpZ2h0OjF9LmEtZHJvcGRvd24tY29tbW9uIC5hLWRyb3Bkb3duLWxpbmsgLmEtbGlzdC1hbm5ve2Rpc3BsYXk6YmxvY2s7bWFyZ2luLXRvcDo2cHg7Y29sb3I6IzU1NTtmb250LXNpemU6MTFweH0uYS1kcm9wZG93bi1jb21tb24gLmEtZHJvcGRvd24tbGluayAuYS1wcmltZS1sb2dve21hcmdpbi10b3A6LTNweH0uYS1kcm9wZG93bi1jb21tb24gLmRpdmlkZXJ7YmFja2dyb3VuZC1jb2xvcjojZmZmO3BhZGRpbmc6N3B4IDB9LmEtZHJvcGRvd24tY29tbW9uIC5kaXZpZGVyIGhye21hcmdpbjowIWltcG9ydGFudH0uYS1kcm9wZG93bi1jb21tb24gLmEtZHJvcGRvd24taXRlbTphY3RpdmUgLmEtZHJvcGRvd24tbGluaywuYS1kcm9wZG93bi1jb21tb24gLmEtZHJvcGRvd24taXRlbTpob3ZlciAuYS1kcm9wZG93bi1saW5re2JvcmRlci1jb2xvcjojYTZhNmE2O2JhY2tncm91bmQtY29sb3I6I2YzZjNmMztjb2xvcjppbmhlcml0fS5hLWxndGJveC12ZXJ0aWNhbC1zY3JvbGx7b3ZlcmZsb3cteTpzY3JvbGx9LmEtZHJvcGRvd24tbGFiZWx7bWFyZ2luLXJpZ2h0OjZweH0uYS1yaWNoLW9wdGlvbi1pbWFnZXt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9LmEtbm8tanMgLmEtYnV0dG9uLWdyb3VwLXNwbGl0ZHJvcGRvd24sLmEtbm8tanMgLmEtZHJvcGRvd24tY29udGFpbmVyIC5hLWJ1dHRvbi1kcm9wZG93bntkaXNwbGF5Om5vbmV9LmEtZHJvcGRvd24tY29udGFpbmVye3Bvc2l0aW9uOnJlbGF0aXZlfS5hLWpzIC5hLW5hdGl2ZS1kcm9wZG93biwuYS1qcyAuYS1uYXRpdmUtc3BsaXRkcm9wZG93bntwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4Oi0xO29wYWNpdHk6LjAxO21heC13aWR0aDoxMDAlO2xlZnQ6MH0uYS10b29sdGlwe3BhZGRpbmc6NnB4O21pbi13aWR0aDo2MHB4fS5hLXRvb2x0aXAgLmEtYXJyb3csLmEtdG9vbHRpcCAuYS1hcnJvdy1ib3JkZXJ7Ym9yZGVyLXdpZHRoOjZweH0uYS10b29sdGlwLmEtYXJyb3ctcmlnaHQgLmEtYXJyb3ctYm9yZGVye2xlZnQ6LTttYXJnaW4tdG9wOi02cHg7Ym9yZGVyLXJpZ2h0LWNvbG9yOiMyZjM1M2J9LmEtdG9vbHRpcC5hLWFycm93LXJpZ2h0IC5hLWFycm93e3RvcDotNnB4O2JvcmRlci1yaWdodC1jb2xvcjojNDQ0QzU1fS5hLXRvb2x0aXAuYS1hcnJvdy1sZWZ0IC5hLWFycm93LWJvcmRlcntyaWdodDotO21hcmdpbi10b3A6LTZweDtib3JkZXItbGVmdC1jb2xvcjojMmYzNTNifS5hLXRvb2x0aXAuYS1hcnJvdy1sZWZ0IC5hLWFycm93e3RvcDotNnB4O2JvcmRlci1sZWZ0LWNvbG9yOiM0NDRDNTV9LmEtdG9vbHRpcC5hLWFycm93LXRvcCAuYS1hcnJvdy1ib3JkZXJ7Ym90dG9tOjA7bWFyZ2luLWxlZnQ6LTZweDtib3JkZXItdG9wLWNvbG9yOiMyZjM1M2J9LmEtdG9vbHRpcC5hLWFycm93LXRvcCAuYS1hcnJvd3tyaWdodDotNnB4O2JvcmRlci10b3AtY29sb3I6IzQ0NEM1NX0uYS10b29sdGlwLmEtYXJyb3ctYm90dG9tIC5hLWFycm93LWJvcmRlcnt0b3A6LTttYXJnaW4tbGVmdDotNnB4O2JvcmRlci1ib3R0b20tY29sb3I6IzJmMzUzYn0uYS10b29sdGlwLmEtYXJyb3ctYm90dG9tIC5hLWFycm93e3JpZ2h0Oi02cHg7Ym9yZGVyLWJvdHRvbS1jb2xvcjojNDQ0QzU1fS5hLXRvb2x0aXAtaW5uZXJ7ZGlzcGxheTppbmxpbmUtYmxvY2s7Zm9udC1zaXplOjEzcHg7Y29sb3I6I2ZmZjtsaW5lLWhlaWdodDoxLjQ7YmFja2dyb3VuZC1jb2xvcjojNDQ0QzU1O2JvcmRlcjoxcHggc29saWQgIzJmMzUzYjtwYWRkaW5nOjVweCAxMHB4O2JvcmRlci1yYWRpdXM6NHB4fS5hLW1vZGFsLXNjcm9sbGVye2hlaWdodDoxMDAlO3dpZHRoOjEwMCU7cmlnaHQ6MDt0b3A6MDtvdmVyZmxvdzphdXRvO3Bvc2l0aW9uOmZpeGVkO3Zpc2liaWxpdHk6aGlkZGVuO3otaW5kZXg6MTAwOX0uYS1wb3BvdmVyLW1vZGFse3Bvc2l0aW9uOmFic29sdXRlO21pbi13aWR0aDowO21heC13aWR0aDo4MCU7cGFkZGluZzowfS5hLXBvcG92ZXItbW9kYWwgLmEtcG9wb3Zlci13cmFwcGVye2JvcmRlcjoxcHggc29saWQ7Ym9yZGVyLWNvbG9yOnJnYmEoMCwwLDAsLjc1KTtib3gtc2hhZG93OjAgNHB4IDZweCByZ2JhKDAsMCwwLC4yNSk7aGVpZ2h0OjEwMCV9LmEtcG9wb3Zlci1tb2RhbCAuYS1wb3BvdmVyLWZvb3Rlcnt0ZXh0LWFsaWduOnJpZ2h0O2JhY2tncm91bmQtY29sb3I6I2YzZjNmMztiYWNrZ3JvdW5kOiNmOWY5Zjk7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsI2YzZjNmMywjZmZmKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCh0byBib3R0b20sI2YzZjNmMywjZmZmKTtib3gtc2hhZG93OjAgMXB4IDFweCByZ2JhKDAsMCwwLC4wNSkgaW5zZXQ7Ym9yZGVyLXRvcDoxcHggc29saWQgI2RkZDtwYWRkaW5nOjE0cHg7bWFyZ2luOjA7Ym9yZGVyLXJhZGl1czowIDAgNHB4IDRweH0uYS1wb3BvdmVyLW1vZGFsIC5hLWJ1dHRvbi10b3AtcmlnaHR7cG9zaXRpb246c3RhdGljO21hcmdpbjo2cHggNnB4IDAgMH0uYS1wb3BvdmVyLW1vZGFsIC5hLWJ1dHRvbi1hMTF5LXRvcC1yaWdodHttYXJnaW46MDtyaWdodDowO3RvcDowfS5hLXBvcG92ZXItbW9kYWwgLmEtbW9kYWwtY2xvc2Utbm9oZWFkLXRvcHtwb3NpdGlvbjpzdGF0aWM7ZmxvYXQ6bm9uZTt3aWR0aDoxMDAlO3RleHQtYWxpZ246cmlnaHQ7bWFyZ2luOjA7cGFkZGluZzo4cHggOHB4IDAgMH0uYS1wb3BvdmVyLW1vZGFsLmEtbW9kYWwtbW9kZWxlc3N7cG9zaXRpb246Zml4ZWR9Om5vdCguYS1sdC1pZTkpIC5hLXBvcG92ZXItbW9kYWwuYS1tb2RhbC1tb2RlbGVzcyAuYS1wb3BvdmVyLXdyYXBwZXJ7Ym9yZGVyOm5vbmV9LmEtcG9wb3Zlci1tb2RhbC1maXhlZC1oZWlnaHQgLmEtcG9wb3Zlci13cmFwcGVye3Bvc2l0aW9uOnJlbGF0aXZlfS5hLXBvcG92ZXItbW9kYWwtZml4ZWQtaGVpZ2h0IC5hLXBvcG92ZXItZm9vdGVye3Bvc2l0aW9uOmFic29sdXRlO2JvdHRvbTowO2xlZnQ6MDtyaWdodDowfUAtd2Via2l0LWtleWZyYW1lcyBidWJibGUtcG9wezAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZVgoMCkgdHJhbnNsYXRlWigtMzUwcHgpIHNjYWxlM2QoMSwxLDEpO29wYWNpdHk6MH04JXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGVYKDApIHRyYW5zbGF0ZVooNTVweCkgc2NhbGUzZCgxLDEsMSk7b3BhY2l0eTouOH0xMiV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlWCgwKSB0cmFuc2xhdGVaKDApIHNjYWxlM2QoMSwxLDEpO29wYWNpdHk6MX03OCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlWCgwKSB0cmFuc2xhdGVaKDApIHNjYWxlM2QoMSwxLDEpO29wYWNpdHk6MX04MiV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlWCgwKSB0cmFuc2xhdGVaKDU1cHgpIHNjYWxlM2QoMSwxLDEpO29wYWNpdHk6Ljh9OTAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZVgoMCkgdHJhbnNsYXRlWigtMzUwcHgpIHNjYWxlM2QoMSwxLDEpO29wYWNpdHk6MDt0b3A6NDAlfTEwMCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlWCgwKSB0cmFuc2xhdGVaKC0zNTBweCkgc2NhbGUzZCgxLDEsMSk7b3BhY2l0eTowO3RvcDotOTk5OXB4fX1Aa2V5ZnJhbWVzIGJ1YmJsZS1wb3B7MCV7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoMCkgdHJhbnNsYXRlWigtMzUwcHgpIHNjYWxlM2QoMSwxLDEpO29wYWNpdHk6MH04JXt0cmFuc2Zvcm06dHJhbnNsYXRlWCgwKSB0cmFuc2xhdGVaKDU1cHgpIHNjYWxlM2QoMSwxLDEpO29wYWNpdHk6Ljh9MTIle3RyYW5zZm9ybTp0cmFuc2xhdGVYKDApIHRyYW5zbGF0ZVooMCkgc2NhbGUzZCgxLDEsMSk7b3BhY2l0eToxfTc4JXt0cmFuc2Zvcm06dHJhbnNsYXRlWCgwKSB0cmFuc2xhdGVaKDApIHNjYWxlM2QoMSwxLDEpO29wYWNpdHk6MX04MiV7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoMCkgdHJhbnNsYXRlWig1NXB4KSBzY2FsZTNkKDEsMSwxKTtvcGFjaXR5Oi44fTkwJXt0cmFuc2Zvcm06dHJhbnNsYXRlWCgwKSB0cmFuc2xhdGVaKC0zNTBweCkgc2NhbGUzZCgxLDEsMSk7b3BhY2l0eTowO3RvcDo0MCV9MTAwJXt0cmFuc2Zvcm06dHJhbnNsYXRlWCgwKSB0cmFuc2xhdGVaKC0zNTBweCkgc2NhbGUzZCgxLDEsMSk7b3BhY2l0eTowO3RvcDotOTk5OXB4fX0uYS1jaGFuZ2VvdmVye3Bvc2l0aW9uOmZpeGVkO3RvcDoxNXB4O3JpZ2h0OjE1cHg7b3ZlcmZsb3c6dmlzaWJsZTt6LWluZGV4OjEyMDA7LXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OnZpc2libGU7YmFja2ZhY2UtdmlzaWJpbGl0eTp2aXNpYmxlOy13ZWJraXQtcGVyc3BlY3RpdmU6NTAwcHg7LXdlYmtpdC10cmFuc2Zvcm0tc3R5bGU6cHJlc2VydmUtM2Q7cGVyc3BlY3RpdmU6NTAwcHg7dHJhbnNmb3JtLXN0eWxlOnByZXNlcnZlLTNkfS5hLWNoYW5nZW92ZXItbWFudWFse3Bvc2l0aW9uOmFic29sdXRlO2hlaWdodDphdXRvO3dpZHRoOjIwMHB4O2xlZnQ6NTAlO21hcmdpbi1sZWZ0Oi0xMDBweH0uYS1jaGFuZ2VvdmVyLW1hbnVhbCAuYS1jaGFuZ2VvdmVyLWlubmVyey13ZWJraXQtYW5pbWF0aW9uOm5vbmU7YW5pbWF0aW9uOm5vbmU7dG9wOjA7bGVmdDowO21hcmdpbi1sZWZ0OjA7cG9zaXRpb246c3RhdGljfS5hLWNoYW5nZW92ZXItaW5uZXJ7d2lkdGg6MjAwcHg7YmFja2dyb3VuZC1jb2xvcjojNDQ0QzU1O2JvcmRlcjoxcHggc29saWQgIzJmMzUzYjtib3JkZXItcmFkaXVzOjRweDtmb250LXNpemU6MTVweDtsaW5lLWhlaWdodDoxLjM1O2ZvbnQtd2VpZ2h0OjcwMDtjb2xvcjojZmZmO3BhZGRpbmc6MTFweCAxM3B4IDExcHggMTRweDt0ZXh0LWFsaWduOmNlbnRlcjstd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46MCAwOy13ZWJraXQtdHJhbnNmb3JtLXN0eWxlOnByZXNlcnZlLTNkOy13ZWJraXQtYW5pbWF0aW9uOmJ1YmJsZS1wb3AgMi4ycyBlYXNlIDBzIDEgbm9ybWFsOy13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTpmb3J3YXJkczstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7dHJhbnNmb3JtLW9yaWdpbjowIDA7dHJhbnNmb3JtLXN0eWxlOnByZXNlcnZlLTNkO2FuaW1hdGlvbjpidWJibGUtcG9wIDIuMnMgZWFzZSAwcyAxIG5vcm1hbDthbmltYXRpb24tZmlsbC1tb2RlOmZvcndhcmRzO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCl9LmEtcHJvZmlsZXtkaXNwbGF5OnRhYmxlO3RleHQtZGVjb3JhdGlvbjpub25lO2NvbG9yOmluaGVyaXR9LmEtcHJvZmlsZTpob3Zlcnt0ZXh0LWRlY29yYXRpb246bm9uZX0uYS1wcm9maWxlLWF2YXRhci13cmFwcGVye2Rpc3BsYXk6dGFibGUtY2VsbDt3aWR0aDo2NnB4O3BhZGRpbmctcmlnaHQ6MTBweH0uYS1wcm9maWxlW2RhdGEtYS1zaXplPXNtYWxsXSAuYS1wcm9maWxlLWF2YXRhci13cmFwcGVye3BhZGRpbmctcmlnaHQ6OXB4O3dpZHRoOjQzcHh9LmEtcHJvZmlsZS1hdmF0YXJ7cG9zaXRpb246cmVsYXRpdmU7aGVpZ2h0OjU2cHg7d2lkdGg6NTZweH0uYS1wcm9maWxlLWF2YXRhciBpbWd7Ym9yZGVyLXJhZGl1czo1NnB4O2JhY2tncm91bmQtY29sb3I6I0ZGRjtib3JkZXI6M3B4IHNvbGlkICNGRkY7d2lkdGg6MTAwJX1bZGF0YS1hLXNpemU9c21hbGxdIC5hLXByb2ZpbGUtYXZhdGFye2hlaWdodDozNHB4O3dpZHRoOjM0cHh9W2RhdGEtYS1zaXplPXNtYWxsXSAuYS1wcm9maWxlLWF2YXRhciBpbWd7Ym9yZGVyLXJhZGl1czozNHB4O2JvcmRlcjoycHggc29saWQgI0ZGRn0uYS1wcm9maWxlW2RhdGEtYS10eXBlPWVudGh1c2lhc3RdIC5hLXByb2ZpbGUtYXZhdGFyOmFmdGVye3Bvc2l0aW9uOmFic29sdXRlO2NvbnRlbnQ6Jyc7ZGlzcGxheTpibG9jazt0b3A6YXV0bztib3R0b206MDtsZWZ0OmF1dG87cmlnaHQ6LTZweH0uYS1wcm9maWxlW2RhdGEtYS1zaXplPXNtYWxsXSAuYS1wcm9maWxlLWF2YXRhcjphZnRlcnt0b3A6YXV0bztib3R0b206MDtsZWZ0OmF1dG87cmlnaHQ6LTZweH0uYS1wcm9maWxlLWNvbnRlbnR7ZGlzcGxheTp0YWJsZS1jZWxsO3ZlcnRpY2FsLWFsaWduOm1pZGRsZTttaW4taGVpZ2h0OjU2cHh9LmEtcHJvZmlsZVtkYXRhLWEtc2l6ZT1zbWFsbF0gLmEtcHJvZmlsZS1jb250ZW50e21pbi1oZWlnaHQ6MzRweH0uYS1wcm9maWxlLW5hbWV7cG9zaXRpb246cmVsYXRpdmU7Y29sb3I6IzExMTtmb250LXNpemU6MTdweDtsaW5lLWhlaWdodDoxLjI1NTt1bmljb2RlLWJpZGk6aXNvbGF0ZX0uYS1wcm9maWxlW2RhdGEtYS1kZXNjcmlwdG9yXSAuYS1wcm9maWxlLW5hbWUsLmEtcHJvZmlsZVtkYXRhLWEtdHlwZV0gLmEtcHJvZmlsZS1uYW1le21hcmdpbi1yaWdodDo5cHh9LmEtcHJvZmlsZVtkYXRhLWEtc2l6ZT1zbWFsbF0gLmEtcHJvZmlsZS1uYW1le2ZvbnQtc2l6ZToxM3B4O2xpbmUtaGVpZ2h0OjE5cHh9LmEtcHJvZmlsZVtkYXRhLWEtc2l6ZT1zbWFsbF1bZGF0YS1hLWRlc2NyaXB0b3JdIC5hLXByb2ZpbGUtbmFtZSwuYS1wcm9maWxlW2RhdGEtYS1zaXplPXNtYWxsXVtkYXRhLWEtdHlwZV0gLmEtcHJvZmlsZS1uYW1le21hcmdpbi1yaWdodDo4cHh9LmEtcHJvZmlsZVtkYXRhLWEtc2l6ZT1iYXNlXVtkYXRhLWEtZGVzY3JpcHRvcl0gLmEtcHJvZmlsZS1uYW1lLC5hLXByb2ZpbGVbZGF0YS1hLXNpemU9YmFzZV1bZGF0YS1hLXR5cGVdIC5hLXByb2ZpbGUtbmFtZXtkaXNwbGF5OmJsb2NrfS5hLXByb2ZpbGUtdmVyaWZpZWQtYmFkZ2V7ZGlzcGxheTppbmxpbmUtYmxvY2s7b3ZlcmZsb3c6aGlkZGVuO3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lO21hcmdpbi1sZWZ0OjhweH0uYS1wcm9maWxlW2RhdGEtYS1zaXplPXNtYWxsXSAuYS1wcm9maWxlLXZlcmlmaWVkLWJhZGdle21hcmdpbi1sZWZ0OjZweH0uYS1wcm9maWxlLXZlcmlmaWVkLXRleHR7cG9zaXRpb246YWJzb2x1dGUhaW1wb3J0YW50O2xlZnQ6MCFpbXBvcnRhbnQ7Ym90dG9tOi0xcHghaW1wb3J0YW50O3otaW5kZXg6LTEhaW1wb3J0YW50O29wYWNpdHk6MH0uYS1wcm9maWxlLWRlc2NyaXB0b3J7ZGlzcGxheTppbmxpbmUtYmxvY2s7Y29sb3I6IzZDNzc3ODtmb250LXNpemU6MTJweDtsaW5lLWhlaWdodDoxLjV9LmEtcHJvZmlsZVtkYXRhLWEtdHlwZT1lbnRodXNpYXN0XSAuYS1wcm9maWxlLWRlc2NyaXB0b3J7Y29sb3I6IzUzODAwMH0uYS1wcm9maWxlW2RhdGEtYS10eXBlPXNlbGxlcl0gLmEtcHJvZmlsZS1kZXNjcmlwdG9ye2NvbG9yOiNBOTFENjd9LmEtcHJvZmlsZVtkYXRhLWEtc2l6ZT1zbWFsbF0gLmEtcHJvZmlsZS1kZXNjcmlwdG9ye2ZvbnQtc2l6ZToxMnB4O2xpbmUtaGVpZ2h0OjEuNX0uYS10cnVuY2F0ZXtkaXNwbGF5OmlubGluZS1ibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO292ZXJmbG93OmhpZGRlbn0uYS10cnVuY2F0ZVtkYXRhLWEtd29yZC1icmVhaz1ub3JtYWxde3dvcmQtYnJlYWs6bm9ybWFsfS5hLXRydW5jYXRlW2RhdGEtYS13b3JkLWJyZWFrPWJyZWFrLWFsbF17d29yZC1icmVhazpicmVhay1hbGx9LmEtdHJ1bmNhdGVbZGF0YS1hLXdvcmQtYnJlYWs9YnJlYWstd29yZF17d29yZC13cmFwOmJyZWFrLXdvcmQ7b3ZlcmZsb3ctd3JhcDpicmVhay13b3JkfS5hLXRydW5jYXRlW2RhdGEtYS13b3JkLWJyZWFrPWtlZXAtYWxsXXt3b3JkLWJyZWFrOmtlZXAtYWxsfS5hLXRydW5jYXRlLWNhbGMsLmEtdHJ1bmNhdGUtY3V0LC5hLXRydW5jYXRlLWZ1bGx7ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6MTAwJTt3aGl0ZS1zcGFjZTpub3JtYWx9LmEtY2FyZHVpLWRlY2t7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtwYWRkaW5nLXRvcDouMXB4O3BhZGRpbmctYm90dG9tOi4xcHh9LmEtY2FyZHVpLWRlY2s6YWZ0ZXIsLmEtY2FyZHVpLWRlY2s6YmVmb3Jle2Rpc3BsYXk6YmxvY2s7Y29udGVudDonLic7dmlzaWJpbGl0eTpoaWRkZW47aGVpZ2h0OjB9LmEtY2FyZHVpLWRlY2s6YmVmb3Jle21hcmdpbi1ib3R0b206MjBweH0uYS1jYXJkdWktZGVjazphZnRlcnttYXJnaW4tdG9wOjIwcHh9LmEtY2FyZHVpLWRlY2tbZGF0YS1hLXJlbW92ZS10b3AtZ3V0dGVyXTpiZWZvcmV7bWFyZ2luLWJvdHRvbTotMjBweDtjb250ZW50OicnfS5hLWNhcmR1aS1kZWNrW2RhdGEtYS1yZW1vdmUtYm90dG9tLWd1dHRlcl06YWZ0ZXJ7bWFyZ2luLXRvcDotMjBweDtjb250ZW50OicnfS5hLWx0LWllMTAgLmEtY2FyZHVpW2RhdGEtYS1jYXJkLXR5cGU9cGVla1RvZ2dsZV0gLmEtY2FyZHVpLWNvbnRlbnQsLmEtbHQtaWUxMCAuYS1jYXJkdWlbZGF0YS1hLWNhcmQtdHlwZT1wZWVrVG9nZ2xlXSAuYS1jYXJkdWktdGVhc2Vye3Zpc2liaWxpdHk6dmlzaWJsZX0uYS1jYXJkdWl7bWFyZ2luLXRvcDoyMHB4O21hcmdpbi1ib3R0b206MjBweDtiYWNrZ3JvdW5kLWNvbG9yOiNGRkY7b3ZlcmZsb3c6YXV0bztwYWRkaW5nOjIwcHggMCAxNXB4IDB9LmEtY2FyZHVpIC5hLWNhcmR1aS1oZWFkZXJ7cGFkZGluZzowIDIwcHg7cGFkZGluZy1ib3R0b206MTBweH0uYS1jYXJkdWkgLmEtY2FyZHVpLWJvZHl7cGFkZGluZzowIDIwcHg7cG9zaXRpb246cmVsYXRpdmV9LmEtY2FyZHVpIC5hLWNhcmR1aS1ib2R5Omxhc3QtY2hpbGR7cGFkZGluZy1ib3R0b206NXB4fS5hLWNhcmR1aSAuYS1jYXJkdWktZm9vdGVye3BhZGRpbmc6MCAyMHB4O3BhZGRpbmctdG9wOjEwcHh9LmEtY2FyZHVpIC5hLWNhcmR1aS1leHBhbmQtY29udHJvbC10aXRsZTpmb2N1c3tvdXRsaW5lOjB9LmEtY2FyZHVpIC5hLWNhcmR1aS1leHBhbmQtY29udHJvbC1mb290ZXI6Zm9jdXN7b3V0bGluZTowfS5hLWNhcmR1aVtkYXRhLWEtY2FyZC10eXBlPXBlZWtUb2dnbGVdIC5hLWNhcmR1aS1leHBhbmQtY29udHJvbC10aXRsZSwuYS1jYXJkdWlbZGF0YS1hLWNhcmQtdHlwZT1wZWVrRXhwYW5kXSAuYS1jYXJkdWktZXhwYW5kLWNvbnRyb2wtdGl0bGV7Y3Vyc29yOnBvaW50ZXI7LXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOnRyYW5zcGFyZW50fS5hLWNhcmR1aVtkYXRhLWEtY2FyZC10eXBlPXBlZWtUb2dnbGVdIC5hLWNhcmR1aS1leHBhbmQtY29udHJvbC10aXRsZTphY3RpdmUsLmEtY2FyZHVpW2RhdGEtYS1jYXJkLXR5cGU9cGVla0V4cGFuZF0gLmEtY2FyZHVpLWV4cGFuZC1jb250cm9sLXRpdGxlOmFjdGl2ZXtjb2xvcjojYzQ1NTAwfS5hLWNhcmR1aVtkYXRhLWEtY2FyZC10eXBlPXBlZWtUb2dnbGVdIC5hLWNhcmR1aS1leHBhbmQtY29udHJvbC1mb290ZXIsLmEtY2FyZHVpW2RhdGEtYS1jYXJkLXR5cGU9cGVla0V4cGFuZF0gLmEtY2FyZHVpLWV4cGFuZC1jb250cm9sLWZvb3RlcntjdXJzb3I6cG9pbnRlcjstd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6dHJhbnNwYXJlbnR9LmEtY2FyZHVpW2RhdGEtYS1jYXJkLXR5cGU9cGVla1RvZ2dsZV0gLmEtY2FyZHVpLWV4cGFuZC1jb250cm9sLWZvb3RlciAuYS1leHBhbmRlci1pY29uLC5hLWNhcmR1aVtkYXRhLWEtY2FyZC10eXBlPXBlZWtFeHBhbmRdIC5hLWNhcmR1aS1leHBhbmQtY29udHJvbC1mb290ZXIgLmEtZXhwYW5kZXItaWNvbntkaXNwbGF5OmlubGluZS1ibG9jaztwb3NpdGlvbjpyZWxhdGl2ZX0uYS1jYXJkdWlbZGF0YS1hLWNhcmQtdHlwZT1wZWVrVG9nZ2xlXSAuYS1jYXJkdWktZXhwYW5kLWNvbnRyb2wtZm9vdGVyIC5hLXNlZS1tb3JlLC5hLWNhcmR1aVtkYXRhLWEtY2FyZC10eXBlPXBlZWtFeHBhbmRdIC5hLWNhcmR1aS1leHBhbmQtY29udHJvbC1mb290ZXIgLmEtc2VlLW1vcmV7Zm9udC13ZWlnaHQ6NDAwO2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1sZWZ0OjIxcHh9LmEtY2FyZHVpW2RhdGEtYS1jYXJkLXR5cGU9ZnVsbEJsZWVkXXtwYWRkaW5nOjB9LmEtY2FyZHVpW2RhdGEtYS1jYXJkLXR5cGU9ZnVsbEJsZWVkXSAuYS1jYXJkdWktaGVhZGVye3BhZGRpbmc6MH0uYS1jYXJkdWlbZGF0YS1hLWNhcmQtdHlwZT1mdWxsQmxlZWRdIC5hLWNhcmR1aS1ib2R5e3BhZGRpbmc6MH0uYS1jYXJkdWlbZGF0YS1hLWNhcmQtdHlwZT1mdWxsQmxlZWRdIC5hLWNhcmR1aS1ib2R5Omxhc3QtY2hpbGR7cGFkZGluZy1ib3R0b206MH0uYS1jYXJkdWlbZGF0YS1hLWNhcmQtdHlwZT1mdWxsQmxlZWRdIC5hLWNhcmR1aS1mb290ZXJ7cGFkZGluZzowfS5hLWNhcmR1aVtkYXRhLWEtY2FyZC10eXBlPXBlZWtFeHBhbmRdIC5hLXJlYWN0aXZlLWNvbnRhaW5lci1ncmFkaWVudHt0cmFuc2l0aW9uOmhlaWdodCAuNHMgY3ViaWMtYmV6aWVyKC40LDAsLjYsMSk7cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6MDtib3R0b206MDtsZWZ0OjA7aGVpZ2h0OjQwcHg7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudChyZ2JhKDI1NSwyNTUsMjU1LDApLCNGRkYpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHJnYmEoMjU1LDI1NSwyNTUsMCksI0ZGRil9LmEtY2FyZHVpW2RhdGEtYS1jYXJkLXR5cGU9cGVla0V4cGFuZF0gLmEtY2FyZHVpLWNvbnRlbnQ6Zm9jdXN7b3V0bGluZTowfS5hLWNhcmR1aVtkYXRhLWEtY2FyZC10eXBlPXBlZWtFeHBhbmRdIC5hLWNhcmR1aS10ZWFzZXIrLmEtY2FyZHVpLWNvbnRlbnQuYS1jYXJkdWktdW5pbml0aWFsaXplZHtoZWlnaHQ6MDtvdmVyZmxvdzpoaWRkZW59LmEtY2FyZHVpW2RhdGEtYS1jYXJkLXR5cGU9cGVla0V4cGFuZF1bZGF0YS1hLWV4cGFuZGVkPXRydWVdIC5hLWNhcmR1aS1jb250ZW50LmEtY2FyZHVpLXVuaW5pdGlhbGl6ZWR7bWF4LWhlaWdodDpub25lIWltcG9ydGFudH0uYS1jYXJkdWlbZGF0YS1hLWNhcmQtdHlwZT1wZWVrRXhwYW5kXVtkYXRhLWEtZXhwYW5kZWQ9dHJ1ZV0gLmEtY2FyZHVpLXRlYXNlcisuYS1jYXJkdWktY29udGVudC5hLWNhcmR1aS11bmluaXRpYWxpemVke2hlaWdodDphdXRvO292ZXJmbG93Om5vbmV9LmEtY2FyZHVpW2RhdGEtYS1jYXJkLXR5cGU9cGVla0V4cGFuZF1bZGF0YS1hLWV4cGFuZGVkPXRydWVdIC5hLXJlYWN0aXZlLWNvbnRhaW5lci1ncmFkaWVudHtoZWlnaHQ6MH0uYS1jYXJkdWlbZGF0YS1hLWNhcmQtdHlwZT1wZWVrVG9nZ2xlXSAuYS1jYXJkdWktY29udGVudCwuYS1jYXJkdWlbZGF0YS1hLWNhcmQtdHlwZT1wZWVrVG9nZ2xlXSAuYS1jYXJkdWktdGVhc2Vye3RyYW5zaXRpb246dmlzaWJpbGl0eSAuMnMsb3BhY2l0eSAuMnMgY3ViaWMtYmV6aWVyKC40LDAsLjYsMSl9LmEtY2FyZHVpW2RhdGEtYS1jYXJkLXR5cGU9cGVla1RvZ2dsZV0gLmEtY2FyZHVpLWNvbnRlbnQ6Zm9jdXMsLmEtY2FyZHVpW2RhdGEtYS1jYXJkLXR5cGU9cGVla1RvZ2dsZV0gLmEtY2FyZHVpLXRlYXNlcjpmb2N1c3tvdXRsaW5lOjB9LmEtY2FyZHVpW2RhdGEtYS1jYXJkLXR5cGU9cGVla1RvZ2dsZV0gLmEtY2FyZHVpLWNvbnRlbnR7b3BhY2l0eTowOy1tcy1maWx0ZXI6XCJwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQWxwaGEoT3BhY2l0eT0wKVwiO3Zpc2liaWxpdHk6aGlkZGVufS5hLWNhcmR1aVtkYXRhLWEtY2FyZC10eXBlPXBlZWtUb2dnbGVdIC5hLWNhcmR1aS1jb250ZW50LmEtY2FyZHVpLXVuaW5pdGlhbGl6ZWR7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowfS5hLWNhcmR1aVtkYXRhLWEtY2FyZC10eXBlPXBlZWtUb2dnbGVdIC5hLWNhcmR1aS10ZWFzZXJ7b3BhY2l0eToxOy1tcy1maWx0ZXI6XCJwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQWxwaGEoT3BhY2l0eT0xMDApXCI7dmlzaWJpbGl0eTp2aXNpYmxlO3RyYW5zaXRpb24tZGVsYXk6LjJzfS5hLWNhcmR1aVtkYXRhLWEtY2FyZC10eXBlPXBlZWtUb2dnbGVdIC5hLWNhcmR1aS10ZWFzZXIuYS1jYXJkdWktdW5pbml0aWFsaXplZHtwb3NpdGlvbjpzdGF0aWN9LmEtY2FyZHVpW2RhdGEtYS1jYXJkLXR5cGU9cGVla1RvZ2dsZV1bZGF0YS1hLWV4cGFuZGVkPXRydWVdIC5hLWNhcmR1aS1jb250ZW50e29wYWNpdHk6MTstbXMtZmlsdGVyOlwicHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkFscGhhKE9wYWNpdHk9MTAwKVwiO3Zpc2liaWxpdHk6dmlzaWJsZTt0cmFuc2l0aW9uLWRlbGF5Oi4yc30uYS1jYXJkdWlbZGF0YS1hLWNhcmQtdHlwZT1wZWVrVG9nZ2xlXVtkYXRhLWEtZXhwYW5kZWQ9dHJ1ZV0gLmEtY2FyZHVpLWNvbnRlbnQuYS1jYXJkdWktdW5pbml0aWFsaXplZHtwb3NpdGlvbjpzdGF0aWN9LmEtY2FyZHVpW2RhdGEtYS1jYXJkLXR5cGU9cGVla1RvZ2dsZV1bZGF0YS1hLWV4cGFuZGVkPXRydWVdIC5hLWNhcmR1aS10ZWFzZXJ7b3BhY2l0eTowOy1tcy1maWx0ZXI6XCJwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQWxwaGEoT3BhY2l0eT0wKVwiO3Zpc2liaWxpdHk6aGlkZGVuO3RyYW5zaXRpb24tZGVsYXk6MHN9LmEtY2FyZHVpW2RhdGEtYS1jYXJkLXR5cGU9cGVla1RvZ2dsZV1bZGF0YS1hLWV4cGFuZGVkPXRydWVdIC5hLWNhcmR1aS10ZWFzZXIuYS1jYXJkdWktdW5pbml0aWFsaXplZHtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjB9LmEtcmVhY3RpdmUtY29udGFpbmVye3Bvc2l0aW9uOnJlbGF0aXZlO292ZXJmbG93OmhpZGRlbjttaW4taGVpZ2h0OjB9LmEtcmVhY3RpdmUtY29udGFpbmVyLmEtcmVhY3RpdmUtY29udGFpbmVyLXRyYW5zaXRpb257dHJhbnNpdGlvbjpoZWlnaHQgLjRzIGN1YmljLWJlemllciguNCwwLC4yLDEpfS5hLWNhcmR1aS1hYnNvbHV0ZS1wb3NpdGlvbntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7d2lkdGg6MTAwJX0uYS1jc3MtaWNvbi1kcmF3e2JvcmRlcjpzb2xpZCAjMDA2NmMwO2JvcmRlci13aWR0aDowIDJweCAycHggMDtkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nOjQuNXB4O3Bvc2l0aW9uOmFic29sdXRlfS5hLWNzcy1pY29uLWRyYXcuYS1jc3MtaWNvbi1leHBhbmR7dHJhbnNmb3JtOnJvdGF0ZSg0NWRlZyk7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKDQ1ZGVnKTtib3R0b206MnB4fS5hLWNzcy1pY29uLWRyYXcuYS1jc3MtaWNvbi1jb2xsYXBzZXt0cmFuc2Zvcm06cm90YXRlKC0xMzVkZWcpOy13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgtMTM1ZGVnKTtib3R0b206LTRweH0uYS1jc3MtaWNvbi1kcmF3OmFjdGl2ZXtib3JkZXItY29sb3I6I2M0NTUwMH0uYS1jc3MtaWNvbi1kcmF3OmZvY3Vze2JvcmRlci1jb2xvcjojMDA2NmMwfS5hLWNhcmR1aSAuYS10cnVuY2F0ZXtkaXNwbGF5OmJsb2NrfS5hLWhpZGRlbiwuYW9rLWhpZGRlbntkaXNwbGF5Om5vbmUhaW1wb3J0YW50O3Zpc2liaWxpdHk6aGlkZGVuIWltcG9ydGFudH0uYS1ibG9jaywuYW9rLWJsb2Nre2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246cmVsYXRpdmV9LmEtaW5saW5lLWJsb2NrLC5hb2staW5saW5lLWJsb2Nre2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5hLW9mZnNjcmVlbiwuYW9rLW9mZnNjcmVlbntwb3NpdGlvbjphYnNvbHV0ZSFpbXBvcnRhbnQ7bGVmdDphX3B4KDApIWltcG9ydGFudDtib3R0b206YV9weCgtMSkhaW1wb3J0YW50O3otaW5kZXg6LTEhaW1wb3J0YW50O29wYWNpdHk6MH0uYS1yZWxhdGl2ZSwuYW9rLXJlbGF0aXZle3Bvc2l0aW9uOnJlbGF0aXZlfS5hLWZsb2F0LXJpZ2h0LC5hb2stZmxvYXQtcmlnaHR7ZmxvYXQ6cmlnaHQhaW1wb3J0YW50fS5hLWZsb2F0LWxlZnQsLmFvay1mbG9hdC1sZWZ0e2Zsb2F0OmxlZnQhaW1wb3J0YW50fS5hLWFsaWduLXRvcCwuYW9rLWFsaWduLXRvcHt2ZXJ0aWNhbC1hbGlnbjp0b3AhaW1wb3J0YW50fS5hLWFsaWduLWNlbnRlciwuYW9rLWFsaWduLWNlbnRlcnt2ZXJ0aWNhbC1hbGlnbjptaWRkbGUhaW1wb3J0YW50fS5hLWFsaWduLWJvdHRvbSwuYW9rLWFsaWduLWJvdHRvbXt2ZXJ0aWNhbC1hbGlnbjpib3R0b20haW1wb3J0YW50fS5hLWFsaWduLWNlbnRlci1ob3Jpem9udGFsbHksLmFvay1hbGlnbi1jZW50ZXItaG9yaXpvbnRhbGx5e21hcmdpbi1sZWZ0OmF1dG87bWFyZ2luLXJpZ2h0OmF1dG99LmEtbm93cmFwLC5hb2stbm93cmFwe3doaXRlLXNwYWNlOm5vd3JhcH0uYS1icmVhay13b3JkLC5hb2stYnJlYWstd29yZHt3b3JkLWJyZWFrOmJyZWFrLWFsbH0uYS1jbGVhcmZpeDphZnRlciwuYS1jbGVhcmZpeDpiZWZvcmUsLmFvay1jbGVhcmZpeDphZnRlciwuYW9rLWNsZWFyZml4OmJlZm9yZXtkaXNwbGF5OnRhYmxlO2NvbnRlbnQ6XCJcIjtsaW5lLWhlaWdodDowO2ZvbnQtc2l6ZTowfS5hLWNsZWFyZml4OmFmdGVyLC5hb2stY2xlYXJmaXg6YWZ0ZXJ7Y2xlYXI6Ym90aH0uYS1oaWRlLXRleHQsLmFvay1oaWRlLXRleHR7Zm9udDowLzAgYTtjb2xvcjp0cmFuc3BhcmVudDt0ZXh0LXNoYWRvdzpub25lO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyOjB9LmEtcHJlLWxpbmUsLmFvay1wcmUtbGluZXt3aGl0ZS1zcGFjZTpwcmUtbGluZX0uYS1uby1zZWxlY3QsLmFvay1uby1zZWxlY3R7LXdlYmtpdC10b3VjaC1jYWxsb3V0Om5vbmU7LXdlYmtpdC11c2VyLXNlbGVjdDpzYWZlX3VucXVvdGUobm9uZSk7LW1vei11c2VyLXNlbGVjdDpzYWZlX3VucXVvdGUobm9uZSk7dXNlci1zZWxlY3Q6c2FmZV91bnF1b3RlKG5vbmUpfVxuXHUwMDNDL3N0eWxlPlxuXHUwMDNDc2NyaXB0PlxuKGZ1bmN0aW9uKGYsaCxRLEEpe2Z1bmN0aW9uIEcoYSl7eCYmeC50YWcmJngudGFnKHEoXCI6XCIsXCJhdWlcIixhKSl9ZnVuY3Rpb24gdihhLGIpe3gmJnguY291bnQmJnguY291bnQoXCJhdWk6XCIrYSwwPT09Yj8wOmJ8fCh4LmNvdW50KFwiYXVpOlwiK2EpfHwwKSsxKX1mdW5jdGlvbiBsKGEpe3RyeXtyZXR1cm4gYS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpfWNhdGNoKGIpe3JldHVybiExfX1mdW5jdGlvbiB5KGEsYixjKXthLmFkZEV2ZW50TGlzdGVuZXI/YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMSk6YS5hdHRhY2hFdmVudCYmYS5hdHRhY2hFdmVudChcIm9uXCIrYixjKX1mdW5jdGlvbiBxKGEsYixjLGUpe2I9YiYmYz9iK2ErYzpifHxjO3JldHVybiBlP3EoYSxiLGUpOmJ9ZnVuY3Rpb24gSChhLGIsYyl7dHJ5e09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse3ZhbHVlOmMsd3JpdGFibGU6ITF9KX1jYXRjaChlKXthW2JdPWN9cmV0dXJuIGN9ZnVuY3Rpb24gdGEoYSxiKXt2YXIgYz1hLmxlbmd0aCxcbmU9YyxnPWZ1bmN0aW9uKCl7ZS0tfHwoUi5wdXNoKGIpLFN8fChzZXRUaW1lb3V0KFQsMCksUz0hMCkpfTtmb3IoZygpO2MtLTspY2FbYVtjXV0/ZygpOihCW2FbY11dPUJbYVtjXV18fFtdKS5wdXNoKGcpfWZ1bmN0aW9uIHVhKGEsYixjLGUsZyl7dmFyIGQ9aC5jcmVhdGVFbGVtZW50KGE/XCJzY3JpcHRcIjpcImxpbmtcIik7eShkLFwiZXJyb3JcIixlKTtnJiZ5KGQsXCJsb2FkXCIsZyk7YT8oZC50eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIsZC5hc3luYz0hMCxjJiYvQVVJQ2xpZW50c3xpbWFnZXNbL11JLy50ZXN0KGIpJiZkLnNldEF0dHJpYnV0ZShcImNyb3Nzb3JpZ2luXCIsXCJhbm9ueW1vdXNcIiksZC5zcmM9Yik6KGQucmVsPVwic3R5bGVzaGVldFwiLGQuaHJlZj1iKTtoLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXS5hcHBlbmRDaGlsZChkKX1mdW5jdGlvbiBkYShhLGIpe2Z1bmN0aW9uIGMoYyxlKXtmdW5jdGlvbiBnKCl7dWEoYixjLGgsZnVuY3Rpb24oYil7IUkmJmg/KGg9ITEsdihcInJlc291cmNlX3JldHJ5XCIpLFxuZygpKToodihcInJlc291cmNlX2Vycm9yXCIpLGEubG9nKFwiQXNzZXQgZmFpbGVkIHRvIGxvYWQ6IFwiK2MsST9cIldBUk5cIjpBKSk7YiYmYi5zdG9wUHJvcGFnYXRpb24/Yi5zdG9wUHJvcGFnYXRpb24oKTpmLmV2ZW50JiYoZi5ldmVudC5jYW5jZWxCdWJibGU9ITApfSxlKX1pZihlYVtjXSlyZXR1cm4hMTtlYVtjXT0hMDt2KFwicmVzb3VyY2VfY291bnRcIik7dmFyIGg9ITA7cmV0dXJuIWcoKX1pZihiKXt2YXIgZT0wLGc9MDtjLmFuZENvbmZpcm09ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYyhhLGZ1bmN0aW9uKCl7ZSsrO2ImJmIuYXBwbHkodGhpcyxhcmd1bWVudHMpfSl9O2MuY29uZmlybT1mdW5jdGlvbigpe2crK307Yy5nZXRDc3JpQ291bnRlcnM9ZnVuY3Rpb24oKXtyZXR1cm57cmVxczplLGZ1bGw6Z319fXJldHVybiBjfWZ1bmN0aW9uIHZhKGEsYixjKXtmb3IodmFyIGU9e25hbWU6YSxndWFyZDpmdW5jdGlvbihjKXtyZXR1cm4gYi5ndWFyZEZhdGFsKGEsYyl9LGxvZ0Vycm9yOmZ1bmN0aW9uKGMsXG5kLGUpe2IubG9nRXJyb3IoYyxkLGUsYSl9fSxnPVtdLGQ9MDtkXHUwMDNDYy5sZW5ndGg7ZCsrKUouaGFzT3duUHJvcGVydHkoY1tkXSkmJihnW2RdPVUuaGFzT3duUHJvcGVydHkoY1tkXSk/VVtjW2RdXShKW2NbZF1dLGUpOkpbY1tkXV0pO3JldHVybiBnfWZ1bmN0aW9uIEMoYSxiLGMsZSxnKXtyZXR1cm4gZnVuY3Rpb24oZCxoKXtmdW5jdGlvbiBtKCl7dmFyIGE9bnVsbDtlP2E9aDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgaCYmKHAuc3RhcnQ9RCgpLGE9aC5hcHBseShmLHZhKGQsayxsKSkscC5lbmQ9RCgpKTtpZihiKXtKW2RdPWE7YT1kO2ZvcihjYVthXT0hMDsoQlthXXx8W10pLmxlbmd0aDspQlthXS5zaGlmdCgpKCk7ZGVsZXRlIEJbYV19cC5kb25lPSEwfXZhciBrPWd8fHRoaXM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGQmJihoPWQsZD1BKTtiJiYoZD1kP2QucmVwbGFjZShmYSxcIlwiKTpcIl9fTk9OQU1FX19cIixWLmhhc093blByb3BlcnR5KGQpJiZrLmVycm9yKHEoXCIsIHJlcmVnaXN0ZXJlZCBieSBcIixcbnEoXCIgYnkgXCIsZCtcIiBhbHJlYWR5IHJlZ2lzdGVyZWRcIixWW2RdKSxrLmF0dHJpYnV0aW9uKSxkKSxWW2RdPWsuYXR0cmlidXRpb24pO2Zvcih2YXIgbD1bXSxuPTA7blx1MDAzQ2EubGVuZ3RoO24rKylsW25dPWFbbl0ucmVwbGFjZShmYSxcIlwiKTt2YXIgcD1nYVtkfHxcImFub25cIisgKyt3YV09e2RlcGVuZDpsLHJlZ2lzdGVyZWQ6RCgpLG5hbWVzcGFjZTprLm5hbWVzcGFjZX07Yz9tKCk6dGEobCxrLmd1YXJkRmF0YWwoZCxtKSk7cmV0dXJue2RlY29yYXRlOmZ1bmN0aW9uKGEpe1VbZF09ay5ndWFyZEZhdGFsKGQsYSl9fX19ZnVuY3Rpb24gaGEoYSl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGI9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtyZXR1cm57ZXhlY3V0ZTpDKGIsITEsYSwhMSx0aGlzKSxyZWdpc3RlcjpDKGIsITAsYSwhMSx0aGlzKX19fWZ1bmN0aW9uIFcoYSxiKXtyZXR1cm4gZnVuY3Rpb24oYyxlKXtlfHwoZT1jLGM9QSk7dmFyIGc9dGhpcy5hdHRyaWJ1dGlvbjtcbnJldHVybiBmdW5jdGlvbigpe3oucHVzaChifHx7YXR0cmlidXRpb246ZyxuYW1lOmMsbG9nTGV2ZWw6YX0pO3ZhciBkPWUuYXBwbHkodGhpcyxhcmd1bWVudHMpO3oucG9wKCk7cmV0dXJuIGR9fX1mdW5jdGlvbiBLKGEsYil7dGhpcy5sb2FkPXtqczpkYSh0aGlzLCEwKSxjc3M6ZGEodGhpcyl9O0godGhpcyxcIm5hbWVzcGFjZVwiLGIpO0godGhpcyxcImF0dHJpYnV0aW9uXCIsYSl9ZnVuY3Rpb24gaWEoKXtoLmJvZHk/cC50cmlnZ2VyKFwiYS1ib2R5QmVnaW5cIik6c2V0VGltZW91dChpYSwyMCl9ZnVuY3Rpb24gRShhLGIpe2EuY2xhc3NOYW1lPVgoYSxiKStcIiBcIitifWZ1bmN0aW9uIFgoYSxiKXtyZXR1cm4oXCIgXCIrYS5jbGFzc05hbWUrXCIgXCIpLnNwbGl0KFwiIFwiK2IrXCIgXCIpLmpvaW4oXCIgXCIpLnJlcGxhY2UoL14gfCAkL2csXCJcIil9ZnVuY3Rpb24gamEoYSl7dHJ5e3JldHVybiBhKCl9Y2F0Y2goYil7cmV0dXJuITF9fWZ1bmN0aW9uIEwoKXtpZihNKXt2YXIgYT17dzpmLmlubmVyV2lkdGh8fFxubS5jbGllbnRXaWR0aCxoOmYuaW5uZXJIZWlnaHR8fG0uY2xpZW50SGVpZ2h0fTs1XHUwMDNDTWF0aC5hYnMoYS53LVkudyl8fDUwXHUwMDNDYS5oLVkuaD8oWT1hLE49NCwoYT1rLm1vYmlsZXx8ay50YWJsZXQ/NDUwXHUwMDNDYS53JiZhLnc+YS5oOjEyNTBcdTAwM0M9YS53KT9FKG0sXCJhLXdzXCIpOm0uY2xhc3NOYW1lPVgobSxcImEtd3NcIikpOjBcdTAwM0NOJiYoTi0tLGthPXNldFRpbWVvdXQoTCwxNikpfX1mdW5jdGlvbiB4YShhKXsoTT1hPT09QT8hTTohIWEpJiZMKCl9ZnVuY3Rpb24geWEoKXtyZXR1cm4gTX1mdW5jdGlvbiB0KGEsYil7cmV0dXJuXCJzdzpcIisoYnx8XCJcIikrXCI6XCIrYStcIjpcIn1mdW5jdGlvbiBsYSgpe21hLmZvckVhY2goZnVuY3Rpb24oYSl7RyhhKX0pfWZ1bmN0aW9uIHIoYSl7bWEucHVzaChhKX1mdW5jdGlvbiBuYShhLGIsYyxlKXtpZihjKXtiPWwoL0Nocm9tZS9pKSYmIWwoL0VkZ2UvaSkmJiFsKC9PUFIvaSkmJiFhLmNhcGFiaWxpdGllcy5pc0FtYXpvbkFwcCYmIWwobmV3IFJlZ0V4cChaK1wiYnd2XCIrXG5aK1wiYlwiKSk7dmFyIGc9dChlLFwiYnJvd3NlclwiKSxkPXQoZSxcInByb2RfbXNob3BcIiksZj10KGUsXCJiZXRhX21zaG9wXCIpOyFhLmNhcGFiaWxpdGllcy5pc0FtYXpvbkFwcCYmYy5icm93c2VyJiZiJiYocihnK1wic3VwcG9ydGVkXCIpLGMuYnJvd3Nlci5hY3Rpb24oZyxlKSk7IWImJmMuYnJvd3NlciYmcihnK1widW5zdXBwb3J0ZWRcIik7Yy5wcm9kTXNob3AmJnIoZCtcInVuc3VwcG9ydGVkXCIpO2MuYmV0YU1zaG9wJiZyKGYrXCJ1bnN1cHBvcnRlZFwiKX19XCJ1c2Ugc3RyaWN0XCI7dmFyIE89US5ub3c9US5ub3d8fGZ1bmN0aW9uKCl7cmV0dXJuK25ldyBRfSxEPWZ1bmN0aW9uKGEpe3JldHVybiBhJiZhLm5vdz9hLm5vdy5iaW5kKGEpOk99KGYucGVyZm9ybWFuY2UpLHphPUQoKSx1PWYuQW1hem9uVUlQYWdlSlN8fGYuUDtpZih1JiZ1LndoZW4mJnUucmVnaXN0ZXIpdGhyb3cgRXJyb3IoXCJBIGNvcHkgb2YgUCBoYXMgYWxyZWFkeSBiZWVuIGxvYWRlZCBvbiB0aGlzIHBhZ2UuXCIpO3ZhciB4PWYudWU7XG5HKCk7RyhcImF1aV9idWlsZF9kYXRlOjMuMTkuNi0yMDE5LTA5LTI3XCIpO3ZhciBSPVtdLFM9ITEsVDtUPWZ1bmN0aW9uKCl7Zm9yKHZhciBhPXNldFRpbWVvdXQoVCwwKSxiPU8oKTtSLmxlbmd0aDspaWYoUi5zaGlmdCgpKCksNTBcdTAwM0NPKCktYilyZXR1cm47Y2xlYXJUaW1lb3V0KGEpO1M9ITF9O3ZhciBjYT17fSxCPXt9LGVhPXt9LEk9ITE7eShmLFwiYmVmb3JldW5sb2FkXCIsZnVuY3Rpb24oKXtJPSEwO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtJPSExfSwxRTQpfSk7dmFyIGZhPS9ecHJ2Oi8sVj17fSxKPXt9LFU9e30sZ2E9e30sd2E9MCxaPVN0cmluZy5mcm9tQ2hhckNvZGUoOTIpLEYsej1bXSxvYT1mLm9uZXJyb3I7Zi5vbmVycm9yPWZ1bmN0aW9uKGEsYixjLGUsZyl7ZyYmXCJvYmplY3RcIj09PXR5cGVvZiBnfHwoZz1FcnJvcihhLGIsYyksZy5jb2x1bW5OdW1iZXI9ZSxnLnN0YWNrPWJ8fGN8fGU/cShaLGcubWVzc2FnZSxcImF0IFwiK3EoXCI6XCIsYixjLGUpKTpBKTt2YXIgZD16LnBvcCgpfHxcbnt9O2cuYXR0cmlidXRpb249cShcIjpcIixnLmF0dHJpYnV0aW9ufHxkLmF0dHJpYnV0aW9uLGQubmFtZSk7Zy5sb2dMZXZlbD1kLmxvZ0xldmVsO2cuYXR0cmlidXRpb24mJmNvbnNvbGUmJmNvbnNvbGUubG9nJiZjb25zb2xlLmxvZyhbZy5sb2dMZXZlbHx8XCJFUlJPUlwiLGEsXCJ0aHJvd24gYnlcIixnLmF0dHJpYnV0aW9uXS5qb2luKFwiIFwiKSk7ej1bXTtvYSYmKGQ9W10uc2xpY2UuY2FsbChhcmd1bWVudHMpLGRbNF09ZyxvYS5hcHBseShmLGQpKX07Sy5wcm90b3R5cGU9e2xvZ0Vycm9yOmZ1bmN0aW9uKGEsYixjLGUpe2I9e21lc3NhZ2U6Yixsb2dMZXZlbDpjfHxcIkVSUk9SXCIsYXR0cmlidXRpb246cShcIjpcIix0aGlzLmF0dHJpYnV0aW9uLGUpfTtpZihmLnVlTG9nRXJyb3IpcmV0dXJuIGYudWVMb2dFcnJvcihhfHxiLGE/YjpudWxsKSwhMDtjb25zb2xlJiZjb25zb2xlLmVycm9yJiYoY29uc29sZS5sb2coYiksY29uc29sZS5lcnJvcihhKSk7cmV0dXJuITF9LGVycm9yOmZ1bmN0aW9uKGEsXG5iLGMsZSl7YT1FcnJvcihxKFwiOlwiLGUsYSxjKSk7YS5hdHRyaWJ1dGlvbj1xKFwiOlwiLHRoaXMuYXR0cmlidXRpb24sYik7dGhyb3cgYTt9LGd1YXJkRXJyb3I6VygpLGd1YXJkRmF0YWw6VyhcIkZBVEFMXCIpLGd1YXJkQ3VycmVudDpmdW5jdGlvbihhKXt2YXIgYj16W3oubGVuZ3RoLTFdO3JldHVybiBiP1coYi5sb2dMZXZlbCxiKS5jYWxsKHRoaXMsYSk6YX0sbG9nOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gdGhpcy5sb2dFcnJvcihudWxsLGEsYixjKX0sZGVjbGFyZTpDKFtdLCEwLCEwLCEwKSxyZWdpc3RlcjpDKFtdLCEwKSxleGVjdXRlOkMoW10pLEFVSV9CVUlMRF9EQVRFOlwiMy4xOS42LTIwMTktMDktMjdcIix3aGVuOmhhKCksbm93OmhhKCEwKSx0cmlnZ2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZT1PKCk7dGhpcy5kZWNsYXJlKGEse2RhdGE6YixwYWdlRWxhcHNlZFRpbWU6ZS0oZi5hUGFnZVN0YXJ0fHxOYU4pLHRyaWdnZXJUaW1lOmV9KTtjJiZjLmluc3RydW1lbnQmJkYud2hlbihcInBydjphLWxvZ1RyaWdnZXJcIikuZXhlY3V0ZShmdW5jdGlvbihiKXtiKGEpfSl9LFxuaGFuZGxlVHJpZ2dlcnM6ZnVuY3Rpb24oKXt0aGlzLmxvZyhcImhhbmRsZVRyaWdnZXJzIGRlcHJlY2F0ZWRcIil9LGF0dHJpYnV0ZUVycm9yczpmdW5jdGlvbihhKXtyZXR1cm4gbmV3IEsoYSl9LF9uYW1lc3BhY2U6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbmV3IEsoYSxiKX19O3ZhciBwPUgoZixcIkFtYXpvblVJUGFnZUpTXCIsbmV3IEspO0Y9cC5fbmFtZXNwYWNlKFwiUGFnZUpTXCIsXCJBbWF6b25VSVwiKTtGLmRlY2xhcmUoXCJwcnY6cC1kZWJ1Z1wiLGdhKTtwLmRlY2xhcmUoXCJwLXJlY29yZGVyLWV2ZW50c1wiLFtdKTtwLmRlY2xhcmUoXCJwLXJlY29yZGVyLXN0b3BcIixmdW5jdGlvbigpe30pO0goZixcIlBcIixwKTtpYSgpO2lmKGguYWRkRXZlbnRMaXN0ZW5lcil7dmFyIHBhO2guYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIixwYT1mdW5jdGlvbigpe3AudHJpZ2dlcihcImEtZG9tcmVhZHlcIik7aC5yZW1vdmVFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLHBhLCExKX0sITEpfXZhciBtPVxuaC5kb2N1bWVudEVsZW1lbnQsYWE9ZnVuY3Rpb24oKXt2YXIgYT1bXCJPXCIsXCJtc1wiLFwiTW96XCIsXCJXZWJraXRcIl0sYj1oLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7cmV0dXJue3Rlc3RHcmFkaWVudHM6ZnVuY3Rpb24oKXtiLnN0eWxlLmNzc1RleHQ9XCJiYWNrZ3JvdW5kLWltYWdlOi13ZWJraXQtZ3JhZGllbnQobGluZWFyLGxlZnQgdG9wLHJpZ2h0IGJvdHRvbSxmcm9tKCMxRTQpLHRvKHdoaXRlKSk7YmFja2dyb3VuZC1pbWFnZTotd2Via2l0LWxpbmVhci1ncmFkaWVudChsZWZ0IHRvcCwjMUU0LHdoaXRlKTtiYWNrZ3JvdW5kLWltYWdlOmxpbmVhci1ncmFkaWVudChsZWZ0IHRvcCwjMUU0LHdoaXRlKTtcIjtyZXR1cm5+Yi5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UuaW5kZXhPZihcImdyYWRpZW50XCIpfSx0ZXN0OmZ1bmN0aW9uKGMpe3ZhciBlPWMuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYy5zdWJzdHIoMSk7Yz0oYS5qb2luKGUrXCIgXCIpK2UrXCIgXCIrYykuc3BsaXQoXCIgXCIpO2ZvcihlPWMubGVuZ3RoO2UtLTspaWYoXCJcIj09PVxuYi5zdHlsZVtjW2VdXSlyZXR1cm4hMDtyZXR1cm4hMX0sdGVzdFRyYW5zZm9ybTNkOmZ1bmN0aW9uKCl7dmFyIGE9ITE7Zi5tYXRjaE1lZGlhJiYoYT1mLm1hdGNoTWVkaWEoXCIoLXdlYmtpdC10cmFuc2Zvcm0tM2QpXCIpLm1hdGNoZXMpO3JldHVybiBhfX19KCksdT1tLmNsYXNzTmFtZSxxYT0vKF58IClhLW1vYmlsZSggfCQpLy50ZXN0KHUpLHJhPS8oXnwgKWEtdGFibGV0KCB8JCkvLnRlc3QodSksaz17YXVkaW86ZnVuY3Rpb24oKXtyZXR1cm4hIWguY3JlYXRlRWxlbWVudChcImF1ZGlvXCIpLmNhblBsYXlUeXBlfSx2aWRlbzpmdW5jdGlvbigpe3JldHVybiEhaC5jcmVhdGVFbGVtZW50KFwidmlkZW9cIikuY2FuUGxheVR5cGV9LGNhbnZhczpmdW5jdGlvbigpe3JldHVybiEhaC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpLmdldENvbnRleHR9LHN2ZzpmdW5jdGlvbigpe3JldHVybiEhaC5jcmVhdGVFbGVtZW50TlMmJiEhaC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxuXCJzdmdcIikuY3JlYXRlU1ZHUmVjdH0sb2ZmbGluZTpmdW5jdGlvbigpe3JldHVybiBuYXZpZ2F0b3IuaGFzT3duUHJvcGVydHkmJm5hdmlnYXRvci5oYXNPd25Qcm9wZXJ0eShcIm9uTGluZVwiKSYmbmF2aWdhdG9yLm9uTGluZX0sZHJhZ0Ryb3A6ZnVuY3Rpb24oKXtyZXR1cm5cImRyYWdnYWJsZVwiaW4gaC5jcmVhdGVFbGVtZW50KFwic3BhblwiKX0sZ2VvbG9jYXRpb246ZnVuY3Rpb24oKXtyZXR1cm4hIW5hdmlnYXRvci5nZW9sb2NhdGlvbn0saGlzdG9yeTpmdW5jdGlvbigpe3JldHVybiEoIWYuaGlzdG9yeXx8IWYuaGlzdG9yeS5wdXNoU3RhdGUpfSx3ZWJ3b3JrZXI6ZnVuY3Rpb24oKXtyZXR1cm4hIWYuV29ya2VyfSxhdXRvZm9jdXM6ZnVuY3Rpb24oKXtyZXR1cm5cImF1dG9mb2N1c1wiaW4gaC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIil9LGlucHV0UGxhY2Vob2xkZXI6ZnVuY3Rpb24oKXtyZXR1cm5cInBsYWNlaG9sZGVyXCJpbiBoLmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKX0sdGV4dGFyZWFQbGFjZWhvbGRlcjpmdW5jdGlvbigpe3JldHVyblwicGxhY2Vob2xkZXJcImluXG5oLmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0YXJlYVwiKX0sbG9jYWxTdG9yYWdlOmZ1bmN0aW9uKCl7cmV0dXJuXCJsb2NhbFN0b3JhZ2VcImluIGYmJm51bGwhPT1mLmxvY2FsU3RvcmFnZX0sb3JpZW50YXRpb246ZnVuY3Rpb24oKXtyZXR1cm5cIm9yaWVudGF0aW9uXCJpbiBmfSx0b3VjaDpmdW5jdGlvbigpe3JldHVyblwib250b3VjaGVuZFwiaW4gaH0sZ3JhZGllbnRzOmZ1bmN0aW9uKCl7cmV0dXJuIGFhLnRlc3RHcmFkaWVudHMoKX0saGlyZXM6ZnVuY3Rpb24oKXt2YXIgYT1mLmRldmljZVBpeGVsUmF0aW8mJjEuNVx1MDAzQz1mLmRldmljZVBpeGVsUmF0aW98fGYubWF0Y2hNZWRpYSYmZi5tYXRjaE1lZGlhKFwiKG1pbi1yZXNvbHV0aW9uOjE0NGRwaSlcIikubWF0Y2hlczt2KFwiaGlSZXNcIisocWE/XCJNb2JpbGVcIjpyYT9cIlRhYmxldFwiOlwiRGVza3RvcFwiKSxhPzE6MCk7cmV0dXJuIGF9LHRyYW5zZm9ybTNkOmZ1bmN0aW9uKCl7cmV0dXJuIGFhLnRlc3RUcmFuc2Zvcm0zZCgpfSx0b3VjaFNjcm9sbGluZzpmdW5jdGlvbigpe3JldHVybiBsKC9XaW5kb3dzaG9wfGFuZHJvaWR8T1MgKFs1LTldfFsxLTldWzAtOV0rKShfWzAtOV17MSwyfSkrIGxpa2UgTWFjIE9TIFh8Q2hyb21lfFNpbGt8RmlyZWZveHxUcmlkZW50Lis/OyBUb3VjaC9pKX0sXG5pb3M6ZnVuY3Rpb24oKXtyZXR1cm4gbCgvT1MgWzEtOV1bMC05XSooX1swLTldKikrIGxpa2UgTWFjIE9TIFgvaSkmJiFsKC90cmlkZW50fEVkZ2UvaSl9LGFuZHJvaWQ6ZnVuY3Rpb24oKXtyZXR1cm4gbCgvYW5kcm9pZC4oWzEtOV18W0wtWl0pL2kpJiYhbCgvdHJpZGVudHxFZGdlL2kpfSxtb2JpbGU6ZnVuY3Rpb24oKXtyZXR1cm4gcWF9LHRhYmxldDpmdW5jdGlvbigpe3JldHVybiByYX0scnRsOmZ1bmN0aW9uKCl7cmV0dXJuXCJydGxcIj09PW0uZGlyfX0sbjtmb3IobiBpbiBrKWsuaGFzT3duUHJvcGVydHkobikmJihrW25dPWphKGtbbl0pKTtmb3IodmFyIGJhPVwidGV4dFNoYWRvdyB0ZXh0U3Ryb2tlIGJveFNoYWRvdyBib3JkZXJSYWRpdXMgYm9yZGVySW1hZ2Ugb3BhY2l0eSB0cmFuc2Zvcm0gdHJhbnNpdGlvblwiLnNwbGl0KFwiIFwiKSxQPTA7UFx1MDAzQ2JhLmxlbmd0aDtQKyspa1tiYVtQXV09amEoZnVuY3Rpb24oKXtyZXR1cm4gYWEudGVzdChiYVtQXSl9KTt2YXIgTT0hMCxrYT0wLFxuWT17dzowLGg6MH0sTj00O0woKTt5KGYsXCJyZXNpemVcIixmdW5jdGlvbigpe2NsZWFyVGltZW91dChrYSk7Tj00O0woKX0pO3ZhciBzYT17Z2V0SXRlbTpmdW5jdGlvbihhKXt0cnl7cmV0dXJuIGYubG9jYWxTdG9yYWdlLmdldEl0ZW0oYSl9Y2F0Y2goYil7fX0sc2V0SXRlbTpmdW5jdGlvbihhLGIpe3RyeXtyZXR1cm4gZi5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShhLGIpfWNhdGNoKGMpe319fTttLmNsYXNzTmFtZT1YKG0sXCJhLW5vLWpzXCIpO0UobSxcImEtanNcIik7IWwoL09TIFsxLThdKF9bMC05XSopKyBsaWtlIE1hYyBPUyBYL2kpfHxmLm5hdmlnYXRvci5zdGFuZGFsb25lfHxsKC9zYWZhcmkvaSl8fEUobSxcImEtZW1iZXJcIik7dT1bXTtmb3IobiBpbiBrKWsuaGFzT3duUHJvcGVydHkobikmJmtbbl0mJnUucHVzaChcImEtXCIrbi5yZXBsYWNlKC8oW0EtWl0pL2csZnVuY3Rpb24oYSl7cmV0dXJuXCItXCIrYS50b0xvd2VyQ2FzZSgpfSkpO0UobSx1LmpvaW4oXCIgXCIpKTttLnNldEF0dHJpYnV0ZShcImRhdGEtYXVpLWJ1aWxkLWRhdGVcIixcblwiMy4xOS42LTIwMTktMDktMjdcIik7cC5yZWdpc3RlcihcInAtZGV0ZWN0XCIsZnVuY3Rpb24oKXtyZXR1cm57Y2FwYWJpbGl0aWVzOmssbG9jYWxTdG9yYWdlOmsubG9jYWxTdG9yYWdlJiZzYSx0b2dnbGVSZXNwb25zaXZlR3JpZDp4YSxyZXNwb25zaXZlR3JpZEVuYWJsZWQ6eWF9fSk7bCgvVUNCcm93c2VyL2kpfHxrLmxvY2FsU3RvcmFnZSYmRShtLHNhLmdldEl0ZW0oXCJhLWZvbnQtY2xhc3NcIikpO3AuZGVjbGFyZShcImEtZXZlbnQtcmV2aXNlZC1oYW5kbGluZ1wiLCExKTt2YXIgdzt0cnl7dz1uYXZpZ2F0b3Iuc2VydmljZVdvcmtlcn1jYXRjaChhKXtHKFwic3c6bmF2X2VyclwiKX13JiYoeSh3LFwibWVzc2FnZVwiLGZ1bmN0aW9uKGEpe2EmJmEuZGF0YSYmdihhLmRhdGEuayxhLmRhdGEudil9KSx3LmNvbnRyb2xsZXImJncuY29udHJvbGxlci5wb3N0TWVzc2FnZShcIk1TRy1SRFlcIikpO3ZhciBtYT1bXTtuPXtyZWc6e30sdW5yZWc6e319O24udW5yZWcuYnJvd3Nlcj17YWN0aW9uOmZ1bmN0aW9uKGEsXG5iKXt2YXIgYz13LmdldFJlZ2lzdHJhdGlvbnMoKTtjJiZjLnRoZW4oZnVuY3Rpb24oYyl7Yy5mb3JFYWNoKGZ1bmN0aW9uKGMpe2MudW5yZWdpc3RlcigpLnRoZW4oZnVuY3Rpb24oKXt2KGErXCJzdWNjZXNzXCIpfSkuY2F0Y2goZnVuY3Rpb24oYyl7cC5sb2dFcnJvcihjLFwiW0FVSSBTV10gRmFpbGVkIHRvIFwiK2IrXCIgc2VydmljZSB3b3JrZXI6IFwiKTt2KGErXCJmYWlsdXJlXCIpfSl9KX0pfX07KGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVnLGM9YS51bnJlZzt3JiZ3LmdldFJlZ2lzdHJhdGlvbnM/KEYud2hlbihcIkFcIixcImEtdXRpbFwiKS5leGVjdXRlKGZ1bmN0aW9uKGEsYil7bmEoYSxiLGMsXCJ1bnJlZ2lzdGVyXCIpfSkseShmLFwibG9hZFwiLGZ1bmN0aW9uKCl7Ri53aGVuKFwiQVwiLFwiYS11dGlsXCIpLmV4ZWN1dGUoZnVuY3Rpb24oYSxjKXtuYShhLGMsYixcInJlZ2lzdGVyXCIpO2xhKCl9KX0pKTooYiYmKGIuYnJvd3NlciYmcih0KFwicmVnaXN0ZXJcIixcImJyb3dzZXJcIikrXCJ1bnN1cHBvcnRlZFwiKSxiLnByb2RNc2hvcCYmXG5yKHQoXCJyZWdpc3RlclwiLFwicHJvZF9tc2hvcFwiKStcInVuc3VwcG9ydGVkXCIpLGIuYmV0YU1zaG9wJiZyKHQoXCJyZWdpc3RlclwiLFwiYmV0YV9tc2hvcFwiKStcInVuc3VwcG9ydGVkXCIpKSxjJiYoYy5icm93c2VyJiZyKHQoXCJ1bnJlZ2lzdGVyXCIsXCJicm93c2VyXCIpK1widW5zdXBwb3J0ZWRcIiksYy5wcm9kTXNob3AmJnIodChcInVucmVnaXN0ZXJcIixcInByb2RfbXNob3BcIikrXCJ1bnN1cHBvcnRlZFwiKSxjLmJldGFNc2hvcCYmcih0KFwidW5yZWdpc3RlclwiLFwiYmV0YV9tc2hvcFwiKStcInVuc3VwcG9ydGVkXCIpKSxsYSgpKX0pKG4pO3AuZGVjbGFyZShcImEtZml4LWV2ZW50LW9mZlwiLCExKTt2KFwicGFnZWpzOnBrZ0V4ZWNUaW1lXCIsRCgpLXphKX0pKHdpbmRvdyxkb2N1bWVudCxEYXRlKTtcbihmdW5jdGlvbihhKXtcInVzZSBzdHJpY3RcIjtpZighYS5taXhfZCl7dmFyIHE9W10scj17fSx0PSFhLlByb21pc2U7dCYmUC53aGVuKFwiM3AtcHJvbWlzZVwiKS5yZWdpc3RlcihcIkBwL3Byb21pc2UtaXMtcmVhZHlcIixmdW5jdGlvbihlKXthLlByb21pc2U9ZX0pO2EubWl4X2Q9ZnVuY3Rpb24oZSxkLGspe1wic3RyaW5nXCIhPT10eXBlb2YgZSYmYS5QLmVycm9yKFwiQ2FyZEpTIEMwMDFcIik7aWYoIXJbZV0pe3ZhciBjPWUuc3BsaXQoXCI6XCIsMiksaD1jLmxlbmd0aCxiPTE9PT1oLGY9Y1toLTFdLnJlcGxhY2UoL0BjYXBhYmlsaXR5XFwvLyxcIkBjL1wiKSxsPTA9PT1mLmluZGV4T2YoXCJAYy9cIiksaD1rP2Q6cSx1PWt8fGQsZz1iP2EuUDphLlAuX25hbWVzcGFjZShjWzBdKSxtLHY9W10sbj1bXTtkPVtdO2s9aC5sZW5ndGg7Zm9yKGM9MDtjXHUwMDNDaztjKyspYj1oW2NdLFwibW9kdWxlXCIhPT1iJiZcInJlcXVpcmVcIiE9PWJ8fGcuZXJyb3IoXCJDYXJkSlMgQzAwMlwiKSxcImV4cG9ydHNcIj09PWI/KGI9XCJtaXg6XCIrXG5mK1wiLWV4cG9ydHNcIixnLmRlY2xhcmUoYixtPXt9KSxkLnB1c2goYikpOlwiQHAvXCI9PT1iLnN1YnN0cigwLDMpP2QucHVzaChiLnN1YnN0cigzKSk6XCJAYy9cIj09PWIuc3Vic3RyKDAsMyk/KG4ucHVzaChjKSx2LnB1c2goYikpOmQucHVzaChcIm1peDpcIitiKTt2YXIgcD0wO3QmJihkLnVuc2hpZnQoXCJAcC9wcm9taXNlLWlzLXJlYWR5XCIpLHArPTEpO2wmJihkLnVuc2hpZnQoXCJtaXg6QGFtem4vbWl4LmNsaWVudC1ydW50aW1lXCIpLHArPTEpO2cud2hlbi5hcHBseShnLGQpLnJlZ2lzdGVyKFwibWl4OlwiK2YsZnVuY3Rpb24oKXt2YXIgYj1xLnNsaWNlLmNhbGwoYXJndW1lbnRzLHApO2lmKGx8fDBcdTAwM0NuLmxlbmd0aCl7dmFyIGE9e2NhcGFiaWxpdGllczp2LGNhcmRNb2R1bGVGYWN0b3J5OmZ1bmN0aW9uKGEpe2Zvcih2YXIgZD1iLGU9YS5sZW5ndGgsYz0wO2NcdTAwM0NlO2MrKylkLnNwbGljZShuW2NdLDAsYVtjXSk7YT11LmFwcGx5KG51bGwsZCk7YT1tfHxhO2EuUD1nO3JldHVybiBhfX07bCYmYXJndW1lbnRzWzBdLnJlZ2lzdGVyQ2FwYWJpbGl0eU1vZHVsZShmLFxuYSk7cmV0dXJuIGF9YT11LmFwcGx5KG51bGwsYik7cmV0dXJuIG18fGF9KTtnLndoZW4oXCJtaXg6XCIrZikucmVnaXN0ZXIoXCJ4Y3A6XCIrZixmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JbZV09ITB9fTthLnhjcF9kPWEubWl4X2Q7UC53aGVuKFwibWl4OkBhbXpuL21peC5jbGllbnQtcnVudGltZVwiKS5leGVjdXRlKGZ1bmN0aW9uKGEpe1AuZGVjbGFyZShcInhjcDpAeGNwL3J1bnRpbWVcIixhKX0pfX0pKHdpbmRvdyk7XG4od2luZG93LkFtYXpvblVJUGFnZUpTID8gQW1hem9uVUlQYWdlSlMgOiBQKS53aGVuKCdzcC5sb2FkLmpzJykuZXhlY3V0ZShmdW5jdGlvbigpIHtcbiAgKHdpbmRvdy5BbWF6b25VSVBhZ2VKUyA/IEFtYXpvblVJUGFnZUpTIDogUCkubG9hZC5qcygnaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxNGloeFFEV3BMLl9SQ3wxMS1CWkVKOGxuTC5qcyw2MUdROUlkSzdITC5qcywyMU9mMC05SFBDTC5qcywwMTJGVmMzMTMxTC5qcywxMTlLQVdsSFU2TC5qcyw1MXhMMlFMdjRZTC5qcywxMUFIbFFoUFJqTC5qcywwMTZpSGdwRjc0TC5qcywxMWFOWUZGUzVoTC5qcywxMTZ0Z3c5VFNhTC5qcywyMTEtcDRHUlVDTC5qcywwMVBvTFhCRFhXTC5qcyw2MVRxZ3N0MTh0TC5qcywxMUJPZ3Zubm50TC5qcywzMVVXdVBndFR0TC5qcywwMXJwYXVUZXA0TC5qcywwMWl5eHVTR2o0TC5qcywwMW9Hb0VVRjFQTC5qc18uanM/QVVJQ2xpZW50cy9BbWF6b25VSSMxOTIzMzgtVDEuMjAyMDUxLVQxJyk7XG4gICh3aW5kb3cuQW1hem9uVUlQYWdlSlMgPyBBbWF6b25VSVBhZ2VKUyA6IFApLmxvYWQuanMoJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS80MUlNUUdqcGdtTC5qcz9BVUlDbGllbnRzL0NhcmRKc1J1bnRpbWVCdXp6Q29weUJ1aWxkJyk7XG59KTtcblx1MDAzQy9zY3JpcHQ+XG5cdTAwM0MhLS0gc3A6ZmVhdHVyZTpuYXYtaW5saW5lLWNzcyAtLT5cblx1MDAzQ3N0eWxlPi5uYXYtc3ByaXRlLXYxIC5uYXYtc3ByaXRlLCAubmF2LXNwcml0ZS12MSAubmF2LWljb24ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2duby9zcHJpdGVzL25hdi1zcHJpdGUtZ2xvYmFsX2JsdWViZWFjb24tMXhfb3B0aW1pemVkX2xheW91dDEuX0NCNDY4NjcwNzc0Xy5wbmcpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMDBweDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xufVxuLm5hdi1zcGlubmVyIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9qYXZhc2NyaXB0cy9saWIvcG9wb3Zlci9pbWFnZXMvc25ha2UuX0NCMTkyNTcxNjExXy5naWYpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuLm5hdi10aW1lbGluZS1pY29uLCAubmF2LWFjY2Vzcy1pbWFnZSwgLm5hdi10aW1lbGluZS1wcmltZS1pY29uIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9nbm8vc3ByaXRlcy90aW1lbGluZV9zcHJpdGVfMXguX0NCMjc2MjM5NDA4Xy5wbmcpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuXHUwMDNDL3N0eWxlPlx1MDAzQyEtLSBOQVZZQUFOIENTUyAtLT5cblx1MDAzQ2xpbmsgcmVsPVwic3R5bGVzaGVldFwiIGhyZWY9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvMjFyUU1qaHp1ekwuX1JDfDcxQnJWd3RWQ0NMLmNzcywxMVduTzZQUDdHTC5jc3MsMzEwLU0tWmErTUwuY3NzLDIxK2FVK1IzSWlMLmNzcywzMXdXV0M2WUF2TC5jc3MsMTFHNEh4TXRNU0wuY3NzLDMxT3ZIUlcrWGlMLmNzcywwMVhITU9IcEsxTC5jc3NfLmNzcz9BVUlDbGllbnRzL0FtYXpvbk5hdmlnYXRpb25EZXNrdG9wTWV0YUFzc2V0I2Rlc2t0b3AuMjIyNDcwLVQxXCI+XG5cdTAwM0MhLS0gc3A6ZmVhdHVyZTpob3N0LWFzc2V0cyAtLT5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICBcblxuXG5cblxuXG5cblxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuIFxuIFxuIFxuIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuIFxuIFxuIFxuIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDIS0tIGh0bWxCZWdpbk1hcmtlciAtLT5cblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcblxuXG5cblxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG5cblxuXG5cblxuXG5cblxuICBcbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuXG5cblxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG5cblxuICAgIFxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG5cbiAgIFxuICAgIFxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDc3R5bGU+XG4uYXBfcG9wb3Zlcl91bnNwcml0ZWQgLmFwX2JvZHkgLmFwX2xlZnR7YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2phdmFzY3JpcHRzL2xpYi9wb3BvdmVyL2ltYWdlcy9wb19sZWZ0XzE3Ll9WMV8ucG5nKX0uYXBfcG9wb3Zlcl91bnNwcml0ZWQgLmFwX2JvZHkgLmFwX3JpZ2h0e2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9qYXZhc2NyaXB0cy9saWIvcG9wb3Zlci9pbWFnZXMvcG9fcmlnaHRfMTcuX1YxXy5wbmcpfS5hcF9wb3BvdmVyX3Vuc3ByaXRlZCAuYXBfaGVhZGVyIC5hcF9sZWZ0e2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9qYXZhc2NyaXB0cy9saWIvcG9wb3Zlci9pbWFnZXMvcG9fdG9wX2xlZnQuX1YxXy5wbmcpfS5hcF9wb3BvdmVyX3Vuc3ByaXRlZCAuYXBfaGVhZGVyIC5hcF9yaWdodHtiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvamF2YXNjcmlwdHMvbGliL3BvcG92ZXIvaW1hZ2VzL3BvX3RvcF9yaWdodC5fVjFfLnBuZyl9LmFwX3BvcG92ZXJfdW5zcHJpdGVkIC5hcF9oZWFkZXIgLmFwX21pZGRsZXtiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvamF2YXNjcmlwdHMvbGliL3BvcG92ZXIvaW1hZ2VzL3BvX3RvcC5fVjFfLnBuZyl9LmFwX3BvcG92ZXJfdW5zcHJpdGVkIC5hcF9mb290ZXIgLmFwX2xlZnR7YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2phdmFzY3JpcHRzL2xpYi9wb3BvdmVyL2ltYWdlcy9wb19ib3R0b21fbGVmdC5fVjFfLnBuZyl9LmFwX3BvcG92ZXJfdW5zcHJpdGVkIC5hcF9mb290ZXIgLmFwX3JpZ2h0e2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9qYXZhc2NyaXB0cy9saWIvcG9wb3Zlci9pbWFnZXMvcG9fYm90dG9tX3JpZ2h0Ll9WMV8ucG5nKX0uYXBfcG9wb3Zlcl91bnNwcml0ZWQgLmFwX2Zvb3RlciAuYXBfbWlkZGxle2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9qYXZhc2NyaXB0cy9saWIvcG9wb3Zlci9pbWFnZXMvcG9fYm90dG9tLl9WMV8ucG5nKX0uYXBfcG9wb3Zlcl9zcHJpdGVkIC5hcF9ib2R5IC5hcF9sZWZ0LC5hcF9wb3BvdmVyX3Nwcml0ZWQgLmFwX2JvZHkgLmFwX3JpZ2h0e2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9qYXZhc2NyaXB0cy9saWIvcG9wb3Zlci9pbWFnZXMvbGlnaHQvc3ByaXRlLXYuX1YxXy5wbmcpfS5hcF9wb3BvdmVyX3Nwcml0ZWQgLmFwX2Nsb3NlYnV0dG9uLC5hcF9wb3BvdmVyX3Nwcml0ZWQgLmFwX2Zvb3RlciAuYXBfbGVmdCwuYXBfcG9wb3Zlcl9zcHJpdGVkIC5hcF9mb290ZXIgLmFwX21pZGRsZSwuYXBfcG9wb3Zlcl9zcHJpdGVkIC5hcF9mb290ZXIgLmFwX3JpZ2h0LC5hcF9wb3BvdmVyX3Nwcml0ZWQgLmFwX2hlYWRlciAuYXBfbGVmdCwuYXBfcG9wb3Zlcl9zcHJpdGVkIC5hcF9oZWFkZXIgLmFwX21pZGRsZSwuYXBfcG9wb3Zlcl9zcHJpdGVkIC5hcF9oZWFkZXIgLmFwX3JpZ2h0e2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9qYXZhc2NyaXB0cy9saWIvcG9wb3Zlci9pbWFnZXMvbGlnaHQvc3ByaXRlLWguX1YxXy5wbmcpfS5hcF9wb3BvdmVyX3Nwcml0ZWQgLmFwX2JvZHkgLmFwX2xlZnQtYXJyb3csLmFwX3BvcG92ZXJfc3ByaXRlZCAuYXBfYm9keSAuYXBfcmlnaHQtYXJyb3d7YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2phdmFzY3JpcHRzL2xpYi9wb3BvdmVyL2ltYWdlcy9saWdodC9zcHJpdGUtYXJyb3ctdi5fVjFfLnBuZyl9LmFwX3BvcG92ZXJ7cG9zaXRpb246YWJzb2x1dGU7b3V0bGluZTowfS5hcF9ib2R5e2hlaWdodDoxMDAlO21pbi1oZWlnaHQ6MzZweDtwb3NpdGlvbjpyZWxhdGl2ZTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7bWFyZ2luOjAgMTdweH0uYXBfYm9keSAuYXBfbGVmdCwuYXBfcG9wb3Zlcl9zcHJpdGVkIC5hcF9ib2R5IC5hcF9sZWZ0LWFycm93e3dpZHRoOjE3cHg7aGVpZ2h0OjEwMCU7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDotMTdweDtiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6c2Nyb2xsO2JhY2tncm91bmQtcmVwZWF0OnJlcGVhdC15fS5hcF9wb3BvdmVyX3Nwcml0ZWQgLmFwX2JvZHkgLmFwX2xlZnR7YmFja2dyb3VuZC1wb3NpdGlvbjowIHRvcH0uYXBfYm9keSAuYXBfcmlnaHQsLmFwX3BvcG92ZXJfc3ByaXRlZCAuYXBfYm9keSAuYXBfcmlnaHQtYXJyb3d7d2lkdGg6MTdweDtoZWlnaHQ6MTAwJTtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtyaWdodDotMTdweDtiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6c2Nyb2xsO2JhY2tncm91bmQtcmVwZWF0OnJlcGVhdC15fS5hcF9wb3BvdmVyX3Nwcml0ZWQgLmFwX2JvZHkgLmFwX3JpZ2h0e2JhY2tncm91bmQtcG9zaXRpb246LTUxcHggdG9wfS5hcF9mb290ZXIsLmFwX2hlYWRlcntwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlfS5hcF9mb290ZXIgKiwuYXBfaGVhZGVyICp7aGVpZ2h0OjI2cHh9LmFwX2hlYWRlciAuYXBfbGVmdHtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7d2lkdGg6MzRweDtiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6c2Nyb2xsO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdH0uYXBfcG9wb3Zlcl9zcHJpdGVkIC5hcF9oZWFkZXIgLmFwX2xlZnR7YmFja2dyb3VuZC1wb3NpdGlvbjpsZWZ0IC0ycHh9LmFwX2hlYWRlciAuYXBfcmlnaHR7d2lkdGg6MzRweDtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtyaWdodDowO2JhY2tncm91bmQtYXR0YWNobWVudDpzY3JvbGw7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0fS5hcF9wb3BvdmVyX3Nwcml0ZWQgLmFwX2hlYWRlciAuYXBfcmlnaHR7YmFja2dyb3VuZC1wb3NpdGlvbjpyaWdodCAtMnB4fS5hcF9oZWFkZXIgLmFwX21pZGRsZXttYXJnaW46MCAzNHB4O2JhY2tncm91bmQtYXR0YWNobWVudDpzY3JvbGw7YmFja2dyb3VuZC1yZXBlYXQ6cmVwZWF0LXh9LmFwX3BvcG92ZXJfc3ByaXRlZCAuYXBfaGVhZGVyIC5hcF9taWRkbGV7YmFja2dyb3VuZC1wb3NpdGlvbjowIC03MHB4fS5hcF9mb290ZXIgLmFwX2xlZnR7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO3dpZHRoOjM0cHg7YmFja2dyb3VuZC1hdHRhY2htZW50OnNjcm9sbDtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXR9LmFwX3BvcG92ZXJfc3ByaXRlZCAuYXBfZm9vdGVyIC5hcF9sZWZ0e2JhY2tncm91bmQtcG9zaXRpb246bGVmdCAtNDBweH0uYXBfZm9vdGVyIC5hcF9yaWdodHt3aWR0aDozNHB4O3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3JpZ2h0OjA7YmFja2dyb3VuZC1hdHRhY2htZW50OnNjcm9sbDtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXR9LmFwX3BvcG92ZXJfc3ByaXRlZCAuYXBfZm9vdGVyIC5hcF9yaWdodHtiYWNrZ3JvdW5kLXBvc2l0aW9uOnJpZ2h0IC00MHB4fS5hcF9mb290ZXIgLmFwX21pZGRsZXttYXJnaW46MCAzNHB4O2JhY2tncm91bmQtYXR0YWNobWVudDpzY3JvbGw7YmFja2dyb3VuZC1yZXBlYXQ6cmVwZWF0LXh9LmFwX3BvcG92ZXJfc3ByaXRlZCAuYXBfZm9vdGVyIC5hcF9taWRkbGV7YmFja2dyb3VuZC1wb3NpdGlvbjowIC0xMDhweH0uYXBfcG9wb3ZlciAuYXBfdGl0bGViYXJ7ZGlzcGxheTpub25lO3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt0b3A6MDtiYWNrZ3JvdW5kLWNvbG9yOiNFQUYzRkU7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI0MyRERGMjtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDA7bWFyZ2luOjhweCAxOHB4O3doaXRlLXNwYWNlOm5vd3JhcDtvdmVyZmxvdzpoaWRkZW59LmFwX3BvcG92ZXIgLmFwX3RpdGxlYmFyLm11bHRpbGluZXt3aGl0ZS1zcGFjZTpub3JtYWw7b3ZlcmZsb3c6dmlzaWJsZX0uYXBfcG9wb3ZlciAuYXBfdGl0bGViYXIgLmFwX3RpdGxle3BhZGRpbmc6NHB4IDA7bWFyZ2luLWxlZnQ6MTBweDtvdmVyZmxvdzpoaWRkZW59I2FwX292ZXJsYXksI2FwX292ZXJsYXkgZGl2e2JhY2tncm91bmQtY29sb3I6IzNGNEM1ODt3aWR0aDoxMDAlO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDt6LWluZGV4Ojk5fS5hcF9wb3BvdmVyIC5hcF9jbG9zZXtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDoxOHB4O3RvcDoxM3B4fS5hcF9wb3BvdmVyIC5hcF9jbG9zZSBhe3BhZGRpbmc6NXB4O3RleHQtZGVjb3JhdGlvbjpub25lO291dGxpbmU6MH0uYXBfcG9wb3ZlciAuYXBfY2xvc2UgLmFwX2Nsb3NldGV4dHtkaXNwbGF5Om5vbmU7bWFyZ2luLXJpZ2h0OjVweDtsaW5lLWhlaWdodDoxZW19LmFwX3BvcG92ZXIgLmFwX2Nsb3NlYnV0dG9ue2Rpc3BsYXk6LW1vei1pbmxpbmUtYm94O2Rpc3BsYXk6aW5saW5lLWJsb2NrO3dpZHRoOjE1cHg7aGVpZ2h0OjE1cHg7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtcG9zaXRpb246MCAtMTM2cHg7cG9zaXRpb246cmVsYXRpdmU7b3ZlcmZsb3c6aGlkZGVuO3ZlcnRpY2FsLWFsaWduOnRvcH0uYXBfcG9wb3ZlciAuYXBfY2xvc2VidXR0b24gc3Bhbntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6LTk5OTlweH0uYXBfcG9wb3ZlciAuYXBfY2xvc2UgaW1ne3ZlcnRpY2FsLWFsaWduOnRvcH0uYXBfY2xhc3NpY3tib3JkZXItdG9wOjFweCBzb2xpZCAjY2NjO2JvcmRlci1sZWZ0OjFweCBzb2xpZCAjY2NjO2JvcmRlci1ib3R0b206MXB4IHNvbGlkICMyRjJGMUQ7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjMkYyRjFEO2JhY2tncm91bmQtY29sb3I6I0VGRURENDtwYWRkaW5nOjNweH0uYXBfY2xhc3NpYyAuYXBfdGl0bGViYXJ7Y29sb3I6Izg2ODc1RDtmb250LXNpemU6MTJweDtwYWRkaW5nOjAgMCAzcHggMDtsaW5lLWhlaWdodDoxZW19LmFwX2NsYXNzaWMgLmFwX2Nsb3Nle2Zsb2F0OnJpZ2h0fS5hcF9jbGFzc2ljIC5hcF9jb250ZW50e2NsZWFyOmJvdGg7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlcjoxcHggc29saWQgI0FDQTk3NjtwYWRkaW5nOjhweDtmb250LXNpemU6MTFweH1cbiNhZGRvbntib3JkZXItY29sb3I6IzNmNjk5ODtib3JkZXItc3R5bGU6c29saWQgbm9uZTtib3JkZXItd2lkdGg6MXB4O21hcmdpbjoyMXB4IDAgMTRweDtwYWRkaW5nOjE1cHggMCAxMHB4O3Bvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjEwMCV9I2FkZG9uIC5pY29ue2xlZnQ6MDtwYWRkaW5nLXJpZ2h0OjEwcHg7cG9zaXRpb246YWJzb2x1dGU7dG9wOi0xMHB4fSNhbmRvbi1jb3JkIGg0LCNhbmRvbi1jb3JkIHB7bWFyZ2luOjAgMCA1cHggMzVweH0jZnRNZXNzYWdlLmJ1eWluZ3tmb250LXNpemU6MTNweDttYXJnaW46NnB4IDAgMTBweDtwYWRkaW5nOjB9I2J1eWJveCAuYS1zZWN0aW9uSGVhZGluZ3toZWlnaHQ6MDtib3JkZXItdG9wOjFweCBzb2xpZCAjY2NjO21hcmdpbjoxMnB4IDA7dGV4dC1hbGlnbjpjZW50ZXJ9I2J1eWJveCAuYS1zZWN0aW9uSGVhZGluZyBzcGFue2JhY2tncm91bmQtY29sb3I6I2ZmZjtmb250LXNpemU6MTJweDtwb3NpdGlvbjpyZWxhdGl2ZTtwYWRkaW5nOjAgMTBweDt0b3A6LTlweH0jYnV5Ym94IC5hLWNvbG9yLWhlYWRpbmd7Y29sb3I6I2U0NzkxMX0jYnV5Ym94X2ZlYXR1cmVfZGl2e3Bvc2l0aW9uOnJlbGF0aXZlfSNidXlib3h7ZmlsdGVyOmluaGVyaXR9I2dldEl0QnkgLnRpbnl7Y29sb3I6IzAwMCFpbXBvcnRhbnQ7Zm9udC1zaXplOjEycHg7cGFkZGluZzowIDVweCAwIDAhaW1wb3J0YW50fSNnZXRJdEJ5IC5vbmVDbGlja1N3YXRjaE91dGVye2N1cnNvcjpwb2ludGVyO2ZvbnQtc2l6ZToxMnB4O21hcmdpbjoycHg7b3V0bGluZS1zdHlsZTpub25lfSNnZXRJdEJ5IC5vbmVDbGlja1N3YXRjaEF2YWlsYWJsZXtib3JkZXItcmFkaXVzOjRweDstbW96LWJvcmRlci1yYWRpdXM6NHB4O3dpZHRoOjU0cHghaW1wb3J0YW50O2hlaWdodDo0NnB4IWltcG9ydGFudDtib3JkZXI6MXB4IHNvbGlkICNkMGQwZDA7cGFkZGluZzoxcHg7b3V0bGluZS1zdHlsZTpub25lfSNnZXRJdEJ5IC5vbmVDbGlja1N3YXRjaEhvdmVye2JvcmRlci1yYWRpdXM6NHB4Oy1tb3otYm9yZGVyLXJhZGl1czo0cHg7d2lkdGg6NTRweCFpbXBvcnRhbnQ7aGVpZ2h0OjQ2cHghaW1wb3J0YW50O2JvcmRlcjoxcHggc29saWQgI2I3YjdiNztwYWRkaW5nOjFweDtvdXRsaW5lLXN0eWxlOm5vbmV9I2dldEl0QnkgLm9uZUNsaWNrU3dhdGNoU2VsZWN0e3dpZHRoOjU0cHghaW1wb3J0YW50O2hlaWdodDo0NnB4IWltcG9ydGFudDtib3JkZXItcmFkaXVzOjRweDstbW96LWJvcmRlci1yYWRpdXM6NHB4O2JhY2tncm91bmQtY29sb3I6I2ZlZjdmMTtib3JkZXI6MXB4IHNvbGlkICNlNDc5MTE7b3V0bGluZS1zdHlsZTpub25lfSNnZXRJdEJ5IC5vbmVDbGlja1N3YXRjaElubmVyQm9yZGVye2NvbG9yOiMwMDA7cGFkZGluZzo1cHggMnB4IDJweCAxcHg7dGV4dC1hbGlnbjpjZW50ZXJ9I2dldEl0QnkgLm9uZUNsaWNrRmFzdFRyYWNrSG92ZXIsI2dldEl0QnkgLm9uZUNsaWNrRmFzdFRyYWNrU2VsZWN0e2ZvbnQtc2l6ZToxM3B4O3RleHQtYWxpZ246Y2VudGVyO291dGxpbmUtc3R5bGU6bm9uZX0jZ2V0SXRCeSAuR0lCU2hpcFN0cmluZ09yYW5nZXtjb2xvcjojMDkwO2ZvbnQtc2l6ZToxM3B4O2ZvbnQtd2VpZ2h0OjcwMDt0ZXh0LWFsaWduOmNlbnRlcn0jZ2V0SXRCeSAuR0lCU2hpcFN0cmluZ09yYW5nZX4qe3RleHQtYWxpZ246Y2VudGVyfSNnZXRJdEJ5IHRhYmxle3dpZHRoOmF1dG99I2lzR2lmdCBpbnB1dHtib3JkZXI6bm9uZTttYXJnaW46MH0jbGlnaHRuaW5nRGVhbHtjbGVhcjpib3RofSNsaWdodG5pbmdEZWFsIGlucHV0LCNsaWdodG5pbmdEZWFsIGxhYmVse2NvbG9yOiMzMzM7bWFyZ2luOjB9I2xpZ2h0bmluZ0RlYWwgLmRlYWx7cGFkZGluZzoxMHB4IDVweCAxMHB4IDA7bWFyZ2luLWJvdHRvbTo1cHh9I2xpZ2h0bmluZ0RlYWwgLmNsYWltZWRCYXJ7YmFja2dyb3VuZC1jb2xvcjojZmM1O2hlaWdodDoxOHB4fSNsaWdodG5pbmdEZWFsIC5jbGFpbWVkVGV4dHtsaW5lLWhlaWdodDoxOHB4O3Bvc2l0aW9uOmFic29sdXRlfSNidXlib3hUb29sdGlwe2JvcmRlcjoxcHggc29saWQgIzVjOWViZn0uYnV5Ym94UGFydGlhbFNpemVMYWJlbHtjb2xvcjojRTgyODFFfS5oaWdobGlnaHRUd2lzdGVyRHJvcGRvd25Cb3JkZXJ7Ym9yZGVyOjJweCBzb2xpZCAjRTgyODFFO2Rpc3BsYXk6aW5saW5lLWJsb2NrO2JvcmRlci1yYWRpdXM6NHB4fS50cmFuc3BhcmVudFR3aXN0ZXJEcm9wZG93bkJvcmRlcntib3JkZXI6MnB4IHNvbGlkICNmZmY7ZGlzcGxheTppbmxpbmUtYmxvY2s7Ym9yZGVyLXJhZGl1czo0cHh9I2hlcm8tcXVpY2stcHJvbW8gLmhlYWRsaW5lLCNoZXJvLXF1aWNrLXByb21vIC5xcEhlYWRsaW5le2NvbG9yOiMzMzM7Zm9udC1zaXplOjE2cHg7Zm9udC13ZWlnaHQ6NDAwO2xpbmUtaGVpZ2h0OjIycHg7bWFyZ2luOjA7cGFkZGluZy1ib3R0b206NHB4fSNoZXJvLXF1aWNrLXByb21vIC5wcm9kSW1hZ2UsI2hlcm8tcXVpY2stcHJvbW8gLnFwSW1hZ2V7ZmxvYXQ6bGVmdDttYXJnaW4tcmlnaHQ6MTJweH0jaGVyby1xdWljay1wcm9tbyAucHJvZEltYWdlIGltZywjaGVyby1xdWljay1wcm9tbyAucXBJbWFnZSBpbWd7bWF4LXdpZHRoOm5vbmV9I2hlcm8tcXVpY2stcHJvbW8gLmhlYWRsaW5le2Rpc3BsYXk6YmxvY2t9I2ltYWdlQmxvY2sgLml0ZW0uc2VsZWN0ZWQubm9mbGFzaHtmaWx0ZXI6YWxwaGEob3BhY2l0eT00MCk7LW1vei1vcGFjaXR5Oi40O29wYWNpdHk6LjR9I2ltYWdlQmxvY2sgLm5vRmxhc2hDb250ZW50e2xlZnQ6MDtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6NTAlO3otaW5kZXg6MTAxO2Rpc3BsYXk6bm9uZTtsaW5lLWhlaWdodDozMHB4O21hcmdpbi10b3A6LTE1cHh9I2ltYWdlQmxvY2sgI25vRmxhc2hDb250ZW50e21hcmdpbjo1MCUgMTVweDtwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjEwO3BhZGRpbmctdG9wOjhweDtwYWRkaW5nLWJvdHRvbTo4cHg7ZGlzcGxheTpibG9jazt0b3A6MDtsZWZ0OjB9I2ltYWdlQmxvY2sgdWwubGlzdCBsaXttYXJnaW46MH0jaW1hZ2VCbG9jayAuY2FudmFzIC5zZWxlY3RlZHtkaXNwbGF5OmJsb2NrIWltcG9ydGFudDt2aXNpYmlsaXR5OnZpc2libGUhaW1wb3J0YW50fSNpbWFnZUJsb2NrIC5jYW52YXMgLml0ZW0sI2ltYWdlQmxvY2sgLmhpZGUsI2ltYWdlQmxvY2sgLnRlbXBsYXRle2Rpc3BsYXk6bm9uZX0jaW1hZ2VCbG9jayAudmFyaWF0aW9uVW5hdmFpbGFibGV7cG9zaXRpb246cmVsYXRpdmU7dGV4dC1hbGlnbjpjZW50ZXI7ZGlzcGxheTpub25lfSNpbWFnZUJsb2NrIC52YXJpYXRpb25VbmF2YWlsYWJsZSAuaW5uZXJ7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MTAwJTt0b3A6MjAwcHg7bGVmdDowfSNpbWFnZUJsb2NrIC5tYWludGFpbi1oZWlnaHQsI2ltYWdlQmxvY2sgbGkubWFpbnRhaW4taGVpZ2h0IGRpdiwjaW1hZ2VCbG9jayBsaS5tYWludGFpbi1oZWlnaHQgc3BhbntoZWlnaHQ6MTAwJTtkaXNwbGF5OmJsb2NrfSNtYWluLWltYWdlLWNvbnRhaW5lcnttYXgtaGVpZ2h0OjcwMHB4IWltcG9ydGFudDtwb3NpdGlvbjpyZWxhdGl2ZX1AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6MHB4KSBhbmQgKG1heC13aWR0aDoxMzY2cHgpey5kcF9haWJfbGVmdF9jb2x1bW5fdDF7d2lkdGg6NDUlIWltcG9ydGFudH0uZHBfYWliX3JpZ2h0X2NvbHVtbl90MXt3aWR0aDo1MiUhaW1wb3J0YW50fS5kcF9haWJfbGVmdF9jb2x1bW5fdDJ7d2lkdGg6NTAlIWltcG9ydGFudH0uZHBfYWliX3JpZ2h0X2NvbHVtbl90Mnt3aWR0aDo0NyUhaW1wb3J0YW50fX1AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6MTM2N3B4KSBhbmQgKG1heC13aWR0aDoxNjQ5cHgpey5zb2Z0bGluZXNfbGVmdF9jb2x1bW5fcHBkX2hvcml6b250YWx7d2lkdGg6NDQlIWltcG9ydGFudH0uc29mdGxpbmVzX3JpZ2h0X2NvbHVtbl9wcGRfaG9yaXpvbnRhbHt3aWR0aDo1MyUhaW1wb3J0YW50fS5zb2Z0bGluZXNfbGVmdF9jb2x1bW5fcHBkX3ZlcnRpY2Fse3dpZHRoOjM1JSFpbXBvcnRhbnR9LnNvZnRsaW5lc19yaWdodF9jb2x1bW5fcHBkX3ZlcnRpY2Fse3dpZHRoOjYyJSFpbXBvcnRhbnR9LmRwX2FpYl9sZWZ0X2NvbHVtbl90MXt3aWR0aDo0NSUhaW1wb3J0YW50fS5kcF9haWJfcmlnaHRfY29sdW1uX3Qxe3dpZHRoOjUyJSFpbXBvcnRhbnR9LmRwX2FpYl9sZWZ0X2NvbHVtbl90Mnt3aWR0aDo1MCUhaW1wb3J0YW50fS5kcF9haWJfcmlnaHRfY29sdW1uX3Qye3dpZHRoOjQ3JSFpbXBvcnRhbnR9fUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDoxNjUwcHgpIGFuZCAobWF4LXdpZHRoOjE4NTlweCl7I21haW4taW1hZ2UtY29udGFpbmVye21heC1oZWlnaHQ6OTAwcHghaW1wb3J0YW50O3Bvc2l0aW9uOnJlbGF0aXZlfS5zb2Z0bGluZXNfbGVmdF9jb2x1bW5fcHBkX2hvcml6b250YWx7d2lkdGg6NDglIWltcG9ydGFudH0uc29mdGxpbmVzX3JpZ2h0X2NvbHVtbl9wcGRfaG9yaXpvbnRhbHt3aWR0aDo0OSUhaW1wb3J0YW50fS5zb2Z0bGluZXNfbGVmdF9jb2x1bW5fcHBkX3ZlcnRpY2Fse3dpZHRoOjQwJSFpbXBvcnRhbnR9LnNvZnRsaW5lc19yaWdodF9jb2x1bW5fcHBkX3ZlcnRpY2Fse3dpZHRoOjU3JSFpbXBvcnRhbnR9LmRwX2FpYl9sZWZ0X2NvbHVtbl90MXt3aWR0aDo0NSUhaW1wb3J0YW50fS5kcF9haWJfcmlnaHRfY29sdW1uX3Qxe3dpZHRoOjUyJSFpbXBvcnRhbnR9LmRwX2FpYl9sZWZ0X2NvbHVtbl90Mnt3aWR0aDo1MCUhaW1wb3J0YW50fS5kcF9haWJfcmlnaHRfY29sdW1uX3Qye3dpZHRoOjQ3JSFpbXBvcnRhbnR9fUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDoxODYwcHgpeyNtYWluLWltYWdlLWNvbnRhaW5lcnttYXgtaGVpZ2h0OjkwMHB4IWltcG9ydGFudDtwb3NpdGlvbjpyZWxhdGl2ZX0uc29mdGxpbmVzX2xlZnRfY29sdW1uX3BwZF9ob3Jpem9udGFse3dpZHRoOjUyJSFpbXBvcnRhbnR9LnNvZnRsaW5lc19yaWdodF9jb2x1bW5fcHBkX2hvcml6b250YWx7d2lkdGg6NDUlIWltcG9ydGFudH0uc29mdGxpbmVzX2xlZnRfY29sdW1uX3BwZF92ZXJ0aWNhbHt3aWR0aDo0MyUhaW1wb3J0YW50fS5zb2Z0bGluZXNfcmlnaHRfY29sdW1uX3BwZF92ZXJ0aWNhbHt3aWR0aDo1NCUhaW1wb3J0YW50fS5kcF9haWJfbGVmdF9jb2x1bW5fdDF7d2lkdGg6NDUlIWltcG9ydGFudH0uZHBfYWliX3JpZ2h0X2NvbHVtbl90MXt3aWR0aDo1MiUhaW1wb3J0YW50fS5kcF9haWJfbGVmdF9jb2x1bW5fdDJ7d2lkdGg6NTAlIWltcG9ydGFudH0uZHBfYWliX3JpZ2h0X2NvbHVtbl90Mnt3aWR0aDo0NyUhaW1wb3J0YW50fX0jaW1hZ2VCbG9jayAuc3RyZXRjaC12ZXJ0aWNhbHt3aWR0aDphdXRvIWltcG9ydGFudH0jaW1hZ2VCbG9jayAuc3RyZXRjaC1ob3Jpem9udGFse2hlaWdodDphdXRvIWltcG9ydGFudH0jaW1hZ2VCbG9jayAuY2hyb21lZnVsLXZpZGVvIC5jZW50ZXJzbGF0ZSBpbWd7d2lkdGg6MTAwJX0jaW1hZ2VCbG9jayAubGlzdCBkaXZ7bWFyZ2luOjA7cGFkZGluZzowfSNpbWFnZUJsb2NrIC5saXN0IC5jaHJvbWVmdWwtdmlkZW8gZGl2e21hcmdpbjphdXRvO3BhZGRpbmc6MDtmbG9hdDpub25lIWltcG9ydGFudH0jaW1hZ2VCbG9jayAuY2VudGVyc2xhdGV7ZGlzcGxheTp0YWJsZS1jZWxsfSNhbHRJbWFnZXMgbGkuaXRlbSBpbWd7bWF4LXdpZHRoOm5vbmUhaW1wb3J0YW50fSNpbWFnZUJsb2NrIC5ob2xkZXJ7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowfSNpbWFnZUJsb2NrICNjYW52YXNDYXB0aW9ue2Rpc3BsYXk6YmxvY2s7bWluLWhlaWdodDoyMHB4fSNpbWFnZUJsb2NrIC5ob2xkZXIudmlkZW8gdmlkZW97b3ZlcmZsb3c6aGlkZGVuIWltcG9ydGFudH0jaW1hZ2VCbG9jayAuY2hyb21lbGVzcy12aWRlbyAuaG9sZGVyLnZpZGVve3otaW5kZXg6Mn0jaW1hZ2VCbG9jayAuY2hyb21lbGVzcy12aWRlbyBpbWd7ei1pbmRleDo0fSNpbWFnZUJsb2NrICNtYWluLWltYWdlLWNvbnRhaW5lciAuYS1kZWNsYXJhdGl2ZXtkaXNwbGF5OnRhYmxlO3dpZHRoOjEwMCV9I2ltYWdlQmxvY2sgI21haW4taW1hZ2UtY29udGFpbmVyIC5pbWdUYWdXcmFwcGVye2Rpc3BsYXk6dGFibGUtY2VsbDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9I2ltYWdlQmxvY2sgI3ZpZGVvLW91dGVyLWNvbnRhaW5lcntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTt6LWluZGV4Oi0xfSNpbWFnZUJsb2NrICNtYWluLXZpZGVvLWNvbnRhaW5lcnt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO21hcmdpbjphdXRvfSNpbWFnZUJsb2NrICNtYWluLXZpZGVvLWNvbnRhaW5lciB2aWRlb3ttYXgtd2lkdGg6MTAwJX0jd2F5ZmluZGluZy1icmVhZGNydW1ic19jb250YWluZXJ7cGFkZGluZzowIDE2cHghaW1wb3J0YW50O21hcmdpbi10b3A6OHB4IWltcG9ydGFudH0jZGV0YWlsSW1ne21heC13aWR0aDpub25lfSNJVi1NYWluIC5mdWxsU2NyZWVue21heC13aWR0aDpub25lfWRpdi5Eb25zQm94e2hlaWdodDoyNHB4IWltcG9ydGFudH1kaXYuRG9uc0JveFJvd3MgdHJ7aGVpZ2h0OjQwcHh9I21iYyB1bHttYXJnaW4tYm90dG9tOjB9I21iYyBsaXtjdXJzb3I6ZGVmYXVsdH0jbWJjIGxpOmhvdmVyIHNwYW4ubWJjTWVyY2hhbnROYW1le2NvbG9yOiNFNDc5MTF9I21iYyAubWJjLW9mZmVyLXJvdzpob3ZlciBzcGFuLm1iY01lcmNoYW50TmFtZXtjb2xvcjojRTQ3OTExfSNtYmMgLm1iYy1hZGRvbi1zbWFsbHtmb250LXNpemU6OXB4fXNlbGVjdHstd2Via2l0LWJvcmRlci1yYWRpdXM6NHB4Oy1tb3otYm9yZGVyLXJhZGl1czo0cHg7Ym9yZGVyLXJhZGl1czo0cHg7cGFkZGluZzozcHg7Ym9yZGVyOjFweCAjZGRkIHNvbGlkfS5hLWx0LWllOCAjd2lzaGxpc3RCdXR0b25TdGFjayBzcGFuLmEtYnV0dG9uLWRyb3Bkb3due2Rpc3BsYXk6aW5saW5lIWltcG9ydGFudH0uYS1sdC1pZTggI3dpc2hsaXN0QnV0dG9uU3RhY2sgc3Bhbi5hLWJ1dHRvbi1kcm9wZG93bi5hLWhpZGRlbntkaXNwbGF5Om5vbmUhaW1wb3J0YW50fSN3aXNobGlzdC1kcm9wZG93bi1jb250ZW50e2JhY2tncm91bmQtY29sb3I6I2YwZjBmMDtib3JkZXI6MXB4IHNvbGlkICNhNmE2YTZ9I3dpc2hsaXN0LWRyb3Bkb3duLWNvbnRlbnQgLmFwX2NvbnRlbnR7cGFkZGluZzowIWltcG9ydGFudH0jd2lzaGxpc3QtZHJvcGRvd24tY29udGVudCAud2wtcG9wLWZvb3Rlciwjd2lzaGxpc3QtZHJvcGRvd24tY29udGVudCAud2wtcG9wLWhlYWRlciwjd2lzaGxpc3QtZHJvcGRvd24tY29udGVudCAud2wtcG9wLWxlZnQsI3dpc2hsaXN0LWRyb3Bkb3duLWNvbnRlbnQgLndsLXBvcC1yaWdodHtkaXNwbGF5Om5vbmV9I3dpc2hsaXN0LWRyb3Bkb3duLWNvbnRlbnQgLndsLXBvcC13cmFwcGVye3Bvc2l0aW9uOnN0YXRpYzt3aWR0aDoxMDAlIWltcG9ydGFudH0jd2lzaGxpc3QtZHJvcGRvd24tY29udGVudCAud2wtbGlzdC1kZWZhdWx0e2NvbG9yOiMzMzN9I3dpc2hsaXN0LWRyb3Bkb3duLWNvbnRlbnQgLndsLWNyZWF0ZS10ZXh0LCN3aXNobGlzdC1kcm9wZG93bi1jb250ZW50IC53bC1saXN0LW5hbWV7Y29sb3I6IzMzMztmb250LXNpemU6MTFweH0jd2lzaGxpc3QtZHJvcGRvd24tY29udGVudCAud2wtbGlzdC10eXBle2NvbG9yOiM4Nzg3ODc7Zm9udC1zaXplOjExcHg7bWFyZ2luLXJpZ2h0OjVweH0jd2lzaGxpc3QtZHJvcGRvd24tY29udGVudCAud2wtY3JlYXRlLWxpbmt7YmFja2dyb3VuZC1jb2xvcjojZTJlMmUyfSN3aXNobGlzdC1kcm9wZG93bi1jb250ZW50IC53bC1jcmVhdGUtYnV0dG9uLCN3aXNobGlzdC1kcm9wZG93bi1jb250ZW50IC53bC1jcmVhdGUtaW5uZXIsI3dpc2hsaXN0LWRyb3Bkb3duLWNvbnRlbnQgLndsLWxpc3QtYnV0dG9uLCN3aXNobGlzdC1kcm9wZG93bi1jb250ZW50IC53bC1saXN0LWlubmVye2JvcmRlcjpub25lfSN3aXNobGlzdC1kcm9wZG93bi1jb250ZW50IC5zX3BsdXN7ZGlzcGxheTppbmxpbmUtYmxvY2s7aGVpZ2h0OjhweDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7d2lkdGg6OHB4fSN3aXNobGlzdC1kcm9wZG93bi1jb250ZW50IC5zX3dsTGlzdEdyYWRpZW50e2JhY2tncm91bmQtaW1hZ2U6bm9uZX0uYWRkT25JdGVtLWhlYWRlcntiYWNrZ3JvdW5kLWNvbG9yOiMzZjY5OTghaW1wb3J0YW50O2JvcmRlci1jb2xvcjojM2Y2OTk4IWltcG9ydGFudDtib3JkZXItYm90dG9tOjAhaW1wb3J0YW50O2NvbG9yOiNmZmYhaW1wb3J0YW50fS5hZGRPbkl0ZW0taGVhZGVyOmFmdGVye2NvbnRlbnQ6XCJcIjtwb3NpdGlvbjphYnNvbHV0ZTttYXJnaW4tdG9wOi0zcHg7bGVmdDoxMjVweDttYXJnaW4tbGVmdDotOHB4O2JvcmRlci1zdHlsZTpkYXNoZWQ7Ym9yZGVyLXdpZHRoOjhweDtib3JkZXItY29sb3I6dHJhbnNwYXJlbnQ7X2JvcmRlci1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXItdG9wLXdpZHRoOjA7Ym9yZGVyLXRvcDo4cHggc29saWQgIzNmNjk5ODt3aWR0aDowO2hlaWdodDowO2xpbmUtaGVpZ2h0OjA7Zm9udC1zaXplOjA7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKDM2MGRlZyk7ZGlzcGxheTpibG9ja30jdGVsbC1hLWZyaWVuZHtmb250LXNpemU6MH0jdGVsbC1hLWZyaWVuZCBhLCN0ZWxsLWEtZnJpZW5kIHNwYW57Zm9udC1zaXplOjEzcHh9QC1tb3otZG9jdW1lbnQgdXJsLXByZWZpeCgpeyNzaGlwVG9BVUlCdXR0b24gLmEtYnV0dG9uLXRleHR7cGFkZGluZy1sZWZ0OjAhaW1wb3J0YW50fSNzaGlwVG9BVUlCdXR0b24gLmEtZHJvcGRvd24tbGFiZWx7bWFyZ2luLWxlZnQ6MTBweH19I3dpc2hsaXN0QnV0dG9uU3RhY2sgLmEtYnV0dG9uIC5hLWJ1dHRvbi10ZXh0e3RleHQtYWxpZ246bGVmdH0jcHJvZHVjdERlc2NyaXB0aW9uIHVse2NvbG9yOmluaGVyaXR9I2RldGFpbC1idWxsZXRzIHVse2NvbG9yOiMzMzN9I2ZlYXR1cmUtYnVsbGV0cyBsaSBzcGFue3dvcmQtd3JhcDpicmVhay13b3JkO2Rpc3BsYXk6YmxvY2t9I3Byb2R1Y3REZXNjcmlwdGlvbiBoMi5wcm9kdWN0RGVzY3JpcHRpb25IZWFkZXJ7bWFyZ2luLWJvdHRvbTowfSNwcm9kdWN0RGVzY3JpcHRpb24gLmVtcHR5Q2xlYXJ7Y2xlYXI6bGVmdDtoZWlnaHQ6MDtmb250LXNpemU6MH0jcHJvZHVjdERlc2NyaXB0aW9uIGRpdi5wcm9kdWN0RGVzY3JpcHRpb25XcmFwcGVye21hcmdpbjowIDAgMWVtIDB9I3Byb2R1Y3REZXNjcmlwdGlvbiBoMy5wcm9kdWN0RGVzY3JpcHRpb25Tb3VyY2V7Zm9udC13ZWlnaHQ6NDAwO2NvbG9yOiMzMzM7Zm9udC1zaXplOjEuMjNlbTttYXJnaW46Ljc1ZW0gMCAuMzc1ZW0gMDtjbGVhcjpsZWZ0fSNwcm9kdWN0RGVzY3JpcHRpb24gLnNlZUFsbHttYXJnaW4tdG9wOjEuMjVlbTttYXJnaW4tbGVmdDotMTVweH0jcHJvZHVjdERlc2NyaXB0aW9uIHVsLCN0ZWNobmljYWxQcm9kdWN0RmVhdHVyZXMgdWx7bGlzdC1zdHlsZS10eXBlOmRpc2M7bWFyZ2luOjEuMTJlbSAwO21hcmdpbi1sZWZ0OjIwcHh9I3Byb2R1Y3REZXNjcmlwdGlvbiB1bCBsaXttYXJnaW46MCAwIDAgMjBweH0jcHJvZHVjdERlc2NyaXB0aW9uIHVsIGxpIHVse2xpc3Qtc3R5bGUtdHlwZTpkaXNjO21hcmdpbi1sZWZ0OjIwcHh9I3Byb2R1Y3REZXNjcmlwdGlvbiB1bCBsaSB1bCBsaXttYXJnaW46MCAwIDAgMjBweH0jcHJvZHVjdERlc2NyaXB0aW9uIC5hcGx1cyBoNCwjcHJvZHVjdERlc2NyaXB0aW9uIC5hcGx1cyBoNXttYXJnaW46MCAwIC43NWVtIDA7Zm9udC1zaXplOjFlbX0jcHJvZHVjdERlc2NyaXB0aW9uIC5hcGx1cyBoNHtjb2xvcjojQzYwfSNwcm9kdWN0RGVzY3JpcHRpb24gLmFwbHVzIHB7bWFyZ2luOjAgMCAxZW0gMH0jcHJvZHVjdERlc2NyaXB0aW9uIC5hcGx1cyAuYnJlYWt7Y2xlYXI6Ym90aDtoZWlnaHQ6MDtmb250LXNpemU6MH0jcHJvZHVjdERlc2NyaXB0aW9uIC5hcGx1cyAuc3BhY2Vye21hcmdpbi1ib3R0b206MTNweH0jcHJvZHVjdERlc2NyaXB0aW9uIC5hcGx1cyBpbWd7Ym9yZGVyOm5vbmV9I3Byb2R1Y3REZXNjcmlwdGlvbiAuYXBsdXMgLmNlbnRlckltYWdlLCNwcm9kdWN0RGVzY3JpcHRpb24gLmFwbHVzIC5sZWZ0SW1hZ2UsI3Byb2R1Y3REZXNjcmlwdGlvbiAuYXBsdXMgLnJpZ2h0SW1hZ2V7bWFyZ2luLWJvdHRvbToxZW07bWFyZ2luLXRvcDowO3RleHQtYWxpZ246Y2VudGVyO3ZlcnRpY2FsLWFsaWduOnRvcH0jcHJvZHVjdERlc2NyaXB0aW9uIC5hcGx1cyAubGVmdEltYWdle21hcmdpbi1yaWdodDoxNXB4O2Zsb2F0OmxlZnQ7Y2xlYXI6bGVmdH0jcHJvZHVjdERlc2NyaXB0aW9uIC5hcGx1cyAucmlnaHRJbWFnZXttYXJnaW4tbGVmdDoxNXB4O2Zsb2F0OnJpZ2h0O2NsZWFyOnJpZ2h0fSNwcm9kdWN0RGVzY3JpcHRpb24gLmFwbHVzIC5pbWFnZUNhcHRpb257Y2xlYXI6Ym90aDtwYWRkaW5nOi41ZW0gLjVlbSAwIC41ZW07Zm9udC1zaXplOi44NDZlbTtkaXNwbGF5OmJsb2NrfSNwcm9kdWN0RGVzY3JpcHRpb24gLmFwbHVzIHRhYmxlLmRhdGF7Ym9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlO21hcmdpbi1ib3R0b206MS4yNWVtfSNwcm9kdWN0RGVzY3JpcHRpb24gLmFwbHVzIHRhYmxlLmRhdGEgdGh7Zm9udC13ZWlnaHQ6NzAwO2JhY2tncm91bmQ6I0Y3RjdGNztib3JkZXItc3R5bGU6c29saWQ7Ym9yZGVyLWNvbG9yOiNDQ0M7Ym9yZGVyLXdpZHRoOjAgMCAxcHggMXB4fSNwcm9kdWN0RGVzY3JpcHRpb24gLmFwbHVzIHRhYmxlLmRhdGEgdGR7Ym9yZGVyLWxlZnQ6MXB4IHNvbGlkICNDQ0M7Ym9yZGVyLWJvdHRvbToxcHggZG90dGVkICNDQ0N9I3Byb2R1Y3REZXNjcmlwdGlvbiAuYXBsdXMgdGFibGUuZGF0YSB0ZCwjcHJvZHVjdERlc2NyaXB0aW9uIC5hcGx1cyB0YWJsZS5kYXRhIHRoe3BhZGRpbmc6M3B4IDEwcHg7dGV4dC1hbGlnbjpsZWZ0fSNwcm9kdWN0RGVzY3JpcHRpb24gLmFwbHVzIHRhYmxlLmRhdGEgdGZvb3R7Zm9udC1zdHlsZTppdGFsaWN9I3Byb2R1Y3REZXNjcmlwdGlvbiAuYXBsdXMgdGFibGUuZGF0YSBjYXB0aW9ue2JhY2tncm91bmQ6I2VlZTtmb250LXNpemU6LjgxMjVlbX0jcHJvZHVjdERlc2NyaXB0aW9uIC5hcGx1cyB0YWJsZS5kYXRhIHRyIHRkOmZpcnN0LWNoaWxkLCNwcm9kdWN0RGVzY3JpcHRpb24gLmFwbHVzIHRhYmxlLmRhdGEgdHIgdGg6Zmlyc3QtY2hpbGR7Ym9yZGVyLWxlZnQtd2lkdGg6MH0jcHJvZHVjdERlc2NyaXB0aW9uIC5hcGx1cyB1bHttYXJnaW46MCAwIDFlbSAwfSNwcm9kdWN0RGVzY3JpcHRpb24gLmFwbHVzIC5jZW50ZXJ7dGV4dC1hbGlnbjpjZW50ZXJ9I3Byb2R1Y3REZXNjcmlwdGlvbiAuYXBsdXMgLnJpZ2h0e3RleHQtYWxpZ246cmlnaHR9I3Byb2R1Y3REZXNjcmlwdGlvbiAuYXBsdXMgLmZvdXJ0aC1jb2wsI3Byb2R1Y3REZXNjcmlwdGlvbiAuYXBsdXMgLmhhbGYtY29sLCNwcm9kdWN0RGVzY3JpcHRpb24gLmFwbHVzIC5vbmUtY29sLCNwcm9kdWN0RGVzY3JpcHRpb24gLmFwbHVzIC5zaXh0aC1jb2wsI3Byb2R1Y3REZXNjcmlwdGlvbiAuYXBsdXMgLnRoaXJkLWNvbCwjcHJvZHVjdERlc2NyaXB0aW9uIC5hcGx1cyAudGhyZWUtZm91cnRoLWNvbCwjcHJvZHVjdERlc2NyaXB0aW9uIC5hcGx1cyAudHdvLXRoaXJkLWNvbHtmbG9hdDpsZWZ0O21hcmdpbi1yaWdodDoxLjY3NiU7b3ZlcmZsb3c6aGlkZGVufSNwcm9kdWN0RGVzY3JpcHRpb24gLmFwbHVzIC5sYXN0e21hcmdpbi1yaWdodDowfSNwcm9kdWN0RGVzY3JpcHRpb24gLmFwbHVzIC5zaXh0aC1jb2x7d2lkdGg6MTUuMDgwJX0jcHJvZHVjdERlc2NyaXB0aW9uIC5hcGx1cyAuZm91cnRoLWNvbHt3aWR0aDoyMy40NjM3JX0jcHJvZHVjdERlc2NyaXB0aW9uIC5hcGx1cyAudGhpcmQtY29se3dpZHRoOjMxLjg0MzYlfSNwcm9kdWN0RGVzY3JpcHRpb24gLmFwbHVzIC5oYWxmLWNvbHt3aWR0aDo0OC42MDM0JX0jcHJvZHVjdERlc2NyaXB0aW9uIC5hcGx1cyAudHdvLXRoaXJkLWNvbHt3aWR0aDo2NS4zNjMxJX0jcHJvZHVjdERlc2NyaXB0aW9uIC5hcGx1cyAudGhyZWUtZm91cnRoLWNvbHt3aWR0aDo3My43NDMlfSNwcm9kdWN0RGVzY3JpcHRpb24gLmFwbHVzIC5vbmUtY29se3dpZHRoOjk4Ljg4MjclO21hcmdpbi1yaWdodDowfSNwcm9kdWN0RGVzY3JpcHRpb24gLmFwbHVzIC5sYXN0e21hcmdpbi1yaWdodDowfSNwcm9kdWN0RGVzY3JpcHRpb24gLmFwbHVze3dpZHRoOjEwMCU7bWluLXdpZHRoOjg5NXB4fSogaHRtbCAjcHJvZHVjdERlc2NyaXB0aW9uIC5hcGx1c3t3aWR0aDpleHByZXNzaW9uKChkb2N1bWVudC5ib2R5LmNsaWVudFdpZHRoIFx1MDAzQyA5MzYpID8gXCI4OTVweFwiIDogXCIxMDAlXCIgKX0jc3RvcmUtZGlzY2xhaW1lcl9mZWF0dXJlX2RpdiB0ZHtwYWRkaW5nOjFweH0jc3RvcmUtZGlzY2xhaW1lcl9mZWF0dXJlX2RpdiB0ZCB0YWJsZSB0ZHtwYWRkaW5nOjVweH0jc3RvcmUtZGlzY2xhaW1lcl9mZWF0dXJlX2RpdiBwe21hcmdpbjoxM3B4IDA7Zm9udC1mYW1pbHk6dmVyZGFuYSxhcmlhbCxoZWx2ZXRpY2Esc2Fucy1zZXJpZjtsaW5lLWhlaWdodDoxNHB4fSNzdG9yZS1kaXNjbGFpbWVyX2ZlYXR1cmVfZGl2IC50aW55e2ZvbnQtc2l6ZToxMHB4fSNzdG9yZS1kaXNjbGFpbWVyX2ZlYXR1cmVfZGl2IGF7Y29sb3I6IzMzM30jc3RvcmUtZGlzY2xhaW1lcl9mZWF0dXJlX2RpdiBhOmhvdmVye2NvbG9yOiNDNjA7dGV4dC1kZWNvcmF0aW9uOm5vbmV9Lm5hdkZvb3RlckxpbmtDb2wgdWwgbGl7bGlzdC1zdHlsZS10eXBlOm5vbmV9ZGl2LmNvbnRlbnQgZm9ybXttYXJnaW46MH0uYnVyaiAjaW1hZ2VCbG9ja3ttYXJnaW4tYm90dG9tOi05cHg7b3ZlcmZsb3c6aGlkZGVufS5idXJqICNpbWFnZUJsb2NrX2ZlYXR1cmVfZGl2e21hcmdpbi10b3A6MjZweH0uYnVyaiAjaW1hZ2VCbG9jayAjdmlkZW8tY2FudmFzLWNhcHRpb24gI2NhbnZhc0NhcHRpb257ZGlzcGxheTpub25lfS5hLWx0LWllOSAuYnVyaiAjaW1hZ2VCbG9jayAjbWFpbi1pbWFnZS1jb250YWluZXIgLmltZ1RhZ1dyYXBwZXIgaW1ne2hlaWdodDphdXRvIWltcG9ydGFudDt3aWR0aDphdXRvIWltcG9ydGFudH0uYS1pZTcgI3dpc2hsaXN0QnV0dG9uU3RhY2sgZGl2LmEtYnV0dG9uLWdyb3VwIC5hLWJ1dHRvbiAuYS1idXR0b24taW5uZXJ7d2lkdGg6MTgwcHh9LmEtaWU3ICN3aXNobGlzdEJ1dHRvblN0YWNrIGRpdi5hLWJ1dHRvbi1ncm91cCAjd2lzaExpc3REcm9wRG93bi5hLWJ1dHRvbiAuYS1idXR0b24taW5uZXJ7d2lkdGg6MjNweH0jZHAgLmEtY29udGFpbmVye21hcmdpbi10b3A6MjBweDtwYWRkaW5nLXRvcDowO21pbi13aWR0aDo5OTZweH0jY3VzdG9tZXItcmV2aWV3c19mZWF0dXJlX2RpdiBoMiwjY3VzdG9tZXJSZXZpZXdzSGVhZGVye2NvbG9yOmluaGVyaXQ7Zm9udC1zaXplOjIxcHghaW1wb3J0YW50fSNkZXRhaWxCdWxsZXRzX2F2ZXJhZ2VDdXN0b21lclJldmlld3N7ZGlzcGxheTppbmxpbmV9I2RldGFpbEJ1bGxldHNfYXZlcmFnZUN1c3RvbWVyUmV2aWV3cyBhe3RleHQtZGVjb3JhdGlvbjpub25lfSNzcG9uc29yZWQtcHJvZHVjdHMtZHBfZmVhdHVyZV9kaXYgaDIsLnBhX2NvbXBvbmVudFRpdGxlVGVzdCBoMntjb2xvcjojMzMzO2ZvbnQtZmFtaWx5OkFyaWFsLHNhbnMtc2VyaWZ9I3JoZk1haW5IZWFkaW5ne2NvbG9yOmluaGVyaXQhaW1wb3J0YW50O2ZvbnQtc2l6ZToyMXB4O2ZvbnQtd2VpZ2h0OjcwMDtsaW5lLWhlaWdodDoxLjIxfS5uYXZGb290ZXJMaW5rQ29sIGxpe2xpc3Qtc3R5bGUtdHlwZTpub25lfSNwcm9kdWN0LWdjIGgyIC50aW55e2ZvbnQtc2l6ZToxMXB4O2ZvbnQtd2VpZ2h0OjQwMH0jcmhmIC50aW55e2ZvbnQtc2l6ZToxMXB4fS5hZHZpY2UtcXVvdGVzLWhpc3RvZ3JhbSB0ZHtib3JkZXI6MXB4IHNvbGlkICNmZmY7bGluZS1oZWlnaHQ6MTRweDtwYWRkaW5nOjB9I2htZEZvcm1EaXYgZm9ybXttYXJnaW4tYm90dG9tOjB9I2RwPnRhYmxle2JhY2tncm91bmQtY29sb3I6I0ZGRn0jYXBfY29udGFpbmVyIC5uYXZfZmx5b3V0X3RhYmxle3dpZHRoOmluaGVyaXR9I2FwX2NvbnRhaW5lciAubmF2X2ZseW91dF90YWJsZSB0ZHtwYWRkaW5nOjB9I2FwX2NvbnRhaW5lciAubm9MaW5rRGVjb3JhdGlvbi5zZWFyY2hUZW1wbGF0ZSBzdHJvbmd7bWFyZ2luLXRvcDozcHg7ZGlzcGxheTpibG9ja30uYS1sdC1pZTggLmEtZml4ZWQtbGVmdC1ncmlkIC5pZTctd2lkdGgtOTZ7d2lkdGg6OTYlIWltcG9ydGFudH0uYS1sdC1pZTggLmEtZml4ZWQtcmlnaHQtZ3JpZCAuaWU3LXdpZHRoLTkzNXt3aWR0aDo5My41JSFpbXBvcnRhbnR9LmEtbHQtaWU4IC5hLWljb24tcHJpbWV7dmVydGljYWwtYWxpZ246dG9wIWltcG9ydGFudDttYXJnaW4tcmlnaHQ6NXB4fS5hLWx0LWllOCAuYS1idXR0b24tc21hbGwgLmEtYnV0dG9uLXRleHR7bGluZS1oZWlnaHQ6MjBweCFpbXBvcnRhbnR9LmEtbHQtaWU4IC5hLWNvbnRhaW5lcnttaW4td2lkdGg6OTQ4cHh9LmEtYnV0dG9uLXRleHQgaW1ne21pbi13aWR0aDo1cHh9I3BwZH50YWJsZXttYXJnaW4tYm90dG9tOjB9I3N3Zk1haW5Cb2R5IGxhYmVse2Rpc3BsYXk6aW5saW5lfSNzd2ZNYWluQm9keSBpbnB1dHt2ZXJ0aWNhbC1hbGlnbjp0ZXh0LXRvcH0jc3dmTWFpbkJvZHksI3N3Zk1haW5Cb2R5IHRhYmxle21hcmdpbi1ib3R0b206YXV0b30jc3dmTWFpbkJvZHkgLmJvZHlUZXh0e2ZvbnQtZmFtaWx5OmluaGVyaXQ7Zm9udC1zaXplOmluaGVyaXR9LmEtbHQtaWU4ICNzd2ZNYWluQm9keSAuYm9keVRleHR7Zm9udC1mYW1pbHk6QXJpYWwsc2Fucy1zZXJpZjtmb250LXNpemU6MTNweH0jc3dmTWFpbkJvZHkgaHJ7Ym9yZGVyLWNvbG9yOiNlN2U3ZTc7bWFyZ2luOjVweCBhdXRvIGF1dG99I3ZhcmlhbnRfYWRzX2Fib3ZlX2ZvbGQgKiwjdmFyaWFudF9hZHNfYmVsb3dfZm9sZCAqey1tb3otYm94LXNpemluZzpjb250ZW50LWJveDstd2Via2l0LWJveC1zaXppbmc6Y29udGVudC1ib3g7Ym94LXNpemluZzpjb250ZW50LWJveH0jcXVpY2tQcm9tb0J1Y2tldENvbnRlbnQgZGl2LmNvbnRlbnR7bWFyZ2luLWxlZnQ6MH0jcXVpY2tQcm9tb0J1Y2tldENvbnRlbnQgZGl2LmNvbnRlbnQgdGFibGUucXBEaXZUb3B7bWFyZ2luLWxlZnQ6MjVweH0jcXVpY2tQcm9tb0J1Y2tldENvbnRlbnQgdWx7Y29sb3I6IzMzM30jcXVpY2tQcm9tb0J1Y2tldENvbnRlbnQgLmJ1bGxldExpc3Qgc3Bhbntmb250LXNpemU6MTdweDtwYWRkaW5nOjE0cHggMCA0cHghaW1wb3J0YW50fSNxdWlja1Byb21vQnVja2V0Q29udGVudCAuZGlzY2xhaW17Zm9udC1zaXplOjEzcHg7bWFyZ2luOjAgMCAxNHB4O2NvbG9yOiM4ODh9I3F1aWNrUHJvbW9CdWNrZXRDb250ZW50IC5xcFVMe3BhZGRpbmctbGVmdDowfSNxdWlja1Byb21vQnVja2V0Q29udGVudHtwYWRkaW5nOjAgMCAyNnB4fS5hLWx0LWllOSAjcXVpY2tQcm9tb0J1Y2tldENvbnRlbnQgdGFibGUsLmEtbHQtaWU5ICNxdWlja1Byb21vQnVja2V0Q29udGVudCB1bHttYXJnaW4tYm90dG9tOjB9LndsLXBvcC1oaWRle2Rpc3BsYXk6bm9uZX0ud2wtcG9wLWJvZHl7aGVpZ2h0OjEwMCU7cG9zaXRpb246cmVsYXRpdmV9LndsLXBvcC1ib2R5IC53bC1wb3AtbGVmdHtiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6c2Nyb2xsO2JhY2tncm91bmQtcmVwZWF0OnJlcGVhdC15O2hlaWdodDoxMDAlO2xlZnQ6MDtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDt3aWR0aDo1cHh9LndsLXBvcC1zcHJpdGVkIC53bC1wb3AtYm9keSAud2wtcG9wLWxlZnR7YmFja2dyb3VuZC1wb3NpdGlvbjowIHRvcH0ud2wtcG9wLXNwcml0ZWQgLndsLXBvcC1ib2R5IC53bC1wb3AtcmlnaHR7YmFja2dyb3VuZC1wb3NpdGlvbjotNXB4IHRvcH0ud2wtcG9wLWJvZHkgLndsLXBvcC1yaWdodHtiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6c2Nyb2xsO2JhY2tncm91bmQtcmVwZWF0OnJlcGVhdC15O2hlaWdodDoxMDAlO3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjA7dG9wOjA7d2lkdGg6NXB4fS53bC1wb3AtZm9vdGVyLC53bC1wb3AtaGVhZGVye2ZvbnQtc2l6ZTowO2xpbmUtaGVpZ2h0OjA7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTtvdmVyZmxvdzpoaWRkZW59LndsLXBvcC1mb290ZXIgKntoZWlnaHQ6OHB4fS53bC1wb3AtaGVhZGVyICp7aGVpZ2h0OjRweH0ud2wtcG9wLWhlYWRlciAud2wtcG9wLWxlZnR7YmFja2dyb3VuZC1hdHRhY2htZW50OnNjcm9sbDtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7bGVmdDowO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3dpZHRoOjhweH0ud2wtcG9wLXNwcml0ZWQgLndsLXBvcC1oZWFkZXIgLndsLXBvcC1sZWZ0e2JhY2tncm91bmQtcG9zaXRpb246MCAtMTBweH0ud2wtcG9wLWhlYWRlciAud2wtcG9wLXJpZ2h0e2JhY2tncm91bmQtYXR0YWNobWVudDpzY3JvbGw7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjA7dG9wOjA7d2lkdGg6OHB4fS53bC1wb3Atc3ByaXRlZCAud2wtcG9wLWhlYWRlciAud2wtcG9wLXJpZ2h0e2JhY2tncm91bmQtcG9zaXRpb246LTEwcHggLTEwcHh9LndsLXBvcC1mb290ZXIgLndsLXBvcC1taWRkbGUsLndsLXBvcC1oZWFkZXIgLndsLXBvcC1taWRkbGV7YmFja2dyb3VuZC1hdHRhY2htZW50OnNjcm9sbDtiYWNrZ3JvdW5kLXJlcGVhdDpyZXBlYXQteDttYXJnaW4tcmlnaHQ6OHB4O21hcmdpbi1sZWZ0OjhweH0ud2wtcG9wLXNwcml0ZWQgLndsLXBvcC1oZWFkZXIgLndsLXBvcC1taWRkbGV7YmFja2dyb3VuZC1wb3NpdGlvbjowIDB9LndsLXBvcC1mb290ZXIgLndsLXBvcC1sZWZ0e2JhY2tncm91bmQtYXR0YWNobWVudDpzY3JvbGw7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2xlZnQ6MDtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDt3aWR0aDo4cHh9LndsLXBvcC1zcHJpdGVkIC53bC1wb3AtZm9vdGVyIC53bC1wb3AtbGVmdHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTIwcHh9LndsLXBvcC1mb290ZXIgLndsLXBvcC1yaWdodHtiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6c2Nyb2xsO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDowO3RvcDowO3dpZHRoOjhweH0ud2wtcG9wLXNwcml0ZWQgLndsLXBvcC1mb290ZXIgLndsLXBvcC1yaWdodHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xMHB4IC0yMHB4fS53bC1wb3Atc3ByaXRlZCAud2wtcG9wLWZvb3RlciAud2wtcG9wLW1pZGRsZXtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTMwcHh9LndsLXBvcC13cmFwcGVye2xlZnQ6NXB4O21heC1oZWlnaHQ6MTkxcHg7b3ZlcmZsb3cteDpoaWRkZW47b3ZlcmZsb3cteTphdXRvO3Bvc2l0aW9uOnJlbGF0aXZlfSogaHRtbCAud2wtcG9wLXdyYXBwZXJ7aGVpZ2h0OmV4cHJlc3Npb24odGhpcy5zY3JvbGxIZWlnaHQ+MTgzID8gXCIxODRweFwiOlwiYXV0b1wiKTttYXgtaGVpZ2h0OjE4NHB4fS53bC1wb3Atd3JhcHBlciBmb3Jte2Rpc3BsYXk6aW5saW5lfS53bC1wb3Atd3JhcHBlciBhLndsLWNyZWF0ZS1saW5rLC53bC1wb3Atd3JhcHBlciBhLndsLWxpc3QtbGlua3tjdXJzb3I6cG9pbnRlcjtkaXNwbGF5OmJsb2NrO291dGxpbmU6MDt0ZXh0LWRlY29yYXRpb246bm9uZX0ud2wtcG9wLXdyYXBwZXIgYS53bC1jcmVhdGUtbGlua3tiYWNrZ3JvdW5kLWNvbG9yOiNlNWU1YzF9LndsLXBvcC13cmFwcGVyIGEud2wtY3JlYXRlLWxpbms6aG92ZXIsLndsLXBvcC13cmFwcGVyIGEud2wtbGlzdC1saW5rOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWltYWdlOm5vbmV9LndsLWNyZWF0ZS1idXR0b24sLndsLWNyZWF0ZS1idXR0b24tbGFzdCwud2wtbGlzdC1idXR0b24sLndsLWxpc3QtYnV0dG9uLWxhc3R7Zm9udC1mYW1pbHk6YXJpYWw7aGVpZ2h0OjIzcHg7b3ZlcmZsb3c6aGlkZGVuO2xpbmUtaGVpZ2h0OjIzcHh9LndsLWNyZWF0ZS1idXR0b257Ym9yZGVyLWNvbG9yOiM5ZDlkNzQ7Ym9yZGVyLXN0eWxlOnNvbGlkO2JvcmRlci13aWR0aDowIDAgMXB4IDB9LndsLWxpc3QtYnV0dG9ue2JvcmRlci1jb2xvcjojOWQ5ZDc0O2JvcmRlci1zdHlsZTpzb2xpZDtib3JkZXItd2lkdGg6MCAwIDFweCAwfS53bC1saXN0LWJ1dHRvbi1sYXN0e2JvcmRlci1jb2xvcjojNzk3ODRhO2JvcmRlci1zdHlsZTpzb2xpZDtib3JkZXItd2lkdGg6MCAwIDFweCAwfS53bC1jcmVhdGUtaW5uZXIsLndsLWxpc3QtaW5uZXJ7Ym9yZGVyLXN0eWxlOnNvbGlkO2JvcmRlci13aWR0aDoxcHggMCAwIDFweH0ud2wtbGlzdC1pbm5lcntib3JkZXItY29sb3I6I2ZmZjt3aGl0ZS1zcGFjZTpub3dyYXB9LndsLWNyZWF0ZS1pbm5lcntib3JkZXItY29sb3I6I2Y0ZjRlMX0ud2wtbGlzdC10eXBlLC53bC1saXN0LXR5cGUtYnJlYWt7Y29sb3I6IzlkOWQ3NDtmbG9hdDpyaWdodDtmb250LXNpemU6OXB4O21hcmdpbi1yaWdodDoycHg7bWF4LWhlaWdodDoyMHB4O292ZXJmbG93OmhpZGRlbjt0ZXh0LWFsaWduOnJpZ2h0fS53bC1saXN0LXR5cGUtYnJlYWt7bGluZS1oZWlnaHQ6OXB4O21hcmdpbi10b3A6MnB4fS53bC1saXN0LW5hbWUtd3JhcHBlcntoZWlnaHQ6MjNweDttYXJnaW4tbGVmdDoycHg7b3ZlcmZsb3c6aGlkZGVuO3doaXRlLXNwYWNlOm5vd3JhcDt3aWR0aDo3NXB4O2Rpc3BsYXk6aW5saW5lfS53bC1saXN0LW5hbWV7Y29sb3I6IzAwNGI5MTtmb250LXNpemU6MTBweDttYXJnaW4tbGVmdDozcHh9LndsLWxpc3QtZGVmYXVsdHtjb2xvcjojMDA0YjkxO2ZvbnQtc2l6ZToxMHB4fS53bC1jcmVhdGUtdGV4dHtjb2xvcjojMDA0YjkxO2ZvbnQtc2l6ZToxMHB4O21hcmdpbi1sZWZ0OjNweH0ucmhmX2xvYWRpbmdfaW5uZXJ7dGV4dC1hbGlnbjpjZW50ZXI7dmVydGljYWwtYWxpZ246bWlkZGxlfS5yaGZXcmFwcGVyICNydmlDb2x1bW57d2lkdGg6MjQwcHg7dmVydGljYWwtYWxpZ246dG9wO2JvcmRlci1yaWdodDoxcHggc29saWQgI0QzRDNEM30ucmhmV3JhcHBlciAuc2hvdmVsZXIgLmJhY2stYnV0dG9uIGEgLmJnLWltYWdlLC5yaGZXcmFwcGVyIC5zaG92ZWxlciAuYmFjay1idXR0b24gYSAuYmctdGV4dCwucmhmV3JhcHBlciAuc2hvdmVsZXIgLm5leHQtYnV0dG9uIGEgLmJnLWltYWdlLC5yaGZXcmFwcGVyIC5zaG92ZWxlciAubmV4dC1idXR0b24gYSAuYmctdGV4dHtkaXNwbGF5OmJsb2NrO2hlaWdodDo1MHB4O3dpZHRoOjI1cHg7bGVmdDowO292ZXJmbG93OmhpZGRlbjtwb3NpdGlvbjphYnNvbHV0ZX0ucmhmV3JhcHBlciAuc2hvdmVsZXIgLmJhY2stYnV0dG9uIGEsLnJoZldyYXBwZXIgLnNob3ZlbGVyIC5uZXh0LWJ1dHRvbiBhe2ZvbnQtc2l6ZTo3MCU7Y3Vyc29yOnBvaW50ZXJ9LnJoZldyYXBwZXIgLnNob3ZlbGVyIGRpdi5uZXh0LWJ1dHRvbntyaWdodDowO2JhY2tncm91bmQ6MCAwfS5yaGZXcmFwcGVyIC5zaG92ZWxlciBkaXYuYmFjay1idXR0b24sLnJoZldyYXBwZXIgLnNob3ZlbGVyIGRpdi5kaXNhYmxlZC1idXR0b24sLnJoZldyYXBwZXIgLnNob3ZlbGVyIGRpdi5uZXh0LWJ1dHRvbntwb3NpdGlvbjphYnNvbHV0ZTtoZWlnaHQ6NTBweDt3aWR0aDoyNXB4O3RvcDoxMDVweH0ucmhmV3JhcHBlciAuc2hvdmVsZXIgdWwgbGl7ZmxvYXQ6bGVmdDttYXJnaW46MDtwYWRkaW5nOjA7d2lkdGg6MTVlbTtoZWlnaHQ6Mjg2cHghaW1wb3J0YW50O292ZXJmbG93OmhpZGRlbn0ucmhmV3JhcHBlciAuc2hvdmVsZXItYnV0dG9uLXdyYXBwZXJ7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJX0ucmhmV3JhcHBlciAuc2hvdmVsZXIgLnNob3ZlbGVyLWNvbnRlbnR7cGFkZGluZy10b3A6MTBweDttYXJnaW46MCAzNXB4IDAgNDVweDtjbGVhcjpib3RofS5yaGZXcmFwcGVyIC5zaG92ZWxlciB1bHtoZWlnaHQ6Mjg2cHghaW1wb3J0YW50O3BhZGRpbmc6MDttYXJnaW46MDtvdmVyZmxvdzpoaWRkZW47b3V0bGluZTowO2ZvbnQtc2l6ZTo4NiV9LnJoZldyYXBwZXIgLnRpdGxle2ZvbnQtZmFtaWx5OmFyaWFsLHZlcmRhbmEsc2Fucy1zZXJpZjtmb250LXNpemU6MTNweDtsaW5lLWhlaWdodDoxOHB4O21hcmdpbi10b3A6MH0ucmhmV3JhcHBlciAuc2hvdmVsZXIgLmJpbmRpbmd7bWFyZ2luLXRvcDoycHh9LnJoZldyYXBwZXIgLmJpbmRpbmd7Y29sb3I6IzY2Njtmb250LXNpemU6MTFweH0ucmhmV3JhcHBlciAuc2hvdmVsZXIgLnByaWNle21hcmdpbi10b3A6MnB4O2NvbG9yOiM5MDA7Zm9udC1zaXplOjEzcHh9LnJoZldyYXBwZXIgLnNob3ZlbGVyICNyaGZVcHNlbGxDb2x1bW5UaXRsZXtjb2xvcjojNjY2O2ZvbnQtc2l6ZToxM3B4O2ZvbnQtZmFtaWx5OkFyaWFsfS5yaGZXcmFwcGVyIC5yaGZIaXN0b3J5V3JhcHBlciAjcmhmSGlzdG9yeUNvbHVtblRpdGxle2NvbG9yOiM2NjY7Zm9udC1zaXplOjEzcHg7Zm9udC1mYW1pbHk6QXJpYWx9LnJoZl9oZWFkZXJ7dGV4dC1hbGlnbjpsZWZ0O3BhZGRpbmc6MTBweCAxMHB4IDAgMTBweH0jcmhmX2NvbnRhaW5lcnttYXJnaW4tdG9wOjEwcHh9LnJoZkhpc3RvcnlXcmFwcGVye3BhZGRpbmc6MCAxMHB4fS5yaGZXcmFwcGVyIC5zaG92ZWxlciAuc2hvdmVsZXItcGFnaW5hdGlvbntjb2xvcjojNjY2O3BhZGRpbmc6MH0ucmhmV3JhcHBlciAuc2hvdmVsZXIgLnN0YXJ0LW92ZXJ7Zm9udC1zaXplOjExcHg7Zm9udC1mYW1pbHk6VmVyZGFuYX0ucmhmV3JhcHBlciAuc2hvdmVsZXIgLmJhY2stYnV0dG9uLC5yaGZXcmFwcGVyIC5zaG92ZWxlciBkaXYuZGlzYWJsZWQtYnV0dG9ue2xlZnQ6MXB4fS5yaGZXcmFwcGVyIC5zaG92ZWxlciAucmF0aW5ne21hcmdpbi10b3A6M3B4fS5hdmFpbEdyZWVue2NvbG9yOiMwOTA7Zm9udC1zaXplOjEzcHg7Zm9udC13ZWlnaHQ6NDAwfS5hdmFpbE9yYW5nZXtjb2xvcjojQzYwO2ZvbnQtc2l6ZToxM3B4O2ZvbnQtd2VpZ2h0OjQwMH0jcHJvZHVjdC1hbGVydF9mZWF0dXJlX2Rpdntmb250LXNpemU6MTFweH0jQVVJX0E5QWRzTWlkZGxlQm94VG9we3BhZGRpbmc6MCAwIDIxcHh9I3JlcG9ydHMtYWRzLWFidXNle21hcmdpbi10b3A6MTVweH11bC56Z19ocnNye21hcmdpbi1sZWZ0OjVweCFpbXBvcnRhbnQ7Y29sb3I6aW5oZXJpdH1saS56Z19ocnNyX2l0ZW17bWFyZ2luLWxlZnQ6MH1zcGFuLnpnX2hyc3JfcmFua3t3aWR0aDphdXRvfSNyaGYgLmNCb3h7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTttYXJnaW4tYm90dG9tOjE1cHh9I3JoZiAuY0JveElubmVye3BhZGRpbmc6OXB4fSNyaGYgLmNCb3hCTCwjcmhmIC5jQm94QlIsI3JoZiAuY0JveFRMLCNyaGYgLmNCb3hUUntwb3NpdGlvbjphYnNvbHV0ZTtkaXNwbGF5OmJsb2NrO3dpZHRoOjEwcHg7aGVpZ2h0OjEwcHg7ei1pbmRleDoxO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdH0jcmhmIC5jQm94VEx7dG9wOi0xcHg7bGVmdDotMXB4fSNyaGYgLmNCb3hUUnt0b3A6LTFweDtyaWdodDotMXB4fSNyaGYgLmNCb3hCTHtib3R0b206LTFweDtsZWZ0Oi0xcHh9I3JoZiAuY0JveEJSe2JvdHRvbTotMXB4O3JpZ2h0Oi0xcHh9I3JoZiAuY0JveFJ7cG9zaXRpb246YWJzb2x1dGU7ZGlzcGxheTpibG9jazt3aWR0aDoxcHg7aGVpZ2h0OjEwMCU7dG9wOi0xcHg7cmlnaHQ6LTFweDtiYWNrZ3JvdW5kLWNvbG9yOiNDOUUxRjR9I3JoZiAuY0JveEJ7cG9zaXRpb246YWJzb2x1dGU7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO2hlaWdodDoxcHg7Ym90dG9tOi0xcHg7YmFja2dyb3VuZC1jb2xvcjojQzlFMUY0fSNyaGYgLmNCb3hUTHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgMH0jcmhmIC5jQm94VFJ7YmFja2dyb3VuZC1wb3NpdGlvbjotMTBweCAwfSNyaGYgLmNCb3hCTHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTEwcHh9I3JoZiAuY0JveEJSe2JhY2tncm91bmQtcG9zaXRpb246LTEwcHggLTEwcHh9I3JoZiAuc2Vjb25kYXJ5e2JvcmRlcjoxcHggc29saWQgI0M5RTFGNDtib3JkZXItcmlnaHQ6bm9uZTtib3JkZXItYm90dG9tOm5vbmV9LnNfc3Rhcl8wXzB7YmFja2dyb3VuZC1wb3NpdGlvbjotOTVweCAwO3dpZHRoOjY1cHg7aGVpZ2h0OjEzcHh9LnNfc3Rhcl8wXzV7YmFja2dyb3VuZC1wb3NpdGlvbjotODJweCAtMjBweDt3aWR0aDo2NXB4O2hlaWdodDoxM3B4fS5zX3N0YXJfMV8we2JhY2tncm91bmQtcG9zaXRpb246LTgycHggMDt3aWR0aDo2NXB4O2hlaWdodDoxM3B4fS5zX3N0YXJfMV81e2JhY2tncm91bmQtcG9zaXRpb246LTY5cHggLTIwcHg7d2lkdGg6NjVweDtoZWlnaHQ6MTNweH0uc19zdGFyXzJfMHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi02OXB4IDA7d2lkdGg6NjVweDtoZWlnaHQ6MTNweH0uc19zdGFyXzJfNXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi01NnB4IC0yMHB4O3dpZHRoOjY1cHg7aGVpZ2h0OjEzcHh9LnNfc3Rhcl8zXzB7YmFja2dyb3VuZC1wb3NpdGlvbjotNTZweCAwO3dpZHRoOjY1cHg7aGVpZ2h0OjEzcHh9LnNfc3Rhcl8zXzV7YmFja2dyb3VuZC1wb3NpdGlvbjotNDNweCAtMjBweDt3aWR0aDo2NXB4O2hlaWdodDoxM3B4fS5zX3N0YXJfNF8we2JhY2tncm91bmQtcG9zaXRpb246LTQzcHggMDt3aWR0aDo2NXB4O2hlaWdodDoxM3B4fS5zX3N0YXJfNF81e2JhY2tncm91bmQtcG9zaXRpb246LTMwcHggLTIwcHg7d2lkdGg6NjVweDtoZWlnaHQ6MTNweH0uc19zdGFyXzVfMHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zMHB4IDA7d2lkdGg6NjVweDtoZWlnaHQ6MTNweH0uc193bExpc3RHcmFkaWVudCBzcGFue3Bvc2l0aW9uOnN0YXRpYyFpbXBvcnRhbnQ7bGVmdDowIWltcG9ydGFudH0uY3NyLXRvb2x0aXAtaW1hZ2UgaW1ne21heC13aWR0aDpub25lfS5kcFNwcml0ZXtkaXNwbGF5Oi1tb3otaW5saW5lLWJveDtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW46MDtwYWRkaW5nOjA7cG9zaXRpb246cmVsYXRpdmU7b3ZlcmZsb3c6aGlkZGVuO3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0uZHBTcHJpdGUgc3Bhbntwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi05OTk5cHh9LmFkZG9uQmFkZ2VTbWFsbHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi04OHB4IC04NDlweCFpbXBvcnRhbnQ7d2lkdGg6NzNweCFpbXBvcnRhbnQ7aGVpZ2h0OjE2cHghaW1wb3J0YW50fS5zX2FkZDJXaXNoTGlzdHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTE5MHB4O3dpZHRoOjE2MHB4O2hlaWdodDoyMnB4fS5zX2FkZDJXaXNoTGlzdExlZnR7YmFja2dyb3VuZC1wb3NpdGlvbjowIC0yMjBweDt3aWR0aDoxMzdweDtoZWlnaHQ6MjJweH0uc19hZGQyV2lzaExpc3RSaWdodHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xMzdweCAtMjIwcHg7d2lkdGg6MjNweDtoZWlnaHQ6MjJweH0uc19hZGQzVG9DYXJ0e2JhY2tncm91bmQtcG9zaXRpb246MCAtNDAwcHg7d2lkdGg6MTM4cHg7aGVpZ2h0OjIycHh9LnNfYWRkQm90aFRvQ2FydHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTQzMHB4O3dpZHRoOjEyNHB4O2hlaWdodDoyMnB4fS5zX2FkZFRvQ2FydHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTQ2MHB4O3dpZHRoOjk4cHg7aGVpZ2h0OjIycHh9I3dpc2hMaXN0RHJvcERvd24gLmEtYnV0dG9uLXRleHR7cGFkZGluZzowfS5pb3VfY3VzdHtjb2xvcjojQzYwO2ZvbnQtd2VpZ2h0OjcwMH0uaW91X2RpdntiYWNrZ3JvdW5kLWNvbG9yOiNGRkQ7cGFkZGluZy1ib3R0b206MnB4O3RleHQtYWxpZ246Y2VudGVyfS5pb3VfZGl2IHRhYmxle3dpZHRoOmF1dG87bWFyZ2luLWJvdHRvbTowO2ZvbnQtc2l6ZToxNHB4fSNvbmVDbGlja0F2YWlsYWJsZSAuYS1idXR0b24uYS1idXR0b24tcHJlb3JkZXIgLmEtYnV0dG9uLWlubmVyIGl7aGVpZ2h0OjI1cHghaW1wb3J0YW50O3dpZHRoOjI1cHghaW1wb3J0YW50O2JhY2tncm91bmQtcG9zaXRpb246LTVweCAtNXB4IWltcG9ydGFudH1mb3JtI2FkZFRvQ2FydHttYXJnaW4tYm90dG9tOjB9I3BwZCAjbGVmdENvbHtwb3NpdGlvbjpzdGlja3k7cG9zaXRpb246LXdlYmtpdC1zdGlja3k7dG9wOjRweDtoZWlnaHQ6MTAwJX1Ac3VwcG9ydHMgKC1tcy1pbWUtYWxpZ246YXV0byl7aHRtbFtkaXI9cnRsXSAjcHBkICNsZWZ0Q29se3Bvc2l0aW9uOnJlbGF0aXZlfX0jbGVmdENvbHtmbG9hdDpsZWZ0fS5haXJ5LWNvbnRhaW5lci1ib3R0b20sLmFpcnktZnVsbHNjcmVlbiwuYWlyeS1zY3JlZW4tc2l6ZS10b2dnbGV7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKSFpbXBvcnRhbnQ7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApIWltcG9ydGFudH0jaW1hZ2VCbG9ja3ttYXJnaW4tYm90dG9tOjB9I3JlbGF0ZWRfYWRze21hcmdpbi1ib3R0b206MTVweCFpbXBvcnRhbnR9I3dheWZpbmRpbmctYnJlYWRjcnVtYnNfZmVhdHVyZV9kaXZ7bWFyZ2luLWxlZnQ6OHB4O21hcmdpbi1ib3R0b206NHB4fS5hLWllNyAjbW9yZUJ1eWluZ0Nob2ljZXNfZmVhdHVyZV9kaXYgc3Bhbi5hLWxpc3QtaXRlbSBkaXYuYS1zZWN0aW9ue2Zsb2F0OmxlZnR9LmEtaWU3ICNtb3JlQnV5aW5nQ2hvaWNlc19mZWF0dXJlX2RpdiBzcGFuLmEtbGlzdC1pdGVtIGRpdi5hLXJvd3tmbG9hdDpsZWZ0fS5hLWllNyAjbW9yZUJ1eWluZ0Nob2ljZXNfZmVhdHVyZV9kaXYgc3Bhbi5hLWxpc3QtaXRlbXtkaXNwbGF5OmlubGluZS1ibG9ja30uYS1pZTcgI0FVSV9TbERpdl8wLC5hLWllOCAjQVVJX1NsRGl2XzB7aGVpZ2h0Ojc4cHghaW1wb3J0YW50fS5hLWllNyAjQVVJX0E5QWRzV2lkZ2V0QWRzV3JhcHBlciB0YWJsZSB1bCBsaSwuYS1pZTggI0FVSV9BOUFkc1dpZGdldEFkc1dyYXBwZXIgdGFibGUgdWwgbGl7ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6MTAwJTttYXJnaW4tcmlnaHQ6MzBweCFpbXBvcnRhbnR9LmEtaWU3ICNBVUlfQTlBZHNXaWRnZXRBZHNXcmFwcGVyIHRhYmxlIHVsLC5hLWllOCAjQVVJX0E5QWRzV2lkZ2V0QWRzV3JhcHBlciB0YWJsZSB1bHttYXJnaW4tYm90dG9tOjZweCFpbXBvcnRhbnR9LmEtaWU4ICNyZXBvcnRzLWFkcy1hYnVzZXttYXJnaW4tdG9wOjI1cHghaW1wb3J0YW50fS5hLWllNyAjcmVwb3J0cy1hZHMtYWJ1c2V7bWFyZ2luLXRvcDo0MHB4IWltcG9ydGFudH0uYS1pZTcgI21vcmVCdXlpbmdDaG9pY2VzX2ZlYXR1cmVfZGl2IC5zZHBUZXh0e2Zsb2F0OmxlZnR9LmEtbHQtaWU4ICNjZW50ZXJDb2x7ZGlzcGxheTppbmxpbmUtYmxvY2t9LmdiLWFjY29yZGlvbi1hY3RpdmV7Zm9udC13ZWlnaHQ6NzAwfS5nYi1hY2NvcmRpb24taW5hY3RpdmV7Zm9udC13ZWlnaHQ6NzAwfS5sZHRpbWVyY29udHtwb3NpdGlvbjpyZWxhdGl2ZTtoZWlnaHQ6OHB4O21hcmdpbi1ib3R0b206MnB4O2ZvbnQtc2l6ZToxcHh9LmxkdGltZXJjb250IC5zdGF0ZWJhcntwb3NpdGlvbjphYnNvbHV0ZTtoZWlnaHQ6NHB4O3dpZHRoOjEwMCU7bWFyZ2luLXRvcDoycHg7YmFja2dyb3VuZC1jb2xvcjojY2NjfS5sZHRpbWVyY29udCAucHJvZ2Jhcntwb3NpdGlvbjphYnNvbHV0ZTtoZWlnaHQ6NHB4O2JhY2tncm91bmQtY29sb3I6IzAwMDttYXJnaW4tdG9wOjJweH0ubGR0aW1lcmNvbnQgLnByb2diYXJhbGVydHtwb3NpdGlvbjphYnNvbHV0ZTtoZWlnaHQ6NHB4O2JhY2tncm91bmQtY29sb3I6I2MwMDttYXJnaW4tdG9wOjJweH0ubGR0aW1lcmNvbnQgLnByb2diYXJtaXNzZWR7cG9zaXRpb246YWJzb2x1dGU7aGVpZ2h0OjRweDtiYWNrZ3JvdW5kLWNvbG9yOiM5OTk7bWFyZ2luLXRvcDoycHh9LmxkdGltZXJjb250IC5wcm9nYmFydGlja3twb3NpdGlvbjphYnNvbHV0ZTtoZWlnaHQ6OHB4O2JvcmRlci1yaWdodDoxcHggc29saWQgI2ZmZn0ubGR0aW1lcmNvbnQgLnByb2diYXJ0aWNrbWlzc2Vke3Bvc2l0aW9uOmFic29sdXRlO2hlaWdodDo4cHg7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjOTk5fS5sZHRpbWVsZWZ0e3Bvc2l0aW9uOnJlbGF0aXZlO2hlaWdodDoxNnB4O21hcmdpbi10b3A6MDtmbG9hdDpsZWZ0O2ZvbnQtc2l6ZToxMnB4O2NvbG9yOiM4ODh9LmxkdGltZXR4dGFsZXJ0e2NvbG9yOiNDMDB9LmdiX2JveF9pbmZve2JvcmRlci1jb2xvcjojYmJkM2RlfS5nYl9ib3hfZXJyb3J7Ym9yZGVyLWNvbG9yOiNjNDAwMDB9LmdiX2JveF93YXJue2JvcmRlci1jb2xvcjojOGI2ZTAwfS5nYl9ib3hfc3VjY2Vzc3tib3JkZXItY29sb3I6Izg5Y2Q4OX1cbiN0d2lzdGVyIGlucHV0e2JvcmRlcjpub25lO21hcmdpbjowfSN0d2lzdGVyIGxhYmVse2Rpc3BsYXk6aW5saW5lfSN0d2lzdGVyIHN0cm9uZy5ob3Zlcntjb2xvcjojZTQ3OTExfSN0d2lzdGVyIC5kcm9wZG93blVuYXZhaWxhYmxle2NvbG9yOiNiYmJ9I3R3aXN0ZXIgLnN3YXRjaGVzIGF7bGVmdDowO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2JhY2tncm91bmQtaW1hZ2U6dXJsKGFib3V0OmJsYW5rKTt6LWluZGV4OjF9I3R3aXN0ZXIgLnN3YXRjaGVzIGxpe2JvcmRlcjoxcHggc29saWQgI2UwZTBlMDtjdXJzb3I6cG9pbnRlcjtkaXNwbGF5OmlubGluZS1ibG9jazsqZGlzcGxheTppbmxpbmU7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDo0cHg7bWFyZ2luLWJvdHRvbTo0cHg7Knpvb206MX0jdHdpc3RlciAuc3dhdGNoZXMgbGkuc3dhdGNoU2VsZWN0e2JvcmRlci1jb2xvcjojZTQ3OTExfSN0d2lzdGVyIC5zd2F0Y2hlcyBsaS5zd2F0Y2hIb3Zlcntib3JkZXItY29sb3I6I2QwZDBkMH0jdHdpc3RlciAuc3dhdGNoZXMgbGkuc3dhdGNoVW5hdmFpbGFibGUsI3R3aXN0ZXIgLnN3YXRjaGVzIGxpLnN3YXRjaFVuYXZhaWxhYmxlSG92ZXJ7Ym9yZGVyLXN0eWxlOmRhc2hlZDtib3JkZXItY29sb3I6c2lsdmVyfSN0d2lzdGVyIC5zd2F0Y2hlcyBsaSBpbWd7aGVpZ2h0OjUwcHg7bWF4LXdpZHRoOm5vbmU7d2lkdGg6MzhweH0jdHdpc3RlciAuc3dhdGNoZXNTcXVhcmUgbGkgaW1ne2hlaWdodDo0N3B4O21heC13aWR0aDpub25lO3dpZHRoOjQ3cHh9I3R3aXN0ZXIgLnN3YXRjaGVzUmVjdGFuZ2xlIGxpIGltZ3toZWlnaHQ6NTBweDttYXgtd2lkdGg6bm9uZTt3aWR0aDozOHB4fSN0d2lzdGVyIC5zd2F0Y2hlcyBsaS5zd2F0Y2hVbmF2YWlsYWJsZSBpbWcsI3R3aXN0ZXIgLnN3YXRjaGVzIGxpLnN3YXRjaFVuYXZhaWxhYmxlSG92ZXIgaW1ne2ZpbHRlcjphbHBoYShvcGFjaXR5PTUwKTstbW96LW9wYWNpdHk6LjU7b3BhY2l0eTouNX0jdHdpc3RlciAuc3dhdGNoZXMgbGkuc3dhdGNoSG92ZXIgLmEtYnV0dG9uLXRleHQsI3R3aXN0ZXIgLnN3YXRjaGVzIGxpLnN3YXRjaFVuYXZhaWxhYmxlSG92ZXIgLmEtYnV0dG9uLXRleHR7YmFja2dyb3VuZC1jb2xvcjojZjNmM2YzfSN0d2lzdGVyIC5zd2F0Y2hlcy5pbWFnZVN3YXRjaGVzIGxpLnN3YXRjaFNlbGVjdCAuYS1idXR0b24taW5uZXJ7YmFja2dyb3VuZC1jb2xvcjojZmZmfSN0d2lzdGVyIC5zd2F0Y2hlcyBsaS5zd2F0Y2hVbmF2YWlsYWJsZUhvdmVyIC5hLWJ1dHRvbi10ZXh0LCN0d2lzdGVyIC5zd2F0Y2hlcy5pbWFnZVN3YXRjaGVzIGxpLnN3YXRjaEhvdmVyIC5hLWJ1dHRvbi10ZXh0e2JhY2tncm91bmQtY29sb3I6I2ZmZn0jdHdpc3RlciAuc3dhdGNoZXM6bm90KC5pbWFnZVN3YXRjaGVzKSAuYS1idXR0b24tdGV4dHtwYWRkaW5nOjVweCAxMHB4IDVweCAxMXB4fSN0d2lzdGVyIC5zd2F0Y2hlcyBsaS5zd2F0Y2hVbmF2YWlsYWJsZSAudGV4dHtjb2xvcjojY2NjfSN0d2lzdGVyIC5zd2F0Y2hlcyBsaS5zd2F0Y2hTZWxlY3QgLmFycm93e2hlaWdodDoxMXB4O2xlZnQ6MDtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6LTJweDt3aWR0aDoxMDAlfSN0d2lzdGVyIC5zd2F0Y2hlcyBsaS5zd2F0Y2hVbmF2YWlsYWJsZUhvdmVyIC54b3ZlcmxheXtoZWlnaHQ6NTBweDtwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDozOHB4fSN0d2lzdGVyIC5zd2F0Y2hlcyAuYS1idXR0b257Ym9yZGVyLXdpZHRoOjB9I3R3aXN0ZXJQb3BvdmVye2xpbmUtaGVpZ2h0Om5vcm1hbDt3aWR0aDoxMDZweH0jdHdpc3RlclBvcG92ZXIgLmFwX2JvZHl7YmFja2dyb3VuZC1jb2xvcjojNWY1YTU5Oy1tb3otYm9yZGVyLXJhZGl1czo0cHg7LXdlYmtpdC1ib3JkZXItcmFkaXVzOjRweDtib3JkZXItcmFkaXVzOjRweDtwYWRkaW5nOjdweDttYXJnaW46MDttaW4taGVpZ2h0OjB9I3R3aXN0ZXJQb3BvdmVyIC50d2lzdGVyUG9wb3ZlckFycm93e2hlaWdodDo3cHh9I3R3aXN0ZXJQb3BvdmVyLmEtdGV4dC1jb2xvci13aGl0ZXtjb2xvcjojZmZmfXVsLmEtbGlzdC1saW5rIGxpLmRyb3Bkb3duVW5hdmFpbGFibGUgYXtjb2xvcjojYmJifSN0d2lzdGVyIC5pbWFnZVN3YXRjaGVzIGxpLnN3YXRjaFNlbGVjdHtib3JkZXItd2lkdGg6MXB4fSN0d2lzdGVyIC5zaW5nbGV0b24gLmEtdGV4dC1iZXNpZGUtYnV0dG9ue3RvcDowIWltcG9ydGFudH0udHdpc3RlclN3YXRjaFdyYXBwZXJ7bWF4LXdpZHRoOjE4MHB4fS50d2lzdGVySW1hZ2Vze2Rpc3BsYXk6dGFibGV9LnR3aXN0ZXJJbWFnZURpdntmbG9hdDpsZWZ0O3BhZGRpbmc6NXB4IDNweCA1cHggMTBweH0udHdpc3RlckFjY2Vzc3twb3NpdGlvbjphYnNvbHV0ZTttYXJnaW46LTEwMDBweDtvdmVyZmxvdzpoaWRkZW47d2lkdGg6MXB4O2hlaWdodDoxcHh9LmFkZFR3aXN0ZXJQYWRkaW5ne3RleHQtYWxpZ246Y2VudGVyO3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtkaXNwbGF5OnRhYmxlLWNlbGw7cGFkZGluZzo1cHggMTBweCA1cHggM3B4fS5hZGRUd2lzdGVyTWFyZ2lue21hcmdpbi10b3A6MTBweH0ub2xwTWVzc2FnZVdyYXBwZXIsLnByaWNlTWVzc2FnZVdyYXBwZXJ7ZGlzcGxheTppbmxpbmUtYmxvY2t9LnR3aXN0ZXJJbWFnZXMgLm9scFdyYXBwZXIsLnR3aXN0ZXJJbWFnZXMgLnByaWNlV3JhcHBlcnt3aWR0aDo0MHB4O3dvcmQtd3JhcDpub3JtYWw7ZGlzcGxheTppbmxpbmUtYmxvY2t9LnRpbnlQcmltZUJhZGdle2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtiYWNrZ3JvdW5kLXNpemU6MzdweCAxMXB4O2Rpc3BsYXk6aW5saW5lLWJsb2NrO3dpZHRoOjM3cHg7aGVpZ2h0OjFlbTt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7YmFja2dyb3VuZC1pbWFnZTp1cmwoZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFDVUFBQUFMQ0FNQUFBRFA1clIzQUFBQUEzTkNTVlFJQ0FqYjRVL2dBQUFBWmxCTVZFWC8vLy8vbVFCSG9zWC9tUUJIb3NYL21RRFRteTlIb3NYL21RQkhvc1gvbVFCSG9zWC9tUUJIb3NWSG9zWC9tUUJIb3NWSG9zWC9tUUJIb3NYL21RQlFvcnRIb3NYL21RQkhvc1gvbVFDZG5tbEhvc1gvbVFDcm5WcEhvc1gvbVFEbW1odEhvc1cwY3Z1REFBQUFJblJTVGxNQUVSRWlJak16TTBSRVZWVm1abmVJaUptcXFydTd1OHpNM2QzZDd1N3UvLy8vRUJJRDNnQUFBQWx3U0ZsekFBQUxFZ0FBQ3hJQjB0MSsvQUFBQUJ4MFJWaDBVMjltZEhkaGNtVUFRV1J2WW1VZ1JtbHlaWGR2Y210eklFTlROdWk4c293QUFBREZTVVJCVkJpVmhaRGhqZ0loRElRcm5pTEhnbVZSUkVIcXZQOUxYc25tL20zaXBDUk0rTnJTRXYzcnROSjNuZnJ0TzNUczhtTG1zRG11WnBkNnlBZFRhUnFEdGd0ZFJkNG9OcVBFSE5pemR5bWtZcms0Q3JWcGgrTlZqOGp6RGs4WlBPdFZ1SXBOS1NJRHRIUlphSlYrQmpoaGVEUjJhRDlvWnNBV0JQVmowRzhYV1VRdWZtWU94d2dVd0JvV2hjYUlLQnl0ZG51S2NsU1F2RFBVWVBTcVJhenlIaWxnMURGL2ZyakpxbVBCenVreUUrVTBJeVlUc3RPbFpFOGJkdEQzL1ExdCtnT1RVQkk4SjNzdmlBQUFBQUJKUlU1RXJrSmdnZz09KTtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgMH0udHdpc3RlclByaW1lQmFkZ2Vze2JhY2tncm91bmQtaW1hZ2U6dXJsKGRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBUmdBQUFBcENBTUFBQURaQWNZQ0FBQUFBM05DU1ZRSUNBamI0VS9nQUFBQmdGQk1WRVgvLy85Rm9zWTdhWnY4bWhoRm9zWkZvc1pGb3NaRm9zWkZvc1pGb3NaRm9zWkZvc1pGb3NaRm9zWkZvc2JmZnlSM2QzYzdhWnM3YVp0Rm9zWkZvc1pGb3NZNlpabjhtaGovLy8vOG1oaVh5RHY4bWhnNlpKYjhtaGo4bWhnd1hKSDhtaGo4bWhoM2QzZDNkM2Y4bWhoM2QzZjhtaGo4bWhqZmZ5VDhtaGo4bWhqZmZ5UWdVb3Y4bWhoM2QzZDNkM2NwV0k3OG1oaDNkM2QzZDNmZmZ5VGZmeVIzZDNmZmZ5UWZUWVYzZDNlWHlEdmZmeVRmZnlUZmZ5UjNkM2ZmZnlTWHlEdDNkM2VYeUR1WHlEdi8vUG9yVzVMZmZ5UjNkM2QzZDNmZmZ5UkFiSnNqV1pPWHlEdVh5RHVYeUR1WHlEdmordjh6WnBrWVNZb0pRb0U3YVp2ajJPT1h5RHVYeUR1WHlEdVh5RHZmZnlUeC8vKyt5OXdRVFkwQU5uN2ZmeVIzZDNmcDhQVklvc05OZTZVWVNJU1h5RHZmZnlTWHlEdi85dW51MytlbW9iUmhnNm9yWDVRNVdKQXhWb3VvdXRBcFdJN3Y4L2YzOE8vYjd2WFc1di9ZNCt2cjE4L04ydXJsenMyMnhOK2h4dWF4djlTdXJNWHZteVNTcUxpaGs2bHNQQXZCQUFBQWdIUlNUbE1BLy8vL0VlNVZNeUozaUpsRXU5My8vN3Z1WnFyTS94SC8zZi91L3lMTS83dVptWGVJSWpObVJGV3FadjlFWnJ2L2Q5M3VJak9JN3Y4Uk01bTd6TXpkRVRPNzd2Ly9FVVJWaVAvL0lwbk0zZi8vLy8rcS8xVm1kNGlxLy8vLy8zZXEvLy8vLzBSVnF2Ly8vLy8vLy85RXUvLy8vLy8vLy8vLy8vLy8vLy8vLzI0cHFwOEFBQUFKY0VoWmN3QUFDeElBQUFzU0FkTGRmdndBQUFBY2RFVllkRk52Wm5SM1lYSmxBRUZrYjJKbElFWnBjbVYzYjNKcmN5QkRVemJvdkxLTUFBQUo0MGxFUVZSb2dlMVpCMXZiU0JQZVpkVjdJc21XZThIR1lCc3d2ZmVTMEZzZ0pCQVNTaXFCVkFJaE9mUFhiMVlDQW9TZXk5MTk5L2w5NUpWMnRTdlB2RHN6SzgwaVZFSUpKWlR3TjhLZitxY2wrSGNpRW1oUkZJWHhLb0p3YWRkbzlTMy9wSzdpUnQzL0RYTVZDZnl4aGdFOHJRaXNmV2xYMGl5S0luL3VUZlA4Wmc5WjRqSEtNYWVhbWZQNm9tdk1WYm9lbFJ0R1F3Mjliak1BTllmdFJ2cW52clgzTGhIc0VrUkpFTnVtaGlXR0J4a2tIdkVNRHdXb3FZam1LY245QWZJSFB1YndEQ1JzWHZ3ZldVSnFaWUFraTRJb0huTXIyQlpDRnZ2VDQ2NmVxOXFhTnVNK2FxNm4xL2NiZnJTZlI4eTkrb3NGdXdBUitDVUkyY1FLc3JDSnNTYlpXTkN3aHJFTlVzbXNpdVdUM2VPRWRHT0oxekJuU2dxSE9Ga0VPeEU1bVZQZ1NwUVlVVUdtS1ppY0tmT21wWndZbUNJazZtcXF5b3pvVXV2ZVZWaVdRd3hXZjVMcnlybnFhMmlqL1pxN2FRbW1ZOVM2RE1EWlNFTzFPMTFiamxERC9iNXV3NENMK3ZzM3BDVWVpcUJxUWhJc3kzQlk0ekdyS2xqbFFTVE1jdlN3cENOaS9DbS9xMTZkaGhta1lSNVU0MlNzWWtuQm1LV0hwbUJMeEJ5UExkbHRZSTlHMHRBQy94RWZaZ0FTVmtCREN2QU8zc0syUUMxTk9TWFV0ZWFxbkJKUmMraEF6K3JUNlhyUXY2MmhIQ1dOUHJDazJtUjVON3JYZ0pMTlFGWWJQZDBJWU45UjhJNHNSNmVRVlVBdlpHSVRUaHdXZVN4YldKWkV6NzJyQWlTQktnaEpDVmpqTEd4eFdEVUZiSE9hS21OT3hDS0hKUm5EL0NNb05aWlJRUU5QWFgrQ3BLZ0hSdjIweHJBYThnd0dtNllLcFVEYmJFYVZianBYeWFUYnZjWW9kMDBDYkFlWXVtK0FLUm5wZERKWm4wd2JiYzNQd0paY1Rsd2FiNEtxRUFtUWdCOFlFRTBCMlN5RFZNekF5Y0tDaElFQTJ6NmM5dW9BSVZWUkV2ZlVVbWtIQkFKTGtnS3F3Z0FaOHl5MUdiZVVxWE5BKytFL2tPb0UvQWV0Q0RZRURkZGlnRHhMRXpVV0drMWdrR1Z2T2xkQVRBMk5MTVpSWEFVV0RvbXBNWjRsYTVPb3U3eWJPbEI1RW9MT2pZbEIvaXdKVlNBV1U3ZWw4OFpBRElDVEtpTlpSWUtseWtmcmdSL2NpS3BuZzdjSUVCWnNOeWFxS3BpS2dDMkc4aUZKMUtYQWNuZ1JtMUQxQmtiaUJMZ0JmMklVbVVZVThDQ0ZnNmZROVlnR0YwNWpKVW43NFUzWG5DdFFOUTErVkdQUVVKUHNSbW02UHJVWjFKWEs2MUZmZlJLVjEwTVlldFlNZC9wdTdFcXVJTlZJa01ScmRLd0lBSVVDZHVkV2NCY1ZnZU1FUlJSNFV4QkVCUzRFazVhbWlSU1RVY1RqSlRZVEloazRnUTFZdEkwQlU3QmRIbmhLSGpnVXEybjRod1RYbXlzYWZHdU9sdXMwaEZqWHRXcmM0TnR0ZERjYjkvcG9VMSs5ZTZmN2hzSDNadkRUYWVjdmUxZTVBQkhLQzJLTzNtRE00OWNUK3VJajBJcHc2cW5YbXF2YW1pczZ0RFVjcjl1M1dLNy9kNUcrUXRseTQ0ZjczUFlGcjRRU1NpaWhoQkpLK012eFRuNS81elo0Ly83ZFB5MzY3NFUwRXl1N0JYejV1Lzl4WXQ2SHFaN2gxckhSc3JMUldINm1iSFFiaXBNWUxlVEx3cjR6eEF6OTEzbEJEMXhlaGpaSHgzeSsyT2htT0F6RkZqRGpBeTU4YmhGYjMyek5oNzA2d0dPdDlaTE1ZOVV2aW5TelJQZnZna3ZNeHFienBmVnQ2OHFhWTZ5c1lNY1lHNDF0NURlR1d1ZG1aOStHWno5L2Viczd1aks3a1MvTWJXek10YmJDZ01LZGk1OFlqLzZhUklsZkhQOFhnUklUbnR0M0JvMlZ0YTg3enRiNjE1MUJZNjcxU1hHbnVMRlozUDIrWFhpeXU3UHZIR3d2TDIrWEZaZS9GK2NQOGo1ZjY4V09sQ1VOdHFhcFhxTGc3SGZ0K01TamlZbEhwNW9XcHhaTzFST2tRVlZWeWYxb1pxU3ozOS8rVENKN3JiMFFnU2JMdmNTTVlKLzl1cTdzNk9nWWFUcmRscXM4WGFmRTVHZVd2azBmUEZuNnVQcHhmZW5WaDFlalR6YjJuVS9PbTgvT2puTXdCOFI4ZFpaWFgwL3ZGWjFWWjNCMU1Ed1d2bnVoUUhYa2p6VldaYkZGS3p3K0tSTG8raWdZSEFpK1BEVmdhcUQzWkRVRDQ3SE5lcWtwOFhRR2wrWnhDSEVUTWxkQytyRUJ3V25jbVp1UGRVREw4TW1tSnIzamRCOGd4amUzNXN3dmZkbDB0c3NHOTUxdC9PcWI0empmVno2L1h0MGJjNG9yVDNiMzFsNnRUOC92dnY3MmNXdjZZTTNabkEzZmJidEFuZ3BDQnJBTUdzbVNaWnFpek1CSmxVeFZCdkd3aWlhRHozdDd4OEZvMmhjbUJ4YlJ3bFIvZTdCL292LzU4ZmhJeUIwdllWR1NSVVdTQkVtVVZFVlNlY2JDTE84UGtVU0ZIMlhpOFVRaWtrcWw0bFYxOFV3a0hvM0dxMUVpaStxeS91cDRuZmNnRzNPTWhrVUx6TWFTR2RrU2JabXpWVWF3V0UxQUxYcGpvNjQzNXJxNlJoNDNkblRtdWpvYk8vWE9GeU9kVDBkR0hnOVhQbjdoRVJNYm0zWjJkNXhsNTJCL3NPaTgyUi9jTEJhblgyOHU3VTN2NVNreG4rZlhuS0l6dnp6L2JYREw4WWdwbk1PSlAxRk50eW9DS3VaNERTczA5ZThtb0cyYWt0YzR6S240WGhBdzhSRE1abkhnNGRRQWtOTCtLRGcxRUh6b1BxQXVRL2RVQXBZN25uUEh5eUxXTkhxWXRtcGlLVVVTaU80dnhBTWtrU0dCQUFsRlNUWkRvbGtTaUpDc1B4U05rS2dYdW1sMmtNR3M2RDVGVlRCN3VESEFXaktXS3ZWT1ZLbjNqT2hkUFhwWGs2NzM2QzA1TUtGSytIWG9YV0JQbFI0eGhiV2xOeXRqbjc0Vm5jSDVyWDFhckt5c1R6dXZSL2UvYjYwV04vSmZ2NjA3ZThVUEg5NXN6bzkrT2xoYlhSODdMOFpFUUV4L0hRazFzVzdlSHBUaU9TeDZtV2NGU3hySXBpNEdKMSsrYkg4WlhCZ2ZHSmdNOWo4UFRvSW5vZjdnT09VMVNrSVZWVWZqNlc2QklHRmVwYnNFWUMwaURMZVZLSFdqQ0xDVEloVnhFa21RaWpwU0ZTZCs0QU11cWtoZEpCU0t1TkpBZjVrYURCWjVDWE1TbFVJU3NDcGpGVXdKdE85bzBYTkFUMDdQUGRWelRmcGo2a25BVitWVHZhTlI3emx5SlY4c1AxUVkyNTVkRHhjSytmV3RRamdjYm4yN1daaU5EY1Zpc0U3SGhncnJvM1ByNnh0alE3UUZtc3JDaForemt0VUJFZytGS21DQ2FPYVpwdjdoNTJhZWFkNGYyNXpNVEZFS2VvUDlDR3hsWVJIS3lmYmdJMXAzbVkyU2FNQWRiN3FaYTRRMGpjR1dlNmdTbGtRTzdER1VUWUdGcEVJQlA0bWpVQlJGUTM0U3lNUkpWWURVQlVqR2Y3UjVhOU45QVpIdXNDQ05aVFFXWktGcGRZM2xPQVU4Q2F5azhnWHcwS00zZHVuREkvcUxFWDJrc1FNc3BVbnY2V2x4dy9JRGVIVUx4K2pyeWt3NFg0aFJqcUJXUnM5bHNSa2Z2UTdQK1BLRmNENFBGUGxpWWRvWnJPekJPYjRVSmFRS2dTY2g1S2IrNFNlNFd0SHREeG16RnJVUWhCNkM1L1JPQlYyRGFaOEl0aThlZXBLN05aWUJEVGpYRldRRWRtWml6anVBWVZ0QjFTRkNVaENHNGlSVlJ6SmdJUlhVcFFnSlZLRVF5VVpKVlNLVU92SWtocUU1Y3drV0FJdDN0eDZBTEpna01PWkt2V3Q0bUlaYnZVWHZhZ1M3NmRHSHUzUTkxOUlDSThHdHZPWHBRZUhzUysyMUVCNDdHK2twNGxRc0x6dk5lTC9EdzJzYlgyaW5wMTczR3NweHI5SjdQRDZST09laHA4bVBuRzJKRXI5MzUyUWo1KzI2OFp5QUJFNkFnK0Y0QkxhQ1RGRkJ1YzZjMjZreTE1aHJnb091MUpXNXBtRTROVDV0T2VRRnZic3pkUGMyS0p6M1RlRC91ZW0zSTNPdDFmdWFlS3IzTkYzZDYvOFF3OE5YOXltaGhCTCtWdndKdVpsaFc1Ymk2ajBBQUFBQVNVVk9SSzVDWUlJPSk7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtc2l6ZToyODBweCA0MXB4O2Rpc3BsYXk6aW5saW5lLWJsb2NrfS50d2lzdGVyUHJlbWl1bXt3aWR0aDo1M3B4O2hlaWdodDoxMHB4O3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lO2JhY2tncm91bmQtcG9zaXRpb246LTQ5cHggLTVweH0udHdpc3RlclByaW1lSlB7d2lkdGg6NDFweDtoZWlnaHQ6MTBweDt2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZTtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xMDZweCAtNXB4fS50d2lzdGVySW5ncmVzc1dyYXBwZXJ7ZGlzcGxheTp0YWJsZTt0ZXh0LWFsaWduOmNlbnRyZX0uaW5ncmVzc0xpbmtXcmFwcGVye3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtkaXNwbGF5OnRhYmxlLWNlbGx9LnR3aXN0ZXJJbW1lcnNpdmVCYW5uZXJIaWRle2Rpc3BsYXk6bm9uZX0jdHdpc3RlckluZ3Jlc3MgLmEtYnV0dG9uLXRleHQ6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojRjNGM0YzfS50d2lzdGVyTW9kYWxfc3R5bGVyVG9we2hlaWdodDozNXB4O3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6MTttYXJnaW4tdG9wOjEwcHg7bWFyZ2luLWxlZnQ6LTE1cHg7ZGlzcGxheTpub25lO2JhY2tncm91bmQ6LW1vei1saW5lYXItZ3JhZGllbnQodG9wLHJnYmEoMjU1LDI1NSwyNTUsMSkgMCxyZ2JhKDI1NSwyNTUsMjU1LDApIDEwMCUpO2JhY2tncm91bmQ6LXdlYmtpdC1ncmFkaWVudChsaW5lYXIsbGVmdCB0b3AsbGVmdCBib3R0b20sY29sb3Itc3RvcCgwLHJnYmEoMjU1LDI1NSwyNTUsMSkpLGNvbG9yLXN0b3AoMTAwJSxyZ2JhKDI1NSwyNTUsMjU1LDApKSk7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AscmdiYSgyNTUsMjU1LDI1NSwxKSAwLHJnYmEoMjU1LDI1NSwyNTUsMCkgMTAwJSk7YmFja2dyb3VuZDotby1saW5lYXItZ3JhZGllbnQodG9wLHJnYmEoMjU1LDI1NSwyNTUsMSkgMCxyZ2JhKDI1NSwyNTUsMjU1LDApIDEwMCUpO2JhY2tncm91bmQ6LW1zLWxpbmVhci1ncmFkaWVudCh0b3AscmdiYSgyNTUsMjU1LDI1NSwxKSAwLHJnYmEoMjU1LDI1NSwyNTUsMCkgMTAwJSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLHJnYmEoMjU1LDI1NSwyNTUsMSkgMCxyZ2JhKDI1NSwyNTUsMjU1LDApIDEwMCUpO2ZpbHRlcjpwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoc3RhcnRDb2xvcnN0cj0nI2ZmZmZmZicsIGVuZENvbG9yc3RyPScjMDBmZmZmZmYnLCBHcmFkaWVudFR5cGU9MCl9LnR3aXN0ZXJNb2RhbF9zdHlsZXJCb3R0b217aGVpZ2h0OjM1cHg7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MTAwJTttYXJnaW4tdG9wOi0zNXB4O21hcmdpbi1sZWZ0Oi0xNXB4O2JhY2tncm91bmQ6LW1vei1saW5lYXItZ3JhZGllbnQodG9wLHJnYmEoMjU1LDI1NSwyNTUsMCkgMCxyZ2JhKDI1NSwyNTUsMjU1LDEpIDEwMCUpO2JhY2tncm91bmQ6LXdlYmtpdC1ncmFkaWVudChsaW5lYXIsbGVmdCB0b3AsbGVmdCBib3R0b20sY29sb3Itc3RvcCgwLHJnYmEoMjU1LDI1NSwyNTUsMCkpLGNvbG9yLXN0b3AoMTAwJSxyZ2JhKDI1NSwyNTUsMjU1LDEpKSk7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AscmdiYSgyNTUsMjU1LDI1NSwwKSAwLHJnYmEoMjU1LDI1NSwyNTUsMSkgMTAwJSk7YmFja2dyb3VuZDotby1saW5lYXItZ3JhZGllbnQodG9wLHJnYmEoMjU1LDI1NSwyNTUsMCkgMCxyZ2JhKDI1NSwyNTUsMjU1LDEpIDEwMCUpO2JhY2tncm91bmQ6LW1zLWxpbmVhci1ncmFkaWVudCh0b3AscmdiYSgyNTUsMjU1LDI1NSwwKSAwLHJnYmEoMjU1LDI1NSwyNTUsMSkgMTAwJSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLHJnYmEoMjU1LDI1NSwyNTUsMCkgMCxyZ2JhKDI1NSwyNTUsMjU1LDEpIDEwMCUpO2ZpbHRlcjpwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoc3RhcnRDb2xvcnN0cj0nIzAwZmZmZmZmJywgZW5kQ29sb3JzdHI9JyNmZmZmZmYnLCBHcmFkaWVudFR5cGU9MCl9LnR3aXN0ZXJNb2RhbHtwb3NpdGlvbjphYnNvbHV0ZTtib3gtc2hhZG93OiNDQkNCQ0IgMCAwIDIwcHg7cGFkZGluZzoxNXB4IDE1cHggMCAxNXB4O2JvcmRlcjoxcHggc29saWQgI0Q3RDdENztkaXNwbGF5Om5vbmU7YmFja2dyb3VuZC1jb2xvcjojZmZmO3RyYW5zaXRpb24tcHJvcGVydHk6d2lkdGgsaGVpZ2h0LG1pbi13aWR0aCxtaW4taGVpZ2h0O3RyYW5zaXRpb24tZHVyYXRpb246LjhzfS50d2lzdGVyTW9kYWxfaW5uZXJEaXZ7b3ZlcmZsb3cteTphdXRvO3BhZGRpbmctbGVmdDoxMHB4O3BhZGRpbmctcmlnaHQ6MTBweDttYXJnaW4tdG9wOjEwcHh9LnR3aXN0ZXJNb2RhbF9zdGlja3lIZWFkZXJ7ZGlzcGxheTppbmxpbmV9LnR3aXN0ZXJNb2RhbCAudHdpc3RlclN3YXRjaFdyYXBwZXJ7dHJhbnNpdGlvbi1wcm9wZXJ0eTp3aWR0aCxoZWlnaHQsbWluLXdpZHRoLG1pbi1oZWlnaHQ7dHJhbnNpdGlvbi1kdXJhdGlvbjoxc30udHdpc3Rlck1vZGFsIC5zd2F0Y2hlcyBsaXtib3JkZXI6MXB4IHNvbGlkICNFMEUwRTA7Y3Vyc29yOnBvaW50ZXI7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLWJvdHRvbTo0cHg7bWFyZ2luLXRvcDo0cHg7cG9zaXRpb246cmVsYXRpdmU7cGFkZGluZzowIWltcG9ydGFudDtib3JkZXItcmFkaXVzOjJweH0udHdpc3Rlck1vZGFsIC5zd2F0Y2hlcyAuYS1idXR0b257Ym9yZGVyLXdpZHRoOjB9LnR3aXN0ZXJNb2RhbCAuc3dhdGNoZXMgLmEtYnV0dG9uLXRleHR7cGFkZGluZzo1cHggMTBweCA1cHggMTFweH0udHdpc3Rlck1vZGFsIC5pbWFnZVN3YXRjaGVzIC5hLWJ1dHRvbi10ZXh0e3BhZGRpbmc6MH0udHdpc3Rlck1vZGFsIC5pbWFnZVN3YXRjaGVzIGxpLnN3YXRjaFNlbGVjdHtib3JkZXItd2lkdGg6MXB4fS50d2lzdGVyTW9kYWwgLnN3YXRjaGVzIGxpLnN3YXRjaFNlbGVjdHtib3JkZXItY29sb3I6I2U0NzkxMX0udHdpc3Rlck1vZGFsIC5zd2F0Y2hlcyBsaS5zd2F0Y2hTZWxlY3QgLmEtYnV0dG9uLWlubmVye2JhY2tncm91bmQtY29sb3I6I2ZlZmFmNn0udHdpc3Rlck1vZGFsIC5zd2F0Y2hlcy5pbWFnZVN3YXRjaGVzIGxpLnN3YXRjaFNlbGVjdCAuYS1idXR0b24taW5uZXJ7YmFja2dyb3VuZC1jb2xvcjojZmZmfS50d2lzdGVyTW9kYWwgLnN3YXRjaGVzIGxpLnN3YXRjaEhvdmVyIC5hLWJ1dHRvbi10ZXh0e2JhY2tncm91bmQtY29sb3I6I2YzZjNmM30udHdpc3Rlck1vZGFsIC5zd2F0Y2hlcyBsaS5zd2F0Y2hVbmF2YWlsYWJsZUhvdmVyIC5hLWJ1dHRvbi10ZXh0LC50d2lzdGVyTW9kYWwgLnN3YXRjaGVzLmltYWdlU3dhdGNoZXMgbGkuc3dhdGNoSG92ZXIgLmEtYnV0dG9uLXRleHR7YmFja2dyb3VuZC1jb2xvcjojZmZmfS50d2lzdGVyTW9kYWwgLnN3YXRjaGVzIGxpLnN3YXRjaEhvdmVye2JvcmRlci1jb2xvcjojZDBkMGQwfS50d2lzdGVyTW9kYWwgLnN3YXRjaGVzIGxpLnN3YXRjaFVuYXZhaWxhYmxlLC50d2lzdGVyTW9kYWwgLnN3YXRjaGVzIGxpLnN3YXRjaFVuYXZhaWxhYmxlSG92ZXJ7Ym9yZGVyLXN0eWxlOmRhc2hlZDtib3JkZXItY29sb3I6c2lsdmVyfS50d2lzdGVyTW9kYWwgLnN3YXRjaGVzIGxpIGltZ3toZWlnaHQ6NTBweDttYXgtd2lkdGg6bm9uZTt3aWR0aDozOHB4fS50d2lzdGVyTW9kYWwgLnN3YXRjaGVzU3F1YXJlIGxpIGltZ3toZWlnaHQ6NDdweDttYXgtd2lkdGg6bm9uZTt3aWR0aDo0N3B4fS50d2lzdGVyTW9kYWwgLnN3YXRjaGVzUmVjdGFuZ2xlIGxpIGltZ3toZWlnaHQ6NTBweDttYXgtd2lkdGg6bm9uZTt3aWR0aDozOHB4fS50d2lzdGVyTW9kYWwgLnN3YXRjaGVzIGxpLnN3YXRjaFVuYXZhaWxhYmxlIGltZywudHdpc3Rlck1vZGFsIC5zd2F0Y2hlcyBsaS5zd2F0Y2hVbmF2YWlsYWJsZUhvdmVyIGltZ3tvcGFjaXR5Oi41fS5zd2F0Y2hTZWxlY3QgLnR3aXN0ZXJTd2F0Y2hXcmFwcGVyIC50d2lzdGVyX3N3YXRjaF9wcmljZXtjb2xvcjojYjEyNzA0IWltcG9ydGFudH1ALWtleWZyYW1lcyB0d2lzdGVyTG9hZGluZ1Nsb3RaZXJvezAle2JhY2tncm91bmQtcG9zaXRpb246LTQwcHggMH0xMDAle2JhY2tncm91bmQtcG9zaXRpb246NDBweCAwfX1ALW1vei1rZXlmcmFtZXMgdHdpc3RlckxvYWRpbmdTbG90WmVyb3swJXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi00MHB4IDB9MTAwJXtiYWNrZ3JvdW5kLXBvc2l0aW9uOjQwcHggMH19QC13ZWJraXQta2V5ZnJhbWVzIHR3aXN0ZXJMb2FkaW5nU2xvdFplcm97MCV7YmFja2dyb3VuZC1wb3NpdGlvbjotNDBweCAwfTEwMCV7YmFja2dyb3VuZC1wb3NpdGlvbjo0MHB4IDB9fUAta2V5ZnJhbWVzIHR3aXN0ZXJMb2FkaW5nU2xvdE9uZXswJXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zMHB4IDB9MTAwJXtiYWNrZ3JvdW5kLXBvc2l0aW9uOjMwcHggMH19QC1tb3ota2V5ZnJhbWVzIHR3aXN0ZXJMb2FkaW5nU2xvdE9uZXswJXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zMHB4IDB9MTAwJXtiYWNrZ3JvdW5kLXBvc2l0aW9uOjMwcHggMH19QC13ZWJraXQta2V5ZnJhbWVzIHR3aXN0ZXJMb2FkaW5nU2xvdE9uZXswJXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zMHB4IDB9MTAwJXtiYWNrZ3JvdW5kLXBvc2l0aW9uOjMwcHggMH19QC1tcy1rZXlmcmFtZXMgdHdpc3RlckxvYWRpbmdTbG90WmVyb3swJXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi00MHB4IDB9MTAwJXtiYWNrZ3JvdW5kLXBvc2l0aW9uOjQwcHggMH19QC1tcy1rZXlmcmFtZXMgdHdpc3RlckxvYWRpbmdTbG90T25lezAle2JhY2tncm91bmQtcG9zaXRpb246LTMwcHggMH0xMDAle2JhY2tncm91bmQtcG9zaXRpb246MzBweCAwfX1ALW8ta2V5ZnJhbWVzIHR3aXN0ZXJMb2FkaW5nU2xvdFplcm97MCV7YmFja2dyb3VuZC1wb3NpdGlvbjotNDBweCAwfTEwMCV7YmFja2dyb3VuZC1wb3NpdGlvbjo0MHB4IDB9fUAtby1rZXlmcmFtZXMgdHdpc3RlckxvYWRpbmdTbG90T25lezAle2JhY2tncm91bmQtcG9zaXRpb246LTMwcHggMH0xMDAle2JhY2tncm91bmQtcG9zaXRpb246MzBweCAwfX0ubG9hZGluZ1Nsb3RfMHstd2Via2l0LWFuaW1hdGlvbi1uYW1lOnR3aXN0ZXJMb2FkaW5nU2xvdFplcm87YW5pbWF0aW9uLW5hbWU6dHdpc3RlckxvYWRpbmdTbG90WmVybzstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyOy13ZWJraXQtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDppbmZpbml0ZTthbmltYXRpb24taXRlcmF0aW9uLWNvdW50OmluZmluaXRlOy13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTpmb3J3YXJkczthbmltYXRpb24tZmlsbC1tb2RlOmZvcndhcmRzOy13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOjFzO2FuaW1hdGlvbi1kdXJhdGlvbjoxcztiYWNrZ3JvdW5kOiNGNkY3RjggLXdlYmtpdC1saW5lYXItZ3JhZGllbnQobGVmdCwjZjZmN2Y4IDAsI0YyRjJGMiA2MCUsI2Y2ZjdmOCAxMDAlKSBuby1yZXBlYXQgc2Nyb2xsIDAgMDtiYWNrZ3JvdW5kOiNGNkY3RjggbGluZWFyLWdyYWRpZW50KGxlZnQsI2Y2ZjdmOCAwLCNGMkYyRjIgNjAlLCNmNmY3ZjggMTAwJSkgbm8tcmVwZWF0IHNjcm9sbCAwIDA7YmFja2dyb3VuZDojRjZGN0Y4IC1tb3otbGluZWFyLWdyYWRpZW50KGxlZnQsI2Y2ZjdmOCAwLCNGMkYyRjIgNjAlLCNmNmY3ZjggMTAwJSkgbm8tcmVwZWF0IHNjcm9sbCAwIDA7YmFja2dyb3VuZDojRjZGN0Y4IC1tcy1saW5lYXItZ3JhZGllbnQobGVmdCwjZjZmN2Y4IDAsI0YyRjJGMiA2MCUsI2Y2ZjdmOCAxMDAlKSBuby1yZXBlYXQgc2Nyb2xsIDAgMDtiYWNrZ3JvdW5kOiNGNkY3RjggLW8tbGluZWFyLWdyYWRpZW50KGxlZnQsI2Y2ZjdmOCAwLCNGMkYyRjIgNjAlLCNmNmY3ZjggMTAwJSkgbm8tcmVwZWF0IHNjcm9sbCAwIDA7YmFja2dyb3VuZC1jb2xvcjojZjZmN2Y4Oy13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTpmb3J3YXJkczthbmltYXRpb24tZmlsbC1tb2RlOmZvcndhcmRzfS5hLWx0LWllMTAgLmxvYWRpbmdTbG90XzB7YmFja2dyb3VuZC1jb2xvcjojZjZmN2Y4fS5sb2FkaW5nU2xvdF8xey13ZWJraXQtYW5pbWF0aW9uLW5hbWU6dHdpc3RlckxvYWRpbmdTbG90T25lO2FuaW1hdGlvbi1uYW1lOnR3aXN0ZXJMb2FkaW5nU2xvdE9uZTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyOy13ZWJraXQtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDppbmZpbml0ZTthbmltYXRpb24taXRlcmF0aW9uLWNvdW50OmluZmluaXRlOy13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTpmb3J3YXJkczthbmltYXRpb24tZmlsbC1tb2RlOmZvcndhcmRzOy13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOjFzO2FuaW1hdGlvbi1kdXJhdGlvbjoxcztiYWNrZ3JvdW5kOiNGNkY3RjggLXdlYmtpdC1saW5lYXItZ3JhZGllbnQobGVmdCwjZjZmN2Y4IDAsI0YyRjJGMiA2MCUsI2Y2ZjdmOCAxMDAlKSBuby1yZXBlYXQgc2Nyb2xsIDAgMDtiYWNrZ3JvdW5kOiNGNkY3RjggbGluZWFyLWdyYWRpZW50KGxlZnQsI2Y2ZjdmOCAwLCNGMkYyRjIgNjAlLCNmNmY3ZjggMTAwJSkgbm8tcmVwZWF0IHNjcm9sbCAwIDA7YmFja2dyb3VuZDojRjZGN0Y4IC1tb3otbGluZWFyLWdyYWRpZW50KGxlZnQsI2Y2ZjdmOCAwLCNGMkYyRjIgNjAlLCNmNmY3ZjggMTAwJSkgbm8tcmVwZWF0IHNjcm9sbCAwIDA7YmFja2dyb3VuZDojRjZGN0Y4IC1tcy1saW5lYXItZ3JhZGllbnQobGVmdCwjZjZmN2Y4IDAsI0YyRjJGMiA2MCUsI2Y2ZjdmOCAxMDAlKSBuby1yZXBlYXQgc2Nyb2xsIDAgMDtiYWNrZ3JvdW5kOiNGNkY3RjggLW8tbGluZWFyLWdyYWRpZW50KGxlZnQsI2Y2ZjdmOCAwLCNGMkYyRjIgNjAlLCNmNmY3ZjggMTAwJSkgbm8tcmVwZWF0IHNjcm9sbCAwIDA7YmFja2dyb3VuZC1jb2xvcjojZjZmN2Y4Oy13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTpmb3J3YXJkczthbmltYXRpb24tZmlsbC1tb2RlOmZvcndhcmRzfS5hLWx0LWllMTAgLmxvYWRpbmdTbG90XzF7YmFja2dyb3VuZC1jb2xvcjojZjZmN2Y4fS5pbW1lcnNpdmVCYW5uZXJQYWRkaW5ne3BhZGRpbmctbGVmdDoycHh9LnZhcmlhdGlvbi1pbW1lcnNpdmUtZHJvcGRvd24gLnR3aXN0ZXItaWRkLWJ1dHRvbiAuZHJvcGRvd25JY29ue3ZlcnRpY2FsLWFsaWduOm1pZGRsZSFpbXBvcnRhbnQ7d2lkdGg6MTBweDt0b3A6NDAlfS50d2lzdGVyLWlkZC1idXR0b24gdGFibGUudHdpc3Rlci1pZGQtYnV0dG9uLXRhYmxle3RhYmxlLWxheW91dDpmaXhlZDt3aWR0aDoxMDAlO21hcmdpbi1ib3R0b206MH0udmFyaWF0aW9uLWltbWVyc2l2ZS1kcm9wZG93biAudHdpc3Rlci1pZGQtYnV0dG9ue3dpZHRoOjMwMHB4O21heC13aWR0aDo0NTBweDtib3JkZXI6MXB4IHNvbGlkICNCQ0JDQkM7Ym9yZGVyLXJhZGl1czozcHg7bWFyZ2luOjAhaW1wb3J0YW50fS52YXJpYXRpb24taW1tZXJzaXZlLWRyb3Bkb3duIC50d2lzdGVyLWlkZC1idXR0b24gLmEtYnV0dG9uLWlubmVye3BhZGRpbmc6OHB4fS52YXJpYXRpb24taW1tZXJzaXZlLWRyb3Bkb3duIC50d2lzdGVyLWlkZC1idXR0b24uYS1idXR0b24tZm9jdXN7Ym94LXNoYWRvdzpub25lfS52YXJpYXRpb24taW1tZXJzaXZlLWRyb3Bkb3duIC50d2lzdGVyLWlkZC1idXR0b24gLmEtYnV0dG9uLWlubmVyOmhvdmVye2JhY2tncm91bmQ6LW1vei1saW5lYXItZ3JhZGllbnQodG9wLHJnYmEoMTc0LDE3NCwxNzQsLjA1KSAwLHJnYmEoNjcsNjcsNjcsLjA1KSAxMDAlKTtiYWNrZ3JvdW5kOi13ZWJraXQtZ3JhZGllbnQobGluZWFyLGxlZnQgdG9wLGxlZnQgYm90dG9tLGNvbG9yLXN0b3AoMCxyZ2JhKDE3NCwxNzQsMTc0LC4wNSkpLGNvbG9yLXN0b3AoMTAwJSxyZ2JhKDY3LDY3LDY3LC4wNSkpKTtiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCxyZ2JhKDE3NCwxNzQsMTc0LC4wNSkgMCxyZ2JhKDY3LDY3LDY3LC4wNSkgMTAwJSk7YmFja2dyb3VuZDotby1saW5lYXItZ3JhZGllbnQodG9wLHJnYmEoMTc0LDE3NCwxNzQsLjA1KSAwLHJnYmEoNjcsNjcsNjcsLjA1KSAxMDAlKTtiYWNrZ3JvdW5kOi1tcy1saW5lYXItZ3JhZGllbnQodG9wLHJnYmEoMTc0LDE3NCwxNzQsLjA1KSAwLHJnYmEoNjcsNjcsNjcsLjA1KSAxMDAlKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCh0byBib3R0b20scmdiYSgxNzQsMTc0LDE3NCwuMDUpIDAscmdiYSg2Nyw2Nyw2NywuMDUpIDEwMCUpfS52YXJpYXRpb24taW1tZXJzaXZlLWRyb3Bkb3duIC50d2lzdGVyLWlkZC1tb2RhbHtib3JkZXI6MXB4IHNvbGlkICNFNEU0RTQ7Ym9yZGVyLXJhZGl1czoycHg7d2lkdGg6MzUwcHg7bWF4LXdpZHRoOjQ1MHB4O3otaW5kZXg6MTAwO21heC1oZWlnaHQ6NDUwcHg7ZGlzcGxheTpub25lO3Bvc2l0aW9uOmFic29sdXRlO2JhY2tncm91bmQtY29sb3I6I0ZGRjtib3gtc2hhZG93OjFweCAxcHggM3B4ICNDQkNCQ0J9LnZhcmlhdGlvbi1pbW1lcnNpdmUtZHJvcGRvd24gLnR3aXN0ZXItaWRkLXRhYmxle21heC1oZWlnaHQ6MzUwcHg7b3ZlcmZsb3cteTpzY3JvbGx9LnR3aXN0ZXItaWRkLXJvd3tib3JkZXItdG9wOjFweCBzb2xpZCAjRTRFNEU0O2N1cnNvcjpwb2ludGVyfS5pZGQtZmlyc3Qtcm93e2JvcmRlci10b3A6bm9uZX0udHdpc3Rlci1pZGQtcm93LXVuYXZhaWxhYmxlIC5kaW1lbnNpb24tZGlzcGxheS10ZXh0LC50d2lzdGVyLWlkZC1yb3ctdW5hdmFpbGFibGUtaG92ZXIgLmRpbWVuc2lvbi1kaXNwbGF5LXRleHR7b3BhY2l0eTouNX0udHdpc3Rlci1pZGQtcm93LXNlbGVjdGVke2JvcmRlci1sZWZ0OjJweCBzb2xpZCAjRTQ3OTExO2JhY2tncm91bmQ6I2Y2ZjZmNn0udHdpc3Rlci1pZGQtcm93LXNlbGVjdGVkIC5kaW1lbnNpb24tZGlzcGxheS10ZXh0e2ZvbnQtd2VpZ2h0OjcwMH0udHdpc3Rlci1pZGQtdGFibGUgLnR3aXN0ZXJERFByaW1lU2xvdHtwYWRkaW5nOjEwcHggMTBweCAxMHB4IDAhaW1wb3J0YW50O3BhZGRpbmctcmlnaHQ6MTBweCFpbXBvcnRhbnR9LnR3aXN0ZXItaWRkLXRhYmxlIC5kaW1lbnNpb24tZGV0YWlsc3twYWRkaW5nOjEwcHggMTBweCAxMHB4IDEwcHghaW1wb3J0YW50fS50d2lzdGVyLWlkZC1tb2RhbC1oZWFkZXJ7cGFkZGluZzoxMHB4O2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNFNEU0RTR9Lm5vdEJvbGR7Zm9udC13ZWlnaHQ6NDAwIWltcG9ydGFudH0udHdpc3Rlci1pZGQtcm93LWhvdmVye2JhY2tncm91bmQ6I2Y2ZjZmNn0udHdpc3Rlci1pZGQtbW9kYWwgLnR3aXN0ZXJNb2RhbF9zdHlsZXJUb3B7aGVpZ2h0OjM1cHg7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MTAwJTt6LWluZGV4OjE7bWFyZ2luLXRvcDowO2Rpc3BsYXk6bm9uZTttYXJnaW4tbGVmdDowO2JhY2tncm91bmQ6LW1vei1saW5lYXItZ3JhZGllbnQodG9wLHJnYmEoMjU1LDI1NSwyNTUsMSkgMCxyZ2JhKDI1NSwyNTUsMjU1LDApIDEwMCUpO2JhY2tncm91bmQ6LXdlYmtpdC1ncmFkaWVudChsaW5lYXIsbGVmdCB0b3AsbGVmdCBib3R0b20sY29sb3Itc3RvcCgwLHJnYmEoMjU1LDI1NSwyNTUsMSkpLGNvbG9yLXN0b3AoMTAwJSxyZ2JhKDI1NSwyNTUsMjU1LDApKSk7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AscmdiYSgyNTUsMjU1LDI1NSwxKSAwLHJnYmEoMjU1LDI1NSwyNTUsMCkgMTAwJSk7YmFja2dyb3VuZDotby1saW5lYXItZ3JhZGllbnQodG9wLHJnYmEoMjU1LDI1NSwyNTUsMSkgMCxyZ2JhKDI1NSwyNTUsMjU1LDApIDEwMCUpO2JhY2tncm91bmQ6LW1zLWxpbmVhci1ncmFkaWVudCh0b3AscmdiYSgyNTUsMjU1LDI1NSwxKSAwLHJnYmEoMjU1LDI1NSwyNTUsMCkgMTAwJSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLHJnYmEoMjU1LDI1NSwyNTUsMSkgMCxyZ2JhKDI1NSwyNTUsMjU1LDApIDEwMCUpO2ZpbHRlcjpwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoc3RhcnRDb2xvcnN0cj0nI2ZmZmZmZicsIGVuZENvbG9yc3RyPScjMDBmZmZmZmYnLCBHcmFkaWVudFR5cGU9MCl9LnR3aXN0ZXItaWRkLW1vZGFsIC50d2lzdGVyTW9kYWxfc3R5bGVyQm90dG9te2hlaWdodDo0NXB4O3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCU7bWFyZ2luLXRvcDotNDVweDttYXJnaW4tbGVmdDowO2JhY2tncm91bmQ6LW1vei1saW5lYXItZ3JhZGllbnQodG9wLHJnYmEoMjU1LDI1NSwyNTUsMCkgMCxyZ2JhKDI1NSwyNTUsMjU1LDEpIDEwMCUpO2JhY2tncm91bmQ6LXdlYmtpdC1ncmFkaWVudChsaW5lYXIsbGVmdCB0b3AsbGVmdCBib3R0b20sY29sb3Itc3RvcCgwLHJnYmEoMjU1LDI1NSwyNTUsMCkpLGNvbG9yLXN0b3AoMTAwJSxyZ2JhKDI1NSwyNTUsMjU1LDEpKSk7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AscmdiYSgyNTUsMjU1LDI1NSwwKSAwLHJnYmEoMjU1LDI1NSwyNTUsMSkgMTAwJSk7YmFja2dyb3VuZDotby1saW5lYXItZ3JhZGllbnQodG9wLHJnYmEoMjU1LDI1NSwyNTUsMCkgMCxyZ2JhKDI1NSwyNTUsMjU1LDEpIDEwMCUpO2JhY2tncm91bmQ6LW1zLWxpbmVhci1ncmFkaWVudCh0b3AscmdiYSgyNTUsMjU1LDI1NSwwKSAwLHJnYmEoMjU1LDI1NSwyNTUsMSkgMTAwJSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLHJnYmEoMjU1LDI1NSwyNTUsMCkgMCxyZ2JhKDI1NSwyNTUsMjU1LDEpIDEwMCUpO2ZpbHRlcjpwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoc3RhcnRDb2xvcnN0cj0nIzAwZmZmZmZmJywgZW5kQ29sb3JzdHI9JyNmZmZmZmYnLCBHcmFkaWVudFR5cGU9MCl9LnR3aXN0ZXItc2VsZWN0aW9uLWJsb2Nre2Rpc3BsYXk6YmxvY2t9LnR3aXN0ZXItc2VsZWN0aW9uLWlubGluZXtkaXNwbGF5OmlubGluZX0jdHdpc3RlciAuc3dhdGNoZXMgbGkuc3dhdGNoVW5hdmFpbGFibGUuc2hvd0dyYXlPdmVybGF5SWZTd2F0Y2hVbmF2YWlsYWJsZSwjdHdpc3RlciAuc3dhdGNoZXMgbGkuc3dhdGNoVW5hdmFpbGFibGVIb3Zlci5zaG93R3JheU92ZXJsYXlJZlN3YXRjaFVuYXZhaWxhYmxle2JvcmRlci1jb2xvcjojYjJiMmIyfSN0d2lzdGVyIC5zd2F0Y2hlcyBsaS5zd2F0Y2hVbmF2YWlsYWJsZS5zaG93R3JheU92ZXJsYXlJZlN3YXRjaFVuYXZhaWxhYmxlIC5ncmF5T3ZlcmxheSwjdHdpc3RlciAuc3dhdGNoZXMgbGkuc3dhdGNoVW5hdmFpbGFibGVIb3Zlci5zaG93R3JheU92ZXJsYXlJZlN3YXRjaFVuYXZhaWxhYmxlIC5ncmF5T3ZlcmxheXt0b3A6MDtsZWZ0OjA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtwb3NpdGlvbjphYnNvbHV0ZTtiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsLjA2KTt6LWluZGV4OjJ9I3R3aXN0ZXIgLnN3YXRjaGVzIGxpLnN3YXRjaFVuYXZhaWxhYmxlLnNob3dHcmF5T3ZlcmxheUlmU3dhdGNoVW5hdmFpbGFibGUgLmltZ1N3YXRjaCwjdHdpc3RlciAuc3dhdGNoZXMgbGkuc3dhdGNoVW5hdmFpbGFibGVIb3Zlci5zaG93R3JheU92ZXJsYXlJZlN3YXRjaFVuYXZhaWxhYmxlIC5pbWdTd2F0Y2h7ZmlsdGVyOmFscGhhKG9wYWNpdHk9ODApOy1tb3otb3BhY2l0eTouODtvcGFjaXR5Oi44fSN0d2lzdGVyIC5zd2F0Y2hlcyBsaS5zd2F0Y2hVbmF2YWlsYWJsZS5zaG93R3JheU92ZXJsYXlJZlN3YXRjaFVuYXZhaWxhYmxlIC50ZXh0LCN0d2lzdGVyIC5zd2F0Y2hlcyBsaS5zd2F0Y2hVbmF2YWlsYWJsZUhvdmVyLnNob3dHcmF5T3ZlcmxheUlmU3dhdGNoVW5hdmFpbGFibGUgLnRleHR7Y29sb3I6cmdiKDEwMiwxMDIsMTAyLDEpfVxuLnNpbXMtdnRwaC1jdXJyZW5jeXttYXJnaW4tcmlnaHQ6MnB4O3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDotLjRyZW19LnNpbXMtdnRwaC1jZW50c3ttYXJnaW4tbGVmdDoycHg7cG9zaXRpb246cmVsYXRpdmU7dG9wOi0uNHJlbX0uc2ltcy12dHBoLXByaWNlLWJhZGdle21hcmdpbi1sZWZ0OjVweH0uc2ltcy12dHBoLW1hcC1kZXRhaWxze3doaXRlLXNwYWNlOm5vd3JhcH0uc2ltcy12dHBoLWdyaWQtcm93e21heC13aWR0aDoxMjQwcHh9ZGl2LnNpbXMtdnRwaC1ncmlkLWNvbHVtbiBkaXYuc2ltcy12dHBoLXByb2R1Y3QtZGV0YWlsc3ttYXJnaW4tbGVmdDoxNXB4O3dpZHRoOmluaGVyaXR9LnNpbXMtdnRwaC1pbWFnZXttYXJnaW4tbGVmdDphdXRvO21hcmdpbi1yaWdodDphdXRvO2Rpc3BsYXk6YmxvY2t9LnNpbXMtZmJ0LWltYWdlLXJvd3t3aWR0aDphdXRvfS5zaW1zLWZidC1pbWFnZS1ib3h7ZmxvYXQ6bGVmdDttYXJnaW4tcmlnaHQ6MjVweDtsaW5lLWhlaWdodDoxMTZweDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9LnNpbXMtZmJ0LWltYWdle3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0uc2ltcy1mYnQtcHJpY2UtYm94e3BhZGRpbmctcmlnaHQ6MTBweDtwYWRkaW5nLXRvcDoxMHB4O3BhZGRpbmctYm90dG9tOjEwcHh9LnNpbXMtZmJ0LWRldGFpbHMtbGlua3tjbGVhcjpsZWZ0O3BhZGRpbmctYm90dG9tOjEwcHh9LnNpbXMtZmJ0LXRoaXMtaXRlbXttYXJnaW4tcmlnaHQ6M3B4fS5zaW1zLWZidC11bnNlbGVjdGVkLWl0ZW17b3BhY2l0eTouMjtmaWx0ZXI6YWxwaGEob3BhY2l0eT0yMCl9LnNpbXMtZmJ0LXByaWNlLXBwdXttYXJnaW4tbGVmdDo1cHg7d2hpdGUtc3BhY2U6bm93cmFwfS5zaW1zLWZidC1wb2ludHMtdmFsdWV7bWFyZ2luLWxlZnQ6M3B4O21hcmdpbi1yaWdodDozcHh9ZmllbGRzZXQuZm9yU2NyZWVucmVhZGVycyBsZWdlbmQgc3Bhbntwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0xMDAwMHB4O3RvcDphdXRvO3dpZHRoOjFweDtoZWlnaHQ6MXB4O3BhZGRpbmc6MDtvdmVyZmxvdzpoaWRkZW59LnNpbXMtZmJ0LXJvd3N7Y2xlYXI6bGVmdH0uc2ltcy1mYnQtYnV0dG9uc3tkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nLXRvcDo2cHh9LnNpbXMtZmJ0LWNoZWNrYm94IHNwYW57bWFyZ2luLXJpZ2h0OjJweH0uc2ltcy1mYnQtY2hlY2tib3ggaW5wdXR7ZGlzcGxheTpub25lfS5zaW1zLWZidC1zZWxsZXItaW5mb3tkaXNwbGF5Om5vbmV9LnNpbXMtZmJ0LXByaWNlLWJhZGdlc3tkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tbGVmdDo1cHg7bWFyZ2luLXJpZ2h0OjEzcHh9LmZidC1hdWktY2hlY2tib3gtbGFiZWx7cG9zaXRpb246cmVsYXRpdmU7dG9wOi0zcHh9I2ZidF93X2NoZWNrLCNmYnRfeF9jaGVjaywjZmJ0X3lfY2hlY2ssI2ZidF96X2NoZWNre3RvcDowfS5mYnRfaXRlbV9kZXRhaWxzX25vX2xlZnRfcGFkZGluZ3twYWRkaW5nOjAgMCAuNzVlbSAwIWltcG9ydGFudH0jZmJ0X3dfaW1nIGltZ3ttYXgtd2lkdGg6bm9uZX0jZmJ0X3dfY2hlY2t7cG9zaXRpb246YWJzb2x1dGU7bGVmdDotMjFweDttYXJnaW4tYm90dG9tOjNweH0jZmJ0LWJlc3RzZWxsZXItYmFkZ2UgYTpob3Zlcnt0ZXh0LWRlY29yYXRpb246bm9uZSFpbXBvcnRhbnR9I2ZidF9idXR0b25ze2Rpc3BsYXk6aW5saW5lLWJsb2NrfSNzaW1zLWZidC1mb3Jte21hcmdpbi1ib3R0b206MH0uc2ltcy1jYXJvdXNlbC1oZWFkaW5ne2NsZWFyOmxlZnR9YTpob3ZlciBzcGFuLnAxM24tYmVzdC1zZWxsZXItc3RvcmUtbmFtZXtjb2xvcjojRTQ3OTExIWltcG9ydGFudDt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lfWEucDEzbi1iZXN0LXNlbGxlcjpob3Zlcnt0ZXh0LWRlY29yYXRpb246bm9uZX0ucDEzbi1iZXN0LXNlbGxlci1iYWRnZXttYXJnaW4tcmlnaHQ6NHB4O2JhY2tncm91bmQtY29sb3I6I0U0NzkxMSFpbXBvcnRhbnQ7Zm9udC1zaXplOjEycHg7cGFkZGluZy10b3A6MnB4O3BhZGRpbmctYm90dG9tOjJweH0ucDEzbi1iZXN0LXNlbGxlci1iYWRnZTpiZWZvcmV7Ym9yZGVyLWJvdHRvbS1jb2xvcjojRTQ3OTExIWltcG9ydGFudH0ucDEzbi1iZXN0LXNlbGxlci1iYWRnZTphZnRlcntib3JkZXItdG9wLWNvbG9yOiNFNDc5MTEhaW1wb3J0YW50fS5wMTNuLWNhc2gtb24tZGVsaXZlcnl7Y29sb3I6I0ZGRjtiYWNrZ3JvdW5kLWNvbG9yOiNEMDAwMkI7cGFkZGluZzoycHggNXB4IDJweCA1cHg7Ym9yZGVyLXJhZGl1czozcHg7cG9zaXRpb246cmVsYXRpdmU7dG9wOi0ycHh9LnNpbXMtb25seS1zaG93LXByaW1lLWVsaWdpYmxlLXRleHR7bWFyZ2luLWxlZnQ6NXB4fS5zaW1zLXZ0cC1oZWFkaW5ne2NsZWFyOmxlZnR9LnAxM24tc2MtdnRwLWJpbmRpbmcsLnAxM24tc2MtdnRwLXBsYXRmb3Jte3BhZGRpbmctbGVmdDo1cHh9LnZ0cC14YWl2LWRvdWJsZWxpc3Rze21heC13aWR0aDo1MCU7cGFkZGluZy1yaWdodDozMHB4O2Zsb2F0OmxlZnR9LnZ0cC1jb250YWluZXJ7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWF4LXdpZHRoOjY1MHB4fS52dHAtZm9vdGVye2NsZWFyOmxlZnR9I3ZpZXdfdG9fcHVyY2hhc2Utc2ltcy1mZWF0dXJle21hcmdpbi1ib3R0b206MH0uc2ltcy1scG8tdnRwaC1ncmlkLWNvbHVtbnttaW4td2lkdGg6MzA1cHg7cGFkZGluZy1yaWdodDoyNXB4O2hlaWdodDphdXRvO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3BhZGRpbmctYm90dG9tOjUwMGVtO21hcmdpbi1ib3R0b206LTUwMGVtfS5zaW1zLWxwby12dHBoLWdyaWQtY29sdW1uOm5vdCg6bGFzdC1jaGlsZCl7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjREREfS5zaW1zLWxwby12dHBoLWhlYWRlcntmb250LXdlaWdodDo0MDB9LnNpbXMtbHBvLXZ0cGgtcm93e21hcmdpbi1sZWZ0OjI1cHg7b3ZlcmZsb3c6aGlkZGVufS5zaW1zLWxwby1zZWN0aW9ue3BhZGRpbmc6MThweDttaW4td2lkdGg6OTk2cHg7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI0RERDtwb3NpdGlvbjpyZWxhdGl2ZX0uc2ltcy1scG8taHVlLXNoaWVsZHt3aWR0aDoxMDAlO3RvcDowO2xlZnQ6MDtib3R0b206MDtyaWdodDowO3Bvc2l0aW9uOmFic29sdXRlO2JhY2tncm91bmQ6cmdiYSgwLDAsMCwuMDIpO3otaW5kZXg6MTAwO3BvaW50ZXItZXZlbnRzOm5vbmV9LnNpbXMtbHBvLWdyaWQtY29sdW1ue21pbi13aWR0aDozMDVweDtwYWRkaW5nLXJpZ2h0OjI1cHg7aGVpZ2h0OmF1dG87ZGlzcGxheTppbmxpbmUtYmxvY2s7cGFkZGluZy1ib3R0b206NTAwZW07bWFyZ2luLWJvdHRvbTotNTAwZW19LnNpbXMtbHBvLWdyaWQtY29sdW1uOm5vdCg6bGFzdC1jaGlsZCl7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjREREfS5zaW1zLWxwby1oZWFkZXJ7Zm9udC13ZWlnaHQ6NDAwfWRpdi5zaW1zLWxwby1zZWN0aW9uIGRpdi5zaW1zLWxwby1wcm9kdWN0LWRldGFpbHN7bWFyZ2luLWxlZnQ6MjVweDt3aWR0aDppbmhlcml0fWRpdi5zaW1zLWxwby1zZWN0aW9uIGRpdi5zaW1zLXZ0cGgtcHJvZHVjdC1kZXRhaWxze21hcmdpbi1sZWZ0OjI1cHg7d2lkdGg6aW5oZXJpdH0uc2ltcy1scG8tcm93e21hcmdpbi1sZWZ0OjI1cHg7b3ZlcmZsb3c6aGlkZGVufS5zaW1zLWxwby1oZWFkZXItdGl0bGV7Zm9udC13ZWlnaHQ6NzAwfS5zaW1zLWxwby1pbWFnZXttYXJnaW4tbGVmdDphdXRvO21hcmdpbi1yaWdodDphdXRvO2Rpc3BsYXk6YmxvY2t9XG4ucGFkcy1wcmltYXJ5LW9mZmVyLWNvbnRhaW5lciAucGFkcy1jYmF7Ym9yZGVyLXJhZGl1czo2cHggNnB4IDZweCA2cHg7Y29sb3I6IzAwMDtmb250LXNpemU6MTFweDttYXJnaW46MCBhdXRvO3BhZGRpbmc6MCA1cHg7d2lkdGg6MTcycHh9LnBhZHMtcHJpbWFyeS1vZmZlci1jb250YWluZXIgLnBhZHMtY2JhIGltZ3ttYXJnaW4tdG9wOjNweH0ucGFkcy1wcmltYXJ5LW9mZmVyLWNvbnRhaW5lciAucGFkcy1wcmljZXtjb2xvcjojOTAwMDAwO2ZvbnQtZmFtaWx5OkFyaWFsO2ZvbnQtc2l6ZToxM3B4O2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0OjcwMDttYXJnaW46MDt0ZXh0LWRlY29yYXRpb246bm9uZX0ucGFkcy1wcmltYXJ5LW9mZmVyLWNvbnRhaW5lciAucGFkcy1zaGlwe2NvbG9yOiM4ODg7Zm9udC1mYW1pbHk6QXJpYWw7Zm9udC1zaXplOjEzcHg7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6NDAwO3RleHQtZGVjb3JhdGlvbjpub25lfS5wYWRzLXByaW1hcnktb2ZmZXItY29udGFpbmVyIC5wYWRzLWF2YWlsYWJpbGl0eXtjb2xvcjojRDg1QzNBO2ZvbnQtZmFtaWx5OkFyaWFsO2ZvbnQtc2l6ZToxM3B4O2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0OjcwMDttYXJnaW46MDt0ZXh0LWRlY29yYXRpb246bm9uZX0ucGFkcy1wcmltYXJ5LW9mZmVyLWNvbnRhaW5lciAucGFkcy1tZXJjaGFudHtjb2xvcjojMzMzO2ZvbnQtZmFtaWx5OkFyaWFsO2ZvbnQtc2l6ZToxM3B4O2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0OjcwMDttYXJnaW46MDt0ZXh0LWRlY29yYXRpb246bm9uZX0ucGFkcy1wcmltYXJ5LW9mZmVyLWNvbnRhaW5lciAucGFkcy1leHRlcm5hbC1saW5rOmhvdmVye3RleHQtZGVjb3JhdGlvbjpub25lfS5wYWRzLXByaW1hcnktb2ZmZXItY29udGFpbmVyICNwYV9idXlib3hfbWVyY2hhbnRfbmFtZXt3b3JkLWJyZWFrOmJyZWFrLWFsbH0ucGFkcy1wcmltYXJ5LW9mZmVyLWNvbnRhaW5lciAjcGFfYnV5Ym94X21lcmNoYW50X25hbWUgI3BhX2J1eWJveF9kaXNwbGF5X3VybHt3b3JkLWJyZWFrOmJyZWFrLWFsbDt3aGl0ZS1zcGFjZTpub3JtYWx9LnBhZHMtYXZhaWxhYmlsaXR5LXRpdGxle2NvbG9yOiNEODVDM0E7Zm9udC1mYW1pbHk6QXJpYWw7Zm9udC1zaXplOjE2cHg7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6NzAwO3RleHQtZGVjb3JhdGlvbjpub25lfS5wYWRzLWF2YWlsYWJpbGl0eS10aXRsZSBhe2NvbG9yOiMwNUE7Zm9udC1zaXplOjEzcHg7Zm9udC13ZWlnaHQ6NDAwfS5wYWRzLWF2YWlsYWJpbGl0eS1kaXNjbGFpbWVye2NvbG9yOiM4ODg7Zm9udC1mYW1pbHk6QXJpYWw7Zm9udC1zaXplOjEycHg7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6NDAwO21hcmdpbi10b3A6MTBweDt0ZXh0LWRlY29yYXRpb246bm9uZX0ucGFkcy1mZWVkYmFja3tjb2xvcjojODg4O2ZvbnQtZmFtaWx5OkFyaWFsO2ZvbnQtc2l6ZToxMnB4O2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0OjQwMDt0ZXh0LWRlY29yYXRpb246bm9uZX0ucGFkcy1mZWVkYmFjayBhe2NvbG9yOiMwNUE7Zm9udC1zaXplOjEzcHh9LnBhZHMtY3JwLWRlc2NyaXB0aW9uIHB7Zm9udC1zaXplOjExcHg7bWFyZ2luOjJweCAwIDRweDtwYWRkaW5nOjB9LnBhZHMtY3JwLXRhYnNldHttYXJnaW46MDtwYWRkaW5nOjFweCAwIDA7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MjEwcHh9LnBhZHMtY3JwLXRhYnNldCAucGFkcy1jcnAtdGFib2Zme2JhY2tncm91bmQtY29sb3I6I0VGRUZFRjtib3JkZXI6MXB4IHNvbGlkICNBMUExQTE7bWFyZ2luOi0xcHggMCAwIDEycHg7cGFkZGluZzowO3dpZHRoOjI2MnB4fS5wYWRzLWNycC10YWJzZXQgLnBhZHMtY3JwLXRhYm9ue2JvcmRlci1jb2xvcjojMzYzNjM2ICNGRkYgIzM2MzYzNiAjMzYzNjM2O2JvcmRlci1zdHlsZTpzb2xpZDtib3JkZXItd2lkdGg6MXB4O21hcmdpbjotMXB4IDJweCAxcHg7cGFkZGluZzowO3dpZHRoOjI3MnB4fS5wYWRzLWNycC10YWJzZXQgYXtjb2xvcjojMDAwO2N1cnNvcjpwb2ludGVyO2Rpc3BsYXk6YmxvY2s7dGV4dC1kZWNvcmF0aW9uOm5vbmV9LnBhZHMtY3JwLXRhYnNldCBhOmFjdGl2ZXtvdXRsaW5lOm1lZGl1bSBub25lfS5wYWRzLWNycC10YWJzZXQgLnBhZHMtY3JwLW9mZmVye21hcmdpbjowO3BhZGRpbmc6NHB4IDAgNHB4IDJweH0ucGFkcy1jcnAtdGFic2V0IC5wYWRzLWNycC1vZmZlciAucGFkcy1vZmZlci1pbWd7Ym9yZGVyOm1lZGl1bSBub25lO2Zsb2F0OmxlZnQ7bWFyZ2luOjAgMnB4IDAgMDtwYWRkaW5nOjA7d2lkdGg6NDVweH0ucGFkcy1jcnAtdGFic2V0IC5wYWRzLWNycC1vZmZlciAucGFkcy1vZmZlci1pbWcgaW1ne2JvcmRlcjptZWRpdW0gbm9uZTtoZWlnaHQ6NDVweDttYXJnaW46MDtwYWRkaW5nOjA7d2lkdGg6NDVweH0ucGFkcy1jcnAtdGFic2V0IC5wYWRzLWNycC1vZmZlciAucGFkcy1vZmZlci1kZXRhaWxze2Rpc3BsYXk6YmxvY2s7bWFyZ2luOjAgMCAwIDJweDtwYWRkaW5nOjB9LnBhZHMtY3JwLXRhYnNldCAucGFkcy1jcnAtb2ZmZXIgLnBhZHMtdGl0bGV7ZGlzcGxheTpibG9jaztmb250LXNpemU6MTFweDtmb250LXdlaWdodDo0MDA7aGVpZ2h0OjI4cHg7bGluZS1oZWlnaHQ6MTNweDttYXJnaW46MCAwIDAgNDVweDtvdmVyZmxvdzpoaWRkZW47cGFkZGluZzowfS5wYWRzLWNycC10YWJzZXQgLnBhZHMtY3JwLW9mZmVyIC5wYWRzLXByaWNle2NvbG9yOiM5MDA7Zm9udC1zaXplOjExcHg7Zm9udC13ZWlnaHQ6NDAwO21hcmdpbjowIDAgMCA0NXB4O3BhZGRpbmc6MnB4IDAgMDt3aWR0aDoyMDdweH0ucGFkcy1jcnAtdGFic2V0IC5wYWRzLWNycC1vZmZlciAucGFkcy1zaGlwe2NvbG9yOiM1NTU7Zm9udC1zaXplOjlweDtmb250LXdlaWdodDo0MDA7bWFyZ2luOjA7cGFkZGluZzowIDJweCAwIDB9LnBhZHMtY3JwLWZvcm17YmFja2dyb3VuZC1jb2xvcjojRkZGO2JvcmRlcjoxcHggc29saWQgIzM2MzYzNjtkaXNwbGF5OmlubGluZTtmbG9hdDpsZWZ0O21hcmdpbjowIDAgNnB4IDI3M3B4O3BhZGRpbmc6NnB4IDEwcHggMTBweDt3aWR0aDo0MjVweH0ucGFkcy1jcnAtZm9ybSAucGFkcy1jcnAtdGl0bGV7Y29sb3I6I0U0NzkxMTtmb250LXNpemU6MTFweDtmb250LXdlaWdodDo3MDA7bWFyZ2luOjA7cGFkZGluZzowfS5wYWRzLWNycC1mb3JtIC5wYWRzLWNycC1pc3N1ZS1saXN0e2Zsb2F0OmxlZnQ7bWFyZ2luOjhweCAwIDA7cGFkZGluZzowO3dpZHRoOjIyMHB4fS5wYWRzLWNycC1mb3JtIC5wYWRzLWNycC1pc3N1ZS1saXN0LXNlY29uZGFyeXtib3JkZXItdG9wOjFweCBzb2xpZCAjQUNBQ0FDO2Rpc3BsYXk6YmxvY2s7ZmxvYXQ6bGVmdDttYXJnaW46M3B4IDAgMDtwYWRkaW5nOjZweCAwIDA7d2lkdGg6YXV0b30ucGFkcy1jcnAtZm9ybSAucGFkcy1jcnAtaXNzdWV7Zm9udC1zaXplOjExcHg7bWFyZ2luOjA7cGFkZGluZzowfS5wYWRzLWNycC1mb3JtIC5wYWRzLWNycC1pc3N1ZSBpbnB1dHtmbG9hdDpsZWZ0O21hcmdpbjowIDFweCA2cHggMDtwYWRkaW5nOjA7d2lkdGg6MjBweH0ucGFkcy1jcnAtZm9ybSAucGFkcy1jcnAtaXNzdWUgLnBhZHMtY3JwLWlzc3VlLWNvcHl7bWFyZ2luOjAgMCA2cHggNnB4O3BhZGRpbmc6MH0ucGFkcy1jcnAtZm9ybSAucGFkcy1jcnAtaXNzdWUgLnBhZHMtY3JwLWlzc3VlLWxhYmVse2ZvbnQtd2VpZ2h0OjcwMDttYXJnaW46MDtwYWRkaW5nOjAgM3B4IDAgMH0ucGFkcy1jcnAtZm9ybSAucGFkcy1jcnAtaXNzdWUgLnBhZHMtY3JwLWlzc3VlLWNvcHktbG9uZ3ttYXJnaW46MCAwIDZweCA2cHg7cGFkZGluZzowO3dpZHRoOmF1dG99LnBhZHMtY3JwLWZvcm0gLnBhZHMtY3JwLWlzc3VlIC5wYWRzLWNycC1pc3N1ZS1jb3B5LWxvbmcgLnBhZHMtY3JwLWlzc3VlLWxvbmd7Zm9udC13ZWlnaHQ6NzAwfS5wYWRzLWNycC1mb3JtIC5wYWRzLWNycC1jb21tZW50e2Zsb2F0OnJpZ2h0O2ZvbnQtc2l6ZToxMHB4O2ZvbnQtd2VpZ2h0OjcwMDttYXJnaW46OHB4IDVweCAwIDA7cGFkZGluZzowO3dpZHRoOjE3MHB4fS5wYWRzLWNycC1mb3JtIC5wYWRzLWNycC1jb21tZW50IHRleHRhcmVhe2ZvbnQtZmFtaWx5OnZlcmRhbmEsYXJpYWwsaGVsdmV0aWNhLHNhbnMtc2VyaWY7Zm9udC1zaXplOjEwcHg7aGVpZ2h0OjE4MHB4O21hcmdpbjozcHggMCAxMHB4O3BhZGRpbmc6M3B4O3dpZHRoOjE3NXB4fS5wYWRzLWNycC1mb3JtLW5hdntjbGVhcjpib3RoO21hcmdpbjowIDAgMCAzNTBweDtwYWRkaW5nOjB9LnBhZHMtY3JwLWZvcm0tbmF2IHVse2xpc3Qtc3R5bGU6bm9uZSBvdXRzaWRlIG5vbmU7bWFyZ2luOjA7cGFkZGluZzowfS5wYWRzLWNycC1mb3JtLW5hdiBsaXtkaXNwbGF5OmlubGluZTttYXJnaW46MCA4cHggMCAwO3BhZGRpbmc6MH0ucGFkcy1jcnAtZm9ybS1uYXYgbGkgYSBpbWd7Ym9yZGVyOm1lZGl1bSBub25lfS5zcF9vZmZlclZlcnRpY2Fse3Bvc2l0aW9uOnJlbGF0aXZlfS5zcF9vZmZlclZlcnRpY2FsIC5zcF9hZElEe3BhZGRpbmc6NnB4IDJweDt0b3A6MDtsZWZ0OjA7d2lkdGg6MTAwJTt0ZXh0LWRlY29yYXRpb246bm9uZTtib3JkZXItdG9wOjFweCBzb2xpZCAjNmRhZWUxO2JhY2tncm91bmQtY29sb3I6I2YwZjdmYztiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjQwLDI0NywyNTIsLjgpO2JvcmRlci1ib3R0b206MXB4IGRvdHRlZCAjNmRhZWUxO2ZvbnQtc2l6ZToxMnB4O3Bvc2l0aW9uOmFic29sdXRlfS5zcF9vZmZlclZlcnRpY2FsIC5zcF9hZElEIGF7dGV4dC1kZWNvcmF0aW9uOm5vbmU7ZGlzcGxheTpibG9jaztsaW5lLWhlaWdodDoxMnB4O2JhY2tncm91bmQ6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9wcm9kdWN0QWRzL3BhX2ZlZWRiYWNrX2J1YmJsZS5wbmcpIG5vLXJlcGVhdCAxMzBweCAwfS5zcF9vZmZlclZlcnRpY2FsIC5zcF9hZElEIGEgLmEtaWNvbi1wb3BvdmVye2Rpc3BsYXk6bm9uZX0uc3Bfb2ZmZXJWZXJ0aWNhbCAuc3BfYWRJRCBhOmhvdmVye2JhY2tncm91bmQ6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9wcm9kdWN0QWRzL3BhX2ZlZWRiYWNrX2J1YmJsZS5wbmcpIG5vLXJlcGVhdCAxMzBweCAtMTJweH0uc3Bfb2ZmZXJWZXJ0aWNhbCAuc3AtZGV0YWlsLWJsdXJie2xpbmUtaGVpZ2h0OjE3cHh9LnNwX29mZmVyVmVydGljYWwgLnNwLWRldGFpbC1ibHVyYiBzcGFue2ZvbnQtZmFtaWx5Omdlb3JnaWF9YS5zcF9oZWxwX2xpbmsgLmEtaWNvbi1wb3BvdmVye2Rpc3BsYXk6bm9uZX1kaXYjc3BvbnNvcmVkUHJvZHVjdHNEcFNodmwgdWwgbGl7d2lkdGg6MTYwcHh9LmEtaWU3IC5zcF9hZElEe2JhY2tncm91bmQ6MCAwO2ZpbHRlcjpwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoc3RhcnRDb2xvcnN0cj0jODBGMEY3RkMsIGVuZENvbG9yc3RyPSM4MEYwRjdGQyk7em9vbToxfS5hLWx0LWllOSAuU1AtQWQtRmVlZGJhY2sgYS5keW5hbWljU1BGTHtwYWRkaW5nOjAgMTdweCAxcHggMDtiYWNrZ3JvdW5kOnVybChodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvcHJvZHVjdEFkcy9hZF9mZWVkYmFja19pY29uXzFYc3ByaXRlLnBuZykgcmlnaHQgMCBuby1yZXBlYXR9LmEtbHQtaWU5IC5TUC1BZC1GZWVkYmFjayBhLmR5bmFtaWNTUEZMOmhvdmVye3BhZGRpbmc6MCAxN3B4IDFweCAwO2JhY2tncm91bmQ6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9wcm9kdWN0QWRzL2FkX2ZlZWRiYWNrX2ljb25fMVhzcHJpdGUucG5nKSByaWdodCAtMTNweCBuby1yZXBlYXR9ZGl2I3NwX2RwX2ZiX2ltYWdle21hcmdpbi1yaWdodDowfS5TUC1BZC1GZWVkYmFja3tmb250LWZhbWlseTphcmlhbDtmb250LXNpemU6MTFweDt0ZXh0LWFsaWduOnJpZ2h0fS5TUC1BZC1GZWVkYmFjayBhLmR5bmFtaWNTUEZMe3RleHQtZGVjb3JhdGlvbjpub25lO3BhZGRpbmc6MCAxOXB4IDJweCAwO2xpbmUtaGVpZ2h0OjExcHg7bWFyZ2luOjAgMCAwIDJweDtkaXNwbGF5OmlubGluZS1ibG9jaztiYWNrZ3JvdW5kOnVybChodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvcHJvZHVjdEFkcy9hZF9mZWVkYmFja19pY29uXzJYc3ByaXRlLnBuZykgcmlnaHQgMCBuby1yZXBlYXQ7YmFja2dyb3VuZC1zaXplOjE1cHg7Y29sb3I6IzAwNjZDMH0uU1AtQWQtRmVlZGJhY2sgYS5keW5hbWljU1BGTDpob3Zlcnt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lO3BhZGRpbmc6MCAxOXB4IDJweCAwO2JhY2tncm91bmQ6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9wcm9kdWN0QWRzL2FkX2ZlZWRiYWNrX2ljb25fMlhzcHJpdGUucG5nKSByaWdodCAtMTNweCBuby1yZXBlYXQ7YmFja2dyb3VuZC1zaXplOjE1cHg7Y29sb3I6I0U0NzkxMX0uc3BvbnNvcmVkLXByb2R1Y3RzLXRydW5jYXRvci10cnVuY2F0ZXttYXgtaGVpZ2h0Ojc2cHg7b3ZlcmZsb3c6aGlkZGVufS5zcG9uc29yZWQtcHJvZHVjdHMtZGVhbC1iYWRnZS1nZW5lcmlje2hlaWdodDoyNHB4O2ZvbnQtc2l6ZToxMnB4O2ZvbnQtZmFtaWx5OlwiQW1hem9uIEVtYmVyXCIsQXJpYWwsc2Fucy1zZXJpZjtsZXR0ZXItc3BhY2luZzowO2xpbmUtaGVpZ2h0OjI0cHg7cGFkZGluZy10b3A6NXB4O3BhZGRpbmctYm90dG9tOjVweDtwYWRkaW5nLXJpZ2h0OjEwcHg7cGFkZGluZy1sZWZ0OjEwcHh9LnNwb25zb3JlZC1wcm9kdWN0cy1kZWFsLWV2ZXJncmVlbi1iYWRnZXtiYWNrZ3JvdW5kLWNvbG9yOiM4ODg7Y29sb3I6I0ZGRn0uc3BvbnNvcmVkLXByb2R1Y3RzLWRlYWwtcHJpbWUtZGF5LWJhZGdle2JhY2tncm91bmQtY29sb3I6Izc5RjBGRjtjb2xvcjojMTExfS5zcG9uc29yZWQtcHJvZHVjdHMtZGVhbC1zYWxlLWRheS1iYWRnZXtiYWNrZ3JvdW5kLWNvbG9yOiMwMDQ2NEY7Y29sb3I6I0ZGRn0uc3BvbnNvcmVkLXByb2R1Y3RzLWRlYWwtZGlzY291bnQtdGV4dHtmb250LWZhbWlseTpcIkFtYXpvbiBFbWJlclwiLEFyaWFsLHNhbnMtc2VyaWY7Zm9udC1zaXplOjEycHg7Y29sb3I6IzU1NTtsZXR0ZXItc3BhY2luZzowO2xpbmUtaGVpZ2h0OjE4cHh9LnNwb25zb3JlZC1wcm9kdWN0cy1kZWFsLWRpc2NvdW50LXRleHQtbW9iaWxle2ZvbnQtZmFtaWx5OlwiQW1hem9uIEVtYmVyXCIsQXJpYWwsc2Fucy1zZXJpZjtmb250LXNpemU6MTNweDtjb2xvcjojNTU1O2xldHRlci1zcGFjaW5nOjA7bGluZS1oZWlnaHQ6MTdweH1cbiNtaW5pQVRGX2ltYWdlQ29sdW1ue21hcmdpbi1yaWdodDoxNXB4IWltcG9ydGFudDttYXJnaW4tbGVmdDoxNXB4IWltcG9ydGFudH0jbWluaUFURlVEUHtwb3NpdGlvbjpmaXhlZDt0b3A6MDtsZWZ0OjA7cmlnaHQ6MDtib3gtc2hhZG93OnJnYmEoMCwwLDAsLjA5ODAzOTIpIDNweCAzcHggM3B4O3dpZHRoOjEwMCU7ei1pbmRleDo1MDtiYWNrZ3JvdW5kOiNmZWZlZmU7YmFja2dyb3VuZDotbW96LWxpbmVhci1ncmFkaWVudCh0b3AsI2Y2ZjZmNiAwLCNmZmYgMTAwJSk7YmFja2dyb3VuZDotd2Via2l0LWdyYWRpZW50KGxpbmVhcixsZWZ0IHRvcCxsZWZ0IGJvdHRvbSxjb2xvci1zdG9wKDAsI2Y2ZjZmNiksY29sb3Itc3RvcCgxMDAlLCNmZmYpKTtiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwjZjZmNmY2IDAsI2ZmZiAxMDAlKTtiYWNrZ3JvdW5kOi1vLWxpbmVhci1ncmFkaWVudCh0b3AsI2Y2ZjZmNiAwLCNmZmYgMTAwJSk7YmFja2dyb3VuZDotbXMtbGluZWFyLWdyYWRpZW50KHRvcCwjZjZmNmY2IDAsI2ZmZiAxMDAlKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCh0byBib3R0b20sI2Y2ZjZmNiAwLCNmZmYgMTAwJSk7Ym9yZGVyLXRvcDpzb2xpZCAxcHggI2QzZDNkMztib3JkZXItYm90dG9tOnNvbGlkIDFweCAjZTVlNWU1O3BhZGRpbmctcmlnaHQ6MjBweDtkaXNwbGF5Om5vbmV9Lm1pbmlBVEZfYnV5Qm94e3dpZHRoOjIwMHB4fSNtaW5pQVRGVURQIC5hLWljb24tcHJpbWV7cG9zaXRpb246cmVsYXRpdmU7dG9wOjJweH0jbWluaUFURlVEUCAuYS1pY29uLWFkZG9ue21hcmdpbi1yaWdodDoxMHB4fS5taW5pQVRGX3RvcE1hcmdpbnttYXJnaW4tdG9wOjEycHh9I21pbmlBVEZfaW1hZ2VDb2x1bW57aGVpZ2h0OjQwcHh9Lm1pbmlBVEZJbWFnZXttYXgtd2lkdGg6NDBweDttYXgtaGVpZ2h0OjQwcHh9I21pbmlBVEZfdGl0bGVMaW5re2NvbG9yOiMzMzN9I21pbmlBVEZfdGl0bGVMaW5rOmhvdmVye2NvbG9yOiNFNDc5MTE7dGV4dC1kZWNvcmF0aW9uOm5vbmV9I21pbmlBVEZVRFAgYS5wYWRzLWV4dGVybmFsLWxpbms6aG92ZXJ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9I21pbmlBVEZVRFAgLmZpcnN0U2VjdGlvbnt3aWR0aDo1MCV9I21pbmlBVEZVRFAgLm1pZGRsZVNlY3Rpb257d2lkdGg6MTAlfSNtaW5pQVRGVURQIC5sYXN0U2VjdGlvbnt3aWR0aDozMCV9I3Byb2REZXRhaWxzIC50YWJsZS1wYWRkaW5ne21hcmdpbi1sZWZ0OjEycHh9I2l2TWFpbi5sZWdhY3lJbW1lcnNpdmVWaWV3e3BhZGRpbmc6MCAxNXB4O3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7ZGlzcGxheTpibG9ja30ubGVnYWN5SW1tZXJzaXZlVmlldyAucGxhY2Vob2xkZXIsLmxlZ2FjeUltbWVyc2l2ZVZpZXcgLnBsYWNlaG9sZGVyVmlkZW97ZGlzcGxheTpub25lIWltcG9ydGFudH0ubGVnYWN5SW1tZXJzaXZlVmlldyAuZnVsbHNjcmVlbnttYXgtd2lkdGg6bm9uZSFpbXBvcnRhbnR9LmxlZ2FjeUltbWVyc2l2ZVZpZXcgI2l2VGh1bWJDb2x1bW57ZmxvYXQ6bGVmdDt3aWR0aDoyMzVweH0ubGVnYWN5SW1tZXJzaXZlVmlldyAjaXZUaXRsZXtjdXJzb3I6cG9pbnRlcjtjb2xvcjojMDM5O3RleHQtYWxpZ246bGVmdDttYXJnaW4tdG9wOjEwcHg7Zm9udC1mYW1pbHk6dmVyZGFuYSxhcmlhbCxoZWx2ZXRpY2Esc2Fucy1zZXJpZjtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo3MDA7d29yZC13cmFwOmJyZWFrLXdvcmQ7d2lkdGg6MjM1cHh9LmxlZ2FjeUltbWVyc2l2ZVZpZXcgI2l2VGl0bGU6aG92ZXJ7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTtjb2xvcjpvcmFuZ2V9LmxlZ2FjeUltbWVyc2l2ZVZpZXcgI2l2VmFyaWF0aW9uU2VsZWN0aW9ue3RleHQtYWxpZ246bGVmdH0ubGVnYWN5SW1tZXJzaXZlVmlldyAjaXZNZWRpYVNlbGVjdGlvbnt3aWR0aDoyMzVweDtib3JkZXI6MXB4IHNvbGlkICNDOUUxRjQ7YmFja2dyb3VuZC1jb2xvcjojRUFGM0ZEO3BhZGRpbmctdG9wOjVweDtwYWRkaW5nLWJvdHRvbTo1cHg7bWFyZ2luLXRvcDoxNXB4O2Rpc3BsYXk6bm9uZX0ubGVnYWN5SW1tZXJzaXZlVmlldyAjaXZNZWRpYVNlbGVjdHtwb3NpdGlvbjpyZWxhdGl2ZTtsZWZ0OjY1cHh9LmxlZ2FjeUltbWVyc2l2ZVZpZXcgI2l2VGh1bWJze2JvcmRlcjoxcHggc29saWQgI0M5RTFGNDt3aWR0aDoyMzVweDtoZWlnaHQ6MjkwcHg7cGFkZGluZy1sZWZ0OjE1cHg7cGFkZGluZy10b3A6MTVweDtwYWRkaW5nLWJvdHRvbToxNXB4O292ZXJmbG93LXk6YXV0bztib3JkZXItdG9wOjA7bWFyZ2luLWJvdHRvbToxNXB4O3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDowO2xlZnQ6MH0ubGVnYWN5SW1tZXJzaXZlVmlldyAjaXZUaHVtYnMubm9NZWRpYVNlbGVjdGlvbnttYXJnaW4tdG9wOjE1cHg7Ym9yZGVyLXRvcDoxcHggc29saWQgI0M5RTFGNH0ubGVnYWN5SW1tZXJzaXZlVmlldyAjaXZWaWRlb0xpc3R7Ym9yZGVyOjFweCBzb2xpZCAjQzlFMUY0O3dpZHRoOjIzNXB4O2hlaWdodDoyMzBweDtwYWRkaW5nOjA7b3ZlcmZsb3cteTphdXRvO2JvcmRlci10b3A6MDtkaXNwbGF5Om5vbmV9LmxlZ2FjeUltbWVyc2l2ZVZpZXcgLml2VGh1bWJ7Ym9yZGVyOjFweCBzb2xpZCAjZGRkO2Zsb2F0OmxlZnQ7bWFyZ2luLXJpZ2h0OjEycHg7bWFyZ2luLWJvdHRvbToyMHB4O2N1cnNvcjpwb2ludGVyO3BhZGRpbmc6MXB4fS5sZWdhY3lJbW1lcnNpdmVWaWV3IC5pdlRodW1iLnNlbGVjdGVkLC5sZWdhY3lJbW1lcnNpdmVWaWV3IC5pdlRodW1iLnNlbGVjdGVkOmhvdmVyLC5sZWdhY3lJbW1lcnNpdmVWaWV3IC5pdlRodW1iVmlkZW9MaXN0T3V0ZXIuc2VsZWN0ZWQgLml2VGh1bWJWaWRlb0xpc3QsLmxlZ2FjeUltbWVyc2l2ZVZpZXcgLml2VGh1bWJWaWRlb0xpc3RPdXRlci5zZWxlY3RlZDpob3ZlciAuaXZUaHVtYlZpZGVvTGlzdHtib3JkZXI6MnB4IHNvbGlkICNFNDc5MTE7cGFkZGluZzowfS5sZWdhY3lJbW1lcnNpdmVWaWV3IC5pdlRodW1iOmhvdmVyLC5sZWdhY3lJbW1lcnNpdmVWaWV3IC5pdlRodW1iVmlkZW9MaXN0T3V0ZXI6aG92ZXIgLml2VGh1bWJWaWRlb0xpc3R7Ym9yZGVyOjJweCBzb2xpZCAjMDA0QjkxO3BhZGRpbmc6MH0ubGVnYWN5SW1tZXJzaXZlVmlldyAuaXZUaHVtYkltYWdle2Zsb2F0OmxlZnQ7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6NTBweDtoZWlnaHQ6NTBweDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LmxlZ2FjeUltbWVyc2l2ZVZpZXcgLml2VGh1bWJWaWRlb0xpc3RPdXRlcntmbG9hdDpsZWZ0O3dpZHRoOjEwMCU7cGFkZGluZy10b3A6NXB4O3BhZGRpbmctYm90dG9tOjVweDtjdXJzb3I6cG9pbnRlcn0ubGVnYWN5SW1tZXJzaXZlVmlldyAuaXZUaHVtYlZpZGVvTGlzdE91dGVyOmhvdmVye2JhY2tncm91bmQtY29sb3I6I0VBRjNGRH0ubGVnYWN5SW1tZXJzaXZlVmlldyAuaXZUaHVtYlZpZGVvTGlzdHtib3JkZXI6MXB4IHNvbGlkICNkZGQ7ZmxvYXQ6bGVmdDttYXJnaW4tbGVmdDoxMHB4O21hcmdpbi1yaWdodDoxMHB4O2N1cnNvcjpwb2ludGVyO3BhZGRpbmc6MXB4fS5sZWdhY3lJbW1lcnNpdmVWaWV3IC5pdlRodW1iVGV4dHtmbG9hdDpsZWZ0O3dvcmQtd3JhcDpicmVhay13b3JkO3dpZHRoOjEzMHB4O21hcmdpbi10b3A6MTBweDtmb250LWZhbWlseTp2ZXJkYW5hLGFyaWFsLGhlbHZldGljYSxzYW5zLXNlcmlmO2ZvbnQtc2l6ZToxMXB4fS5sZWdhY3lJbW1lcnNpdmVWaWV3IC5pdlRodW1iVGV4dDpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNFQUYzRkR9LmxlZ2FjeUltbWVyc2l2ZVZpZXcgLml2VmFyaWF0aW9uc3twYWRkaW5nLXRvcDoxMHB4O3BhZGRpbmctYm90dG9tOjNweDtmb250LWZhbWlseTp2ZXJkYW5hLGFyaWFsLGhlbHZldGljYSxzYW5zLXNlcmlmO2ZvbnQtc2l6ZToxMXB4O2NvbG9yOiM2NjZ9LmxlZ2FjeUltbWVyc2l2ZVZpZXcgLml2Um93e2hlaWdodDo3NXB4fS5sZWdhY3lJbW1lcnNpdmVWaWV3IC5pdkNsZWFyZml4e2NsZWFyOmJvdGh9LmxlZ2FjeUltbWVyc2l2ZVZpZXcgLml2VGh1bWJWaWRlb1BvcG92ZXJ7Zm9udC1mYW1pbHk6dmVyZGFuYSxhcmlhbCxoZWx2ZXRpY2Esc2Fucy1zZXJpZjtmb250LXNpemU6MTFweH0ubGVnYWN5SW1tZXJzaXZlVmlldyAjaXZTdGFnZXtmbG9hdDpsZWZ0O2hlaWdodDoxMDAlO21hcmdpbi1sZWZ0OjE1cHh9LmxlZ2FjeUltbWVyc2l2ZVZpZXcgI2l2TGFyZ2VJbWFnZXtvdmVyZmxvdzpoaWRkZW47d2lkdGg6MTAwJTthbGlnbjpjZW50ZXI7cG9zaXRpb246cmVsYXRpdmU7aGVpZ2h0OjEwMCV9LmxlZ2FjeUltbWVyc2l2ZVZpZXcgI2l2TGFyZ2VWaWRlb3tvdmVyZmxvdzpoaWRkZW47d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTt0ZXh0LWFsaWduOmNlbnRlcn0jaW1hZ2VCbG9jay5zaG93LWJhbm5lcnttYXgtaGVpZ2h0OjYwMHB4IWltcG9ydGFudH0jYmFubmVyLW91dGVyLWNvbnRhaW5lcntwYWRkaW5nLWxlZnQ6MTlweH0jaW1hZ2VfYmxvY2tfdmlkZW9fYmFubmVyLCNpbW1lcnNpdmVfdmlld192aWRlb19iYW5uZXJ7aGVpZ2h0OjYwcHg7dmlzaWJpbGl0eTpoaWRkZW47bWFyZ2luOmF1dG87bWFyZ2luLWJvdHRvbTo1cHg7d2lkdGg6MTAwJTttYXJnaW4tdG9wOi03cHh9I2ltYWdlX2Jsb2NrX3ZpZGVvX2Jhbm5lci5zaG93LWJhbm5lciwjaW1tZXJzaXZlX3ZpZXdfdmlkZW9fYmFubmVyLnNob3ctYmFubmVye3Zpc2liaWxpdHk6dmlzaWJsZX0jaW1hZ2VfYmxvY2tfdmlkZW9fYmFubmVyIGEsI2ltbWVyc2l2ZV92aWV3X3ZpZGVvX2Jhbm5lciBhe2Rpc3BsYXk6aW5saW5lLWJsb2NrO2N1cnNvcjpwb2ludGVyO3Bvc2l0aW9uOnJlbGF0aXZlO2hlaWdodDoxMDAlO3dpZHRoOjEwMCU7YmFja2dyb3VuZDojMDAwO2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjEwcHg7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czoxMHB4fSNpbWFnZV9ibG9ja192aWRlb19iYW5uZXIgYT5kaXY6Zmlyc3Qtb2YtdHlwZSwjaW1tZXJzaXZlX3ZpZXdfdmlkZW9fYmFubmVyIGE+ZGl2OmZpcnN0LW9mLXR5cGV7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO3BhZGRpbmctbGVmdDoxMHB4O3BhZGRpbmctdG9wOjdweH0jaW1hZ2VfYmxvY2tfdmlkZW9fYmFubmVyIGltZyNpbWFnZS1ibG9jay1iYW5uZXIsI2ltbWVyc2l2ZV92aWV3X3ZpZGVvX2Jhbm5lciBpbWcjaW1hZ2UtYmxvY2stYmFubmVye2hlaWdodDo0NXB4fSNpbWFnZV9ibG9ja192aWRlb19iYW5uZXIgLmlidi1iYW5uZXItY2FwdGlvbnMsI2ltbWVyc2l2ZV92aWV3X3ZpZGVvX2Jhbm5lciAuaWJ2LWJhbm5lci1jYXB0aW9uc3twb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtyaWdodDowO2JvdHRvbTowO21hcmdpbjphdXRvO2hlaWdodDoxZW07cGFkZGluZy1yaWdodDoxMHB4fSNpbWFnZV9ibG9ja192aWRlb19iYW5uZXIgYSAuaWJ2LWJhbm5lci1jYXB0aW9ucyBzcGFuLCNpbW1lcnNpdmVfdmlld192aWRlb19iYW5uZXIgYSAuaWJ2LWJhbm5lci1jYXB0aW9ucyBzcGFue2NvbG9yOiNmZmYhaW1wb3J0YW50O2ZvbnQtc2l6ZToxNHB4IWltcG9ydGFudDtsaW5lLWhlaWdodDoxLjIhaW1wb3J0YW50fSNpbWFnZV9ibG9ja192aWRlb19iYW5uZXIgdmlkZW97dmlzaWJpbGl0eTpoaWRkZW59I2ltYWdlQmxvY2sgI21haW4taW1hZ2UtY29udGFpbmVyLnNob3ctYmFubmVyLC5idXJqICNpbWFnZUJsb2NrICNtYWluLWltYWdlLWNvbnRhaW5lci5zaG93LWJhbm5lcnttYXgtaGVpZ2h0OjYwMHB4IWltcG9ydGFudH0jaXZMYXJnZVZpZGVvLnNob3ctYmFubmVye292ZXJmbG93OmluaXRpYWx9QG1lZGlhIHNjcmVlbiBhbmQgKG1heC1oZWlnaHQ6NzY4cHgpeyNpbWFnZUJsb2NrLnNob3ctYmFubmVyICNtYWluLWltYWdlLWNvbnRhaW5lciwuYnVyaiAjaW1hZ2VCbG9jay5zaG93LWJhbm5lciAjbWFpbi1pbWFnZS1jb250YWluZXJ7bWF4LWhlaWdodDo0MzBweCFpbXBvcnRhbnR9I2ltYWdlQmxvY2suc2hvdy1iYW5uZXJ7bWF4LWhlaWdodDo0MzBweCFpbXBvcnRhbnR9fUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDoxMDc1cHgpeyNpbWFnZV9ibG9ja192aWRlb19iYW5uZXIgYT5kaXY6Zmlyc3Qtb2YtdHlwZSwjaW1tZXJzaXZlX3ZpZXdfdmlkZW9fYmFubmVyIGE+ZGl2OmZpcnN0LW9mLXR5cGV7Ym90dG9tOjA7cmlnaHQ6MDtwYWRkaW5nLWxlZnQ6MH0jaW1hZ2VfYmxvY2tfdmlkZW9fYmFubmVyIC5pYnYtYmFubmVyLWNhcHRpb25zLCNpbW1lcnNpdmVfdmlld192aWRlb19iYW5uZXIgLmlidi1iYW5uZXItY2FwdGlvbnN7ZGlzcGxheTpub25lfX0jYWx0SW1hZ2VzIC52aWRlb0Jsb2NrSW5ncmVzcyAudmlkZW8tY291bnR7Zm9udC1zaXplOjlweCFpbXBvcnRhbnQ7dGV4dC1hbGlnbjpjZW50ZXI7d2lkdGg6NDBweDtwYWRkaW5nLXRvcDoycHh9I2ltYWdlQmxvY2sgI21haW4taW1hZ2UtY29udGFpbmVyICN2aWRlb0NhcHRpb24gYS5tb3JlLXZpZGVvcy5hLWRlY2xhcmF0aXZle21hcmdpbi10b3A6NXB4fSNpdi10YWItdmlldy1jb250YWluZXIgLml2LWJveHtkaXNwbGF5OmJsb2NrO2JhY2tncm91bmQtY29sb3I6I2ZmZn0jaXYtdGFiLXZpZXctY29udGFpbmVyIC5pdi1ib3ggLml2LWJveC1pbm5lcntwb3NpdGlvbjpyZWxhdGl2ZX0jaXYtdGFiLXZpZXctY29udGFpbmVyIC5pdi1ib3gtdGFie2Rpc3BsYXk6bm9uZX0jaXYtdGFiLXZpZXctY29udGFpbmVyIHVsLml2LXRhYi12aWV3c3ttYXJnaW46MCAxNXB4O2xpc3Qtc3R5bGUtdHlwZTpub25lO2JvcmRlci1ib3R0b206MnB4IHNvbGlkICNFN0U3RTc7cGFkZGluZzowIDE1cHg7aGVpZ2h0OjQ1cHh9I2l2LXRhYi12aWV3LWNvbnRhaW5lciB1bC5pdi10YWItdmlld3M6YmVmb3JlLCNpdi10YWItdmlldy1jb250YWluZXIgdWwuaXYtdmlld3M6YWZ0ZXJ7ZGlzcGxheTp0YWJsZTtjb250ZW50OlwiXCI7bGluZS1oZWlnaHQ6MDtmb250LXNpemU6MH0jaXYtdGFiLXZpZXctY29udGFpbmVyIHVsLml2LXRhYi12aWV3czphZnRlcntjbGVhcjpib3RofSNpdi10YWItdmlldy1jb250YWluZXIgdWwuaXYtdGFiLXZpZXdzIC5pdi10YWItaGVhZGluZywjaXYtdGFiLXZpZXctY29udGFpbmVyIHVsLml2LXRhYi12aWV3cyBsaXtmbG9hdDpsZWZ0O2xpc3Qtc3R5bGUtdHlwZTpub25lO2hlaWdodDo0NXB4fSNpdi10YWItdmlldy1jb250YWluZXIgdWwuaXYtdGFiLXZpZXdzIC5pdi10YWItaGVhZGluZyBhLCNpdi10YWItdmlldy1jb250YWluZXIgdWwuaXYtdGFiLXZpZXdzIGxpIGF7LXdlYmtpdC10cmFuc2l0aW9uOmFsbCAuMXMgbGluZWFyO3RyYW5zaXRpb246YWxsIC4xcyBsaW5lYXI7dGV4dC1kZWNvcmF0aW9uOm5vbmU7bGluZS1oZWlnaHQ6MjBweDtoZWlnaHQ6NDVweDtmb250LXNpemU6MTVweDtwYWRkaW5nOjE1cHggMDttYXJnaW46MCAxNXB4O2Rpc3BsYXk6YmxvY2s7Ym9yZGVyLWJvdHRvbToycHggc29saWQgdHJhbnNwYXJlbnQ7cG9zaXRpb246cmVsYXRpdmU7Y29sb3I6IzZDNzc3OH0jaXYtdGFiLXZpZXctY29udGFpbmVyIHVsLml2LXRhYi12aWV3cyAuaXYtdGFiLWhlYWRpbmcgYTphZnRlciwjaXYtdGFiLXZpZXctY29udGFpbmVyIHVsLml2LXRhYi12aWV3cyBsaSBhOmFmdGVye2NvbnRlbnQ6XCJcIjt3aWR0aDoxMDAlO2hlaWdodDoxcHg7cG9zaXRpb246YWJzb2x1dGU7Ym90dG9tOjA7bGVmdDowOy13ZWJraXQtdHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIC4xcyBsaW5lYXI7dHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIC4xcyBsaW5lYXJ9I2l2LXRhYi12aWV3LWNvbnRhaW5lciB1bC5pdi10YWItdmlld3MgLml2LXRhYi1oZWFkaW5nIGE6aG92ZXIsI2l2LXRhYi12aWV3LWNvbnRhaW5lciB1bC5pdi10YWItdmlld3MgbGkgYTpob3Zlcntib3JkZXItdG9wLWNvbG9yOnRyYW5zcGFyZW50O3RleHQtZGVjb3JhdGlvbjpub25lO2NvbG9yOiMwMDJGMzZ9I2l2LXRhYi12aWV3LWNvbnRhaW5lciB1bC5pdi10YWItdmlld3MgLml2LXRhYi1oZWFkaW5nLml2LWFjdGl2ZSBhLCNpdi10YWItdmlldy1jb250YWluZXIgdWwuaXYtdGFiLXZpZXdzIGxpLml2LWFjdGl2ZSBhe2JvcmRlci1jb2xvcjojRkY4RjAwO2JhY2tncm91bmQtY29sb3I6I2ZmZjtjb2xvcjojMDAyRjM2O2ZvbnQtd2VpZ2h0OjQwMDtoZWlnaHQ6NDVweH0jaXYtdGFiLXZpZXctY29udGFpbmVyIHVsLml2LXRhYi12aWV3cyAuaXYtdGFiLWhlYWRpbmcuaXYtYWN0aXZlIGE6aG92ZXI6YWZ0ZXIsI2l2LXRhYi12aWV3LWNvbnRhaW5lciB1bC5pdi10YWItdmlld3MgbGkuaXYtYWN0aXZlIGE6aG92ZXI6YWZ0ZXJ7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH0jaXYtdGFiLXZpZXctY29udGFpbmVyIC5wbGFjZWhvbGRlcntkaXNwbGF5Om5vbmUhaW1wb3J0YW50fSNpdi10YWItdmlldy1jb250YWluZXIgLmZ1bGxzY3JlZW57bWF4LXdpZHRoOm5vbmUhaW1wb3J0YW50fSNpdi10YWItdmlldy1jb250YWluZXIgI2l2TWFpbiwjaXYtdGFiLXZpZXctY29udGFpbmVyICNpdk1haW4zNjB7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtkaXNwbGF5OmJsb2NrfSNpdi10YWItdmlldy1jb250YWluZXIgI2l2VGh1bWJDb2x1bW4sI2l2LXRhYi12aWV3LWNvbnRhaW5lciAjaXZUaHVtYkNvbHVtbjM2MHtmbG9hdDpyaWdodDt3aWR0aDoyODBweH0jaXYtdGFiLXZpZXctY29udGFpbmVyICNpdlRpdGxlLCNpdi10YWItdmlldy1jb250YWluZXIgI2l2VGl0bGUzNjB7Y29sb3I6IzExMTt0ZXh0LWFsaWduOmxlZnQ7bWFyZ2luLXRvcDozMHB4O2ZvbnQtZmFtaWx5OnZlcmRhbmEsYXJpYWwsaGVsdmV0aWNhLHNhbnMtc2VyaWY7Zm9udC1zaXplOjE3cHg7d29yZC13cmFwOmJyZWFrLXdvcmQ7d2lkdGg6MjgwcHg7cGFkZGluZy1yaWdodDoxNXB4fSNpdi10YWItdmlldy1jb250YWluZXIgI2l2VmFyaWF0aW9uU2VsZWN0aW9uLCNpdi10YWItdmlldy1jb250YWluZXIgI2l2VmFyaWF0aW9uU2VsZWN0aW9uMzYwe3RleHQtYWxpZ246bGVmdDtwYWRkaW5nLXJpZ2h0OjE1cHh9I2l2LXRhYi12aWV3LWNvbnRhaW5lciAjaXZUaHVtYnMsI2l2LXRhYi12aWV3LWNvbnRhaW5lciAjaXZUaHVtYnMzNjB7d2lkdGg6MjgwcHg7aGVpZ2h0OjI5MHB4O3BhZGRpbmctdG9wOjE1cHg7cGFkZGluZy1ib3R0b206MTVweDtvdmVyZmxvdy15OmF1dG87bWFyZ2luLWJvdHRvbToxNXB4O3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDowO2xlZnQ6MH0jaXYtdGFiLXZpZXctY29udGFpbmVyICNpdlRodW1icy5ub01lZGlhU2VsZWN0aW9uLCNpdi10YWItdmlldy1jb250YWluZXIgI2l2VGh1bWJzMzYwLm5vTWVkaWFTZWxlY3Rpb257bWFyZ2luLXRvcDoxNXB4O2JvcmRlci10b3A6MXB4IHNvbGlkICNDOUUxRjR9I2l2LXRhYi12aWV3LWNvbnRhaW5lciAuaXZUaHVtYntib3JkZXI6MnB4IHNvbGlkICNENURCREI7ZmxvYXQ6bGVmdDttYXJnaW46MCAxNXB4IDE1cHggMDtjdXJzb3I6cG9pbnRlcn0jaXYtdGFiLXZpZXctY29udGFpbmVyIC5pdlRodW1iLnNlbGVjdGVkLCNpdi10YWItdmlldy1jb250YWluZXIgLml2VGh1bWIuc2VsZWN0ZWQ6aG92ZXJ7Ym9yZGVyOjJweCBzb2xpZCAjRkY4RjAwO3BhZGRpbmc6MH0jaXYtdGFiLXZpZXctY29udGFpbmVyIC5pdlRodW1iOmhvdmVye2JvcmRlcjoycHggc29saWQgIzAwNEI5MTtwYWRkaW5nOjB9I2l2LXRhYi12aWV3LWNvbnRhaW5lciAuaXZUaHVtYkltYWdle2Zsb2F0OmxlZnQ7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6NTBweDtoZWlnaHQ6NTBweDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9I2l2LXRhYi12aWV3LWNvbnRhaW5lciAuaXZUaHVtYlRleHR7ZmxvYXQ6bGVmdDt3b3JkLXdyYXA6YnJlYWstd29yZDt3aWR0aDoxMzBweDttYXJnaW4tdG9wOjEwcHg7Zm9udC1mYW1pbHk6dmVyZGFuYSxhcmlhbCxoZWx2ZXRpY2Esc2Fucy1zZXJpZjtmb250LXNpemU6MTFweH0jaXYtdGFiLXZpZXctY29udGFpbmVyIC5pdlRodW1iVGV4dDpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNFQUYzRkR9I2l2LXRhYi12aWV3LWNvbnRhaW5lciAuaXZWYXJpYXRpb25ze3BhZGRpbmctdG9wOjEwcHg7cGFkZGluZy1ib3R0b206M3B4O2ZvbnQtZmFtaWx5OnZlcmRhbmEsYXJpYWwsaGVsdmV0aWNhLHNhbnMtc2VyaWY7Zm9udC1zaXplOjEycHg7Y29sb3I6Izc2NzY3Nn0jaXYtdGFiLXZpZXctY29udGFpbmVyIC5pdlJvd3toZWlnaHQ6NjVweH0jaXYtdGFiLXZpZXctY29udGFpbmVyIC5pdkNsZWFyZml4e2NsZWFyOmJvdGh9I2l2LXRhYi12aWV3LWNvbnRhaW5lciAjaXZTdGFnZSwjaXYtdGFiLXZpZXctY29udGFpbmVyICNpdlN0YWdlMzYwe2Zsb2F0OmxlZnQ7aGVpZ2h0OjEwMCU7cGFkZGluZy1yaWdodDoxNXB4fSNpdi10YWItdmlldy1jb250YWluZXIgI2l2TGFyZ2VJbWFnZXtvdmVyZmxvdzpoaWRkZW47d2lkdGg6MTAwJTthbGlnbjpjZW50ZXI7cG9zaXRpb246cmVsYXRpdmU7aGVpZ2h0OjEwMCV9I2l2LXRhYi12aWV3LWNvbnRhaW5lciAuaXYtYm94LWlubmVye2hlaWdodDoxMDAlfSNpdi10YWItdmlldy1jb250YWluZXIgI2l2VmlkZW9CbG9ja3twYWRkaW5nOjI1cHggMDtoZWlnaHQ6MTAwJX1cbiNwcm9kRGV0YWlscyAucHJvZERldFRhYmxle3RhYmxlLWxheW91dDpmaXhlZDtib3JkZXItc3BhY2luZzowO3BhZGRpbmc6MH0jcHJvZERldGFpbHMgLnByb2REZXRMYWJlbHtiYWNrZ3JvdW5kLWNvbG9yOiNGNUY1RjU7d2lkdGg6MzUlO2NvbG9yOiM2NjY7dmVydGljYWwtYWxpZ246dG9wfSNwcm9kRGV0YWlscyAucHJvZERldFNlY3Rpb25FbnRyeXt3aWR0aDo1MCUhaW1wb3J0YW50O3doaXRlLXNwYWNlOm5vcm1hbDt3b3JkLXdyYXA6YnJlYWstd29yZH0jcHJvZERldGFpbHMgLnByb2REZXQtZXhwYW5kZXItaGVhZGVye2Zsb2F0OnJpZ2h0fSNwcm9kRGV0YWlscyAucHJvZERldC1zdW1tYXJ5VGV4dC12aXNpYmxle2Rpc3BsYXk6bm9uZX0jcHJvZERldGFpbHMgLnByb2REZXQtaGVhZGluZy1hbGlnbm1lbnR7ZmxvYXQ6bGVmdH0udWlsbS1zZWN0aW9uIGltZ3tkaXNwbGF5OmJsb2NrO21hcmdpbjowIGF1dG87bWluLXdpZHRoOjY1MHB4fSNtZWRzbG9nb19oZWFkZXJfd2Vie3BhZGRpbmctYm90dG9tOjA7Y29sb3I6I0M2MDtmb250LXNpemU6bWVkaXVtO2ZvbnQtZmFtaWx5OnZlcmRhbmEsYXJpYWwsaGVsdmV0aWNhLHNhbnMtc2VyaWZ9LmJ1cmotYm9keSAjbWVkc2xvZ29faGVhZGVyX3dlYntjb2xvcjojMzMzO2ZvbnQtd2VpZ2h0OjQwMDtwYWRkaW5nLWJvdHRvbTowO2ZvbnQtc2l6ZToyMXB4O2ZvbnQtZmFtaWx5OmFyaWFsLHZlcmRhbmEsaGVsdmV0aWNhLHNhbnMtc2VyaWZ9I21sbFN0YXRpY0xlYXJuTW9yZXtwYWRkaW5nLWxlZnQ6MTRweH0jbWxsLXRhYi1kaXZpZGVye3BhZGRpbmctdG9wOjMwcHh9I21lZHNMZWdhbExvZ29fZmVhdHVyZV9kaXZ7bWFyZ2luLWJvdHRvbToxNHB4IWltcG9ydGFudH0jZW5lcmd5RWZmaWNpZW5jeUxhYmVse2Rpc3BsYXk6aW5saW5lLWJsb2NrO3dpZHRoOjUwcHg7aGVpZ2h0OjIzcHh9LmVuZXJneUVmZmljaWVuY3lBcnJvd3twb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDozNnB4O2hlaWdodDoyMnB4O21hcmdpbi1yaWdodDoyMnB4O2NvbG9yOiNGRkY7dGV4dC1hbGlnbjpjZW50ZXI7bGluZS1oZWlnaHQ6MjJweDtmb250LXNpemU6MTVweH0uZW5lcmd5RWZmaWNpZW5jeUFycm93OmFmdGVye2NvbnRlbnQ6XCJcIjtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjEwMCU7dG9wOjA7d2lkdGg6MDtoZWlnaHQ6MDtib3JkZXItdG9wOjExcHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLWxlZnQtd2lkdGg6MTBweDtib3JkZXItbGVmdC1zdHlsZTpzb2xpZDtib3JkZXItYm90dG9tOjExcHggc29saWQgdHJhbnNwYXJlbnR9LmVuZXJneUVmZmljaWVuY3lTeW1ib2x7cG9zaXRpb246cmVsYXRpdmU7dG9wOi0ycHh9LmVuZXJneUVmZmljaWVuY3lUZXh0UGxhY2VtZW50e3Bvc2l0aW9uOnJlbGF0aXZlO2xlZnQ6MnB4fS50ZWNobmljYWxEYXRhIC5oM2NvbG9yLC50ZWNobmljYWxEYXRhIGZvbnQsLnRlY2huaWNhbERhdGEgdWx7Y29sb3I6IzMzMyFpbXBvcnRhbnR9LnRlY2huaWNhbERhdGEgYiwudGVjaG5pY2FsRGF0YSBzdHJvbmd7Zm9udC13ZWlnaHQ6NDAwIWltcG9ydGFudH0jZGVhbHByaWNlX3NoaXBwaW5nbWVzc2FnZSBpLmEtaWNvbi5hLWljb24tcG9wb3Zlciwjb3VycHJpY2Vfc2hpcHBpbmdtZXNzYWdlIGkuYS1pY29uLmEtaWNvbi1wb3BvdmVyLCNzYWxlcHJpY2Vfc2hpcHBpbmdtZXNzYWdlIGkuYS1pY29uLmEtaWNvbi1wb3BvdmVyLC5idXlib3hTaGlwcGluZ0xhYmVsIGkuYS1pY29uLmEtaWNvbi1wb3BvdmVye2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnR9XG4jV0xORVdfc2VjdGlvbl93bFR5cGUgLmEtYm94e21pbi1oZWlnaHQ6MTE1cHh9I1dMTkVXX3NlY3Rpb25fd2xUeXBlIC50eXBlLXJhZGlvLWNvbnRlbnRze21hcmdpbi1sZWZ0OjB9I1dMTkVXX3NlY3Rpb25fd2xUeXBlIC5hLWljb24tcmFkaW97dmVydGljYWwtYWxpZ246dG9wO21hcmdpbi1yaWdodDo1cHg7bWFyZ2luLWxlZnQ6LTVweH0jV0xORVdfb2NjX21vbnRoe21hcmdpbi1yaWdodDoxMHB4fS5wcml2YWN5X2J1dHRvbnNfbWFyZ2lue21hcmdpbi1sZWZ0OjAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206NXB4IWltcG9ydGFudH0uZml4LXdpZHRoLXgtbGFyZ2V7d2lkdGg6MjkzcHghaW1wb3J0YW50fS5maXgtd2lkdGgtbGFyZ2V7d2lkdGg6MTUwcHghaW1wb3J0YW50fSNXTE5FV19zZWN0aW9uX3dsVHlwZSAuYS1pY29uLXJhZGlve21hcmdpbi10b3A6MnB4fVxuI2F0d2wtcG9wb3Zlci1pbm5lcnttYXgtaGVpZ2h0OjIyMHB4O292ZXJmbG93LXk6YXV0bztvdmVyZmxvdy14OmhpZGRlbjtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MH0jYXR3bC1wb3BvdmVyLWlubmVyIGxpe3Bvc2l0aW9uOnJlbGF0aXZlfS5hdHdsLWRkLWxpc3QtbmFtZXtkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDoxNzBweDtoZWlnaHQ6MTNweDtsaW5lLWhlaWdodDoxM3B4O292ZXJmbG93OmhpZGRlbjt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0uYXR3bC1kZC1saXN0LW5hbWUta2Jwe3dpZHRoOjEzM3B4fS5hdHdsLWRkLWxpc3QtcHJpdmFjeXtkaXNwbGF5OmlubGluZS1ibG9jaztwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDozcHg7dG9wOjEycHh9LmF0d2wtZGQtbGlzdC1wcml2YWN5LmEtc2l6ZS1taW5pe2xpbmUtaGVpZ2h0OjRweCFpbXBvcnRhbnR9I2F0d2wtcmljaC1jb250ZW50e3BhZGRpbmc6MTRweCAxOHB4O2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowO2JvcmRlci1sZWZ0LXdpZHRoOjA7Ym9yZGVyLXJpZ2h0LXdpZHRoOjA7bWFyZ2luLWJvdHRvbTowfSNhdHdsLXJpY2gtY29udGVudC1kaXZpZGVye21hcmdpbi10b3A6MTBweH0ja2JwLXByb21ve2Rpc3BsYXk6YmxvY2s7bWFyZ2luLWJvdHRvbToxMHB4fS5hdHdsLWJ1dHRvbnt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLWxlZnQ6MTBweH0uYXR3bC1idXR0b24td2lkZXt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7ZGlzcGxheTpibG9jazttYXJnaW4tYm90dG9tOjEwcHh9LmF0d2wtYnV0dG9uLXdpZGUgI3dpc2hMaXN0RHJvcERvd24gLmEtYnV0dG9uLXRleHR7cGFkZGluZzowfSNhdHdsLWVycm9yLWhvbGRlcnt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9LmF0d2wtdGV4dHtkaXNwbGF5OmlubGluZS1ibG9jazttYXgtd2lkdGg6MTUwcHg7d2hpdGUtc3BhY2U6bm93cmFwO292ZXJmbG93OmhpZGRlbjt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO3ZlcnRpY2FsLWFsaWduOm1pZGRsZX1kaXZbY2xhc3N+PWF0d2wtdGV4dC13aGl0ZV0gc3Bhbntjb2xvcjojZmZmO3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmV9LmF0d2wtdGV4dC13aGl0ZXtjb2xvcjojZmZmfS5hdHdsLXRleHQtYmxhY2t7Y29sb3I6IzAwMH1zcGFuLnV3bC1yZXNwb25zZS10ZXh0PmEsc3Bhbi51d2wtcmVzcG9uc2UtdGV4dD5zcGFue2ZvbnQtc2l6ZToxMzttYXJnaW4tbGVmdDo1cHh9LnV3bC1yZXNwb25zZS10ZXh0e2Rpc3BsYXk6aW5saW5lLWJsb2NrO21heC13aWR0aDoyMTBweDt3aGl0ZS1zcGFjZTpub3dyYXA7b3ZlcmZsb3c6aGlkZGVuO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7dmVydGljYWwtYWxpZ246bWlkZGxlO21hcmdpbi10b3A6LTVweH0uaW5saW5le2Rpc3BsYXk6aW5saW5lLWJsb2NrfS50ZXh0LW5vcm1hbHt0ZXh0LWRlY29yYXRpb246bm9uZSFpbXBvcnRhbnR9LmF1aS1saW5re2NvbG9yOiMwMDY2YzAhaW1wb3J0YW50O3RleHQtZGVjb3JhdGlvbjpub25lIWltcG9ydGFudH0uYXVpLWxpbms6aG92ZXJ7Y29sb3I6I2U0NzkxMSFpbXBvcnRhbnQ7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSFpbXBvcnRhbnR9I2F0d2wtaW5saW5lLWxpbmstdGV4dHtwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6MXB4fSN3bC1pbmxpbmUtd3JhcHBlciAjd2lzaExpc3REcm9wRG93bntib3JkZXI6bm9uZX0ud3ItbW9kYWwtYWRkLXRvLXJlZy1hY3Rpb24tYnV0dG9ue21hcmdpbi10b3A6OHB4O3dpZHRoOjEwMCV9LndyLW1vZGFsLWFkZC10by1yZWctcHJvZHVjdC1wcmljZXttYXJnaW4tcmlnaHQ6MjBweDtjb2xvcjojYjEyNzA0fS53ci1tb2RhbC1hZGQtdG8tcmVnLXByb2R1Y3QtcHJpbWUtaWNvbnt2ZXJ0aWNhbC1hbGlnbjp0b3B9LndyLW1vZGFsLWFkZC10by1yZWctcmVjLWl0ZW0tdGl0bGV7ZGlzcGxheTpibG9jaztkaXNwbGF5Oi13ZWJraXQtYm94O2xpbmUtaGVpZ2h0OjE2cHg7aGVpZ2h0OjMycHg7d2lkdGg6MTUwcHg7bWFyZ2luLWJvdHRvbTowOy13ZWJraXQtbGluZS1jbGFtcDoyOy13ZWJraXQtYm94LW9yaWVudDp2ZXJ0aWNhbDtvdmVyZmxvdzpoaWRkZW47dGV4dC1vdmVyZmxvdzplbGxpcHNpc30ud3ItbW9kYWwtYWRkLXRvLXJlZy1yZWMtaXRlbS1kZXRhaWwtaW5mb3t3aWR0aDoxNTBweDttYXJnaW46NXB4IDB9LndyLW1vZGFsLWFkZC10by1yZWctcmVjLWl0ZW0taW1hZ2Utd3JhcHBlcnt3aWR0aDoxNTBweDtoZWlnaHQ6MTUwcHh9LndyLW1vZGFsLWFkZC10by1yZWctcmVjLWJ1dHRvbnt3aWR0aDoxNTBweH0ud3ItbW9kYWwtYWRkLXRvLXJlZy1wcmltYXJ5LXByb2R1Y3QtZGV0YWlse3BhZGRpbmc6MCAyNXB4fS53ci1tb2RhbC1hZGQtdG8tcmVnLXByb2R1Y3QtdmFyaWF0aW9ue3BhZGRpbmctcmlnaHQ6MTVweDtmb250LXdlaWdodDo3MDB9LndyLW1vZGFsLWFkZC10by1yZWctcHJvZHVjdC12YXJpYXRpb24tbGFiZWx7Zm9udC13ZWlnaHQ6NDAwfSN3ci1tb2RhbC1hZGQtdG8tcmVnLXdyYXBwZXJ7bWluLXdpZHRoOjQ1MHB4fS5hdHdsLWh6LWRkLWxpc3QtbmFtZXt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3doaXRlLXNwYWNlOm5vd3JhcDtvdmVyZmxvdzpoaWRkZW59LmF0d2wtaHotZGQtbGlzdC1wcml2YWN5e2Rpc3BsYXk6YmxvY2t9LmF0d2wtaHotZGQtaW1hZ2V7d2lkdGg6MzBweDtoZWlnaHQ6MzBweH0uYXR3bC1oei1kZC1pbWFnZS1jaXJjbGV7Ym9yZGVyLXJhZGl1czo1MCV9LmF0d2wtaHotZGQtaW1hZ2UtZW1wdHl7Ym9yZGVyOjFweCBkYXNoZWQgIzc2NzY3Nn0uYXR3bC1oei1wb3BvdmVyLXNlY29uZGFyeS10aXRsZXttYXJnaW4tYm90dG9tOjZweDttYXJnaW4tbGVmdDoxMHB4fS5hdHdsLWh6LXBvcG92ZXItc2Vjb25kYXJ5e2xpbmUtaGVpZ2h0OjEhaW1wb3J0YW50fS5hdHdsLWh6LXBvcG92ZXItZGl2aWRlci1zZWN0aW9ue21hcmdpbjoxMHB4IDEwcHggNnB4IDEwcHh9LmF0d2wtaHotcmljaC1jb250ZW50LXBsdXMtaWNvbntmb250LXNpemU6MzBweCFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0OjEwcHh9LmF0d2wtaHotdmVydGljYWwtYWxpZ24tbWlkZGxle3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0jd2wtaHVjLWltYWdlLWhvbGRlcnttYXgtd2lkdGg6MTAwcHg7bWF4LWhlaWdodDoxMDBweH0uYnItc21vZGFsLWl0ZW0tZGV0YWlsc3tkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDoxMTAwcHg7aGVpZ2h0OjE1MHB4O21hcmdpbi1ib3R0b206NXB4fS5ici1zbW9kYWwtaXRlbS1kZXRhaWxzLWltYWdle2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1yaWdodDoyNXB4O3dpZHRoOjE1MHB4O2hlaWdodDoxNTBweDt2ZXJ0aWNhbC1hbGlnbjp0b3B9LmJyLXNtb2RhbC1pdGVtLWRldGFpbHMtbWFpbi1pbmZve2Rpc3BsYXk6aW5saW5lLWJsb2NrO3dpZHRoOjUwMHB4fS5ici1zbW9kYWwtdXBkYXRlLWl0ZW0tcmVzdWx0LW1lc3NhZ2V7ZGlzcGxheTppbmxpbmUtYmxvY2s7cGFkZGluZy1sZWZ0OjVweH0uYnItc21vZGFsLWl0ZW0tZGV0YWlscy1tb3JlLWl0ZW1ze2Rpc3BsYXk6aW5saW5lLWJsb2NrO3ZlcnRpY2FsLWFsaWduOnRvcDtwYWRkaW5nLXRvcDoxMHB4O2Zsb2F0OnJpZ2h0fS5ici1zbW9kYWwtbW9yZS1pdGVtcy1idG57d2lkdGg6MTkwcHh9LmJyLXNtb2RhbC1tb3JlLWl0ZW1zLWJ0bi1zZWN0aW9ue21hcmdpbi1ib3R0b206MTBweH0uYnItc21vZGFsLWl0ZW0tZGV0YWlscy1pbmZvLXJvd3ttYXJnaW4tYm90dG9tOjVweH0uYnItc21vZGFsLXJlYy1zZWN0aW9ue21hcmdpbi10b3A6MjVweDttYXJnaW4tYm90dG9tOjVweDt3aWR0aDoxMDAwcHh9LmJyLXNtb2RhbC1yZWMtaXRlbS1yb3d7bWFyZ2luLWJvdHRvbTo1cHh9LmJyLXNtb2RhbC1yZWMtaXRlbS1lbGVtZW50e3Bvc2l0aW9uOnJlbGF0aXZlO2hlaWdodDozMDBweH0uYnItc21vZGFsLWl0ZW0tZGV0YWlscy10aXRsZSwuYnItc21vZGFsLXJlYy1pdGVtLXRpdGxle2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTpib3g7Ym94LW9yaWVudDp2ZXJ0aWNhbDstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWw7b3ZlcmZsb3c6aGlkZGVuO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7LXdlYmtpdC1saW5lLWNsYW1wOjJ9LmJyLXNtb2RhbC1yZWMtaXRlbS1zcG9uc29yLXRhZ3toZWlnaHQ6MTVweH0uYnItaXRlbS1zcG9uc29yZWQtdGV4dHtwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6LTRweH0uYnItc21vZGFsLXJlYy1hZGQtdG8tYnItYnRuLXJvd3twb3NpdGlvbjphYnNvbHV0ZTtib3R0b206MH0uYnItc21vZGFsLXJlYy1pbWFnZXtoZWlnaHQ6MTUwcHg7ZGlzcGxheTp0YWJsZS1jZWxsO21hcmdpbi1sZWZ0OmF1dG87bWFyZ2luLXJpZ2h0OmF1dG99LmJyLXNtb2RhbC1yZWMtc3BpbnttYXJnaW4tbGVmdDo2MDBweH1cbi5wdy1hY2NvcmRpb24gLnB3LWFjY29yZGlvbi1yb3d7cGFkZGluZy1yaWdodDo1cHh9LnB3LWFjY29yZGlvbi1oZWFkZXItc3VidGl0bGV7bWFyZ2luLXJpZ2h0OjFweH0ucHctaGlkZGVue2Rpc3BsYXk6bm9uZX0ucHdFbGlnaWJsZUNpdHl7ZGlzcGxheTppbmxpbmUtYmxvY2s7cGFkZGluZzo1cHh9LnB3RWxpZ2libGVDaXR5LnB3RWxpZ2libGVDaXR5TW9iaWxle3dpZHRoOjQ5JX0ucHdFbGlnaWJsZUNpdHkucHdFbGlnaWJsZUNpdHlEZXNrdG9we3dpZHRoOjE3NXB4fS5wd0VsaWdpYmxlQ2l0aWVzUG9wb3ZlclRyaWdnZXIraS5hLWljb24tcG9wb3ZlcntkaXNwbGF5Om5vbmV9LnB3LXBvcG92ZXItd3JhcHBlciAuYS1pY29uLXBvcG92ZXIsLnB3T25ib2FyZGluZ0hpZGV7ZGlzcGxheTpub25lfS5wdy1wb3BvdmVyLXdyYXBwZXIgLmEtZGVjbGFyYXRpdmV7ZGlzcGxheTpibG9ja30ucHdPbmJvYXJkaW5nSGludFBvcG92ZXJJbm5lcntiYWNrZ3JvdW5kOiNmZWJkNjk7d2lkdGg6MjQ0cHg7dGV4dC1hbGlnbjpjZW50ZXI7b3ZlcmZsb3cteTphdXRvIWltcG9ydGFudH0ucHdPbmJvYXJkaW5nSGludFBvcG92ZXJXcmFwcGVye3dpZHRoOjI0NHB4O2hlaWdodDphdXRvfS5wd09uYm9hcmRpbmdIaW50UG9wb3ZlcldyYXBwZXIgLmEtYXJyb3ctYm9yZGVyIC5hLWFycm93e2JvcmRlci10b3AtY29sb3I6I2ZlYmQ2OX0ucHdPbmJvYXJkaW5nSGludENvbnRlbnR7dGV4dC10cmFuc2Zvcm06bm9uZX1cbiNmZ190aXRsZV9zaXppbmdfY2hhcnR7ZGlzcGxheTpub25lO2Zsb2F0OmxlZnQ7d2lkdGg6MTAwJTttYXJnaW4tbGVmdDoxMHB4O21hcmdpbi1yaWdodDoxMHB4fSNmZ19zaXppbmdfdGFic3twb3NpdGlvbjpyZWxhdGl2ZTtoZWlnaHQ6MjZweDt0ZXh0LWFsaWduOmxlZnR9I2ZnX3NpemluZ190YWJzIHVse2xpc3Qtc3R5bGU6bm9uZTtwYWRkaW5nLWxlZnQ6NXB4O21hcmdpbjowO2Zsb2F0OmxlZnR9I2ZnX3NpemluZ190YWJzIHVsIGxpe2xpc3Qtc3R5bGU6bm9uZX0jZmdfc2l6aW5nX3RhYnMgbGl7Y3Vyc29yOnBvaW50ZXI7ZmxvYXQ6bGVmdDttYXJnaW46MDtwYWRkaW5nOjA7Zm9udC13ZWlnaHQ6NDAwO2xpc3QtaXRlbS1zdHlsZTpub25lfSNmZ19zaXppbmdfdGFicyBsaSBkaXZ7cGFkZGluZzo1cHggMTBweCA0cHg7Y29sb3I6IzAzMkU5Nztmb250LXdlaWdodDo0MDB9I2ZnX3NpemluZ190YWJzIGxpLmZnX2hpZ2hsaWdodHtjdXJzb3I6ZGVmYXVsdH0jZmdfc2l6aW5nX3RhYnMgbGkuZmdfaGlnaGxpZ2h0IGRpdntmb250LXdlaWdodDo3MDA7Y29sb3I6I2U0NzkxMTtwYWRkaW5nLWJvdHRvbTo1cHg7Y3Vyc29yOmRlZmF1bHR9I2ZpdC1ndWlkZS10YWJze2Rpc3BsYXk6YmxvY2shaW1wb3J0YW50O3RleHQtYWxpZ246bGVmdDtsaW5lLWhlaWdodDpub3JtYWx9I3NpemluZy1jb250ZW50e2Rpc3BsYXk6YmxvY2s7dGV4dC1hbGlnbjpsZWZ0fSNmaXQtZ3VpZGUtdGFicyAuZml0LWd1aWRlLWNoYXJ0X3RhYmxle21hcmdpbi1sZWZ0OmF1dG87bWFyZ2luLXJpZ2h0OmF1dG87dGV4dC1hbGlnbjpsZWZ0fSNmaXQtZ3VpZGUtY2hhcnQtY29udGVudHMgZGl2e2Rpc3BsYXk6bm9uZX0jZml0LWd1aWRlLWNoYXJ0LWNvbnRlbnRzIC5pZnJhbWUtY29udGFpbmVye3pvb206MTtzY3JvbGxpbmc6eWVzfSNmaXQtZ3VpZGUtY2hhcnQtY29udGVudHMgLmltZy1jb250YWluZXJ7b3ZlcmZsb3c6YXV0b30jc2l6ZS1jaGFydC1lcnJvciwjc2l6ZS1jaGFydC1zcGlubmVye3RleHQtYWxpZ246Y2VudGVyO3BhZGRpbmc6NTBweH0jdGVjaG5pY2FsU3BlY2lmaWNhdGlvbnNfc2VjdGlvbnN7d2lkdGg6NTAlO21hcmdpbi1ib3R0b206MTNweCFpbXBvcnRhbnR9I3RlY2huaWNhbFNwZWNpZmljYXRpb25zX3NlY3Rpb25zIHRkLCN0ZWNobmljYWxTcGVjaWZpY2F0aW9uc19zZWN0aW9ucyB0aHtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjRTBFMEUwO3BhZGRpbmc6NnB4IDEwcHh9I3RlY2huaWNhbFNwZWNpZmljYXRpb25zX3NlY3Rpb25zIHRoe3RleHQtYWxpZ246bGVmdDtwYWRkaW5nLWJvdHRvbTo3cHh9I3RlY2huaWNhbFNwZWNpZmljYXRpb25zX3NlY3Rpb25zIC50ZDF7YmFja2dyb3VuZC1jb2xvcjojRjdGN0Y3O2NvbG9yOiM2NjY7d2lkdGg6MzUlfSN0ZWNobmljYWxTcGVjaWZpY2F0aW9uc19zZWN0aW9ucyAudGQye2NvbG9yOiMzMzN9I3RlY2hzcGVjSGVscFRleHQgdWwsLnRlY2hzcGVjSGVscFRleHQgdWx7Y29sb3I6IzMzMyFpbXBvcnRhbnR9I3RlY2huaWNhbFNwZWNpZmljYXRpb25zX2ZlYXR1cmVfZGl2IC50YWJsZVJvd0NvbGxhcHNlZHtkaXNwbGF5Om5vbmV9I3RlY2huaWNhbFNwZWNpZmljYXRpb25zX2ZlYXR1cmVfZGl2IC50ZWNoU3BlY3NDb2xsYXBzZWQgLnRlY2hTcGVjc0NvbGxhcHNle2Rpc3BsYXk6bm9uZX0jdGVjaG5pY2FsU3BlY2lmaWNhdGlvbnNfZmVhdHVyZV9kaXYgLnRlY2hTcGVjc0V4cGFuZGVkIC50ZWNoU3BlY3NFeHBhbmR7ZGlzcGxheTpub25lfSN0ZWNobmljYWxTcGVjaWZpY2F0aW9uc19mZWF0dXJlX2RpdiBhLnRhYmxldHtjb2xvcjojMDA2NkMwO3RleHQtZGVjb3JhdGlvbjpub25lfSN0ZWNobmljYWxTcGVjaWZpY2F0aW9uc19mZWF0dXJlX2RpdiBhLnRhYmxldC50b3VjaGluZ3tjb2xvcjojRTQ3OTExO3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmV9Lm90aGVyV2F0Y2hPZmZlckluZm97Zm9udC1mYW1pbHk6XCJUaW1lcyBOZXcgUm9tYW5cIixUaW1lcyxzZXJpZjtmb250LXNpemU6MTdweDtjb2xvcjojNjRBN0JGO2ZvbnQtc3R5bGU6aXRhbGljO2ZvbnQtd2VpZ2h0OjcwMH0ub3RoZXJXYXRjaE9mZmVySW1ne21hcmdpbi1sZWZ0OjEwcHg7cGFkZGluZy1yaWdodDo1cHh9Lm90aGVyV2F0Y2hPZmZlclRpdGxle3dvcmQtd3JhcDpicmVhay13b3JkO3dvcmQtYnJlYWs6YnJlYWstYWxsfS53YXJyYW50eUNoZWNrYm94SW5TbWFsbEludGVyc3RpdGlhbHtib3R0b206LTZweDtsZWZ0Oi05MnB4O3Bvc2l0aW9uOnJlbGF0aXZlfS53YXJyYW50eUNoZWNrYm94SW5MYXJnZUludGVyc3RpdGlhbHtib3R0b206LTZweDtsZWZ0Oi0yNDJweDtwb3NpdGlvbjpyZWxhdGl2ZX0jZHAuYXBwYXJlbCAuYS1jb250YWluZXItd2l0aG91dC1wYWRkaW5nLCNkcC5qZXdlbHJ5IC5hLWNvbnRhaW5lci13aXRob3V0LXBhZGRpbmcsI2RwLnNob2VzIC5hLWNvbnRhaW5lci13aXRob3V0LXBhZGRpbmcsI2RwLndhdGNoIC5hLWNvbnRhaW5lci13aXRob3V0LXBhZGRpbmd7bWFyZ2luLXRvcDowIWltcG9ydGFudH0jdGl0bGVCbG9ja3twb3NpdGlvbjpyZWxhdGl2ZX0udGl0bGUtYmxvY2stbGVmdC1zZWN0aW9ue3Bvc2l0aW9uOmFic29sdXRlO2hlaWdodDoxMDAlO3dpZHRoOjE1JX0udGl0bGUtYmxvY2stbGVmdC1zZWN0aW9uICNicmFuZEJ5bGluZV9mZWF0dXJlX2Rpdntwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6NTAlOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTUwJSk7LW1zLXRyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpO3RyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpfS50aXRsZS1ibG9jay1yaWdodC1zZWN0aW9ue21hcmdpbi1sZWZ0OjE4JX0jdmVydGljYWwtZGl2aWRlci1saW5le2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHdoaXRlLCNkM2QzZDMsI2ZmZik7d2lkdGg6MXB4O2hlaWdodDoxMDAlO3Bvc2l0aW9uOmFic29sdXRlO21hcmdpbi1sZWZ0OjE2JX0jY2luZGVyZWxsYUZpdERldGFpbHMgLmNpbmRlcmVsbGFGaXRBdHRyaWJ1dGVLZXl7d2lkdGg6MTM1cHg7cGFkZGluZzo0cHggMH0jY2luZGVyZWxsYUZpdERldGFpbHMuY2luZGVyZWxsYUZpdHtib3JkZXItY29sbGFwc2U6Y29sbGFwc2V9I2NpbmRlcmVsbGFGaXREZXRhaWxzLmNpbmRlcmVsbGFGaXQgLmNpbmRlcmVsbGFGaXROb3RMYXN0IHRke2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNERER9Lm1lYXN1cmVHdWlkZUNlbnRlcmVkSW1hZ2V7dGV4dC1hbGlnbjpjZW50ZXI7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MDtwYWRkaW5nOjB9LmhlaWdodEcyUzJTaXplQ2hhcnRQQ3t3aWR0aDoxMDAlO292ZXJmbG93LXg6YXV0bztvdmVyZmxvdy15Om92ZXJsYXl9LmxlZnRBbGlnbm1lbnR7cGFkZGluZy1sZWZ0OjQlfS5zaXplQ2hhcnRQY0JyYW5kTG9nb3ttYXgtaGVpZ2h0OjYwcHh9I3dyYXBwZXJ7b3ZlcmZsb3c6YXV0b30jdGFiQ29udGVudHtwb3NpdGlvbjpyZWxhdGl2ZX0jc3Bpbm5lckNvbnRhaW5lcntkaXNwbGF5Om5vbmU7ei1pbmRleDoxMDAwO3RvcDowO2xlZnQ6MDtoZWlnaHQ6MTAwJTt3aWR0aDoxMDAlO3Bvc2l0aW9uOmFic29sdXRlO2JhY2tncm91bmQ6cmdiYSgyNTUsMjU1LDI1NSwuOCkgY2VudGVyIDMwcHggbm8tcmVwZWF0fS5yaWdodEFsaWdubWVudHtwYWRkaW5nLXJpZ2h0OjQlfSN0YWJDb250ZW50LmxvYWRpbmdTcGlubmVyU2l6ZUNoYXJ0e292ZXJmbG93OmhpZGRlbn0jdGFiQ29udGVudC5sb2FkaW5nU3Bpbm5lclNpemVDaGFydCAjc3Bpbm5lckNvbnRhaW5lcntkaXNwbGF5OmJsb2NrfS5zZWFyY2gtc3RyaXBlLWNvbnRhaW5lcntwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW46MDtoZWlnaHQ6ODM5cHg7b3ZlcmZsb3c6aGlkZGVuO2JvcmRlci1yaWdodDoxcHggc29saWQgI2RkZH0uc2VhcmNoLXN0cmlwZS1zbGlkZXItY29udGFpbmVye3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEzMHB4O3otaW5kZXg6MjE7b3ZlcmZsb3c6dmlzaWJsZTtiYWNrZ3JvdW5kOiNmZmY7LXdlYmtpdC10cmFuc2l0aW9uOnRyYW5zZm9ybSBsaW5lYXIgLjJzOy1tb3otdHJhbnNpdGlvbjp0cmFuc2Zvcm0gbGluZWFyIC4yczstby10cmFuc2l0aW9uOnRyYW5zZm9ybSBsaW5lYXIgLjJzO3RyYW5zaXRpb246dHJhbnNmb3JtIGxpbmVhciAuMnM7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlWCgtMTAwJSk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlWCgtMTAwJSk7LW8tdHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTEwMCUpO3RyYW5zZm9ybTp0cmFuc2xhdGVYKC0xMDAlKX0uc2VhcmNoLXN0cmlwZS1zbGlkZXItY29udGFpbmVyOmhvdmVyLC5zZWFyY2gtc3RyaXBlLXNsaWRlci1leHBhbmRlZHstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGVYKDApOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZVgoMCk7LW8tdHJhbnNmb3JtOnRyYW5zbGF0ZVgoMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoMCl9LnNlYXJjaC1zdHJpcGUtaXRlbS1saXN0e2hlaWdodDoxMDAlfS5zZWFyY2gtc3RyaXBlLWl0ZW17bGlzdC1zdHlsZS10eXBlOm5vbmU7d2lkdGg6MTAwJTt0ZXh0LWFsaWduOmNlbnRlcjtwb3NpdGlvbjpyZWxhdGl2ZX0uc2VhcmNoLXN0cmlwZS1sYXJnZTpub3QoOmxhc3Qtb2YtdHlwZSk6bm90KC5zZWFyY2gtc3RyaXBlLWl0ZW0tbG9hZGVyKXtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZGRkfS5zZWFyY2gtc3RyaXBlLWl0ZW0tbGlzdCAuYS1kZWNsYXJhdGl2ZTpub3QoOmxhc3Qtb2YtdHlwZSkgLnNlYXJjaC1zdHJpcGUtdGh1bWJuYWlse2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNkZGR9LnNlYXJjaC1zdHJpcGUtaXRlbS1sb2FkZXI6bm90KDpmaXJzdC1vZi10eXBlKXtib3JkZXItYm90dG9tOm5vbmU7Ym9yZGVyLXRvcDoxcHggc29saWQgI2RkZH0uc2VhcmNoLXN0cmlwZS1sYXJnZXttaW4taGVpZ2h0OjE5NXB4O3BhZGRpbmc6MTBweCAxMHB4IDVweCAxMHB4fS5zZWFyY2gtc3RyaXBlLXRodW1ibmFpbHttaW4taGVpZ2h0Ojk4cHg7cGFkZGluZzo1cHggN3B4IDVweCA3cHh9LnNlYXJjaC1zdHJpcGUtdGh1bWJuYWlsOm5vdCguc2VhcmNoLXN0cmlwZS1pdGVtLWxvYWRlcik6aG92ZXJ7b3V0bGluZToxcHggc29saWQgI2U5NzcwNDtvdXRsaW5lLW9mZnNldDotMXB4Oy13ZWJraXQtYm9yZGVyLXJhZGl1czoycHg7LW1vei1ib3JkZXItcmFkaXVzOjJweDstby1ib3JkZXItcmFkaXVzOjJweDtib3JkZXItcmFkaXVzOjJweH0uc2VhcmNoLXN0cmlwZS1sYXJnZS10Mzpub3QoLnNlYXJjaC1zdHJpcGUtaXRlbS1sb2FkZXIpOmhvdmVyey13ZWJraXQtYm94LXNoYWRvdzowIDAgMCAycHggI2U5NzcwNCBpbnNldDstbW96LWJveC1zaGFkb3c6MCAwIDAgMnB4ICNlOTc3MDQgaW5zZXQ7LW8tYm94LXNoYWRvdzowIDAgMCAycHggI2U5NzcwNCBpbnNldDstbXMtYm94LXNoYWRvdzowIDAgMCAycHggI2U5NzcwNCBpbnNldDtib3gtc2hhZG93OjAgMCAwIDJweCAjZTk3NzA0IGluc2V0fS5zZWFyY2gtc3RyaXBlLXNwaW5uZXJ7bWluLWhlaWdodDppbmhlcml0O2hlaWdodDoxcHh9LnNlYXJjaC1zdHJpcGUtaW1hZ2V7YmFja2dyb3VuZC1zaXplOmNvbnRhaW47YmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXI7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0fS5zZWFyY2gtc3RyaXBlLWl0ZW0taW1hZ2V7aGVpZ2h0OjEyMHB4fS5zZWFyY2gtc3RyaXBlLXRodW1ibmFpbC1pbWFnZXtoZWlnaHQ6ODdweH0uc2VhcmNoLXN0cmlwZS1wb3BvdmVyLWltYWdle2hlaWdodDoxNTBweH0uc2VhcmNoLXN0cmlwZS1icmFuZC1pbWFnZXtoZWlnaHQ6MjVweH0uc2VhcmNoLXN0cmlwZS1icmFuZC1pbWFnZS1yb3d7dGV4dC1vdmVyZmxvdzplbGxpcHNpcztjb2xvcjojNzY3Njc2O3doaXRlLXNwYWNlOm5vd3JhcDtvdmVyZmxvdzpoaWRkZW59LnNlYXJjaC1zdHJpcGUtaXRlbS10aXRsZS1yb3d7dGV4dC1vdmVyZmxvdzplbGxpcHNpcztjb2xvcjojNzY3Njc2O3doaXRlLXNwYWNlOm5vd3JhcDtvdmVyZmxvdzpoaWRkZW47dGV4dC1hbGlnbjpsZWZ0fS5zZWFyY2gtc3RyaXBlLWl0ZW0tcHJpY2Utcm93e3RleHQtYWxpZ246bGVmdH0uc2VhcmNoLXN0cmlwZS1pdGVtIGEsLnNlYXJjaC1zdHJpcGUtcG9wb3ZlciBhe3RleHQtZGVjb3JhdGlvbjpub25lfS5zZWFyY2gtc3RyaXBlLWZ1bGx7bWFyZ2luLWxlZnQ6MH0uc2VhcmNoLXN0cmlwZS1zaG92bGVyLWNvbnRhaW5lcntwb3NpdGlvbjphYnNvbHV0ZTtkaXNwbGF5OmJsb2NrO2hlaWdodDozNXB4O3dpZHRoOjQ0JTtsZWZ0OjQzLjM0JTttYXJnaW4tbGVmdDotMjIlO3RleHQtYWxpZ246Y2VudGVyO2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXI6MXB4IHNvbGlkICNkZGQ7ei1pbmRleDo5OX0uc2VhcmNoLXN0cmlwZS1zaG92bGVyLXVwe2JvcmRlci10b3A6bm9uZTtib3JkZXItcmFkaXVzOjAgMCAzcHggM3B4fS5zZWFyY2gtc3RyaXBlLXNob3ZsZXItZG93bntib3JkZXItYm90dG9tOm5vbmU7Ym9yZGVyLXJhZGl1czozcHggM3B4IDAgMDtib3R0b206MH0uc2VhcmNoLXN0cmlwZS1zaG92bGVyLWFycm93e3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDo1MCU7bWFyZ2luLXRvcDotNyV9LnNob3ZsZXItYXJyb3ctdXB7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlWigtOTBkZWcpOy1tb3otdHJhbnNmb3JtOnJvdGF0ZVooLTkwZGVnKTstby10cmFuc2Zvcm06cm90YXRlWigtOTBkZWcpO3RyYW5zZm9ybTpyb3RhdGVaKC05MGRlZyl9LnNob3ZsZXItYXJyb3ctZG93bnstd2Via2l0LXRyYW5zZm9ybTpyb3RhdGVaKDkwZGVnKTstbW96LXRyYW5zZm9ybTpyb3RhdGVaKDkwZGVnKTstby10cmFuc2Zvcm06cm90YXRlWig5MGRlZyk7dHJhbnNmb3JtOnJvdGF0ZVooOTBkZWcpfS5zZWFyY2gtc3RyaXBlLXNob3ZsZXItaGlkZGVue2Rpc3BsYXk6bm9uZX0ucy1jb2xvci1zdWJkdWVke2NvbG9yOiM4ODh9LnNlYXJjaC1zdHJpcGUtcG9wb3Zlci1kZWNsYXJhdGl2ZXtkaXNwbGF5OmJsb2NrfSNleHRyZW1lTGVmdENvbHVtbnttYXJnaW4tbGVmdDotOHB4O21hcmdpbi1yaWdodDoxJSFpbXBvcnRhbnR9Ym9keS5lbl9VUyAjZXh0cmVtZUxlZnRDb2x1bW57bWFyZ2luLWxlZnQ6LTE4cHh9LmV4dHJlbWUtbGVmdC1jb2wtc3gtc2xpZGVye21hcmdpbi1sZWZ0Oi0zOHB4IWltcG9ydGFudDttYXJnaW4tcmlnaHQ6bm9uZX1ib2R5LmVuX1VTIC5leHRyZW1lLWxlZnQtY29sLXN4LXNsaWRlcnttYXJnaW4tbGVmdDotNDhweCFpbXBvcnRhbnR9LnNlYXJjaC1zdHJpcGUtYXNpbi1saXN0e2Rpc3BsYXk6bm9uZX0jc2VhcmNoLXN0cmlwZS1zbGlkZS1idXR0b257cG9zaXRpb246YWJzb2x1dGU7bWluLXdpZHRoOjEzMHB4O2hlaWdodDozMHB4O2JhY2tncm91bmQ6Z3JheTt0b3A6MDtyaWdodDotMTVweDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGVYKDUwJSkgcm90YXRlKC05MGRlZykgdHJhbnNsYXRlWCgtNTAlKTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGVYKDUwJSkgcm90YXRlKC05MGRlZykgdHJhbnNsYXRlWCgtNTAlKTstby10cmFuc2Zvcm06dHJhbnNsYXRlWCg1MCUpIHJvdGF0ZSgtOTBkZWcpIHRyYW5zbGF0ZVgoLTUwJSk7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoNTAlKSByb3RhdGUoLTkwZGVnKSB0cmFuc2xhdGVYKC01MCUpO3RleHQtYWxpZ246Y2VudGVyO3BhZGRpbmc6NHB4IDEwcHg7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czo1cHg7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6NXB4fSNzeC1zbGlkZS10cmFuc3BhcmVudC1pbmdyZXNze3Bvc2l0aW9uOmFic29sdXRlO2hlaWdodDoxMDAlO3dpZHRoOjMwcHg7dG9wOjA7bGVmdDoxMDAlfS5zZWFyY2gtc3RyaXBlLWNvbnRhaW5lci1oaWRkZW57LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlWCgtMTMwJSkhaW1wb3J0YW50Oy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTEzMCUpIWltcG9ydGFudDstby10cmFuc2Zvcm06dHJhbnNsYXRlWCgtMTMwJSkhaW1wb3J0YW50O3RyYW5zZm9ybTp0cmFuc2xhdGVYKC0xMzAlKSFpbXBvcnRhbnR9I3NlYXJjaC1zdHJpcGUtYnV0dG9uLXRleHR7Y29sb3I6I2ZmZjt3aGl0ZS1zcGFjZTpub3dyYXB9I3NlYXJjaC1zdHJpcGUtY29udGFpbmVyLW92ZXJsYXl7ZGlzcGxheTpibG9jaztwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO3BvaW50ZXItZXZlbnRzOm5vbmU7YmFja2dyb3VuZDojMDAwO29wYWNpdHk6LjAyO3otaW5kZXg6Mjt0b3A6MDtsZWZ0OjB9LmRlZmF1bHRTZWFyY2hTdHJpcGVXaWR0aENzc3t3aWR0aDo5JSFpbXBvcnRhbnR9LnNlYXJjaFN0cmlwZVZlcnRpY2FsV2lkdGhDc3N7d2lkdGg6OSUhaW1wb3J0YW50fS5zZWFyY2hTdHJpcGVIb3Jpem9udGFsV2lkdGhDc3N7d2lkdGg6OSUhaW1wb3J0YW50fS5zb2Z0bGluZXNfbGVmdF9jb2x1bW5fcHBkX3ZlcnRpY2FsX3N4X3N0cmlwZXt3aWR0aDozMiUhaW1wb3J0YW50fS5zb2Z0bGluZXNfcmlnaHRfY29sdW1uX3BwZF92ZXJ0aWNhbF9zeF9zdHJpcGV7d2lkdGg6NTYlIWltcG9ydGFudH0uc29mdGxpbmVzX2xlZnRfY29sdW1uX3BwZF9ob3Jpem9udGFsX3N4X3N0cmlwZXt3aWR0aDo0MCUhaW1wb3J0YW50fS5zb2Z0bGluZXNfcmlnaHRfY29sdW1uX3BwZF9ob3Jpem9udGFsX3N4X3N0cmlwZXt3aWR0aDo0OCUhaW1wb3J0YW50fUBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6MTAyNHB4KSBhbmQgKG1heC13aWR0aDoxMjgwcHgpey5zZWFyY2gtc3RyaXBlLWxhcmdlOm5vdCguc2VhcmNoLXN0cmlwZS1sYXJnZS10Myl7ZGlzcGxheTpub25lfS5kZWZhdWx0U2VhcmNoU3RyaXBlV2lkdGhDc3N7d2lkdGg6NiUhaW1wb3J0YW50fS5zZWFyY2hTdHJpcGVWZXJ0aWNhbFdpZHRoQ3Nze3dpZHRoOjYlIWltcG9ydGFudH0uc2VhcmNoU3RyaXBlSG9yaXpvbnRhbFdpZHRoQ3Nze3dpZHRoOjYlIWltcG9ydGFudH0uc29mdGxpbmVzX3JpZ2h0X2NvbHVtbl9wcGRfdmVydGljYWxfc3hfc3RyaXBle3dpZHRoOjU5JSFpbXBvcnRhbnR9LnNvZnRsaW5lc19yaWdodF9jb2x1bW5fcHBkX2hvcml6b250YWxfc3hfc3RyaXBle3dpZHRoOjUxJSFpbXBvcnRhbnR9fUBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6MTI4MXB4KXsuc2VhcmNoLXN0cmlwZS10aHVtYm5haWx7ZGlzcGxheTpub25lfX0uc2VhcmNoLXN0cmlwZS10aHVtYm5haWwtdDJ7ZGlzcGxheTpibG9ja30uZGVmYXVsdFNlYXJjaFN0cmlwZVdpZHRoQ3NzVDJ7d2lkdGg6NiUhaW1wb3J0YW50fS5zZWFyY2hTdHJpcGVWZXJ0aWNhbFdpZHRoQ3NzVDJ7d2lkdGg6NiUhaW1wb3J0YW50fS5zZWFyY2hTdHJpcGVIb3Jpem9udGFsV2lkdGhDc3NUMnt3aWR0aDo2JSFpbXBvcnRhbnR9LnNvZnRsaW5lc19sZWZ0X2NvbHVtbl9wcGRfdmVydGljYWxfc3hfc3RyaXBlVDJ7d2lkdGg6MzIlIWltcG9ydGFudH0uc29mdGxpbmVzX3JpZ2h0X2NvbHVtbl9wcGRfdmVydGljYWxfc3hfc3RyaXBlVDJ7d2lkdGg6NTklIWltcG9ydGFudH0uc29mdGxpbmVzX2xlZnRfY29sdW1uX3BwZF9ob3Jpem9udGFsX3N4X3N0cmlwZVQye3dpZHRoOjQwJSFpbXBvcnRhbnR9LnNvZnRsaW5lc19yaWdodF9jb2x1bW5fcHBkX2hvcml6b250YWxfc3hfc3RyaXBlVDJ7d2lkdGg6NTElIWltcG9ydGFudH1AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOjEwMjNweCl7LmRlZmF1bHRTZWFyY2hTdHJpcGVXaWR0aENzcywuZGVmYXVsdFNlYXJjaFN0cmlwZVdpZHRoQ3NzVDJ7d2lkdGg6MCFpbXBvcnRhbnR9LnNlYXJjaFN0cmlwZVZlcnRpY2FsV2lkdGhDc3MsLnNlYXJjaFN0cmlwZVZlcnRpY2FsV2lkdGhDc3NUMnt3aWR0aDowIWltcG9ydGFudH0uc2VhcmNoU3RyaXBlSG9yaXpvbnRhbFdpZHRoQ3NzLC5zZWFyY2hTdHJpcGVIb3Jpem9udGFsV2lkdGhDc3NUMnt3aWR0aDowIWltcG9ydGFudH0uc29mdGxpbmVzX2xlZnRfY29sdW1uX3BwZF92ZXJ0aWNhbF9zeF9zdHJpcGUsLnNvZnRsaW5lc19sZWZ0X2NvbHVtbl9wcGRfdmVydGljYWxfc3hfc3RyaXBlVDJ7d2lkdGg6MzEuOTQ4JSFpbXBvcnRhbnR9LnNvZnRsaW5lc19sZWZ0X2NvbHVtbl9wcGRfaG9yaXpvbnRhbF9zeF9zdHJpcGUsLnNvZnRsaW5lc19sZWZ0X2NvbHVtbl9wcGRfaG9yaXpvbnRhbF9zeF9zdHJpcGVUMnt3aWR0aDo0MC40NDglIWltcG9ydGFudH0uc29mdGxpbmVzX3JpZ2h0X2NvbHVtbl9wcGRfdmVydGljYWxfc3hfc3RyaXBlLC5zb2Z0bGluZXNfcmlnaHRfY29sdW1uX3BwZF92ZXJ0aWNhbF9zeF9zdHJpcGVUMnt3aWR0aDo2NS45NDglIWltcG9ydGFudH0uc29mdGxpbmVzX3JpZ2h0X2NvbHVtbl9wcGRfaG9yaXpvbnRhbF9zeF9zdHJpcGUsLnNvZnRsaW5lc19yaWdodF9jb2x1bW5fcHBkX2hvcml6b250YWxfc3hfc3RyaXBlVDJ7d2lkdGg6NTcuNDQ4JSFpbXBvcnRhbnR9fUBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6MTYwMHB4KXsuZGVmYXVsdFNlYXJjaFN0cmlwZVdpZHRoQ3Nze3dpZHRoOjcuNSUhaW1wb3J0YW50fS5zZWFyY2hTdHJpcGVWZXJ0aWNhbFdpZHRoQ3Nze3dpZHRoOjcuNSUhaW1wb3J0YW50fS5zZWFyY2hTdHJpcGVIb3Jpem9udGFsV2lkdGhDc3N7d2lkdGg6Ny41JSFpbXBvcnRhbnR9LnNvZnRsaW5lc19yaWdodF9jb2x1bW5fcHBkX3ZlcnRpY2FsX3N4X3N0cmlwZXt3aWR0aDo1Ny41JSFpbXBvcnRhbnR9LnNvZnRsaW5lc19yaWdodF9jb2x1bW5fcHBkX2hvcml6b250YWxfc3hfc3RyaXBle3dpZHRoOjQ5LjUlIWltcG9ydGFudH0uZGVmYXVsdFNlYXJjaFN0cmlwZVdpZHRoQ3NzVDJ7d2lkdGg6NC40JSFpbXBvcnRhbnR9LnNlYXJjaFN0cmlwZVZlcnRpY2FsV2lkdGhDc3NUMnt3aWR0aDo0LjQlIWltcG9ydGFudH0uc2VhcmNoU3RyaXBlSG9yaXpvbnRhbFdpZHRoQ3NzVDJ7d2lkdGg6NC40JSFpbXBvcnRhbnR9LnNvZnRsaW5lc19yaWdodF9jb2x1bW5fcHBkX3ZlcnRpY2FsX3N4X3N0cmlwZVQye3dpZHRoOjYwLjYlIWltcG9ydGFudH0uc29mdGxpbmVzX3JpZ2h0X2NvbHVtbl9wcGRfaG9yaXpvbnRhbF9zeF9zdHJpcGVUMnt3aWR0aDo1Mi42JSFpbXBvcnRhbnR9fS5qc3BDb250YWluZXJ7b3ZlcmZsb3c6aGlkZGVuO3Bvc2l0aW9uOnJlbGF0aXZlfS5qc3BQYW5le3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MCFpbXBvcnRhbnR9LmpzcFZlcnRpY2FsQmFye3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3JpZ2h0OjA7d2lkdGg6NXB4O2hlaWdodDoxMDAlfS5qc3BDYXB7ZGlzcGxheTpub25lfS5qc3BUcmFja3twb3NpdGlvbjpyZWxhdGl2ZX0uanNwRHJhZ3tiYWNrZ3JvdW5kOiNkZGQ7cG9zaXRpb246cmVsYXRpdmU7dG9wOjA7bGVmdDowO2N1cnNvcjpwb2ludGVyOy13ZWJraXQtYm9yZGVyLXJhZGl1czo1cHg7LW1vei1ib3JkZXItcmFkaXVzOjVweDstby1ib3JkZXItcmFkaXVzOjVweDtib3JkZXItcmFkaXVzOjVweDtvcGFjaXR5OjF9LmpzcERyYWdWaXNpYmxle29wYWNpdHk6MX0qIGh0bWwgLmpzcENvcm5lcnttYXJnaW46MCAtM3B4IDAgMH0jcmVjb21tZW5kYXRpb25zLm1vYmlsZV9yZWNvbW1lbmRhdGlvbnNfY2Fyb3VzZWwgaW1ne21heC1oZWlnaHQ6MTEwcHg7ZGlzcGxheTpibG9jazttYXJnaW4tbGVmdDphdXRvO21hcmdpbi1yaWdodDphdXRvfSNyZWNvbW1lbmRhdGlvbnMubW9iaWxlX3JlY29tbWVuZGF0aW9uc19jYXJvdXNlbCBkaXYuYS1pbWFnZS13cmFwcGVye2Rpc3BsYXk6dGFibGU7d2lkdGg6MTAwJTtoZWlnaHQ6MTEwcHg7LXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OmhpZGRlbn0jcmVjb21tZW5kYXRpb25zLm1vYmlsZV9yZWNvbW1lbmRhdGlvbnNfY2Fyb3VzZWwgZGl2LmltYWdlLXdyYXBwZXJ7ZGlzcGxheTp0YWJsZS1jZWxsO3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0uY29sbGVjdC1hbmQtc2hhcmUtYnV0dG9ucy13cmFwcGVye21hcmdpbi1ib3R0b206MjBweCFpbXBvcnRhbnR9LmNvbGxlY3QtYW5kLXNoYXJlLWJ1dHRvbnMtd3JhcHBlciAuY29sbGVjdGlvbnMtY29sbGVjdC1idXR0b257ZGlzcGxheTppbmxpbmUtYmxvY2t9LmNvbGxlY3QtYW5kLXNoYXJlLWJ1dHRvbnMtd3JhcHBlciAjdGVsbC1hLWZyaWVuZHtkaXNwbGF5OmlubGluZX0uY29sbGVjdC1hbmQtc2hhcmUtYnV0dG9ucy13cmFwcGVyIC5kcC1oZWFydC1idXR0b257d2lkdGg6MjBweCFpbXBvcnRhbnQ7aGVpZ2h0OjE3cHghaW1wb3J0YW50O2JhY2tncm91bmQtc2l6ZToxOXB4IWltcG9ydGFudDttYXJnaW46MXB4IDJweCAwIDAhaW1wb3J0YW50fS5jb2xsZWN0LWFuZC1zaGFyZS1idXR0b25zLXdyYXBwZXIgLmRwLWhlYXJ0LWhvdmVye3Bvc2l0aW9uOmFic29sdXRlO21hcmdpbi1sZWZ0Oi04cHh9LnNvZnRsaW5lc0ltbWVyc2l2ZVZpZXdUaXRsZXt0ZXh0LWFsaWduOmNlbnRlcjtwYWRkaW5nLXRvcDoxMHB4O2NvbG9yOiMwMDA7Zm9udC1zaXplOmxhcmdlO3Bvc2l0aW9uOnJlbGF0aXZlfS5pdi1jbG9zZS1pY29ue2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0FVSUNsaWVudHMvU29mdGxpbmVzRmVhdHVyZXNBc3NldHMtY2xvc2VCdXR0b24tMGVkMGVhODg2MGJiOTU3MjE3NzAwNDRkMDZlMjkzZTFmNGMzODhhMi5fVjJfLnBuZyk7aGVpZ2h0OjMwcHg7d2lkdGg6MzBweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOjA7ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6MDt0b3A6MDtvcGFjaXR5OjEhaW1wb3J0YW50fS5pdi1jbG9zZS13cmFwcGVye2hlaWdodDozMHB4O3dpZHRoOjMwcHg7cG9zaXRpb246YWJzb2x1dGUhaW1wb3J0YW50O3RvcDoxOHB4O3JpZ2h0OjIycHg7ei1pbmRleDoyMDtwYWRkaW5nOjAhaW1wb3J0YW50O21hcmdpbjowIWltcG9ydGFudH0ubm8tcmlnaHQtcGFkZGluZ3twYWRkaW5nLXJpZ2h0OjAhaW1wb3J0YW50fS5uby1sZWZ0LW1hcmdpbnttYXJnaW4tbGVmdDowIWltcG9ydGFudH0ubm8tbWFyZ2lue21hcmdpbjowIWltcG9ydGFudH0ubm8tbGVmdC1wYWRkaW5ne3BhZGRpbmctbGVmdDowIWltcG9ydGFudH0ubm8tdG9wLXBhZGRpbmd7cGFkZGluZy10b3A6MCFpbXBvcnRhbnR9Lm92ZXJmbG93LWhpZGRlbntvdmVyZmxvdzpoaWRkZW59I2l2TGFyZ2VJbWFnZSAuaXZMb2FkZXJ7cG9zaXRpb246YWJzb2x1dGU7bGVmdDo1MCU7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsMCk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsMCk7LW1zLXRyYW5zZm9ybTp0cmFuc2xhdGUoLTUwJSwwKTt0cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsMCl9LnNsLWl2LWJvdHRvbS1wYWRkaW5ne3BhZGRpbmctYm90dG9tOjIwcHh9LmltYWdlLWJsb2NrLWZlYXR1cmUtdW5hdmFpbGFiaWxpdHktc3RpY2tlciwuaW1hZ2UtYmxvY2stdW5hdmFpbGFiaWxpdHktY29udGFpbmVye29wYWNpdHk6LjM1fS5pbWFnZS1ibG9jay11bmF2YWlsYWJpbGl0eS1zdGlja2VyLWNvbnRhaW5lcnt0b3A6MDtib3R0b206MDttYXJnaW46YXV0bztwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjA7d2lkdGg6MTAwJTtoZWlnaHQ6My44cmVtO3BvaW50ZXItZXZlbnRzOm5vbmV9LmltYWdlLWJsb2NrLXVuYXZhaWxhYmlsaXR5LXN0aWNrZXItdGV4dC1jb250YWluZXJ7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7Ym90dG9tOjA7bWFyZ2luOmF1dG87bGVmdDowO3RleHQtYWxpZ246Y2VudGVyO3dpZHRoOjEwMCV9LmltYWdlLWJsb2NrLXVuYXZhaWxhYmlsaXR5LXN0aWNrZXItdGV4dC1vdXRlcntoZWlnaHQ6MTAwJTtkaXNwbGF5OmlubGluZS1ibG9jazt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9LmltYWdlLWJsb2NrLXVuYXZhaWxhYmlsaXR5LXN0aWNrZXItdGV4dC1pbm5lcntkaXNwbGF5OmlubGluZS1ibG9jazt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7Zm9udC1zaXplOjE4cHg7Y29sb3I6I2IxMjcwNDt3b3JkLXdyYXA6YnJlYWstd29yZDtwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoxMDAlO2xlZnQ6MDtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsLjcpfSNuZXdfb25fYW1hem9uX2ljb257cGFkZGluZy1ib3R0b206NnB4O3BhZGRpbmctdG9wOjRweH0jZHAuYXBwYXJlbCAuYS1jb250YWluZXItd2l0aG91dC1wYWRkaW5nLCNkcC5qZXdlbHJ5IC5hLWNvbnRhaW5lci13aXRob3V0LXBhZGRpbmcsI2RwLnNob2VzIC5hLWNvbnRhaW5lci13aXRob3V0LXBhZGRpbmcsI2RwLndhdGNoIC5hLWNvbnRhaW5lci13aXRob3V0LXBhZGRpbmd7bWFyZ2luLXRvcDowIWltcG9ydGFudH0jdGl0bGVCbG9ja3twb3NpdGlvbjpyZWxhdGl2ZX0udGl0bGUtYmxvY2stbGVmdC1zZWN0aW9ue3Bvc2l0aW9uOmFic29sdXRlO2hlaWdodDoxMDAlO3dpZHRoOjE1JX0udGl0bGUtYmxvY2stbGVmdC1zZWN0aW9uICNicmFuZEJ5bGluZV9mZWF0dXJlX2Rpdntwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6NTAlOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTUwJSk7LW1zLXRyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpO3RyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpfS50aXRsZS1ibG9jay1yaWdodC1zZWN0aW9ue21hcmdpbi1sZWZ0OjE4JX0jdmVydGljYWwtZGl2aWRlci1saW5le2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHdoaXRlLCNkM2QzZDMsI2ZmZik7d2lkdGg6MXB4O2hlaWdodDoxMDAlO3Bvc2l0aW9uOmFic29sdXRlO21hcmdpbi1sZWZ0OjE2JX0jdGVjaG5pY2FsU3BlY2lmaWNhdGlvbnNfc2VjdGlvbnN7d2lkdGg6NTAlO21hcmdpbi1ib3R0b206MTNweCFpbXBvcnRhbnR9I3RlY2huaWNhbFNwZWNpZmljYXRpb25zX3NlY3Rpb25zIHRkLCN0ZWNobmljYWxTcGVjaWZpY2F0aW9uc19zZWN0aW9ucyB0aHtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjRTBFMEUwO3BhZGRpbmc6NnB4IDEwcHh9I3RlY2huaWNhbFNwZWNpZmljYXRpb25zX3NlY3Rpb25zIHRoe3RleHQtYWxpZ246bGVmdDtwYWRkaW5nLWJvdHRvbTo3cHh9I3RlY2huaWNhbFNwZWNpZmljYXRpb25zX3NlY3Rpb25zIC50ZDF7YmFja2dyb3VuZC1jb2xvcjojRjdGN0Y3O2NvbG9yOiM2NjY7d2lkdGg6MzUlfSN0ZWNobmljYWxTcGVjaWZpY2F0aW9uc19zZWN0aW9ucyAudGQye2NvbG9yOiMzMzN9I3RlY2hzcGVjSGVscFRleHQgdWwsLnRlY2hzcGVjSGVscFRleHQgdWx7Y29sb3I6IzMzMyFpbXBvcnRhbnR9I3RlY2huaWNhbFNwZWNpZmljYXRpb25zX2ZlYXR1cmVfZGl2IC50YWJsZVJvd0NvbGxhcHNlZHtkaXNwbGF5Om5vbmV9I3RlY2huaWNhbFNwZWNpZmljYXRpb25zX2ZlYXR1cmVfZGl2IC50ZWNoU3BlY3NDb2xsYXBzZWQgLnRlY2hTcGVjc0NvbGxhcHNle2Rpc3BsYXk6bm9uZX0jdGVjaG5pY2FsU3BlY2lmaWNhdGlvbnNfZmVhdHVyZV9kaXYgLnRlY2hTcGVjc0V4cGFuZGVkIC50ZWNoU3BlY3NFeHBhbmR7ZGlzcGxheTpub25lfSN0ZWNobmljYWxTcGVjaWZpY2F0aW9uc19mZWF0dXJlX2RpdiBhLnRhYmxldHtjb2xvcjojMDA2NkMwO3RleHQtZGVjb3JhdGlvbjpub25lfSN0ZWNobmljYWxTcGVjaWZpY2F0aW9uc19mZWF0dXJlX2RpdiBhLnRhYmxldC50b3VjaGluZ3tjb2xvcjojRTQ3OTExO3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmV9LmpzcENvbnRhaW5lcntvdmVyZmxvdzpoaWRkZW47cG9zaXRpb246cmVsYXRpdmV9LmpzcFBhbmV7cG9zaXRpb246YWJzb2x1dGU7bGVmdDowIWltcG9ydGFudH0uanNwVmVydGljYWxCYXJ7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7cmlnaHQ6MDt3aWR0aDo1cHg7aGVpZ2h0OjEwMCV9LmpzcENhcHtkaXNwbGF5Om5vbmV9LmpzcFRyYWNre3Bvc2l0aW9uOnJlbGF0aXZlfS5qc3BEcmFne2JhY2tncm91bmQ6I2RkZDtwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6MDtsZWZ0OjA7Y3Vyc29yOnBvaW50ZXI7LXdlYmtpdC1ib3JkZXItcmFkaXVzOjVweDstbW96LWJvcmRlci1yYWRpdXM6NXB4Oy1vLWJvcmRlci1yYWRpdXM6NXB4O2JvcmRlci1yYWRpdXM6NXB4O29wYWNpdHk6MX0uanNwRHJhZ1Zpc2libGV7b3BhY2l0eToxfSogaHRtbCAuanNwQ29ybmVye21hcmdpbjowIC0zcHggMCAwfSNmZ190aXRsZV9zaXppbmdfY2hhcnR7ZGlzcGxheTpub25lO2Zsb2F0OmxlZnQ7d2lkdGg6MTAwJTttYXJnaW4tbGVmdDoxMHB4O21hcmdpbi1yaWdodDoxMHB4fSNmZ19zaXppbmdfdGFic3twb3NpdGlvbjpyZWxhdGl2ZTtoZWlnaHQ6MjZweDt0ZXh0LWFsaWduOmxlZnR9I2ZnX3NpemluZ190YWJzIHVse2xpc3Qtc3R5bGU6bm9uZTtwYWRkaW5nLWxlZnQ6NXB4O21hcmdpbjowO2Zsb2F0OmxlZnR9I2ZnX3NpemluZ190YWJzIHVsIGxpe2xpc3Qtc3R5bGU6bm9uZX0jZmdfc2l6aW5nX3RhYnMgbGl7Y3Vyc29yOnBvaW50ZXI7ZmxvYXQ6bGVmdDttYXJnaW46MDtwYWRkaW5nOjA7Zm9udC13ZWlnaHQ6NDAwO2xpc3QtaXRlbS1zdHlsZTpub25lfSNmZ19zaXppbmdfdGFicyBsaSBkaXZ7cGFkZGluZzo1cHggMTBweCA0cHg7Y29sb3I6IzAzMkU5Nztmb250LXdlaWdodDo0MDB9I2ZnX3NpemluZ190YWJzIGxpLmZnX2hpZ2hsaWdodHtjdXJzb3I6ZGVmYXVsdH0jZmdfc2l6aW5nX3RhYnMgbGkuZmdfaGlnaGxpZ2h0IGRpdntmb250LXdlaWdodDo3MDA7Y29sb3I6I2U0NzkxMTtwYWRkaW5nLWJvdHRvbTo1cHg7Y3Vyc29yOmRlZmF1bHR9I2ZpdC1ndWlkZS10YWJze2Rpc3BsYXk6YmxvY2shaW1wb3J0YW50O3RleHQtYWxpZ246bGVmdDtsaW5lLWhlaWdodDpub3JtYWx9I3NpemluZy1jb250ZW50e2Rpc3BsYXk6YmxvY2s7dGV4dC1hbGlnbjpsZWZ0fSNmaXQtZ3VpZGUtdGFicyAuZml0LWd1aWRlLWNoYXJ0X3RhYmxle21hcmdpbi1sZWZ0OmF1dG87bWFyZ2luLXJpZ2h0OmF1dG87dGV4dC1hbGlnbjpsZWZ0fSNmaXQtZ3VpZGUtY2hhcnQtY29udGVudHMgZGl2e2Rpc3BsYXk6bm9uZX0jZml0LWd1aWRlLWNoYXJ0LWNvbnRlbnRzIC5pZnJhbWUtY29udGFpbmVye3pvb206MTtzY3JvbGxpbmc6eWVzfSNmaXQtZ3VpZGUtY2hhcnQtY29udGVudHMgLmltZy1jb250YWluZXJ7b3ZlcmZsb3c6YXV0b30jc2l6ZS1jaGFydC1lcnJvciwjc2l6ZS1jaGFydC1zcGlubmVye3RleHQtYWxpZ246Y2VudGVyO3BhZGRpbmc6NTBweH0jY2luZGVyZWxsYUZpdERldGFpbHMgLmNpbmRlcmVsbGFGaXRBdHRyaWJ1dGVLZXl7d2lkdGg6MTM1cHg7cGFkZGluZzo0cHggMH0jY2luZGVyZWxsYUZpdERldGFpbHMuY2luZGVyZWxsYUZpdHtib3JkZXItY29sbGFwc2U6Y29sbGFwc2V9I2NpbmRlcmVsbGFGaXREZXRhaWxzLmNpbmRlcmVsbGFGaXQgLmNpbmRlcmVsbGFGaXROb3RMYXN0IHRke2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNERER9Lm1lYXN1cmVHdWlkZUNlbnRlcmVkSW1hZ2V7dGV4dC1hbGlnbjpjZW50ZXI7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MDtwYWRkaW5nOjB9LmhlaWdodEcyUzJTaXplQ2hhcnRQQ3t3aWR0aDoxMDAlO292ZXJmbG93LXg6YXV0bztvdmVyZmxvdy15Om92ZXJsYXl9LmxlZnRBbGlnbm1lbnR7cGFkZGluZy1sZWZ0OjQlfS5zaXplQ2hhcnRQY0JyYW5kTG9nb3ttYXgtaGVpZ2h0OjYwcHh9I3dyYXBwZXJ7b3ZlcmZsb3c6YXV0b30jdGFiQ29udGVudHtwb3NpdGlvbjpyZWxhdGl2ZX0jc3Bpbm5lckNvbnRhaW5lcntkaXNwbGF5Om5vbmU7ei1pbmRleDoxMDAwO3RvcDowO2xlZnQ6MDtoZWlnaHQ6MTAwJTt3aWR0aDoxMDAlO3Bvc2l0aW9uOmFic29sdXRlO2JhY2tncm91bmQ6cmdiYSgyNTUsMjU1LDI1NSwuOCkgY2VudGVyIDMwcHggbm8tcmVwZWF0fS5yaWdodEFsaWdubWVudHtwYWRkaW5nLXJpZ2h0OjQlfSN0YWJDb250ZW50LmxvYWRpbmdTcGlubmVyU2l6ZUNoYXJ0e292ZXJmbG93OmhpZGRlbn0jdGFiQ29udGVudC5sb2FkaW5nU3Bpbm5lclNpemVDaGFydCAjc3Bpbm5lckNvbnRhaW5lcntkaXNwbGF5OmJsb2NrfSNmYWJpYUxpa2VCdXR0b257YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9Tb2Z0bGluZXNGZWF0dXJlc0Fzc2V0cy1oZWFydC03ZGZhZmMwNjBiNDc1MDg1OWZkYjU2NTdlOWVmNTNmNjQ1OWY4OTdkLl9WMl8ucG5nKTtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7aGVpZ2h0OjM1cHg7d2lkdGg6MzVweH0jZmFiaWFMaWtlQnV0dG9uLmZhYmlhLWxpa2V7YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9Tb2Z0bGluZXNGZWF0dXJlc0Fzc2V0cy1oZWFydFNvbGlkLWZiNTNlN2RjYmJkZTI4MDg2ODcyNTY1YjEwMWEyYzRmMjRmZTU3MGYuX1YyXy5wbmcpO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtoZWlnaHQ6MzVweDt3aWR0aDozNXB4fS5mYWJpYS10ZXh0LWhpZGRlbntkaXNwbGF5Om5vbmV9LmEtbm8tanMgLmhpZGVUaXRsZUV4cGFuZGVyQ29udGVudHttYXgtaGVpZ2h0OmluaGVyaXQhaW1wb3J0YW50O29wYWNpdHk6MSFpbXBvcnRhbnR9LmEtbm8tanMgLmhpZGVDb250ZW50e2Rpc3BsYXk6YmxvY2t9LmEtbm8tanMgI3RpdGxlRXhwYW5kZXJIZWFkaW5ne2Rpc3BsYXk6bm9uZX0uc29mdGxpbmVzRHB4Q2FyZC1wYWRkaW5ne3BhZGRpbmctYm90dG9tOjIxcHghaW1wb3J0YW50fS5zb2Z0bGluZXNEcHhDYXJke21hcmdpbjowIC0xLjRyZW0gMjFweCFpbXBvcnRhbnQ7Ym9yZGVyLWJvdHRvbTo1cHggc29saWQgI2Q1ZGJkYiFpbXBvcnRhbnQ7cGFkZGluZy1sZWZ0OjEuNHJlbSFpbXBvcnRhbnQ7cGFkZGluZy1yaWdodDoxLjRyZW0haW1wb3J0YW50fVxuLmEtbHQtaWU5ICNyZWNvbW1lbmRhdGlvbnMgLmN0bENhcm91c2VsIC5hLWNhcm91c2VsLWNhcmR7bWluLWhlaWdodDoxJX0uYS1sdC1pZTkgI3JlY29tbWVuZGF0aW9ucyAuY3RsQ2Fyb3VzZWwgbGkuYS1jYXJvdXNlbC1jYXJkLWVtcHR5e21pbi1oZWlnaHQ6MjAwcHh9LmEtaWU3ICNyZWNvbW1lbmRhdGlvbnMgLmN0bENhcm91c2VsIGxpe21pbi13aWR0aDoxNjBweDtkaXNwbGF5OmJsb2NrfSNyZWNvbW1lbmRhdGlvbnMgLmN0bENhcm91c2VsIG9se21heC1oZWlnaHQ6MzEwcHg7aGVpZ2h0OmF1dG87bWluLWhlaWdodDoyMDBweDttaW4td2lkdGg6MzAwcHg7d2lkdGg6MTAwJTtvdmVyZmxvdzpoaWRkZW59I3JlY29tbWVuZGF0aW9ucyAuY3RsQ2Fyb3VzZWwgbGl7bWluLXdpZHRoOjUwcHg7ZmxvYXQ6bm9uZTttYXJnaW46MCAxLjI1JTtwYWRkaW5nLWJvdHRvbTowO21heC13aWR0aDpub25lO3dpZHRoOjIyLjUlfSNyZWNvbW1lbmRhdGlvbnMgLmN0bENhcm91c2VsIC5pdGVtLXRpdGxle21hcmdpbi10b3A6Mi41JX0jcmVjb21tZW5kYXRpb25zIC5jdGxDYXJvdXNlbCBsaS5hLWNhcm91c2VsLWNhcmQtZW1wdHl7bWF4LXdpZHRoOm5vbmU7bWluLWhlaWdodDoyMDBweH0jcmVjb21tZW5kYXRpb25zIC5jdGxDYXJvdXNlbCAuYS1idXR0b257Ym9yZGVyLXN0eWxlOm5vbmU7Ym9yZGVyOm5vbmU7YmFja2dyb3VuZDowIDB9I3JlY29tbWVuZGF0aW9ucyAuY3RsQ2Fyb3VzZWwgLmEtYnV0dG9uOmFmdGVye2JvcmRlci13aWR0aDowfSNyZWNvbW1lbmRhdGlvbnMgLmN0bENhcm91c2VsIC5hLWJ1dHRvbiAuYS1idXR0b24taW5uZXJ7YmFja2dyb3VuZDowIDA7Ym94LXNoYWRvdzpub25lO2ZpbHRlcjpub25lfSNyZWNvbW1lbmRhdGlvbnMgLmN0bENhcm91c2VsIC5hLWJ1dHRvbiAuYS1idXR0b24taW5uZXI6YWN0aXZle2JvcmRlcjpub25lO2JhY2tncm91bmQ6MCAwfSNyZWNvbW1lbmRhdGlvbnMgLmN0bENhcm91c2VsIC5hLWJ1dHRvbi5hLWJ1dHRvbi1wcmVzc2VkIC5hLWJ1dHRvbi1pbm5lciwjcmVjb21tZW5kYXRpb25zIC5jdGxDYXJvdXNlbCAuYS1idXR0b24uYS1idXR0b24tcHJlc3NlZDpob3ZlciAuYS1idXR0b24taW5uZXJ7Ym9yZGVyOm5vbmU7YmFja2dyb3VuZDowIDA7LXdlYmtpdC1ib3gtc2hhZG93Om5vbmU7LW1vei1ib3gtc2hhZG93Om5vbmU7Ym94LXNoYWRvdzpub25lfSNyZWNvbW1lbmRhdGlvbnMgLmN0bENhcm91c2VsIC5hLWJ1dHRvbi5hLWJ1dHRvbi1mb2N1cywjcmVjb21tZW5kYXRpb25zIC5jdGxDYXJvdXNlbCAuYS1idXR0b246Zm9jdXN7b3V0bGluZTowO2JvcmRlcjpub25lOy13ZWJraXQtYm94LXNoYWRvdzpub25lOy1tb3otYm94LXNoYWRvdzpub25lO2JveC1zaGFkb3c6bm9uZX0jcmVjb21tZW5kYXRpb25zIC5jdGxDYXJvdXNlbCAuYS1idXR0b24gaXtmaWx0ZXI6YWxwaGEob3BhY2l0eT04MCk7em9vbToxO29wYWNpdHk6Ljg7LW1vei10cmFuc2l0aW9uOm9wYWNpdHkgLjI2cyBlYXNlLWluLW91dDstd2Via2l0LXRyYW5zaXRpb246b3BhY2l0eSAuMjZzIGVhc2UtaW4tb3V0O3RyYW5zaXRpb246b3BhY2l0eSAuMjZzIGVhc2UtaW4tb3V0fSNyZWNvbW1lbmRhdGlvbnMgLmN0bENhcm91c2VsIC5hLWJ1dHRvbjpob3ZlciBpe2ZpbHRlcjphbHBoYShvcGFjaXR5PTEwMCk7em9vbToxO29wYWNpdHk6MX0jcmVjb21tZW5kYXRpb25zIC5jdGxDYXJvdXNlbCAuYS1pY29uLW5leHQsI3JlY29tbWVuZGF0aW9ucyAuY3RsQ2Fyb3VzZWwgLmEtaWNvbi1wcmV2aW91c3ttYXJnaW46MH0jcmVjb21tZW5kYXRpb25zIC5jdGxDYXJvdXNlbCAuYS1idXR0b24taW1hZ2UgLmEtYnV0dG9uLWlubmVye3BhZGRpbmc6MH0jcmVjb21tZW5kYXRpb25zIC5jdGxDYXJvdXNlbCAuYS1jYXJvdXNlbC1sZWZ0LCNyZWNvbW1lbmRhdGlvbnMgLmN0bENhcm91c2VsIC5hLWNhcm91c2VsLXJpZ2h0e3dpZHRoOjB9I3JlY29tbWVuZGF0aW9ucyAuY3RsQ2Fyb3VzZWwgLmEtY2Fyb3VzZWwtaGFzLWJ1dHRvbnMgLmEtY2Fyb3VzZWwtY2VudGVye21hcmdpbjowIDB9I3JlY29tbWVuZGF0aW9ucyAuY3RsQ2Fyb3VzZWwgLnN0cmV0Y2hhYmxle3Bvc2l0aW9uOnJlbGF0aXZlO3doaXRlLXNwYWNlOm5vd3JhcDttYXgtd2lkdGg6MTYwcHg7bWF4LWhlaWdodDoyMDBweDttYXJnaW46MCBhdXRvO3dpZHRoOjEwMCV9I3JlY29tbWVuZGF0aW9ucyAuY3RsQ2Fyb3VzZWwgLnN0cmV0Y2hhYmxlIC5hc3BlY3RSYXRpb0NvbnRhaW5lcntwYWRkaW5nLXRvcDoxNzAlfSNyZWNvbW1lbmRhdGlvbnMgLmN0bENhcm91c2VsIC5zdHJldGNoYWJsZSAuaW1hZ2VDb250YWluZXJ7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO2JvdHRvbTowO3JpZ2h0OjA7dGV4dC1hbGlnbjpjZW50ZXI7Zm9udDowLzAgYTt3aGl0ZS1zcGFjZTpub3JtYWx9I3JlY29tbWVuZGF0aW9ucyAuY3RsQ2Fyb3VzZWwgLnN0cmV0Y2hhYmxlIC5pbWFnZUNvbnRhaW5lciAuY2VudGVyYWJsZUNvbnRhaW5lcntkaXNwbGF5OmlubGluZS1ibG9jazt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7aGVpZ2h0OjEwMCV9I3JlY29tbWVuZGF0aW9ucyAuY3RsQ2Fyb3VzZWwgLnN0cmV0Y2hhYmxlIC5pbWFnZUNvbnRhaW5lciAuaW1hZ2UucGxhY2VIb2xkZXJJbWFnZXt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9I3JlY29tbWVuZGF0aW9ucyAuY3RsQ2Fyb3VzZWwgLnN0cmV0Y2hhYmxlIC5pbWFnZUNvbnRhaW5lciAuaW1hZ2V7dmVydGljYWwtYWxpZ246bWlkZGxlO2Rpc3BsYXk6aW5saW5lLWJsb2NrO21heC1oZWlnaHQ6MTAwJTttYXgtd2lkdGg6MTAwJTtoZWlnaHQ6YXV0bzt3aWR0aDphdXRvfSNyZWNvbW1lbmRhdGlvbnMgLm11bHRpcGxlTG9va3MgLmEtY2Fyb3VzZWwtbGVmdHt3aWR0aDo5JSFpbXBvcnRhbnR9I3JlY29tbWVuZGF0aW9ucyAubXVsdGlwbGVMb29rcyAuYS1jYXJvdXNlbC1yaWdodHt3aWR0aDo5JSFpbXBvcnRhbnR9I3JlY29tbWVuZGF0aW9ucyAubXVsdGlwbGVMb29rcyAuYS1jYXJvdXNlbC1oYXMtYnV0dG9ucyAuYS1jYXJvdXNlbC1jZW50ZXJ7bWFyZ2luOjAgOSUhaW1wb3J0YW50fSNyZWNvbW1lbmRhdGlvbnMgLmN0bEhlYWRpbmdMZWZ0QWxpZ257ZmxvYXQ6bGVmdH0jcmVjb21tZW5kYXRpb25zIC5vdXRmaXRCdWlsZGVyQnV0dG9ue2Zsb2F0OnJpZ2h0fSNyZWNvbW1lbmRhdGlvbnMgLmNsZWFyRmxvYXRze2NsZWFyOmJvdGh9I3JlY29tbWVuZGF0aW9ucyB1bHtoZWlnaHQ6MjE0cHg7b3ZlcmZsb3c6aGlkZGVufSNyZWNvbW1lbmRhdGlvbnMgbGl7d2lkdGg6MjIuOTklO2hlaWdodDoxMDAlO21pbi13aWR0aDoxMTVweDttYXgtd2lkdGg6MjAwcHg7cGFkZGluZy1ib3R0b206MTAwcHg7dmVydGljYWwtYWxpZ246dG9wfSNyZWNvbW1lbmRhdGlvbnMgLnJldmlld3NMaW5rOmhvdmVye2NvbG9yOnRyYW5zcGFyZW50fSNyZWNvbW1lbmRhdGlvbnMgLmVtcHR5e21hcmdpbi1ib3R0b206MjFweH0jcmVjb21tZW5kYXRpb25zIC5sZWZ0RmxvYXR7ZmxvYXQ6bGVmdH0jcmVjb21tZW5kYXRpb25zIC52aXNpYmxlRmVlZGJhY2tCbG9ja3t2aXNpYmlsaXR5OnZpc2libGU7ZGlzcGxheTpibG9ja30jcmVjb21tZW5kYXRpb25zIC5oaWRkZW5GZWVkYmFja0Jsb2Nre3Zpc2liaWxpdHk6aGlkZGVuO2Rpc3BsYXk6YmxvY2t9I3JlY29tbWVuZGF0aW9ucyAuaGlkZGVue3Zpc2liaWxpdHk6aGlkZGVuO2Rpc3BsYXk6bm9uZX0jcmVjb21tZW5kYXRpb25zIC5jdGxGZWVkYmFja3ttaW4taGVpZ2h0OjIycHh9I3JlY29tbWVuZGF0aW9ucyAjY3RsQnV0dG9uWWVze21hcmdpbi1sZWZ0OjlweH0jcmVjb21tZW5kYXRpb25zICNjdGxCdXR0b25Ob3ttYXJnaW4tbGVmdDo0cHh9I3JlY29tbWVuZGF0aW9ucyAuYnJhbmQtc3RvcmUtbGluay1vdmVycmlkZXtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tYm90dG9tOjI0cHghaW1wb3J0YW50O3doaXRlLXNwYWNlOm5vd3JhcH0jcmVjb21tZW5kYXRpb25zIC5icmFuZC1zdG9yZS1jYXJvdXNlbC1vdmVycmlkZXtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tYm90dG9tOjE2cHghaW1wb3J0YW50O21hcmdpbi1yaWdodDoxMHB4fSNyZWNvbW1lbmRhdGlvbnMgLnJlY29tbWVuZGF0aW9ucy1jbGFzc2ljLXNwYWNpbmd7aGVpZ2h0OjE1NHB4fSNyZWNvbW1lbmRhdGlvbnMgLnJlY29tbWVuZGF0aW9ucy1wcmltZS1pY29ue3ZlcnRpY2FsLWFsaWduOnN1Yn1AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjEyODBweCl7I3JlY29tbWVuZGF0aW9ucy5zZWFyY2gtc3RyaXBlLW92ZXJyaWRlIGxpOm5vdCguYS1jYXJvdXNlbC1jYXJkKXt3aWR0aDozMCU7bWluLXdpZHRoOjExMXB4fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjEzNjZweCkgYW5kIChtYXgtd2lkdGg6MTQ0MHB4KXsjcmVjb21tZW5kYXRpb25zLnNlYXJjaC1zdHJpcGUtb3ZlcnJpZGUgbGk6bm90KC5hLWNhcm91c2VsLWNhcmQpe21pbi13aWR0aDoxMTZweH19LnJlY29tbWVuZGF0aW9ucy1mZWF0dXJlLWVkcC1jb250YWluZXJfY2Fyb3VzZWxfZml4e2Rpc3BsYXk6YmxvY2shaW1wb3J0YW50fS5yZWNvbW1lbmRhdGlvbnMtZWRwLWNvbnRhaW5lcl9jYXJvdXNlbF9maXh7cmlnaHQ6MCFpbXBvcnRhbnQ7dG9wOjEwcHghaW1wb3J0YW50fVxuLmZqLXdoaXRlLWZvbnR7Y29sb3I6I2ZmZn0uZmotY291bnRkb3duLWJsYWNrLWJveHt0ZXh0LWFsaWduOmNlbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOiMwMDA7cGFkZGluZzoxN3B4IDVweCAyMHB4IDVweH0uZmotY291bnRkb3duLXRpbWVyLWJveHtwYWRkaW5nLXRvcDoyMHB4fS5mai1jb3VudGRvd24tbnVtYmVycy1ib3h7Zm9udC1zaXplOjM2LjlweH0uZmotY291bnRkb3duLWxhYmVscy1ib3h7Zm9udC1zaXplOjE0cHg7Y29sb3I6Izg1ODU4NTt3aWR0aDoxMDAlfS5mai1jb3VudGRvd24tZGlnaXRzLWJveHtkaXNwbGF5OnRhYmxlO3BhZGRpbmctbGVmdDoxNXB4O3BhZGRpbmctcmlnaHQ6MTVweH1cbiNjb250ZXh0dWFsSW5ncmVzc1B0e2N1cnNvcjpwb2ludGVyO2Rpc3BsYXk6ZmxleH0jY29udGV4dHVhbEluZ3Jlc3NQdFBpbnttaW4td2lkdGg6MTZweDtoZWlnaHQ6MTRweDtmbG9hdDpsZWZ0O2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0FVSUNsaWVudHMvRGVsaXZlcnlTdGF0aWNQYWNrYXJkLXBpbl9kZXNrdG9wXzF4LWM5NDRiNjgxOWY5ZTU2NDJmZGZkNGZmM2QxMTA5ZDYwZDY2ZDhmODcuX1YyXy5wbmcpO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtiYWNrZ3JvdW5kLXNpemU6YXV0bztiYWNrZ3JvdW5kLXBvc2l0aW9uOmNlbnRlcjttYXJnaW4tcmlnaHQ6NXB4O21hcmdpbi10b3A6MnB4fUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzoyKSxvbmx5IHNjcmVlbiBhbmQgKG1pbi1yZXNvbHV0aW9uOjE5MmRwaSksb25seSBzY3JlZW4gYW5kIChtaW4tcmVzb2x1dGlvbjoyZHBweCl7I2NvbnRleHR1YWxJbmdyZXNzUHRQaW57YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9EZWxpdmVyeVN0YXRpY1BhY2thcmQtcGluX2Rlc2t0b3BfMngtMTgwZjU5YTFiNDc1Yzc0NWEwZWQ2NzYyM2Q0MDZjNTdhYTVkMDM5Mi5fVjJfLnBuZyk7YmFja2dyb3VuZC1zaXplOmNvbnRhaW59I2NvbnRleHR1YWxJbmdyZXNzUHRQaW5Nb2JpbGV7YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9EZWxpdmVyeVN0YXRpY1BhY2thcmQtcGluX21vYmlsZV8yeC01Y2RjYzVlOTA4M2IyMzAyNDIxYzM1ZGM2OTE0NTgwY2MzMDc0MDg3Ll9WMl8ucG5nKTtiYWNrZ3JvdW5kLXNpemU6Y29udGFpbn19I2NvbnRleHR1YWxJbmdyZXNzUHRNb2JpbGVBcHB7ZGlzcGxheTp0YWJsZX0jY29udGV4dHVhbEluZ3Jlc3NQdFBpbk1vYmlsZXttaW4td2lkdGg6MTZweDtoZWlnaHQ6MjBweDtmbG9hdDpsZWZ0O2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0FVSUNsaWVudHMvRGVsaXZlcnlTdGF0aWNQYWNrYXJkLXBpbl9tb2JpbGVfMXgtNDExZDlhZDI0MTE1MmI4YzIzNjJiOTRiY2UzOWRlYmQ4OTlhZDQxMS5fVjJfLnBuZyk7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtc2l6ZTphdXRvO2JhY2tncm91bmQtcG9zaXRpb246Y2VudGVyO21hcmdpbi1ib3R0b206MXB4O21hcmdpbi1yaWdodDo2cHh9I2NvbnRleHR1YWxJbmdyZXNzUHRNb2JpbGVBcHAgI2NvbnRleHR1YWxJbmdyZXNzUHRQaW5Nb2JpbGV7d2lkdGg6MTZweDtoZWlnaHQ6MjBweDtmbG9hdDpsZWZ0O2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0FVSUNsaWVudHMvRGVsaXZlcnlTdGF0aWNQYWNrYXJkLXBpbl9tb2JpbGVfMXgtNDExZDlhZDI0MTE1MmI4YzIzNjJiOTRiY2UzOWRlYmQ4OTlhZDQxMS5fVjJfLnBuZyk7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtc2l6ZTphdXRvO2JhY2tncm91bmQtcG9zaXRpb246Y2VudGVyO21hcmdpbi1ib3R0b206MXB4O21hcmdpbi1yaWdodDo2cHg7ZGlzcGxheTp0YWJsZS1jZWxsfSNjb250ZXh0dWFsSW5ncmVzc1B0TW9iaWxlQXBwICNjb250ZXh0dWFsSW5ncmVzc1B0TGFiZWx7ZGlzcGxheTp0YWJsZS1jZWxsO3ZlcnRpY2FsLWFsaWduOm1pZGRsZX1cbi51bmlmaWVkTG9jYXRpb25Nb2JpbGVCdXR0b257bWFyZ2luLWxlZnQ6MCFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0OjAhaW1wb3J0YW50fWxpICN1bmlmaWVkTG9jYXRpb25Db3VudHJ5U2VsZWN0aW9uTGluayAuYS1ib3gtaW5uZXJ7cGFkZGluZzowfS51bmlmaWVkTG9jYXRpb25NYXJnaW5MZWZ0Q2xhc3N7bWFyZ2luLWxlZnQ6MTBweH0uZGRtLWN1c3QtYWRkci1idG4gLmEtYnV0dG9uLWlubmVye2JhY2tncm91bmQ6I2ZmZn0uZGRtLWN1c3QtYWRkci1idG4uYS1idXR0b24tc21hbGwgLmEtYnV0dG9uLXRleHR7Zm9udC1zaXplOjEzcHh9LmRkbS1jdXN0LWFkZHItYnRuOmhvdmVye2JvcmRlci1jb2xvcjojZTQ3OTExfS5kZG0tY3VzdC1hZGRyLWJ0bjpob3ZlciAuYS1idXR0b24taW5uZXJ7YmFja2dyb3VuZDojZmVmYWY2fS5kZG0tY291bnRyeS1zZWxlY3R7cGFkZGluZzoycHh9LmRkbS1zYnItdW5kZWxpdmVyYWJsZS1hbGVydHtjb2xvcjojZDAwMDAwO2ZvbnQtd2VpZ2h0OjcwMH0jZnRNZXNzYWdlIGIsI2Z0TWVzc2FnZSBzdHJvbmd7Y29sb3I6IzMzM30jZnRNZXNzYWdlICNmdENvdW50ZG93biwjZnRNZXNzYWdlIGIgYTpsaW5re2ZvbnQtd2VpZ2h0OjcwMCFpbXBvcnRhbnR9I2Z0TWVzc2FnZSBzcGFuLnJkZFRpdGxle2NvbG9yOiMwOTA7Zm9udC13ZWlnaHQ6NzAwfVxuLm1iYl9fbWRie3Bvc2l0aW9uOnJlbGF0aXZlO2JhY2tncm91bmQ6IzAwODU3NztwYWRkaW5nLWxlZnQ6LjVlbTtjb2xvcjojZmZmO3doaXRlLXNwYWNlOm5vd3JhcDttYXgtd2lkdGg6bWluLWNvbnRlbnQ7bWFyZ2luLWJvdHRvbTouNzVlbX0ubWJiX19tZGI6YWZ0ZXJ7Y29udGVudDpcIlwiO3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjA7Ym90dG9tOjA7d2lkdGg6MDtoZWlnaHQ6MDtib3JkZXItcmlnaHQ6LjVlbSBzb2xpZCAjZmZmO2JvcmRlci10b3A6LjdlbSBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItYm90dG9tOi43ZW0gc29saWQgdHJhbnNwYXJlbnR9Lm1iYl9fbWRiIC5tYmJfX21kYml7ZGlzcGxheTpibG9jaztwYWRkaW5nLXJpZ2h0OjNlbX1Ac3VwcG9ydHMgKG1heC13aWR0aDotbW96LW1pbi1jb250ZW50KXsubWJiX19tZGJ7bWF4LXdpZHRoOi1tb3otbWluLWNvbnRlbnR9fS5jb21wYXJpc29uX2ltYWdlX3RpdGxlX2NlbGx7cGFkZGluZy10b3A6MjBweDtwYWRkaW5nLWxlZnQ6MTBweDt3aWR0aDphdXRvO2ZvbnQtd2VpZ2h0OjQwMDtiYWNrZ3JvdW5kOjAgMCFpbXBvcnRhbnQ7Ym9yZGVyLWJvdHRvbTpoaWRkZW4haW1wb3J0YW50fS5jb21wYXJpc29uX2Jhc2VpdGVtX2NvbHVtbntiYWNrZ3JvdW5kLWNvbG9yOiNmZmU7cGFkZGluZy1sZWZ0OjEwcHh9LmNvbXBhcmlzb25fdGFibGUgdHI6bnRoLWNoaWxkKGV2ZW4pIHRkLmNvbXBhcmlzb25fYmFzZWl0ZW1fY29sdW1ue2JhY2tncm91bmQtY29sb3I6I2ZmZmZkZTtwYWRkaW5nLWxlZnQ6MTBweH0uY29tcGFyaXNvbl9hdHRyaWJ1dGVfbmFtZV9jb2x1bW57cGFkZGluZy1sZWZ0OjEwcHh9LmNvbXBhcmlzb25fc2ltX2l0ZW1zX2NvbHVtbntwYWRkaW5nLWxlZnQ6MTBweH0uY29tcGFyaXNvbl90YWJsZXt0YWJsZS1sYXlvdXQ6Zml4ZWQ7d2lkdGg6MTAwJX0jSExDWENvbXBhcmlzb25UYWJsZSB0ZCwjSExDWENvbXBhcmlzb25UYWJsZSB0aHtwYWRkaW5nOjZweCAxNHB4IDVweDt3b3JkLXdyYXA6YnJlYWstd29yZH0uY29tcGFyaXNvbl9zaW1fYXNpbnt2aXNpYmlsaXR5OmhpZGRlbn1hOmhvdmVyIHNwYW4uY29tcGFyaXNvbl96ZWl0Z2Vpc3RfYmFkZ2Vfc3RvcmVfbmFtZXtjb2xvcjojRTQ3OTExIWltcG9ydGFudDt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lfS5jb21wYXJpc29uX3plaXRnZWlzdDpob3Zlcnt0ZXh0LWRlY29yYXRpb246bm9uZX0uY29tcGFyaXNvbl96ZWl0Z2Vpc3RfYmFkZ2V7bWFyZ2luLXJpZ2h0OjRweDtiYWNrZ3JvdW5kLWNvbG9yOiNFNDc5MTEhaW1wb3J0YW50O3BhZGRpbmctdG9wOjJweDtwYWRkaW5nLWJvdHRvbToycHh9LmNvbXBhcmlzb25femVpdGdlaXN0X2JhZGdlOmJlZm9yZXtib3JkZXItYm90dG9tLWNvbG9yOiNFNDc5MTEhaW1wb3J0YW50fS5jb21wYXJpc29uX3plaXRnZWlzdF9iYWRnZTphZnRlcntib3JkZXItdG9wLWNvbG9yOiNFNDc5MTEhaW1wb3J0YW50fS5jb21wYXJpc29uX3RhYmxlX2ZpcnN0X2NvbHt3aWR0aDoxNC4yOCUhaW1wb3J0YW50fXRyLmNvbXBhcmlzb25fdGFibGVfaW1hZ2Vfcm93IHRke2JvcmRlci1ib3R0b206aGlkZGVufS5jb21wYXJhYmxlX2l0ZW0zLC5jb21wYXJhYmxlX2l0ZW00e2Rpc3BsYXk6bm9uZX0uY29tcGFyaXNvbl90YWJsZSB0cjpudGgtY2hpbGQob2RkKSAuYmFzZV9yZWFkX21vcmV7YmFja2dyb3VuZC1jb2xvcjojZmZlIWltcG9ydGFudH0uY29tcGFyaXNvbl90YWJsZSB0cjpudGgtY2hpbGQoZXZlbikgLmJhc2VfcmVhZF9tb3Jle2JhY2tncm91bmQtY29sb3I6I2ZmZmZkZSFpbXBvcnRhbnR9LmNvbXBhcmlzb25fdGFibGUgdHI6bnRoLWNoaWxkKGV2ZW4pIC5zaW1fcmVhZF9tb3Jle2JhY2tncm91bmQtY29sb3I6I2Y2ZjZmNiFpbXBvcnRhbnR9LmNvbXBhcmlzb25fdGFibGUgdHI6bnRoLWNoaWxkKG9kZCkgLmJhc2VfZmFkZXtiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCxyZ2JhKDI1NSwyNTUsMjU1LDApLCNGRkUpO2JhY2tncm91bmQ6LW1vei1saW5lYXItZ3JhZGllbnQodG9wLHJnYmEoMjU1LDI1NSwyNTUsMCksI0ZGRSk7YmFja2dyb3VuZDotby1saW5lYXItZ3JhZGllbnQodG9wLHJnYmEoMjU1LDI1NSwyNTUsMCksI0ZGRSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLHJnYmEoMjU1LDI1NSwyNTUsMCksI0ZGRSl9LmNvbXBhcmlzb25fdGFibGUgdHI6bnRoLWNoaWxkKGV2ZW4pIC5iYXNlX2ZhZGV7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AscmdiYSgyNTUsMjU1LDI1NSwwKSwjRkZGRkRFKTtiYWNrZ3JvdW5kOi1tb3otbGluZWFyLWdyYWRpZW50KHRvcCxyZ2JhKDI1NSwyNTUsMjU1LDApLCNGRkZGREUpO2JhY2tncm91bmQ6LW8tbGluZWFyLWdyYWRpZW50KHRvcCxyZ2JhKDI1NSwyNTUsMjU1LDApLCNGRkZGREUpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSxyZ2JhKDI1NSwyNTUsMjU1LDApLCNGRkZGREUpfS5jb21wYXJpc29uX3RhYmxlIHRyOm50aC1jaGlsZChldmVuKSAuc2ltX2ZhZGV7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AscmdiYSgyNTUsMjU1LDI1NSwwKSwjRjZGNkY2KTtiYWNrZ3JvdW5kOi1tb3otbGluZWFyLWdyYWRpZW50KHRvcCxyZ2JhKDI1NSwyNTUsMjU1LDApLCNGNkY2RjYpO2JhY2tncm91bmQ6LW8tbGluZWFyLWdyYWRpZW50KHRvcCxyZ2JhKDI1NSwyNTUsMjU1LDApLCNGNkY2RjYpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSxyZ2JhKDI1NSwyNTUsMjU1LDApLCNGNkY2RjYpfUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6MTYzMHB4KXsuY29tcGFyYWJsZV9pdGVtM3tkaXNwbGF5OnRhYmxlLWNlbGx9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6MTkwMHB4KXsuY29tcGFyYWJsZV9pdGVtMywuY29tcGFyYWJsZV9pdGVtNHtkaXNwbGF5OnRhYmxlLWNlbGx9fS5jb21wYXJpc29uX2RldGFpbF9leHBhbmRlcnt0ZXh0LWFsaWduOmNlbnRlcjtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZTdlN2U3O2JvcmRlci1yaWdodDoxcHggc29saWQgI2U3ZTdlNztib3JkZXItbGVmdDoxcHggc29saWQgI2U3ZTdlNztiYWNrZ3JvdW5kLWNvbG9yOiNmNmY2ZjY7cGFkZGluZzo1cHh9LmNvbXBhcmlzb25fcGFnZV9pbmdyZXNzX2J1dHRvbntiYWNrZ3JvdW5kLWNvbG9yOiMwMDY2YzA7Y29sb3I6I2ZmZiFpbXBvcnRhbnQ7dGV4dC1kZWNvcmF0aW9uOm5vbmUhaW1wb3J0YW50O2N1cnNvcjpwb2ludGVyO3RleHQtYWxpZ246Y2VudGVyO2JvcmRlci1zdHlsZTpzb2xpZDtib3JkZXItcmFkaXVzOjNweDtib3JkZXItY29sb3I6IzAwNjZjMDtwYWRkaW5nOjNweCAxMHB4fS5jb21wYXJpc29uX3plaXRnZWlzdF9iYWRnZXttYXJnaW4tcmlnaHQ6NHB4O2JhY2tncm91bmQtY29sb3I6I0U0NzkxMSFpbXBvcnRhbnQ7cGFkZGluZy10b3A6MnB4O3BhZGRpbmctYm90dG9tOjJweH0uY29tcGFyaXNvbl96ZWl0Z2Vpc3RfYmFkZ2U6YmVmb3Jle2JvcmRlci1ib3R0b20tY29sb3I6I0U0NzkxMSFpbXBvcnRhbnR9LmNvbXBhcmlzb25femVpdGdlaXN0X2JhZGdlOmFmdGVye2JvcmRlci10b3AtY29sb3I6I0U0NzkxMSFpbXBvcnRhbnR9LnJlY2VudGx5X3ZpZXdlZF9pdGVtc19pbWFnZV90aXRsZV9jZWxsX2F1dG9fd2lkdGh7cGFkZGluZy10b3A6MjBweDtwYWRkaW5nLWxlZnQ6MTBweDt3aWR0aDphdXRvfS5yZWNlbnRseV92aWV3ZWRfaXRlbXNfaW1hZ2VfdGl0bGVfY2VsbF9maXhlZF93aWR0aHtwYWRkaW5nLXRvcDoyMHB4O3BhZGRpbmctbGVmdDoxMHB4O3dpZHRoOjIxLjQzJX0ucmVjZW50bHlfdmlld2VkX2Jhc2VpdGVtX2NvbHVtbntiYWNrZ3JvdW5kLWNvbG9yOiNmZmU7cGFkZGluZy1sZWZ0OjEwcHh9LnJlY2VudGx5X3ZpZXdlZF90YWJsZSB0cjpudGgtY2hpbGQoZXZlbikgdGQucmVjZW50bHlfdmlld2VkX2Jhc2VpdGVtX2NvbHVtbntiYWNrZ3JvdW5kLWNvbG9yOiNmZmZmZGU7cGFkZGluZy1sZWZ0OjEwcHh9LnJlY2VudGx5X3ZpZXdlZF90YWJsZV9hdHRyaWJ1dGVfbmFtZV9jb2x1bW57cGFkZGluZy1sZWZ0OjEwcHh9LnJlY2VudGx5X3ZpZXdlZF9pdGVtc19jb2x1bW57cGFkZGluZy1sZWZ0OjEwcHh9LnJlY2VudGx5X3ZpZXdlZF90YWJsZXt0YWJsZS1sYXlvdXQ6Zml4ZWR9Lm9uZV92aWV3ZWRfaXRlbV90YWJsZV93aWR0aHt3aWR0aDo1Ny4xNCV9LnR3b192aWV3ZWRfaXRlbV90YWJsZV93aWR0aHt3aWR0aDo3OC41NyV9LmZ1bGxfcmVjZW50bHlfdmlld2VkX3RhYmxlX3dpZHRoe3dpZHRoOjEwMCV9I0hMQ1hDb21wYXJpc29uUmVjZW50bHlWaWV3ZWRUYWJsZSB0ZCwjSExDWENvbXBhcmlzb25SZWNlbnRseVZpZXdlZFRhYmxlIHRoe3BhZGRpbmc6NnB4IDE0cHggNXB4O3dvcmQtd3JhcDpicmVhay13b3JkfWE6aG92ZXIgc3Bhbi5jb21wYXJpc29uX3plaXRnZWlzdF9iYWRnZV9zdG9yZV9uYW1le2NvbG9yOiNFNDc5MTEhaW1wb3J0YW50O3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmV9LmNvbXBhcmlzb25femVpdGdlaXN0OmhvdmVye3RleHQtZGVjb3JhdGlvbjpub25lfS5yZWNlbnRseV92aWV3ZWRfdGFibGVfZmlyc3RfY29se3dpZHRoOjE0LjI4JSFpbXBvcnRhbnR9dHIucmVjZW50bHlfdmlld2VkX3RhYmxlX2ltYWdlX3JvdyB0ZHtib3JkZXItYm90dG9tOmhpZGRlbn0ucmVjZW50bHlfdmlld2VkX2l0ZW1zMywucmVjZW50bHlfdmlld2VkX2l0ZW1zNHtkaXNwbGF5Om5vbmV9LnJlY2VudGx5X3ZpZXdlZF90YWJsZSB0cjpudGgtY2hpbGQob2RkKSAuYmFzZV9yZWFkX21vcmV7YmFja2dyb3VuZC1jb2xvcjojZmZlIWltcG9ydGFudH0ucmVjZW50bHlfdmlld2VkX3RhYmxlIHRyOm50aC1jaGlsZChldmVuKSAuYmFzZV9yZWFkX21vcmV7YmFja2dyb3VuZC1jb2xvcjojZmZmZmRlIWltcG9ydGFudH0ucmVjZW50bHlfdmlld2VkX3RhYmxlIHRyOm50aC1jaGlsZChldmVuKSAuc2ltX3JlYWRfbW9yZXtiYWNrZ3JvdW5kLWNvbG9yOiNmNmY2ZjYhaW1wb3J0YW50fS5yZWNlbnRseV92aWV3ZWRfdGFibGUgdHI6bnRoLWNoaWxkKG9kZCkgLmJhc2VfZmFkZXtiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCxyZ2JhKDI1NSwyNTUsMjU1LDApLCNGRkUpO2JhY2tncm91bmQ6LW1vei1saW5lYXItZ3JhZGllbnQodG9wLHJnYmEoMjU1LDI1NSwyNTUsMCksI0ZGRSk7YmFja2dyb3VuZDotby1saW5lYXItZ3JhZGllbnQodG9wLHJnYmEoMjU1LDI1NSwyNTUsMCksI0ZGRSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLHJnYmEoMjU1LDI1NSwyNTUsMCksI0ZGRSk7dG9wOi0xOXB4fS5yZWNlbnRseV92aWV3ZWRfdGFibGUgdHI6bnRoLWNoaWxkKGV2ZW4pIC5iYXNlX2ZhZGV7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AscmdiYSgyNTUsMjU1LDI1NSwwKSwjRkZGRkRFKTtiYWNrZ3JvdW5kOi1tb3otbGluZWFyLWdyYWRpZW50KHRvcCxyZ2JhKDI1NSwyNTUsMjU1LDApLCNGRkZGREUpO2JhY2tncm91bmQ6LW8tbGluZWFyLWdyYWRpZW50KHRvcCxyZ2JhKDI1NSwyNTUsMjU1LDApLCNGRkZGREUpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSxyZ2JhKDI1NSwyNTUsMjU1LDApLCNGRkZGREUpO3RvcDotMTlweH0ucmVjZW50bHlfdmlld2VkX3RhYmxlIHRyOm50aC1jaGlsZChvZGQpIC5zaW1fZmFkZXt0b3A6LTE5cHh9LnJlY2VudGx5X3ZpZXdlZF90YWJsZSB0cjpudGgtY2hpbGQoZXZlbikgLnNpbV9mYWRle2JhY2tncm91bmQ6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLHJnYmEoMjU1LDI1NSwyNTUsMCksI0Y2RjZGNik7YmFja2dyb3VuZDotbW96LWxpbmVhci1ncmFkaWVudCh0b3AscmdiYSgyNTUsMjU1LDI1NSwwKSwjRjZGNkY2KTtiYWNrZ3JvdW5kOi1vLWxpbmVhci1ncmFkaWVudCh0b3AscmdiYSgyNTUsMjU1LDI1NSwwKSwjRjZGNkY2KTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCh0byBib3R0b20scmdiYSgyNTUsMjU1LDI1NSwwKSwjRjZGNkY2KTt0b3A6LTE5cHh9QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDoxNjMwcHgpey5yZWNlbnRseV92aWV3ZWRfaXRlbXMze2Rpc3BsYXk6dGFibGUtY2VsbH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDoxOTAwcHgpey5yZWNlbnRseV92aWV3ZWRfaXRlbXMzLC5yZWNlbnRseV92aWV3ZWRfaXRlbXM0e2Rpc3BsYXk6dGFibGUtY2VsbH19XG4ubW9udGhseS13YXJyYW50eS10ZXh0LWRpc2FibGVke29wYWNpdHk6LjV9XG4udW5pdmVyc2FsX2hxcF9ncmlkX2NsZWFyX2ZpeCAuYS1maXhlZC1sZWZ0LWdyaWQtaW5uZXI6YWZ0ZXJ7Y2xlYXI6bGVmdH0uaW1wcm92ZWRNT1FRdWFudGl0eVNlbGVjdENzc3t3aWR0aDo2OCU7dGV4dC1vdmVyZmxvdzplbGxpcHNpc30uaGlnaGxpZ2h0UXVhbnRpdHlEcm9wZG93bkJvcmRlcntib3JkZXI6MXB4IHNvbGlkICNFODI4MUU7Ym9yZGVyLXJhZGl1czo0cHh9LmJ1eWJveFF1YW50aXR5TWVzc2FnZUxhYmVsIGIsLmJ1eWJveFF1YW50aXR5TWVzc2FnZUxhYmVsIHN0cm9uZ3tjb2xvcjojRTgyODFFfXNlbGVjdC5xdWFudGl0eUJhckdyYXlPdXR7YmFja2dyb3VuZC1jb2xvcjojZDNkM2QzfS5jdXJzb3JEaXNhYmxlZHtjdXJzb3I6bm90LWFsbG93ZWQhaW1wb3J0YW50fS5hLWFjY29yZGlvbiAubW9iYi1jc3MgLmEtYWNjb3JkaW9uLXJvd3twYWRkaW5nOjEwcHggMTFweCAxMXB4IDM1cHh9LmEtYWNjb3JkaW9uIC5tb2JiLWNzcyAuYS1hY2NvcmRpb24tcm93IC5hLWFjY29yZGlvbi1yYWRpb3t0b3A6MTJweDtsZWZ0OjExcHg7bWFyZ2luLXRvcDowfS5hLWFjY29yZGlvbiAuYS1hY2NvcmRpb24tYWN0aXZlIC5tb2JiLWhlYWRlci1jc3N7cGFkZGluZy1ib3R0b206MH0ubW9iYi1jc3MgZm9ybXttYXJnaW4tYm90dG9tOjB9LmEtYWNjb3JkaW9uIC5tb2JiLWNzcyAuYS1hY2NvcmRpb24taW5uZXJ7cGFkZGluZzowIDExcHggMCAzNXB4fS5zaG93LW9uLXVuc2VsZWN0ZWR7ZGlzcGxheTpibG9jazt0cmFuc2l0aW9uOmFsbCAuM3MgZWFzZS1pbn0uYS1hY2NvcmRpb24tYWN0aXZlIC5zaG93LW9uLXVuc2VsZWN0ZWR7dHJhbnNpdGlvbjpub25lO2Rpc3BsYXk6bm9uZX0uZmFkZS1vbi11bnNlbGVjdGVke29wYWNpdHk6LjV9LmEtYWNjb3JkaW9uLWFjdGl2ZSAuZmFkZS1vbi11bnNlbGVjdGVke29wYWNpdHk6MX0uYS1hY2NvcmRpb24gLm1vYmItY3NzIC5hLWFjY29yZGlvbi1yb3cgLmEtaWNvbi1wcmltZXtvcGFjaXR5Oi41fVxuLmpzLWhpZGRlbntkaXNwbGF5Om5vbmUhaW1wb3J0YW50O3Zpc2liaWxpdHk6aGlkZGVuIWltcG9ydGFudH0uanMtc3ViY2F0LXNlY3Rpb24gLmJyLXN1YmNhdC1oaWRle2Rpc3BsYXk6bm9uZX0janVtcHN0YXJ0LW93bmVyLXZpZXctbWV0ZXJ7aGVpZ2h0OjVweDtiYWNrZ3JvdW5kLWNvbG9yOiNjY2N9I2p1bXBzdGFydC1vd25lci12aWV3LW1ldGVyIC5hLW1ldGVyLWJhcntiYWNrZ3JvdW5kLWNvbG9yOiM4ZmJlNWY7YmFja2dyb3VuZDojOGZiZTVmfS5qcy13aWRnZXQtc3ViY2F0LXJvd3tkaXNwbGF5Om5vbmV9LnN1YmNhdC1kZXNjcmlwdGlvbi1jb2x7dGV4dC1hbGlnbjpsZWZ0fS5zdWJjYXQtZGVzY3JpcHRpb24tY29sIC5zdWJjYXQtc2VjdGlvbi1wYWRkaW5ne21hcmdpbi1ib3R0b206MH0uc3ViY2F0LWltZy1jb2x7d2lkdGg6MTAlO21hcmdpbi1yaWdodDowfSNzdWJjYXQtY2Fyb3VzZWwtbmV4dC1idXR0b257d2lkdGg6MXB4fSNqcy13aWRnZXQtYm94e2JhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9iYWJ5L3JlZ2lzdHJ5L2p1bXBzdGFydC9qdW1wc3RhcnQtYmcucG5nKTtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXR9LnN1YmNhdC1zZWN0aW9uLXBhZGRpbmd7bWFyZ2luLWJvdHRvbTowfSNqcy1zdWJjYXQtaW5mb3JtYXRpb25hbHtwYWRkaW5nLXRvcDoxNXB4O3BhZGRpbmctbGVmdDoxMHB4fSNqcy1wb3BvdmVyLWFycm93e3Bvc2l0aW9uOmFic29sdXRlO3RvcDotN3B4fS5qdW1wc3RhcnQtY2F0ZWdvcnktaXRlbXttYXJnaW4tdG9wOi0xNHB4O3BhZGRpbmctdG9wOjE0cHg7aGVpZ2h0OjkwcHh9QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOjExMjRweCl7I2p1bXBzdGFydC1jb250YWluZXJ7d2lkdGg6ODAwcHg7bWFyZ2luLXJpZ2h0OmF1dG87bWFyZ2luLWxlZnQ6YXV0b319I2p1bXBzdGFydC1jbG9zZXtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDoxMHB4O2N1cnNvcjpwb2ludGVyfSNqdW1wc3RhcnQtY2xvc2UgLmEtaWNvbi1wb3BvdmVye2Rpc3BsYXk6bm9uZX0uanVtcHN0YXJ0LXRvZ2dsZXtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDoxMHB4O2N1cnNvcjpwb2ludGVyfS5qdW1wc3RhcnQtY2F0ZWdvcnktaXRlbS1uYW1le2xpbmUtaGVpZ2h0OjE7bWFyZ2luLXRvcDo3cHh9Lmp1bXBzdGFydC1sZWZ0LXNlY3Rpb257dGV4dC1hbGlnbjpsZWZ0fS5qcy1oaWRkZW57ZGlzcGxheTpub25lIWltcG9ydGFudDt2aXNpYmlsaXR5OmhpZGRlbiFpbXBvcnRhbnR9I2p1bXBzdGFydC1zcGlubmVye2hlaWdodDoyMTZweH0janVtcHN0YXJ0LWVycm9ye3BhZGRpbmctdG9wOjcwcHh9LmNhdGVnb3J5LXNlbGVjdGVke2JhY2tncm91bmQ6I2YxZjNmMjtib3gtc2hhZG93Omluc2V0IDAgMXB4IDJweCAjZTNlM2UzfS5jYXRlZ29yeS1pbWFnZS1zbWFsbC13cmFwcGVye2hlaWdodDozMHB4fS5qdW1wc3RhcnQtY2F0ZWdvcnktaW1hZ2Utc21hbGx7ZGlzcGxheTppbmxpbmUtYmxvY2s7YmFja2dyb3VuZDp1cmwoaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2JhYnkvcmVnaXN0cnkvanVtcHN0YXJ0L2pzLWJhZGdlcy1zcHJpdGUucG5nKTtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7aGVpZ2h0OjMwcHg7d2lkdGg6MzBweH0janVtcHN0YXJ0LWNhdC1pbWctc21hbGwtZXNzZW50aWFsc3tiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zNXB4IDB9I2p1bXBzdGFydC1jYXQtaW1nLXNtYWxsLW51cnNlcnl7YmFja2dyb3VuZC1wb3NpdGlvbjotNzBweCAwfSNqdW1wc3RhcnQtY2F0LWltZy1zbWFsbC1vdXRfYW5kX2Fib3V0e2JhY2tncm91bmQtcG9zaXRpb246LTEyMHB4IDB9I2p1bXBzdGFydC1jYXQtaW1nLXNtYWxsLWRpYXBlcmluZ3tiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xNTVweCAwfSNqdW1wc3RhcnQtY2F0LWltZy1zbWFsbC1mZWVkaW5ne2JhY2tncm91bmQtcG9zaXRpb246LTIwNXB4IDB9I2p1bXBzdGFydC1jYXQtaW1nLXNtYWxsLWNsb3RoaW5ne2JhY2tncm91bmQtcG9zaXRpb246LTI0MHB4IDB9I2p1bXBzdGFydC1jYXQtaW1nLXNtYWxsLXBsYXlfYW5kX2xlYXJue2JhY2tncm91bmQtcG9zaXRpb246LTI5MHB4IDB9I2p1bXBzdGFydC1jYXQtaW1nLXNtYWxsLWhlYWx0aGNhcmVfYW5kX3NhZmV0eXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zMjVweCAwfSNqdW1wc3RhcnQtY2F0LWltZy1zbWFsbC1iYXRodGltZXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zNzVweCAwfSNqdW1wc3RhcnQtY2F0LWltZy1zbWFsbC1mb3JfbW9te2JhY2tncm91bmQtcG9zaXRpb246LTQxMHB4IDB9LmNhdGVnb3J5LWltYWdlLWJpZy13cmFwcGVye2hlaWdodDo4MHB4fS5qdW1wc3RhcnQtY2F0ZWdvcnktaW1hZ2UtYmlne2Rpc3BsYXk6aW5saW5lLWJsb2NrO2JhY2tncm91bmQ6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9iYWJ5L3JlZ2lzdHJ5L2p1bXBzdGFydC9qcy1iYWRnZXMtc3ByaXRlLnBuZyk7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2hlaWdodDo4MHB4O3dpZHRoOjgwcHh9I2p1bXBzdGFydC1jYXQtaW1nLWJpZy1lc3NlbnRpYWxze2JhY2tncm91bmQtcG9zaXRpb246LTM1cHggLTM1cHh9I2p1bXBzdGFydC1jYXQtaW1nLWJpZy1vdXRfYW5kX2Fib3V0e2JhY2tncm91bmQtcG9zaXRpb246LTEyMHB4IC0zNXB4fSNqdW1wc3RhcnQtY2F0LWltZy1iaWctZmVlZGluZ3tiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yMDVweCAtMzVweH0janVtcHN0YXJ0LWNhdC1pbWctYmlnLXBsYXlfYW5kX2xlYXJue2JhY2tncm91bmQtcG9zaXRpb246LTI5MHB4IC0zNXB4fSNqdW1wc3RhcnQtY2F0LWltZy1iaWctYmF0aHRpbWV7YmFja2dyb3VuZC1wb3NpdGlvbjotMzc1cHggLTM1cHh9I2p1bXBzdGFydC1jYXQtaW1nLWJpZy1udXJzZXJ5e2JhY2tncm91bmQtcG9zaXRpb246LTM1cHggLTEyMHB4fSNqdW1wc3RhcnQtY2F0LWltZy1iaWctZGlhcGVyaW5ne2JhY2tncm91bmQtcG9zaXRpb246LTEyMHB4IC0xMjBweH0janVtcHN0YXJ0LWNhdC1pbWctYmlnLWNsb3RoaW5ne2JhY2tncm91bmQtcG9zaXRpb246LTIwNXB4IC0xMjBweH0janVtcHN0YXJ0LWNhdC1pbWctYmlnLWhlYWx0aGNhcmVfYW5kX3NhZmV0eXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yOTBweCAtMTIwcHh9I2p1bXBzdGFydC1jYXQtaW1nLWJpZy1mb3JfbW9te2JhY2tncm91bmQtcG9zaXRpb246LTM3NXB4IC0xMjBweH0uanVtcHN0YXJ0LXN1YmNhdGVnb3J5LWltYWdle2Rpc3BsYXk6aW5saW5lLWJsb2NrO2JhY2tncm91bmQ6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9iYWJ5L3JlZ2lzdHJ5L2p1bXBzdGFydC9qcy1zdWJjYXQtc3ByaXRlLnBuZyk7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2hlaWdodDo1MHB4O3dpZHRoOjUwcHh9I2p1bXBzdGFydC1zdWJjYXQtaW1nLXN0cm9sbGVye2JhY2tncm91bmQtcG9zaXRpb246MCAwfSNqdW1wc3RhcnQtc3ViY2F0LWltZy10cmF2ZWxfc3lzdGVte2JhY2tncm91bmQtcG9zaXRpb246MCAtNTVweH0janVtcHN0YXJ0LXN1YmNhdC1pbWctY2Fyc2VhdHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTExMHB4fSNqdW1wc3RhcnQtc3ViY2F0LWltZy1jYXJyaWVyc3tiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTE2NXB4fSNqdW1wc3RhcnQtc3ViY2F0LWltZy1wbGF5YXJke2JhY2tncm91bmQtcG9zaXRpb246MCAtMjIwcHh9I2p1bXBzdGFydC1zdWJjYXQtaW1nLWRpYXBlcnN7YmFja2dyb3VuZC1wb3NpdGlvbjotNTVweCAwfSNqdW1wc3RhcnQtc3ViY2F0LWltZy1jbG90aF9kaWFwZXJze2JhY2tncm91bmQtcG9zaXRpb246LTU1cHggLTU1cHh9I2p1bXBzdGFydC1zdWJjYXQtaW1nLWRpYXBlcl9wYWlse2JhY2tncm91bmQtcG9zaXRpb246LTU1cHggLTExMHB4fSNqdW1wc3RhcnQtc3ViY2F0LWltZy1kaWFwZXJfYmFne2JhY2tncm91bmQtcG9zaXRpb246LTU1cHggLTE2NXB4fSNqdW1wc3RhcnQtc3ViY2F0LWltZy13aXBlc3tiYWNrZ3JvdW5kLXBvc2l0aW9uOi01NXB4IC0yMjBweH0janVtcHN0YXJ0LXN1YmNhdC1pbWctZGlhcGVyX2NhZGRpZXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi01NXB4IC0yNzVweH0janVtcHN0YXJ0LXN1YmNhdC1pbWctY2hhbmdpbmdfbWF0e2JhY2tncm91bmQtcG9zaXRpb246LTU1cHggLTMzMHB4fSNqdW1wc3RhcnQtc3ViY2F0LWltZy1ib3R0bGVze2JhY2tncm91bmQtcG9zaXRpb246LTExMHB4IDB9I2p1bXBzdGFydC1zdWJjYXQtaW1nLWZlZWRpbmdfcGlsbG93e2JhY2tncm91bmQtcG9zaXRpb246LTExMHB4IC01NXB4fSNqdW1wc3RhcnQtc3ViY2F0LWltZy1ib3R0bGVfc3RlcmlsaXplcntiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xMTBweCAtMTEwcHh9I2p1bXBzdGFydC1zdWJjYXQtaW1nLWJyZWFzdF9wdW1we2JhY2tncm91bmQtcG9zaXRpb246LTExMHB4IC0xNjVweH0janVtcHN0YXJ0LXN1YmNhdC1pbWctaGlnaF9jaGFpcntiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xMTBweCAtMjIwcHh9I2p1bXBzdGFydC1zdWJjYXQtaW1nLXBhY2lmaWVye2JhY2tncm91bmQtcG9zaXRpb246LTExMHB4IC0yNzVweH0janVtcHN0YXJ0LXN1YmNhdC1pbWctYnVycF9jbG90aHN7YmFja2dyb3VuZC1wb3NpdGlvbjotMTEwcHggLTMzMHB4fSNqdW1wc3RhcnQtc3ViY2F0LWltZy1sYXlldHRlX3NldHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xNjVweCAwfSNqdW1wc3RhcnQtc3ViY2F0LWltZy1zbGVlcHdlYXJ7YmFja2dyb3VuZC1wb3NpdGlvbjotMTY1cHggLTU1cHh9I2p1bXBzdGFydC1zdWJjYXQtaW1nLWhhdHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xNjVweCAtMTEwcHh9I2p1bXBzdGFydC1zdWJjYXQtaW1nLXNvY2tze2JhY2tncm91bmQtcG9zaXRpb246LTE2NXB4IC0xNjVweH0janVtcHN0YXJ0LXN1YmNhdC1pbWctYm9keXN1aXR7YmFja2dyb3VuZC1wb3NpdGlvbjotMTY1cHggLTIyMHB4fSNqdW1wc3RhcnQtc3ViY2F0LWltZy1yb21wZXJze2JhY2tncm91bmQtcG9zaXRpb246LTE2NXB4IC0yNzVweH0janVtcHN0YXJ0LXN1YmNhdC1pbWctY3JpYntiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yMjBweCAwfSNqdW1wc3RhcnQtc3ViY2F0LWltZy1tYXR0cmVzc3tiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yMjBweCAtNTVweH0janVtcHN0YXJ0LXN1YmNhdC1pbWctZ2xpZGVye2JhY2tncm91bmQtcG9zaXRpb246LTIyMHB4IC0xMTBweH0janVtcHN0YXJ0LXN1YmNhdC1pbWctY2hhbmdpbmdfdGFibGV7YmFja2dyb3VuZC1wb3NpdGlvbjotMjIwcHggLTE2NXB4fSNqdW1wc3RhcnQtc3ViY2F0LWltZy1jaGFuZ2luZ19wYWR7YmFja2dyb3VuZC1wb3NpdGlvbjotMjIwcHggLTIyMHB4fSNqdW1wc3RhcnQtc3ViY2F0LWltZy1iZWRkaW5ne2JhY2tncm91bmQtcG9zaXRpb246LTIyMHB4IC0yNzVweH0janVtcHN0YXJ0LXN1YmNhdC1pbWctc3dhZGRsZXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yMjBweCAtMzMwcHh9I2p1bXBzdGFydC1zdWJjYXQtaW1nLWJvdW5jZXJ7YmFja2dyb3VuZC1wb3NpdGlvbjotMjc1cHggMH0janVtcHN0YXJ0LXN1YmNhdC1pbWctc3dpbmd7YmFja2dyb3VuZC1wb3NpdGlvbjotMjc1cHggLTU1cHh9I2p1bXBzdGFydC1zdWJjYXQtaW1nLWFjdGl2aXR5X2NlbnRlcnN7YmFja2dyb3VuZC1wb3NpdGlvbjotMjc1cHggLTExMHB4fSNqdW1wc3RhcnQtc3ViY2F0LWltZy1neW1ze2JhY2tncm91bmQtcG9zaXRpb246LTI3NXB4IC0xNjVweH0janVtcHN0YXJ0LXN1YmNhdC1pbWctdG95c3tiYWNrZ3JvdW5kLXBvc2l0aW9uOi0yNzVweCAtMjIwcHh9I2p1bXBzdGFydC1zdWJjYXQtaW1nLWJvb2tze2JhY2tncm91bmQtcG9zaXRpb246LTI3NXB4IC0yNzVweH0janVtcHN0YXJ0LXN1YmNhdC1pbWctYmFieV9tb25pdG9ye2JhY2tncm91bmQtcG9zaXRpb246LTMzMHB4IDB9I2p1bXBzdGFydC1zdWJjYXQtaW1nLWh1bWlkaWZpZXJ7YmFja2dyb3VuZC1wb3NpdGlvbjotMzMwcHggLTU1cHh9I2p1bXBzdGFydC1zdWJjYXQtaW1nLXRoZXJtb21ldGVye2JhY2tncm91bmQtcG9zaXRpb246LTMzMHB4IC0xMTBweH0janVtcHN0YXJ0LXN1YmNhdC1pbWctc2FmZXR5X2xhdGNoZXN7YmFja2dyb3VuZC1wb3NpdGlvbjotMzMwcHggLTE2NXB4fSNqdW1wc3RhcnQtc3ViY2F0LWltZy1iYWJ5X2dhdGV7YmFja2dyb3VuZC1wb3NpdGlvbjotMzMwcHggLTIyMHB4fSNqdW1wc3RhcnQtc3ViY2F0LWltZy1vdXRsZXRfcGx1Z3N7YmFja2dyb3VuZC1wb3NpdGlvbjotMzMwcHggLTI3NXB4fSNqdW1wc3RhcnQtc3ViY2F0LWltZy1iYXRoX3R1YntiYWNrZ3JvdW5kLXBvc2l0aW9uOi0zODVweCAwfSNqdW1wc3RhcnQtc3ViY2F0LWltZy1iYWJ5X3NoYW1wb297YmFja2dyb3VuZC1wb3NpdGlvbjotMzg1cHggLTU1cHh9I2p1bXBzdGFydC1zdWJjYXQtaW1nLWJhYnlfbG90aW9ue2JhY2tncm91bmQtcG9zaXRpb246LTM4NXB4IC0xMTBweH0janVtcHN0YXJ0LXN1YmNhdC1pbWctdG93ZWxze2JhY2tncm91bmQtcG9zaXRpb246LTM4NXB4IC0xNjVweH0janVtcHN0YXJ0LXN1YmNhdC1pbWctdHViX3RveXN7YmFja2dyb3VuZC1wb3NpdGlvbjotMzg1cHggLTIyMHB4fSNqdW1wc3RhcnQtc3ViY2F0LWltZy1udXJzaW5nX2JyYXtiYWNrZ3JvdW5kLXBvc2l0aW9uOi00NDBweCAwfSNqdW1wc3RhcnQtc3ViY2F0LWltZy1udXJzaW5nX2Nsb3RoZXN7YmFja2dyb3VuZC1wb3NpdGlvbjotNDQwcHggLTU1cHh9I2p1bXBzdGFydC1zdWJjYXQtaW1nLW51cnNpbmdfY292ZXJ7YmFja2dyb3VuZC1wb3NpdGlvbjotNDQwcHggLTExMHB4fSNqdW1wc3RhcnQtc3ViY2F0LWltZy1wcmVuYXRhbF92aXRhbWluc3tiYWNrZ3JvdW5kLXBvc2l0aW9uOi00NDBweCAtMTY1cHh9I2p1bXBzdGFydC1zdWJjYXQtaW1nLXJvYmV7YmFja2dyb3VuZC1wb3NpdGlvbjotNDQwcHggLTIyMHB4fSNqdW1wc3RhcnQtc3ViY2F0LWltZy1zdHJldGNoX21hcmtfY3JlYW17YmFja2dyb3VuZC1wb3NpdGlvbjotNDQwcHggLTI3NXB4fSNqdW1wc3RhcnQtc3ViY2F0LWltZy1uaXBwbGVfY3JlYW17YmFja2dyb3VuZC1wb3NpdGlvbjotNDQwcHggLTMzMHB4fSNqcy13aWRnZXQtcG9wb3Zlci1ib3h7YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2JhYnkvcmVnaXN0cnkvanVtcHN0YXJ0L2p1bXBzdGFydC1iZy5wbmcpO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtoZWlnaHQ6OTJweDtiYWNrZ3JvdW5kLXNpemU6OTBweCA3MHB4O21hcmdpbi10b3A6MTVweH0janVtcHN0YXJ0LXBvcG92ZXItd2lkZ2V0LWNvbnRhaW5lcnt3aWR0aDo5MDBweDttYXJnaW4tbGVmdDphdXRvO21hcmdpbi1yaWdodDphdXRvfS5qdW1wc3RhcnQtZGl2aWRlci1jbGFzc3ttYXJnaW4tdG9wOi0yMHB4fS5qdW1wc3RhcnQtd2lkdGgtZml4Lmp1bXBzdGFydC1wb3BvdmVyLXN1YmNhdC1pdGVtLmEtY29sdW1uLmEtc3BhbjF7d2lkdGg6NjBweH0uanVtcHN0YXJ0LXBvcG92ZXItc3ViY2F0LWltYWdle2hlaWdodDo1MHB4fS5qdW1wc3RhcnQtY2F0ZWdvcnktaXRlbS1zZWN0aW9ue2hlaWdodDoxMDAlfS5zdWJjYXQtaXRlbXtkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDo3MHB4O3ZlcnRpY2FsLWFsaWduOnRvcDttYXJnaW4tdG9wOi0xNHB4O3BhZGRpbmctdG9wOjE0cHh9LnN1YmNhdC1pdGVtOmhvdmVye2N1cnNvcjpwb2ludGVyO2JhY2tncm91bmQtY29sb3I6I2YxZjNmMn0uc3ViY2F0LXRpdGxle3RleHQtYWxpZ246Y2VudGVyO2xpbmUtaGVpZ2h0OjE7bWFyZ2luLXRvcDo1cHg7aGVpZ2h0OjQwcHh9LnN1YmNhdC1pbWFnZXt0ZXh0LWFsaWduOmNlbnRlcjtoZWlnaHQ6NTBweH0uYS1zZWN0aW9uLmEtcGFkZGluZy1ub25le21hcmdpbi1ib3R0b206MH0uc3ViY2F0LXBvcG92ZXItY29tcGxldGV7bGluZS1oZWlnaHQ6NTBweH0uc3ViY2F0LXBvcG92ZXItY29tcGxldGUgLnN1YmNhdC1wb3BvdmVyLWNvbXBsZXRlLWltYWdle3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0janMtd2lkZ2V0LXBvcG92ZXItbWFpbi1yb3d7ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6ODAwcHh9I3JlZ2lzdHJ5LWxpbmt7ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246YWJzb2x1dGU7bWFyZ2luLWxlZnQ6MjBweDtib3JkZXItbGVmdC1jb2xvcjojZTdlN2U3O2JvcmRlci1sZWZ0LXN0eWxlOnNvbGlkO2JvcmRlci1sZWZ0LXdpZHRoOjFweDtwYWRkaW5nLWxlZnQ6MjBweH0janVtcHN0YXJ0LXBvcG92ZXItZGVzY3JpcHRpb257Ym9yZGVyLXJpZ2h0LWNvbG9yOiNlN2U3ZTc7Ym9yZGVyLXJpZ2h0LXdpZHRoOjFweDtib3JkZXItcmlnaHQtc3R5bGU6c29saWQ7cGFkZGluZy1yaWdodDoyMHB4fS5qdW1wc3RhcnQtcG9wb3Zlci1jYXRlZ29yeS10aXRsZXtsaW5lLWhlaWdodDoxO21hcmdpbi10b3A6MnB4fSNqcy1yZWdpc3RyeS1saW5rLXRleHQ6aG92ZXJ7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZX0uanMtY2Fyb3VzZWwtY2FyZHtoZWlnaHQ6NTVweH0uanVtcHN0YXJ0LWNhcm91c2VsLXBhZ2luYXRpb24tYnV0dG9uc3tjdXJzb3I6cG9pbnRlcjt6LWluZGV4OjI7cG9zaXRpb246YWJzb2x1dGU7dG9wOjQwcHh9Lmp1bXBzdGFydC1jYXJvdXNlbC1wYWdpbmF0aW9uLWJ1dHRvbnMuYS1jYXJvdXNlbC1nb3RvLXByZXZwYWdle2xlZnQ6MDttYXJnaW4tdG9wOi00MHB4O3BhZGRpbmctdG9wOjQwcHghaW1wb3J0YW50O3BhZGRpbmctYm90dG9tOjUwcHghaW1wb3J0YW50fS5qdW1wc3RhcnQtY2Fyb3VzZWwtcGFnaW5hdGlvbi1idXR0b25zLmEtY2Fyb3VzZWwtZ290by1uZXh0cGFnZXtyaWdodDowO21hcmdpbi10b3A6LTQwcHg7cGFkZGluZy10b3A6NDBweCFpbXBvcnRhbnQ7cGFkZGluZy1ib3R0b206NTBweCFpbXBvcnRhbnR9Lmp1bXBzdGFydC1jYXJvdXNlbC1wYWdpbmF0aW9uLWJ1dHRvbnM6aG92ZXJ7Y3Vyc29yOnBvaW50ZXI7YmFja2dyb3VuZC1jb2xvcjojZjFmM2YyfS5qdW1wc3RhcnQtY2Fyb3VzZWwtZWxlbWVudHtwYWRkaW5nLXRvcDoyMHB4fS5qdW1wc3RhcnQtY2Fyb3VzZWwtZWxlbWVudDpob3ZlcntjdXJzb3I6cG9pbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOiNmMWYzZjJ9Lmp1bXBzdGFydC1jYXJvdXNlbC1lbGVtZW50OmhvdmVyIC5zdWJjYXQtbmFtZXt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lfS5qdW1wc3RhcnQtY2F0ZWdvcnktaXRlbTpob3ZlcntjdXJzb3I6cG9pbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOiNmMWYzZjJ9LnN1YmNhdC1uYW1le2xpbmUtaGVpZ2h0OjF9LnN1YmNhdC1uYW1lLXRleHQuc3ViY2F0LWxpbmUtaGVpZ2h0e2xpbmUtaGVpZ2h0OjEuMiFpbXBvcnRhbnR9LnN1YmNhdC1yZWd1bGFyLWxpbmt7Y29sb3I6IzAwNjZjMCFpbXBvcnRhbnR9LmJhYnktcmVnLWxvZ28tbW9kYWx7cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6MH0uaXRlbVdyYXBwZXJNb2RhbHstd2Via2l0LWJvcmRlci1yYWRpdXM6NHB4IWltcG9ydGFudDtiYWNrZ3JvdW5kOiNmZmY7Y3Vyc29yOnBvaW50ZXI7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MjUwcHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7aGVpZ2h0OjEzNXB4O21hcmdpbjozcHggNHB4IDNweCA0cHg7bWFyZ2luLWJvdHRvbTo0cHghaW1wb3J0YW50O3BhZGRpbmc6NXB4IDVweCA1cHggNXB4fS5tYXJrSXRlbVdyYXBwZXJNb2RhbHstd2Via2l0LWJvcmRlci1yYWRpdXM6NHB4IWltcG9ydGFudDtiYWNrZ3JvdW5kOiNmZmY7Y3Vyc29yOnBvaW50ZXI7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTppbmxpbmUtYmxvY2s7aGVpZ2h0OjEzNXB4O21hcmdpbjozcHggNHB4IDNweCA0cHg7bWFyZ2luLWJvdHRvbTo0cHghaW1wb3J0YW50O3BhZGRpbmc6NXB4IDVweCA1cHggNXB4fS5pdGVtLW1hcmstbW9kYWwtZ3JheXtib3JkZXI6MXB4IHNvbGlkICNkOGQ4ZDghaW1wb3J0YW50fS5pdGVtLW1hcmstbW9kYWwtb3Jhbmdle2JvcmRlcjoxcHggc29saWQgIzhmYmU1ZiFpbXBvcnRhbnR9LnNob3ctbXNnLWNoZWNrbWFya3ttYXJnaW4tbGVmdDozMnB4IWltcG9ydGFudH0uc2hvdy1tc2ctY2hlY2tib3h7bWFyZ2luLWxlZnQ6MjZweCFpbXBvcnRhbnQ7d2lkdGg6MTMwcHghaW1wb3J0YW50fS5tYXJrTW9kYWxDaGVja21hcmtCb3h7LXdlYmtpdC1ib3JkZXItcmFkaXVzOjRweCAwIDRweCAwIWltcG9ydGFudDtwb3NpdGlvbjphYnNvbHV0ZTttYXJnaW4tdG9wOjEwNHB4O21hcmdpbi1sZWZ0OjEzNXB4O3dpZHRoOjI1cHg7aGVpZ2h0OjI1cHg7dGV4dC1hbGlnbjpjZW50ZXI7bGluZS1oZWlnaHQ6MjVweH0uY2hlY2ttYXJrLWJveC1vcmFuZ2V7YmFja2dyb3VuZDojOGZiZTVmIWltcG9ydGFudDtib3JkZXI6MXB4IHNvbGlkICM4ZmJlNWYhaW1wb3J0YW50fS5hLWJveCAuY2hlY2ttYXJrLWJveC1ncmF5e2JvcmRlcjpub25lfS5jaGVja21hcmstYm94LWdyYXl7YmFja2dyb3VuZDojZjhmOGY4IWltcG9ydGFudDtib3JkZXItbGVmdDoxcHggc29saWQgI2Q4ZDhkOCFpbXBvcnRhbnQ7Ym9yZGVyLXRvcDoxcHggc29saWQgI2Q4ZDhkOCFpbXBvcnRhbnQ7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjOGZiZTVmIWltcG9ydGFudDtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjOGZiZTVmIWltcG9ydGFudH0uY2hlY2ttYXJrLWdyYXksLmNoZWNrbWFyay1vcmFuZ2V7cG9zaXRpb246YWJzb2x1dGU7bWFyZ2luLXRvcDoxMTFweDttYXJnaW4tbGVmdDoxNDBweH0uaXRlbS1saXN0LXdyYXBwZXJ7ZGlzcGxheTpibG9jazt3aWR0aDo4MTVweDtiYWNrZ3JvdW5kOiNmOGY4ZjghaW1wb3J0YW50O3BhZGRpbmctdG9wOjE1cHg7cGFkZGluZy1ib3R0b206MTBweH0uaXRlbS1saXN0LW1vZGFse2hlaWdodDozMzFweDttYXJnaW4tbGVmdDphdXRvO21hcmdpbi1yaWdodDphdXRvO21hcmdpbi1ib3R0b206MCFpbXBvcnRhbnQ7b3ZlcmZsb3cteTphdXRvO3BhZGRpbmctbGVmdDoxNnB4fS5pdGVtTW9kYWxUZXh0V3JhcHBlcntwb3NpdGlvbjpyZWxhdGl2ZTtoZWlnaHQ6MTE2cHh9Lml0ZW1Nb2RhbEltZ3twYWRkaW5nLXRvcDoyOHB4O3BhZGRpbmctYm90dG9tOjI4cHh9Lml0ZW1Nb2RhbENvbnRlbnR7cG9zaXRpb246cmVsYXRpdmU7dG9wOjUwJTt0cmFuc2Zvcm06dHJhbnNsYXRlWSgtNTAlKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpfS5wb3AtbWFyay1wdXJjaCAuYS1wb3BvdmVyLXdyYXBwZXJ7bWluLWhlaWdodDo0MzFweCFpbXBvcnRhbnR9LnJlbW92ZS1hLWljb24gLmEtaWNvbntkaXNwbGF5Om5vbmV9LnJlbW92ZS1hLWljb246aG92ZXJ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9LnRhYmxldC1wb3BvdmVyLWZpeHtwb3NpdGlvbjphYnNvbHV0ZTtib3R0b206MDtsZWZ0OjA7bWluLXdpZHRoOjk5LjglO21hcmdpbi1sZWZ0OjFweH0ubWFyay1hcy1jb21wbGV0ZWR7Y3Vyc29yOnBvaW50ZXJ9Lm1hcmstYXMtY29tcGxldGVkOmhvdmVye3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmV9Lm1hcmstY29tcGxldGUtY2Fyb3VzZWx7cG9zaXRpb246cmVsYXRpdmU7aGVpZ2h0OjE3NXB4O3BhZGRpbmctdG9wOjE1cHh9Lm1hcmstY29tcGxldGUtYm94e3Bvc2l0aW9uOnJlbGF0aXZlO2hlaWdodDoyMDBweH1cbiNhY3Rpb25QYW5lbCAjY2xpcHBlZENvdXBvbi5jY3hfZHB2Mi5zbnNfcmFkaW9fYnV0dG9uLCNhY3Rpb25QYW5lbCAjY2xpcHBlZENvdXBvblNucy5jY3hfZHB2Mi5zbnNfcmFkaW9fYnV0dG9uLCNhY3Rpb25QYW5lbCAjY291cG9uU25zV2l0aE9uZVRpbWVTZWxlY3RlZC5jY3hfZHB2Mi5zbnNfcmFkaW9fYnV0dG9uLCNhY3Rpb25QYW5lbCAjZXJyb3JJbkNsaXBwaW5nLmNjeF9kcHYyLnNuc19yYWRpb19idXR0b24sI2FjdGlvblBhbmVsICN1bmNsaXBwZWRDb3Vwb24uY2N4X2RwdjIuc25zX3JhZGlvX2J1dHRvbiwjYWN0aW9uUGFuZWwgI3VuY2xpcHBlZENvdXBvblNucy5jY3hfZHB2Mi5zbnNfcmFkaW9fYnV0dG9ue2Rpc3BsYXk6bm9uZX0jYWN0aW9uUGFuZWwgLnZwY19jbGlwX2Vycm9yICNlcnJvckluQ2xpcHBpbmcuY2N4X2RwdjJ7ZGlzcGxheTppbmxpbmV9I2FjdGlvblBhbmVsICNjb3Vwb25GZWF0dXJlIC5hLXNlY3Rpb257bWFyZ2luLWJvdHRvbTowfSNhY3Rpb25QYW5lbC5hcC1mcmVzaCAucmVndWxhclZwYy52cGNfY2xpcHBlZCAjY2xpcHBlZENvdXBvbi5jY3hfZHB2Mi5zbnNfcmFkaW9fYnV0dG9uLCNhY3Rpb25QYW5lbC5hcC1mcmVzaCAucmVndWxhclZwYy52cGNfdW5jbGlwcGVkICN1bmNsaXBwZWRDb3Vwb24uY2N4X2RwdjIuc25zX3JhZGlvX2J1dHRvbiwjYWN0aW9uUGFuZWwuYXAtbW9tIC5yZWd1bGFyVnBjLnZwY19jbGlwcGVkICNjbGlwcGVkQ291cG9uU25zLmNjeF9kcHYyLnNuc19yYWRpb19idXR0b24sI2FjdGlvblBhbmVsLmFwLW1vbSAucmVndWxhclZwYy52cGNfdW5jbGlwcGVkICN1bmNsaXBwZWRDb3Vwb25TbnMuY2N4X2RwdjIuc25zX3JhZGlvX2J1dHRvbiwjYWN0aW9uUGFuZWwuYXAtbW9tIC5zbnNWcGMudnBjX2NsaXBwZWQgI2NsaXBwZWRDb3Vwb25TbnMuY2N4X2RwdjIuc25zX3JhZGlvX2J1dHRvbiwjYWN0aW9uUGFuZWwuYXAtbW9tIC5zbnNWcGMudnBjX3VuY2xpcHBlZCAjdW5jbGlwcGVkQ291cG9uU25zLmNjeF9kcHYyLnNuc19yYWRpb19idXR0b24sI2FjdGlvblBhbmVsLmFwLW9uZXRpbWUgLnJlZ3VsYXJWcGMudnBjX2NsaXBwZWQgI2NsaXBwZWRDb3Vwb24uY2N4X2RwdjIuc25zX3JhZGlvX2J1dHRvbiwjYWN0aW9uUGFuZWwuYXAtb25ldGltZSAucmVndWxhclZwYy52cGNfdW5jbGlwcGVkICN1bmNsaXBwZWRDb3Vwb24uY2N4X2RwdjIuc25zX3JhZGlvX2J1dHRvbiwjYWN0aW9uUGFuZWwuYXAtb25ldGltZSAuc25zVnBjICNjb3Vwb25TbnNXaXRoT25lVGltZVNlbGVjdGVkLmNjeF9kcHYyLnNuc19yYWRpb19idXR0b24sI2FjdGlvblBhbmVsLmFwLXNucyAucmVndWxhclZwYy52cGNfY2xpcHBlZCAjY2xpcHBlZENvdXBvblNucy5jY3hfZHB2Mi5zbnNfcmFkaW9fYnV0dG9uLCNhY3Rpb25QYW5lbC5hcC1zbnMgLnJlZ3VsYXJWcGMudnBjX3VuY2xpcHBlZCAjdW5jbGlwcGVkQ291cG9uU25zLmNjeF9kcHYyLnNuc19yYWRpb19idXR0b24sI2FjdGlvblBhbmVsLmFwLXNucyAuc25zVnBjLnZwY19jbGlwcGVkICNjbGlwcGVkQ291cG9uU25zLmNjeF9kcHYyLnNuc19yYWRpb19idXR0b24sI2FjdGlvblBhbmVsLmFwLXNucyAuc25zVnBjLnZwY191bmNsaXBwZWQgI3VuY2xpcHBlZENvdXBvblNucy5jY3hfZHB2Mi5zbnNfcmFkaW9fYnV0dG9ue2Rpc3BsYXk6aW5saW5lfSNhY3Rpb25QYW5lbC5hcC1wb3Nwcm9tbyAucmVndWxhclZwYy52cGNfY2xpcHBlZCAjY2xpcHBlZENvdXBvbi5jY3hfZHB2Mi5zbnNfcmFkaW9fYnV0dG9uLCNhY3Rpb25QYW5lbC5hcC1wb3Nwcm9tbyAucmVndWxhclZwYy52cGNfY2xpcHBlZC52cGNfb25lVGltZUJ1eSAjY2xpcHBlZENvdXBvbi5jY3hfZHB2Mi5zbnNfb3B0aW4sI2FjdGlvblBhbmVsLmFwLXBvc3Byb21vIC5yZWd1bGFyVnBjLnZwY19jbGlwcGVkLnZwY19zbnMgI2NsaXBwZWRDb3Vwb25TbnMuY2N4X2RwdjIuc25zX29wdGluLCNhY3Rpb25QYW5lbC5hcC1wb3Nwcm9tbyAucmVndWxhclZwYy52cGNfdW5jbGlwcGVkICN1bmNsaXBwZWRDb3Vwb24uY2N4X2RwdjIuc25zX3JhZGlvX2J1dHRvbiwjYWN0aW9uUGFuZWwuYXAtcG9zcHJvbW8gLnJlZ3VsYXJWcGMudnBjX3VuY2xpcHBlZC52cGNfb25lVGltZUJ1eSAjdW5jbGlwcGVkQ291cG9uLmNjeF9kcHYyLnNuc19vcHRpbiwjYWN0aW9uUGFuZWwuYXAtcG9zcHJvbW8gLnJlZ3VsYXJWcGMudnBjX3VuY2xpcHBlZC52cGNfc25zICN1bmNsaXBwZWRDb3Vwb25TbnMuY2N4X2RwdjIuc25zX29wdGluLCNhY3Rpb25QYW5lbC5hcC1wb3Nwcm9tbyAuc25zVnBjICNjb3Vwb25TbnNXaXRoT25lVGltZVNlbGVjdGVkLmNjeF9kcHYyLnNuc19yYWRpb19idXR0b24sI2FjdGlvblBhbmVsLmFwLXBvc3Byb21vIC5zbnNWcGMudnBjX2NsaXBwZWQudnBjX29uZVRpbWVCdXkgI2NvdXBvblNuc1dpdGhPbmVUaW1lU2VsZWN0ZWQuY2N4X2RwdjIuc25zX29wdGluLCNhY3Rpb25QYW5lbC5hcC1wb3Nwcm9tbyAuc25zVnBjLnZwY19jbGlwcGVkLnZwY19zbnMgI2NsaXBwZWRDb3Vwb25TbnMuY2N4X2RwdjIuc25zX29wdGluLCNhY3Rpb25QYW5lbC5hcC1wb3Nwcm9tbyAuc25zVnBjLnZwY191bmNsaXBwZWQudnBjX29uZVRpbWVCdXkgI2NvdXBvblNuc1dpdGhPbmVUaW1lU2VsZWN0ZWQuY2N4X2RwdjIuc25zX29wdGluLCNhY3Rpb25QYW5lbC5hcC1wb3Nwcm9tbyAuc25zVnBjLnZwY191bmNsaXBwZWQudnBjX3NucyAjdW5jbGlwcGVkQ291cG9uU25zLmNjeF9kcHYyLnNuc19vcHRpbntkaXNwbGF5OmlubGluZX0jYWN0aW9uUGFuZWwgI2NsaWNrYWJsZVNuc1ZwY0J1dHRvbiwjYWN0aW9uUGFuZWwgI2NsaWNrYWJsZVZwY0J1dHRvbntmb250LXdlaWdodDo3MDB9I2FjdGlvblBhbmVsICNjbGlwcGVkQ291cG9uLmNjeF9kcHYyLnNuc19vcHRpbiwjYWN0aW9uUGFuZWwgI2NsaXBwZWRDb3Vwb25TbnMuY2N4X2RwdjIuc25zX29wdGluLCNhY3Rpb25QYW5lbCAjY291cG9uU25zV2l0aE9uZVRpbWVTZWxlY3RlZC5jY3hfZHB2Mi5zbnNfb3B0aW4sI2FjdGlvblBhbmVsICNlcnJvckluQ2xpcHBpbmcuY2N4X2RwdjIuc25zX29wdGluLCNhY3Rpb25QYW5lbCAjdW5jbGlwcGVkQ291cG9uLmNjeF9kcHYyLnNuc19vcHRpbiwjYWN0aW9uUGFuZWwgI3VuY2xpcHBlZENvdXBvblNucy5jY3hfZHB2Mi5zbnNfb3B0aW57ZGlzcGxheTpub25lfSNhY3Rpb25QYW5lbCAudnBjX2NsaXBfZXJyb3IgI2Vycm9ySW5DbGlwcGluZy5jY3hfZHB2Mi5zbnNfb3B0aW57ZGlzcGxheTppbmxpbmV9I2FjdGlvblBhbmVsLmFwLW9uZXRpbWUgLnJlZ3VsYXJWcGMudnBjX2NsaXBwZWQudnBjX29uZVRpbWVCdXkgI2NsaXBwZWRDb3Vwb24uY2N4X2RwdjIuc25zX29wdGluLCNhY3Rpb25QYW5lbC5hcC1vbmV0aW1lIC5yZWd1bGFyVnBjLnZwY19jbGlwcGVkLnZwY19zbnMgI2NsaXBwZWRDb3Vwb25TbnMuY2N4X2RwdjIuc25zX29wdGluLCNhY3Rpb25QYW5lbC5hcC1vbmV0aW1lIC5yZWd1bGFyVnBjLnZwY191bmNsaXBwZWQudnBjX29uZVRpbWVCdXkgI3VuY2xpcHBlZENvdXBvbi5jY3hfZHB2Mi5zbnNfb3B0aW4sI2FjdGlvblBhbmVsLmFwLW9uZXRpbWUgLnJlZ3VsYXJWcGMudnBjX3VuY2xpcHBlZC52cGNfc25zICN1bmNsaXBwZWRDb3Vwb25TbnMuY2N4X2RwdjIuc25zX29wdGluLCNhY3Rpb25QYW5lbC5hcC1vbmV0aW1lIC5zbnNWcGMudnBjX2NsaXBwZWQudnBjX29uZVRpbWVCdXkgI2NvdXBvblNuc1dpdGhPbmVUaW1lU2VsZWN0ZWQuY2N4X2RwdjIuc25zX29wdGluLCNhY3Rpb25QYW5lbC5hcC1vbmV0aW1lIC5zbnNWcGMudnBjX2NsaXBwZWQudnBjX3NucyAjY2xpcHBlZENvdXBvblNucy5jY3hfZHB2Mi5zbnNfb3B0aW4sI2FjdGlvblBhbmVsLmFwLW9uZXRpbWUgLnNuc1ZwYy52cGNfdW5jbGlwcGVkLnZwY19vbmVUaW1lQnV5ICNjb3Vwb25TbnNXaXRoT25lVGltZVNlbGVjdGVkLmNjeF9kcHYyLnNuc19vcHRpbiwjYWN0aW9uUGFuZWwuYXAtb25ldGltZSAuc25zVnBjLnZwY191bmNsaXBwZWQudnBjX3NucyAjdW5jbGlwcGVkQ291cG9uU25zLmNjeF9kcHYyLnNuc19vcHRpbntkaXNwbGF5OmlubGluZX0jYWN0aW9uUGFuZWwgI2NsaWNrYWJsZVNuc1ZwY0J1dHRvbi52cGNfZ3JlZW5fYnV0dG9uLCNhY3Rpb25QYW5lbCAjY2xpY2thYmxlVnBjQnV0dG9uLnZwY19ncmVlbl9idXR0b257Ym9yZGVyLXN0eWxlOmRhc2hlZDtib3JkZXItd2lkdGg6MXB4O2JvcmRlci1jb2xvcjojNDI0MjQyfSNhY3Rpb25QYW5lbCAjY2xpY2thYmxlU25zVnBjQnV0dG9uLnZwY19ncmVlbl9idXR0b24gLmEtYnV0dG9uLWlubmVyLCNhY3Rpb25QYW5lbCAjY2xpY2thYmxlVnBjQnV0dG9uLnZwY19ncmVlbl9idXR0b24gLmEtYnV0dG9uLWlubmVye2JhY2tncm91bmQ6Izg3ZTM2ZTtiYWNrZ3JvdW5kOi1tb3otbGluZWFyLWdyYWRpZW50KHRvcCwjODdlMzZlIDAsIzM4YTAyYiAxMDAlKTtiYWNrZ3JvdW5kOi13ZWJraXQtZ3JhZGllbnQobGluZWFyLGxlZnQgdG9wLGxlZnQgYm90dG9tLGNvbG9yLXN0b3AoMCwjODdlMzZlKSxjb2xvci1zdG9wKDEwMCUsIzM4YTAyYikpO2JhY2tncm91bmQ6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCM4N2UzNmUgMCwjMzhhMDJiIDEwMCUpO2JhY2tncm91bmQ6LW8tbGluZWFyLWdyYWRpZW50KHRvcCwjODdlMzZlIDAsIzM4YTAyYiAxMDAlKTtmaWx0ZXI6cHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KCBzdGFydENvbG9yc3RyPScjODdlMzZlJywgZW5kQ29sb3JzdHI9JyMzOGEwMmInLCBHcmFkaWVudFR5cGU9MCApO2JhY2tncm91bmQ6LW1zLWxpbmVhci1ncmFkaWVudCh0b3AsIzg3ZTM2ZSAwLCMzOGEwMmIgMTAwJSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCM4N2UzNmUgMCwjMzhhMDJiIDEwMCUpOy13ZWJraXQtYm94LXNoYWRvdzowIC4xcmVtIDAgcmdiYSgxMjEsMTk0LDExMSwuNikgaW5zZXQ7Ym94LXNoYWRvdzowIC4xcmVtIDAgcmdiYSgxMjEsMTk0LDExMSwuNikgaW5zZXR9I2FjdGlvblBhbmVsICNjbGlja2FibGVTbnNWcGNCdXR0b24uYS1idXR0b24udnBjX2dyZWVuX2J1dHRvbjo6YWZ0ZXIsI2FjdGlvblBhbmVsICNjbGlja2FibGVWcGNCdXR0b24uYS1idXR0b24udnBjX2dyZWVuX2J1dHRvbjo6YWZ0ZXJ7Ym9yZGVyLXN0eWxlOm5vbmUhaW1wb3J0YW50fSNjb3Vwb25Cb29re3RleHQtYWxpZ246Y2VudGVyO3dvcmQtc3BhY2luZzoxMDBweDtib3JkZXI6MXB4IGRhc2hlZCAjODBBNDM5O3dpZHRoOjcwcHg7cGFkZGluZzo1cHggMDttYXJnaW4tcmlnaHQ6MTJweH0uY2xpcHBlZE1lc3NhZ2V7Y29sb3I6IzA2ODMxMH0uY2JUZXh0e2NvbG9yOiM4MEE0Mzl9W2lkJD1lcnJvckluQ2xpcHBpbmdde2Rpc3BsYXk6bm9uZX0uY291cG9uVGFibGV7d2lkdGg6YXV0b30uY291cG9uUm93e3BhZGRpbmctdG9wOjRweCFpbXBvcnRhbnR9LmNvdXBvbkJhZGdle2NvbG9yOiNmZmY7Zm9udC13ZWlnaHQ6NzAwO2JhY2tncm91bmQtY29sb3I6I2U0NzkxMTt3aGl0ZS1zcGFjZTpub3dyYXB9LmNvdXBvbkJhZGdlOmJlZm9yZXtib3JkZXItYm90dG9tOjEwcHggc29saWQgI2U0NzkxMX0uY291cG9uQmFkZ2U6YWZ0ZXJ7Ym9yZGVyLXRvcDoxMHB4IHNvbGlkICNlNDc5MTF9LmF1dG9PdmVyZmxvd3tvdmVyZmxvdzphdXRvfUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDo4MDBweCl7LnZwY0FwcGx5Q291cG9ue2Rpc3BsYXk6aW5saW5lfX0jcHJpY2VCbG9ja0NvdXBvbiAudnBjQXBwbHlDb3Vwb257cGFkZGluZy10b3A6MH0jcHJpY2VCbG9ja0NvdXBvbiAudnBjQXBwbHlDb3Vwb24gaXt0b3A6MDttYXJnaW4tdG9wOjByZW19LnZwY0FwcGx5Q291cG9uIGxhYmVse2Rpc3BsYXk6aW5saW5lO3BhZGRpbmctbGVmdDowO3RvcDowfSN2cGNCdXR0b24gLmEtZGVjbGFyYXRpdmUsI3ZwY0J1dHRvblNucyAuYS1kZWNsYXJhdGl2ZXtwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6MnB4fS5jY3hfZHB2MiAjdnBjQnV0dG9uIC5hLWRlY2xhcmF0aXZlLC5jY3hfZHB2MiAjdnBjQnV0dG9uU25zIC5hLWRlY2xhcmF0aXZle3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDowfS52cGNDb3Vwb25BcHBsaWVkTWFyayAuYS1ib3gtaW5uZXIuYS1hbGVydC1jb250YWluZXJ7cGFkZGluZy1sZWZ0OjIycHh9LnZwY0NvdXBvbkFwcGxpZWRNYXJrLmEtYWxlcnQtaW5saW5lIC5hLWljb24tYWxlcnR7ZGlzcGxheTppbmhlcml0fSNjbGlwcGVkQ291cG9uLCNjbGlwcGVkQ291cG9uT25lVGltZUJ1eSwjY2xpcHBlZENvdXBvblNucywjb25lVGltZUJ1eVZwY0J1dHRvbiwjc25zVnBjQnV0dG9uLCN1bmNsaXBwZWRDb3Vwb24sI3VuY2xpcHBlZENvdXBvblNuc3tkaXNwbGF5Om5vbmV9LnZwY19jbGlwX2Vycm9yICNlcnJvckluQ2xpcHBpbmcsLnZwY19vbmVUaW1lQnV5IC52cGNfY2xpcHBlZC5yZWd1bGFyVnBjICNjbGlwcGVkQ291cG9uLC52cGNfb25lVGltZUJ1eSAudnBjX2NsaXBwZWQucmVndWxhclZwYyAjY2xpcHBlZENvdXBvbk9uZVRpbWVCdXksLnZwY19vbmVUaW1lQnV5IC52cGNfY2xpcHBlZC5zbnNWcGMgI2NsaXBwZWRDb3Vwb24sLnZwY19vbmVUaW1lQnV5IC52cGNfY2xpcHBlZC5zbnNWcGMgI2NsaXBwZWRDb3Vwb25PbmVUaW1lQnV5LC52cGNfb25lVGltZUJ1eSAudnBjX3VuY2xpcHBlZC5yZWd1bGFyVnBjICNvbmVUaW1lQnV5VnBjQnV0dG9uLC52cGNfb25lVGltZUJ1eSAudnBjX3VuY2xpcHBlZC5yZWd1bGFyVnBjICN1bmNsaXBwZWRDb3Vwb24sLnZwY19vbmVUaW1lQnV5IC52cGNfdW5jbGlwcGVkLnNuc1ZwYyAjb25lVGltZUJ1eVZwY0J1dHRvbiwudnBjX29uZVRpbWVCdXkgLnZwY191bmNsaXBwZWQuc25zVnBjICN1bmNsaXBwZWRDb3Vwb24sLnZwY19zbnMgLnZwY19jbGlwcGVkLnJlZ3VsYXJWcGMgI2NsaXBwZWRDb3Vwb25TbnMsLnZwY19zbnMgLnZwY19jbGlwcGVkLnNuc1ZwYyAjY2xpcHBlZENvdXBvblNucywudnBjX3NucyAudnBjX3VuY2xpcHBlZC5yZWd1bGFyVnBjICNzbnNWcGNCdXR0b24sLnZwY19zbnMgLnZwY191bmNsaXBwZWQucmVndWxhclZwYyAjdW5jbGlwcGVkQ291cG9uU25zLC52cGNfc25zIC52cGNfdW5jbGlwcGVkLnNuc1ZwYyAjc25zVnBjQnV0dG9uLC52cGNfc25zIC52cGNfdW5jbGlwcGVkLnNuc1ZwYyAjdW5jbGlwcGVkQ291cG9uU25ze2Rpc3BsYXk6aW5saW5lfS5zdGFuZGFsb25lQ291cG9uIC5jb3Vwb25CYWRnZXt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7bWFyZ2luOjAgLjdyZW0gMCAwO3RvcDowfS5zdGFuZGFsb25lQ291cG9uIC5hLXNpemUtc21hbGx7bGluZS1oZWlnaHQ6MSFpbXBvcnRhbnR9LnN0YW5kYWxvbmVDb3Vwb24udnBjX2NsaXBfZXJyb3IgW2lkJD1lcnJvckluQ2xpcHBpbmddLC5zdGFuZGFsb25lQ291cG9uLnZwY19jbGlwcGVkICNjbGlwcGVkQ291cG9uLC5zdGFuZGFsb25lQ291cG9uLnZwY19jbGlwcGVkICNjbGlwcGVkQ291cG9uT25lVGltZUJ1eSwuc3RhbmRhbG9uZUNvdXBvbi52cGNfY2xpcHBlZCAjY2xpcHBlZENvdXBvblNucywuc3RhbmRhbG9uZUNvdXBvbi52cGNfdW5jbGlwcGVkICNvbmVUaW1lQnV5VnBjQnV0dG9uLC5zdGFuZGFsb25lQ291cG9uLnZwY191bmNsaXBwZWQgI3Nuc1ZwY0J1dHRvbiwuc3RhbmRhbG9uZUNvdXBvbi52cGNfdW5jbGlwcGVkICN1bmNsaXBwZWRDb3Vwb24sLnN0YW5kYWxvbmVDb3Vwb24udnBjX3VuY2xpcHBlZCAjdW5jbGlwcGVkQ291cG9uU25ze2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbjowfS5zdGFuZGFsb25lQ291cG9uIC52cGNBcHBseUNvdXBvbntkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nOjA7bWFyZ2luLXJpZ2h0Oi40cmVtfS5zdGFuZGFsb25lQ291cG9uIC52cGNBcHBseUNvdXBvbi5hLWNoZWNrYm94ICp7bGVmdDowO21hcmdpbjowfS5zdGFuZGFsb25lQ291cG9uIC52cGNBcHBseUNvdXBvbi5hLWNoZWNrYm94IGl7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXJpZ2h0Oi40cmVtfS5zdGFuZGFsb25lQ291cG9uLnZwY191bmNsaXBwZWQgLmNvdXBvbkRldGFpbHNMaW5re3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0uc3RhbmRhbG9uZUNvdXBvbiAudnBjQ291cG9uQXBwbGllZE1hcmt7bWFyZ2luOjAgLjJyZW0gMCAwO3ZlcnRpY2FsLWFsaWduOnRvcH0uc3RhbmRhbG9uZUNvdXBvbiAjY2xpcHBlZENvdXBvblNucyAudnBjQ291cG9uQXBwbGllZE1hcmt7ZGlzcGxheTpibG9ja30uc3RhbmRhbG9uZUNvdXBvbi52cGNfY2xpcHBlZCAuY291cG9uQmFkZ2V7ZmxvYXQ6bGVmdH0uc3RhbmRhbG9uZUNvdXBvbi52cGNfY2xpcHBlZCAjY2xpcHBlZENvdXBvblNuc3tkaXNwbGF5OmJsb2NrO292ZXJmbG93OmhpZGRlbn0jc3VwZXJsZWFmQWN0aW9uUGFuZWwuYXAtb2ZmZXItc2VsZWN0b3ItZGlnaXRhbCAudnBjX29uZVRpbWVCdXksI3N1cGVybGVhZkFjdGlvblBhbmVsLmFwLW9mZmVyLXNlbGVjdG9yLXVzZWQgLnZwY19vbmVUaW1lQnV5e2Rpc3BsYXk6bm9uZX0jc3VwZXJsZWFmQWN0aW9uUGFuZWwgLmNvdXBvblJvdy5hLW5vd3JhcHt3aWR0aDo0MHB4fSNzdXBlcmxlYWZBY3Rpb25QYW5lbCAuY291cG9uRmVhdHVyZSAjY2xpcHBlZENvdXBvbiwjc3VwZXJsZWFmQWN0aW9uUGFuZWwgLmNvdXBvbkZlYXR1cmUgI2Vycm9ySW5DbGlwcGluZywjc3VwZXJsZWFmQWN0aW9uUGFuZWwgLmNvdXBvbkZlYXR1cmUgI3VuY2xpcHBlZENvdXBvbntwYWRkaW5nLWxlZnQ6NHB4fS5oaWRlQ291cG9ue2Rpc3BsYXk6bm9uZX1cbi5vbmVjbGljay1ndWlkZXtiYWNrZ3JvdW5kOiNkMWY3ZTc7Y29sb3I6IzAwMkYzNn0ub25lY2xpY2stZ3VpZGUtZ3JleXtiYWNrZ3JvdW5kOiNmNmY2ZjY7Y29sb3I6IzAwMkYzNn1cbiNzZi1zZy1sb2FkaW5nLnNmTG9hZGluZywjc2Ytc2ctcm9vdC5zZi1tMiAuc2ZSb290e3dpZHRoOjc4MHB4fSNzZi1zZy1sb2FkaW5nLnNmTG9hZGluZyAuc2ZIZWFkZXIsI3NmLXNnLXJvb3Quc2YtbTIgLnNmUm9vdCAuc2ZIZWFkZXJ7YmFja2dyb3VuZDojZjlmOWY5O2hlaWdodDozNnB4O2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNlMmUyZTJ9I3NmLXNnLWxvYWRpbmcuc2ZMb2FkaW5nIC5zZkhlYWRlciAuc2ZCYWNrLCNzZi1zZy1yb290LnNmLW0yIC5zZlJvb3QgLnNmSGVhZGVyIC5zZkJhY2t7cG9zaXRpb246YWJzb2x1dGU7dG9wOjEwcHg7bGVmdDo4cHg7Y3Vyc29yOnBvaW50ZXJ9I3NmLXNnLWxvYWRpbmcuc2ZMb2FkaW5nIC5zZkhlYWRlciAuc2ZCYWNrIHNwYW4sI3NmLXNnLXJvb3Quc2YtbTIgLnNmUm9vdCAuc2ZIZWFkZXIgLnNmQmFjayBzcGFue3BhZGRpbmctbGVmdDoxMHB4fSNzZi1zZy1sb2FkaW5nLnNmTG9hZGluZyAuc2ZIZWFkZXIgLnNmQmFjayBzcGFuOjpiZWZvcmUsI3NmLXNnLXJvb3Quc2YtbTIgLnNmUm9vdCAuc2ZIZWFkZXIgLnNmQmFjayBzcGFuOjpiZWZvcmV7Y29udGVudDonXFwyMDM5Jztwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6LTFweDtsZWZ0Oi00cHh9I3NmLXNnLWxvYWRpbmcuc2ZMb2FkaW5nIC5zZkxvYWRpbmdDb250ZW50LCNzZi1zZy1yb290LnNmLW0yIC5zZlJvb3QgLnNmTG9hZGluZ0NvbnRlbnR7bWFyZ2luLXRvcDoyMjhweH0jc2Ytc2ctbG9hZGluZy5zZkxvYWRpbmcgLnNmQnV0dG9uTGFiZWwucmlnaHRBcnJvd0JlZm9yZSwjc2Ytc2ctcm9vdC5zZi1tMiAuc2ZSb290IC5zZkJ1dHRvbkxhYmVsLnJpZ2h0QXJyb3dCZWZvcmV7cGFkZGluZzowIDFlbSAwIC41ZW19I3NmLXNnLWxvYWRpbmcuc2ZMb2FkaW5nIC5zZkJ1dHRvbkxhYmVsLnJpZ2h0QXJyb3dCZWZvcmU6OmJlZm9yZSwjc2Ytc2ctcm9vdC5zZi1tMiAuc2ZSb290IC5zZkJ1dHRvbkxhYmVsLnJpZ2h0QXJyb3dCZWZvcmU6OmJlZm9yZXtjb250ZW50OidcXDI1QjYnO2ZvbnQtc2l6ZToyMXB4O3BhZGRpbmctcmlnaHQ6NHB4O3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDoycHh9I3NmLXNnLWxvYWRpbmcuc2ZMb2FkaW5nICNzZi1jYWxsLXRvLWFjdGlvbi1ib2R5LCNzZi1zZy1yb290LnNmLW0yIC5zZlJvb3QgI3NmLWNhbGwtdG8tYWN0aW9uLWJvZHl7d2lkdGg6NjAlO21hcmdpbjphdXRvfSNzZi1zZy1sb2FkaW5nLnNmTG9hZGluZyAuc2ZCb2R5LCNzZi1zZy1yb290LnNmLW0yIC5zZlJvb3QgLnNmQm9keXtoZWlnaHQ6NTI0cHh9I3NmLXNnLWxvYWRpbmcuc2ZMb2FkaW5nIC5zZlNob2VCYW5uZXIsI3NmLXNnLXJvb3Quc2YtbTIgLnNmUm9vdCAuc2ZTaG9lQmFubmVye2JhY2tncm91bmQ6dXJsKGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0FVSUNsaWVudHMvRGV0YWlsUGFnZVNvZnRsaW5lc0ZpdFByZWxvYWRBc3NldHMtc2hvZV9iYW5uZXItNmJmNDc4ZGE3NTE4YjJmZWUwZmRlMDgyZTUyNTE2YmQyZjIzNDNjZC5fVjJfLnBuZykgMCAwIG5vLXJlcGVhdDt3aWR0aDo3ODRweDtoZWlnaHQ6ODJweH0jc2Ytc2ctbG9hZGluZy5zZkxvYWRpbmcgLnNmSG93SXRGaXRzQ29udGFpbmVyLCNzZi1zZy1yb290LnNmLW0yIC5zZlJvb3QgLnNmSG93SXRGaXRzQ29udGFpbmVye2JhY2tncm91bmQtY29sb3I6I2Y5ZjlmOTtoZWlnaHQ6MjcycHh9I3NmLXNnLWxvYWRpbmcuc2ZMb2FkaW5nIC5zZkNhbGxUb0FjdGlvbkNvbnRhaW5lciwjc2Ytc2ctcm9vdC5zZi1tMiAuc2ZSb290IC5zZkNhbGxUb0FjdGlvbkNvbnRhaW5lcntib3gtc2hhZG93OjAgMnB4IDNweCAtMnB4IHJnYmEoMCwwLDAsLjUpO3Bvc2l0aW9uOnJlbGF0aXZlO2hlaWdodDoxNzBweH0jc2Ytc2ctbG9hZGluZy5zZkxvYWRpbmcgI2ZpdFJlY29tbWVuZGF0aW9uc1F1b3RlU2VjdGlvbiwjc2Ytc2ctcm9vdC5zZi1tMiAuc2ZSb290ICNmaXRSZWNvbW1lbmRhdGlvbnNRdW90ZVNlY3Rpb257cG9zaXRpb246cmVsYXRpdmU7dG9wOi00cHh9XG4uY2VyYmVydXMtbm8td3JhcHt3aGl0ZS1zcGFjZTpub3dyYXB9LmNlcmJlcnVzLWFzaW4ucDEzbi1zYy10cnVuY2F0ZXtkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nLXJpZ2h0OjEwcHh9LmNlcmJlcnVzLWlzdGhpc2hlbHBmdWwtYnV0dG9ue2Rpc3BsYXk6aW5saW5lLWJsb2NrfSNjZXJiZXJ1c1ZvdGVUaGFua1lvdXtkaXNwbGF5Om5vbmV9XG4jZGlnaXRhbC1kYXNoLWNyZWF0ZSAjZGlnaXRhbC1kYXNoLWNyZWF0ZS1zdWNjZXNzLW1lc3NhZ2V7ZGlzcGxheTpub25lfSNkaWdpdGFsLWRhc2gtY3JlYXRlICNkaWdpdGFsLWRhc2gtY3JlYXRlLWVycm9yLW1lc3NhZ2V7ZGlzcGxheTpub25lfSNkaWdpdGFsLWRhc2gtY3JlYXRlLnN1Y2Nlc3MgI2RpZ2l0YWwtZGFzaC1jcmVhdGUtc3VjY2Vzcy1tZXNzYWdle2Rpc3BsYXk6YmxvY2t9I2RpZ2l0YWwtZGFzaC1jcmVhdGUuc3VjY2VzcyAuZGlnaXRhbC1kYXNoLWNyZWF0ZS1idXR0b257ZGlzcGxheTpub25lfSNkaWdpdGFsLWRhc2gtY3JlYXRlLmVycm9yICNkaWdpdGFsLWRhc2gtY3JlYXRlLWVycm9yLW1lc3NhZ2V7ZGlzcGxheTpibG9ja30jZGlnaXRhbC1kYXNoLWNyZWF0ZSAjZGlnaXRhbC1kYXNoLWNyZWF0ZS1zdWNjZXNzLWNoYW5nZW92ZXIgLmEtY2hhbmdlb3Zlci1pbm5lcnt3aWR0aDoyNXJlbTttYXJnaW4tbGVmdDotMTIuNXJlbX0jYWN0aW9uUGFuZWwgI3RvZ2dsZUJ1eUJveCAjZGlnaXRhbC1kYXNoLWNyZWF0ZS1oaWdoLXByb21pbmVuY2UgLmEtYnV0dG9uLXRleHQuYS10ZXh0LWxlZnR7dGV4dC1hbGlnbjpjZW50ZXIhaW1wb3J0YW50fS5kaWdpdGFsLWRhc2gtaWxtLWJvdW5kYXJ5e21hcmdpbjotMS4ycmVtIC0xLjRyZW0gMH0uZGlnaXRhbC1kYXNoLWlsbS13cmFwcGVye3dpZHRoOjMyMHB4O2hlaWdodDo0NXB4O292ZXJmbG93OmhpZGRlbjtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tcmlnaHQ6YXV0bzttYXJnaW4tbGVmdDphdXRvO21hcmdpbi10b3A6LTEzcHh9LmRpZ2l0YWwtZGFzaC1pbG0tYnV0dG9uLW91dGVyLXdyYXBwZXJ7cG9zaXRpb246YWJzb2x1dGU7dG9wOjEwcHg7cmlnaHQ6MTlweDstd2Via2l0LWJvcmRlci1yYWRpdXM6NDMlLzEwMCU7LW1vei1ib3JkZXItcmFkaXVzOjQzJS8xMDAlOy1tcy1ib3JkZXItcmFkaXVzOjQzJS8xMDAlO2JvcmRlci1yYWRpdXM6NDMlLzEwMCU7Ym9yZGVyOnNvbGlkICM4Nzk0OTUgMXB4O2JhY2tncm91bmQ6I2E5YjZiNztwYWRkaW5nOjJweH0uZGlnaXRhbC1kYXNoLWlsbS1idXR0b24taW1hZ2V7LXdlYmtpdC1ib3JkZXItcmFkaXVzOjQzJS8xMDAlOy1tb3otYm9yZGVyLXJhZGl1czo0MyUvMTAwJTstbXMtYm9yZGVyLXJhZGl1czo0MyUvMTAwJTtib3JkZXItcmFkaXVzOjQzJS8xMDAlfS5kaWdpdGFsLWRhc2gtaWxtLWJ1dHRvbi13cmFwcGVye3Bvc2l0aW9uOmFic29sdXRlO3RvcDo4cHg7bGVmdDo4M3B4O2JhY2tncm91bmQ6I2VhZWRlZDtiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCNlYWVkZWQgMCwjZmZmIDEwMCUpO2JhY2tncm91bmQ6LW1vei1saW5lYXItZ3JhZGllbnQoNDVkZWcsI2VhZWRlZCAwLCNmZmYgMTAwJSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoNDVkZWcsI2VhZWRlZCAwLCNmZmYgMTAwJSk7LXdlYmtpdC1ib3JkZXItcmFkaXVzOjUwJS81MCU7LW1vei1ib3JkZXItcmFkaXVzOjUwJS81MCU7LW1zLWJvcmRlci1yYWRpdXM6NTAlLzUwJTtib3JkZXItcmFkaXVzOjUwJTtib3JkZXI6MnB4IHNvbGlkICNjZWQ2ZDc7d2lkdGg6MzMlO2hlaWdodDo3MyV9LmRpZ2l0YWwtZGFzaC1pbG0tdGV4dHtoZWlnaHQ6MzRweDt3aWR0aDoxNDZweDttYXJnaW4tdG9wOjhweDt0ZXh0LWFsaWduOnJpZ2h0O2ZvbnQtc2l6ZToxM3B4O2xpbmUtaGVpZ2h0OjE3cHh9LmRpZ2l0YWwtZGFzaC1pbG0tdGV4dC1maXJzdC1saW5le2NvbG9yOiMzZTQ1NDZ9LmRpZ2l0YWwtZGFzaC1pbG0tdGV4dC1zZWNvbmQtbGluZXtjb2xvcjojZmIwNTY3fVxuLm1zcC1sYXlvdXR7d2lkdGg6MzUwcHh9LnNhdmUtdW5zYXZlLXN1cHBsaWVycy1zZWN0aW9uIC5zdXBwbGllci1pY29ue2JhY2tncm91bmQ6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9CMkIvTVNQX3Nwcml0ZV9zdGFuZGFyZC5fVjI3OTg1MDQ3Nl8ucG5nKSBuby1yZXBlYXQgdG9wIGxlZnQ7ZmxvYXQ6bGVmdDttYXJnaW4tcmlnaHQ6MXB4O21hcmdpbi10b3A6LTRweDttYXJnaW4tYm90dG9tOmF1dG87d2lkdGg6MjZweDtoZWlnaHQ6MjZweH0uc2F2ZS11bnNhdmUtc3VwcGxpZXJzLXNlY3Rpb24gLnNlbGxlci1ib3gtY29sdW1ue3dpZHRoOjUwMHB4fS5zYXZlLXN1cHBsaWVyLXNlY3Rpb24sLnVuc2F2ZS1zdXBwbGllci1zZWN0aW9ue2N1cnNvcjpwb2ludGVyfS5zYXZlLXN1cHBsaWVyLXNlY3Rpb246aG92ZXIgLnN1cHBsaWVyLWljb24sLnVuc2F2ZS1zdXBwbGllci1zZWN0aW9uIC5zdXBwbGllci1pY29ue2JhY2tncm91bmQtcG9zaXRpb246LTI2cHggMH0udW5zYXZlLXN1cHBsaWVyLXNlY3Rpb246aG92ZXIgLnN1cHBsaWVyLWljb257YmFja2dyb3VuZC1wb3NpdGlvbjotNTJweCAwfS5zbXAtaGlkZGVue2Rpc3BsYXk6bm9uZX0udW5zYXZlLXN1cHBsaWVyLXNlY3Rpb24gLnJlbW92ZS1zdXBwbGllci1saW5rLC51bnNhdmUtc3VwcGxpZXItc2VjdGlvbjpob3ZlciAuc2F2ZWQtc3VwcGxpZXItbGlua3tkaXNwbGF5Om5vbmV9LnVuc2F2ZS1zdXBwbGllci1zZWN0aW9uOmhvdmVyIC5yZW1vdmUtc3VwcGxpZXItbGlua3tkaXNwbGF5OmlubGluZX1cbiNjcmV0dXJuc1BvbGljeUJvdHRvbVNoZWV0Q29udGVudHtwYWRkaW5nOjEwcHh9XG4uZWRwSW5ncmVzc0ljb257YmFja2dyb3VuZC1pbWFnZTp1cmwoZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCd0FBQUFNQ0FZQUFBQngyOTBQQUFBQTIwbEVRVlE0eTJOZ3pqN294WkY5NkJWRDJvSC9oREJJSFVnOUF4Q2NpR0wyT2hiRjhlcElLTU4vUWhpa0RxUWVwSThCWk1qV3kyLy9Fd08yWEhvTHRoU2tEMlRJdTNOYmlkTDM3dXdXc0tWZ0MwRXVKd1dBZlFzRUlKZVRBa0RxUnkwY0poYUNVaDBvOVpHVlNvR3BqK1JVaWpzZkh2elhzZVB4YjdpdmlNeUhSME1aL2ozWjBQRWI1aXVNZklnVFpCeVRCbHB3TFdIQmplK3dZQ1FHSEF0bGtENGV6WEh0OXJTRTc0aDRJeGFVWE9SbXl6cTBuUlFMUWVCaUxBUDNzVWkyN2FSYkNBSU4vNWxFaTQvT0oxWGIvd1lHcGxQSm9oajZBR0xYTEttcnBpYldBQUFBQUVsRlRrU3VRbUNDKTtkaXNwbGF5OmlubGluZS1ibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxM3B4O3RvcDoxcHg7aGVpZ2h0OjExcHg7YmFja2dyb3VuZC1wb3NpdGlvbjowIDB9I2VkcEluZ3Jlc3NDb250YWluZXI6aG92ZXI+LmVkcEluZ3Jlc3NJY29ue2JhY2tncm91bmQtcG9zaXRpb246LTQycHggMH1AbWVkaWEgb25seSBzY3JlZW4gYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86MS41KSxvbmx5IHNjcmVlbiBhbmQgKG1pbi0tbW96LWRldmljZS1waXhlbC1yYXRpbzoxLjUpLG9ubHkgc2NyZWVuIGFuZCAoLW8tbWluLWRldmljZS1waXhlbC1yYXRpbzozIC8gMiksb25seSBzY3JlZW4gYW5kIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOjEuNSksb25seSBzY3JlZW4gYW5kIChtaW4tcmVzb2x1dGlvbjoxOTJkcGkpey5lZHBJbmdyZXNzSWNvbntiYWNrZ3JvdW5kLWltYWdlOnVybChkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQURjQUFBQVlDQVlBQUFCZUlXV2xBQUFCdmtsRVFWUll3KzJYejBvQ1VSVEdEN2h3NHh2b0E3ajBEVndMYmllaHdPVW94VUJ2SUxobzFTcmF0MUloYW1VUDRKOFVhNUdCQ05FdS93eEVUUzNjTkRSNE8rYzJvK2JJTE96ZWdlSitjTGZmT1QrLzQzQU9BTW5vSmFEUXFJTGVuSUxlWUdJZWVwRW5lYStwdHdlSnpnNVU4VTJ2TldBaUhubVJKM2t2SzFGeHZXbUpnL0pCV3F1QUhFd0RTeFNVRHhLOWw0QjZvMFpOWkU0R2JQeHVNMUVhdlgxd1R3NUlDYnJDWDdkR1RReVBNc3kyeHNMcTJhOGo3dW1tNk5iVG15WTFJQkxNRTNtNjZaa2VIQlkzcVFHUllBdEE5SFFUTkwza2VBT3l0QmpQSlJ4dlFKWThmd1duNEJTY2dsTndDazdCL1cyNC83eCs4VlBuZTNHbVpUZUV4Ym02V0p4eDJaVzdPRzl4OGtRUFdxeHk4N3g1L0NTY1BOM2RLSHRwVnphT1gvREo4NHRqdFh6MUZBQ0hveWo0V0IxZmxJUGdUUCt4dW8wS0xRTUJISUxJbnowdzI1bjdQaHdpMWNtQmdjMDdCUEY0bW1melQzdnR3eUZheFhZV2s1a1JVUHI0WGlvY3FadURMTUxNQ0doUVNrdUdJKzEzVWdnNCtUR09Fb1gvcHhTK3llbzRnbFFWdTNHRTZvY0J4eFBVSUk2QS9YRGdlSUxER0NaWUR3T09OTlFnaG9EMWNPQkk1eXlTTE4xZVFraGlHa1R1RHBPQjliNEFoWm1PMlNxbFhFa0FBQUFBU1VWT1JLNUNZSUk9KTtkaXNwbGF5OmlubGluZS1ibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxM3B4O3RvcDoxcHg7aGVpZ2h0OjExcHg7YmFja2dyb3VuZC1wb3NpdGlvbjowIDA7YmFja2dyb3VuZC1zaXplOjIwMCUgMTAwJTtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXR9I2VkcEluZ3Jlc3NDb250YWluZXI6aG92ZXI+LmVkcEluZ3Jlc3NJY29ue2JhY2tncm91bmQtcG9zaXRpb246LTEzcHggMH19XG4jb2N0YW5lLWF1aS1leGFtcGxlLWlke2NvbG9yOnJlZH1cbi5idW5kbGUtcHJpbWUtaWNvbnttYXJnaW4tbGVmdDo1cHh9LmJ1bmRsZS1jb21wLXByZW9yZGVyLC5idW5kbGUtY29tcC1wcmljZXMsLmJ1bmRsZS1jb21wLXJldmlld3MsLmJ1bmRsZS1jb21wLXRpdGxle21hcmdpbi1ib3R0b206M3B4fS5idW5kbGUtY29tcC1wcmljZS1xdWFse2ZvbnQtc2l6ZTouOGVtO2NvbG9yOiM1NTV9LmJ1bmRsZS1jb21wLWJ1bGxldHN7bWFyZ2luLXRvcDo3cHh9LmJ1bmRsZS10aXRsZXttYXJnaW4tYm90dG9tOjE1cHh9LmJ1bmRsZS1wcmljZXtjb2xvcjojNTU1O21heC13aWR0aDo1MDBweDttaW4td2lkdGg6MzUwcHh9LmJ1bmRsZS1kaXZpZGVye2JvcmRlci1jb2xvcjojY2NjO21hcmdpbjoxNXB4IDAgMTVweCAwfS5idW5kbGUtY29tcC1wcmljZXtmb250LXNpemU6MS4yZW19I2J1bmRsZVYyX2ZlYXR1cmVfZGl2e2NsZWFyOmxlZnQ7b3ZlcmZsb3c6aGlkZGVufSNjdXN0b21pemFibGVfaW5ncmVzc3YyX3RleHR7aGVpZ2h0Ojc1cHh9XG4jYXNrX2ZlYXR1cmVfZGl2LCNhdmVyYWdlQ3VzdG9tZXJSZXZpZXdzLCNhdmVyYWdlQ3VzdG9tZXJSZXZpZXdzX2ZlYXR1cmVfZGl2e2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5hc2tQaXBle2NvbG9yOiM2NjY7cGFkZGluZzowIDVweCAwIDVweH0uYXNrQVRGTGlua3tkaXNwbGF5OmlubGluZS1ibG9ja31cbi5kcC1hcGwtcG1wLWJhZGdle2JhY2tncm91bmQtY29sb3I6IzAwNzlBRjtmb250LXdlaWdodDo0MDA7Zm9udC1zaXplOjEycHg7Zm9udC1mYW1pbHk6XCJBbWF6b24gRW1iZXJcIixBcmlhbCxzYW5zLXNlcmlmIWltcG9ydGFudDstd2Via2l0LWZvbnQtc21vb3RoaW5nOmF1dG8haW1wb3J0YW50fS5kcC1hcGwtcG1wLWJhZGdlOmJlZm9yZXtib3JkZXItYm90dG9tLWNvbG9yOiMwMDc5QUZ9LmRwLWFwbC1wbXAtYmFkZ2U6YWZ0ZXJ7Ym9yZGVyLXRvcC1jb2xvcjojMDA3OUFGfS5kcC1hcGwtcG1wLXBkLWJhZGdle3BhZGRpbmc6MCA4cHg7YmFja2dyb3VuZC1jb2xvcjojOTdFREZDO2NvbG9yOiMzMzNFNDg7ZGlzcGxheTpJbmxpbmUtYmxvY2s7Zm9udC13ZWlnaHQ6NDAwO2ZvbnQtc2l6ZToxMnB4O2ZvbnQtZmFtaWx5OlwiQW1hem9uIEVtYmVyXCIsQXJpYWwsc2Fucy1zZXJpZiFpbXBvcnRhbnQ7LXdlYmtpdC1mb250LXNtb290aGluZzphdXRvIWltcG9ydGFudDttYXJnaW46MCBhdXRvO2xpbmUtaGVpZ2h0OjIycHghaW1wb3J0YW50O3Bvc2l0aW9uOnN0YXRpYztib3JkZXItcmFkaXVzOjAhaW1wb3J0YW50O21hcmdpbi1yaWdodDotNXB4fS5kcC1hcGwtcG1wLXBkLWJhZGdlOmJlZm9yZXtib3JkZXItYm90dG9tLWNvbG9yOiM5N0VERkN9LmRwLWFwbC1wbXAtcGQtYmFkZ2U6YWZ0ZXJ7Ym9yZGVyLXRvcC1jb2xvcjojOTdFREZDfSNnb3Z0UmViYXRlUG9wb3ZlclRyaWdnZXIgLmEtaWNvbi1wb3BvdmVye2Rpc3BsYXk6bm9uZX0jZ292dFJlYmF0ZVByZWxvYWRDb250ZW50e3BhZGRpbmc6MnJlbTtoZWlnaHQ6MTAwJTtvdmVyZmxvdy14OmF1dG99LmRwLWFwbC1nb3Z0LXJlYmF0ZS1wcm9tLWJhZGdle2JhY2tncm91bmQtY29sb3I6I2UzMTgyMDtkaXNwbGF5OmlubGluZS1ibG9jaztjb2xvcjojZmZmO2ZvbnQtd2VpZ2h0OjcwMDtwYWRkaW5nLXRvcDoxcHg7cGFkZGluZy1sZWZ0OjRweDtwYWRkaW5nLXJpZ2h0OjRweH0uYXBsX3BvcG92ZXJfaG92ZXIgLmEtZGVjbGFyYXRpdmV7Zm9udC1zaXplOjE0cHh9LmFwbF9wb3BvdmVyX2hvdmVyIGE6aG92ZXJ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9LmFwbF90eXBlX2JvcmRlcl9kb3R0ZWR7Ym9yZGVyLXN0eWxlOnNvbGlkO2JvcmRlci1jb2xvcjojZWRhOTNhIWltcG9ydGFudDtiYWNrZ3JvdW5kLWNvbG9yOiNlZGE5M2E7Ym9yZGVyLXJhZGl1czoycHg7Ym9yZGVyLXdpZHRoOjFweDt0ZXh0LWFsaWduOmNlbnRlcjt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWluLXdpZHRoOjM2cHg7bGluZS1oZWlnaHQ6MTdweCFpbXBvcnRhbnR9LmFwbF91X2wgYTpob3Zlcnt0ZXh0LWRlY29yYXRpb246bm9uZX0uYXBsX3R5cGV7Zm9udC1zaXplOjEycHghaW1wb3J0YW50O2NvbG9yOiNmZmY7cGFkZGluZzowIDNweCAwIDNweH0uYXBsX2xhYmVse3ZlcnRpY2FsLWFsaWduOmJvdHRvbX0uYXBsX21lc3NhZ2V7cGFkZGluZy1sZWZ0OjFweDttYXgtd2lkdGg6NjBweDtkaXNwbGF5OmlubGluZS1ibG9jaztvdmVyZmxvdzpoaWRkZW47dmVydGljYWwtYWxpZ246bWlkZGxlO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7d2hpdGUtc3BhY2U6bm93cmFwfS5hcGxfbWVzc2FnZV9vbmx5X3BkcHt3aWR0aDo5NSU7cGFkZGluZy1sZWZ0OjFweDtkaXNwbGF5OmlubGluZS1ibG9jaztsaW5lLWhlaWdodDoxM3B4O3ZlcnRpY2FsLWFsaWduOm1pZGRsZTttYXJnaW4tYm90dG9tOjNweDttYXgtaGVpZ2h0OjQ1cHg7b3ZlcmZsb3c6aGlkZGVufS5hcGxfbWVzc2FnZV9wb3BvdmVye3BhZGRpbmctbGVmdDoxcHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7b3ZlcmZsb3c6aGlkZGVuO2xpbmUtaGVpZ2h0OjEzcHg7dmVydGljYWwtYWxpZ246bWlkZGxlO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7cGFkZGluZy1yaWdodDo4cHg7d2lkdGg6MTAwJX0uYXBsX21lc3NhZ2VfZXh7cGFkZGluZy1sZWZ0OjFweDtkaXNwbGF5OmlubGluZS1ibG9jaztvdmVyZmxvdzpoaWRkZW47bGluZS1oZWlnaHQ6MTNweDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7dGV4dC1vdmVyZmxvdzplbGxpcHNpcztwYWRkaW5nLXJpZ2h0OjVweDt3aWR0aDoxMDAlfS5hcGxfbWVzc2FnZV90aXBze2Rpc3BsYXk6aW5saW5lLWJsb2NrO292ZXJmbG93OmhpZGRlbjt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7Zm9udC1zaXplOjEzcHh9LmFwbF9tX2ZvbnRfdGl0bGV7Y29sb3I6IzAwMDtmb250LXdlaWdodDo3MDA7d2hpdGUtc3BhY2U6bm93cmFwfS5hcGxfbV9mb250X21lc3NhZ2V7Zm9udC1zaXplOjEzcHghaW1wb3J0YW50O3doaXRlLXNwYWNlOm5vcm1hbH0uYXBsX2RpdmlkZXJfZG90dGVke21hcmdpbi1ib3R0b206MnB4O21hcmdpbi10b3A6NXB4O2JvcmRlci1zdHlsZTpkb3R0ZWR9LmFwbF9jb250YWluZXJfaW5saW5le2Rpc3BsYXk6aW5saW5lLWJsb2NrfSNhcHBsaWNhYmxlX3Byb21vdGlvbl9saXN0X3NlY3ttYXJnaW4tYm90dG9tOjB9LmFwbF9iYWRnZUh2YUNvdXBvbnt3aWR0aDo2MHB4O3ZlcnRpY2FsLWFsaWduOnRvcCFpbXBvcnRhbnR9LmFwbF9odmFDb3Vwb25UQW5kQ3twb3NpdGlvbjpyZWxhdGl2ZTt0b3A6MS41cHh9LmFwbF9yZWRlZW1fZGlzcGxheXtkaXNwbGF5OmlubGluZS1ibG9ja30uYXBsX3JlZGVlbV9oaWRle2Rpc3BsYXk6bm9uZX0uYXBsX2xfYmxhY2t7Y29sb3I6IzAwMCFpbXBvcnRhbnR9LnBkcF9jaGVja291dF9kaXNjb3VudF9mb250e2ZvbnQtc2l6ZToxNXB4O2ZvbnQtd2VpZ2h0OjcwMH0ucGRwX25vX3J1c2hfaW5zdGFudF9kaXNjb3VudF9mb250e2ZvbnQtc2l6ZToxNXB4O2ZvbnQtd2VpZ2h0OjcwMH0uYXBsX3NlZV9wb3B7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246bWlkZGxlfS5kcC1hcGwtZ292dC1yZWJhdGUtcHJvbS1zZWN0aW9ue21hcmdpbi1ib3R0b206MH1cbiNmaXQtY3gtbW9iaWxlLWNvbnRhaW5lciAuYS10YWItY29udGVudD4uYS1ib3gtaW5uZXJ7cGFkZGluZzowfSNmaXQtY3gtdGFiLXNldHt3aGl0ZS1zcGFjZTpub3dyYXB9I2ZpdC1jeC10YWItc2V0IC5maXQtY3gtdGFiLWhlYWRpbmd7ZGlzcGxheTppbmxpbmUtYmxvY2s7ZmxvYXQ6bm9uZX0jZml0LWN4LW1vYmlsZS1jb250YWluZXIgLmEtdGFiLWNvbnRlbnR7bWluLWhlaWdodDo0NDlweH0jZXJyb3ItYWpheHttYXJnaW46MjBweH0jZml0Wm9uZV9mZWF0dXJlX2RpdnttYXJnaW4tdG9wOjEwcHg7cGFkZGluZy1sZWZ0OjJweDt3aGl0ZS1zcGFjZTpub3dyYXB9I2ZpdC1pbnB1dCAuc2l6ZS1vcHRpb257bWluLXdpZHRoOjU2cHh9I2ZpdC1pbnB1dCAuc2l6ZS1vcHRpb25ze21hcmdpbjowIGF1dG87bWF4LXdpZHRoOjcwNHB4fSNmaXQtaW5wdXQgLnNpemUtb2Zmc2V0e21pbi13aWR0aDoxNzRweH0jZml0LWlucHV0IC5zaXplLW9mZnNldCBiciwjZml0LWlucHV0IC5zaXplLW9mZnNldCBicjphZnRlcntjb250ZW50OlwiIFwifSNmaXQtaW5wdXQgLm5vcm1hbGl6ZWQtd2lkdGh7bWluLXdpZHRoOjkycHh9I3NpemUtcmVjb21tZW5kYXRpb257Ym9yZGVyLWJvdHRvbToxcHggc29saWQgIzAwMDtib3JkZXItdG9wOjFweCBzb2xpZCAjMDAwO21hcmdpbjowIGF1dG87dGV4dC1hbGlnbjpjZW50ZXI7d2lkdGg6MTEwcHh9I2ZpdC12aXN1YWx7bWFyZ2luOjAgYXV0b30jZml0LXZpc3VhbCwjZml0LXZpc3VhbCBpbWd7d2lkdGg6MjgwcHh9I2ZpdC1rZXl7bWFyZ2luOjAgYXV0bzt3aWR0aDoxNjBweH0jZml0LWtleS1sYWJlbC0xe2Zsb2F0OmxlZnR9I2ZpdC1rZXktbGFiZWwtMntmbG9hdDpyaWdodH0jZml0LXJhbmdle2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LHJlZCAwLG9yYW5nZSAxMCUsI2ZmMCAyMCUsIzlhY2QzMiA1MCUsIzBmZiA4MCUsIzAwZiAxMDAlKTtoZWlnaHQ6NHB4O21hcmdpbjowIGF1dG87d2lkdGg6MTUwcHh9XG4uZGlzY291bnRQaWxsV3JhcHBlcnttYXJnaW46MDtmb250LXNpemU6MTNweDtsaW5lLWhlaWdodDoxOXB4O2Rpc3BsYXk6aW5saW5lLWJsb2NrO2ZvbnQtd2VpZ2h0OjQwMDtjdXJzb3I6cG9pbnRlcn0uZGlzY291bnRQaWxsV3JhcHBlciAucGlsbHtkaXNwbGF5OmlubGluZS1ibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTtiYWNrZ3JvdW5kOiNkZGQ7Y29sb3I6IzU1NTttaW4td2lkdGg6MzhweDt6LWluZGV4OjA7dGV4dC1hbGlnbjpjZW50ZXJ9LmRpc2NvdW50UGlsbFdyYXBwZXIgLnBpbGwuZGlzY291bnRQaWxsTGVmdHtib3JkZXItcmFkaXVzOjEwcHggMCAwIDEwcHg7bWFyZ2luLXJpZ2h0OjhweDtwYWRkaW5nOjFweCAycHggMCA4cHh9LmRpc2NvdW50UGlsbFdyYXBwZXIgLnBpbGwuZGlzY291bnRQaWxsTGVmdC5waWxsTGlnaHRVcHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmE3MjM7Y29sb3I6IzExMX0uZGlzY291bnRQaWxsV3JhcHBlciAucGlsbC5kaXNjb3VudFBpbGxSaWdodHtib3JkZXItcmFkaXVzOjAgMTBweCAxMHB4IDA7cGFkZGluZzoxcHggOHB4IDAgMnB4fS5kaXNjb3VudFBpbGxXcmFwcGVyIC5waWxsLmRpc2NvdW50UGlsbFJpZ2h0LnBpbGxMaWdodFVwe2JhY2tncm91bmQtY29sb3I6I2ZmYTcyMztjb2xvcjojMTExfS5kaXNjb3VudFBpbGxXcmFwcGVyIC5waWxsLmRpc2NvdW50UGlsbHtib3JkZXItcmFkaXVzOjEwcHg7cGFkZGluZzoxcHggOHB4IDAgOHB4O21pbi13aWR0aDo0MnB4O2JhY2tncm91bmQ6I2ZmYTcyM30uZGlzY291bnRQaWxsV3JhcHBlciAuZGlzY291bnRUZXh0e2JhY2tncm91bmQtY29sb3I6aW5oZXJpdDtjb2xvcjojMTExfS5kaXNjb3VudFBpbGxXcmFwcGVyIC5kaXNjb3VudFRleHRMZWZ0LC5kaXNjb3VudFBpbGxXcmFwcGVyIC5kaXNjb3VudFRleHRSaWdodHtiYWNrZ3JvdW5kLWNvbG9yOmluaGVyaXR9LmRpc2NvdW50UGlsbFdyYXBwZXIgLmRpc2NvdW50VGV4dExlZnQ6YWZ0ZXIsLmRpc2NvdW50UGlsbFdyYXBwZXIgLmRpc2NvdW50VGV4dFJpZ2h0OmFmdGVye3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3dpZHRoOjEwcHg7aGVpZ2h0OjEwMCU7dHJhbnNmb3JtOnNrZXcoLTIwZGVnKTtiYWNrZ3JvdW5kLWNvbG9yOmluaGVyaXQ7Y29udGVudDonJzt6LWluZGV4Oi0xfS5kaXNjb3VudFBpbGxXcmFwcGVyIC5kaXNjb3VudFRleHRMZWZ0OmFmdGVye3JpZ2h0Oi00cHh9LmRpc2NvdW50UGlsbFdyYXBwZXIgLmRpc2NvdW50VGV4dFJpZ2h0OmFmdGVye2xlZnQ6LTRweH0jb25tbC1uZXctb3ItdW5yZWNvZ25pemVkLXNucy1jdXN0b21lci1sZWFybi1tb3JlLCNvbm1sLW5vbi10aWVyZWQtbGVhcm4tbW9yZSwjb25tbC10aWVyZWQtbGVhcm4tbW9yZSwjc25zLW5vbi10aWVyZWQtbGVhcm4tbW9yZSwjc25zLXRpZXJlZC1sZWFybi1tb3Jle2Rpc3BsYXk6aW5saW5lLWJsb2NrfSNvbm1sdjJGb3JtRmllbGRze2JvcmRlcjowO3BhZGRpbmc6MDttYXJnaW46MDtib3JkZXItY29sbGFwc2U6Y29sbGFwc2V9I3BlLWZhbGxiYWNrLW1zZ2JveCAuYS1wb3BvdmVyLXRyaWdnZXIgLmEtaWNvbi1wb3BvdmVye2Rpc3BsYXk6bm9uZX0uZXhjbHVzaXZlbHktcHJpbWUtc2lnbnVwLWJ1dHRvbi5hLWJ1dHRvbntib3JkZXItY29sb3I6IzMwNzE4YiAjMmI2NTdjICMyNjU4NmN9LmV4Y2x1c2l2ZWx5LXByaW1lLXNpZ251cC1idXR0b24uYS1idXR0b257YmFja2dyb3VuZDojNDlBREQzfS5leGNsdXNpdmVseS1wcmltZS1zaWdudXAtYnV0dG9uLmEtYnV0dG9uIC5hLWJ1dHRvbi1pbm5lcntiYWNrZ3JvdW5kOiMzNjdlOWI7YmFja2dyb3VuZDotbW96LWxpbmVhci1ncmFkaWVudCh0b3AsIzRBOEJBNSAwLCMzNjdFOUIgNTAlLCMzMDcxOEIgMTAwJSk7YmFja2dyb3VuZDotd2Via2l0LWdyYWRpZW50KGxpbmVhcixsZWZ0IHRvcCxsZWZ0IGJvdHRvbSxjb2xvci1zdG9wKDAsIzRBOEJBNSksY29sb3Itc3RvcCguNSwjMzY3RTlCKSxjb2xvci1zdG9wKDEsIzMwNzE4QikpO2JhY2tncm91bmQ6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCM0QThCQTUgMCwjMzY3RTlCIDUwJSwjMzA3MThCIDEwMCUpO2JhY2tncm91bmQ6LW8tbGluZWFyLWdyYWRpZW50KHRvcCwjNEE4QkE1IDAsIzM2N0U5QiA1MCUsIzMwNzE4QiAxMDAlKTtiYWNrZ3JvdW5kOi1tcy1saW5lYXItZ3JhZGllbnQodG9wLCM0QThCQTUgMCwjMzY3RTlCIDUwJSwjMzA3MThCIDEwMCUpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwjNEE4QkE1IDAsIzM2N0U5QiA1MCUsIzMwNzE4QiAxMDAlKTtmaWx0ZXI6cHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9JyM0QThCQTUnLCBlbmRDb2xvcnN0cj0nIzMwNzE4QicsIEdyYWRpZW50VHlwZT0wKX0uZXhjbHVzaXZlbHktcHJpbWUtc2lnbnVwLWJ1dHRvbi5hLWJ1dHRvbiAuYS1idXR0b24taW5uZXJ7LXdlYmtpdC1ib3gtc2hhZG93OjAgMXB4IDAgcmdiYSgyNTUsMjU1LDI1NSwuMTUpIGluc2V0Oy1tb3otYm94LXNoYWRvdzowIDFweCAwIHJnYmEoMjU1LDI1NSwyNTUsLjE1KSBpbnNldDtib3gtc2hhZG93OjAgMXB4IDAgcmdiYSgyNTUsMjU1LDI1NSwuMTUpIGluc2V0fS5leGNsdXNpdmVseS1wcmltZS1zaWdudXAtYnV0dG9uLmEtYnV0dG9uIC5hLWJ1dHRvbi10ZXh0e2NvbG9yOiNmZmZ9LmV4Y2x1c2l2ZWx5LXByaW1lLXNpZ251cC1idXR0b24uYS1idXR0b246aG92ZXJ7Ym9yZGVyLWNvbG9yOiMyYjY1N2MgIzI2NTg2YyAjMjA0YzVkfS5leGNsdXNpdmVseS1wcmltZS1zaWdudXAtYnV0dG9uLmEtYnV0dG9uOmhvdmVyIC5hLWJ1dHRvbi1pbm5lcntiYWNrZ3JvdW5kOiMzMDcxOGI7YmFja2dyb3VuZDotbW96LWxpbmVhci1ncmFkaWVudCh0b3AsIzM2N0U5QiAwLCMzMDcxOEIgNTAlLCMyQjY1N0MgMTAwJSk7YmFja2dyb3VuZDotd2Via2l0LWdyYWRpZW50KGxpbmVhcixsZWZ0IHRvcCxsZWZ0IGJvdHRvbSxjb2xvci1zdG9wKDAsIzM2N0U5QiksY29sb3Itc3RvcCguNSwjMzA3MThCKSxjb2xvci1zdG9wKDEsIzJCNjU3QykpO2JhY2tncm91bmQ6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCMzNjdFOUIgMCwjMzA3MThCIDUwJSwjMkI2NTdDIDEwMCUpO2JhY2tncm91bmQ6LW8tbGluZWFyLWdyYWRpZW50KHRvcCwjMzY3RTlCIDAsIzMwNzE4QiA1MCUsIzJCNjU3QyAxMDAlKTtiYWNrZ3JvdW5kOi1tcy1saW5lYXItZ3JhZGllbnQodG9wLCMzNjdFOUIgMCwjMzA3MThCIDUwJSwjMkI2NTdDIDEwMCUpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwjMzY3RTlCIDAsIzMwNzE4QiA1MCUsIzJCNjU3QyAxMDAlKTtmaWx0ZXI6cHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9JyMzNjdFOUInLCBlbmRDb2xvcnN0cj0nIzJCNjU3QycsIEdyYWRpZW50VHlwZT0wKX0uZXhjbHVzaXZlbHktcHJpbWUtc2lnbnVwLWJ1dHRvbi5hLWJ1dHRvbjphY3RpdmV7Ym9yZGVyLWNvbG9yOiMyNjU4NmMgIzIwNGM1ZCAjMjA0YzVkfS5leGNsdXNpdmVseS1wcmltZS1zaWdudXAtYnV0dG9uLmEtYnV0dG9uOmFjdGl2ZSAuYS1idXR0b24taW5uZXJ7YmFja2dyb3VuZDojMzA3MThiO2JhY2tncm91bmQtaW1hZ2U6bm9uZTtmaWx0ZXI6bm9uZTstd2Via2l0LWJveC1zaGFkb3c6MCAxcHggM3B4IHJnYmEoMCwwLDAsLjIpIGluc2V0Oy1tb3otYm94LXNoYWRvdzowIDFweCAzcHggcmdiYSgwLDAsMCwuMikgaW5zZXQ7Ym94LXNoYWRvdzowIDFweCAzcHggcmdiYSgwLDAsMCwuMikgaW5zZXR9LmEtbW9tLWxpbmstcm93e3BhZGRpbmctbGVmdDo0NXB4fS5zbnMtYnV5Ym94LXVwc2VsbC10cmlnZ2Vye2N1cnNvcjpwb2ludGVyfSNzbnMtb25tbC1idXlib3gtdXBzZWxsLW1lc3NhZ2Utbm9uLXRpZXJlZCwjc25zLW9ubWwtYnV5Ym94LXVwc2VsbC1tZXNzYWdlLXRpZXJlZCwjc3Vic2NyaWJlLW9ubHksI3N1YnNjcmliZS1vbmx5LW5vLXRpZXJlZC10ZXh0LCNzdWJzY3JpYmUtb25seS10aWVyZWQtdGV4dHt0ZXh0LWFsaWduOmxlZnR9I3N1YnNjcmliZS1vbmx5LWxpbmstd2l0aC10aWVyZWQtdGV4dHtkaXNwbGF5OmlubGluZX0jc3Vic2NyaWJlLW9ubHl7ZGlzcGxheTpibG9ja30jc25zRnJlcXVlbmN5U2VjdGlvbnt0ZXh0LWFsaWduOmxlZnR9LnNucy1vbm1sLXByb2dyYW0tZGV0YWlsIC5hLXNlY3Rpb257bWFyZ2luLWJvdHRvbToxNHB4fSNzbnNQaXRjaFByaWNlX2ZlYXR1cmVfZGl2e2Rpc3BsYXk6bm9uZTt2aXNpYmlsaXR5OmhpZGRlbn0jb25tbFByaWNlQmxvY2tVcHNlbGxUZXh0e2Rpc3BsYXk6bm9uZTt2aXNpYmlsaXR5OmhpZGRlbn0jYWN0aW9uUGFuZWw6bm90KC5hcC1kZWFsKTpub3QoLmFwLXBvc3Byb21vKTpub3QoLmFwLWIyYnJkKSAjcHJpY2UgI3ByaWNlYmxvY2tfb3VycHJpY2Uub25tbC1wcmljZS1pbmFjdGl2ZSwjYWN0aW9uUGFuZWw6bm90KC5hcC1kZWFsKTpub3QoLmFwLXBvc3Byb21vKTpub3QoLmFwLWIyYnJkKSAjcHJpY2UgI3ByaWNlYmxvY2tfc2FsZXByaWNlLm9ubWwtcHJpY2UtaW5hY3RpdmV7Zm9udC1zaXplOjEzcHghaW1wb3J0YW50fSNhY3Rpb25QYW5lbDpub3QoLmFwLWRlYWwpOm5vdCguYXAtcG9zcHJvbW8pOm5vdCguYXAtYjJicmQpICNwcmljZSAjcHJpY2VibG9ja19vdXJwcmljZV9sYmwub25tbC1wcmljZS1pbmFjdGl2ZSwjYWN0aW9uUGFuZWw6bm90KC5hcC1kZWFsKTpub3QoLmFwLXBvc3Byb21vKTpub3QoLmFwLWIyYnJkKSAjcHJpY2UgI3ByaWNlYmxvY2tfc2FsZXByaWNlX2xibC5vbm1sLXByaWNlLWluYWN0aXZle3BhZGRpbmctdG9wOjAhaW1wb3J0YW50fSNhY3Rpb25QYW5lbCAjcHJpY2UgI3Nuc1ByaWNlX2xibHtwYWRkaW5nLXRvcDo3cHghaW1wb3J0YW50fSNhY3Rpb25QYW5lbCAjcHJpY2UgI3ByaWNlYmxvY2tfc25zcHJpY2V7Zm9udC1zaXplOjIxcHghaW1wb3J0YW50fVxuLmFtei1jdXN0b20taWNvbntiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvbkN1c3RvbUFkZGl0aW9uYWxBc3NldHMtc3ByaXRlLWM4ZjIzMjliZjg3NWMzYjk3YTIyZDYwMzk0YmIxOTRiYTAyYTU3ZDAuX1YyXy5wbmcpO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtiYWNrZ3JvdW5kLXNpemU6MTZweCA4MHB4O2Rpc3BsYXk6aW5saW5lLWJsb2NrO3dpZHRoOjE2cHg7aGVpZ2h0OjE2cHg7dmVydGljYWwtYWxpZ246dGV4dC1ib3R0b219QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOjEuNSksKG1pbi1yZXNvbHV0aW9uOjE0NGRwaSl7LmFtei1jdXN0b20taWNvbntiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9BVUlDbGllbnRzL0FtYXpvbkN1c3RvbUFkZGl0aW9uYWxBc3NldHMtc3ByaXRlXzJ4LWNmYjMxNWQ4YzIzNGJmMmVmMGE1Zjk3ZDJiMmZkOGRmYTNkNDZlMmQuX1YyXy5wbmcpfX0uYW16LWN1c3RvbS1pY29uLS1hbGlnbi1sZWZ0e2JhY2tncm91bmQtcG9zaXRpb246MCAwfS5hbXotY3VzdG9tLWljb24tLWFsaWduLWNlbnRlcntiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTE2cHh9LmFtei1jdXN0b20taWNvbi0tYWxpZ24tcmlnaHR7YmFja2dyb3VuZC1wb3NpdGlvbjowIC0zMnB4fS5hbXotY3VzdG9tLWljb24tLXVwbG9hZHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTQ4cHh9LmFtei1jdXN0b20taWNvbi0tZm9udHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTY0cHh9XG4uYWMtdXRpbC1hbGlnbi1sZWZ0e3RleHQtYWxpZ246bGVmdH0ucGMtdHdvLWNvbHVtbi1sYXlvdXR7cG9zaXRpb246cmVsYXRpdmU7bWF4LXdpZHRoOjk1MHB4O292ZXJmbG93OmhpZGRlbjtvdmVyZmxvdy14OmF1dG87bWluLWhlaWdodDo2MDBweDttYXgtaGVpZ2h0Ojc1MHB4fS5wYy10d28tY29sdW1uLWxheW91dCAucGMtaW5wdXQtY29udHJvbHN7bWF4LXdpZHRoOjUzMHB4O21pbi13aWR0aDo1MzBweDttaW4taGVpZ2h0OjQyMHB4O21heC1oZWlnaHQ6NjAwcHg7b3ZlcmZsb3cteTphdXRvfS5wYy10d28tY29sdW1uLWxheW91dCAucGMtaW5wdXQtY29udHJvbHMuYWMtc2luZ2xlLXRleHQtb25seXttYXgtd2lkdGg6MzAwcHg7bWluLXdpZHRoOjMwMHB4O21heC1oZWlnaHQ6NjAwcHg7b3ZlcmZsb3cteTphdXRvfS5wYy10d28tY29sdW1uLWxheW91dC5hYy1zaW5nbGUtdGV4dC1vbmx5e21pbi1oZWlnaHQ6NTMwcHh9LnBjLXR3by1jb2x1bW4tbGF5b3V0IC5wYy1wcmV2aWV3LXNlY3Rpb257d2lkdGg6NDIwcHg7bWluLWhlaWdodDo0MjBweDtwYWRkaW5nOjEwcHh9LnBjLXR3by1jb2x1bW4tbGF5b3V0IC5hYy1wcmV2aWV3LWNvbnRhaW5lcnttYXJnaW46MTBweDtvdmVyZmxvdzpoaWRkZW47cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpub25lfS5wYy10d28tY29sdW1uLWxheW91dCAuYWMtcHJldmlldy1jb250YWluZXIgLmFjLW1hc2staW1hZ2V7cG9zaXRpb246YWJzb2x1dGV9LnBjLXR3by1jb2x1bW4tbGF5b3V0IC5hYy1wcmV2aWV3LWNvbnRhaW5lciAuYWMtcGFyZW50LWNhbnZhc3tkaXNwbGF5Om5vbmV9LnBjLXR3by1jb2x1bW4tbGF5b3V0IC5hYy1wcmV2aWV3LWNvbnRhaW5lcjpudGgtY2hpbGQoMil7ZGlzcGxheTpibG9ja30ucGMtdHdvLWNvbHVtbi1sYXlvdXQgLnBjLXByZXZpZXctY2FudmFze3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjQwMHB4O2hlaWdodDo0MDBweDt0b3A6MTBweDtsZWZ0OjEwcHh9LnBjLXR3by1jb2x1bW4tbGF5b3V0IC5hYy1kZWxldGUtYnV0dG9ue3Zpc2liaWxpdHk6aGlkZGVuO3RleHQtYWxpZ246cmlnaHQ7Y3Vyc29yOnBvaW50ZXI7bWFyZ2luLWJvdHRvbToxMHB4O2ZvbnQtc2l6ZToxLjJlbX0ucGMtdHdvLWNvbHVtbi1sYXlvdXQgLmNhbnZhcy1jb250YWluZXJ7cG9zaXRpb246YWJzb2x1dGUhaW1wb3J0YW50O2JveC1zaXppbmc6Y29udGVudC1ib3h9LnBjLXR3by1jb2x1bW4tbGF5b3V0IC5jYW52YXMtY29udGFpbmVyLnNob3ctYm9yZGVye21hcmdpbi10b3A6LTJweDttYXJnaW4tbGVmdDotMnB4O2JvcmRlcjoycHggc29saWQgIzAwODI5Nn0ucGMtdHdvLWNvbHVtbi1sYXlvdXQgLnBjLXNpbmdsZS10ZXh0LWlucHV0LWNvbnRhaW5lcnttYXJnaW4tcmlnaHQ6MTBweDtvdmVyZmxvdy15OmF1dG87b3ZlcmZsb3cteDphdXRvO3BhZGRpbmctcmlnaHQ6MTBweH0ucGMtdHdvLWNvbHVtbi1sYXlvdXQgLmFjLWVycm9yLWNvbnRhaW5lcntkaXNwbGF5Om5vbmU7bWF4LXdpZHRoOjEwMCV9LnBjLXR3by1jb2x1bW4tbGF5b3V0IC5hYy1lcnJvci1jb250YWluZXIuYWN0aXZle2Rpc3BsYXk6YmxvY2t9LnBjLXR3by1jb2x1bW4tbGF5b3V0IC5wYy1idXktYm94e21hcmdpbi1ib3R0b206MTVweH0ucGMtdHdvLWNvbHVtbi1sYXlvdXQgLnBjLWJ1eS1ib3ggLmEtY29sb3ItYmFzZSwucGMtdHdvLWNvbHVtbi1sYXlvdXQgLnBjLWJ1eS1ib3ggLmEtY29sb3ItcHJpY2V7dmlzaWJpbGl0eTp2aXNpYmxlfS5wYy10d28tY29sdW1uLWxheW91dCAucGMtYnV5LWJveCAuYS1jb2xvci1iYXNlLmFjdGl2ZSwucGMtdHdvLWNvbHVtbi1sYXlvdXQgLnBjLWJ1eS1ib3ggLmEtY29sb3ItcHJpY2UuYWN0aXZle3Zpc2liaWxpdHk6dmlzaWJsZX0ucGMtdHdvLWNvbHVtbi1sYXlvdXQgLmFjLXVwbG9hZC10bkN7ZGlzcGxheTpub25lfS5wYy10d28tY29sdW1uLWxheW91dCAuYWMtY29udHJvbHMtY29udGFpbmVye2Rpc3BsYXk6bm9uZTttaW4taGVpZ2h0OjQ4MHB4fS5wYy10d28tY29sdW1uLWxheW91dCAuYWMtY29udHJvbHMtY29udGFpbmVyLmFjLXNpbmdsZS10ZXh0LW9ubHl7bWluLWhlaWdodDo0MDBweH0ucGMtdHdvLWNvbHVtbi1sYXlvdXQgLmFjLWNvbnRyb2xzLWNvbnRhaW5lcjpmaXJzdC1jaGlsZHtkaXNwbGF5OmJsb2NrfS5wYy10d28tY29sdW1uLWxheW91dCAudGh1bWJuYWlsLWNvbnRhaW5lcnt0ZXh0LWFsaWduOmxlZnQ7cG9zaXRpb246cmVsYXRpdmV9LnBjLXR3by1jb2x1bW4tbGF5b3V0IC50aHVtYm5haWwtY29udGFpbmVyIC5hYy10aHVtYm5haWx7ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246cmVsYXRpdmU7dG9wOjA7aGVpZ2h0OjgycHg7d2lkdGg6ODJweDtib3JkZXI6MXB4IHNvbGlkO292ZXJmbG93OmhpZGRlbjttYXJnaW4tcmlnaHQ6MTBweH0ucGMtdHdvLWNvbHVtbi1sYXlvdXQgLnRodW1ibmFpbC1jb250YWluZXIgLmFjLXRodW1ibmFpbC5hY3RpdmV7Ym9yZGVyOjFweCBzb2xpZCAjZTQ3OTExO2JveC1zaGFkb3c6MCAwIDFweCAxcHggI2U0NzkxMX0ucGMtdHdvLWNvbHVtbi1sYXlvdXQgLnRodW1ibmFpbC1jb250YWluZXIgLmFjLXRodW1ibmFpbC5lcnJvcntib3JkZXI6MXB4IHNvbGlkICNkMDA7Ym94LXNoYWRvdzowIDAgMXB4IDFweCAjZDAwfS5wYy10d28tY29sdW1uLWxheW91dCAudGh1bWJuYWlsLWNvbnRhaW5lciAuYWMtdGh1bWJuYWlsIC50aHVtYm5haWwtaW1hZ2V7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTt0b3A6MDtsZWZ0OjB9LnBjLXR3by1jb2x1bW4tbGF5b3V0IC50aHVtYm5haWwtY29udGFpbmVyIC5hYy10aHVtYm5haWwgLnRodW1ibmFpbC1pbWFnZSAuaWVUaHVtYm5haWwtbWFza3twb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjB9LnBjLXR3by1jb2x1bW4tbGF5b3V0IC50aHVtYm5haWwtY29udGFpbmVyIC5hYy10aHVtYm5haWwgLmFjLXRodW1ibmFpbC10ZXh0e2hlaWdodDo4MHB4O3dpZHRoOjgwcHg7bWF4LWhlaWdodDo4MHB4O21heC13aWR0aDo4MHB4O2xpbmUtaGVpZ2h0OjE4cHg7dGV4dC1hbGlnbjpjZW50ZXI7cGFkZGluZzo1cHg7d29yZC13cmFwOmJyZWFrLXdvcmQ7dGV4dC1vdmVyZmxvdzplbGxpcHNpcztkaXNwbGF5OnRhYmxlLWNlbGw7dmVydGljYWwtYWxpZ246bWlkZGxlO292ZXJmbG93OmhpZGRlbn0ucGMtcG9wb3Zlci1mb290ZXItd3JhcHBlcntwYWRkaW5nLXRvcDowO3BhZGRpbmctYm90dG9tOjB9LmFjLWltYWdlLWxvYWRlcntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6NTAlO2xlZnQ6NTAlOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLC01MCUpOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLC01MCUpOy1vLXRyYW5zZm9ybTp0cmFuc2xhdGUoLTUwJSwtNTAlKTstbXMtdHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLC01MCUpO3RyYW5zZm9ybTp0cmFuc2xhdGUoLTUwJSwtNTAlKTtkaXNwbGF5Om5vbmU7ei1pbmRleDo5OTk5O3RleHQtYWxpZ246Y2VudGVyfSNhYy1kaWFsb2ctY29uZmlybXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6NTAlO2xlZnQ6NTAlOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLC01MCUpOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLC01MCUpOy1vLXRyYW5zZm9ybTp0cmFuc2xhdGUoLTUwJSwtNTAlKTstbXMtdHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLC01MCUpO3RyYW5zZm9ybTp0cmFuc2xhdGUoLTUwJSwtNTAlKTtkaXNwbGF5Om5vbmU7ei1pbmRleDo5OTk5OTk7d2lkdGg6NDAwcHg7bWF4LXdpZHRoOjEwMCU7YmFja2dyb3VuZC1jb2xvcjojZmZmO2NvbG9yOiMwMDA7Ym9yZGVyLXJhZGl1czo0cHg7Ym9yZGVyOjFweCBzb2xpZCAjYWFhO3BhZGRpbmc6M3B4O21pbi1oZWlnaHQ6MTUwcHg7Zm9udC1zaXplOjE0cHh9I2FjLWRpYWxvZy1jb25maXJtIHB7cGFkZGluZzo3cHggMTVweDtoZWlnaHQ6ODBweDtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjMjIyO21hcmdpbi1ib3R0b206MH0jYWMtZGlhbG9nLWNvbmZpcm0gLmFjLWJ0bntib3JkZXI6MXB4IHNvbGlkICNkM2QzZDM7YmFja2dyb3VuZC1jb2xvcjojZTZlNmU2O2NvbG9yOiM1NTU7Zm9udC1mYW1pbHk6QXJpYWwsc2Fucy1zZXJpZjtib3JkZXItcmFkaXVzOjRweDtkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nOjdweCAxNXB4O21hcmdpbjoxMHB4IDVweDtmbG9hdDpyaWdodH0jYWMtZGlhbG9nLWNvbmZpcm0gLmFjLWJ0bjpob3Zlcntjb2xvcjojMjEyMTIxO2JvcmRlcjoxcHggc29saWQgIzk5OTtiYWNrZ3JvdW5kLWNvbG9yOiNkYWRhZGE7Y3Vyc29yOnBvaW50ZXJ9I2FjLWRpYWxvZy1jb25maXJtIC5hYy1kaWFsb2ctaGVhZGVye2hlaWdodDoyMHB4O2ZvbnQtd2VpZ2h0OjcwMDtmb250LXNpemU6MTRweDtib3JkZXI6MXB4IHNvbGlkICNhYWE7YmFja2dyb3VuZC1jb2xvcjojY2NjO3BhZGRpbmc6NnB4IDE1cHg7Ym9yZGVyLXJhZGl1czo0cHg7Ym94LXNpemluZzpjb250ZW50LWJveDtoZWlnaHQ6MjBweH0uYWMtaW1hZ2UtYmFja2Ryb3B7cG9zaXRpb246Zml4ZWQ7aGVpZ2h0OjEwMCU7d2lkdGg6MTAwJTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTcwLDE4NywyMDQsLjMpO2Rpc3BsYXk6bm9uZTt0b3A6MDtsZWZ0OjB9LmFtei1jdXN0b20taGlkZGVue2Rpc3BsYXk6bm9uZX0uYW16LWN1c3RvbS1saXN0LWl0ZW17ZGlzcGxheTpsaXN0LWl0ZW19I3BhcmVudFJlZmVyZW5jZURpdiwucGFyZW50UmVmZXJlbmNlRGl2e2hlaWdodDoxcHg7d2lkdGg6MXB4O292ZXJmbG93OmhpZGRlbn0jcmVmZXJlbmNlRGl2LC5yZWZlcmVuY2VEaXZ7dmlzaWJpbGl0eTpoaWRkZW47ZGlzcGxheTppbmxpbmU7d2hpdGUtc3BhY2U6bm93cmFwfUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDoxMjgwcHgpey5wYy10d28tY29sdW1uLWxheW91dCAucGMtaW5wdXQtY29udHJvbHN7bWluLXdpZHRoOjMzMHB4fS5wYy1pbnB1dC1jb250cm9scy5hYy1zaW5nbGUtdGV4dC1vbmx5e21pbi13aWR0aDozMDBweH0uYWMtc2VsZWN0ZWQtZ2FsbGVyeS1uYW1le21heC13aWR0aDoxNTBweH19QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOjEyODFweCl7LnBjLXR3by1jb2x1bW4tbGF5b3V0e21heC13aWR0aDoxMDAwcHh9LnBjLXR3by1jb2x1bW4tbGF5b3V0IC5wYy1pbnB1dC1jb250cm9sc3ttYXJnaW4tbGVmdDozMHB4fX0ucGMtZHJvcC1kb3due21hcmdpbi1sZWZ0OjVweH0ucGMtY3VzdG9tLWZvbnRze3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjA7aGVpZ2h0OjB9LnBjLWRyb3AtZG93bi1lcnJvcntib3JkZXItY29sb3I6cmVkfS5wYy1sYWJlbC10ZXh0e3dvcmQtd3JhcDpicmVhay13b3JkfS5hYy1jb25maWd1cmF0b3ItZHJvcGRvd257ZGlzcGxheTpibG9jazttYXJnaW4tbGVmdDo1cHh9LnBjLXNpbXBsZS10ZXh0LWlucHV0e21hcmdpbi1sZWZ0OjVweDttaW4td2lkdGg6MjAwcHh9LnBjLWlucHV0LWludmFsaWR7ZGlzcGxheTpub25lO3BhZGRpbmc6MnB4fS5wYy1pbnB1dC1pbnZhbGlkLmFjdGl2ZXtkaXNwbGF5OmJsb2NrfS5wYy1jdXN0b21pemF0aW9uLWVuYWJsZWR7ZGlzcGxheTpibG9ja30ucGMtY3VzdG9taXphdGlvbi1kaXNhYmxlZHtkaXNwbGF5Om5vbmV9LnBjLWN1c3RvbWl6YXRpb24tZGlzYWJsZWQuYWN0aXZle2Rpc3BsYXk6YmxvY2t9LmFjLXNpbXBsZWNvbG9ycGlja2VyLmljb257ZGlzcGxheTppbmxpbmUtYmxvY2s7Ym9yZGVyOjFweCBzb2xpZCAjY2NjO2hlaWdodDozMXB4O3dpZHRoOjMxcHg7bWFyZ2luLWxlZnQ6NXB4O21hcmdpbi10b3A6NHB4O2JhY2tncm91bmQtY29sb3I6I0ZGRjstd2Via2l0LWJveC1zaGFkb3c6aW5zZXQgMCAxcHggMXB4ICMwMDA7LW1vei1ib3gtc2hhZG93Omluc2V0IDAgMXB4IDFweCAjMDAwOy1tcy1ib3gtc2hhZG93Omluc2V0IDAgMXB4IDFweCAjMDAwO2JveC1zaGFkb3c6aW5zZXQgMCAxcHggMXB4ICMwMDA7LXdlYmtpdC10cmFuc2l0aW9uOmJvcmRlciBsaW5lYXIgLjJzLGJveC1zaGFkb3cgbGluZWFyIC4yczstbW96LXRyYW5zaXRpb246Ym9yZGVyIGxpbmVhciAuMnMsYm94LXNoYWRvdyBsaW5lYXIgLjJzOy1vLXRyYW5zaXRpb246Ym9yZGVyIGxpbmVhciAuMnMsYm94LXNoYWRvdyBsaW5lYXIgLjJzO3RyYW5zaXRpb246Ym9yZGVyIGxpbmVhciAuMnMsYm94LXNoYWRvdyBsaW5lYXIgLjJzfS5hYy1jb2xvci1waWNrZXItdHJpZ2dlcjpob3Zlcnt0ZXh0LWRlY29yYXRpb246bm9uZX0uYWMtY29sb3ItcGlja2VyLXRyaWdnZXIgaXttYXJnaW4tdG9wOjB9I3BjLXRleHRBcmVhLWZvbnRDb2xvciBhOmhvdmVye3RleHQtZGVjb3JhdGlvbjpub25lfS5hYy1jb2xvci11bHttYXJnaW4tbGVmdDowfS5hYy1jb2xvci11bCBsaXtsaXN0LXN0eWxlLXR5cGU6bm9uZTtkaXNwbGF5OmlubGluZS1ibG9ja30uYWMtY29sb3ItdWwgbGk6Zmlyc3QtY2hpbGR7bWFyZ2luLWxlZnQ6MH0uYWMtY29sb3ItdWwgbGk6bGFzdC1jaGlsZHttYXJnaW4tcmlnaHQ6MH0uYWMtY29sb3ItbGkgZGl2e21hcmdpbjoycHg7aGVpZ2h0OjI4cHg7d2lkdGg6MjhweDtjdXJzb3I6cG9pbnRlcjtib3JkZXI6MXB4IHNvbGlkICNlN2U5ZWN9LnRoZW1lLWltYWdlLWNvbnRhaW5lcnt3aWR0aDoxMDAlO2hlaWdodDoyNzBweDtvdmVyZmxvdy15OmF1dG99LmFjLWdhbGxlcnktY29udGVudC1jb250YWluZXIsLmN1c3RvbWVyLWltYWdlLWNvbnRhaW5lcntkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDo4MHB4O2hlaWdodDo4MHB4O3Bvc2l0aW9uOnJlbGF0aXZlO3RleHQtYWxpZ246Y2VudGVyO2xpbmUtaGVpZ2h0Ojc4cHg7bWFyZ2luOjVweDtib3JkZXI6MXB4IHNvbGlkICNEREQ7Ym94LXNpemluZzpjb250ZW50LWJveH0uYWMtZ2FsbGVyeS1jb250ZW50LWNvbnRhaW5lciAuc3dhdGNoLWFycm93LC5jdXN0b21lci1pbWFnZS1jb250YWluZXIgLnN3YXRjaC1hcnJvd3tiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwOi8vZy1lYzIuaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvUHJvZHVjdEN1c3RvbWl6YXRpb24vdWktaW1hZ2VzL2Rvd24tYXJyb3ctc2hhZG93LXYyLl9WMzM5ODg2NDM5Xy5wbmcpO3Bvc2l0aW9uOmFic29sdXRlO2hlaWdodDoxMXB4O3RvcDotMnB4O3dpZHRoOjEwMCU7YmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXIgdG9wO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtjbGVhcjpib3RoO2Rpc3BsYXk6bm9uZX0uYWMtZ2FsbGVyeS1jb250ZW50LWNvbnRhaW5lciBpbWcsLmN1c3RvbWVyLWltYWdlLWNvbnRhaW5lciBpbWd7d2lkdGg6YXV0bzttYXgtd2lkdGg6ODBweDtoZWlnaHQ6YXV0bzttYXgtaGVpZ2h0OjgwcHg7dmVydGljYWwtYWxpZ246bWlkZGxlfS5hYy1nYWxsZXJ5LWNvbnRlbnQtY29udGFpbmVyOmhvdmVyLC5jdXN0b21lci1pbWFnZS1jb250YWluZXI6aG92ZXJ7LXdlYmtpdC1ib3gtc2hhZG93OjAgMCA0cHggMXB4ICNlNDc5MTE7LW1vei1ib3gtc2hhZG93OjAgMCA0cHggMXB4ICNlNDc5MTE7LW1zLWJveC1zaGFkb3c6MCAwIDRweCAxcHggI2U0NzkxMTtib3gtc2hhZG93OjAgMCA0cHggMXB4ICNlNDc5MTE7Y3Vyc29yOnBvaW50ZXJ9LmFjLWdhbGxlcnktY29udGVudC1jb250YWluZXIuc2VsZWN0ZWQsLmN1c3RvbWVyLWltYWdlLWNvbnRhaW5lci5zZWxlY3RlZHtib3JkZXI6MXB4IHNvbGlkICNlNDc5MTE7LXdlYmtpdC1ib3gtc2hhZG93OjAgMCA0cHggMXB4ICNlNDc5MTE7LW1vei1ib3gtc2hhZG93OjAgMCA0cHggMXB4ICNlNDc5MTE7LW1zLWJveC1zaGFkb3c6MCAwIDRweCAxcHggI2U0NzkxMTtib3gtc2hhZG93OjAgMCA0cHggMXB4ICNlNDc5MTF9LmFjLWdhbGxlcnktY29udGVudC1jb250YWluZXIuc2VsZWN0ZWQgLnN3YXRjaC1hcnJvdywuY3VzdG9tZXItaW1hZ2UtY29udGFpbmVyLnNlbGVjdGVkIC5zd2F0Y2gtYXJyb3d7ZGlzcGxheTpibG9ja30jYWMtZ2FsbGVyeXt3aWR0aDozMjBweH0jYWMtY3VzdG9tLW9wdGlvbnMtY29udGFpbmVyPmRpdntoZWlnaHQ6NDAwcHh9bGkudmVuZG9yLWNhdGVnb3J5e2Rpc3BsYXk6YmxvY2s7bWFyZ2luLXJpZ2h0OjI1cHg7bGlzdC1zdHlsZTpub25lfWxpLnZlbmRvci1jYXRlZ29yeSAucGMtY2F0ZWdvcnktbmFtZXttYXgtd2lkdGg6MjUwcHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246bWlkZGxlO3doaXRlLXNwYWNlOm5vd3JhcDtvdmVyZmxvdzpoaWRkZW47dGV4dC1vdmVyZmxvdzplbGxpcHNpc30uYWMtZ2FsbGVyeS1jYXRlZ29yaWVzLXBvcG92ZXJ7ZmxvYXQ6cmlnaHQ7ZGlzcGxheTppbmxpbmUtYmxvY2t9LmFjLXNlbGVjdGVkLWdhbGxlcnktbmFtZXttYXgtd2lkdGg6MjAwcHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7d2hpdGUtc3BhY2U6bm93cmFwO292ZXJmbG93OmhpZGRlbjt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzfUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDoxMjgwcHgpey5hYy1zZWxlY3RlZC1nYWxsZXJ5LW5hbWV7bWF4LXdpZHRoOjE1MHB4fX0uYWMtaW1hZ2VVcGxvYWQtY29udHJvbHtvdmVyZmxvdy15OmF1dG87bWF4LWhlaWdodDozMzBweH0uYWMtdXBsb2FkZWQtaW1hZ2V7bWF4LXdpZHRoOjQzMHB4O21pbi1oZWlnaHQ6MTMwcHg7b3ZlcmZsb3cteTphdXRvfS5hYy1zZWxlY3QtdXBsb2FkZWQtaW1hZ2V7ZGlzcGxheTpub25lO2ZvbnQtd2VpZ2h0OjcwMH0uYWMtY3VzdG9tLXVwbG9hZC1jb250cm9sLWNvbnRhaW5lcntwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmlubGluZS1ibG9ja30uYWMtY3VzdG9tLXVwbG9hZC1jb250cm9sLWNvbnRhaW5lciAuYWMtY3VzdG9tLXVwbG9hZC1jb250cm9sK3NwYW5bZGF0YS1hY3Rpb249YXNzZXQtdXBsb2FkXXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtyaWdodDowO2JvdHRvbTowO2xlZnQ6MDtvcGFjaXR5OjB9LmFjLWN1c3RvbS11cGxvYWQtY29udHJvbC1jb250YWluZXIgLmFjLWN1c3RvbS11cGxvYWQtY29udHJvbCtzcGFuW2RhdGEtYWN0aW9uPWFzc2V0LXVwbG9hZF0gLmFjLWN1c3RvbS11cGxvYWQtZmlsZXt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2N1cnNvcjpwb2ludGVyfS5hYy10ZXh0SW5wdXQtY29udHJvbHtkaXNwbGF5Om5vbmV9LnBjLXRleHRBcmVhLXRleHRCb3h7aGVpZ2h0OjUwcHh9LnBjLXRleHRBcmVhLXRleHRCb3ggdGV4dGFyZWF7cmVzaXplOm5vbmV9LnBjLXRleHRBcmVhLWNvbnRhaW5lcntwb3NpdGlvbjpyZWxhdGl2ZX0ucGMtdGV4dC1jb250cm9sc3tkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tcmlnaHQ6MTBweDt2ZXJ0aWNhbC1hbGlnbjpib3R0b219LnBjLXRleHRBcmVhLWZvbnRDb2xvci11bHttYXJnaW4tbGVmdDowfS5wYy10ZXh0QXJlYS1mb250Q29sb3ItdWwgbGl7bGlzdC1zdHlsZS10eXBlOm5vbmU7ZGlzcGxheTppbmxpbmUtYmxvY2t9LnBjLXRleHRBcmVhLWZvbnRDb2xvci11bCBsaTpmaXJzdC1jaGlsZHttYXJnaW4tbGVmdDowfS5wYy10ZXh0QXJlYS1mb250Q29sb3ItdWwgbGk6bGFzdC1jaGlsZHttYXJnaW4tcmlnaHQ6MH0ucGMtdGV4dEFyZWEtZm9udENvbG9yLWxpIGRpdnttYXJnaW46MnB4O2hlaWdodDoyOHB4O3dpZHRoOjI4cHg7Y3Vyc29yOnBvaW50ZXI7Ym9yZGVyOjFweCBzb2xpZCAjZTdlOWVjfS5zaW1wbGVjb2xvcnBpY2tlci5pY29ue2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5zaW1wbGVjb2xvcnBpY2tlci5pY29uIC5hLWJ1dHRvbi1pbm5lcntiYWNrZ3JvdW5kOjAgMH0ucGMtdGV4dEFyZWEtb3ZlcmxheXt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDtiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwOi8vZy1lYzIuaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvUHJvZHVjdEN1c3RvbWl6YXRpb24vdWktaW1hZ2VzL1doaXRlQmFja2dyb3VuZC5wbmcpO3otaW5kZXg6OTk5O3RleHQtYWxpZ246Y2VudGVyfS5wYy10ZXh0QXJlYS1vdmVybGF5IHNwYW57bGluZS1oZWlnaHQ6MjMwcHg7Zm9udC13ZWlnaHQ6NzAwfS5wYy10ZXh0QXJlYS1vdmVybGF5IC5hLWljb257cG9zaXRpb246cmVsYXRpdmU7dG9wOjEwN3B4O2xlZnQ6NXB4fS5wYy1jdXRvbWVyLXRleHQgdWwgbGl7Zm9udC13ZWlnaHQ6MTAwfS5wYy10ZXh0LWxheWVyc3tkaXNwbGF5Om5vbmV9LnBjLXRleHQtcmVzZXQtd3JhcHBlcnt3aWR0aDoyMDBweH0ucGMtdGV4dC1yZXNldC1idXR0b257d2lkdGg6MTUwcHh9LnBjLXRleHQtcmVzZXQtYnV0dG9uIC5hLWJ1dHRvbi10ZXh0e3dpZHRoOjEzMHB4O21heC13aWR0aDoxMzBweDtvdmVyZmxvdzpoaWRkZW47dGV4dC1vdmVyZmxvdzplbGxpcHNpczt0ZXh0LWFsaWduOmxlZnR9QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjQxMHB4KXsjcGMtdGV4dEFyZWEtZm9udFBpY2tlcntkaXNwbGF5OmJsb2NrO21hcmdpbjowIDAgMTBweCAwfX0ucGMtc3VyZmFjZS1uYXYtY2Fyb3VzZWwtY29udGFpbmVye292ZXJmbG93OmhpZGRlbjtoZWlnaHQ6NTBweDtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZWVlO3Bvc2l0aW9uOmZpeGVkO2xlZnQ6MDt6LWluZGV4OjEwMDttYXJnaW4tdG9wOi0xMnB4O3dpZHRoOjEwMCV9LnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsLWNvbnRhaW5lcisucGMtdHdvLWNvbHVtbi1sYXlvdXR7bWFyZ2luLXRvcDo0M3B4O21heC13aWR0aDpub25lfS5wYy1zdXJmYWNlLW5hdi1jYXJvdXNlbC1jb250YWluZXIgLnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsLXZpZXdwb3J0Ojotd2Via2l0LXNjcm9sbGJhcntkaXNwbGF5Om5vbmU7aGVpZ2h0OjB9LnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsLWNvbnRhaW5lciAucGMtc3VyZmFjZS1uYXYtY2Fyb3VzZWwtdmlld3BvcnR7YmFja2dyb3VuZC1jb2xvcjojZmZmO292ZXJmbG93LXg6c2Nyb2xsO292ZXJmbG93LXk6YXV0bzt3aWR0aDoxMDAlOy13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOnRvdWNoOy1tcy1zY3JvbGwtY2hhaW5pbmc6Y2hhaW5lZDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGVaKDApfS5wYy1zdXJmYWNlLW5hdi1jYXJvdXNlbC1jb250YWluZXIgLnBjLXN1cmZhY2UtbmF2LWNhcm91c2Vse2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTpmbGV4O292ZXJmbG93LXg6dmlzaWJsZTttYXJnaW46MCAxMHB4fS5wYy1zdXJmYWNlLW5hdi1jYXJvdXNlbC1jb250YWluZXIgLnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsIC5wYy1zdXJmYWNlLW5hdi1jYXJvdXNlbC1pdGVte2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LXBvc2l0aXZlOjE7LXdlYmtpdC1mbGV4LWdyb3c6MTtmbGV4LWdyb3c6MTstbXMtZmxleC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyOy13ZWJraXQtanVzdGlmeS1jb250ZW50OmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2hlaWdodDo1MHB4O3BhZGRpbmc6MCAxMHB4fS5wYy1zdXJmYWNlLW5hdi1jYXJvdXNlbC1jb250YWluZXIgLnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsIC5wYy1zdXJmYWNlLW5hdi1jYXJvdXNlbC1pdGVtIGF7Y29sb3I6IzAwMH0ucGMtc3VyZmFjZS1uYXYtY2Fyb3VzZWwtY29udGFpbmVyIC5wYy1zdXJmYWNlLW5hdi1jYXJvdXNlbCAucGMtc3VyZmFjZS1uYXYtY2Fyb3VzZWwtaXRlbSBhIHNwYW57ZGlzcGxheTpub25lfS5wYy1zdXJmYWNlLW5hdi1jYXJvdXNlbC1jb250YWluZXIgLnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsIC5wYy1zdXJmYWNlLW5hdi1jYXJvdXNlbC1pdGVtLmFjdGl2ZXtib3JkZXItYm90dG9tOjNweCBzb2xpZCAjZTQ3OTExO2ZvbnQtd2VpZ2h0OjcwMCBhO2ZvbnQtd2VpZ2h0LWNvbG9yOiNlNDc5MTF9LnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsLWNvbnRhaW5lciAucGMtc3VyZmFjZS1uYXYtY2Fyb3VzZWwgLnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsLWl0ZW0uY3VzdG9taXplZCBhe2NvbG9yOiMwMDhhMDB9LnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsLWNvbnRhaW5lciAucGMtc3VyZmFjZS1uYXYtY2Fyb3VzZWwgLnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsLWl0ZW0uY3VzdG9taXplZCBhIHNwYW57ZGlzcGxheTppbmxpbmV9LnBjLXR3by1jb2x1bW4tbGF5b3V0LmFjLW1vYmlsZS1hcHB7bWF4LWhlaWdodDpub25lO292ZXJmbG93OmluaGVyaXR9LnBjLXR3by1jb2x1bW4tbGF5b3V0LmFjLW1vYmlsZS1hcHAgLmFjLXByZXZpZXctY29udGFpbmVye3dpZHRoOmF1dG87bWF4LXdpZHRoOjQwMHB4O21hcmdpbi10b3A6YXV0bzttYXJnaW4tbGVmdDphdXRvO21hcmdpbi1yaWdodDphdXRvfS5wYy10d28tY29sdW1uLWxheW91dC5hYy1tb2JpbGUtYXBwIC5hYy1wcmV2aWV3LWNvbnRhaW5lciBpbWd7bGVmdDowO3RvcDowfS5wYy10d28tY29sdW1uLWxheW91dC5hYy1tb2JpbGUtYXBwIC5wYy1zaW5nbGUtdGV4dC1pbnB1dC1jb250YWluZXJ7bWF4LWhlaWdodDpub25lfS5wYy10d28tY29sdW1uLWxheW91dC5hYy1tb2JpbGUtYXBwIC5wYy1pbnB1dC1jb250cm9scy5hYy1zaW5nbGUtdGV4dC1vbmx5e21heC13aWR0aDpub25lfS5wYy10d28tY29sdW1uLWxheW91dC5hYy1tb2JpbGUtYXBwIC5wYy1pbnB1dC1jb250cm9sc3ttaW4taGVpZ2h0OjA7bWF4LWhlaWdodDpub25lO21pbi13aWR0aDowO21heC13aWR0aDpub25lO21hcmdpbi1sZWZ0OjB9LnBjLXR3by1jb2x1bW4tbGF5b3V0LmFjLW1vYmlsZS1hcHAgLmFjLWltYWdlVXBsb2FkLWNvbnRyb2x7b3ZlcmZsb3c6YXV0bzttYXgtaGVpZ2h0Om5vbmU7bWFyZ2luLXRvcDowfS5wYy10d28tY29sdW1uLWxheW91dC5hYy1tb2JpbGUtYXBwIC5hYy1jb250cm9scy1jb250YWluZXJ7bWluLWhlaWdodDowfS5wYy10d28tY29sdW1uLWxheW91dC5hYy1tb2JpbGUtYXBwIC5wYy1idXlib3gtd2FybmluZy1jbG9zZXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtyaWdodDowO2ZvbnQtc2l6ZToyMHB4O3dpZHRoOjIwcHg7aGVpZ2h0OjIwcHg7bGluZS1oZWlnaHQ6MTAwJTtmb250LWZhbWlseTptb25vc3BhY2U7Y29sb3I6I2IxMjcwNH0ucGMtdHdvLWNvbHVtbi1sYXlvdXQuYWMtbW9iaWxlLWFwcCAuYWMtZ2FsbGVyeS1jYXRlZ29yaWVzLXBvcG92ZXJ7ZmxvYXQ6bm9uZTtkaXNwbGF5OmJsb2NrO21hcmdpbi10b3A6MTBweH0ucGMtdHdvLWNvbHVtbi1sYXlvdXQuYWMtbW9iaWxlLWFwcCAuYWMtc2VsZWN0ZWQtZ2FsbGVyeS1uYW1le21heC13aWR0aDo5MCV9LnBjLXR3by1jb2x1bW4tbGF5b3V0LmFjLW1vYmlsZS1hcHAgI2FjLWRpYWxvZy1jb25maXJte3Bvc2l0aW9uOmZpeGVkO3RvcDo1MCU7bGVmdDo1MCU7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsLTUwJSk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsLTUwJSk7LW8tdHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLC01MCUpOy1tcy10cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsLTUwJSk7dHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLC01MCUpO3dpZHRoOjkwJX0ucGMtdHdvLWNvbHVtbi1sYXlvdXQuYWMtbW9iaWxlLWFwcCAuYWMtaW1hZ2UtbG9hZGVye3Bvc2l0aW9uOmZpeGVkO3RvcDo1MCU7bGVmdDo1MCU7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsLTUwJSk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsLTUwJSk7LW8tdHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLC01MCUpOy1tcy10cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsLTUwJSk7dHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLC01MCUpfS5wYy10d28tY29sdW1uLWxheW91dC5hYy1tb2JpbGUtYXBwIC5hYy11cGxvYWRlZC1pbWFnZXttYXgtd2lkdGg6YXV0bzttYXgtaGVpZ2h0OmF1dG99LmFjLXRhYmxldC1hcHAucGMtdHdvLWNvbHVtbi1sYXlvdXR7bWF4LWhlaWdodDpub25lO292ZXJmbG93OmF1dG99LmFjLXRhYmxldC1hcHAucGMtdHdvLWNvbHVtbi1sYXlvdXQgLmFjLXByZXZpZXctY29udGFpbmVye3dpZHRoOmF1dG87bWF4LXdpZHRoOjQwMHB4O21hcmdpbi1sZWZ0OmF1dG87bWFyZ2luLXJpZ2h0OmF1dG87bWFyZ2luLXRvcDowfS5hYy10YWJsZXQtYXBwLnBjLXR3by1jb2x1bW4tbGF5b3V0IC5hYy1wcmV2aWV3LWNvbnRhaW5lciBpbWd7bGVmdDowO3RvcDowfS5hYy10YWJsZXQtYXBwLnBjLXR3by1jb2x1bW4tbGF5b3V0IC5hYy1wcmV2aWV3LWd1aWRlbGluZXt0ZXh0LWFsaWduOmxlZnR9LmFjLXRhYmxldC1hcHAucGMtdHdvLWNvbHVtbi1sYXlvdXQgLnBjLXNpbmdsZS10ZXh0LWlucHV0LWNvbnRhaW5lcnttYXgtaGVpZ2h0Om5vbmV9LmFjLXRhYmxldC1hcHAucGMtdHdvLWNvbHVtbi1sYXlvdXQgLnBjLWlucHV0LWNvbnRyb2xzLmFjLXNpbmdsZS10ZXh0LW9ubHl7bWF4LXdpZHRoOm5vbmU7bWF4LWhlaWdodDpub25lfS5hYy10YWJsZXQtYXBwLnBjLXR3by1jb2x1bW4tbGF5b3V0IC5wYy1pbnB1dC1jb250cm9sc3ttaW4taGVpZ2h0OjA7bWF4LXdpZHRoOm5vbmU7bWFyZ2luLWxlZnQ6MDttYXgtaGVpZ2h0Om5vbmV9LmFjLXRhYmxldC1hcHAucGMtdHdvLWNvbHVtbi1sYXlvdXQgLmFjLWNvbnRyb2xzLWNvbnRhaW5lcnttaW4taGVpZ2h0OjB9LmFjLXRhYmxldC1hcHAucGMtdHdvLWNvbHVtbi1sYXlvdXQgLnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsLWNvbnRhaW5lcntvdmVyZmxvdzpoaWRkZW47aGVpZ2h0OjQwcHg7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2VlZTtwb3NpdGlvbjpmaXhlZDtsZWZ0OjA7ei1pbmRleDoxMDA7bWFyZ2luLXRvcDotMTJweDt3aWR0aDoxMDAlfS5hYy10YWJsZXQtYXBwLnBjLXR3by1jb2x1bW4tbGF5b3V0IC5wYy1zdXJmYWNlLW5hdi1jYXJvdXNlbC1jb250YWluZXIgLnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsLXZpZXdwb3J0Ojotd2Via2l0LXNjcm9sbGJhcntkaXNwbGF5Om5vbmU7aGVpZ2h0OjB9LmFjLXRhYmxldC1hcHAucGMtdHdvLWNvbHVtbi1sYXlvdXQgLnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsLWNvbnRhaW5lciAucGMtc3VyZmFjZS1uYXYtY2Fyb3VzZWwtdmlld3BvcnR7YmFja2dyb3VuZC1jb2xvcjojZmZmO292ZXJmbG93LXg6c2Nyb2xsO292ZXJmbG93LXk6YXV0bzt3aWR0aDoxMDAlOy13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOnRvdWNoOy1tcy1zY3JvbGwtY2hhaW5pbmc6Y2hhaW5lZDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGVaKDApfS5hYy10YWJsZXQtYXBwLnBjLXR3by1jb2x1bW4tbGF5b3V0IC5wYy1zdXJmYWNlLW5hdi1jYXJvdXNlbC1jb250YWluZXIgLnBjLXN1cmZhY2UtbmF2LWNhcm91c2Vse292ZXJmbG93LXg6dmlzaWJsZTttYXJnaW46MCAxMHB4fS5hYy10YWJsZXQtYXBwLnBjLXR3by1jb2x1bW4tbGF5b3V0IC5wYy1zdXJmYWNlLW5hdi1jYXJvdXNlbC1jb250YWluZXIgLnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsIC5wYy1zdXJmYWNlLW5hdi1jYXJvdXNlbC1pdGVte2Zsb2F0OmxlZnQ7ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6MTAwcHg7aGVpZ2h0OjQwcHg7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO21hcmdpbi1yaWdodDoxMHB4fS5hYy10YWJsZXQtYXBwLnBjLXR3by1jb2x1bW4tbGF5b3V0IC5wYy1zdXJmYWNlLW5hdi1jYXJvdXNlbC1jb250YWluZXIgLnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsIC5wYy1zdXJmYWNlLW5hdi1jYXJvdXNlbC1pdGVtIGF7Y29sb3I6IzAwMH0uYWMtdGFibGV0LWFwcC5wYy10d28tY29sdW1uLWxheW91dCAucGMtc3VyZmFjZS1uYXYtY2Fyb3VzZWwtY29udGFpbmVyIC5wYy1zdXJmYWNlLW5hdi1jYXJvdXNlbCAucGMtc3VyZmFjZS1uYXYtY2Fyb3VzZWwtaXRlbSBhIHNwYW57ZGlzcGxheTpub25lfS5hYy10YWJsZXQtYXBwLnBjLXR3by1jb2x1bW4tbGF5b3V0IC5wYy1zdXJmYWNlLW5hdi1jYXJvdXNlbC1jb250YWluZXIgLnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsIC5wYy1zdXJmYWNlLW5hdi1jYXJvdXNlbC1pdGVtLmFjdGl2ZXtib3JkZXItYm90dG9tOjNweCBzb2xpZCAjZTQ3OTExO2ZvbnQtd2VpZ2h0OjcwMCBhO2ZvbnQtd2VpZ2h0LWNvbG9yOiNlNDc5MTF9LmFjLXRhYmxldC1hcHAucGMtdHdvLWNvbHVtbi1sYXlvdXQgLnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsLWNvbnRhaW5lciAucGMtc3VyZmFjZS1uYXYtY2Fyb3VzZWwgLnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsLWl0ZW0uY3VzdG9taXplZCBhe2NvbG9yOiMwMDhhMDB9LmFjLXRhYmxldC1hcHAucGMtdHdvLWNvbHVtbi1sYXlvdXQgLnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsLWNvbnRhaW5lciAucGMtc3VyZmFjZS1uYXYtY2Fyb3VzZWwgLnBjLXN1cmZhY2UtbmF2LWNhcm91c2VsLWl0ZW0uY3VzdG9taXplZCBhIHNwYW57ZGlzcGxheTppbmxpbmV9LmFjLXRhYmxldC1hcHAucGMtdHdvLWNvbHVtbi1sYXlvdXQgLnByZXZpZXctYmxvY2t7cGFkZGluZzowIDVweH0uYWMtdGFibGV0LWFwcC5wYy10d28tY29sdW1uLWxheW91dCAucGMtYnV5Ym94LXdhcm5pbmctY2xvc2V7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7cmlnaHQ6MDtmb250LXNpemU6MjBweDt3aWR0aDoyMHB4O2hlaWdodDoyMHB4O2xpbmUtaGVpZ2h0OjEwMCU7Zm9udC1mYW1pbHk6bW9ub3NwYWNlO2NvbG9yOiNiMTI3MDR9QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjg2MHB4KXsuYWMtdGFibGV0LWFwcC5wYy10d28tY29sdW1uLWxheW91dCAjYW1hem9uY3VzdG9tLXdpZGdldC1jb2x1bW4tY29udGFpbmVyPmRpdntwYWRkaW5nLWxlZnQ6MCFpbXBvcnRhbnR9LmFjLXRhYmxldC1hcHAucGMtdHdvLWNvbHVtbi1sYXlvdXQgI2FtYXpvbmN1c3RvbS13aWRnZXQtbGVmdC1jb2x1bW4sLmFjLXRhYmxldC1hcHAucGMtdHdvLWNvbHVtbi1sYXlvdXQgI2FtYXpvbmN1c3RvbS13aWRnZXQtcmlnaHQtY29sdW1ue21hcmdpbjowIGF1dG8haW1wb3J0YW50O2Zsb2F0Om5vbmUhaW1wb3J0YW50O3BhZGRpbmctbGVmdDowIWltcG9ydGFudH0uYWMtdGFibGV0LWFwcC5wYy10d28tY29sdW1uLWxheW91dCAjYW1hem9uY3VzdG9tLXdpZGdldC1yaWdodC1jb2x1bW57ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbn0uYWMtdGFibGV0LWFwcC5wYy10d28tY29sdW1uLWxheW91dCAjYW1hem9uY3VzdG9tLXdpZGdldC1yaWdodC1jb2x1bW4tYnV5Ym94e29yZGVyOjJ9LmFjLXRhYmxldC1hcHAucGMtdHdvLWNvbHVtbi1sYXlvdXQgI2FtYXpvbmN1c3RvbS13aWRnZXQtcmlnaHQtY29sdW1uLWlucHV0LWJveHtvcmRlcjoxfX0uYWMtcHJldmlldy1ndWlkZWxpbmV7dGV4dC1hbGlnbjpjZW50ZXI7cGFkZGluZzo1cHh9XG4ucGMtYnV5LWJveHttYXJnaW4tYm90dG9tOjB9LnBjLWJ1eS1ib3ggLnNlbGVjdFF1YW50aXR5e2hlaWdodDozMXB4fS5wYy1idXktYm94IC5zZWxlY3RRdWFudGl0eSBzcGFue3ZlcnRpY2FsLWFsaWduOmJvdHRvbX0uYW16LXBhZGRpbmctdG9nZ2xlYnV5Ym94e3BhZGRpbmc6MTRweCAxOHB4fVxuLmJ1cmogI2FjQmFkZ2VfZmVhdHVyZV9kaXZ7ZGlzcGxheTppbmxpbmUtYmxvY2t9LmJ1cmogLmFjLWJhZGdlLXdyYXBwZXJ7bWF4LXdpZHRoOjU2MHB4fS5hYy1iYWRnZS13cmFwcGVye21hcmdpbjo1cHggMCAxMHB4O2Rpc3BsYXk6ZmxleH0uYWMta2V5d29yZC1saW5re2NvbG9yOiMwMDY2QzA7Zm9udC1zaXplOjEycHh9LmFjLWZvci10ZXh0e2NvbG9yOiM4ODg7ZGlzcGxheTppbmxpbmU7bWFyZ2luLWxlZnQ6NXB4O2xpbmUtaGVpZ2h0OjIycHg7d2hpdGUtc3BhY2U6bm93cmFwO292ZXJmbG93OmhpZGRlbjt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzfS5hYy1wcm9kdWN0LWhpZ2hsaWdodHMtZm9yLXRleHR7Y29sb3I6Izg4ODtkaXNwbGF5OmlubGluZTttYXJnaW4tbGVmdDo0cHg7bGluZS1oZWlnaHQ6MjJweDt3aGl0ZS1zcGFjZTpub3dyYXA7b3ZlcmZsb3c6aGlkZGVuO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXN9LmFjLWJhZGdlLXdyYXBwZXIgLmEtZGVjbGFyYXRpdmV7ZGlzcGxheTppbmxpbmUtZmxleH1hOmhvdmVyIC5hYy1rZXl3b3JkLWxpbmt7Y29sb3I6I0U0NzkxMTt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lfS5hYy1iYWRnZS13cmFwcGVyIGEuYmFkZ2UtbGluazpob3Zlcnt0ZXh0LWRlY29yYXRpb246bm9uZX0uYWMtYmFkZ2UtcmVjdGFuZ2xle2hlaWdodDoyMnB4O2JhY2tncm91bmQtY29sb3I6IzIzMkYzRTtib3JkZXItY29sb3I6IzIzMkYzRTtkaXNwbGF5OmZsZXh9LmFjLWJhZGdlLXRyaWFuZ2xle3dpZHRoOjA7aGVpZ2h0OjA7Ym9yZGVyLXJpZ2h0OjEwcHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXRvcDoyMnB4IHNvbGlkO2NvbG9yOiMyMzJGM0V9LmFjLWJhZGdlLXRleHQtcHJpbWFyeXtsaW5lLWhlaWdodDoyMnB4O21hcmdpbi1sZWZ0OjhweDttYXJnaW4tcmlnaHQ6M3B4O2NvbG9yOiNmZmY7Zm9udC1mYW1pbHk6XCJBbWF6b24gRW1iZXJcIixBcmlhbCFpbXBvcnRhbnQ7bWluLXdpZHRoOjM2cHh9LmFjLWJhZGdlLXRleHQtc2Vjb25kYXJ5e2xpbmUtaGVpZ2h0OjIycHg7bWFyZ2luLXJpZ2h0OjhweDtjb2xvcjojRjY5OTMxO2ZvbnQtZmFtaWx5OlwiQW1hem9uIEVtYmVyXCIsQXJpYWwhaW1wb3J0YW50O21pbi13aWR0aDoyNHB4fVtkYXRhLWEtYmFkZ2UtY29sb3I9c3gtZ3VsZnN0cmVhbV17YmFja2dyb3VuZC1jb2xvcjojMDAyZTM2IWltcG9ydGFudDtjb2xvcjojMDAyZTM2IWltcG9ydGFudH1bZGF0YS1hLWJhZGdlLWNvbG9yPXN4LWNsb3VkXXtjb2xvcjojZmZmIWltcG9ydGFudH1bZGF0YS1hLWJhZGdlLWNvbG9yPWFjLW9yYW5nZV17Y29sb3I6I0Y2OTkzMSFpbXBvcnRhbnR9LnN1cGVybGVhZiAuYWMtZm9yLXRleHR7Y29sb3I6I2RkZH0uc3VwZXJsZWFmIC5hYy1rZXl3b3JkLWxpbmsgYXtjb2xvcjojNTZjMmVjIWltcG9ydGFudH0uc3VwZXJsZWFmIC5hYy1iYWRnZS1yZWN0YW5nbGV7aGVpZ2h0OjI0cHg7Ym9yZGVyOnRoaW4gc29saWQgIzg4ODtib3JkZXItcmlnaHQ6dHJhbnNwYXJlbnR9LnN1cGVybGVhZiAuYWMtYmFkZ2UtdHJpYW5nbGV7Ym9yZGVyLXRvcDoyNHB4IHNvbGlkICM4ODg7Ym9yZGVyLXJpZ2h0OjExcHggc29saWQgdHJhbnNwYXJlbnQ7cG9zaXRpb246cmVsYXRpdmV9LnN1cGVybGVhZiAuYWMtYmFkZ2UtdHJpYW5nbGU6OmFmdGVye2NvbnRlbnQ6Jyc7Ym9yZGVyLXJpZ2h0OjEwcHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXRvcDoyMnB4IHNvbGlkO2NvbG9yOiMyMzJGM0U7dG9wOi0yM3B4O3Bvc2l0aW9uOmFic29sdXRlfS5zdXBlcmxlYWYgI2RldGFpbC1wYWdlLWFjLWJhZGdlLWxhYmVse2JvcmRlcjp0aGluIHNvbGlkICM4ODh9LnN1cGVybGVhZiAjZGV0YWlsLXBhZ2UtYWMtYmFkZ2UtbGFiZWw6OmJlZm9yZXtjb250ZW50OicnO3dpZHRoOjEwcHg7aGVpZ2h0OjI3cHg7Ym9yZGVyLWxlZnQ6MTBweCBzb2xpZCAjODg4O2JvcmRlci1ib3R0b206MjZweCBzb2xpZCB0cmFuc3BhcmVudDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dG9wOi0xcHg7cmlnaHQ6LTExcHg7cG9zaXRpb246YWJzb2x1dGV9LmFjLW1vYmlsZS1iYWRnZS13cmFwcGVye21hcmdpbjozcHggMCAxMHB4O3doaXRlLXNwYWNlOm5vd3JhcDtvdmVyZmxvdzpoaWRkZW47dGV4dC1vdmVyZmxvdzplbGxpcHNpc30uYWMtbW9iaWxlLWZvci10ZXh0e2ZvbnQtc2l6ZToxMnB4O2NvbG9yOiM4ODg7ZGlzcGxheTppbmxpbmU7bWFyZ2luLWxlZnQ6NXB4O2xpbmUtaGVpZ2h0OjIycHh9LmFjLXByb2R1Y3QtaGlnaGxpZ2h0cy1tb2JpbGUtZm9yLXRleHR7Zm9udC1zaXplOjEycHg7Y29sb3I6Izg4ODtkaXNwbGF5OmlubGluZTttYXJnaW4tbGVmdDo0cHg7bGluZS1oZWlnaHQ6MjJweDt2ZXJ0aWNhbC1hbGlnbjp0b3B9LmFjLW9yYW5nZXtjb2xvcjojRjY5OTMxfS5hYy1ncmV5e2NvbG9yOiMyMzJGM0V9LmFtYXpvbnNfY2hvaWNlX2JvdHRvbV9zaGVldF9jb250ZW50LmEtc2hlZXQtbGlnaHRib3guYS1zaGVldC1zaG93e2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuNzUpfS5hYy1tb2JpbGUtYmFkZ2Utd3JhcHBlciAuY29udGFpbmVye3BhZGRpbmc6MjBweH1bZGF0YS1hLWJhZGdlLWNvbG9yPXN4LWd1bGZzdHJlYW1de2JhY2tncm91bmQtY29sb3I6IzAwMmUzNiFpbXBvcnRhbnQ7Y29sb3I6IzAwMmUzNiFpbXBvcnRhbnR9W2RhdGEtYS1iYWRnZS1jb2xvcj1hYy1vcmFuZ2Vde2NvbG9yOiNGNjk5MzEhaW1wb3J0YW50fVtkYXRhLWEtYmFkZ2UtY29sb3I9c3gtY2xvdWRde2NvbG9yOiNmZmYhaW1wb3J0YW50fS5hbWF6b25fZWxlbWVudHNfbW9iaWxlICNhY0JhZGdlUmV2aWV3c1Jvd0lubmVye3BhZGRpbmctcmlnaHQ6MTVyZW19LmFtYXpvbl9lbGVtZW50c19tb2JpbGUgI2FjQmFkZ2VfZmVhdHVyZV9kaXZ7d2lkdGg6MTAwJTtmbG9hdDpsZWZ0fS5hbWF6b25fZWxlbWVudHNfbW9iaWxlICNhdmVyYWdlQ3VzdG9tZXJSZXZpZXdzX2ZlYXR1cmVfZGl2e21hcmdpbi1yaWdodDotMTVyZW07ZmxvYXQ6cmlnaHR9LmFtYXpvbl9lbGVtZW50c19tb2JpbGUgLmJhZGdlLXdyYXBwZXJ7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MH0uYW1hem9uX2VsZW1lbnRzX21vYmlsZSAuYWMtbW9iaWxlLWJhZGdlLXdyYXBwZXJ7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MH0uYWMtZmVlZGJhY2stY29udGFpbmVye2JvcmRlcjoxcHggc29saWQgI2NjY30uYWMtZmVlZGJhY2stb3B0aW9ue2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNjY2M7aGVpZ2h0OjYwcHh9I2ZlZWRiYWNrX3RvZ2dsZV90ZXh0e21hcmdpbi1sZWZ0OjNweH0jYWNGZWVkYmFja1Byb21wdHtvdmVyZmxvdzphdXRvfS53aHktYWMtcmVhc29uLXRpdGxlLXRleHQtbW9iaWxlLWRldGFpbHtmb250LXNpemU6MTVweCFpbXBvcnRhbnR9LndoeS1hYy1yZWFzb24tZGVzYy10ZXh0LW1vYmlsZS1kZXRhaWx7Zm9udC1zaXplOjE1cHghaW1wb3J0YW50O3BhZGRpbmctbGVmdDoycHghaW1wb3J0YW50fSNhYy1tb2JpbGUtZGV0YWlsLWJ1bGxldHMgLnVse3BhZGRpbmc6NXB4IDAgMCFpbXBvcnRhbnR9I2FjLW1vYmlsZS1kZXRhaWwtYnVsbGV0cyAudWwgLmxpe2ZvbnQtc2l6ZToxM3B4IWltcG9ydGFudH0uYnVyaiAjYWNCYWRnZV9mZWF0dXJlX2RpdiAuYmFkZ2Utd3JhcHBlcnttYXJnaW46NXB4IDAgNXB4IWltcG9ydGFudDtkaXNwbGF5OmZsZXghaW1wb3J0YW50fSNhY0JhZGdlX2ZlYXR1cmVfZGl2IC5iYWRnZS13cmFwcGVye21hcmdpbjo1cHggMCA1cHg7ZGlzcGxheTpmbGV4fS5iYWRnZS13cmFwcGVyIC5hLWRlY2xhcmF0aXZle2Rpc3BsYXk6aW5saW5lLWZsZXh9LmFjLWJhZGdlLXBvcG92ZXItdGl0bGUtZGl2e3BhZGRpbmctYm90dG9tOjhweCFpbXBvcnRhbnR9LmFjLWJhZGdlLXBvcG92ZXItdGl0bGV7bGluZS1oZWlnaHQ6MjJweDtjb2xvcjojMDAwO2ZvbnQtZmFtaWx5OlwiQW1hem9uIEVtYmVyXCIsQXJpYWwhaW1wb3J0YW50O2ZvbnQtc2l6ZToxNXB4IWltcG9ydGFudH0uYWMtYmFkZ2UtcG9wb3Zlci10YWdsaW5le2xpbmUtaGVpZ2h0OjIycHg7Y29sb3I6IzAwMDtmb250LWZhbWlseTpcIkFtYXpvbiBFbWJlclwiLEFyaWFsIWltcG9ydGFudH0ud2h5LWFjLXRleHR7Zm9udC1zaXplOjEwcHghaW1wb3J0YW50O2xpbmUtaGVpZ2h0OjI0cHghaW1wb3J0YW50fS53aHktYWMtcmVhc29uLXRleHR7Zm9udC1zaXplOjEzcHghaW1wb3J0YW50O2xpbmUtaGVpZ2h0OjE3cHghaW1wb3J0YW50fS53aHktYWMtcmVhc29uLWRlc2MtdGV4dHtmb250LXNpemU6OHB4IWltcG9ydGFudDtjb2xvcjpncmV5fS5hYy1iYWRnZS1wb3BvdmVyLXJlYXNvbi1pY29ue21hcmdpbi10b3A6NHB4fS5hY2JhZGdlLXJlYXNvbi10ZXh0e2xpbmUtaGVpZ2h0OjEwcHh9LmFjLXVse2NvbG9yOiMwMDAhaW1wb3J0YW50O3BhZGRpbmctYm90dG9tOjVweCFpbXBvcnRhbnR9I3doeS13ZS1sb3ZlLXRoaXMtcHJvZHVjdC1saW5re3BhZGRpbmctdG9wOjJweDtwYWRkaW5nLWxlZnQ6NXB4fS5iYWRnZS13cmFwcGVyLW1vYmlsZXttYXJnaW46M3B4IDAgMTBweDt3aGl0ZS1zcGFjZTpub3dyYXA7b3ZlcmZsb3c6aGlkZGVuO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXN9LmFtYXpvbnNfY2hvaWNlX2JvdHRvbV9zaGVldF9jb250ZW50LmEtc2hlZXQtbGlnaHRib3guYS1zaGVldC1zaG93e2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuNzUpfS5jb250YWluZXJ7cGFkZGluZzoyMHB4fS5mb3ItYWMtdGV4dC1mbHlvdmVye21hcmdpbi1sZWZ0OjVweCFpbXBvcnRhbnQ7dmVydGljYWwtYWxpZ246dG9wIWltcG9ydGFudH0ud2h5LWFjLXJlYXNvbi10aXRsZS10ZXh0LW1vYmlsZS1mbHlvdmVye2ZvbnQtc2l6ZToxM3B4IWltcG9ydGFudH0ud2h5LWFjLXJlYXNvbi1kZXNjLXRleHQtbW9iaWxlLWZseW92ZXJ7Zm9udC1zaXplOjEzcHghaW1wb3J0YW50fS53aHktYWMtcmVhc29uLWRlc2MtdGV4dC1jb250YWluZXJ7bGluZS1oZWlnaHQ6MTdweCFpbXBvcnRhbnQ7bWFyZ2luLXRvcDo1cHghaW1wb3J0YW50fS5mb3ItYWMtdGV4dHttYXJnaW4tbGVmdDoxN3B4IWltcG9ydGFudDt2ZXJ0aWNhbC1hbGlnbjp0b3AhaW1wb3J0YW50fS5hYy1tb2JpbGUtdWx7Zm9udC1zaXplOjEwcHghaW1wb3J0YW50O2NvbG9yOiMwMDB9I3doeS13ZS1sb3ZlLXRoaXMtcHJvZHVjdC1saW5rLW1vYmlsZXtmb250LXNpemU6MTNweCFpbXBvcnRhbnQ7cGFkZGluZy1sZWZ0OjVweH1cbi5wcnN1YnN3aWRnZXQtYXNpbi1jb250ZW50e3BhZGRpbmctbGVmdDoxNXB4O3BhZGRpbmctcmlnaHQ6MTBweH0ucHJzdWJzd2lkZ2V0LWFzaW4tYnJhbmR7ZGlzcGxheTpibG9ja30ucHJzdWJzd2lkZ2V0LWFzaW4tdGl0bGV7Y3Vyc29yOnBvaW50ZXI7ZGlzcGxheTpibG9ja30ucHJzdWJzd2lkZ2V0LXJldmlldy1jb3VudHtkaXNwbGF5OmlubGluZS10YWJsZTt2ZXJ0aWNhbC1hbGlnbjp0ZXh0LXRvcH0jcHJzdWJzd2lkZ2V0IC5hLWljb24tcHJpbWV7bWFyZ2luLXRvcDo2cHh9LnByc3Vic3dpZGdldC1hc2luLWdyaWQtY29sdW1uOm5vdCg6bGFzdC1jaGlsZCl7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjREREfSNwcnN1YnN3aWRnZXQgLmEtY2Fyb3VzZWwtY29sLmEtY2Fyb3VzZWwtY2VudGVye21hcmdpbjowIDEwcHh9I3Byc3Vic3dpZGdldC10aXRsZXttYXJnaW4tdG9wOjEwcHg7bWFyZ2luLWxlZnQ6MTBweH0jcHJzdWJzd2lkZ2V0LXRpdGxlPmRpdnt3aWR0aDoxMDAlfSNwcnN1YnN3aWRnZXQgLmEtY2Fyb3VzZWwtY2FyZHttaW4td2lkdGg6MjgwcHh9XG4ucXVhbnRpdHktcGlja2Vye3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6NXB4fS5xdWFudGl0eS1waWNrZXIgLnF1YW50aXR5LWlucHV0LWJveC1sYXllcntib3JkZXI6MXB4IHNvbGlkICNCQ0MwQzM7Ym9yZGVyLXJhZGl1czo0cHg7aGVpZ2h0OjM0cHh9LnF1YW50aXR5LXBpY2tlci5vcGVuIC5xdWFudGl0eS1pbnB1dC1ib3gtbGF5ZXJ7Ym9yZGVyLXJhZGl1czo0cHggNHB4IDAgMH0ucXVhbnRpdHktcGlja2VyIC5xdWFudGl0eS10ZXh0LWlucHV0LWRpc2FibGVke2N1cnNvcjpub3QtYWxsb3dlZH0ucXVhbnRpdHktcGlja2VyIC5xdWFudGl0eS10ZXh0LWlucHV0e3dpZHRoOjEwMCU7Ym9yZGVyOjNweCBzb2xpZCAjZmZmO2JveC1zaGFkb3c6bm9uZX0ucXVhbnRpdHktcGlja2VyIC5xdWFudGl0eS1kaXNjb3VudC10YWJsZXtkaXNwbGF5Om5vbmU7cG9zaXRpb246YWJzb2x1dGU7YmFja2dyb3VuZDojZmZmO2JvcmRlcjowIDFweCAxcHggc29saWQgI0JDQzBDMztsZWZ0OjA7cmlnaHQ6MDt0ZXh0LWFsaWduOmxlZnQ7cGFkZGluZzowO21hcmdpbjowO3otaW5kZXg6Mjk5O2JvcmRlci1yYWRpdXM6MCAwIDRweCA0cHg7Ym94LXNoYWRvdzowIDJweCA0cHggMCByZ2JhKDAsMCwwLC4yNSl9LnF1YW50aXR5LXBpY2tlci5vcGVuIC5xdWFudGl0eS1kaXNjb3VudC10YWJsZXtkaXNwbGF5OmJsb2NrfS5xdWFudGl0eS1waWNrZXIgLnFkdC11bHttYXJnaW4tbGVmdDowfS5xdWFudGl0eS1waWNrZXIgLnFkdC1kcm9wZG93bi1vcHRpb24tbm8tc2F2aW5nLW1lc3NhZ2V7ZGlzcGxheTp0YWJsZTt3aWR0aDoxMDAlO2xpbmUtaGVpZ2h0OjQwcHg7Zm9udC1zaXplOjEycHh9LnF1YW50aXR5LXBpY2tlciAucWR0LWRyb3Bkb3duLW9wdGlvbi1uby1zYXZpbmctbWVzc2FnZSAub3B0aW9uLXRpZXJ7dmVydGljYWwtYWxpZ246bWlkZGxlO2Rpc3BsYXk6dGFibGUtY2VsbDtjb2xvcjojMDAwO3dpZHRoOjUlO3BhZGRpbmctbGVmdDo5cHg7dGV4dC1hbGlnbjpsZWZ0fS5xdWFudGl0eS1waWNrZXIgLnFkdC1kcm9wZG93bi1vcHRpb24tbm8tc2F2aW5nLW1lc3NhZ2UgLm9wdGlvbi1wcmljZXt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7Y29sb3I6I0IwMjMwMjtkaXNwbGF5OnRhYmxlLWNlbGw7d2lkdGg6OTUlO3BhZGRpbmctcmlnaHQ6OHB4O3RleHQtYWxpZ246cmlnaHQ7Zm9udC1zaXplOjEycHg7bWFyZ2luLWxlZnQ6LTEwcHg7bGluZS1oZWlnaHQ6MTVweH0ucXVhbnRpdHktcGlja2VyIC5xZHQtZHJvcGRvd24tb3B0aW9uLXJlZ3VsYXJ7ZGlzcGxheTp0YWJsZTt3aWR0aDoxMDAlfS5xdWFudGl0eS1waWNrZXIgLnFkdC1kcm9wZG93bi1vcHRpb24tcmVndWxhciAub3B0aW9uLXRpZXJ7dmVydGljYWwtYWxpZ246bWlkZGxlO2Rpc3BsYXk6dGFibGUtY2VsbDtjb2xvcjojMDAwO3dpZHRoOjUlO3BhZGRpbmctbGVmdDo5cHg7dGV4dC1hbGlnbjpsZWZ0O2xpbmUtaGVpZ2h0OjQwcHg7Zm9udC1zaXplOjEycHh9LnF1YW50aXR5LXBpY2tlciAucWR0LWRyb3Bkb3duLW9wdGlvbi1yZWd1bGFyIC5vcHRpb24tcHJpY2UtYW5kLXNhdmluZy1tZXNzYWdle3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtjb2xvcjojYzAwO2Rpc3BsYXk6dGFibGUtY2VsbDt3aWR0aDo5NSU7cGFkZGluZy1yaWdodDo4cHg7ZmxvYXQ6cmlnaHQ7dGV4dC1hbGlnbjpyaWdodDttYXJnaW4tdG9wOjVweH0ucXVhbnRpdHktcGlja2VyIC5xZHQtZHJvcGRvd24tb3B0aW9uLXJlZ3VsYXIgLm9wdGlvbi1wcmljZS1hbmQtc2F2aW5nLW1lc3NhZ2UgLm9wdGlvbi1wcmljZXtjb2xvcjojQjAyMzAyO2ZvbnQtc2l6ZToxMnB4O21hcmdpbi1sZWZ0Oi0xMHB4O2xpbmUtaGVpZ2h0OjE1cHh9LnF1YW50aXR5LXBpY2tlciAucWR0LWRyb3Bkb3duLW9wdGlvbi1yZWd1bGFyIC5vcHRpb24tcHJpY2UtYW5kLXNhdmluZy1tZXNzYWdlIC5vcHRpb24tc2F2aW5nLW1lc3NhZ2V7Y29sb3I6Izc2NzY3Njtmb250LXNpemU6MTBweDtmb250LXN0eWxlOml0YWxpYzttYXJnaW4tbGVmdDotMzBweH0ucXVhbnRpdHktcGlja2VyIC5xZHQtZHJvcGRvd24tb3B0aW9uLXJlZ3VsYXIgLm9wdGlvbi1wcmljZS1hbmQtc2F2aW5nLW1lc3NhZ2UgLm9wdGlvbi11bmxvY2tlZC1zYXZpbmctbWVzc2FnZS1pY29ue2Rpc3BsYXk6aW5saW5lLWJsb2NrO3RyYW5zZm9ybTpyb3RhdGUoNDVkZWcpO2hlaWdodDo4cHg7d2lkdGg6NHB4O2JvcmRlci1ib3R0b206MXB4IHNvbGlkICMwMDhBMDA7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjMDA4QTAwO21hcmdpbi1yaWdodDoycHh9LnF1YW50aXR5LXBpY2tlciAucWR0LWRyb3Bkb3duLW9wdGlvbi1yZWd1bGFyIC5vcHRpb24tcHJpY2UtYW5kLXNhdmluZy1tZXNzYWdlIC5vcHRpb24tdW5sb2NrZWQtc2F2aW5nLW1lc3NhZ2V7Y29sb3I6IzAwOEEwMDtmb250LXNpemU6MTBweDtmb250LXN0eWxlOml0YWxpYzttYXJnaW4tbGVmdDotMzBweDttYXJnaW4tdG9wOi0ycHh9LnF1YW50aXR5LXBpY2tlciAucWR0LWRyb3Bkb3duLW9wdGlvbi1sb2FkLW1vcmV7Y29sb3I6IzY5Njk2OTtmb250LXNpemU6MTJweDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7dGV4dC1hbGlnbjpjZW50ZXI7bGluZS1oZWlnaHQ6NDBweH0ucXVhbnRpdHktcGlja2VyIC5xZHQtZHJvcGRvd24tb3B0aW9uLWZldGNoLWluLXByb2dyZXNze2NvbG9yOiM2OTY5Njk7Zm9udC1zdHlsZTppdGFsaWM7Zm9udC1zaXplOjEzcHg7dmVydGljYWwtYWxpZ246bWlkZGxlO3RleHQtYWxpZ246Y2VudGVyO2ZvbnQtd2VpZ2h0OmxpZ2h0ZXI7bGluZS1oZWlnaHQ6MjVweH0ucXVhbnRpdHktcGlja2VyIC5xZHQtZHJvcGRvd24tb3B0aW9uLWZldGNoLWluLXByb2dyZXNzIC5mZXRjaGluZy1pbi1wcm9ncmVzcy1pbWd7dmVydGljYWwtYWxpZ246bWlkZGxlfS5xdWFudGl0eS1waWNrZXIgLnF1YW50aXR5LWRpc2NvdW50LXRhYmxlIC5xZHQtZHJvcGRvd24taXRlbXtkaXNwbGF5OmJsb2NrO2JvcmRlcjoxcHggc29saWQgI0JDQzBDMztib3JkZXItdG9wOm5vbmV9LnF1YW50aXR5LXBpY2tlciAucXVhbnRpdHktdGV4dC1pbnB1dDpmb2N1c3tiYWNrZ3JvdW5kOiNFOEVBRUI7Ym9yZGVyOjNweCBzb2xpZCAjZmZmO2JveC1zaGFkb3c6bm9uZTtmb250LXdlaWdodDo3MDA7Zm9udC1zaXplOjE0cHh9LnF1YW50aXR5LXBpY2tlciAucXVhbnRpdHktZGlzY291bnQtdGFibGUgLnFkdC1kcm9wZG93bi1pdGVtLnFkdC1hY3RpdmV7Ym9yZGVyLWNvbG9yOiNCQ0MwQzM7Ym9yZGVyLWxlZnQ6M3B4IHNvbGlkICNFNTVEMTZ9LnF1YW50aXR5LXBpY2tlciAucXVhbnRpdHktZGlzY291bnQtdGFibGUgLnFkdC1kcm9wZG93bi1pdGVtLnFkdC1pbmFjdGl2ZXtib3JkZXItY29sb3I6I0JDQzBDM30ucXVhbnRpdHktcGlja2VyIC5xdWFudGl0eS1kaXNjb3VudC10YWJsZSAucWR0LWRyb3Bkb3duLWl0ZW06aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojRjRGNEY1O2N1cnNvcjpwb2ludGVyfS5xdWFudGl0eS1waWNrZXIgLnF1YW50aXR5LWRpc2NvdW50LXRhYmxlIC5xZHQtZHJvcGRvd24taXRlbS5xZHQtaW5hY3RpdmU6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZmZmO2NvbG9yOmluaGVyaXR9LnF1YW50aXR5LXBpY2tlciAucXVhbnRpdHktZGlzY291bnQtdGFibGUgLnFkdC1kcm9wZG93bi1pdGVtOmxhc3QtY2hpbGR7Ym9yZGVyLXJhZGl1czowIDAgNHB4IDRweH1cbiNwYXctYnV0dG9uLWdyaWR7cG9zaXRpb246cmVsYXRpdmV9I3Bhdy1idXR0b24tc3Bpbm5lcnt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6OTk5fVxuLnAtcHJvZC10aWxlLWxhcmdlLWJveC1zcHJpdGV7YmFja2dyb3VuZDp1cmwoLy9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvcGFudHJ5L3BhbnRyeS1ib3gtc3ByaXRlLXBlcmNlbnQtbGFyZ2UucG5nKSBuby1yZXBlYXR9LnAtcHJvZC10aWxlLWJveC1zcHJpdGV7YmFja2dyb3VuZDp1cmwoLy9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvcGFudHJ5L3BhbnRyeS1ib3gtc3ByaXRlLXBlcmNlbnQtc21hbGwucG5nKSBuby1yZXBlYXR9LnAtcHJvZC10aWxlLWJveC1pbmZvLW1lc3NhZ2luZ3tmb250LXNpemU6MTVweH0ucC1wcm9kLXRpbGUtYm94LWRpc3BsYXl7aGVpZ2h0OjYwcHg7d2lkdGg6OTlweDtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmlubGluZS1ibG9ja30ucC1wcm9kLXRpbGUtYm94LWRpc3BsYXkucC1wcm9kLXRpbGUtYm94LXNwcml0ZSAubnVtLWZ1bGwtb3ZlcmxheXtwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoyNHB4O2NvbG9yOiNGRkY7dGV4dC1hbGlnbjpjZW50ZXI7Zm9udC1zaXplOjEycHg7bGVmdDowO3RvcDoyN3B4fS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1ib3gtc3ByaXRlIC5wZXJjZW50LW92ZXJsYXl7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6NDBweDt0ZXh0LWFsaWduOmNlbnRlcjtmb250LXNpemU6MTNweDtmb250LXdlaWdodDpib2xkZXJ9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWJveC1zcHJpdGUub25lLWJveCAucGVyY2VudC1vdmVybGF5e2xlZnQ6MjZweH0ucC1wcm9kLXRpbGUtYm94LWRpc3BsYXkucC1wcm9kLXRpbGUtYm94LXNwcml0ZS5vbmUtYm94LnYtbG93LWZpbGx7YmFja2dyb3VuZC1wb3NpdGlvbjowIDB9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWJveC1zcHJpdGUub25lLWJveC52LWxvdy1maWxsIC5wZXJjZW50LW92ZXJsYXl7dG9wOjM1cHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWJveC1zcHJpdGUub25lLWJveC5sb3ctZmlsbHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTY0cHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWJveC1zcHJpdGUub25lLWJveC5sb3ctZmlsbCAucGVyY2VudC1vdmVybGF5e3RvcDozNXB4fS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1ib3gtc3ByaXRlLm9uZS1ib3gubWVkLWZpbGx7YmFja2dyb3VuZC1wb3NpdGlvbjowIC0xMjlweH0ucC1wcm9kLXRpbGUtYm94LWRpc3BsYXkucC1wcm9kLXRpbGUtYm94LXNwcml0ZS5vbmUtYm94Lm1lZC1maWxsIC5wZXJjZW50LW92ZXJsYXl7dG9wOjMwcHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWJveC1zcHJpdGUub25lLWJveC5oaS1maWxse2JhY2tncm91bmQtcG9zaXRpb246MCAtMTk0cHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWJveC1zcHJpdGUub25lLWJveC5oaS1maWxsIC5wZXJjZW50LW92ZXJsYXl7dG9wOjI2cHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWJveC1zcHJpdGUub25lLWJveC5tb3JlLWhpLWZpbGx7YmFja2dyb3VuZC1wb3NpdGlvbjowIC0yNTlweH0ucC1wcm9kLXRpbGUtYm94LWRpc3BsYXkucC1wcm9kLXRpbGUtYm94LXNwcml0ZS5vbmUtYm94Lm1vcmUtaGktZmlsbCAucGVyY2VudC1vdmVybGF5e3RvcDoyMHB4fS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1ib3gtc3ByaXRlLm9uZS1ib3gudi1oaS1maWxse2JhY2tncm91bmQtcG9zaXRpb246MCAtNjQ4cHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWJveC1zcHJpdGUub25lLWJveC52LWhpLWZpbGwgLnBlcmNlbnQtb3ZlcmxheXt0b3A6MTlweDtjb2xvcjojRDI2RjFGfS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1ib3gtc3ByaXRlLm11bHRpLWJveCAucGVyY2VudC1vdmVybGF5e2xlZnQ6NDVweH0ucC1wcm9kLXRpbGUtYm94LWRpc3BsYXkucC1wcm9kLXRpbGUtYm94LXNwcml0ZS5tdWx0aS1ib3gudi1sb3ctZmlsbHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTMyM3B4fS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1ib3gtc3ByaXRlLm11bHRpLWJveC52LWxvdy1maWxsIC5wZXJjZW50LW92ZXJsYXl7dG9wOjM1cHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWJveC1zcHJpdGUubXVsdGktYm94Lmxvdy1maWxse2JhY2tncm91bmQtcG9zaXRpb246MCAtMzg4cHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWJveC1zcHJpdGUubXVsdGktYm94Lmxvdy1maWxsIC5wZXJjZW50LW92ZXJsYXl7dG9wOjM1cHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWJveC1zcHJpdGUubXVsdGktYm94Lm1lZC1maWxse2JhY2tncm91bmQtcG9zaXRpb246MCAtNDUzcHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWJveC1zcHJpdGUubXVsdGktYm94Lm1lZC1maWxsIC5wZXJjZW50LW92ZXJsYXl7dG9wOjMwcHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWJveC1zcHJpdGUubXVsdGktYm94LmhpLWZpbGx7YmFja2dyb3VuZC1wb3NpdGlvbjowIC01MThweH0ucC1wcm9kLXRpbGUtYm94LWRpc3BsYXkucC1wcm9kLXRpbGUtYm94LXNwcml0ZS5tdWx0aS1ib3guaGktZmlsbCAucGVyY2VudC1vdmVybGF5e3RvcDoyNnB4fS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1ib3gtc3ByaXRlLm11bHRpLWJveC5tb3JlLWhpLWZpbGx7YmFja2dyb3VuZC1wb3NpdGlvbjowIC01ODNweH0ucC1wcm9kLXRpbGUtYm94LWRpc3BsYXkucC1wcm9kLXRpbGUtYm94LXNwcml0ZS5tdWx0aS1ib3gubW9yZS1oaS1maWxsIC5wZXJjZW50LW92ZXJsYXl7dG9wOjIwcHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWJveC1zcHJpdGUubXVsdGktYm94LnYtaGktZmlsbHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTcxMnB4fS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1ib3gtc3ByaXRlLm11bHRpLWJveC52LWhpLWZpbGwgLnBlcmNlbnQtb3ZlcmxheXt0b3A6MTlweDtjb2xvcjojRDI2RjFGfS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1sYXJnZS1ib3gtc3ByaXRle3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1sYXJnZS1ib3gtc3ByaXRlIC5udW0tZnVsbC1vdmVybGF5e3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjMwcHg7Y29sb3I6I0ZGRjt0ZXh0LWFsaWduOmNlbnRlcjtmb250LXNpemU6MTJweDtsZWZ0OjFweDt0b3A6NDRweH0ucC1wcm9kLXRpbGUtYm94LWRpc3BsYXkucC1wcm9kLXRpbGUtbGFyZ2UtYm94LXNwcml0ZSAucGVyY2VudC1vdmVybGF5e3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjQwcHg7dGV4dC1hbGlnbjpjZW50ZXI7Zm9udC1zaXplOjEzcHg7Zm9udC13ZWlnaHQ6Ym9sZGVyfS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1sYXJnZS1ib3gtc3ByaXRlLm9uZS1ib3h7aGVpZ2h0Ojk1cHg7d2lkdGg6MTMzcHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWxhcmdlLWJveC1zcHJpdGUub25lLWJveCAucGVyY2VudC1vdmVybGF5e2xlZnQ6NTRweH0ucC1wcm9kLXRpbGUtYm94LWRpc3BsYXkucC1wcm9kLXRpbGUtbGFyZ2UtYm94LXNwcml0ZS5vbmUtYm94LnYtbG93LWZpbGx7YmFja2dyb3VuZC1wb3NpdGlvbjowIC0xfS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1sYXJnZS1ib3gtc3ByaXRlLm9uZS1ib3gudi1sb3ctZmlsbCAucGVyY2VudC1vdmVybGF5e3RvcDo2OXB4fS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1sYXJnZS1ib3gtc3ByaXRlLm9uZS1ib3gubG93LWZpbGx7YmFja2dyb3VuZC1wb3NpdGlvbjowIC05OXB4fS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1sYXJnZS1ib3gtc3ByaXRlLm9uZS1ib3gubG93LWZpbGwgLnBlcmNlbnQtb3ZlcmxheXt0b3A6NjVweH0ucC1wcm9kLXRpbGUtYm94LWRpc3BsYXkucC1wcm9kLXRpbGUtbGFyZ2UtYm94LXNwcml0ZS5vbmUtYm94Lm1lZC1maWxse2JhY2tncm91bmQtcG9zaXRpb246MCAtMTk5cHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWxhcmdlLWJveC1zcHJpdGUub25lLWJveC5tZWQtZmlsbCAucGVyY2VudC1vdmVybGF5e3RvcDo1M3B4fS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1sYXJnZS1ib3gtc3ByaXRlLm9uZS1ib3guaGktZmlsbHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTI5N3B4fS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1sYXJnZS1ib3gtc3ByaXRlLm9uZS1ib3guaGktZmlsbCAucGVyY2VudC1vdmVybGF5e3RvcDozN3B4fS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1sYXJnZS1ib3gtc3ByaXRlLm9uZS1ib3gubW9yZS1oaS1maWxse2JhY2tncm91bmQtcG9zaXRpb246MCAtMzkzcHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWxhcmdlLWJveC1zcHJpdGUub25lLWJveC5tb3JlLWhpLWZpbGwgLnBlcmNlbnQtb3ZlcmxheXt0b3A6MzdweH0ucC1wcm9kLXRpbGUtYm94LWRpc3BsYXkucC1wcm9kLXRpbGUtbGFyZ2UtYm94LXNwcml0ZS5vbmUtYm94LnYtaGktZmlsbHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTk0M3B4fS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1sYXJnZS1ib3gtc3ByaXRlLm9uZS1ib3gudi1oaS1maWxsIC5wZXJjZW50LW92ZXJsYXl7dG9wOjMxcHg7bGVmdDo1NXB4O2NvbG9yOiNEMjZGMUZ9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWxhcmdlLWJveC1zcHJpdGUubXVsdGktYm94e2hlaWdodDo4OHB4O3dpZHRoOjEzNXB4fS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1sYXJnZS1ib3gtc3ByaXRlLm11bHRpLWJveCAucGVyY2VudC1vdmVybGF5e2xlZnQ6NjVweH0ucC1wcm9kLXRpbGUtYm94LWRpc3BsYXkucC1wcm9kLXRpbGUtbGFyZ2UtYm94LXNwcml0ZS5tdWx0aS1ib3gudi1sb3ctZmlsbHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTQ5M3B4fS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1sYXJnZS1ib3gtc3ByaXRlLm11bHRpLWJveC52LWxvdy1maWxsIC5wZXJjZW50LW92ZXJsYXl7dG9wOjYxcHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWxhcmdlLWJveC1zcHJpdGUubXVsdGktYm94Lmxvdy1maWxse2JhY2tncm91bmQtcG9zaXRpb246MCAtNTg0cHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWxhcmdlLWJveC1zcHJpdGUubXVsdGktYm94Lmxvdy1maWxsIC5wZXJjZW50LW92ZXJsYXl7dG9wOjU2cHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWxhcmdlLWJveC1zcHJpdGUubXVsdGktYm94Lm1lZC1maWxse2JhY2tncm91bmQtcG9zaXRpb246MCAtNjczcHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWxhcmdlLWJveC1zcHJpdGUubXVsdGktYm94Lm1lZC1maWxsIC5wZXJjZW50LW92ZXJsYXl7dG9wOjUwcHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWxhcmdlLWJveC1zcHJpdGUubXVsdGktYm94LmhpLWZpbGx7YmFja2dyb3VuZC1wb3NpdGlvbjowIC03NjNweH0ucC1wcm9kLXRpbGUtYm94LWRpc3BsYXkucC1wcm9kLXRpbGUtbGFyZ2UtYm94LXNwcml0ZS5tdWx0aS1ib3guaGktZmlsbCAucGVyY2VudC1vdmVybGF5e3RvcDozNHB4fS5wLXByb2QtdGlsZS1ib3gtZGlzcGxheS5wLXByb2QtdGlsZS1sYXJnZS1ib3gtc3ByaXRlLm11bHRpLWJveC5tb3JlLWhpLWZpbGx7YmFja2dyb3VuZC1wb3NpdGlvbjowIC04NTRweH0ucC1wcm9kLXRpbGUtYm94LWRpc3BsYXkucC1wcm9kLXRpbGUtbGFyZ2UtYm94LXNwcml0ZS5tdWx0aS1ib3gubW9yZS1oaS1maWxsIC5wZXJjZW50LW92ZXJsYXl7dG9wOjMzcHh9LnAtcHJvZC10aWxlLWJveC1kaXNwbGF5LnAtcHJvZC10aWxlLWxhcmdlLWJveC1zcHJpdGUubXVsdGktYm94LnYtaGktZmlsbHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTEwNDBweH0ucC1wcm9kLXRpbGUtYm94LWRpc3BsYXkucC1wcm9kLXRpbGUtbGFyZ2UtYm94LXNwcml0ZS5tdWx0aS1ib3gudi1oaS1maWxsIC5wZXJjZW50LW92ZXJsYXl7dG9wOjMwcHg7Y29sb3I6I0QyNkYxRn1cbi5wLXByb2QtdGlsZS5wLXByb2QtdGlsZS1jZGxpc3QtZXhlY3V0aW5ne29wYWNpdHk6LjZ9LnAtcHJvZC10aWxlLnAtcHJvZC10aWxlLWNkbGlzdC1leGVjdXRpbmcgLnAtcHJvZC10aWxlLWNkbGlzdC1hY3Rpb25ze2Rpc3BsYXk6bm9uZX0ucC1wcm9kLXRpbGUucC1wcm9kLXRpbGUtY2RsaXN0LWV4ZWN1dGluZyAucC1wcm9kLXRpbGUtY2RsaXN0LWFjdGlvbnMtc3Bpbm5lcntkaXNwbGF5OmJsb2NrfS5wLXByb2QtdGlsZS5wLXByb2QtdGlsZS1jZGxpc3QtdW5kb2luZy1kZWxldGV7b3BhY2l0eTouNn0ucC1wcm9kLXRpbGUucC1wcm9kLXRpbGUtY2RsaXN0LXVuZG9pbmctZGVsZXRlIC5wLXByb2QtdGlsZS1jZGxpc3QtYWN0aW9uLW1lc3NhZ2V7ZGlzcGxheTpub25lfS5wLXByb2QtdGlsZS5wLXByb2QtdGlsZS1jZGxpc3QtdW5kb2luZy1kZWxldGUgLnAtcHJvZC10aWxlLWNkbGlzdC11bmRvLWRlbGV0ZS1zcGlubmVye2Rpc3BsYXk6YmxvY2t9LnAtcHJvZC10aWxlLnAtcHJvZC10aWxlLWNkbGlzdC1kZWxldGUtc3VjY2Vzc3tib3JkZXItY29sb3I6IzhDQ0M3RH0ucC1wcm9kLXRpbGUucC1wcm9kLXRpbGUtY2RsaXN0LWRlbGV0ZS1zdWNjZXNzIC5wLXByb2QtdGlsZS1pbm5lciAucC1wcm9kLXRpbGUtZGV0YWlscywucC1wcm9kLXRpbGUucC1wcm9kLXRpbGUtY2RsaXN0LWRlbGV0ZS1zdWNjZXNzIC5wLXByb2QtdGlsZS1pbm5lciAucC1wcm9kLXRpbGUtaW1nLW91dGVyLC5wLXByb2QtdGlsZS5wLXByb2QtdGlsZS1jZGxpc3QtZGVsZXRlLXN1Y2Nlc3MgLnAtcHJvZC10aWxlLWlubmVyIC5wLXByb2QtdGlsZS1zZWxlY3Rpb24taW5mb3tvcGFjaXR5Oi4yfS5wLXByb2QtdGlsZS5wLXByb2QtdGlsZS1jZGxpc3QtZGVsZXRlLXN1Y2Nlc3MgLnAtcHJvZC10aWxlLWlubmVyIC5wLXByb2QtdGlsZS1idXR0b25ze2Rpc3BsYXk6bm9uZX0ucC1wcm9kLXRpbGUucC1wcm9kLXRpbGUtY2RsaXN0LWRlbGV0ZS1zdWNjZXNzIC5wLXByb2QtdGlsZS1pbm5lciAucC1wcm9kLXRpbGUtbWVzc2FnaW5ne2Rpc3BsYXk6YmxvY2t9LnAtcHJvZC10aWxlLnAtcHJvZC10aWxlLWNkbGlzdC1kZWxldGUtc3VjY2VzcyAucC1wcm9kLXRpbGUtaW5uZXIgLnAtcHJvZC10aWxlLW1lc3NhZ2luZyAucC1wcm9kLXRpbGUtY2RsaXN0LWFjdGlvbi1yZXN1bHR7ZGlzcGxheTpub25lfS5wLXByb2QtdGlsZS5wLXByb2QtdGlsZS1jZGxpc3QtZGVsZXRlLXN1Y2Nlc3MgLnAtcHJvZC10aWxlLWlubmVyIC5wLXByb2QtdGlsZS1tZXNzYWdpbmcgLnAtcHJvZC10aWxlLWNkbGlzdC1kZWxldGUtc3VjY2Vzc3tkaXNwbGF5OmJsb2NrfS5wLXByb2QtdGlsZS5wLXByb2QtdGlsZS1jZGxpc3QtbW92ZS1zdWNjZXNze2JvcmRlci1jb2xvcjojOENDQzdEfS5wLXByb2QtdGlsZS5wLXByb2QtdGlsZS1jZGxpc3QtbW92ZS1zdWNjZXNzIC5wLXByb2QtdGlsZS1pbm5lciAucC1wcm9kLXRpbGUtZGV0YWlscywucC1wcm9kLXRpbGUucC1wcm9kLXRpbGUtY2RsaXN0LW1vdmUtc3VjY2VzcyAucC1wcm9kLXRpbGUtaW5uZXIgLnAtcHJvZC10aWxlLWltZy1vdXRlciwucC1wcm9kLXRpbGUucC1wcm9kLXRpbGUtY2RsaXN0LW1vdmUtc3VjY2VzcyAucC1wcm9kLXRpbGUtaW5uZXIgLnAtcHJvZC10aWxlLXNlbGVjdGlvbi1pbmZve29wYWNpdHk6LjJ9LnAtcHJvZC10aWxlLnAtcHJvZC10aWxlLWNkbGlzdC1tb3ZlLXN1Y2Nlc3MgLnAtcHJvZC10aWxlLWlubmVyIC5wLXByb2QtdGlsZS1idXR0b25ze2Rpc3BsYXk6bm9uZX0ucC1wcm9kLXRpbGUucC1wcm9kLXRpbGUtY2RsaXN0LW1vdmUtc3VjY2VzcyAucC1wcm9kLXRpbGUtaW5uZXIgLnAtcHJvZC10aWxlLW1lc3NhZ2luZ3tkaXNwbGF5OmJsb2NrfS5wLXByb2QtdGlsZS5wLXByb2QtdGlsZS1jZGxpc3QtbW92ZS1zdWNjZXNzIC5wLXByb2QtdGlsZS1pbm5lciAucC1wcm9kLXRpbGUtbWVzc2FnaW5nIC5wLXByb2QtdGlsZS1jZGxpc3QtYWN0aW9uLXJlc3VsdHtkaXNwbGF5Om5vbmV9LnAtcHJvZC10aWxlLnAtcHJvZC10aWxlLWNkbGlzdC1tb3ZlLXN1Y2Nlc3MgLnAtcHJvZC10aWxlLWlubmVyIC5wLXByb2QtdGlsZS1tZXNzYWdpbmcgLnAtcHJvZC10aWxlLWNkbGlzdC1tb3ZlLXN1Y2Nlc3N7ZGlzcGxheTpibG9ja30ucC1wcm9kLXRpbGUucC1wcm9kLXRpbGUtY2RsaXN0LWFjdGlvbi1lcnJvcntib3JkZXItY29sb3I6I2M0MDAwMH0ucC1wcm9kLXRpbGUucC1wcm9kLXRpbGUtY2RsaXN0LWFjdGlvbi1lcnJvciAucC1wcm9kLXRpbGUtaW5uZXIgLnAtcHJvZC10aWxlLWRldGFpbHMsLnAtcHJvZC10aWxlLnAtcHJvZC10aWxlLWNkbGlzdC1hY3Rpb24tZXJyb3IgLnAtcHJvZC10aWxlLWlubmVyIC5wLXByb2QtdGlsZS1pbWctb3V0ZXIsLnAtcHJvZC10aWxlLnAtcHJvZC10aWxlLWNkbGlzdC1hY3Rpb24tZXJyb3IgLnAtcHJvZC10aWxlLWlubmVyIC5wLXByb2QtdGlsZS1zZWxlY3Rpb24taW5mb3tvcGFjaXR5Oi4yfS5wLXByb2QtdGlsZS5wLXByb2QtdGlsZS1jZGxpc3QtYWN0aW9uLWVycm9yIC5wLXByb2QtdGlsZS1pbm5lciAucC1wcm9kLXRpbGUtYnV0dG9uc3tkaXNwbGF5Om5vbmV9LnAtcHJvZC10aWxlLnAtcHJvZC10aWxlLWNkbGlzdC1hY3Rpb24tZXJyb3IgLnAtcHJvZC10aWxlLWlubmVyIC5wLXByb2QtdGlsZS1tZXNzYWdpbmd7ZGlzcGxheTpibG9ja30ucC1wcm9kLXRpbGUucC1wcm9kLXRpbGUtY2RsaXN0LWFjdGlvbi1lcnJvciAucC1wcm9kLXRpbGUtaW5uZXIgLnAtcHJvZC10aWxlLWNkbGlzdC1hY3Rpb24tcmVzdWx0e2Rpc3BsYXk6bm9uZX0ucC1wcm9kLXRpbGUucC1wcm9kLXRpbGUtY2RsaXN0LWFjdGlvbi1lcnJvciAucC1wcm9kLXRpbGUtaW5uZXIgLnAtcHJvZC10aWxlLWNkbGlzdC1hY3Rpb24tZXJyb3J7ZGlzcGxheTpibG9ja30ucC1wcm9kLXRpbGUtY2RsaXN0LWFjdGlvbi1yZXN1bHQgLnAtcHJvZC10aWxlLWNkbGlzdC1hY3Rpb24tbWVzc2FnZXtoZWlnaHQ6MjhweH0ucC1wcm9kLXRpbGUtY2RsaXN0LWFjdGlvbi1yZXN1bHQgLnAtcHJvZC10aWxlLWNkbGlzdC11bmRvLWRlbGV0ZS1zcGlubmVye2Rpc3BsYXk6bm9uZTtoZWlnaHQ6MjhweDt0ZXh0LWFsaWduOmNlbnRlcn0ucC1wcm9kLXRpbGUtY2RsaXN0LWFjdGlvbi1yZXN1bHQgLnAtcHJvZC10aWxlLWNkbGlzdC11bmRvLWRlbGV0ZS1zcGlubmVyIC5wLXByb2QtdGlsZS1jZGxpc3QtdW5kby1kZWxldGUtc3Bpbm5lci1pbWd7ZGlzcGxheTppbmxpbmUtYmxvY2t9LnAtcHJvZC10aWxlLWNkbGlzdC1hY3Rpb24tcmVzdWx0IC5wLXByb2QtdGlsZS1jZGxpc3QtYWN0aW9uLXN0YXR1cy1zdWNjZXNze2JhY2tncm91bmQtY29sb3I6I0U4RjlFMn0ucC1wcm9kLXRpbGUtY2RsaXN0LWFjdGlvbi1yZXN1bHQgLnAtcHJvZC10aWxlLWNkbGlzdC1hY3Rpb24tc3RhdHVzLWVycm9ye2JhY2tncm91bmQtY29sb3I6I2ZjZjRmNH0ucC1wcm9kLXRpbGUtY2RsaXN0LWFjdGlvbi1yZXN1bHQgLnAtcHJvZC10aWxlLWNkbGlzdC1hY3Rpb24tc3RhdHVze3BhZGRpbmc6MTBweDtmb250LXdlaWdodDo3MDA7bWFyZ2luLWJvdHRvbToxM3B4IWltcG9ydGFudH0ucC1wcm9kLXRpbGUtY2RsaXN0LWFjdGlvbnN7aGVpZ2h0OjI4cHh9LnAtcHJvZC10aWxlLWNkbGlzdC1hY3Rpb25zIC5hLWJ1dHRvbi10ZXh0e3RleHQtYWxpZ246Y2VudGVyIWltcG9ydGFudH0ucC1wcm9kLXRpbGUtY2RsaXN0LWFjdGlvbnMtc3Bpbm5lcntkaXNwbGF5Om5vbmU7aGVpZ2h0OjI4cHg7dGV4dC1hbGlnbjpjZW50ZXJ9LnAtcHJvZC10aWxlLWNkbGlzdC1hY3Rpb25zLXNwaW5uZXIgLnAtcHJvZC10aWxlLWNkbGlzdC1hY3Rpb25zLXNwaW5uZXItaW1ne2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5hLW5vLWpzIC5wLXByb2QtdGlsZS1jZGxpc3QtbW92ZXtkaXNwbGF5Om5vbmUhaW1wb3J0YW50fS5hLW5vLWpzIC5wLXByb2QtdGlsZS1jZGxpc3QtZGVsZXRle3dpZHRoOjEwMCUhaW1wb3J0YW50fVxuLnAtcHJvZC10aWxle2JvcmRlcjpzb2xpZCAxcHggI0VFRTtwb3NpdGlvbjpyZWxhdGl2ZX0ucC1wcm9kLXRpbGUucC1wcm9kLXRpbGUtcm9zaWV7Ym9yZGVyOm5vbmV9LnAtcHJvZC10aWxlLnAtcHJvZC10aWxlLXJvc2llLWxhcmdle2JvcmRlcjpub25lfS5wLXByb2QtdGlsZSAucC1wcm9kLXRpbGUtaW5uZXJ7aGVpZ2h0OjEwMCU7d2lkdGg6MTAwJX0ucC1wcm9kLXRpbGUgLnAtcHJvZC10aWxlLXNlbGVjdGlvbi1pbmZve292ZXJmbG93LXk6aGlkZGVuO3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6MjI7aGVpZ2h0OjI1cHg7cGFkZGluZzo1cHggMCAwIDVweH0ucC1wcm9kLXRpbGUgLnAtcHJvZC10aWxlLXNlbGVjdGlvbi1pbmZvIC5wLXByb2QtdGlsZS1pbi1ib3h7YmFja2dyb3VuZC1jb2xvcjojREVERURFO2JvcmRlci1yaWdodDpzb2xpZCAxcHggI0RFREVERTstbW96LWJvcmRlci1yYWRpdXM6MnB4IDAgMCAycHg7LXdlYmtpdC1ib3JkZXItcmFkaXVzOjJweCAwIDAgMnB4O2JvcmRlci1yYWRpdXM6MnB4IDAgMCAycHg7ZmxvYXQ6cmlnaHQ7cGFkZGluZzowIDVweCAwIDZweDtoZWlnaHQ6MThweH0ucC1wcm9kLXRpbGUgLnAtcHJvZC10aWxlLXNlbGVjdGlvbi1pbmZvIC5wLXByb2QtdGlsZS1pbi1ib3ggLnAtcHJvZC10aWxlLWluLWJveC1pbm5lcnt2ZXJ0aWNhbC1hbGlnbjp0ZXh0LXRvcH0ucC1wcm9kLXRpbGUgLnAtcHJvZC10aWxlLWltZy1vdXRlcntwb3NpdGlvbjpyZWxhdGl2ZX0ucC1wcm9kLXRpbGUgLnAtcHJvZC10aWxlLWltZy1vdXRlciAucC1wcm9kLXRpbGUtaW1ne2Rpc3BsYXk6YmxvY2s7bWFyZ2luLWxlZnQ6YXV0bzttYXJnaW4tcmlnaHQ6YXV0b30ucC1wcm9kLXRpbGUgLnAtcHJvZC10aWxlLXJvc2llLXF1aWNrLWxvb2stYnV0dG9ue2Rpc3BsYXk6bm9uZTtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6NzAlO2xlZnQ6MjUlO3dpZHRoOjUwJX0ucC1wcm9kLXRpbGUgLnAtcHJvZC10aWxlLWRldGFpbHMgLnAtcHJvZC10aWxlLXRpdGxle292ZXJmbG93LXk6aGlkZGVufS5wLXByb2QtdGlsZSAucC1wcm9kLXRpbGUtaGlkZS1vdmVyZmxvd3tvdmVyZmxvdzpoaWRkZW47d2hpdGUtc3BhY2U6bm93cmFwfS5wLXByb2QtdGlsZSAucC1wcm9kLXRpbGUtYmFkZ2V7dmVydGljYWwtYWxpZ246YmFzZWxpbmV9LnAtcHJvZC10aWxlIC5wLXByb2QtdGlsZS1idXR0b25ze3Bvc2l0aW9uOmFic29sdXRlO2Rpc3BsYXk6YmxvY2s7Ym90dG9tOjA7YmFja2dyb3VuZC1jb2xvcjojRjhGOEY4O2JvcmRlci10b3A6c29saWQgMXB4ICNFRUV9LnAtcHJvZC10aWxlIC5wLXByb2QtdGlsZS1idXR0b25zIGZvcm17bWFyZ2luLWJvdHRvbTowfS5wLXByb2QtdGlsZSAucC1wcm9kLXRpbGUtYnV0dG9ucyAucC1wcm9kLXRpbGUtYXRjLXNwaW5uZXJ7ZGlzcGxheTpub25lO3RleHQtYWxpZ246Y2VudGVyfS5wLXByb2QtdGlsZSAucC1wcm9kLXRpbGUtYnV0dG9ucyAucC1wcm9kLXRpbGUtYXRjLXNwaW5uZXIgLnAtcHJvZC10aWxlLWF0Yy1zcGlubmVyLWltZ3tkaXNwbGF5OmlubGluZS1ibG9ja30ucC1wcm9kLXRpbGUgLnAtcHJvZC10aWxlLWlubGluZS11cHNlbGx7YmFja2dyb3VuZC1jb2xvcjojRUFFREVEO3Bvc2l0aW9uOmFic29sdXRlO2Rpc3BsYXk6bm9uZTt0b3A6MDtib3R0b206MDt6LWluZGV4OjIxO3RleHQtYWxpZ246Y2VudGVyfS5wLXByb2QtdGlsZSAucC1wcm9kLXRpbGUtaW5saW5lLXVwc2VsbCAucC1wcm9kLXRpbGUtaW5mb3tiYWNrZ3JvdW5kLWNvbG9yOiNGRkY7cGFkZGluZzowIDZweH0ucC1wcm9kLXRpbGUgLnAtcHJvZC10aWxlLWlubGluZS11cHNlbGwgLnAtcHJvZC10aWxlLWluZm8gLnAtcHJvZC10aWxlLWltZy1wYWRkaW5ne3BhZGRpbmctdG9wOjZweH0ucC1wcm9kLXRpbGUgLnAtcHJvZC10aWxlLWlubGluZS11cHNlbGwgLnAtcHJvZC10aWxlLWluZm8gLnAtcHJvZC10aWxlLWltZy1wYWRkaW5nIC5wLXByb2QtdGlsZS1pbWctc2l6ZXtoZWlnaHQ6NzdweH0ucC1wcm9kLXRpbGUgLnAtcHJvZC10aWxlLWlubGluZS11cHNlbGwgLnAtcHJvZC10aWxlLWluZm8gLnAtcHJvZC10aWxlLWl0ZW0tbmFtZXtoZWlnaHQ6MzZweDtvdmVyZmxvdy15OmhpZGRlbn0ucC1wcm9kLXRpbGUgLnAtcHJvZC10aWxlLWlubGluZS11cHNlbGwgLnAtcHJvZC10aWxlLWluZm8gLnAtcHJvZC10aWxlLXByaWNlLWFkZC1wYWRkaW5ne3BhZGRpbmctYm90dG9tOjEwcHg7cGFkZGluZy1yaWdodDowfS5wLXByb2QtdGlsZSAucC1wcm9kLXRpbGUtaW5saW5lLXVwc2VsbCAucC1wcm9kLXRpbGUtcmVjc3twb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjA7cmlnaHQ6MDtwYWRkaW5nOjAgNnB4fS5wLXByb2QtdGlsZSAucC1wcm9kLXRpbGUtaW5saW5lLXVwc2VsbCAucC1wcm9kLXRpbGUtcmVjcyAucC1wcm9kLXRpbGUtaGVhZGxpbmUtcGFkZGluZ3tkaXNwbGF5OmJsb2NrO3BhZGRpbmc6NnB4IDB9LnAtcHJvZC10aWxlIC5wLXByb2QtdGlsZS1pbmxpbmUtdXBzZWxsIC5wLXByb2QtdGlsZS1yZWNzIC5wLXByb2QtdGlsZS1yZWN7YmFja2dyb3VuZC1jb2xvcjojRkZGfS5wLXByb2QtdGlsZSAucC1wcm9kLXRpbGUtaW5saW5lLXVwc2VsbCAucC1wcm9kLXRpbGUtcmVjcyAucC1wcm9kLXRpbGUtcmVjIC5wLXByb2QtdGlsZS1yZWMtcGFkZGluZ3tkaXNwbGF5OmJsb2NrO3BhZGRpbmc6NHB4O2hlaWdodDoyNnB4O3dpZHRoOjE1MXB4O292ZXJmbG93OmhpZGRlbjt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO3doaXRlLXNwYWNlOm5vd3JhcH0ucC1wcm9kLXRpbGUgLnAtcHJvZC10aWxlLXJvc2llLWJ1dHRvbnN7cG9zaXRpb246YWJzb2x1dGU7ZGlzcGxheTpibG9jaztib3R0b206MDtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlci10b3A6bm9uZX0ucC1wcm9kLXRpbGUgLnAtcHJvZC10aWxlLXJvc2llLW1lc3NhZ2luZ3tiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvdHRvbToxNDVweH0ucC1wcm9kLXRpbGUgLnAtcHJvZC10aWxlLXJvc2llLXN1Y2Nlc3N7YmFja2dyb3VuZC1jb2xvcjojZmZmO29wYWNpdHk6Ljg1fS5wLXByb2QtdGlsZSAucC1wcm9kLXRpbGUtcm9zaWUtcHJpY2V7Zm9udC13ZWlnaHQ6NzAwfS5wLXByb2QtdGlsZS5wLXByb2QtdGlsZS1zaXplLWxhcmdle21heC13aWR0aDozNjBweH0ucC1wcm9kLXRpbGUucC1wcm9kLXRpbGUtc2l6ZS1sYXJnZSAucC1wcm9kLXRpbGUtZGV0YWlsc3twYWRkaW5nOjAgMjVweH0ucC1wcm9kLXRpbGUucC1wcm9kLXRpbGUtc2l6ZS1sYXJnZSAucC1wcm9kLXRpbGUtZGV0YWlscyAucC1wcm9kLXRpbGUtdGl0bGV7bWF4LWhlaWdodDozNnB4fS5wLXByb2QtdGlsZS5wLXByb2QtdGlsZS1zaXplLWxhcmdlIC5wLXByb2QtdGlsZS1idXR0b25ze3BhZGRpbmc6MTRweCAxNXB4IDB9LnAtcHJvZC10aWxlLnAtcHJvZC10aWxlLXNpemUtbGFyZ2UgLnAtcHJvZC10aWxlLWJ1dHRvbnMgLnAtcHJvZC10aWxlLWF0YyAucC1wcm9kLXRpbGUtYXRjLXNwaW5uZXJ7bWFyZ2luLWJvdHRvbToxNHB4fS5wLXByb2QtdGlsZS5wLXByb2QtdGlsZS1zaXplLW1pbmkgLnAtcHJvZC10aWxlLWRldGFpbHN7cGFkZGluZzowIDEwcHh9LnAtcHJvZC10aWxlLnAtcHJvZC10aWxlLXNpemUtbWluaSAucC1wcm9kLXRpbGUtZGV0YWlscyAucC1wcm9kLXRpbGUtdGl0bGV7bWF4LWhlaWdodDozNnB4fS5wLXByb2QtdGlsZS5wLXByb2QtdGlsZS1zaXplLW1pbmkgLnAtcHJvZC10aWxlLWRldGFpbHMgLnAtcHJvZC10aWxlLXByb21vIC5wLXByb2QtdGlsZS1wcm9tby1zdWJ0aXRsZXtsaW5lLWhlaWdodDouOX0ucC1wcm9kLXRpbGUucC1wcm9kLXRpbGUtc2l6ZS1taW5pIC5wLXByb2QtdGlsZS1kZXRhaWxzIC5wLXByb2QtdGlsZS1wcm9tbyAucC1wcm9kLXRpbGUtcHJvbW8tc3VidGl0bGUgLnAtcHJvZC10aWxlLXByb21vLXN1YnRpdGxlLXRleHR7bGluZS1oZWlnaHQ6MSFpbXBvcnRhbnR9LnAtcHJvZC10aWxlLnAtcHJvZC10aWxlLXNpemUtbWluaSAucC1wcm9kLXRpbGUtYnV0dG9uc3twYWRkaW5nOjE0cHggMTBweCAwfS5wLXByb2QtdGlsZS5wLXByb2QtdGlsZS1zaXplLW1pbmkgLnAtcHJvZC10aWxlLWJ1dHRvbnMgLnAtcHJvZC10aWxlLWF0YyAucC1wcm9kLXRpbGUtcXVhbnRpdHl7d2lkdGg6NTRweH0ucC1wcm9kLXRpbGUucC1wcm9kLXRpbGUtc2l6ZS1taW5pIC5wLXByb2QtdGlsZS1idXR0b25zIC5wLXByb2QtdGlsZS1hdGMgLnAtcHJvZC10aWxlLWF0Yy1zcGlubmVye21hcmdpbi1ib3R0b206OHB4fS5wLXByb2QtdGlsZS5wLXByb2QtdGlsZS1zaXplLXJvc2llLW1pbmkgLnAtcHJvZC10aWxlLWRldGFpbHN7cGFkZGluZzowIDEwcHh9LnAtcHJvZC10aWxlLnAtcHJvZC10aWxlLXNpemUtcm9zaWUtbWluaSAucC1wcm9kLXRpbGUtZGV0YWlscyAucC1wcm9kLXRpbGUtdGl0bGV7bWF4LWhlaWdodDozNnB4fS5wLXByb2QtdGlsZS5wLXByb2QtdGlsZS1zaXplLXJvc2llLW1pbmkgLnAtcHJvZC10aWxlLWJ1dHRvbnN7cGFkZGluZzoxNHB4IDEwcHggMH0ucC1wcm9kLXRpbGUucC1wcm9kLXRpbGUtc2l6ZS1yb3NpZS1taW5pIC5wLXByb2QtdGlsZS1idXR0b25zIC5wLXByb2QtdGlsZS1hdGMgLnAtcHJvZC10aWxlLWF0Yy1zcGlubmVye21hcmdpbi1ib3R0b206OHB4fS5hLWxpbmstbm9ybWFsLnAtcHJvZC10aWxlLW1pbmktZHAtdGl0bGV7Zm9udC1zaXplOngtbGFyZ2U7Y29sb3I6IzAwMH0ucC1wcm9kLXRpbGUtbWluaS1kcC10aXRsZS1zZWN0aW9ue2ZvbnQtc2l6ZToyNHB4O21heC1oZWlnaHQ6ODBweDtsaW5lLWhlaWdodDoxMTAlO292ZXJmbG93OmhpZGRlbjtwYWRkaW5nLXJpZ2h0OjQwcHh9LnAtcHJvZC10aWxlLW1pbmktZHAtYnJhbmR7cG9zaXRpb246YWJzb2x1dGU7Zm9udC1zaXplOjE3cHg7Y29sb3I6Izc2NzY3Nn0ucC1wcm9kLXRpbGUtbWluaS1kcC1kZXRhaWxze3BhZGRpbmctbGVmdDo0MHB4O3BhZGRpbmctYm90dG9tOjQwcHh9LnAtcHJvZC10aWxlLW1pbmktZHAtcHJpY2V7Zm9udC1zaXplOmxhcmdlfS5wLXByb2QtdGlsZS1taW5pLWRwLXBwdXtjb2xvcjojNzY3Njc2fS5wLXByb2QtdGlsZS1naG9zdC10aWxle2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnR9LnAtcHJvZC10aWxlLWNhcm91c2VsLXZpZGVvLXRpbGV7bWluLXdpZHRoOjM3NXB4IWltcG9ydGFudDttaW4taGVpZ2h0OjM2MHB4IWltcG9ydGFudH0ucC1wcm9kLXRpbGUtY2Fyb3VzZWwtdmlkZW8tdGlsZSAucC1wcm9kLXRpbGUtaW5uZXJ7d2lkdGg6Mzc1cHh9LnAtcHJvZC10aWxlLWNhcm91c2VsLXZpZGVvLXRpbGUgLnAtcHJvZC10aWxlLWltZy1vdXRlcnt3aWR0aDoxMDBweDtoZWlnaHQ6MTM2cHg7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlcjoxcHggc29saWQgI2VlZTtib3JkZXItcmFkaXVzOjNweDttYXJnaW46OXB4O3BhZGRpbmc6NXB4O3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MTBweDtib3R0b206MTZweH0ucC1wcm9kLXRpbGUtY2Fyb3VzZWwtdmlkZW8tdGlsZSAucC1wcm9kLXRpbGUtaW1nLW91dGVyIC5wLXByb2QtdGlsZS1pbWd7cG9zaXRpb246cmVsYXRpdmU7dG9wOjUwJTt0cmFuc2Zvcm06dHJhbnNsYXRlWSgtNTAlKTtoZWlnaHQ6YXV0bzt3aWR0aDphdXRvfS5wLXByb2QtdGlsZS1jYXJvdXNlbC12aWRlby10aWxlIC5wLXByb2QtdGlsZS1kZXRhaWxze3dpZHRoOjIzMnB4O3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MTMycHg7dG9wOjIxN3B4fS5wLXByb2QtdGlsZS1jYXJvdXNlbC12aWRlby10aWxlIC5wLXByb2QtdGlsZS1kZXRhaWxzIC5wLXByb2QtdGlsZS10aXRsZXttaW4taGVpZ2h0OjUwcHg7b3ZlcmZsb3c6aGlkZGVufS5wLXByb2QtdGlsZS1jYXJvdXNlbC12aWRlby10aWxlIC5wLXByb2QtdGlsZS1kZXRhaWxzIC5wLXByb2QtdGlsZS10aXRsZSAuYS1saW5rLW5vcm1hbHt0ZXh0LW92ZXJmbG93OmNsaXA7d2lkdGg6MjMycHg7b3ZlcmZsb3c6aGlkZGVufS5wLXByb2QtdGlsZS1jYXJvdXNlbC12aWRlby10aWxlIC5wLXByb2QtdGlsZS1kZXRhaWxzIC5wLXByb2QtdGlsZS10aXRsZS10d28tbGluZXttaW4taGVpZ2h0OjM2cHg7aGVpZ2h0OjM2cHh9LnAtcHJvZC10aWxlLWNhcm91c2VsLXZpZGVvLXRpbGUgLnAtcHJvZC10aWxlLWRldGFpbHMgLnAtcHJvZC10aWxlLXByb21ve2xpbmUtaGVpZ2h0Oi45O2Rpc3BsYXk6aW5saW5lfS5wLXByb2QtdGlsZS1jYXJvdXNlbC12aWRlby10aWxlIC5wLXByb2QtdGlsZS1kZXRhaWxzIC5wLXByb2QtdGlsZS1wcm9tby1zdWJ0aXRsZXtkaXNwbGF5Om5vbmUhaW1wb3J0YW50fS5wLXByb2QtdGlsZS1jYXJvdXNlbC12aWRlby10aWxlIC5wLXByb2QtdGlsZS1zaW1wbGUtYXRjLXN1Y2Nlc3MtcmVzdWx0e3dpZHRoOjM3NXB4O3RvcDotMTcwcHg7bGVmdDowfS5wLXByb2QtdGlsZS1jYXJvdXNlbC12aWRlby10aWxlIC5wLXByb2QtdGlsZS1zaW1wbGUtYXRjLXN1Y2Nlc3MtcmVzdWx0IC5wLXByb2QtdGlsZS1hdGMtY2hhbmdlb3ZlcntsZWZ0OjkycHg7d2lkdGg6MTUwcHg7ZGlzcGxheTppbmxpbmUtYmxvY2t9LnAtcHJvZC10aWxlLWNhcm91c2VsLXZpZGVvLXRpbGUgLnAtcHJvZC10aWxlLXNlbGVjdGlvbi1pbmZve3BvaW50ZXItZXZlbnRzOm5vbmV9LnAtcHJvZC10aWxlLWNhcm91c2VsLXZpZGVvLXRpbGUgLnZqcy1wb3N0ZXJ7LXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6Y292ZXI7LW1vei1iYWNrZ3JvdW5kLXNpemU6Y292ZXI7LW8tYmFja2dyb3VuZC1zaXplOmNvdmVyO2JhY2tncm91bmQtc2l6ZTpjb3ZlciFpbXBvcnRhbnR9LnAtcHJvZC10aWxlLWNhcm91c2VsLXZpZGVvLXRpbGUtYnV0dG9uc3tib3JkZXI6bm9uZSFpbXBvcnRhbnR9LnAtcHJvZC10aWxlLWNhcm91c2VsLXZpZGVvLXRpbGUtYnV0dG9ucyAucC1wcm9kLXRpbGUtYXRje3dpZHRoOjIzMnB4O3Bvc2l0aW9uOmFic29sdXRlO2Rpc3BsYXk6YmxvY2s7Ym90dG9tOjI2cHg7aGVpZ2h0OjMxcHg7bGVmdDoxMzJweH0ucC1wcm9kLXRpbGUtY2Fyb3VzZWwtdmlkZW8tdGlsZS1idXR0b25zIC5wLXByb2QtdGlsZS1hdGMgLmEtdGV4dC1jZW50ZXJ7dGV4dC1hbGlnbjpsZWZ0IWltcG9ydGFudDttYXJnaW4tdG9wOi01cHh9LnAtcHJvZC10aWxlLWNhcm91c2VsLXZpZGVvLXRpbGUtYnV0dG9ucyAucC1wcm9kLXRpbGUtYXRjLWJ1dHRvbntsZWZ0Oi0xMHB4fS5wLXByb2QtdGlsZS1jYXJvdXNlbC12aWRlby10aWxlLWJ1dHRvbnMgLnAtcHJvZC10aWxlLXF1YW50aXR5e3dpZHRoOjUxcHghaW1wb3J0YW50fS5wLXByb2QtdGlsZS1jYXJvdXNlbC12aWRlby10aWxlLWF0Yy1kcm9wZG93biAuYS1jb2wtbGVmdHt3aWR0aDo2NHB4fS5wLXByb2QtdGlsZS1jYXJvdXNlbC12aWRlby10aWxlLXBsYXllcntoZWlnaHQ6MjAwcHg7d2lkdGg6MzU1cHg7bWFyZ2luOjlweDtkaXNwbGF5OmJsb2NrO292ZXJmbG93OmhpZGRlbjtiYWNrZ3JvdW5kLWNvbG9yOiMwMDB9LnAtcHJvZC10aWxlLWNhcm91c2VsLXZpZGVvLXRpbGUtc3BvbnNvcmVkLXRleHR7cG9zaXRpb246YWJzb2x1dGU7bGVmdDoxOXB4O2JvdHRvbTo1cHg7cGFkZGluZy10b3A6MXB4O2ZvbnQtc2l6ZTo5cHghaW1wb3J0YW50O2xldHRlci1zcGFjaW5nOi41cHh9LnAtcHJvZC10aWxlLXJvc2llLWltZy1tYXgtcXR5e3BhZGRpbmctdG9wOjVweDtwYWRkaW5nLXJpZ2h0OjVweDtwYWRkaW5nLWxlZnQ6NXB4O3BhZGRpbmctYm90dG9tOjVweDtwb3NpdGlvbjphYnNvbHV0ZTtib3R0b206NTAlO2JhY2tncm91bmQtY29sb3I6I2ZmZjtvcGFjaXR5Oi45fS5wLXByb2QtdGlsZS1yb3NpZS1pbWctbWF4LXF0eS1sYXJnZXtwYWRkaW5nLXRvcDo1cHg7cGFkZGluZy1yaWdodDo1cHg7cGFkZGluZy1sZWZ0OjVweDtwYWRkaW5nLWJvdHRvbTo1cHg7cG9zaXRpb246YWJzb2x1dGU7Ym90dG9tOjUwJTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7b3BhY2l0eTouOH0ucC1wcm9kLXRpbGUtcm9zaWUtYXRjLWRyb3Bkb3due2Rpc3BsYXk6bm9uZX0ucC1wcm9kLXRpbGUtcm9zaWUtaW1nLW91dGVyLWhvdmVyOmhvdmVyIC5wLXByb2QtdGlsZS1yb3NpZS1xdWljay1sb29rLWJ1dHRvbntkaXNwbGF5OmJsb2NrfS5wLXByb2QtdGlsZS1taW5pLWRwLWRldGFpbHMtcm93LWhpZGRlbntkaXNwbGF5Om5vbmV9LnAtcHJvZC10aWxlLW1pbmktZHAtZGV0YWlscy1yb3ctaGlkZGVue2Rpc3BsYXk6bm9uZX0ucC1wcm9kLXRpbGUtbWluaS1kcC1zaW1zLXRpdGxlLXJvd3tmb250LXNpemU6MThweDt0ZXh0LWFsaWduOmNlbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOiNmM2YzZjM7aGVpZ2h0OjcwcHh9LnAtcHJvZC10aWxlLW1pbmktZHAtc2ltcy10aXRsZXtjb2xvcjojNzY3Njc2O3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDoyMHB4fS5wLXByb2QtdGlsZS1taW5pLWRwLXNpbXMtcm93e2JhY2tncm91bmQtY29sb3I6I2YzZjNmMztoZWlnaHQ6MTE1cHg7dGV4dC1hbGlnbjpjZW50ZXJ9LnAtcHJvZC10aWxlLW1pbmktZHAtc2ltcy10aXRsZXtjb2xvcjojNzY3Njc2O3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDoyMHB4fS5wLXByb2QtdGlsZS1taW5pLWRwLXNpbXMtdGlsZXtwYWRkaW5nLWxlZnQ6MTBweDtwYWRkaW5nLXJpZ2h0OjEwcHg7cGFkZGluZy1ib3R0b206NXB4O2JvcmRlci1ib3R0b20td2lkdGg6NXB4O2JvcmRlci1ib3R0b20tY29sb3I6I2YzZjNmMztib3JkZXItYm90dG9tLXN0eWxlOnNvbGlkO3ZlcnRpY2FsLWFsaWduOmJvdHRvbTtjdXJzb3I6cG9pbnRlcn0ucC1wcm9kLXRpbGUtbWluaS1kcC1zaW1zLXRpbGUuY3VycmVudHtib3JkZXItYm90dG9tLWNvbG9yOm9yYW5nZX0ucC1wcm9kLXRpbGUtbWluaS1kcC1zaW1zLXRpbGU6aG92ZXJ7Ym9yZGVyLWJvdHRvbS1jb2xvcjojYmJifS5wLXByb2QtdGlsZS1taW5pLWRwLWF0Yy1jb25maXJtLWJhc2V7Y29sb3I6Z3JlZW47Zm9udC1zaXplOm1lZGl1bTtwYWRkaW5nLWxlZnQ6MjBweDtkaXNwbGF5Om5vbmV9LnAtcHJvZC10aWxlLW1pbmktZHAtYXRjLWNvbmZpcm0tc3VjY2Vzc3tkaXNwbGF5OmlubGluZX0ucC1wcm9kLXRpbGUtbWluaS1kcC1wZXJjZW50LXNlY3Rpb257YmFja2dyb3VuZC1jb2xvcjojZjNmM2YzO2Rpc3BsYXk6bm9uZX0ucC1wcm9kLXRpbGUtbWluaS1kcC1wZXJjZW50LXNlY3Rpb24tc2hvd3tkaXNwbGF5OmJsb2NrfS5wLXByb2QtdGlsZS1taW5pLWRwLWJveHtwYWRkaW5nLXRvcDoxMHB4O3BhZGRpbmctYm90dG9tOjEwcHg7cGFkZGluZy1sZWZ0OjEwcHg7cGFkZGluZy1yaWdodDoxMHB4fS5wLXByb2QtdGlsZS1taW5pLWRwLXBlcmNlbnQtdGV4dHtwb3NpdGlvbjphYnNvbHV0ZTtwYWRkaW5nLXRvcDoxNXB4O3BhZGRpbmctYm90dG9tOjEwcHg7cGFkZGluZy1sZWZ0OjEwcHg7cGFkZGluZy1yaWdodDoxMHB4fS5wLXByb2QtdGlsZS1taW5pLWRwLW1vZGFsLWNsb3Nle2Zsb2F0OnJpZ2h0O21hcmdpbjoxMHB4O2ZvbnQtc2l6ZTp4LWxhcmdlO2N1cnNvcjpwb2ludGVyO2NvbG9yOmdyYXl9LnAtcHJvZC10aWxlLW1pbmktZHAtZmlsbC1wZXJjZW50e2NvbG9yOiM3Njc2NzZ9LnAtcHJvZC10aWxlLW1pbmktZHAtb29ze2ZvbnQtc2l6ZTpsYXJnZTtjb2xvcjojYjEyNzA0fS5wYW50cnktZGlzY291bnQtc3RpY2tlcntwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDo0MHB4O2hlaWdodDo0MHB4O2xpbmUtaGVpZ2h0OjEycHg7Zm9udC1zaXplOjEycHg7Ym9yZGVyLXJhZGl1czoxMDAlO3otaW5kZXg6MTtjb2xvcjojZmZmO2JhY2tncm91bmQ6I0IxMjcwNDtwYWRkaW5nLXRvcDoxMHB4O3RleHQtYWxpZ246Y2VudGVyfS5wLXByb2QtdGlsZSAucC1wcm9kLXRpbGUtbWVzc2FnaW5ne2Rpc3BsYXk6bm9uZTtib3R0b206MDt6LWluZGV4OjIxO3RleHQtYWxpZ246Y2VudGVyO3BhZGRpbmctYm90dG9tOjMwcHh9LnAtbGlzdC1zaW1pbGFyLXJvdyAucC1wcm9kLXRpbGUgLnAtcHJvZC10aWxlLW1lc3NhZ2luZ3twYWRkaW5nLWJvdHRvbTowfVxuLnBhbnRyeS1pbnUtY2hhbmdlb3Zlci13cmFwcGVye3Bvc2l0aW9uOnJlbGF0aXZlfS5wYW50cnktaW51LWNoYW5nZW92ZXItd3JhcHBlciAjcGFudHJ5LWludS1jb25maXJtYXRpb257cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6MSV9I3BhbnRyeUlubGluZVVwc2VsbFdyYXBwZXJ7ZGlzcGxheTpub25lfS5pbnUtc2VjdGlvbntwYWRkaW5nOjA7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlci1yYWRpdXM6M3B4fS5pbnUtc2VjdGlvbiBwe2ZvbnQtc2l6ZToxMnB4O2ZvbnQtd2VpZ2h0OjcwMH0uaW51LXNlY3Rpb24gYXttYXJnaW4tcmlnaHQ6NHB4O21hcmdpbi1sZWZ0OjdweH0uaW51LXNlY3Rpb24gLmEtYm94LWlubmVye3BhZGRpbmc6MTBweCAxMHB4IDE0cHggN3B4fS5pbnUtaXRlbXtkaXNwbGF5OmlubGluZS1ibG9jazttYXgtd2lkdGg6MjEycHg7b3ZlcmZsb3c6aGlkZGVuO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7d2hpdGUtc3BhY2U6bm93cmFwO2JhY2tncm91bmQtY29sb3I6I2VhZWRlZDtib3JkZXItYm90dG9tOjFweDtib3JkZXItYm90dG9tLWNvbG9yOmVtYmVyO2JvcmRlci1ib3R0b20tc3R5bGU6c29saWR9XG4ucGFudHJ5LXN0b3JlLW1lc3NhZ2V7ZGlzcGxheTpibG9ja30ucGFudHJ5LXN0b3JlLW1lc3NhZ2U6aG92ZXJ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9LnBhbnRyeS1zdG9yZS1tZXNzYWdlIC5wYW50cnktc3RvcmUtbWVzc2FnZS1pbm5lcntwb3NpdGlvbjpyZWxhdGl2ZX0ucGFudHJ5LXN0b3JlLW1lc3NhZ2UgLnBhbnRyeS1zdG9yZS1tZXNzYWdlLWlubmVyIC5hLXNpemUtYmFzZS5hLWNvbG9yLWJhc2V7Zm9udC13ZWlnaHQ6NzAwfS5wYW50cnktc3RvcmUtbWVzc2FnZSAucGFudHJ5LXN0b3JlLW1lc3NhZ2UtaW5uZXIgLmEtaWNvbi1hcnJvd3twb3NpdGlvbjphYnNvbHV0ZTtyaWdodDowO3RvcDoyNSV9LnR3aXN0ZXJQcmltZVBhbnRyeXtkaXNwbGF5Om5vbmUhaW1wb3J0YW50fSN0d2lzdGVyX2ZlYXR1cmVfZGl2IC5hLWljb24tcHJpbWUtcGFudHJ5e2Rpc3BsYXk6bm9uZX0jdHdpc3Rlcl9ib3R0b21fc2hlZXQgLmEtaWNvbi1wcmltZS1wYW50cnl7ZGlzcGxheTpub25lfVxuI2ludmljdHVzQWxtTXVsdGlPZmZlckVncmVzcyAuaW52aWN0dXMtbW9lLWNpcmNsZXtwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoyNXB4O2hlaWdodDoyNXB4O2JhY2tncm91bmQ6I2QyZGVkYjtib3JkZXItcmFkaXVzOjUwJTtsZWZ0OjUwJTttYXJnaW4tYm90dG9tOi0xMi41cHg7bWFyZ2luLWxlZnQ6LTEyLjVweDt0ZXh0LWFsaWduOmNlbnRlcjtsaW5lLWhlaWdodDoyNXB4fSNpbnZpY3R1c0FsbU11bHRpT2ZmZXJFZ3Jlc3MgLmludmljdHVzLW1vZS1vZmZlckJveHtib3JkZXItYm90dG9tLXdpZHRoOjRweDtiYWNrZ3JvdW5kLWNvbG9yOiNmNmZjZmF9I2ludmljdHVzQWxtTXVsdGlPZmZlckVncmVzcyAuaW52aWN0dXMtbW9lLWxvZ297bWFyZ2luLXRvcDoycHg7bWFyZ2luLWxlZnQ6LTJweDttaXgtYmxlbmQtbW9kZTptdWx0aXBseX0jaW52aWN0dXMtbW9lLXByaWNlIC5jdXJyZW5jeUlOUntiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xNnB4IC0zMzNweDttYXJnaW4tcmlnaHQ6MH0uYS1idXR0b24ucHJpbWFyeS1mcmVzaC1idG4sLmFwLWZyZXNoIC5mcmVzaENhcnRCdXR0b25QcmltYXJ5LC51bml2ZXJzYWxGcmVzaENhcnRCdXR0b257Ym9yZGVyLWNvbG9yOiM2OTAgIzQ2NjkwMCAjM0Q1QzAwO21pbi13aWR0aDo2MHB4fS5hLWJ1dHRvbi5wcmltYXJ5LWZyZXNoLWJ0biAuYS1idXR0b24taW5uZXIsLmFwLWZyZXNoIC5mcmVzaENhcnRCdXR0b25QcmltYXJ5IC5hLWJ1dHRvbi1pbm5lciwudW5pdmVyc2FsRnJlc2hDYXJ0QnV0dG9uIC5hLWJ1dHRvbi1pbm5lcntiYWNrZ3JvdW5kOiNjYWRhOGE7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsI2NhZGE4YSAwLCM5YzMgMTAwJSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCNjYWRhOGEgMCwjOWMzIDEwMCUpfS5hLWJ1dHRvbi5wcmltYXJ5LWZyZXNoLWJ0biAuYS1idXR0b24taW5uZXI6YWN0aXZlLC5hcC1mcmVzaCAuZnJlc2hDYXJ0QnV0dG9uUHJpbWFyeSAuYS1idXR0b24taW5uZXI6YWN0aXZlLC51bml2ZXJzYWxGcmVzaENhcnRCdXR0b24gLmEtYnV0dG9uLWlubmVyOmFjdGl2ZXtiYWNrZ3JvdW5kOiM4ZmJlMzA7Ym9yZGVyLWNvbG9yOiM0NjY5MDAgIzQ2NjkwMCAjM2Q1YzAwOy13ZWJraXQtYm94LXNoYWRvdzppbnNldCAwIDFweCAzcHggMCByZ2JhKDEwMiwxMDIsMTAyLC41KTstbW96LWJveC1zaGFkb3c6aW5zZXQgMCAxcHggM3B4IDAgcmdiYSgxMDIsMTAyLDEwMiwuNSk7Ym94LXNoYWRvdzppbnNldCAwIDFweCAzcHggMCByZ2JhKDEwMiwxMDIsMTAyLC41KX0uYS1idXR0b24ucHJpbWFyeS1mcmVzaC1idG46aG92ZXIgLmEtYnV0dG9uLWlubmVyLC5hcC1mcmVzaCAuZnJlc2hDYXJ0QnV0dG9uUHJpbWFyeTpob3ZlciAuYS1idXR0b24taW5uZXIsLnVuaXZlcnNhbEZyZXNoQ2FydEJ1dHRvbjpob3ZlciAuYS1idXR0b24taW5uZXJ7YmFja2dyb3VuZDojYmRjZjc2O2JhY2tncm91bmQ6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCNiZGNmNzYgMCwjOGZiZTMwIDEwMCUpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwjYmRjZjc2IDAsIzhmYmUzMCAxMDAlKX0uYS1idXR0b24ucHJpbWFyeS1mcmVzaC1idG4uYS1idXR0b24tZGlzYWJsZWQsLmFwLWZyZXNoIC5mcmVzaENhcnRCdXR0b25QcmltYXJ5LmEtYnV0dG9uLWRpc2FibGVkLC51bml2ZXJzYWxGcmVzaENhcnRCdXR0b24uYS1idXR0b24tZGlzYWJsZWR7Ym9yZGVyLWNvbG9yOiNEOERFQ0N9LmEtYnV0dG9uLnByaW1hcnktZnJlc2gtYnRuLmEtYnV0dG9uLWRpc2FibGVkIC5hLWJ1dHRvbi1pbm5lciwuYXAtZnJlc2ggLmZyZXNoQ2FydEJ1dHRvblByaW1hcnkuYS1idXR0b24tZGlzYWJsZWQgLmEtYnV0dG9uLWlubmVyLC51bml2ZXJzYWxGcmVzaENhcnRCdXR0b24uYS1idXR0b24tZGlzYWJsZWQgLmEtYnV0dG9uLWlubmVye2JhY2tncm91bmQ6I0VCRjVENjtiYWNrZ3JvdW5kLWNvbG9yOiNFQkY1RDYhaW1wb3J0YW50fS5hLWJ1dHRvbi5wcmltYXJ5LWZyZXNoLWJ0bi5hLWJ1dHRvbi1mb2N1cywuYXAtZnJlc2ggLmZyZXNoQ2FydEJ1dHRvblByaW1hcnkuYS1idXR0b24tZm9jdXMsLnVuaXZlcnNhbEZyZXNoQ2FydEJ1dHRvbi5hLWJ1dHRvbi1mb2N1c3tvdXRsaW5lOmluaGVyaXQ7Ym9yZGVyLWNvbG9yOmluaGVyaXQ7Ym94LXNoYWRvdzppbmhlcml0fS5hLWJ1dHRvbi5wcmltYXJ5LWZyZXNoLWJ0bjphZnRlciwuYXAtZnJlc2ggLmZyZXNoQ2FydEJ1dHRvblByaW1hcnk6YWZ0ZXIsLnVuaXZlcnNhbEZyZXNoQ2FydEJ1dHRvbjphZnRlcntib3JkZXItY29sb3I6dHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgIzNkNWMwMH0jZnJlc2hBZGRUb0xpc3QuYWZ4LWRwLXNhdmVUb0dyb2NlcnlMaXN0e3RleHQtYWxpZ246Y2VudGVyfS5mcmVzaEluZ3Jlc3MgLmxpbmt7ZGlzcGxheTpibG9jaztwYWRkaW5nOjEwcHggMH0uZnJlc2hJbmdyZXNzIC5mcmVzaEJhZGdle21hcmdpbi1sZWZ0OjNweH0uZnJlc2hJbmdyZXNzIC5hcnJvd3tmbG9hdDpyaWdodDttYXJnaW4tdG9wOjEwcHh9LmZyZXNoSW5ncmVzcyAuYm90dG9tRGl2aWRlcnttYXJnaW4tdG9wOjRweH0uYWxtT2ZmZXJ7bWFyZ2luLXRvcDotMnB4O2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowfS5hbG1NdWx0aU9mZmVyRWdyZXNzUHJpbWVMb2dve21hcmdpbi10b3A6M3B4fS5hbG1NdWx0aU9mZmVyRWdyZXNzQW1hem9uTG9nb1NjYWxlRG93bnstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSguNTUsLjU1KTstbXMtdHJhbnNmb3JtOnNjYWxlKC41NSwuNTUpO3RyYW5zZm9ybTpzY2FsZSguNTUsLjU1KTttYXJnaW4tbGVmdDotMjFweH0uYWxtTXVsdGlPZmZlckVncmVzc0FtYXpvbkxvZ29TY2FsZURvd25Nb2JpbGV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoLjczLC43Myk7LW1zLXRyYW5zZm9ybTpzY2FsZSguNzMsLjczKTt0cmFuc2Zvcm06c2NhbGUoLjczLC43Myk7bWFyZ2luLWxlZnQ6LTEwcHh9LmFsbU11bHRpT2ZmZXJFZ3Jlc3NMb2dvUGFkZGluZ3twYWRkaW5nLXJpZ2h0OjE1cHghaW1wb3J0YW50fS5hbG1NdWx0aU9mZmVyRWdyZXNzQnVyakNvbnRhaW5lcntib3JkZXItbGVmdDowO2JvcmRlci1yaWdodDowO2JvcmRlci1yYWRpdXM6MCFpbXBvcnRhbnQ7YmFja2dyb3VuZDowIDB9LmZyZXNoRWdyZXNze21hcmdpbi10b3A6LTE4cHg7Ym9yZGVyLXRvcDpub25lfS5mcmVzaEVncmVzcy5tb2JpbGV7bWFyZ2luLXRvcDowfS5mcmVzaEVncmVzc0RpdmlkZXJ7dG9wOi0xMXB4IWltcG9ydGFudH0uZnJlc2hFZ3Jlc3NCb3R0b21EaXZpZGVye21hcmdpbi10b3A6OHB4fS5mcmVzaEVncmVzc0Fycm93e21hcmdpbi10b3A6MnB4O2Zsb2F0OnJpZ2h0fS5mcmVzaFdoYXRJc0Fycm93e21hcmdpbi10b3A6MTAwJTtmbG9hdDpyaWdodH0uZnJlc2hFZ3Jlc3NMaW5re3RleHQtZGVjb3JhdGlvbjpub25lO2Rpc3BsYXk6YmxvY2s7bWFyZ2luLXRvcDotMjBweDtwYWRkaW5nLWJvdHRvbTo1cHh9LmZyZXNoRWdyZXNzTGluay5tb2JpbGV7bWFyZ2luLXRvcDowfS5mcmVzaFNoZWxmTGlmZSAudGV4dHtjb2xvcjojNjkwfS5mcmVzaFNoZWxmTGlmZSAudGFibGV7Ym9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlO3dpZHRoOmF1dG87Ym9yZGVyOjFweCBzb2xpZCAjNjkwfS5mcmVzaFNoZWxmTGlmZSAudGR7cGFkZGluZzoxcHggMTBweCFpbXBvcnRhbnR9LmZyZXNoU2hlbGZMaWZlIC5hLXBvcG92ZXItdHJpZ2dlciAuYS1pY29uLXBvcG92ZXJ7ZGlzcGxheTppbmxpbmUtYmxvY2t9LmZyZXNoLWRwLWFsY29ob2wtd2FybmluZ3tmb250LXNpemU6MjFweDtsaW5lLWhlaWdodDoxLjI1NX0uZnJlc2gtYWdlLXdhcm5pbmctZGV7cGFkZGluZy1sZWZ0OjEwcHg7cGFkZGluZy1yaWdodDoxMHB4O21hcmdpbi10b3A6MjBweDttYXJnaW4tYm90dG9tOjIwcHh9LmEtYm94LmZyZXNoTXVsdGlTZWxsZXJPZmZlci5oaWRkZW57ZGlzcGxheTpub25lfS5mcmVzaC1vb3ItZ2xvdy1pbmdyZXNze2Rpc3BsYXk6aW5saW5lLWJsb2NrfSN1bml2ZXJzYWxGcmVzaEFUQy5hLWJveHtib3JkZXItcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS13aWR0aDo1cHh9I3VuaXZlcnNhbEZyZXNoQVRDLmEtYm94IGZvcm17bWFyZ2luLWJvdHRvbTowfSN1bml2ZXJzYWxGcmVzaEFUQy5hLXNlY3Rpb257bWFyZ2luOjA7YmFja2dyb3VuZC1jb2xvcjojZjNmM2YzO3BhZGRpbmctdG9wOjE1cHg7cGFkZGluZy1yaWdodDoxOHB4O3BhZGRpbmctYm90dG9tOjEzcHg7cGFkZGluZy1sZWZ0OjE4cHg7Ym9yZGVyLWNvbG9yOiNkZGQ7Ym9yZGVyLXN0eWxlOnNvbGlkO2JvcmRlci13aWR0aDoxcHggMCA1cHggMH0jdW5pdmVyc2FsRnJlc2hBVEMuYS1zZWN0aW9uIGZvcm17bWFyZ2luLWJvdHRvbTowfS51bml2ZXJzYWwtZnJlc2hBVEZDLW1vYmlsZXttYXJnaW4tdG9wOjE3cHh9I3VhdGZjLW9yLWNpcmNsZS1jb250YWluZXJ7aGVpZ2h0OjMwcHg7dGV4dC1hbGlnbjpjZW50ZXI7bWFyZ2luLXRvcDotMjdweDttYXJnaW4tbGVmdDphdXRvO21hcmdpbi1yaWdodDphdXRvfSN1YXRmYy1vci1jaXJjbGV7YmFja2dyb3VuZDojNzc3O21pbi13aWR0aDozMHB4O2Rpc3BsYXk6aW5saW5lLWJsb2NrO2hlaWdodDoxMDAlO2JvcmRlci1yYWRpdXM6MzBweDt0ZXh0LWFsaWduOmNlbnRlcjt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7bGluZS1oZWlnaHQ6MzBweDtmb250LXNpemU6MTBweDttYXJnaW4tYm90dG9tOjA7cGFkZGluZzowIDVweH0udWF0ZmMtb3ItdGV4dHtjb2xvcjojZmZmfS5mcmVzaC1wcmltZS1vZmZlci1kZXNrdG9we2JvcmRlci13aWR0aDowIDFweCA1cHggMXB4O21hcmdpbi10b3A6LTE0cHh9LmZyZXNoLXByaW1lLW9mZmVyLWRlc2t0b3AgI2ZyZXNoLXByaW1lLW9mZmVyLW9yLWltYWdle21hcmdpbi10b3A6LTI3cHh9LmZyZXNoLXByaW1lLW9mZmVyLWRlc2t0b3AgLmEtaWNvbi1hcnJvd3tmbG9hdDpyaWdodDttYXJnaW4tdG9wOjVweH0uZnJlc2gtcHJpbWUtb2ZmZXItY29tbW9uIGZvcm17bWFyZ2luLWJvdHRvbTowfS5mcmVzaC1wcmltZS1vZmZlci1tb2JpbGV7bWFyZ2luLXJpZ2h0Oi0zOXB4IWltcG9ydGFudDttYXJnaW4tbGVmdDotMThweCFpbXBvcnRhbnQ7Ym9yZGVyLXdpZHRoOjFweCAwIDVweCAwfS5mcmVzaC1wcmltZS1vZmZlci1tb2JpbGUgLmEtaWNvbi1hcnJvd3tmbG9hdDpyaWdodH0uZnJlc2gtcHJpbWUtb2ZmZXItbW9iaWxlIC5mcmVzaC1wcmltZS1vZmZlci1wcmljZS1tb2JpbGV7Zm9udC1zaXplOjEuNXJlbSFpbXBvcnRhbnQ7bGluZS1oZWlnaHQ6MS4yNSFpbXBvcnRhbnR9LmZyZXNoLXByaW1lLW9mZmVyLWRpdmlkZXJ7bWFyZ2luLWJvdHRvbToycmVtfVxuI3NreWNpdHktc29mdC1tZXJnZSAuc2t5Y2l0eS1hbHctaXRlbS1jb250YWluZXJ7bWluLWhlaWdodDoxMDBweH1cbi51c3MtdS1uby1zY3JvbGx7b3ZlcmZsb3c6aGlkZGVuIWltcG9ydGFudH0udXNzLXRleHQtd2hpdGUtY29sb3J7Y29sb3I6I2ZmZn0udXNzLXJlY29tbWVuZGF0aW9ucy1tZXNzYWdle3RleHQtYWxpZ246Y2VudGVyO292ZXJmbG93OmhpZGRlbn0udXNzLXJlY29tbWVuZGF0aW9ucy1tZXNzYWdlPnNwYW57cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTppbmxpbmUtYmxvY2s7d29yZC13cmFwOmJyZWFrLXdvcmR9LnVzcy1yZWNvbW1lbmRhdGlvbnMtbWVzc2FnZT5zcGFuOmFmdGVyLC51c3MtcmVjb21tZW5kYXRpb25zLW1lc3NhZ2U+c3BhbjpiZWZvcmV7Y29udGVudDpcIlwiO3Bvc2l0aW9uOmFic29sdXRlO3RvcDo1MCU7d2lkdGg6MTAwJTtoZWlnaHQ6MXB4fS51c3MtcmVjb21tZW5kYXRpb25zLW1lc3NhZ2U+c3BhbjpiZWZvcmV7cmlnaHQ6MTAwJX0udXNzLXJlY29tbWVuZGF0aW9ucy1tZXNzYWdlPnNwYW46YWZ0ZXJ7bGVmdDoxMDAlfS51c3Mtby1wcm9taXNpbmctdWktZWxlbWVudCAudWktcHJvbWlzZSwudXNzLW8tcHJvbWlzaW5nLXVpLWVsZW1lbnQgLnVpLXZhbHVle2Rpc3BsYXk6bm9uZX0udXNzLW8tcHJvbWlzaW5nLXVpLWVsZW1lbnQuaXMtbG9hZGluZyAudWktcHJvbWlzZXtkaXNwbGF5OmJsb2NrfS51c3Mtby1wcm9taXNpbmctdWktZWxlbWVudC5pcy1yZXNvbHZlZCAudWktdmFsdWV7ZGlzcGxheTpibG9ja30udXNzLW8tcHJvbWlzaW5nLXVpLWVsZW1lbnQtYW5pbWF0aW9uIC51aS1wcm9taXNlLC51c3Mtby1wcm9taXNpbmctdWktZWxlbWVudC1hbmltYXRpb24gLnVpLXZhbHVle2Rpc3BsYXk6bm9uZX0udXNzLW8tcHJvbWlzaW5nLXVpLWVsZW1lbnQtYW5pbWF0aW9uLmlzLWxvYWRpbmcgLnVpLXByb21pc2V7ZGlzcGxheTpibG9ja30udXNzLW8tcHJvbWlzaW5nLXVpLWVsZW1lbnQtYW5pbWF0aW9uLmlzLXJlc29sdmVkIC51aS12YWx1ZXtkaXNwbGF5Om5vbmV9LnVzcy1sLWRlZmF1bHQtbGF5b3V0e2Rpc3BsYXk6YmxvY2s7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tb3otYm94O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDp2ZXJ0aWNhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246Y29sdW1uOy1tb3otYm94LW9yaWVudDp2ZXJ0aWNhbDstbW96LWJveC1kaXJlY3Rpb246bm9ybWFsOy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uO2hlaWdodDoxMDAlO292ZXJmbG93OmF1dG99LnVzcy1sLWRlZmF1bHQtbGF5b3V0IC5sb2FkaW5nLWJhcntiYWNrZ3JvdW5kLWNvbG9yOiNFQUVERUR9LnVzcy1sLWRlZmF1bHQtbGF5b3V0IC51c3MtYy1oZWFkey13ZWJraXQtYm94LWZsZXg6MDstd2Via2l0LWZsZXg6MCAwIGF1dG87LW1vei1ib3gtZmxleDowOy1tcy1mbGV4OjAgMCBhdXRvO2ZsZXg6MCAwIGF1dG87d2lkdGg6MTAwJTtvdmVyZmxvdzphdXRvO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7cGFkZGluZzowIDIwcHh9LnVzcy1sLWRlZmF1bHQtbGF5b3V0IC51c3MtYy1ib2R5e3dpZHRoOmF1dG87aGVpZ2h0OmF1dG87bWluLWhlaWdodDowO292ZXJmbG93OmF1dG87LXdlYmtpdC1ib3gtZmxleDoxOy13ZWJraXQtZmxleDoxIDEgYXV0bzstbW96LWJveC1mbGV4OjE7LW1zLWZsZXg6MSAxIGF1dG87ZmxleDoxIDEgYXV0b30udXNzLWwtZGVmYXVsdC1sYXlvdXQgLnVzcy1jLWJvZHkgLnVzcy1yZWNvbW1lbmRhdGlvbnMtbWVzc2FnZXttYXJnaW4tbGVmdDoyMHB4O21hcmdpbi1yaWdodDozMHB4fS51c3MtbC1kZWZhdWx0LWxheW91dCAudXNzLWMtYm9keSAudXNzLXJlY29tbWVuZGF0aW9ucy1tZXNzYWdlPnNwYW46YmVmb3Jle2JhY2tncm91bmQ6I2ZmZjttYXJnaW4tcmlnaHQ6MTVweH0udXNzLWwtZGVmYXVsdC1sYXlvdXQgLnVzcy1jLWJvZHkgLnVzcy1yZWNvbW1lbmRhdGlvbnMtbWVzc2FnZT5zcGFuOmFmdGVye2JhY2tncm91bmQ6I2ZmZjttYXJnaW4tbGVmdDoxNXB4fS51c3MtbC1kZWZhdWx0LWxheW91dCAudXNzLXdpZGdldHt3aWR0aDphdXRvO21hcmdpbi1yaWdodDozMHB4O21hcmdpbi1sZWZ0OjIwcHg7YmFja2dyb3VuZC1jb2xvcjojZmZmfS51c3MtbC1kZWZhdWx0LWxheW91dCAudXNzLXJlY29tbWVuZGF0aW9uLXdpZGdldHtwYWRkaW5nOjIwcHh9LnVzcy1sLWRlZmF1bHQtbGF5b3V0IC51c3MtcHJpbWFyeS1hY3Rpb24tc3RhdHVzLXdpZGdldHttYXJnaW4tbGVmdDowO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7d2lkdGg6MTAwJX0udXNzLWwtZGVmYXVsdC1sYXlvdXQgLnVzcy1sb2FkaW5nLXNrZWxldG9ue3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCV9LnVzcy1sLWRlZmF1bHQtbGF5b3V0IC51c3MtbG9hZGluZy1za2VsZXRvbiAubG9hZGluZy1tZXNzYWdle3RleHQtYWxpZ246Y2VudGVyfS51c3MtbC1kZWZhdWx0LWxheW91dCAudXNzLWxvYWRpbmctc2tlbGV0b24gLmFzaW4tZmFjZW91dC1za2VsZXRvbntiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7bWFyZ2luLWxlZnQ6MjBweDttYXJnaW4tcmlnaHQ6MzBweDtwYWRkaW5nOjIwcHh9LnVzcy1sLWRlZmF1bHQtbGF5b3V0IC51c3MtbG9hZGluZy1za2VsZXRvbiAuYXNpbi1mYWNlb3V0LXNrZWxldG9uIC5pbWFnZS1za2VsZXRvbnt3aWR0aDoxNDBweDtoZWlnaHQ6MTQwcHg7YmFja2dyb3VuZC1jb2xvcjojRUFFREVEfS51c3MtbC1kZWZhdWx0LWxheW91dCAudXNzLWxvYWRpbmctc2tlbGV0b24gLmFzaW4tZmFjZW91dC1za2VsZXRvbiAubG9hZGluZy1iYXJ7aGVpZ2h0OjIwcHh9LnVzcy1sLWRlZmF1bHQtbGF5b3V0IC51c3MtbG9hZGluZy1za2VsZXRvbiAuYXNpbi1mYWNlb3V0LXNrZWxldG9uIC5idXR0b24tc2tlbGV0b257d2lkdGg6MTAwcHg7aGVpZ2h0OjQwcHg7YmFja2dyb3VuZC1jb2xvcjojRUFFREVEfS51c3Mtby1jbG9zZS1pY29ue2N1cnNvcjpwb2ludGVyfS51c3Mtby1jbG9zZS1pY29uOmFmdGVyLC51c3Mtby1jbG9zZS1pY29uOmJlZm9yZXtwb3NpdGlvbjphYnNvbHV0ZTtjb250ZW50OicgJztiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7bGVmdDo1MCV9LnVzcy1vLWNsb3NlLWljb246YmVmb3Jley13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSg0NWRlZyk7LW1vei10cmFuc2Zvcm06cm90YXRlKDQ1ZGVnKTstbXMtdHJhbnNmb3JtOnJvdGF0ZSg0NWRlZyk7LW8tdHJhbnNmb3JtOnJvdGF0ZSg0NWRlZyk7dHJhbnNmb3JtOnJvdGF0ZSg0NWRlZyl9LnVzcy1vLWNsb3NlLWljb246YWZ0ZXJ7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKC00NWRlZyk7LW1vei10cmFuc2Zvcm06cm90YXRlKC00NWRlZyk7LW1zLXRyYW5zZm9ybTpyb3RhdGUoLTQ1ZGVnKTstby10cmFuc2Zvcm06cm90YXRlKC00NWRlZyk7dHJhbnNmb3JtOnJvdGF0ZSgtNDVkZWcpfS51c3Mtby1jbG9zZS1pY29uLW1lZGl1bXt3aWR0aDoyMHB4O2hlaWdodDoyMHB4fS51c3Mtby1jbG9zZS1pY29uLW1lZGl1bTphZnRlciwudXNzLW8tY2xvc2UtaWNvbi1tZWRpdW06YmVmb3Jle2hlaWdodDoyNnB4O3dpZHRoOjIuNnB4fS51c3Mtby1saWdodC1ib3h7cG9zaXRpb246Zml4ZWQ7dG9wOjA7bGVmdDowO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7YmFja2dyb3VuZC1jb2xvcjojMDAwO3otaW5kZXg6NDAwO29wYWNpdHk6MH0udXNzLW8tcmlnaHQtc2lkZS1zaGVldHtwb3NpdGlvbjpmaXhlZDt6LWluZGV4OjUwMH0udXNzLWwtcmlnaHQtc2lkZS1zaGVldHttYXgtd2lkdGg6NTAlO21pbi13aWR0aDo2ODBweDtoZWlnaHQ6MTAwJTt0b3A6MH0udXNzLWwtcmlnaHQtc2lkZS1zaGVldC5pcy1vcGVue3JpZ2h0OjB9LnVzcy1sLXJpZ2h0LXNpZGUtc2hlZXQuaXMtY2xvc2V7cmlnaHQ6LTEwMCV9LnVzcy1sLXJpZ2h0LXNpZGUtc2hlZXQgLnVzcy1vLWNsb3NlLWljb257cG9zaXRpb246Zml4ZWQ7dG9wOjIwcHh9LnVzcy1jLWF0Yy1zdGF0dXMtbXNnIC5lcnJvci1tZXNzYWdlLC51c3MtYy1hdGMtc3RhdHVzLW1zZyAuaXRlbS1pbi1jYXJ0LW1lc3NhZ2UsLnVzcy1jLWF0Yy1zdGF0dXMtbXNnIC5sb2FkaW5nLW1lc3NhZ2UsLnVzcy1jLWF0Yy1zdGF0dXMtbXNnIC5zdWNjZXNzLW1lc3NhZ2V7ZGlzcGxheTppbmxpbmUtYmxvY2t9LnVzcy1jLWF0Yy1zdGF0dXMtbXNnIC5hdGMtZXJyb3ItbWVzc2FnZSwudXNzLWMtYXRjLXN0YXR1cy1tc2cgLmF0Yy1pdGVtLWluLWNhcnQtbWVzc2FnZSwudXNzLWMtYXRjLXN0YXR1cy1tc2cgLmF0Yy1zdWNjZXNzLW1lc3NhZ2V7ZGlzcGxheTpub25lfS51c3MtYy1hdGMtc3RhdHVzLW1zZyAudWktcHJvbWlzZXtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tYm90dG9tOjB9LnVzcy1jLWF0Yy1zdGF0dXMtbXNnLmlzLXJlc29sdmVkLmF0Yy1zdWNjZXNzIC5hdGMtc3VjY2Vzcy1tZXNzYWdle2Rpc3BsYXk6aW5saW5lLWJsb2NrfS51c3MtYy1hdGMtc3RhdHVzLW1zZy5pcy1yZXNvbHZlZC5hdGMtZXJyb3IgLmF0Yy1lcnJvci1tZXNzYWdle2Rpc3BsYXk6aW5saW5lLWJsb2NrfS51c3MtYy1hdGMtc3RhdHVzLW1zZy5pcy1yZXNvbHZlZC5pdGVtLWluLWNhcnQgLmF0Yy1pdGVtLWluLWNhcnQtbWVzc2FnZXtkaXNwbGF5OmlubGluZS1ibG9ja30udXNzLWMtc3ViLW5hdntwb3NpdGlvbjpyZWxhdGl2ZTt2aXNpYmlsaXR5OnZpc2libGU7ZGlzcGxheTpibG9jazttYXgtaGVpZ2h0OjA7b3BhY2l0eTowfS51c3MtYy1zdWItbmF2LmlzLWhpZGRlbnt2aXNpYmlsaXR5OmhpZGRlbjtoZWlnaHQ6MH0udXNzLWMtc3ViLW5hdi5pcy1oaWRkZW46YWZ0ZXJ7bGVmdDowO3RvcDowO3dpZHRoOjA7aGVpZ2h0OjA7cG9zaXRpb246YWJzb2x1dGU7Y29udGVudDpcIlwiO2JhY2tncm91bmQtY29sb3I6I0VBRURFRDt2aXNpYmlsaXR5OnZpc2libGU7bWFyZ2luLWxlZnQ6MH0udXNzLWMtc3ViLW5hdiAuY2FydC1idG57bWFyZ2luLXJpZ2h0OjEwcHh9LnVzcy1jLXN1Yi1uYXYgLmNhcnQtYnRuLC51c3MtYy1zdWItbmF2IC5jaGVja291dC1mb3Jte2Rpc3BsYXk6aW5saW5lLWJsb2NrfS51c3MtYy1zdWItbmF2LXRyYW5zaXRpb257bWF4LWhlaWdodDoxMDAwcHg7b3BhY2l0eToxO3RyYW5zaXRpb246bWF4LWhlaWdodCA1MG1zIGVhc2Utb3V0LG9wYWNpdHkgLjRzIGVhc2Utb3V0IDUwbXN9LnVzcy1jLXN1Yi1uYXYtbWFyZ2lue21hcmdpbi10b3A6MTBweCFpbXBvcnRhbnR9LnVzcy1jLXNoaXBwaW5nLWRldGFpbHN7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tb3otYm94O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpjZW50ZXI7bWF4LWhlaWdodDowO29wYWNpdHk6MH0udXNzLWMtc2hpcHBpbmctZGV0YWlscyAuaWNvbi1wbGFjZWhvbGRlcnttYXJnaW4tcmlnaHQ6NHB4Oy13ZWJraXQtYm94LWZsZXg6MDstd2Via2l0LWZsZXg6MCAxIGF1dG87LW1vei1ib3gtZmxleDowOy1tcy1mbGV4OjAgMSBhdXRvO2ZsZXg6MCAxIGF1dG99LnVzcy1jLXNoaXBwaW5nLWRldGFpbHMgLnNoaXBwaW5nLW1lc3NhZ2UtcGxhY2Vob2xkZXJ7LXdlYmtpdC1ib3gtZmxleDowOy13ZWJraXQtZmxleDowIDEgYXV0bzstbW96LWJveC1mbGV4OjA7LW1zLWZsZXg6MCAxIGF1dG87ZmxleDowIDEgYXV0b30udXNzLWMtc2hpcHBpbmctZGV0YWlscyAuc2hpcHBpbmctbWVzc2FnZS1wbGFjZWhvbGRlciAuYS1jb2xvci1iYXNle2NvbG9yOiNmZmYhaW1wb3J0YW50fS51c3MtYy1zaGlwcGluZy1kZXRhaWxzIC5zaGlwcGluZy1tZXNzYWdlLXBsYWNlaG9sZGVyIC5hLWNvbG9yLXByaWNle2NvbG9yOiNmZmYhaW1wb3J0YW50O2ZvbnQtd2VpZ2h0OjcwMH0udXNzLWMtc2hpcHBpbmctZGV0YWlscyAuc2hpcHBpbmctbWVzc2FnZS1wbGFjZWhvbGRlciBhLC51c3MtYy1zaGlwcGluZy1kZXRhaWxzIC5zaGlwcGluZy1tZXNzYWdlLXBsYWNlaG9sZGVyIGE6YWN0aXZlLC51c3MtYy1zaGlwcGluZy1kZXRhaWxzIC5zaGlwcGluZy1tZXNzYWdlLXBsYWNlaG9sZGVyIGE6bGluaywudXNzLWMtc2hpcHBpbmctZGV0YWlscyAuc2hpcHBpbmctbWVzc2FnZS1wbGFjZWhvbGRlciBhOnZpc2l0ZWR7Y29sb3I6I2ZmZiFpbXBvcnRhbnQ7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZX0udXNzLWMtc2hpcHBpbmctZGV0YWlscyAuc2hpcHBpbmctbWVzc2FnZS1wbGFjZWhvbGRlciBhOmhvdmVye2NvbG9yOiNjNDU1MDAhaW1wb3J0YW50fS51c3MtYy1zaGlwcGluZy1kZXRhaWxzLnVzcy1jLXNoaXBwaW5nLWRldGFpbHMtdHJhbnNpdGlvbnttYXgtaGVpZ2h0OjEwMDBweDtvcGFjaXR5OjE7dHJhbnNpdGlvbjptYXgtaGVpZ2h0IDUwbXMgZWFzZS1vdXQsb3BhY2l0eSAuMnMgZWFzZS1vdXQgNTBtc30udXNzLWMtYXRjLXN0YXR1cy13aWRnZXQgLmF0Yy1hY2tub3dsZWRnZW1lbnQtbWVzc2FnZXtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1vei1ib3g7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmJsb2NrfS51c3MtYy1hdGMtc3RhdHVzLXdpZGdldCAuYXRjLWFja25vd2xlZGdlbWVudC1tZXNzYWdlIC5tYWluLWltYWdle2JvcmRlcjoxcHggc29saWQgI0VBRURFRDtib3JkZXItcmFkaXVzOjVweDtkaXNwbGF5OmlubGluZS1ibG9jaztiYWNrZ3JvdW5kLWNvbG9yOiNFQUVERUR9LnVzcy1jLWF0Yy1zdGF0dXMtd2lkZ2V0IC5hdGMtYWNrbm93bGVkZ2VtZW50LW1lc3NhZ2UgLnN1Y2Nlc3MtdGljay1tYXJrLXBsYWNlaG9sZGVye2Rpc3BsYXk6bm9uZX0udXNzLWMtYXRjLXN0YXR1cy13aWRnZXQgLmF0Yy1hY2tub3dsZWRnZW1lbnQtbWVzc2FnZSAuc3VjY2Vzcy10aWNrLW1hcmstaW1hZ2V7YmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9EZXRhaWxQYWdlVVNTQXNzZXRzLXRpY2stYW5pbWF0aW9uLTQ1MmY3Y2NhNTRmZjM1MDBmMGIzNGI0MjliYjY5MTRiNmRiOThkNDcuX1YyXy5naWYpO2Rpc3BsYXk6YmxvY2s7d2lkdGg6MzBweDtoZWlnaHQ6MzBweDtsZWZ0Oi0xNXB4O3RvcDozMHB4O3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6MX0udXNzLWMtYXRjLXN0YXR1cy13aWRnZXQgLmF0Yy1hY2tub3dsZWRnZW1lbnQtbWVzc2FnZSAuZXJyb3ItdGljay1tYXJrLXBsYWNlaG9sZGVye2Rpc3BsYXk6bm9uZX0udXNzLWMtYXRjLXN0YXR1cy13aWRnZXQgLmF0Yy1hY2tub3dsZWRnZW1lbnQtbWVzc2FnZSAuZXJyb3ItdGljay1tYXJrLWltYWdle2Rpc3BsYXk6bm9uZTt3aWR0aDozMHB4O2hlaWdodDoyN3B4O2xlZnQ6LTE1cHg7dG9wOjMzcHg7cG9zaXRpb246YWJzb2x1dGU7ei1pbmRleDoxfS51c3MtbC1hdGMtc3RhdHVzLXdpZGdldCAuYXRjLWFja25vd2xlZGdlbWVudC1tZXNzYWdlIC5tYWluLWltYWdlIC51aS1wcm9taXNle2hlaWdodDoxMDAlfS51c3MtbC1hdGMtc3RhdHVzLXdpZGdldCAudXNzLWMtY2FydC1zdGF0dXMtbXNne21heC1oZWlnaHQ6MDtvcGFjaXR5OjB9LnVzcy1sLWF0Yy1zdGF0dXMtd2lkZ2V0IC51c3MtYy1jYXJ0LXN0YXR1cy1tc2ctdHJhbnNpdGlvbnttYXgtaGVpZ2h0OjEwMDBweDtvcGFjaXR5OjE7dHJhbnNpdGlvbjptYXgtaGVpZ2h0IDUwbXMgZWFzZS1vdXQsb3BhY2l0eSAuMnMgZWFzZS1vdXQgNTBtc30udXNzLWwtYXRjLXN0YXR1cy13aWRnZXQgLmljb24tcGxhY2Vob2xkZXJ7aGVpZ2h0OjB9LnVzcy1sLWF0Yy1zdGF0dXMtd2lkZ2V0IC5hdGMtZ2VuZXJpYy1lcnJvciAuZXJyb3ItbWVzc2FnZXtkaXNwbGF5OmlubGluZS1ibG9ja30uYXRjLXN0YXR1cy1pbWItd2lkZ2V0e21hcmdpbi10b3A6MCFpbXBvcnRhbnR9LnVzcy1jLXVzcy1zaGVldC12aWV3e2JhY2tncm91bmQtY29sb3I6I0VBRURFRH0udXNzLWMtdXNzLXNoZWV0LXZpZXctZ3JlZGllbnR7YmFja2dyb3VuZC1pbWFnZTpsaW5lYXItZ3JhZGllbnQoIzAwODI5NiwjRUFFREVEKX0udXNzLWwtdXNzLXNoZWV0LXZpZXd7d2lkdGg6NTAlO21heC13aWR0aDo2ODBweH0udXNzLWwtZGVmYXVsdC1sYXlvdXQgLnVzcy13aWRnZXQudXNzLW5vLXJlY29tbWVuZGF0aW9uLXdpZGdldHtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fS51c3MtbC1kZWZhdWx0LWxheW91dCAudXNzLXdpZGdldC51c3Mtbm8tcmVjb21tZW5kYXRpb24td2lkZ2V0IC5jb250aW51ZS1zaG9wcGluZ3tmb250LXdlaWdodDo3MDA7Zm9udC1zaXplOjE1cHg7Y29sb3I6I2ZmZjt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lfS51c3MtbGlzdC13aWRnZXQgLnVzcy13aWRnZXQtYm9keXttYXJnaW4tYm90dG9tOjIwcHh9LnVzcy1saXN0LXdpZGdldCBoMy51c3Mtd2lkZ2V0LWhlYWRlcntwYWRkaW5nLWJvdHRvbTowfS51c3MtbGlzdC13aWRnZXQgLnVzcy13aWRnZXQtZm9vdGVye3BhZGRpbmc6MDtoZWlnaHQ6YXV0bztjdXJzb3I6cG9pbnRlcn0udXNzLXdpZGdldC1mb290ZXIgLnVzcy1leHBhbmRlci1pY29uLWNvbnRhaW5lcntkaXNwbGF5OmlubGluZS1ibG9jaztwb3NpdGlvbjpyZWxhdGl2ZX0udXNzLXdpZGdldC1mb290ZXIgLnVzcy1zZWUtbW9yZXtmb250LXdlaWdodDo0MDA7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLWxlZnQ6MjFweDtjb2xvcjojMDA2NmMwfS51c3MtYXNpbi1mYWNlb3V0IC51c3MtYXRjLWVycm9yLC51c3MtYXNpbi1mYWNlb3V0IC51c3MtYXRjLXNwaW5uZXIsLnVzcy1hc2luLWZhY2VvdXQgLnVzcy1hdGMtc3VjY2VzcywudXNzLWxpc3Qtd2lkZ2V0IC51c3MtZnVsbC1saXN0LWNvbnRhaW5lciwudXNzLXdpZGdldC1mb290ZXIgLnVzcy1zZWUtbGVzcy10ZXh0LC51c3Mtd2lkZ2V0LWhlYWRlciAudXNzLXNwLWhlbHAtbGluayAuYS1pY29uLXBvcG92ZXJ7ZGlzcGxheTpub25lfS51c3Mtd2lkZ2V0LWJvZHkgLnVzcy1wcmltZS1iYWRnZXtwYWRkaW5nLWxlZnQ6MXB4fS51c3MtYXRjLXN1Y2Nlc3MgLnVzcy1hdGMtc3VjY2Vzcy1pY29ue3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0udXNzLWF0Yy1zdWNjZXNzIC51c3MtYXRjLXN1Y2Nlc3MtdGV4dHtwYWRkaW5nLWxlZnQ6MXB4fS51c3Mtd2lkZ2V0LWJvZHkgLnVzcy1hc2luLWZhY2VvdXQgLnVzcy1iZXN0LXNlbGxlci1iYWRnZXtiYWNrZ3JvdW5kLWNvbG9yOiNFNDc5MTF9LnVzcy13aWRnZXQtYm9keSAudXNzLWFzaW4tZmFjZW91dCAudXNzLWJlc3Qtc2VsbGVyLWJhZGdlOmJlZm9yZXtib3JkZXItYm90dG9tLWNvbG9yOiNFNDc5MTF9LnVzcy13aWRnZXQtYm9keSAudXNzLWFzaW4tZmFjZW91dCAudXNzLWJlc3Qtc2VsbGVyLWJhZGdlOmFmdGVye2JvcmRlci10b3AtY29sb3I6I0U0NzkxMX0udXNzLWF0Yy1lcnJvciAudXNzLWRldGFpbC1wYWdlLWxpbmt7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZX0udXNzLXdpZGdldC1oZWFkZXIgLnVzcy1zcC1oZWxwLWxpbmsgYTpob3Zlcnt0ZXh0LWRlY29yYXRpb246bm9uZX1cbi50dXJiby1jaGVja291dC1hdXRvLWxvYWQtc3Bpbm5lcntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtvdmVyZmxvdzpoaWRkZW59LnR1cmJvLWNoZWNrb3V0LWF1dG8tbG9hZC1jaXJjbGUtY29udGFpbmVye3Bvc2l0aW9uOmFic29sdXRlO3RvcDo1MCU7bGVmdDo1MCU7d2lkdGg6NTBweDtoZWlnaHQ6NTBweDtvdmVyZmxvdzpoaWRkZW47Ym9yZGVyLXJhZGl1czo1MCU7YmFja2dyb3VuZDojZmZmO3RyYW5zZm9ybTp0cmFuc2xhdGUoLTUwJSwtNTAlKX0udHVyYm8tY2hlY2tvdXQtYXV0by1sb2FkLXNwaW5uZXItY29udGFpbmVye3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsMjU1LDI1NSwuNzUpO292ZXJmbG93OmhpZGRlbjt6LWluZGV4OjEwMDh9I3R1cmJvLWxvYWRpbmctY29udGFpbmVye21pbi1oZWlnaHQ6aW5oZXJpdDttaW4td2lkdGg6aW5oZXJpdDtwb3NpdGlvbjpyZWxhdGl2ZTtvcGFjaXR5OjA7LW1vei13ZWJraXQtdHJhbnNpdGlvbjpvcGFjaXR5IC41cyBsaW5lYXIgLjI1czstbXMtd2Via2l0LXRyYW5zaXRpb246b3BhY2l0eSAuNXMgbGluZWFyIC4yNXM7LW8td2Via2l0LXRyYW5zaXRpb246b3BhY2l0eSAuNXMgbGluZWFyIC4yNXM7LWtodG1sLXdlYmtpdC10cmFuc2l0aW9uOm9wYWNpdHkgLjVzIGxpbmVhciAuMjVzOy13ZWJraXQtdHJhbnNpdGlvbjpvcGFjaXR5IC41cyBsaW5lYXIgLjI1czt0cmFuc2l0aW9uOm9wYWNpdHkgLjVzIGxpbmVhciAuMjVzfSN0dXJiby1sb2FkaW5nLWNvbnRlbnR7cG9zaXRpb246YWJzb2x1dGU7bGVmdDowO3JpZ2h0OjA7dG9wOjM1JX0jdHVyYm8tbG9hZGluZy1zcGlubmVye2Rpc3BsYXk6YmxvY2s7bWFyZ2luOjAgYXV0b30jdHVyYm8tbG9hZGluZy10ZXh0e2Rpc3BsYXk6YmxvY2s7dGV4dC1hbGlnbjpjZW50ZXJ9LnR1cmJvLWNoZWNrb3V0LWJsYW5re29wYWNpdHk6MH0udHVyYm8tY2hlY2tvdXQtc2hvd257b3BhY2l0eToxIWltcG9ydGFudH0jdHVyYm8tY2hlY2tvdXQtZnJhbWV7bWluLWhlaWdodDozMzVweDtoZWlnaHQ6MzM1cHg7bWluLXdpZHRoOjU1MHB4O292ZXJmbG93LXk6aGlkZGVuOy1tb3otd2Via2l0LXRyYW5zaXRpb246aGVpZ2h0IC41czstbXMtd2Via2l0LXRyYW5zaXRpb246aGVpZ2h0IC41czstby13ZWJraXQtdHJhbnNpdGlvbjpoZWlnaHQgLjVzOy1raHRtbC13ZWJraXQtdHJhbnNpdGlvbjpoZWlnaHQgLjVzOy13ZWJraXQtdHJhbnNpdGlvbjpoZWlnaHQgLjVzO3RyYW5zaXRpb246aGVpZ2h0IC41c30jdHVyYm8tY2hlY2tvdXQtaWZyYW1le3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7Ym9yZGVyOm5vbmU7ZGlzcGxheTpibG9jaztvcGFjaXR5OjA7LW1vei13ZWJraXQtdHJhbnNpdGlvbjpvcGFjaXR5IC41czstbXMtd2Via2l0LXRyYW5zaXRpb246b3BhY2l0eSAuNXM7LW8td2Via2l0LXRyYW5zaXRpb246b3BhY2l0eSAuNXM7LWtodG1sLXdlYmtpdC10cmFuc2l0aW9uOm9wYWNpdHkgLjVzOy13ZWJraXQtdHJhbnNpdGlvbjpvcGFjaXR5IC41czt0cmFuc2l0aW9uOm9wYWNpdHkgLjVzfSN0dXJiby1jaGVja291dC1tb2RhbC1oZWFkZXJ7dGV4dC1vdmVyZmxvdzplbGxpcHNpczt3aGl0ZS1zcGFjZTpub3dyYXA7b3ZlcmZsb3c6aGlkZGVuO21heC13aWR0aDo1MDBweH1cbi5zaG9wYnlsb29rLWJ0Zi1kZXNrdG9wLXJvd3tib3JkZXI6MXB4IHNvbGlkICNmMmYyZjI7b3ZlcmZsb3c6aGlkZGVuO3dpZHRoOmF1dG99Lm1pcmFpLWJ0Zi1zaG9wYnlsb29rLWhlYWRlcntkaXNwbGF5Om5vbmU7b3ZlcmZsb3c6aGlkZGVufS5zaG9wYnlsb29rLWJ0Zi1kZXNrdG9wLWxlZnQtc2VjdGlvbntib3JkZXI6MXB4IHNvbGlkICNmMmYyZjI7cGFkZGluZzozMXB4IDQ1cHg7aGVpZ2h0OjQ3NHB4O2Rpc3BsYXk6YmxvY2t9LnNob3BieWxvb2stYnRmLWRlc2t0b3AtbGVmdC1zZWN0aW9uLXRpdGxle3RleHQtYWxpZ246Y2VudGVyO2ZvbnQtc2l6ZToyMHB4O2hlaWdodDo4MHB4O292ZXJmbG93OmhpZGRlbjt3aWR0aDoyODBweDtsaW5lLWhlaWdodDoyNXB4O2NvbG9yOiMyQzJDMkM7bWFyZ2luOjAgLTMwcHg7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfS5zaG9wYnlsb29rLWJ0Zi1kZXNrdG9wLXRpdGxlLXJvd3t0ZXh0LWFsaWduOmxlZnQ7Zm9udC1zaXplOjE5cHg7bGluZS1oZWlnaHQ6MjVweDtjb2xvcjojMkMyQzJDO3dpZHRoOmF1dG87ZGlzcGxheTp0YWJsZTttYXJnaW4tdG9wOjMwcHg7Zm9udC13ZWlnaHQ6NzAwfS5zaG9wYnlsb29rLWJ0Zi1kZXNrdG9wLWxlZnQtc2VjdGlvbi1pbWFnZXttYXJnaW46MjBweCAtMTBweH0uc2hvcGJ5bG9vay1idGYtZGVza3RvcC1sZWZ0LXNlY3Rpb24taW1nLXRpdGxle2Rpc3BsYXk6dGFibGU7aGVpZ2h0OjUwcHh9LnNob3BieWxvb2stYnRmLWRlc2t0b3AtbGVmdC1zZWN0aW9uLWltZy10aXRsZSBzcGFue2Rpc3BsYXk6dGFibGUtY2VsbDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7bGluZS1oZWlnaHQ6MTVweH0uc2hvcGJ5bG9vay1idGYtZGVza3RvcC1sZWZ0LXNlY3Rpb24tYi1sZWZ0e3dpZHRoOjEwMHB4O2Rpc3BsYXk6aW5saW5lLWJsb2NrO2Zsb2F0OmxlZnQ7dGV4dC1hbGlnbjpyaWdodDtmb250LXNpemU6MTJweDtjb2xvcjojOTk5fS5zaG9wYnlsb29rLWJ0Zi1kZXNrdG9wLWxlZnQtc2VjdGlvbi1iLWxlZnQtaW1ne2Zsb2F0OnJpZ2h0IWltcG9ydGFudDttYXJnaW4tbGVmdDo2cHghaW1wb3J0YW50O29wYWNpdHk6Ljd9LnNob3BieWxvb2stYnRmLWRlc2t0b3AtbGVmdC1zZWN0aW9uLWItcmlnaHR7d2lkdGg6MTAwcHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7ZmxvYXQ6cmlnaHQ7Zm9udC1zaXplOjEycHg7Y29sb3I6Izk5OX0uc2hvcGJ5bG9vay1idGYtZGVza3RvcC1sZWZ0LXNlY3Rpb24tYi1yaWdodC1pbWd7ZmxvYXQ6bGVmdCFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0OjZweCFpbXBvcnRhbnQ7b3BhY2l0eTouN30uc2hvcGJ5bG9vay1idGYtaXRlbS1ib3gtYW5jaG9yIC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWRpc2xpa2UsLnNob3BieWxvb2stYnRmLWl0ZW0tYm94LWFuY2hvciAuc2hvcGJ5bG9vay1idGYtaXRlbS1saWtle3BhZGRpbmc6MDttYXJnaW46MH0uc2hvcGJ5bG9vay1idGYtZGVza3RvcC1yaWdodC1zZWN0aW9ue2hlaWdodDo0NzRweDtvdmVyZmxvdzpoaWRkZW47cG9zaXRpb246cmVsYXRpdmV9LnNob3BieWxvb2stYnRmLWl0ZW0tYm94e2Rpc3BsYXk6aW5saW5lLWJsb2NrO2Zsb2F0OmxlZnQ7Ym9yZGVyOjFweCBzb2xpZCAjZjJmMmYyOy13ZWJraXQtdHJhbnNpdGlvbjp0cmFuc2Zvcm0gMXMgZWFzZTstbW96LXRyYW5zaXRpb246dHJhbnNmb3JtIDFzIGVhc2U7LW8tdHJhbnNpdGlvbjp0cmFuc2Zvcm0gMXMgZWFzZTt0cmFuc2l0aW9uOnRyYW5zZm9ybSAxcyBlYXNlO2hlaWdodDoyMzdweH0uc2hvcGJ5bG9vay1idGYtaXRlbS1wcmljZXt0ZXh0LWFsaWduOnJpZ2h0O3BhZGRpbmc6N3B4IDExcHggMCAxMXB4O2hlaWdodDoyMHB4O3otaW5kZXg6MTtwb3NpdGlvbjpyZWxhdGl2ZTtjb2xvcjojOTk5fS5zaG9wYnlsb29rLXByaW1lLWljb257ZGlzcGxheTppbmxpbmUtYmxvY2s7ZmxvYXQ6bGVmdH0uc2hvcGJ5bG9vay1wcmljZS12YWx7ZGlzcGxheTppbmxpbmUtYmxvY2s7ZmxvYXQ6cmlnaHR9LnNob3BieWxvb2stcmF0aW5ncy1oaWRle2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnR9LnNob3BieWxvb2stYnRmLWl0ZW0taW1hZ2V7ZGlzcGxheTpibG9jazt3aWR0aDphdXRvO21hcmdpbjo5cHggMCA2cHggMDtwYWRkaW5nOjAgMTVweH0uc2hvcGJ5bG9vay1idGYtaW1hZ2UtY29udGFpbmVye2hlaWdodDoxNTBweDt3aWR0aDoxMDAlfS5zaG9wYnlsb29rLWJ0Zi1pdGVtLWhye21hcmdpbjowO2JvcmRlci1jb2xvcjojZjJmMmYyfS5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJvdHRvbXtoZWlnaHQ6NTBweDt0ZXh0LWFsaWduOmNlbnRlcjtvdmVyZmxvdzpoaWRkZW59LnNob3BieWxvb2stYnRmLWl0ZW0tZGlzbGlrZXtwYWRkaW5nOjNweCAzcHggM3B4IDdweDtjdXJzb3I6cG9pbnRlcjtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tcmlnaHQ6MTBweDtvcGFjaXR5Oi43fS5zaG9wYnlsb29rLWJ0Zi1pdGVtLWxpa2V7cGFkZGluZzozcHggN3B4IDNweCAzcHg7Y3Vyc29yOnBvaW50ZXI7ZGlzcGxheTppbmxpbmUtYmxvY2s7b3BhY2l0eTouN30uc2hvcGJ5bG9vay1idGYtaXRlbS1kaXNsaWtlOmhvdmVyLC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWxpa2U6aG92ZXJ7b3BhY2l0eToxfS5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJ1dHRvbi1tb2JpbGV7b3BhY2l0eToxfS5zaG9wYnlsb29rLWJ0Zi1pdGVtLWV4cGxvcmUtbW9yZXtwb3NpdGlvbjphYnNvbHV0ZTtiYWNrZ3JvdW5kOiNmZmY7aGVpZ2h0OjIzN3B4O3otaW5kZXg6Mjt0ZXh0LWFsaWduOmNlbnRlcjtkaXNwbGF5OnRhYmxlIWltcG9ydGFudDtyaWdodDowO2JvdHRvbTowO2ZvbnQtc2l6ZToxOHB4fS5zaG9wYnlsb29rLWJ0Zi1pdGVtLWV4cGxvcmUtbW9yZT5zcGFue3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtkaXNwbGF5OnRhYmxlLWNlbGx9LnNob3BieWxvb2stYnRmLWl0ZW0tYm94LWZsaXB7LW1vei10cmFuc2Zvcm06cm90YXRlWSgxODBkZWcpOy1vLXRyYW5zZm9ybTpyb3RhdGVZKDE4MGRlZyk7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlWSgxODBkZWcpO3RyYW5zZm9ybTpyb3RhdGVZKDE4MGRlZyl9LnNob3BieWxvb2stYnRmLWl0ZW0tYm94LWZsaXAgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94LWlubmVyey1tb3otdHJhbnNmb3JtOnJvdGF0ZVkoMTgwZGVnKTstby10cmFuc2Zvcm06cm90YXRlWSgxODBkZWcpOy13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZVkoMTgwZGVnKTt0cmFuc2Zvcm06cm90YXRlWSgxODBkZWcpfS5zaG9wYnlsb29rLWJ0Zi1tb2JpbGUtc2VjdGlvbnttYXgtaGVpZ2h0OjcxMXB4O21pbi1oZWlnaHQ6MjM3cHg7b3ZlcmZsb3c6aGlkZGVuO3Bvc2l0aW9uOnJlbGF0aXZlOy13ZWJraXQtdHJhbnNpdGlvbjpoZWlnaHQgLjJzOy1tb3otdHJhbnNpdGlvbjpoZWlnaHQgLjJzOy1vLXRyYW5zaXRpb246aGVpZ2h0IC4yczt0cmFuc2l0aW9uOmhlaWdodCAuMnN9LnNob3BieWxvb2stYnRmLW1vYmlsZS1zZWN0aW9uLTF7bWF4LWhlaWdodDoxNDIycHh9LnNob3BieWxvb2stYnRmLW1vYmlsZS1zZWN0aW9uLTJ7bWF4LWhlaWdodDoyMTMzcHh9LnNob3BieWxvb2stYnRmLW1vYmlsZS1yb3d7bWFyZ2luLWJvdHRvbToxNXB4O2NsZWFyOmJvdGh9LnNob3BieWxvb2stYnRmLW1vYmlsZS10aXRsZS1yb3d7Zm9udC1zaXplOjE4cHg7Zm9udC13ZWlnaHQ6NzAwO2xpbmUtaGVpZ2h0OjI1cHg7ZGlzcGxheTp0YWJsZTt3aWR0aDoxMDAlO3BhZGRpbmc6MS4zcmVtIDB9LnNob3BieWxvb2stYnRmLW1vYmlsZS10aXRsZS1yb3cgc3BhbntkaXNwbGF5OnRhYmxlLWNlbGw7dmVydGljYWwtYWxpZ246bWlkZGxlfS5zaG9wYnlsb29rLWJ0Zi1tb2JpbGUtZXhwYW5kLXJvd3toZWlnaHQ6NDVweDtmb250LXNpemU6MTVweDtsaW5lLWhlaWdodDoyMHB4O2Rpc3BsYXk6dGFibGU7cGFkZGluZzowIDE1cHg7Y29sb3I6IzAwNjZDMDtib3JkZXI6MXB4IHNvbGlkICNmMmYyZjJ9LnNob3BieWxvb2stYnRmLW1vYmlsZS1leHBhbmQtaW5uZXJ7ZGlzcGxheTp0YWJsZS1jZWxsO3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0uc2hvcGJ5bG9vay1idGYtbW9iaWxlLWV4cGFuZC1pbm5lciBpe21hcmdpbi10b3A6NXB4fS5zaG9wYnlsb29rLWJ0Zi1tb2JpbGUtc2hvdy1tb3Jle2N1cnNvcjpwb2ludGVyfS5zaG9wYnlsb29rLWJ0Zi1tb2JpbGUtZXhwbG9yZS1zYmx7ZGlzcGxheTpub25lfS5zaG9wYnlsb29rLWJ0Zi1tb2JpbGUtaHItYm90dG9te21hcmdpbi1ib3R0b206MCFpbXBvcnRhbnR9LnNob3BieWxvb2stcHJpbWUtaWNvbntwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6MnB4O3Zpc2liaWxpdHk6aGlkZGVufS5zaG9wYnlsb29rLXByaW1lIC5zaG9wYnlsb29rLXByaW1lLWljb257dmlzaWJpbGl0eTp2aXNpYmxlfS5zaG9wYnlsb29rLWJ0Zi1yZW1vdmUtYW5jaG9yIC5taXJhaS1idGYtc2hvcGJ5bG9vay1oZWFkZXJ7ZGlzcGxheTpibG9ja30uc2hvcGJ5bG9vay1idGYtcmVtb3ZlLWFuY2hvciAuc2hvcGJ5bG9vay1idGYtZGVza3RvcC1sZWZ0LXNlY3Rpb257ZGlzcGxheTpub25lfS5zaG9wYnlsb29rLWJ0Zi1yZW1vdmUtYW5jaG9yIC5hLWZpeGVkLWxlZnQtZ3JpZC1pbm5lcntwYWRkaW5nLWxlZnQ6MCFpbXBvcnRhbnR9I3Nob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb257Y2xlYXI6Ym90aH1AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjUyMHB4KXtkaXYuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3h7d2lkdGg6NTAlfWRpdi5zaG9wYnlsb29rLWJ0Zi1tb2JpbGUtc2VjdGlvbnttYXgtaGVpZ2h0OjcxMXB4fWRpdi5zaG9wYnlsb29rLWJ0Zi1tb2JpbGUtc2VjdGlvbi0xe21heC1oZWlnaHQ6MTQyMnB4fWRpdi5zaG9wYnlsb29rLWJ0Zi1tb2JpbGUtc2VjdGlvbi0ye21heC1oZWlnaHQ6MjEzM3B4fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjUyMXB4KXtkaXYuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3h7d2lkdGg6MzMuMzMzMyV9ZGl2LnNob3BieWxvb2stYnRmLW1vYmlsZS1zZWN0aW9ue21heC1oZWlnaHQ6NDc0cHh9ZGl2LnNob3BieWxvb2stYnRmLW1vYmlsZS1zZWN0aW9uLTF7bWF4LWhlaWdodDo5NDhweH1kaXYuc2hvcGJ5bG9vay1idGYtbW9iaWxlLXNlY3Rpb24tMnttYXgtaGVpZ2h0OjE0MjJweH19LnNob3BieWxvb2stYnRmLWRlc2t0b3AtbGVmdC1zZWN0aW9ue2hlaWdodDo1MjRweCFpbXBvcnRhbnR9LnNob3BieWxvb2stYnRmLWRlc2t0b3AtcmlnaHQtc2VjdGlvbntoZWlnaHQ6NTI0cHghaW1wb3J0YW50fS5zaG9wYnlsb29rLWJ0Zi1kZXNrdG9wLXJpZ2h0LXRvcC1yb3d7aGVpZ2h0OjUwcHg7Ym9yZGVyOjFweCBzb2xpZCAjZjJmMmYyfS5zYmwtcmVmaW5lbWVudC1pdGVte2Rpc3BsYXk6YmxvY2s7ZmxvYXQ6bGVmdDttYXJnaW46MTVweH0ucmVmaW5lbWVudC1yb3d7d2hpdGUtc3BhY2U6bm93cmFwO21hcmdpbjo1cHggMH0jc2JsLXJlZmluZW1lbnQtcmV2aWV3IGlucHV0W3R5cGU9Y2hlY2tib3hde2Rpc3BsYXk6bm9uZX1pbnB1dFt0eXBlPWNoZWNrYm94XTpjaGVja2Vkfi5hLWNoZWNrYm94LWxhYmVsPi5zYmwtcmV2aWV3LWl0ZW17Zm9udC13ZWlnaHQ6NzAwfS5zYmwtcmVmaW5lbWVudC1idXR0b257Y29sb3I6IzAwMH0uc2hvcGJ5bG9vay1idGYtbG9hZGluZy1zZWN0aW9ue2Rpc3BsYXk6bm9uZTtwb3NpdGlvbjphYnNvbHV0ZTttYXJnaW46MDtsZWZ0OjA7dG9wOjA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTt6LWluZGV4OjEwfS5zaG9wYnlsb29rLWJ0Zi1sb2FkaW5nLXNlY3Rpb24gLnNob3BieWxvb2stYnRmLWxvYWRpbmctcm93e3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt0b3A6NTBweDtyaWdodDowO2JvdHRvbTowO3otaW5kZXg6MjA7aGVpZ2h0OjQ3NHB4O3dpZHRoOmNhbGMoMTAwJSAtIDRweCk7YmFja2dyb3VuZC1jb2xvcjojZmZmO2ZpbHRlcjpvcGFjaXR5KDc1JSl9LnNob3BieWxvb2stYnRmLW5vLXJlc3VsdHMtc2VjdGlvbntkaXNwbGF5Om5vbmU7cG9zaXRpb246YWJzb2x1dGU7bWFyZ2luOjUwcHggMCAwIDA7bGVmdDowO3RvcDowO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7ei1pbmRleDoxMH0uc2hvcGJ5bG9vay1idGYtbm8tcmVzdWx0cy1zZWN0aW9uIC5zaG9wYnlsb29rLWJ0Zi1uby1yZXN1bHRzLXJvd3twb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjA7dG9wOjA7cmlnaHQ6MDtib3R0b206MDt6LWluZGV4OjIwO2hlaWdodDo0NzRweDt3aWR0aDpjYWxjKDEwMCUgLSA0cHgpO2JhY2tncm91bmQtY29sb3I6I2ZmZn0uc2hvcGJ5bG9vay1idGYtbm8tcmVzdWx0cy1zZWN0aW9uIC5zaG9wYnlsb29rLWJ0Zi1uby1yZXN1bHRzLXJvdyAuc2hvcGJ5bG9vay1idGYtbm8tcmVzdWx0cy10aXRsZS13cmFwcGVye3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7ZGlzcGxheTp0YWJsZX0uc2hvcGJ5bG9vay1idGYtbm8tcmVzdWx0cy1zZWN0aW9uIC5zaG9wYnlsb29rLWJ0Zi1uby1yZXN1bHRzLXJvdyAuc2hvcGJ5bG9vay1idGYtbm8tcmVzdWx0cy10aXRsZS13cmFwcGVyIC5zaG9wYnlsb29rLWJ0Zi1uby1yZXN1bHRzLXRpdGxle21hcmdpbjowIGF1dG87ZGlzcGxheTp0YWJsZS1jZWxsO3ZlcnRpY2FsLWFsaWduOm1pZGRsZTt0ZXh0LWFsaWduOmNlbnRlcn0uc2hvcGJ5bG9vay1idGYtZGVza3RvcC1leHBsb3JlLW1vcmV7ZGlzcGxheTpibG9jaztmbG9hdDpyaWdodDttYXJnaW46MTVweH0uc2hvcGJ5bG9vay1idGYtY2xpY2thYmxle2N1cnNvcjpwb2ludGVyfS5zaG9wYnlsb29rLWFycm93LWJ1dHRvbnt3aWR0aDo0MHB4O2hlaWdodDo4MHB4O2N1cnNvcjpwb2ludGVyO2JhY2tncm91bmQ6I2ZmZjtvcGFjaXR5Oi42Oy13ZWJraXQtYm94LXNoYWRvdzotMnB4IDFweCAxMHB4IDJweCByZ2JhKDAsMCwwLC4yKTstbW96LWJveC1zaGFkb3c6LTJweCAxcHggMTBweCAycHggcmdiYSgwLDAsMCwuMik7Ym94LXNoYWRvdzotMnB4IDFweCAyMHB4IDJweCByZ2JhKDAsMCwwLC4yKX0uc2hvcGJ5bG9vay1hcnJvdy1idXR0b246aG92ZXJ7b3BhY2l0eToxfS5zYmwtc2hvdy1uZXh0LXNlY3Rpb257ZGlzcGxheTpibG9jaztwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDowO3RvcDoyNjJweDttYXJnaW4tdG9wOi0xNXB4O3otaW5kZXg6OX0uc2JsLXNob3ctbmV4dC1zZWN0aW9uIC5zYmwtYXJyb3ctcmlnaHR7Ym9yZGVyOnNvbGlkICMwMDA7Ym9yZGVyLXdpZHRoOjAgMnB4IDJweCAwO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3BhZGRpbmc6MTBweDt0cmFuc2Zvcm06cm90YXRlKC00NWRlZyk7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKC00NWRlZyk7bWFyZ2luOjI5cHggMCAwIDRweH0uc2JsLXNob3ctcHJldi1zZWN0aW9ue3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt0b3A6MjYycHg7bWFyZ2luLXRvcDotMTVweDt6LWluZGV4Ojl9LnNibC1zaG93LXByZXYtc2VjdGlvbiAjc2hvcGJ5bG9vay1idGYtcHJldi1idXR0b257ZGlzcGxheTpub25lfS5zYmwtc2hvdy1wcmV2LXNlY3Rpb24gLnNibC1hcnJvdy1sZWZ0e2JvcmRlcjpzb2xpZCAjMDAwO2JvcmRlci13aWR0aDowIDAgMnB4IDJweDtkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nOjEwcHg7dHJhbnNmb3JtOnJvdGF0ZSg0NWRlZyk7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKDQ1ZGVnKTttYXJnaW46MjlweCAwIDAgMTVweH0uc2JsLWJ0Zi1kZXNrdG9wLXRvcC12LWxpbmV7ZGlzcGxheTppbmxpbmUtYmxvY2s7ZmxvYXQ6cmlnaHQ7bWFyZ2luOjhweCAwO2hlaWdodDozMnB4O2JvcmRlcjoxcHggc29saWQgI2YyZjJmMn0uc2JsLWJ0Zi1kZXNrdG9wLXBhZ2luYXRpb257ZmxvYXQ6cmlnaHQ7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luOjE1cHggMzBweH1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjUyMXB4KXtkaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveHt3aWR0aDozMy4zMzMzMyV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTIgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbis2KXtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTMgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbisxMil7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC00IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rMTgpe2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtNSAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzI0KXtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTYgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbiszMCl7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC03IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rMzYpe2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtOCAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzQyKXtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTkgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbis0OCl7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC1sYXN0IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveHtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLWxhc3QgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1sYXN0LWNoaWxkKC1uKzYpe2Rpc3BsYXk6aW5saW5lLWJsb2NrIWltcG9ydGFudH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDoxMjAwcHgpe2RpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW0tYm94e3dpZHRoOjI1JX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtMiAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzgpe2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtMyAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzE2KXtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTQgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbisyNCl7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC01IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rMzIpe2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtNiAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzQwKXtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTcgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbis0OCl7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC04IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rNTYpe2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtOSAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzY0KXtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLWxhc3QgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94e2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtbGFzdCAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWxhc3QtY2hpbGQoLW4rOCl7ZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjE0MDBweCl7ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3h7d2lkdGg6MjAlfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC0yIC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rMTApe2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtMyAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzIwKXtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTQgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbiszMCl7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC01IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rNDApe2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtNiAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzUwKXtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTcgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbis2MCl7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC04IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rNzApe2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtOSAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzgwKXtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLWxhc3QgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94e2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtbGFzdCAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWxhc3QtY2hpbGQoLW4rMTApe2Rpc3BsYXk6aW5saW5lLWJsb2NrIWltcG9ydGFudH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDoxNjAwcHgpe2RpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW0tYm94e3dpZHRoOjE2LjY2NjY3JX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtMiAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzEyKXtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTMgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbisyNCl7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC00IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rMzYpe2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtNSAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzQ4KXtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTYgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbis2MCl7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC03IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rNzIpe2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtOCAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzg0KXtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLWxhc3QgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94e2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtbGFzdCAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWxhc3QtY2hpbGQoLW4rMTIpe2Rpc3BsYXk6aW5saW5lLWJsb2NrIWltcG9ydGFudH1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtOSAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3h7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC05IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtbGFzdC1jaGlsZCgtbisxMil7ZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjE5NTBweCl7ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3h7d2lkdGg6MTQuMjg1NzElfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC0yIC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rMTQpe2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtMyAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzI4KXtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTQgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbis0Mil7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC01IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rNTYpe2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtNiAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzcwKXtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTcgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbis4NCl7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC1sYXN0IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveHtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLWxhc3QgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1sYXN0LWNoaWxkKC1uKzE0KXtkaXNwbGF5OmlubGluZS1ibG9jayFpbXBvcnRhbnR9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTggLnNob3BieWxvb2stYnRmLWl0ZW0tYm94e2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtOCAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWxhc3QtY2hpbGQoLW4rMTQpe2Rpc3BsYXk6aW5saW5lLWJsb2NrIWltcG9ydGFudH1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtOSAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3h7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC05IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtbGFzdC1jaGlsZCgtbisxNCl7ZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjIyMDBweCl7ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3h7d2lkdGg6MTIuNSV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTIgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbisxNil7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC0zIC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rMzIpe2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtNCAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzQ4KXtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTUgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbis2NCl7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC02IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rODApe2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtbGFzdCAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3h7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC1sYXN0IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtbGFzdC1jaGlsZCgtbisxNil7ZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50fWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC03IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveHtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTcgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1sYXN0LWNoaWxkKC1uKzE2KXtkaXNwbGF5OmlubGluZS1ibG9jayFpbXBvcnRhbnR9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTggLnNob3BieWxvb2stYnRmLWl0ZW0tYm94e2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtOCAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWxhc3QtY2hpbGQoLW4rMTYpe2Rpc3BsYXk6aW5saW5lLWJsb2NrIWltcG9ydGFudH1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtOSAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3h7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC05IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtbGFzdC1jaGlsZCgtbisxNil7ZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50fX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjI1MDBweCl7ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3h7d2lkdGg6MTEuMTExMTElfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC0yIC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rMTgpe2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtMyAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzM2KXtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTQgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbis1NCl7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC01IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rNzIpe2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtbGFzdCAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3h7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC1sYXN0IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtbGFzdC1jaGlsZCgtbisxOCl7ZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50fWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC02IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveHtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTYgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1sYXN0LWNoaWxkKC1uKzE4KXtkaXNwbGF5OmlubGluZS1ibG9jayFpbXBvcnRhbnR9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTcgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94e2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtNyAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWxhc3QtY2hpbGQoLW4rMTgpe2Rpc3BsYXk6aW5saW5lLWJsb2NrIWltcG9ydGFudH1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtOCAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3h7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC04IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtbGFzdC1jaGlsZCgtbisxOCl7ZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50fWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC05IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveHtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTkgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1sYXN0LWNoaWxkKC1uKzE4KXtkaXNwbGF5OmlubGluZS1ibG9jayFpbXBvcnRhbnR9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6MjcwMHB4KXtkaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveHt3aWR0aDoxMCV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTIgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbisyMCl7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC0zIC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rNDApe2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtNCAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzYwKXtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLWxhc3QgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94e2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtbGFzdCAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWxhc3QtY2hpbGQoLW4rMjApe2Rpc3BsYXk6aW5saW5lLWJsb2NrIWltcG9ydGFudH1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtNSAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3h7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC01IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtbGFzdC1jaGlsZCgtbisyMCl7ZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50fWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC02IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveHtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTYgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1sYXN0LWNoaWxkKC1uKzIwKXtkaXNwbGF5OmlubGluZS1ibG9jayFpbXBvcnRhbnR9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTcgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94e2Rpc3BsYXk6bm9uZX1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtNyAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWxhc3QtY2hpbGQoLW4rMjApe2Rpc3BsYXk6aW5saW5lLWJsb2NrIWltcG9ydGFudH1kaXYjZHA6bm90KC5idXJqLWJvZHkpIGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtOCAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3h7ZGlzcGxheTpub25lfWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC04IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtbGFzdC1jaGlsZCgtbisyMCl7ZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50fWRpdiNkcDpub3QoLmJ1cmotYm9keSkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC05IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveHtkaXNwbGF5Om5vbmV9ZGl2I2RwOm5vdCguYnVyai1ib2R5KSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTkgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1sYXN0LWNoaWxkKC1uKzIwKXtkaXNwbGF5OmlubGluZS1ibG9jayFpbXBvcnRhbnR9fS5zaG9wYnlsb29rLWJ0Zi1pdGVtLXJhdGluZ3Mtcm93e21hcmdpbjo0cHggMDtoZWlnaHQ6MjBweDt6LWluZGV4OjF9LnNob3BieWxvb2stYnRmLWl0ZW0tcmF0aW5ncy1yb3cgLnNob3BieWxvb2stYnRmLWl0ZW0tcmF0aW5nc3ttYXJnaW46MCBhdXRvO2Rpc3BsYXk6bm9uZX1Aa2V5ZnJhbWVzIGZhZGV7LnNob3BieWxvb2stYnRmLWl0ZW0tcmF0aW5ncy1yb3cgLnNob3BieWxvb2stYnRmLWl0ZW0tcmF0aW5ncyAwJXtvcGFjaXR5OjB9LnNob3BieWxvb2stYnRmLWl0ZW0tcmF0aW5ncy1yb3cgLnNob3BieWxvb2stYnRmLWl0ZW0tcmF0aW5ncyAxMDAle29wYWNpdHk6MX19LnNob3BieWxvb2stYnRmLWl0ZW0tYm94OmhvdmVyIC5zaG9wYnlsb29rLWJ0Zi1pdGVtLXJhdGluZ3N7ZGlzcGxheTpibG9ja30uc2hvcGJ5bG9vay1idGYtaW1hZ2UtY29udGFpbmVye2hlaWdodDoxMjVweCFpbXBvcnRhbnR9LnNob3BieWxvb2stYnRmLW1vYmlsZS1yZWZpbmVtZW50LXJvd3ttYXJnaW46MCAwIDEuM3JlbSAwO292ZXJmbG93LXg6YXV0bztvdmVyZmxvdy15OnZpc2libGU7d2lkdGg6MTAwJTtkaXNwbGF5OmZsZXg7d2hpdGUtc3BhY2U6bm93cmFwfS5zYmwtc2hlZXQtaGlkZGVue2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnQ7dmlzaWJpbGl0eTpoaWRkZW4haW1wb3J0YW50fS5zYmwtcmVmaW5lbWVudC1pdGVtLW1vYmlsZXtkaXNwbGF5OmJsb2NrO2Zsb2F0OmxlZnQ7bWFyZ2luOjEwcHggMjBweCAxMHB4IDA7Ym9yZGVyOjFweCBzb2xpZCAjMDAwO3BhZGRpbmc6MTBweH0uc2JsLXNoZWV0e21hcmdpbjoyNXB4fS5zYmwtcmVmaW5lbWVudC1idG4tYXBwbHl7Ym90dG9tOjIwcHg7bGVmdDoyMHB4O3JpZ2h0OjIwcHg7cG9zaXRpb246YWJzb2x1dGV9LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcm93e2JvcmRlcjoxcHggc29saWQgI2YyZjJmMjtwb3NpdGlvbjpyZWxhdGl2ZX0uc2hvcGJ5bG9vay1idGYtbG9hZGluZy1zZWN0aW9uLW1vYmlsZXtkaXNwbGF5Om5vbmU7cG9zaXRpb246YWJzb2x1dGU7bWFyZ2luOjA7bGVmdDowO3RvcDowO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7ei1pbmRleDoxMH0uc2hvcGJ5bG9vay1idGYtbG9hZGluZy1zZWN0aW9uLW1vYmlsZSAuc2hvcGJ5bG9vay1idGYtbG9hZGluZy1yb3d7cG9zaXRpb246YWJzb2x1dGU7bGVmdDowO3RvcDowO3JpZ2h0OjA7Ym90dG9tOjQ1cHg7ei1pbmRleDoyMDt3aWR0aDoxMDAlO2JhY2tncm91bmQtY29sb3I6I2ZmZjtmaWx0ZXI6b3BhY2l0eSg3NSUpfS5zaG9wYnlsb29rLWJ0Zi1uby1yZXN1bHRzLXNlY3Rpb24tbW9iaWxle2Rpc3BsYXk6bm9uZTtwb3NpdGlvbjphYnNvbHV0ZTttYXJnaW46MDtsZWZ0OjA7dG9wOjA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTt6LWluZGV4OjEwfS5zaG9wYnlsb29rLWJ0Zi1uby1yZXN1bHRzLXNlY3Rpb24tbW9iaWxlIC5zaG9wYnlsb29rLWJ0Zi1uby1yZXN1bHRzLXJvd3twb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjA7dG9wOjA7cmlnaHQ6MDtib3R0b206NDVweDt6LWluZGV4OjIwO3dpZHRoOjEwMCU7YmFja2dyb3VuZC1jb2xvcjojZmZmfS5zaG9wYnlsb29rLWJ0Zi1uby1yZXN1bHRzLXNlY3Rpb24tbW9iaWxlIC5zaG9wYnlsb29rLWJ0Zi1uby1yZXN1bHRzLXJvdyAuc2hvcGJ5bG9vay1idGYtbm8tcmVzdWx0cy10aXRsZS13cmFwcGVye3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7ZGlzcGxheTp0YWJsZX0uc2hvcGJ5bG9vay1idGYtbm8tcmVzdWx0cy1zZWN0aW9uLW1vYmlsZSAuc2hvcGJ5bG9vay1idGYtbm8tcmVzdWx0cy1yb3cgLnNob3BieWxvb2stYnRmLW5vLXJlc3VsdHMtdGl0bGUtd3JhcHBlciAuc2hvcGJ5bG9vay1idGYtbm8tcmVzdWx0cy10aXRsZXttYXJnaW46MCBhdXRvO2Rpc3BsYXk6dGFibGUtY2VsbDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7dGV4dC1hbGlnbjpjZW50ZXJ9LnNibC1yZWZpbmVtZW50LWJ1dHRvbntsaW5lLWhlaWdodDoxNnB4fS5yZWZpbmVtZW50LXJvd3ttYXJnaW46MH0ucmV2aWV3LWNoZWNrYm94IGlucHV0W3R5cGU9Y2hlY2tib3hde2Rpc3BsYXk6bm9uZX0uc2JsLXJlZmluZW1lbnQtYnRuLWNsZWFye2NvbG9yOiMwMDA7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO3doaXRlLXNwYWNlOm5vd3JhcH0uc2JsLXJlZmluZW1lbnQtaXRlbS1tb2JpbGV7bWFyZ2luOjEwcHggMTBweCAxMHB4IDA7cGFkZGluZzoxMHB4IDVweH0uc2JsLWJ1dHRvbnN7Ym90dG9tOjA7bGVmdDowO3JpZ2h0OjA7cG9zaXRpb246YWJzb2x1dGU7YmFja2dyb3VuZC1jb2xvcjojZjJmMmYyfS5zYmwtcmVmaW5lbWVudC1tb2JpbGUtYnRue3RleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtib3JkZXItcmFkaXVzOjA7d2lkdGg6MTAwJTtib3JkZXItY29sb3I6dHJhbnNwYXJlbnQ7aGVpZ2h0OjQwcHg7bGluZS1oZWlnaHQ6MThweDtmb250LXNpemU6MTVweH0uc2JsLXJlZmluZW1lbnQtbW9iaWxlLWJ0bi1yb3d7cGFkZGluZzoxMHB4IDIxcHg7d2lkdGg6MTAwJTttYXgtd2lkdGg6MTAwJTtvdmVyZmxvdzpoaWRkZW59LnNibC1yZWZpbmVtZW50LW1vYmlsZS1jbGVhci1yb3d7cGFkZGluZy10b3A6NXB4O3BhZGRpbmctYm90dG9tOjVweH0uc2JsLXJlZmluZW1lbnQtbW9iaWxlLWFwcGx5LXJvd3twYWRkaW5nLWJvdHRvbTo1cHh9LnNibC1yZWZpbmVtZW50LWJ0bi1hcHBseXtiYWNrZ3JvdW5kLWNvbG9yOiMwMDA7Y29sb3I6I0ZGRjtib3R0b206YXV0bztsZWZ0OmF1dG87cmlnaHQ6YXV0bztwb3NpdGlvbjpyZWxhdGl2ZX0uc2JsLXJlZmluZW1lbnQtZXhwYW5kZXJ7bWFyZ2luLXRvcDozcHg7YmFja2dyb3VuZC1jb2xvcjojZjJmMmYyfS5zYmwtcmVmaW5lbWVudC1leHBhbmRlci1oZWFkZXJ7d2lkdGg6MTAwJTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmYhaW1wb3J0YW50fS5zYmwtcmVmaW5lbWVudC1leHBhbmRlci1oZWFkZXItY29udGVudHttYXJnaW46MDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LnNibC1yZWZpbmVtZW50LWV4cGFuZGVyLWhlYWRlci10ZXh0e2xpbmUtaGVpZ2h0OjE4cHg7Zm9udC1zaXplOjE1cHg7Y29sb3I6IzAwMH0uc2JsLXJlZmluZW1lbnQtZXhwYW5kZXItY29udGVudHttYXJnaW46MDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7cGFkZGluZzowIDAgMS4ycmVtIDEuN3JlbTt0cmFuc2l0aW9uOmhlaWdodCAzNTBzIGVhc2Utb3V0IDBzOy13ZWJraXQtdHJhbnNpdGlvbjpoZWlnaHQgMzUwbXMgZWFzZS1vdXQgMHN9LnNibC1yZWZpbmVtZW50LXRyaWdnZXItY29udGVudHtjb2xvcjojMDA2NkMwO2xpbmUtaGVpZ2h0OjE5cHg7Zm9udC1zaXplOjEzcHg7ZmxvYXQ6cmlnaHQ7dmlzaWJpbGl0eTp2aXNpYmxlIWltcG9ydGFudDtwYWRkaW5nLXJpZ2h0OjJweH0uc2JsLW1vYmlsZS1maWx0ZXJze2hlaWdodDoxMDAlO2JhY2tncm91bmQtY29sb3I6I2YyZjJmMjt3aWR0aDoxMDAlO2JvdHRvbToxMTBweDttYXJnaW46MDtwYWRkaW5nLWJvdHRvbTozcHh9LnNibC1tb2JpbGUtZmlsdGVycy10b3B7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvdHRvbTo2MHB4IWltcG9ydGFudH0uc2JsLW1vYmlsZS1maWx0ZXJzLXNjcm9sbGVye2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9LnNibC1yZWZpbmVtZW50LWljb24tdGV4dHt3aWR0aDoxMDAlO2Zsb2F0OnJpZ2h0O3BhZGRpbmctcmlnaHQ6MnB4fS5zaG9wYnlsb29rLWJ0Zi1tb2JpbGUtcmVmaW5lbWVudC1yb3d7bWFyZ2luOjAgMCAxcmVtIDB9LnNibC1zaGVldHtiYWNrZ3JvdW5kLWNvbG9yOiNmMmYyZjI7cGFkZGluZzowO21hcmdpbjowfS5zYmwtcmVmaW5lbWVudHMtYm4tbGlzdC1tb2JpbGV7cGFkZGluZzoxMHB4IDIxcHh9QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDo1MjFweCl7LmJ1cmotYm9keSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3h7d2lkdGg6MzMuMzMzMzMlfS5idXJqLWJvZHkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC0yIC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rNil7ZGlzcGxheTpub25lfS5idXJqLWJvZHkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC0zIC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rMTIpe2Rpc3BsYXk6bm9uZX0uYnVyai1ib2R5IGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtNCAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzE4KXtkaXNwbGF5Om5vbmV9LmJ1cmotYm9keSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTUgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbisyNCl7ZGlzcGxheTpub25lfS5idXJqLWJvZHkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC02IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rMzApe2Rpc3BsYXk6bm9uZX0uYnVyai1ib2R5IGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtNyAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzM2KXtkaXNwbGF5Om5vbmV9LmJ1cmotYm9keSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTggLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbis0Mil7ZGlzcGxheTpub25lfS5idXJqLWJvZHkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC05IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rNDgpe2Rpc3BsYXk6bm9uZX0uYnVyai1ib2R5IGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtbGFzdCAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3h7ZGlzcGxheTpub25lfS5idXJqLWJvZHkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC1sYXN0IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtbGFzdC1jaGlsZCgtbis2KXtkaXNwbGF5OmlubGluZS1ibG9jayFpbXBvcnRhbnR9fUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6MTIwMHB4KXsuYnVyai1ib2R5IGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveHt3aWR0aDoyNSV9LmJ1cmotYm9keSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTIgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbis4KXtkaXNwbGF5Om5vbmV9LmJ1cmotYm9keSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTMgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbisxNil7ZGlzcGxheTpub25lfS5idXJqLWJvZHkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC00IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rMjQpe2Rpc3BsYXk6bm9uZX0uYnVyai1ib2R5IGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtNSAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzMyKXtkaXNwbGF5Om5vbmV9LmJ1cmotYm9keSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTYgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbis0MCl7ZGlzcGxheTpub25lfS5idXJqLWJvZHkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC03IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rNDgpe2Rpc3BsYXk6bm9uZX0uYnVyai1ib2R5IGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtOCAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzU2KXtkaXNwbGF5Om5vbmV9LmJ1cmotYm9keSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTkgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbis2NCl7ZGlzcGxheTpub25lfS5idXJqLWJvZHkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC1sYXN0IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveHtkaXNwbGF5Om5vbmV9LmJ1cmotYm9keSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLWxhc3QgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1sYXN0LWNoaWxkKC1uKzgpe2Rpc3BsYXk6aW5saW5lLWJsb2NrIWltcG9ydGFudH19QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDoxNDAwcHgpey5idXJqLWJvZHkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW0tYm94e3dpZHRoOjIwJX0uYnVyai1ib2R5IGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtMiAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzEwKXtkaXNwbGF5Om5vbmV9LmJ1cmotYm9keSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTMgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbisyMCl7ZGlzcGxheTpub25lfS5idXJqLWJvZHkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC00IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rMzApe2Rpc3BsYXk6bm9uZX0uYnVyai1ib2R5IGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtNSAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzQwKXtkaXNwbGF5Om5vbmV9LmJ1cmotYm9keSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTYgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbis1MCl7ZGlzcGxheTpub25lfS5idXJqLWJvZHkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC03IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveDpudGgtY2hpbGQoLW4rNjApe2Rpc3BsYXk6bm9uZX0uYnVyai1ib2R5IGRpdi5zaG9wYnlsb29rLWJ0Zi1pdGVtcy1zZWN0aW9uLXAtOCAuc2hvcGJ5bG9vay1idGYtaXRlbS1ib3g6bnRoLWNoaWxkKC1uKzcwKXtkaXNwbGF5Om5vbmV9LmJ1cmotYm9keSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLTkgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1jaGlsZCgtbis4MCl7ZGlzcGxheTpub25lfS5idXJqLWJvZHkgZGl2LnNob3BieWxvb2stYnRmLWl0ZW1zLXNlY3Rpb24tcC1sYXN0IC5zaG9wYnlsb29rLWJ0Zi1pdGVtLWJveHtkaXNwbGF5Om5vbmV9LmJ1cmotYm9keSBkaXYuc2hvcGJ5bG9vay1idGYtaXRlbXMtc2VjdGlvbi1wLWxhc3QgLnNob3BieWxvb2stYnRmLWl0ZW0tYm94Om50aC1sYXN0LWNoaWxkKC1uKzEwKXtkaXNwbGF5OmlubGluZS1ibG9jayFpbXBvcnRhbnR9fVxuLmFvZC1kaXYtZm9yLWZvY3Vze291dGxpbmU6MH0uYW9kLW5vLW9mZmVyLW5vcm1hbC1mb250e2ZvbnQtd2VpZ2h0OjQwMCFpbXBvcnRhbnR9I2FvZC1jbG9zZXtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0zMHB4O2N1cnNvcjpwb2ludGVyfS5hb2QtY2xvc2UtYnV0dG9ue29wYWNpdHk6MTt3aWR0aDoyMHB4O2hlaWdodDozMHB4O2JhY2tncm91bmQtcG9zaXRpb246LTM1MHB4IC0xMDBweH0jYWxsLW9mZmVycy1kaXNwbGF5e292ZXJmbG93OnZpc2libGUhaW1wb3J0YW50O3Bvc2l0aW9uOmZpeGVkO3JpZ2h0Oi02MDBweDt3aWR0aDo1ODBweDtib3R0b206MDt6LWluZGV4OjI5MDttYXJnaW46MDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyLXdpZHRoOjA7dG9wOjA7Ym94LXNoYWRvdzotNHB4IDAgNXB4IHJnYmEoMCwwLDAsLjI1KTstd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzp0b3VjaH0jYWxsLW9mZmVycy1kaXNwbGF5IC5hb2QtZGVsaXZlcnktcHJvbWlzZS1jb2x1bW57bWFyZ2luLXJpZ2h0OjAhaW1wb3J0YW50fSNhbGwtb2ZmZXJzLWRpc3BsYXkgI2Zhc3QtdHJhY2sgLmEtc2VjdGlvbntwYWRkaW5nOjAhaW1wb3J0YW50O21hcmdpbjowIWltcG9ydGFudH0jYWxsLW9mZmVycy1kaXNwbGF5ICNhbWF6b24tZGF5LW1lc3NhZ2UsI2FsbC1vZmZlcnMtZGlzcGxheSAjZGVsaXZlcnktbWVzc2FnZSwjYWxsLW9mZmVycy1kaXNwbGF5ICN1cHNlbGwtbWVzc2FnZXtwYWRkaW5nLXRvcDowIWltcG9ydGFudDttYXJnaW46MCFpbXBvcnRhbnR9I2FsbC1vZmZlcnMtZGlzcGxheSAuYW9kLWRlbGl2ZXJ5LXByb21pc2UtdHJ1bmNhdGV7b3ZlcmZsb3c6aGlkZGVuO3Bvc2l0aW9uOnJlbGF0aXZlO21heC1oZWlnaHQ6MTlweDtkaXNwbGF5OmJsb2NrO3doaXRlLXNwYWNlOm5vd3JhcH0jYWxsLW9mZmVycy1kaXNwbGF5IC5hb2QtZGVsaXZlcnktcHJvbWlzZS10cnVuY2F0ZSAjYW1hem9uLWRheS1tZXNzYWdlLCNhbGwtb2ZmZXJzLWRpc3BsYXkgLmFvZC1kZWxpdmVyeS1wcm9taXNlLXRydW5jYXRlICNkZWxpdmVyeS1tZXNzYWdlLCNhbGwtb2ZmZXJzLWRpc3BsYXkgLmFvZC1kZWxpdmVyeS1wcm9taXNlLXRydW5jYXRlICN1cHNlbGwtbWVzc2FnZXtkaXNwbGF5OmlubGluZX0jYWxsLW9mZmVycy1kaXNwbGF5IC5hb2QtZGVsaXZlcnktcHJvbWlzZS10cnVuY2F0ZSBicn4qe2Rpc3BsYXk6bm9uZX0jYWxsLW9mZmVycy1kaXNwbGF5IC5hb2QtZGVsaXZlcnktcHJvbWlzZS10cnVuY2F0ZSBoNXtkaXNwbGF5OmlubGluZX0jYWxsLW9mZmVycy1kaXNwbGF5IC5hb2QtZGVsaXZlcnktcHJvbWlzZS10cnVuY2F0ZSAjdXBzZWxsLW1lc3NhZ2V+KntkaXNwbGF5Om5vbmV9I2FsbC1vZmZlcnMtZGlzcGxheSAuYW9kLWRlbGl2ZXJ5LXByb21pc2UtdHJ1bmNhdGUgI2FtYXpvbi1kYXktbWVzc2FnZX4qe2Rpc3BsYXk6bm9uZX0jYWxsLW9mZmVycy1kaXNwbGF5IC5hb2QtZGVsaXZlcnktcHJvbWlzZS10cnVuY2F0ZSAjZGVsaXZlcnktbWVzc2FnZX4qe2Rpc3BsYXk6bm9uZX0jYWxsLW9mZmVycy1kaXNwbGF5ICNhb2QtcGlubmVkLW9mZmVyIC5hb2QtZGVsaXZlcnktbW9yZWxpbmt7ZGlzcGxheTpub25lfSNhbGwtb2ZmZXJzLWRpc3BsYXkgLmFvZC1kZWxpdmVyeS1jb2x1bW57cGFkZGluZy1yaWdodDoyMHB4IWltcG9ydGFudH0jYWxsLW9mZmVycy1kaXNwbGF5IC5hb2QtY29udGFpbmVye21heC13aWR0aDo1ODBweCFpbXBvcnRhbnR9I2FsbC1vZmZlcnMtZGlzcGxheSAuYW9kLWluZm9ybWF0aW9uLWJsb2Nre3BhZGRpbmctcmlnaHQ6MjBweCFpbXBvcnRhbnQ7cGFkZGluZy1sZWZ0OjIwcHghaW1wb3J0YW50fSNhbGwtb2ZmZXJzLWRpc3BsYXkgLmFvZC1hc2luLXRpdGxlLXRleHQtY2xhc3N7d2hpdGUtc3BhY2U6bm93cmFwO292ZXJmbG93OmhpZGRlbjt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzfSNhbGwtb2ZmZXJzLWRpc3BsYXkgLmFvZC1hc2luLWJsb2NrLW1hcmdpbnttYXJnaW4tdG9wOjIwcHg7bWFyZ2luLWxlZnQ6MjBweDttYXJnaW4tcmlnaHQ6MjBweDttYXJnaW4tYm90dG9tOjAhaW1wb3J0YW50fSNhbGwtb2ZmZXJzLWRpc3BsYXkgLmFvZC1jb25kaXRpb24tZGl2aWRlcnt3aWR0aDoxMDAlfSNhbGwtb2ZmZXJzLWRpc3BsYXkgLmFvZC1vZmZlci1ibG9jay1kaXZpZGVye2JvcmRlci10b3A6NHB4IHNvbGlkICNlNmVkZjAhaW1wb3J0YW50O3dpZHRoOjEwMCUhaW1wb3J0YW50fSNhbGwtb2ZmZXJzLWRpc3BsYXkgLmFvZC1vZmZlci1kaXZpZGVye2hlaWdodDowfS5hb2QtZGFya2VuLWJhY2tncm91bmR7b3BhY2l0eTouNDtwb3NpdGlvbjpmaXhlZDt0b3A6MDtsZWZ0OjA7aGVpZ2h0OjEwMCU7d2lkdGg6MTAwJTtiYWNrZ3JvdW5kOiMwMDA7ei1pbmRleDoyODA7Y3Vyc29yOnBvaW50ZXJ9LmFvZC1maWx0ZXItbGlzdC1jb250YWluZXJ7ei1pbmRleDoxMDAwMCFpbXBvcnRhbnR9LmFvZC1jbGVhci1mbG9hdHtjbGVhcjpib3RofS5leHBhbmRhYmxlLWV4cGFuZC1hY3Rpb257bWFyZ2luLWxlZnQ6LTJweH0uYW9kLWNvbmRpdGlvbi1pbWFnZS10aHVtYm5haWx7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246bWlkZGxlO3dpZHRoOjQ4cHg7aGVpZ2h0OjQ4cHg7bWFyZ2luLWJvdHRvbTo4cHg7bWFyZ2luLXJpZ2h0OjEwcHg7bWFyZ2luLXRvcDozcHg7Ym9yZGVyOjFweCBzb2xpZDtib3JkZXItY29sb3I6I0NDQztib3JkZXItcmFkaXVzOjJweDtwYWRkaW5nOjJweH0uYW9kLWNvbmRpdGlvbi1pbWFnZS1mdWxsLWltYWdle3dpZHRoOjUwMHB4O2hlaWdodDo0OTBweDttYXgtd2lkdGg6MTAwJTttYXgtaGVpZ2h0OjEwMCU7b2JqZWN0LWZpdDpmaWxsO292ZXJmbG93OmhpZGRlbjtwYWRkaW5nOjVweDtwYWRkaW5nLXRvcDozcHh9LmFvZC1maWx0ZXItYmxvY2stY29udGFpbmVye3dpZHRoOjEwMCUhaW1wb3J0YW50O2JhY2tncm91bmQ6I0Y0RjZGNzttYXJnaW46MCFpbXBvcnRhbnQ7cG9zaXRpb246cmVsYXRpdmU7cGFkZGluZzoxOHB4IDIwcHghaW1wb3J0YW50fS5hb2QtZmlsdGVyLWJ1dHRvbi1kaXZ7YmFja2dyb3VuZDojZmZmIWltcG9ydGFudH0jYW9kLWZpbHRlci1oaWRle3RyYW5zZm9ybTpyb3RhdGVYKDE4MGRlZyk7ZGlzcGxheTpub25lfS5hb2QtZmlsdGVyLWNvbXBvbmVudC1jb250YWluZXJ7cG9zaXRpb246YWJzb2x1dGU7dG9wOjE4cHg7cmlnaHQ6MjBweH0uYW9kLWZpbHRlci1saXN0LWNvbnRhaW5lcnt3aWR0aDoyMTBweDtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDowO2Rpc3BsYXk6bm9uZTtib3gtc2hhZG93OjAgNHB4IDRweCAtNHB4ICMwMDA7LW1vei1ib3gtc2hhZG93OjAgNHB4IDRweCAtNHB4ICMwMDA7LXdlYmtpdC1ib3gtc2hhZG93OjAgNHB4IDRweCAtNHB4ICMwMDA7Ym9yZGVyLXJhZGl1czo1cHg7Ym9yZGVyOnNvbGlkIDFweCAjYTlhOWE5O2JhY2tncm91bmQ6I2ZmZjtwYWRkaW5nOjE0cHggMThweCAxOHB4IDE4cHghaW1wb3J0YW50fS5hb2QtZmlsdGVyLXBhcmVudC1maWx0ZXJ7dGV4dC1pbmRlbnQ6MTBweH0uYW9kLWZpbHRlci1zdWJmaWx0ZXJ7dGV4dC1pbmRlbnQ6MjBweH0uYW9kLWNsZWFyLWFsbC1kaXZ7dGV4dC1hbGlnbjpyaWdodH0uYW9kLWZpbHRlcmVkLW9mZmVyLWluZm97cG9zaXRpb246YWJzb2x1dGU7dG9wOjIwJTtsZWZ0OjUlfS5hb2QtY2hlY2tib3gtY29se3BhZGRpbmctbGVmdDowIWltcG9ydGFudDtwb3NpdGlvbjpyZWxhdGl2ZSFpbXBvcnRhbnR9LmFvZC1jaGVja2JveC1jb2w+bGFiZWx7dG9wOjAhaW1wb3J0YW50O3Bvc2l0aW9uOmFic29sdXRlIWltcG9ydGFudDtyaWdodDowIWltcG9ydGFudH0uYW9kLWhpZGV7ZGlzcGxheTpub25lIWltcG9ydGFudH0uYW9kLWFycm93LXVwe21hcmdpbi10b3A6OHB4O21hcmdpbi1yaWdodDoycHh9LmFvZC1hcnJvdy1sb3d7bWFyZ2luLXRvcDo4cHg7bWFyZ2luLXJpZ2h0OjJweDt0cmFuc2Zvcm06cm90YXRlWCgxODBkZWcpfSNhb2QtZm9vdGVye2JhY2tncm91bmQ6I2Y5ZmJmYjtoZWlnaHQ6NTFweDtwYWRkaW5nLXJpZ2h0OjIwcHg7cGFkZGluZy1sZWZ0OjIwcHg7cGFkZGluZy10b3A6MTRweDtwYWRkaW5nLWJvdHRvbToxOHB4O3dpZHRoOjEwMCV9I2FvZC1mb290ZXItc3Bpbm5lci1jb250YWluZXJ7cG9zaXRpb246cmVsYXRpdmV9LmFvZC1mb290ZXItYm90dG9tLXN0aWNre3Bvc2l0aW9uOmFic29sdXRlO2JvdHRvbTowfSNhb2Qtb2ZmZXItbG9hZC1zcGlubmVye3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6NTAlfS5hb2Qtbm8tc2VsZWN0ey13ZWJraXQtdG91Y2gtY2FsbG91dDpub25lOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTsta2h0bWwtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZX0uc3RpY2t5LXBpbm5lZC1vZmZlcntwb3NpdGlvbjpzdGlja3k7cG9zaXRpb246LXdlYmtpdC1zdGlja3k7dG9wOjA7ei1pbmRleDoxMDAwMDAwMDA7YmFja2dyb3VuZDojZmZmO21hcmdpbi1ib3R0b206MCFpbXBvcnRhbnR9LmFvZC1waW5uZWQtb2ZmZXItYmxvY2t7cGFkZGluZzoxNHB4IDIwcHghaW1wb3J0YW50fS5hb2QtcGlubmVkLW9mZmVyLXByaWNlLWRpdnttYXJnaW4tdG9wOjAhaW1wb3J0YW50fS5hb2QtemVyby1vZmZlci1jbGFzc3tiYWNrZ3JvdW5kOiNGNEY2Rjc7d2lkdGg6MTAwdnc7aGVpZ2h0OjEwMHZofS5hb2QtcG9wb3Zlcnt6LWluZGV4OjYwMDEhaW1wb3J0YW50fS5hb2QtdHJ1bmNhdGlvbi0yLWxpbmV7b3ZlcmZsb3c6aGlkZGVuO2Rpc3BsYXk6LXdlYmtpdC1ib3g7LXdlYmtpdC1saW5lLWNsYW1wOjI7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsfS5hb2QtYXRjLXByZW9yZGVyLWJ0biBpe2Rpc3BsYXk6bm9uZX0uYW9kLWF0Yy1wcmVvcmRlci1idG4gLmEtYnV0dG9uLXRleHR7d2lkdGg6OTBweDt3aGl0ZS1zcGFjZTppbmhlcml0O2xpbmUtaGVpZ2h0OjIwcHh9LmFvZC1hdGMtcHJlb3JkZXItYnRuIC5hLWJ1dHRvbi1pbm5lcntoZWlnaHQ6YXV0b30uYW9kLW1hcmdpbi1ib3R0b20tbm9uZXttYXJnaW4tYm90dG9tOjAhaW1wb3J0YW50fS5hb2QtYXRjLWxpbmUtaGVpZ2h0e2xpbmUtaGVpZ2h0OjE2cHh9I2FsbC1vZmZlcnMtZGlzcGxheS1zY3JvbGxlcntvdmVyZmxvdy14OmhpZGRlbiFpbXBvcnRhbnQ7b3ZlcmZsb3cteTphdXRvIWltcG9ydGFudH0uYW9kLWF0Yy1kaXNwbGF5LW5vbmV7ZGlzcGxheTpub25lfS5hb2QtYXRjLXRvYXN0LXBvc2l0aW9ue3Bvc2l0aW9uOnJlbGF0aXZlO2xlZnQ6LTUwJTt0b3A6LTUwJTt6LWluZGV4OjEwMDAxfS5hb2QtYXRjLXRvYXN0LXN0eWxlc3twYWRkaW5nOjJweCAycHg7Ym9yZGVyLXJhZGl1czoxMHB4O3RleHQtYWxpZ246Y2VudGVyO2JhY2tncm91bmQtY29sb3I6IzQ0NGM1NX0uYW9kLWF0Yy10b2FzdC10cmFuc2l0aW9ue3RyYW5zaXRpb24tcHJvcGVydHk6cGFkZGluZzt0cmFuc2l0aW9uLWR1cmF0aW9uOi4yczstd2Via2l0LXRyYW5zaXRpb24tcHJvcGVydHk6cGFkZGluZzstd2Via2l0LXRyYW5zaXRpb24tZHVyYXRpb246LjJzfS5hb2QtYXRjLXNwaW5uZXJ7YmFja2dyb3VuZDp1cmwoaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL3VkcC9tb2JpbGUvYnV5LWJveC9hdGMtc3Bpbm5lci5naWYpIDUwJSA1MCUgbm8tcmVwZWF0O2JhY2tncm91bmQtc2l6ZToyNXB4fS5hb2QtYXRjLXNwaW5uZXItcG9zaXRpb257cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTt6LWluZGV4OjEwMDAxO2xlZnQ6MDt0b3A6MH0uYW9kLWF0Yy10b2FzdC1jb250YWluZXJ7cG9zaXRpb246Zml4ZWQ7bGVmdDo1MCU7dG9wOjUwJTt6LWluZGV4OjEwMDAxfS5hb2QtYXRjLXRvYXN0LW92ZXJsYXktc3R5bGVze3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDt6LWluZGV4OjEwMDAwO29wYWNpdHk6LjY7aGVpZ2h0OjMwMDAwcHg7YmFja2dyb3VuZC1jb2xvcjojZmZmO3dpZHRoOjEwMCV9LmFvZC1hdGMtdG9hc3Qtc3VjY2Vzcy1zdHlsZXN7cGFkZGluZzoxMHB4IDEwcHh9LmFvZC1hdGMtdG9hc3QtcHJvZ3Jlc3Mtc3R5bGVze3dpZHRoOjgwcHg7aGVpZ2h0OjQwcHh9LmFvZC1hdGMtdG9hc3QtZmFpbHVyZS1zdHlsZXN7cGFkZGluZzoxMHB4IDEwcHh9XG5cdTAwM0Mvc3R5bGU+XG5cblxuXHUwMDNDc2NyaXB0PlxuKGZ1bmN0aW9uKGQsYixtKXtmdW5jdGlvbiBjKGEpe3JldHVyblwiLS1wcml2YXRlLWFtem5qcXNoaW0tXCIrYX1mdW5jdGlvbiBlKGEsbCl7dmFyIGI9YyhsKTtkLm5vdyhiKS5leGVjdXRlKGMoYStcIi1cIitiKStcIi1cIitmKyssZnVuY3Rpb24oYSl7dm9pZCAwPT09YSYmZC5kZWNsYXJlKGIsITApfSl9ZnVuY3Rpb24gaChhKXtlKFwibWFya1JlcXVlc3RlZFwiLFwiZnVuY3Rpb25hbGl0eS1yZXF1ZXN0ZWQ6XCIrYSl9ZnVuY3Rpb24gZyhhKXtlKFwiY29tcGxldGVkU3RhZ2VcIixcInN0YWdlLVwiK2EpfWIuZ29OMkRlYnVnfHwoYi5nb04yRGVidWc9e2luZm86ZnVuY3Rpb24oKXt9fSk7XCJ1c2Ugc3RyaWN0XCI7dmFyIGY9MCxrPWIuYW16bkpRPW5ldyBmdW5jdGlvbigpe3RoaXMuYWRkTG9naWNhbD10aGlzLmFkZFN0eWxlPXRoaXMuYWRkU3R5bGVzPXRoaXMuUExOb3c9dGhpcy53aW5kb3dPbkxvYWQ9ZnVuY3Rpb24oKXt9O3RoaXMuZGVjbGFyZUF2YWlsYWJsZT1mdW5jdGlvbihhKXtlKFwiZGVjbGFyaW5nXCIsXG5hKX07dGhpcy5hdmFpbGFibGU9ZnVuY3Rpb24oYSxiKXthPWMoYSk7aChhKTtkLndoZW4oYSxjKFwialF1ZXJ5XCIpKS5leGVjdXRlKGMoXCJhdmFpbGFibGUtXCIrYSkrXCItXCIrZisrLGIpfTt0aGlzLm9uUmVhZHk9ZnVuY3Rpb24oYSxiKXthPWMoYSk7aChhKTtkLndoZW4oYSxcImEtZG9tcmVhZHlcIixjKFwialF1ZXJ5XCIpKS5leGVjdXRlKGMoXCJvblJlYWR5LVwiK2EpK1wiLVwiK2YrKyxiKX07dGhpcy5vbkNvbXBsZXRpb249ZnVuY3Rpb24oYSxiKXt2YXIgZT1jKFwic3RhZ2UtXCIrYSk7ZC53aGVuKGUsYyhcImpRdWVyeVwiKSkuZXhlY3V0ZShiKX07dGhpcy5jb21wbGV0ZWRTdGFnZT1mdW5jdGlvbihhKXtnKGEpfTt0aGlzLmFkZFBMPWZ1bmN0aW9uKGEpe2Qud2hlbihcImEtcHJlbG9hZFwiKS5leGVjdXRlKGMoXCJQcmVsb2FkZXJcIikrXCItXCIrZisrLGZ1bmN0aW9uKGIpe2IucHJlbG9hZChhKX0pfTt0aGlzLnN0cmluZ3M9e307dGhpcy5jaGFycz17fX07ZC53aGVuKFwibG9hZFwiKS5leGVjdXRlKGMoXCJmYWlsLXNhZmUtc3RhZ2VzXCIpLFxuZnVuY3Rpb24oKXtnKFwiYW16bkpRLnRoZUZvbGRcIik7ZyhcImFtem5KUS5jcml0aWNhbEZlYXR1cmVcIil9KTtkLndoZW4oXCJqUXVlcnlcIikuZXhlY3V0ZShcImRlZmluZSBhbXpuSlEgalF1ZXJ5XCIsZnVuY3Rpb24oYSl7Yi5qUXVlcnl8fChiLmpRdWVyeT1hKTtrLmpRdWVyeXx8KGsualF1ZXJ5PWEpO2UoXCJkZWNsYXJpbmdcIixcImpRdWVyeVwiKX0pfSkod2luZG93LlB8fHdpbmRvdy5BbWF6b25VSVBhZ2VKUyx3aW5kb3csZG9jdW1lbnQpO1xuKHdpbmRvdy5BbWF6b25VSVBhZ2VKUyA/IEFtYXpvblVJUGFnZUpTIDogUCkud2hlbignYXRmJykuZXhlY3V0ZShmdW5jdGlvbigpe1xuICAod2luZG93LkFtYXpvblVJUGFnZUpTID8gQW1hem9uVUlQYWdlSlMgOiBQKS5sb2FkLmpzKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDE3UWpZbU10QkwuanM/QVVJQ2xpZW50cy9BbWF6b25Qb3BvdmVyc0FVSVNoaW0jdXMnKTtcbiAgKHdpbmRvdy5BbWF6b25VSVBhZ2VKUyA/IEFtYXpvblVJUGFnZUpTIDogUCkubG9hZC5qcygnaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxVkUtQ0dMbHdMLmpzP0FVSUNsaWVudHMvRGV0YWlsUGFnZURlc2t0b3BJbWFnZUJsb2NrTWV0YUFzc2V0IzIzMDY1NC1UMS4yMTA5MDktVDEuMTY5NTkzLVQxJyk7XG4gICh3aW5kb3cuQW1hem9uVUlQYWdlSlMgPyBBbWF6b25VSVBhZ2VKUyA6IFApLmxvYWQuanMoJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS8zMU5iNWhaUWl6TC5fUkN8MjFQV3MyTExJR0wuanMsMTE4U2F5N0hJWkwuanMsMjFFMmFJRGo2REwuanMsNDEtNXlDSUpMa0wuanMsMDFnMmV0YWgwTkwuanMsMzFzZWxTc04rMUwuanMsNDEzdTk4WE9OUUwuanMsMjFPWUVCZDhQVkwuanMsNTEtMmpmdW94b0wuanMsMzE2blZaMWMrZ0wuanMsMDFBZFlMWTlySEwuanMsMDFJT01Dc1ZGQ0wuanMsMDE4NUlUVjBNNkwuanMsNDFEZkhHZFhVZUwuanMsMjEwTmpMay1Vb0wuanMsMzFHU29VeGtUb0wuanMsMDFUUXlvMGJuSUwuanMsMTFTUmtZV2NwUEwuanMsNzEtRWtzVDRlYUwuanMsMDFPclE1QVhxc0wuanMsMzFValRBcEdPUEwuanMsMDFMSEp0NVBpeUwuanMsMzFBYy1jUStaV0wuanMsMTFvR2FvWWdiZEwuanMsMDFIbWNiRnNuRkwuanMsMzFzRytNNVFONUwuanMsMTFBVlJWV1RvdUwuanMsMTFNUXFGUEVLK0wuanMsMTFHNGM0M09adkwuanMsMTFER2NyWnNVd0wuanMsMDFYMnppZ1g0a0wuanMsMDFPdHZwd2lrUUwuanMsMzFxVWRveFBFOEwuanMsMjFxT0dxamNNN0wuanMsMDFaRitvdk5mbEwuanMsMzFabC1CV0UxMEwuanMsNjFWMVl5ZVFJM0wuanMsMjFZVzlMS0YyekwuanMsMjFteW1FT05GdEwuanMsNjFubzlJRHRQckwuanMsMjFPSkRBUkJoUUwuanMsNDFzK09CUHhUUEwuanMsNTFKNnhqWFdjdEwuanMsMDFJV1ViMjlRNEwuanMsMTF6b0Fxa2QyVUwuanMsMDFKekUzLURmTEwuanMsMDFZaXZlbFlXNUwuanMsMDE2UUZXQUFkTUwuanMsNDFmN1pZRFBoNkwuanMsMDExYlgyY2lKYkwuanMsMjEyMjJCK3JBekwuanMsMDFncDNvcXBiNUwuanMsMzFTVmhVSHoxYkwuanMsMjFuc2ZyamtaYUwuanMsMDF1OENoRldnZEwuanMsMDFOS0dhVzB3NUwuanMsMDFyRW1kTExweEwuanMsMzFiRVhuVmdsS0wuanMsMDFyZDNVWTNaOEwuanMsMDFoa3NlT1hqNkwuanMsMDFtYjVzS3dOTUwuanMsMDFTZDRKZ0g5TUwuanMsMzFaUzVUUVZXREwuanMsNTFaNklwcWNQQ0wuanMsMDFJQy1nQkt5WUwuanMsNTFJVkRWOE1JaUwuanMsMjFyWVVqTWsxNkwuanMsMDFPSTBSenB4ZkwuanNfLmpzP0FVSUNsaWVudHMvVVNTb2Z0bGluZXNEZXRhaWxQYWdlTWV0YUFzc2V0X1RVUkJPX0RFU0tUT1AjZGVza3RvcC51cy4yMTM0OTgtVDEuMTY3MTYyLVQxLjIxNTQ4NS1UMS4yMTA1NDctVDEuMTk1NDA2LUMuMjI3OTQ4LVQxLjE4MzUxMS1UMS4xNTM2NjItVDEuMTAzMDYxLVQxLjIyMTMzMC1UMS4xMjMzOTItVDEuMjMyMDAyLVQxLjIwMDYxNi1UMS4xNzM5NzEtVDEuMTg0ODg4LVQxLjEzMTkwMC1UMS4xODQ2NjAtQy4xNjI5MDktVDEuMTU1MTc1LVQxLjIxMjIxMy1UMS4yMTMwNjYtVDEuMjA3ODI2LVQxLjE0NDIwMS1UMS4yMjEwMDktVDEuMTI2MzMxLVQxLjE1NjM5MS1UMS4xODgyMTMtVDEuMTc5Nzg5LVQxLjEwOTM3OC1UMS4xNDc5NTctVDEuMTU0MDMxLVQzLjE5ODg5OC1DLjIwMDk2My1UMS4yMjQ3MjItVDEuMTY5NTkzLVQxLjE4MTU2MS1UMS4xODc1NTUtVDEnKTtcbiAgKHdpbmRvdy5BbWF6b25VSVBhZ2VKUyA/IEFtYXpvblVJUGFnZUpTIDogUCkubG9hZC5qcygnaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzMxY3hOOVpDV2tMLmpzP0FVSUNsaWVudHMvRGV0YWlsUGFnZU1pcmFpQXNzZXRzIzE1MDE1MC1UMScpO1xuICAod2luZG93LkFtYXpvblVJUGFnZUpTID8gQW1hem9uVUlQYWdlSlMgOiBQKS5sb2FkLmpzKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFySEZ1UUI3ZkwuanM/QVVJQ2xpZW50cy9EZXRhaWxQYWdlQWxsT2ZmZXJzRGlzcGxheUFzc2V0cyMyMzA2OTctVDEnKTtcbn0pO1xuXHUwMDNDL3NjcmlwdD5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cImEtc3RhdGVcIiBkYXRhLWEtc3RhdGU9XCJ7JnF1b3Q7a2V5JnF1b3Q7OiZxdW90O2RldGFpbC1wYWdlLWRldmljZS10eXBlJnF1b3Q7fVwiPntcImRldmljZVR5cGVcIjpcIndlYlwifVx1MDAzQy9zY3JpcHQ+XG4gICAgICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwiYS1zdGF0ZVwiIGRhdGEtYS1zdGF0ZT1cInsmcXVvdDtrZXkmcXVvdDs6JnF1b3Q7bWV0cmljcy1zY2hlbWEmcXVvdDt9XCI+e1wid2lkZ2V0U2NoZW1hXCI6XCJkcDp3aWRnZXQ6XCIsXCJkaW1lbnNpb25TY2hlbWFcIjpcImRwOmRpbXM6XCJ9XHUwMDNDL3NjcmlwdD5cblxuICAgIFxuXG5cblxuXG5cblxuIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuIFxuIFxuIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgICBcblxuXG5cblxuXG5cblxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgICAgIFxuXG5cblxuXG5cbiAgICBcbiAgICBcblxuXG5cblxuXG5cbiAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ3N0eWxlIHR5cGU9XCJ0ZXh0L2Nzc1wiPlxuXG4gICNjbV9jcl9kcHdpZGdldCAuYS1zaXplLW1pY3JvIHtcbiAgICBmb250LXNpemU6IDlweDtcbiAgfSBcblxuICAjY21fY3JfZHB3aWRnZXQgLmM3eVRvcERvd25EYXNoZWRTdHJpa2Uge1xuICAgIGJvcmRlci10b3A6IDFweCBkYXNoZWQgI0E5QTlBOTtcbiAgICBib3JkZXItYm90dG9tOiAxcHggZGFzaGVkICNBOUE5QTk7XG4gIH1cblxuICAjY21fY3JfZHB3aWRnZXQgLmM3eUJhZGdlQVVJIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGxldHRlci1zcGFjaW5nOiAwLjVweDtcbiAgICBwYWRkaW5nOiAycHg7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgfVxuXG5cdTAwM0Mvc3R5bGU+XG5cblxuXG5cdTAwM0NzdHlsZSB0eXBlPVwidGV4dC9jc3NcIj4ubmF2LXNwcml0ZS12MSAubmF2LXNwcml0ZSwgLm5hdi1zcHJpdGUtdjEgLm5hdi1pY29uIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9nbm8vc3ByaXRlcy9uYXYtc3ByaXRlLWdsb2JhbF9ibHVlYmVhY29uLTF4X29wdGltaXplZF9sYXlvdXQxLl9DQjQ2ODY3MDc3NF8ucG5nKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAwcHg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbn1cbi5uYXYtc3Bpbm5lciB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvamF2YXNjcmlwdHMvbGliL3BvcG92ZXIvaW1hZ2VzL3NuYWtlLl9DQjE5MjU3MTYxMV8uZ2lmKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cbi5uYXYtdGltZWxpbmUtaWNvbiwgLm5hdi1hY2Nlc3MtaW1hZ2UsIC5uYXYtdGltZWxpbmUtcHJpbWUtaWNvbiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvZ25vL3Nwcml0ZXMvdGltZWxpbmVfc3ByaXRlXzF4Ll9DQjI3NjIzOTQwOF8ucG5nKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzowKSB7XG4gICAgI3NoaXBUb0FVSUJ1dHRvbiAuYS1kcm9wZG93bi1wcm9tcHQgeyBkaXNwbGF5OmlubGluZS1ibG9jazsgd2lkdGg6MTIwcHg7IG92ZXJmbG93OmhpZGRlbjsgdGV4dC1vdmVyZmxvdzplbGxpcHNpczsgIH1cbn1cbiNyaGYgLmNCb3hUTCwgI3JoZiAuY0JveFRSLCAjcmhmIC5jQm94QkwsICNyaGYgLmNCb3hCUiB7IGJhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9jb21tb24vc3ByaXRlcy9zcHJpdGUtc2l0ZS13aWRlLTIuX0NCMTQ2MzAzODY2Xy5wbmcpOyB9XG4uc3dTcHJpdGUgeyBkaXNwbGF5OiAtbW96LWlubGluZS1ib3g7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgbWFyZ2luOiAwO3BhZGRpbmc6IDA7IHBvc2l0aW9uOiByZWxhdGl2ZTsgb3ZlcmZsb3c6IGhpZGRlbjsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgYmFja2dyb3VuZC1pbWFnZTogdXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9jb21tb24vc3ByaXRlcy9zcHJpdGUtc2l0ZS13aWRlLl9DQjM3NzM4NjA5NF8ucG5nKTsgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgfVxuLnN3U3ByaXRlIHNwYW4geyBwb3NpdGlvbjogYWJzb2x1dGU7IGxlZnQ6IC05OTk5cHg7IH1cbi5zaW1zLXBvcHVuZGVye2JhY2tncm91bmQ6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9uYXYyL2ltYWdlcy9zaW1zX2F0Y18yMDVweC5fVjM3NjM4MDM4OF8ucG5nKSBuby1yZXBlYXQgc2Nyb2xsIGxlZnQgYm90dG9tIHRyYW5zcGFyZW50O21pbi1oZWlnaHQ6MjU2cHh9XG4ucmhmV3JhcHBlciAuc2hvdmVsZXIgLmJhY2stYnV0dG9uIGEgLmJnLWltYWdlLCAucmhmV3JhcHBlciAuc2hvdmVsZXIgLm5leHQtYnV0dG9uIGEgLmJnLWltYWdlLCAucmhmV3JhcHBlciAuc2hvdmVsZXIgZGl2LmRpc2FibGVkLWJ1dHRvbiB7IGJhY2tncm91bmQtaW1hZ2U6IHVybChodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvY29tbW9uL3Nwcml0ZXMvc3ByaXRlLXNpdGUtd2lkZS5fQ0IzNzczODYwOTRfLnBuZyk7IH1cbi5yaGZXcmFwcGVyIC5zaG92ZWxlciAubmV4dC1idXR0b24gYSAuYmctaW1hZ2UgeyAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTYwcHggLTgwcHg7YmFja2dyb3VuZC1jb2xvcjogd2hpdGU7fVxuLnJoZldyYXBwZXIgLnNob3ZlbGVyIC5iYWNrLWJ1dHRvbiBhIC5iZy1pbWFnZSB7IGJhY2tncm91bmQtcG9zaXRpb246IC0zMHB4IC04MHB4OyBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTt9XG4uYXVpVGVzdFNwcml0ZSB7IGJhY2tncm91bmQ6IHVybChodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvbmF2Mi9pbWFnZXMvc3ByaXRlLWNhcm91c2VsLWJ0bnMtc3RhcnMyLl9DQjM3NjM4ODU4N18ucG5nKSBuby1yZXBlYXQgc2Nyb2xsIDAgMCB0cmFuc3BhcmVudDsgfVxuXG4gIC5zaW1zV3JhcHBlciAuc2hvdmVsZXIgdWwgeyBoZWlnaHQ6IDIxOHB4OyB9XG4gIC5hcHBhcmVsIC5zaW1zV3JhcHBlciAuc2hvdmVsZXIgdWwgeyBoZWlnaHQ6IDMxOHB4O31cblxuI3R3aXN0ZXIgLnN3YXRjaGVzIGxpLnN3YXRjaFNlbGVjdCAuYXJyb3cgeyBiYWNrZ3JvdW5kOnVybChodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvdHdpc3Rlci9pbWFnZXMvZG93bi1hcnJvdy1zaGFkb3ctdjIuX0NCMjY3NjAzMDAzXy5wbmcpIG5vLXJlcGVhdCBjZW50ZXIgdG9wOyB9XG4jdHdpc3RlciAuc3dhdGNoZXMgbGkuc3dhdGNoVW5hdmFpbGFibGVIb3ZlciAueG92ZXJsYXkgIHsgYmFja2dyb3VuZDogdXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS90d2lzdGVyL2ltYWdlcy9zd2F0Y2hlcy5fQ0IxNDY4NTkyNTZfLnBuZykgcmVwZWF0IC01NHB4IC02NHB4OyB9XG4jdHdpc3RlclBvcG92ZXIgLnR3aXN0ZXJQb3BvdmVyQXJyb3cgeyBiYWNrZ3JvdW5kOnVybChodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvZ2F0ZXdheS9jc3cvdHJpLWRvd24uX0NCMTU1NTQyMDgyXy5wbmcpbm8tcmVwZWF0IDExcHggMDsgfVxuI3dpc2hsaXN0LWRyb3Bkb3duLWNvbnRlbnQgLnNfcGx1cyB7IGJhY2tncm91bmQ6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9jb21tb24vc3ByaXRlcy9zcHJpdGUtZHAtMi5fQ0IzODQyNjc5NTNfLnBuZykgbm8tcmVwZWF0IHNjcm9sbCAtMTQwcHggLTU0MHB4IHRyYW5zcGFyZW50OyB9XG4jZmdfc2l6aW5nX3RhYnMgeyBiYWNrZ3JvdW5kOnRyYW5zcGFyZW50IHVybChodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvYXBwYXJlbC9yY3hncy90YWJzL3RhYi1ib3JkZXIuX0NCMTkyMjA3MTc3Xy5naWYpIHJlcGVhdC14IHNjcm9sbCBsZWZ0IGJvdHRvbTsgfVxuI2ZnX3NpemluZ190YWJzIGxpIHsgYmFja2dyb3VuZDp0cmFuc3BhcmVudCB1cmwoaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2FwcGFyZWwvcmN4Z3MvdGFicy90YWItdW5zZWxlY3RlZC1sZWZ0Ll9DQjE5MjIwNzE3Nl8uZ2lmKSBuby1yZXBlYXQgc2Nyb2xsIGxlZnQgdG9wOyB9XG4jZmdfc2l6aW5nX3RhYnMgbGkgZGl2IHsgYmFja2dyb3VuZDp0cmFuc3BhcmVudCB1cmwoaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2FwcGFyZWwvcmN4Z3MvdGFicy90YWItdW5zZWxlY3RlZC1yaWdodC5fQ0IxOTIyMDcxNzZfLmdpZikgbm8tcmVwZWF0IHNjcm9sbCByaWdodCB0b3A7IH1cbiNmZ19zaXppbmdfdGFicyBsaSBkaXYubGFzdCB7IGJhY2tncm91bmQtaW1hZ2U6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9hcHBhcmVsL3JjeGdzL3RhYnMvdGFiLXVuc2VsZWN0ZWQtcmlnaHQtbGFzdC5fQ0IxOTIyMDcxNzlfLmdpZik7IH1cbiNmZ19zaXppbmdfdGFicyBsaS5mZ19oaWdobGlnaHQgeyBiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvYXBwYXJlbC9yY3hncy90YWJzL3RhYi1zZWxlY3RlZC1sZWZ0Ll9DQjE5MjIwNzE3Nl8uZ2lmKTsgfVxuI2ZnX3NpemluZ190YWJzIGxpLmZnX2hpZ2hsaWdodCBkaXYgeyBiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvYXBwYXJlbC9yY3hncy90YWJzL3RhYi1zZWxlY3RlZC1yaWdodC5fQ0IxOTIyMDcxNzZfLmdpZik7IH1cbiNmZ19zaXppbmdfdGFicyBsaS5mZ19oaWdobGlnaHQgZGl2Lmxhc3QgeyBiYWNrZ3JvdW5kLWltYWdlOnVybChodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvYXBwYXJlbC9yY3hncy90YWJzL3RhYi1zZWxlY3RlZC1yaWdodC1sYXN0Ll9DQjE5MjIwNzE3Nl8uZ2lmKTsgfVxuXG4uZHBTcHJpdGUgeyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9jb21tb24vc3ByaXRlcy9zcHJpdGUtZHAtMi5fQ0IzODQyNjc5NTNfLnBuZycpOyBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OyB9XG4uYnhneS1wcmljZWJsb2NrIC5idXR0b24tc3ByaXRlLCAjYnhneV9wcmljZV9idXR0b25fYmxvY2sgLmJ1dHRvbi1zcHJpdGUsXG4jZmJ0X3ByaWNlX2Jsb2NrIC5idXR0b24tc3ByaXRlIHsgYmFja2dyb3VuZC1pbWFnZTogdXJsKCBodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEveC1sb2NhbGUvcGVyc29uYWxpemF0aW9uL2J4Z3kvZmJ0LWNhcnQtcHJlb3JkZXItc3ByaXRlLl9DQjE5MjE5MDgzMl8uZ2lmKTsgfVxuI2J4Z3lfcHJpY2VfYnV0dG9uX2Jsb2NrIC53bC1idXR0b24tc3ByaXRlLFxuI2ZidF9wcmljZV9ibG9jayAud2wtYnV0dG9uLXNwcml0ZSB7IGJhY2tncm91bmQtaW1hZ2U6IHVybCggaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL3gtbG9jYWxlL2NvbW11bml0aWVzL3dpc2hsaXN0L2FkZC10by13bC1idXR0b24tc3ByaXRlLl9DQjE5MjI1MDA0Ml8uZ2lmKTsgfVxuLmJ4Z3lTZWxsZXJMb2FkaW5nIHsgYmFja2dyb3VuZDogdXJsKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEveC1sb2NhbGUvY29tbW9uL2xvYWRpbmcvbG9hZGluZy1zbWFsbC5fQ0IxOTIyMzk4MzFfLmdpZicpIG5vLXJlcGVhdCA1MHB4IDIwcHg7IH1cbiNkZXRhaWxwYWdlLWNsaWNrMmNhbGwgLmMyYy1waG9uZS1pY29uIHsgYmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2VsZWN0cm9uaWNzL2NsaWNrMmNhbGwvY2xpY2syY2FsbC1zcHJpdGUuX0NCMTU2NDMxNDMyXy5wbmcpOyBiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7IGJhY2tncm91bmQtcG9zaXRpb246IDBweCAwcHg7IHdpZHRoOjU3cHg7IGhlaWdodDo1N3B4OyBtYXJnaW4tcmlnaHQ6NnB4OyB9XG4uY210eVNwcml0ZSB7IGJhY2tncm91bmQtaW1hZ2U6IHVybChodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvY29tbW9uL3Nwcml0ZXMvc3ByaXRlLWNvbW11bml0aWVzLl9DQjMyMDgxMTYwM18ucG5nKTsgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgfVxuXG5cbiAgXG4gICAgLnRhZ0VkaXQge1xuICAgICAgcGFkZGluZy1ib3R0b206NHB4O1xuICAgICAgcGFkZGluZy10b3A6NHB4O1xuICAgIH1cblxuICAgIC5lZGl0LXRhZyB7XG4gICAgICB3aWR0aDogMTU1cHg7XG4gICAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICB9XG5cbiAgICAubGlzdC10YWdzIHtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICBwYWRkaW5nOiAxcHggMHB4IDBweCAwcHg7XG4gICAgfVxuXG4gICAjc3VnZ2VzdC10YWJsZSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgei1pbmRleDogMjtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjOWFjO1xuICAgIH1cblxuICAgICNzdWdnZXN0LXRhYmxlIHRyIHRke1xuICAgICAgY29sb3I6ICMzMzM7XG4gICAgICBmb250OiAxMXB4IFZlcmRhbmEsIHNhbnMtc2VyaWY7XG4gICAgICBwYWRkaW5nOiAycHg7XG4gICAgfVxuXG4gICAgI3N1Z2dlc3QtdGFibGUgdHIuaG92ZXJlZCB7XG4gICAgICBjb2xvcjogI2VmZWRkNDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICM5YWM7XG4gICAgfVxuXG4gIFxuICAuc2VlLXBvcHVsYXIge1xuICAgIHBhZGRpbmc6IDEuM2VtIDAgMCAwO1xuICB9XG5cbiAgLnRhZy1jb2xzIHtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICB9XG5cbiAgLnRhZy1jb2xzIHRkIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICAgIHdpZHRoOiAyNTBweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAzMHB4O1xuICB9XG5cbiAgLnRhZy1jb2xzIC50YWctcm93IHtcbiAgICBwYWRkaW5nOiAwIDAgN3B4IDBweDtcbiAgfVxuXG4gIC50YWctY29scyAuc2VlLWFsbCB7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBwYWRkaW5nLXRvcDogNXB4O1xuICB9XG5cbiAgLnRhZ3MtcGlsZXMtZmVlZGJhY2sge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgY29sb3I6ICMwMDA7XG4gICAgZm9udC1zaXplOiAwLjllbTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBtYXJnaW46IDBweCAwIDAgMDtcbiAgIH1cblxuICAudGFnLWNvbHMgaSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgY3Vyc29yOiBoYW5kO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXNpemU6IDBweDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuICAgIHdpZHRoOiAxNnB4O1xuICAgIGhlaWdodDogMTZweDtcbiAgICBtYXJnaW4tdG9wOiAxcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAzcHg7XG4gIH1cblxuICAudGFnLWNvbHMgLnNuYWtlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS94LWxvY2FsZS9jb21tdW5pdGllcy90YWdzL2dyYXlzbmFrZS5fQ0IxOTIyNTAwNDlfLmdpZicpO1xuICB9XG5cbiAgI3RhZ0NvbnRlbnRIb2xkZXIgLnRpcCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBjb2xvcjogIzk5OTtcbiAgICBmb250LXNpemU6IDEwcHg7XG4gICAgcGFkZGluZy10b3A6IDAuMjVlbTtcbiAgfVxuXG4gICN0YWdDb250ZW50SG9sZGVyIC50aXAgYSB7XG4gICAgY29sb3I6ICM5OTkgIWltcG9ydGFudDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmUgIWltcG9ydGFudDtcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZCAxcHggI0NDQztcbiAgfVxuXG4gIC5ub3dyYXAge1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIH1cblxuICAjdGdFbmFibGVWb3Rpbmcge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAjdGFnQ29udGVudEhvbGRlciAuY291bnQge1xuICAgIGNvbG9yOiAjNjY2O1xuICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICBtYXJnaW4tbGVmdDogM3B4O1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIH1cblxuICAuY291bnQudGdWb3Rpbmcge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuXG4gIC50Z1ZvdGluZyAudGdDb3VudGVyIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDNweDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggZGFzaGVkICMwMDMzOTk7XG4gICAgY29sb3I6ICMwMDMzOTk7XG4gIH1cblxuXG4uYzJjLWlubGluZS1zcHJpdGUge1xuICAgIGRpc3BsYXk6IC1tb3otaW5saW5lLWJveDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luOiAwO3BhZGRpbmc6IDA7IFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9lbGVjdHJvbmljcy9jbGljazJjYWxsL2NsaWNrMmNhbGwtc3ByaXRlLl9DQjE1NjQzMTQzMl8ucG5nKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuLmMyYy1pbmxpbmUtc3ByaXRlIHNwYW4ge1xuICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgIHRvcDotOTk5OXB4O1xufVxuXG4uZHAtY2FsbC1tZS1idXR0b24ge1xuICAgIHdpZHRoOjUycHg7XG4gICAgaGVpZ2h0OjIycHg7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjowcHggLTU3cHg7IFxufVxuXG5cdTAwM0Mvc3R5bGU+XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDc2NyaXB0IGxhbmd1YWdlPVwiSmF2YXNjcmlwdDEuMVwiIHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cblx1MDAzQyEtLVxuZnVuY3Rpb24gYW16X2pzX1BvcFdpbih1cmwsbmFtZSxvcHRpb25zKXtcbiAgdmFyIENvbnRleHRXaW5kb3cgPSB3aW5kb3cub3Blbih1cmwsbmFtZSxvcHRpb25zKTtcbiAgQ29udGV4dFdpbmRvdy5mb2N1cygpO1xuICByZXR1cm4gZmFsc2U7XG59XG4vLy0tPlxuXHUwMDNDL3NjcmlwdD5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ21ldGEgaHR0cC1lcXVpdj1cImNvbnRlbnQtdHlwZVwiIGNvbnRlbnQ9XCJ0ZXh0L2h0bWw7IGNoYXJzZXQ9aXNvLTg4NTktMVwiPlxuXG5cblxuXG5cblx1MDAzQ2xpbmsgcmVsPVwiY2Fub25pY2FsXCIgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vS2Vtc3RvbmUtRWxlZ2FudC1NdWx0aWxheWVyLUVhcnJpbmdzLUFjY2Vzc29yeS9kcC9CMDFHS1FJMzkyXCI+XG5cdTAwM0NtZXRhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGNvbnRlbnQ9XCJCdXkgS2Vtc3RvbmUgRWxlZ2FudCBSb3NlIEdvbGQvU2lsdmVyIDIgVG9uZSBNdWx0aWxheWVyIERhbmdsZSBFYXJyaW5ncyBBY2Nlc3NvcnkgZm9yIFdvbWFuLCAyLjQgSW5jaGVzIGFuZCBvdGhlciBEcm9wICZhbXA7IERhbmdsZSBhdCBBbWF6b24uY29tLiBPdXIgd2lkZSBzZWxlY3Rpb24gaXMgZWxlZ2libGUgZm9yIGZyZWUgc2hpcHBpbmcgYW5kIGZyZWUgcmV0dXJucy5cIj5cblx1MDAzQ21ldGEgbmFtZT1cInRpdGxlXCIgY29udGVudD1cIkFtYXpvbi5jb206IEtlbXN0b25lIEVsZWdhbnQgUm9zZSBHb2xkL1NpbHZlciAyIFRvbmUgTXVsdGlsYXllciBEYW5nbGUgRWFycmluZ3MgQWNjZXNzb3J5IGZvciBXb21hbiwgMi40IEluY2hlczogSmV3ZWxyeVwiPlxuXG5cdTAwM0NtZXRhIG5hbWU9XCJrZXl3b3Jkc1wiIGNvbnRlbnQ9XCJLZW1zdG9uZSBFbGVnYW50IFJvc2UgR29sZC9TaWx2ZXIgMiBUb25lIE11bHRpbGF5ZXIgRGFuZ2xlIEVhcnJpbmdzIEFjY2Vzc29yeSBmb3IgV29tYW4sIDIuNCBJbmNoZXMsS2Vtc3RvbmUsOTA3MjAwMDhcIj5cblx1MDAzQ3RpdGxlPkFtYXpvbi5jb206IEtlbXN0b25lIEVsZWdhbnQgUm9zZSBHb2xkL1NpbHZlciAyIFRvbmUgTXVsdGlsYXllciBEYW5nbGUgRWFycmluZ3MgQWNjZXNzb3J5IGZvciBXb21hbiwgMi40IEluY2hlczogSmV3ZWxyeVx1MDAzQy90aXRsZT5cblxuXG5cblxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gRnVuY3Rpb24gQ2xhc3M6IFNob3cvSGlkZSBwcm9kdWN0IHByb21vdGlvbnMgJiBzcGVjaWFsIG9mZmVycyBsaW5rXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5mdW5jdGlvbiBzaG93RWxlbWVudChpZCkge1xuICB2YXIgZWxtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xuICBpZiAoZWxtKSB7XG4gICAgZWxtLnN0eWxlLnZpc2liaWxpdHkgPSAndmlzaWJsZSc7XG4gICAgaWYgKGVsbS5nZXRBdHRyaWJ1dGUoJ25hbWUnKSA9PSAnaGVyb1F1aWNrUHJvbW9EaXYnKSB7XG4gICAgICBlbG0uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBoaWRlRWxlbWVudChpZCkge1xuICB2YXIgZWxtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xuICBpZiAoZWxtKSB7XG4gICAgZWxtLnN0eWxlLnZpc2liaWxpdHkgPSAnaGlkZGVuJztcbiAgICBpZiAoZWxtLmdldEF0dHJpYnV0ZSgnbmFtZScpID09ICdoZXJvUXVpY2tQcm9tb0RpdicpIHtcbiAgICAgIGVsbS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gc2hvd0hpZGVFbGVtZW50KGhfaWQsIGRpdl9pZCkge1xuICB2YXIgaGlkZGVuVGFnID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaF9pZCk7XG4gIGlmIChoaWRkZW5UYWcpIHtcbiAgICBzaG93RWxlbWVudChkaXZfaWQpO1xuICB9IGVsc2Uge1xuICAgIGhpZGVFbGVtZW50KGRpdl9pZCk7XG4gIH1cbn1cblxuICAgIGlmKHR5cGVvZiBQID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgUC53aGVuID09PSAnZnVuY3Rpb24nKXtcbiAgICBQLnJlZ2lzdGVyKFwiaXNMYXp5TG9hZFdlYmxhYkVuYWJsZWRcIiwgZnVuY3Rpb24oKXtcbiAgICAgICAgdmFyICBpc1dlYmxhYkVuYWJsZWQgPSAxO1xuICAgICAgICByZXR1cm4gaXNXZWJsYWJFbmFibGVkO1xuICAgICAgfSk7XG4gICAgfVxuXG5cdHdpbmRvdy5pc0Jvd3NlckZlYXR1cmVDbGVhbnVwID0gMDtcblx0XG52YXIgdG91Y2hEZXZpY2VEZXRlY3RlZCA9IGZhbHNlO1xuXG5cblxuICAgICAgICBQLndoZW4oJ3NwLmxvYWQuanMnKS5yZWdpc3Rlcignc3AubG9hZC5jcml0aWNhbC5qcycpO1xuICAgICAgICBQLndoZW4oJ2F0ZicpLnJlZ2lzdGVyKCdzcC5sb2FkLmpzJyk7XG5cblxudmFyIENTTVJlcXM9e2FmOntjOjIscDonYXRmJ30sY2Y6e2M6MixwOidjZid9LHgxOntjOjEscDoneDEnfSx4Mjp7YzoxLHA6J3gyJ319O1xuZnVuY3Rpb24gc2V0Q1NNUmVxKGEpe1xuICAgIGE9YS50b0xvd2VyQ2FzZSgpO1xuICAgIHZhciBiPUNTTVJlcXNbYV07XG4gICAgaWYoYiYmLS1iLmM9PTApe1xuICAgICAgICBpZih0eXBlb2YgdWV0PT0nZnVuY3Rpb24nKXt1ZXQoYSk7IChhID09ICdhZicpICYmICh0eXBlb2YgcmVwbGFjZUltZyA9PT0gJ2Z1bmN0aW9uJykgJiYgcmVwbGFjZUltZygpO307XG4gICAgICAgIGlmKHR5cGVvZiBQICE9ICd1bmRlZmluZWQnKXtcbiAgICAgICAgICAgIFAucmVnaXN0ZXIoYi5wKTtcbiAgICAgICAgICAgIGlmKGEgPT0gJ2FmJykge1xuICAgICAgICAgICAgICAgIGlmKHR5cGVvZiB1ZXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgdWV0KCdiYicsICdUd2lzdGVyQVVJV2FpdCcsIHt3YjogMX0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG59XG5pZih0eXBlb2YgUCAhPSAndW5kZWZpbmVkJykge1xuICAgIFAud2hlbignQScpLmV4ZWN1dGUoZnVuY3Rpb24oQSkge1xuICAgICAgICBpZih0eXBlb2YgdWV0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICB1ZXQoJ2FmJywgJ1R3aXN0ZXJBVUlXYWl0Jywge3diOiAxfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cblxudmFyIGFkZGxvbmdQb2xlVGFnID0gZnVuY3Rpb24obWFya2VyLGN1c3RvbXRhZyl7XG4gICAgbWFya2VyPW1hcmtlci50b0xvd2VyQ2FzZSgpO1xuICAgIHZhciBiPUNTTVJlcXNbbWFya2VyXTtcbiAgICBpZihiLmMgPT0gMCl7XG4gICAgICAgIGlmKHdpbmRvdy51ZSAmJiB0eXBlb2YgdWUudGFnID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICB1ZS50YWcoY3VzdG9tdGFnKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG47KGZ1bmN0aW9uKF9vbmVycm9yKXtcbiAgdmFyIG9sZF9lcnJvcl9oYW5kbGVyID0gX29uZXJyb3I7XG4gIHZhciBhdHRyaWJ1dGlvbk1hcCA9IHtcbiAgICAgICAgICBcIkJyb3dzZXJBZGRvblwiOntcbiAgICAgICAgICAgIGxvZ0xldmVsOiBcIkVSUk9SXCIsXG4gICAgICAgICAgICBmaWxlczpbXG4gICAgICAgICAgICAgICAgL15yZXM6XFwvXFwvLywgXG4gICAgICAgICAgICAgICAgL15yZXNvdXJjZTpcXC9cXC8vLCAvXmNocm9tZTpcXC9cXC8vLCBcbiAgICAgICAgICAgICAgICAvXmNocm9tZS1leHRlbnNpb246XFwvXFwvLywgL15leHRlbnNpb25zXFwvLywgXG4gICAgICAgICAgICAgICAgL15maWxlOlxcL1xcL1xcLy8sIC9eY2hyb21lXFwvUmVuZGVyZXJFeHRlbnNpb25CaW5kaW5ncy8sIFxuICAgICAgICAgICAgICAgIC9ecGx1Z2luXFwvYW1hem9uX2NvbV9kZXRhaWxcXC5qcy8sIFxuICAgICAgICAgICAgICAgIC9ebWlzY2VsbGFuZW91c19iaW5kaW5ncy8sIFxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBwbHVnaW4gaW4gY2hpbmFcbiAgICAgICAgICAgICAgICAvXmh0dHAuPzpcXC9cXC8oW15cXHNcXC5dK1xcLikqcWhpbWdcXC5jb20vLFxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBwbHVnaW4gaW4gSW5kaWFcbiAgICAgICAgICAgICAgICAvXmh0dHAuPzpcXC9cXC8oW15cXHNcXC5dK1xcLikqZGF0YWZhc3RndXJ1XFwuaW5mby8sXG5cbiAgICAgICAgICAgICAgICAvXmh0dHAuPzpcXC9cXC9zYzFcXC5jaGVja3BvaW50XFwuY29tXFwvZGV2XFwvYWJpbmVcXC9zY3JpcHRzXFwvaW5qZWN0XFwuanMvLFxuXG4gICAgICAgICAgICAgICAgL15odHRwLj86XFwvXFwvKFteXFxzXFwuXStcXC4pKmltYWdlMnBsYXlcXC5jb20vLFxuXG4gICAgICAgICAgICAgICAgL15odHRwLj86XFwvXFwvKFteXFxzXFwuXStcXC4pKndhamFtXFwuY29tLyxcblxuICAgICAgICAgICAgICAgIC9eaHR0cC4/OlxcL1xcLyhbXlxcc1xcLl0rXFwuKSp5ZHN0YXRpY1xcLmNvbS8sXG5cblx0XHQvXmh0dHBzPzpcXC9cXC8oW15cXHNcXC5dK1xcLikqZ29vZ2xlYXBpc1xcLmNvbVxcL2FqYXhcXC9saWJzXFwvanF1ZXJ5LyxcblxuXHRcdC9eaHR0cHM/OlxcL1xcL3d3d1xcLnN1cGVyZmlzaFxcLmNvbVxcL3dzLyxcblxuXHRcdC9eaHR0cHM/OlxcL1xcL2FwaS5pbWlkZW8uY29tXFwvdjIvLFxuXG5cdFx0L15odHRwcz86XFwvXFwvbWluaWJhci5pbWluZW50LmNvbS8sXG5cblx0XHQvXmh0dHBzPzpcXC9cXC90cmFuc2xhdGUuZ29vZ2xldXNlcmNvbnRlbnQuY29tLyxcblx0XG5cdFx0L15pbmNsdWRlc1xcL2hlbHBlci9cbiAgICAgICAgICAgIF1cbiAgICAgICAgICB9XG4gIH07XG5cbiAgICBmdW5jdGlvbiBmaW5kTWF0Y2goZil7XG5cdGZvcih2YXIgYXR0cmlidXRpb24gaW4gYXR0cmlidXRpb25NYXApe1xuXHQgICAgdmFyIGk9MDtcblx0ICAgIHZhciBhdHRyaWJ1dGlvblZhbHVlID0gYXR0cmlidXRpb25NYXBbYXR0cmlidXRpb25dO1xuXHQgICAgdmFyIGZpbGVzID0gYXR0cmlidXRpb25WYWx1ZVsnZmlsZXMnXTtcblx0ICAgIHdoaWxlKGZpbGVzW2ldKXtcblx0XHRpZihmLm1hdGNoKGZpbGVzW2ldKSl7XG5cdCAgICAgICAgICAgIHZhciBleGNlcHRpb249e307XG5cdFx0ICAgIGV4Y2VwdGlvbi5hdHRyaWJ1dGlvbiA9IGF0dHJpYnV0aW9uO1xuXHRcdCAgICBpZihhdHRyaWJ1dGlvblZhbHVlLmhhc093blByb3BlcnR5KFwibG9nTGV2ZWxcIikpe1xuXHRcdFx0ZXhjZXB0aW9uLmxvZ0xldmVsID0gYXR0cmlidXRpb25WYWx1ZVsnbG9nTGV2ZWwnXTtcdFxuXHRcdCAgICB9XG5cdFx0cmV0dXJuIGV4Y2VwdGlvbjtcbiAgICAgICAgICAgXHR9XG5cdFx0aSsrO1xuXHQgICAgfVxuICAgICAgICB9XG5cdHJldHVybiBudWxsO1xuICAgIH1cblxuXG4gICAgZnVuY3Rpb24gZHBPbkVycm9yT3ZlcnJpZGUobWVzc2FnZSwgZmlsZSwgbGluZSwgY29sLCBlcnJvcil7XG4gICAgIHZhciBtYXRjaGluZ0Vycm9yRm91bmQgPSBmYWxzZTtcbiAgICAgaWYodHlwZW9mIGZpbGUgPT0gXCJzdHJpbmdcIil7XG4gICAgICAgIHRyeXtcblx0ICAgIHZhciBqc0V4Y2VwdGlvbiA9IGZpbmRNYXRjaChmaWxlKTtcblx0ICAgIGlmKGpzRXhjZXB0aW9uICYmIHR5cGVvZiBqc0V4Y2VwdGlvbiA9PT0gXCJvYmplY3RcIil7XG4gICAgICAgICAgICAgICAganNFeGNlcHRpb24ubSA9ICBtZXNzYWdlO1xuICAgICAgICAgICAgICAgIGpzRXhjZXB0aW9uLmYgPSBmaWxlO1xuICAgICAgICAgICAgICAgIGpzRXhjZXB0aW9uLmwgPSBsaW5lO1xuICAgICAgICAgICAgICAgIGpzRXhjZXB0aW9uLmMgPSAgXCJcIiArIChjb2wgfHwgXCJcIik7XG4gICAgICAgICAgICAgICAganNFeGNlcHRpb24uZXJyID0gIGVycm9yO1xuICAgICAgICAgICAgICAgIGpzRXhjZXB0aW9uLmZyb21PbkVycm9yID0gMTtcbiAgICAgICAgICAgICAgICBqc0V4Y2VwdGlvbi5hcmdzID0gYXJndW1lbnRzO1xuICAgICAgICAgICAgICAgIGlmKHdpbmRvdy51ZUxvZ0Vycm9yKXtcbiAgICAgICAgICAgICAgIFx0ICAgIHdpbmRvdy51ZUxvZ0Vycm9yKGpzRXhjZXB0aW9uKTtcblx0XHQgICAgbWF0Y2hpbmdFcnJvckZvdW5kID0gdHJ1ZTtcblx0XHQgICAgaWYodWUgJiYgdWUuY291bnQpe1xuXHRcdCAgICAgICAgdWUuY291bnQoXCJkcEphdmFzY3JpcHRBZmZlY3RlZEVycm9yc1wiLCAodWUuY291bnQoXCJkcEphdmFzY3JpcHRBZmZlY3RlZEVycm9yc1wiKSB8fCAwKSArIDEpO1xuXHRcdCAgICAgICAgdWUuY291bnQoXCJkcEpTRXJyb3JcIiArIGpzRXhjZXB0aW9uLmF0dHJpYnV0aW9uLCAodWUuY291bnQoXCJkcEpTRXJyb3JcIiArIGpzRXhjZXB0aW9uLmF0dHJpYnV0aW9uKSB8fCAwKSArIDEpO1xuXHRcdCAgICB9XG5cdCAgICAgICAgfVxuICAgICAgICAgICAgfVxuXHR9Y2F0Y2goZXhjZXB0aW9uKXtcblx0ICAgIGlmKHdpbmRvdy51ZUxvZ0Vycm9yKXtcblx0ICAgICAgICB3aW5kb3cudWVMb2dFcnJvcihleGNlcHRpb24se21lc3NhZ2U6IFwiZHBPbkVycm9yT3ZlcnJpZGU6IGVycm9yIG9jY3VycmVkIC0gXCIsIGxvZ0xldmVsOlwiRkFUQUxcIn0pO1xuXHQgICAgfVxuXHR9XG4gICAgfVxuXHRpZighbWF0Y2hpbmdFcnJvckZvdW5kKXsgXG4gICAgICAgICAgb2xkX2Vycm9yX2hhbmRsZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblx0fVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgICBkcE9uRXJyb3JPdmVycmlkZS5za2lwVHJhY2UgPSAxO1xuICAgICAgd2luZG93Lm9uZXJyb3IgPSBkcE9uRXJyb3JPdmVycmlkZTtcbiAgICB9KSh3aW5kb3cub25lcnJvcik7XG5cblxudmFyIGdiRW5hYmxlVHdpc3RlckpTICA9IDA7XG52YXIgaXNUd2lzdGVyUGFnZSA9IDA7XG5cdTAwM0Mvc2NyaXB0PlxuXG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ3N0eWxlIHR5cGU9XCJ0ZXh0L2Nzc1wiPlxuXG4vKiBPdmVycmlkZSBmb3IgTmF0aXZlIERyb3BEb3duIGNoYW5nZXMgKi9cbiAgICAgI2J1eWJveF9mZWF0dXJlX2RpdiAjT25lQ2xpY2tCb3gsICNidXlib3ggI09uZUNsaWNrQm94IHsgdGV4dC1hbGlnbjpjZW50ZXI7fVxuICAgICAjYnV5Ym94X2ZlYXR1cmVfZGl2ICNvbmVDbGlja0F2YWlsYWJsZSwgI2J1eWJveCAjb25lQ2xpY2tBdmFpbGFibGUgeyB0ZXh0LWFsaWduOmNlbnRlcjt9XG4gICAgICNkZWZhdWx0Q2hpbGREcm9wZG93bl9mZWF0dXJlX2RpdiAuYS1uYXRpdmUtZHJvcGRvd24geyBkaXNwbGF5OiBpbmxpbmU7fVxuICAgICAjZGVmYXVsdENoaWxkRHJvcGRvd25fZmVhdHVyZV9kaXYgLmEtZHJvcGRvd24tY29udGFpbmVyIC5hLWJ1dHRvbi1kcm9wZG93biB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDt9XG5cblx1MDAzQy9zdHlsZT5cblxuXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cblxuXG5QLndoZW4oXCJwLWRldGVjdFwiKS5leGVjdXRlKGZ1bmN0aW9uKCkge1xuICAgIHZhciBoID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuICAgIGguY2xhc3NOYW1lID0gaC5jbGFzc05hbWUucmVwbGFjZSgvKF58XFxiKWEtdG91Y2goXFxifCQpL2csXCJcIik7XG59KTtcblxud2luZG93LndlYmxhYnMgPSB7fTtcblxuXHUwMDNDL3NjcmlwdD5cblxuXG4gXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cblAubm93KCkuZXhlY3V0ZSgnZHAtY3JlYXRlLWZlYXR1cmUtaW50ZXJhY3RpdmUtYXBpJywgZnVuY3Rpb24gKCkge1xuICAgIGlmICh0eXBlb2YgdWV0ID09PSAnZnVuY3Rpb24nKXtcbiAgICAgICAgdWV0KCdiYicsICdjbGlja1RvQ0knLCB7d2I6IDF9KTtcbiAgICB9XG4gICAgdmFyIHJlY29yZHMgPSBbXSwgdGltZVRvSW50ZXJhY3RpdmVPYmo7XG4gICAgd2luZG93Lm1hcmtGZWF0dXJlUmVuZGVyID0gZnVuY3Rpb24gKGZOYW1lLCBvcHRpb25zKSB7XG4gICAgICAgIHVwZGF0ZUZlYXR1cmVMaXN0KGZOYW1lLCBvcHRpb25zLCAncmVuZGVyJyk7XG4gICAgfTtcbiAgICB3aW5kb3cubWFya0ZlYXR1cmVJbnRlcmFjdGl2ZSA9IGZ1bmN0aW9uIChmTmFtZSwgb3B0aW9ucykge1xuICAgICAgICB1cGRhdGVGZWF0dXJlTGlzdChmTmFtZSwgb3B0aW9ucywgJ2ludGVyYWN0aXZlJyk7XG4gICAgfTtcbiAgICBmdW5jdGlvbiB1cGRhdGVGZWF0dXJlTGlzdChmTmFtZSwgb3B0aW9ucywgdHlwZSkge1xuICAgICAgICB2YXIgcmVjb3JkID0ge1xuICAgICAgICAgICAgbmFtZTogZk5hbWUsXG4gICAgICAgICAgICBvcHRpb25zOiBvcHRpb25zLFxuICAgICAgICAgICAgdHlwZTogdHlwZSxcbiAgICAgICAgICAgIHRpbWVzdGFtcDogK25ldyBEYXRlXG4gICAgICAgIH07XG4gICAgICAgIGlmICh0aW1lVG9JbnRlcmFjdGl2ZU9iaikge1xuICAgICAgICAgICAgdGltZVRvSW50ZXJhY3RpdmVPYmoudXBkYXRlRmVhdHVyZXMoW3JlY29yZF0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVjb3Jkcy5wdXNoKHJlY29yZCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgUC53aGVuKCdkcC10aW1lLXRvLWludGVyYWN0aXZlJykuZXhlY3V0ZSgnZHAtdXBkYXRlLWludGVyYWN0aXZlLWZlYXR1cmUtbGlzdCcsIGZ1bmN0aW9uIChvYmopIHtcbiAgICAgICAgdGltZVRvSW50ZXJhY3RpdmVPYmogPSBvYmo7XG4gICAgICAgIGlmIChyZWNvcmRzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGltZVRvSW50ZXJhY3RpdmVPYmoudXBkYXRlRmVhdHVyZXMocmVjb3Jkcyk7XG4gICAgICAgIH1cbiAgICB9KTtcbn0pOyBcdTAwM0Mvc2NyaXB0PlxuXG5cdTAwM0MhLS0mJiZQb3J0YWwmRGVsaW1pdGVyJiYmLS0+XHUwMDNDIS0tIHNwOmVuZC1mZWF0dXJlOmhvc3QtYXNzZXRzIC0tPlxuXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cbndpbmRvdy51ZV9paGUgPSAod2luZG93LnVlX2loZSB8fCAwKSArIDE7XG5pZiAod2luZG93LnVlX2loZSA9PT0gMSkge1xuKGZ1bmN0aW9uKGssbCxnKXtmdW5jdGlvbiBtKGEpe2N8fChjPWJbYS50eXBlXS5pZCxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEuY2xpZW50WD8oZT1hLnBhZ2VYLGY9YS5wYWdlWSk6KGU9YS5jbGllbnRYLGY9YS5jbGllbnRZKSwyIT1jfHxoJiYoaCE9ZXx8biE9Zik/KHIoKSxkLmlzbCYmbC5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cChcImF0XCIsZC5pZCl9LDApKTooaD1lLG49ZixjPTApKX1mdW5jdGlvbiByKCl7Zm9yKHZhciBhIGluIGIpYi5oYXNPd25Qcm9wZXJ0eShhKSYmZC5kZXRhY2goYSxtLGJbYV0ucGFyZW50KX1mdW5jdGlvbiBzKCl7Zm9yKHZhciBhIGluIGIpYi5oYXNPd25Qcm9wZXJ0eShhKSYmZC5hdHRhY2goYSxtLGJbYV0ucGFyZW50KX1mdW5jdGlvbiB0KCl7dmFyIGE9XCJcIjshcSYmYyYmKHE9MSxhKz1cIiZ1aT1cIitjKTtyZXR1cm4gYX12YXIgZD1rLnVlLHA9ay51ZXgscT0wLGM9MCxoLG4sZSxmLGI9e2NsaWNrOntpZDoxLHBhcmVudDpnfSxtb3VzZW1vdmU6e2lkOjIsXG5wYXJlbnQ6Z30sc2Nyb2xsOntpZDozLHBhcmVudDpsfSxrZXlkb3duOntpZDo0LHBhcmVudDpnfX07ZCYmcCYmKHMoKSxkLl91aT10KX0pKHVlX2NzbSx3aW5kb3csZG9jdW1lbnQpO1xuXG5cblxuKGZ1bmN0aW9uKHMsbCl7ZnVuY3Rpb24gbShiLGUsYyl7Yz1jfHxuZXcgRGF0ZSgrbmV3IERhdGUrdCk7Yz1cImV4cGlyZXM9XCIrYy50b1VUQ1N0cmluZygpO24uY29va2llPWIrXCI9XCIrZStcIjtcIitjK1wiO3BhdGg9L1wifWZ1bmN0aW9uIHAoYil7Yis9XCI9XCI7Zm9yKHZhciBlPW4uY29va2llLnNwbGl0KFwiO1wiKSxjPTA7Y1x1MDAzQ2UubGVuZ3RoO2MrKyl7Zm9yKHZhciBhPWVbY107XCIgXCI9PWEuY2hhckF0KDApOylhPWEuc3Vic3RyaW5nKDEpO2lmKDA9PT1hLmluZGV4T2YoYikpcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChhLnN1YnN0cmluZyhiLmxlbmd0aCxhLmxlbmd0aCkpfXJldHVyblwiXCJ9ZnVuY3Rpb24gcShiLGUsYyl7aWYoIWUpcmV0dXJuIGI7LTFcdTAwM0NiLmluZGV4T2YoXCJ7XCIpJiYoYj1cIlwiKTtmb3IodmFyIGE9Yi5zcGxpdChcIiZcIiksZixkPSExLGg9ITEsZz0wO2dcdTAwM0NhLmxlbmd0aDtnKyspZj1hW2ddLnNwbGl0KFwiOlwiKSxmWzBdPT1lPyghY3x8ZD9hLnNwbGljZShnLDEpOihmWzFdPWMsYVtnXT1cbmYuam9pbihcIjpcIikpLGg9ZD0hMCk6Mj5mLmxlbmd0aCYmKGEuc3BsaWNlKGcsMSksaD0hMCk7aCYmKGI9YS5qb2luKFwiJlwiKSk7IWQmJmMmJigwXHUwMDNDYi5sZW5ndGgmJihiKz1cIiZcIiksYis9ZStcIjpcIitjKTtyZXR1cm4gYn12YXIgaz1zLnVlfHx7fSx0PTYwNDhFNyxuPXVlX2NzbS5kb2N1bWVudHx8bC5kb2N1bWVudCxyPW51bGwsZDthOnt0cnl7ZD1sLmxvY2FsU3RvcmFnZTticmVhayBhfWNhdGNoKHUpe31kPXZvaWQgMH1rLmNvdW50JiZrLmNvdW50KFwiY3NtLmNvb2tpZVNpemVcIixkb2N1bWVudC5jb29raWUubGVuZ3RoKTtrLmNvb2tpZT17Z2V0OnAsc2V0Om0sdXBkYXRlQ3NtSGl0OmZ1bmN0aW9uKGIsZSxjKXt0cnl7dmFyIGE7aWYoIShhPXIpKXt2YXIgZjthOnt0cnl7aWYoZCYmZC5nZXRJdGVtKXtmPWQuZ2V0SXRlbShcImNzbS1oaXRcIik7YnJlYWsgYX19Y2F0Y2goayl7fWY9dm9pZCAwfWE9Znx8cChcImNzbS1oaXRcIil8fFwie31cIn1hPXEoYSxiLGUpO3I9YT1xKGEsXCJ0XCIsK25ldyBEYXRlKTtcbnRyeXtkJiZkLnNldEl0ZW0mJmQuc2V0SXRlbShcImNzbS1oaXRcIixhKX1jYXRjaChoKXt9bShcImNzbS1oaXRcIixhLGMpfWNhdGNoKGcpe1wiZnVuY3Rpb25cIj09dHlwZW9mIGwudWVMb2dFcnJvciYmdWVMb2dFcnJvcihFcnJvcihcIkNvb2tpZSBtYW5hZ2VyOiBcIitnLm1lc3NhZ2UpLHtsb2dMZXZlbDpcIldBUk5cIn0pfX19fSkodWVfY3NtLHdpbmRvdyk7XG5cbihmdW5jdGlvbihsLGQpe2Z1bmN0aW9uIGMoYil7Yj1cIlwiO3ZhciBjPWEuaXNCRlQ/XCJiXCI6XCJzXCIsZD1cIlwiK2Eub2lkLGY9XCJcIithLmxpZCxnPWQ7ZCE9ZiYmMjA9PWYubGVuZ3RoJiYoYys9XCJhXCIsZys9XCItXCIrZik7YS50YWJpZCYmKGI9YS50YWJpZCtcIitcIik7Yis9YytcIi1cIitnO2IhPWUmJjEwMD5iLmxlbmd0aCYmKGU9YixhLmNvb2tpZT9hLmNvb2tpZS51cGRhdGVDc21IaXQobSxiKyhcInxcIisgK25ldyBEYXRlKSk6ZG9jdW1lbnQuY29va2llPVwiY3NtLWhpdD1cIitiKyhcInxcIisgK25ldyBEYXRlKStuK1wiOyBwYXRoPS9cIil9ZnVuY3Rpb24gcCgpe2U9MH1mdW5jdGlvbiBoKGIpeyEwPT09ZFthLnBhZ2VWaXoucHJvcEhpZF0/ZT0wOiExPT09ZFthLnBhZ2VWaXoucHJvcEhpZF0mJmMoe3R5cGU6XCJ2aXNpYmxlXCJ9KX12YXIgbj1cIjsgZXhwaXJlcz1cIisobmV3IERhdGUoK25ldyBEYXRlKzYwNDhFNSkpLnRvR01UU3RyaW5nKCksbT1cInRiXCIsZSxhPWwudWV8fHt9LGs9YS5wYWdlVml6JiZhLnBhZ2VWaXouZXZlbnQmJlxuYS5wYWdlVml6LnByb3BIaWQ7YS5hdHRhY2gmJihhLmF0dGFjaChcImNsaWNrXCIsYyksYS5hdHRhY2goXCJrZXl1cFwiLGMpLGt8fChhLmF0dGFjaChcImZvY3VzXCIsYyksYS5hdHRhY2goXCJibHVyXCIscCkpLGsmJihhLmF0dGFjaChhLnBhZ2VWaXouZXZlbnQsaCxkKSxoKHt9KSkpO2EuYWZ0Yj0xfSkodWVfY3NtLGRvY3VtZW50KTtcblxuXG51ZV9jc20udWUuc3R1Yih1ZSxcImltcHJlc3Npb25cIik7XG5cblxudWUuc3R1Yih1ZSxcInRyaWdnZXJcIik7XG5cblxuXG5pZih3aW5kb3cudWUmJnVldCkgeyB1ZXQoJ2JiJyk7IH1cblxufVxuXHUwMDNDL3NjcmlwdD5cdTAwM0MhLS0gc3A6ZmVhdHVyZTpoZWFkLWNsb3NlIC0tPlxuXHUwMDNDc2NyaXB0Plxud2luZG93LlAgJiYgUC5yZWdpc3RlcignYmInKTtcbmlmICh0eXBlb2YgdWVzID09PSAnZnVuY3Rpb24nKSB7XG4gIHVlcygndDAnLCAncG9ydGFsLWJiJywgbmV3IERhdGUoKSk7XG4gIHVlcygnY3RiJywgJ3BvcnRhbC1iYicsIDEpO1xufVxuXHUwMDNDL3NjcmlwdD5cblx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIgYXN5bmM9XCJcIiBjaGFyc2V0PVwidXRmLThcIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvYXBlL3NmL2Rlc2t0b3AvREFzZi0xLjUwLjIyOGY5OGMuX1Y0NTE5NTA5MTBfLmpzP2NzbV9hdHRyaWJ1dGlvbj1BUEUtU2FmZUZyYW1lXCIgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIj5cdTAwM0Mvc2NyaXB0Plx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIgYXN5bmM9XCJcIiBjcm9zc29yaWdpbj1cImFub255bW91c1wiIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS80MTdRalltTXRCTC5qcz9BVUlDbGllbnRzL0FtYXpvblBvcG92ZXJzQVVJU2hpbSN1c1wiPlx1MDAzQy9zY3JpcHQ+XHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIiBhc3luYz1cIlwiIGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxVkUtQ0dMbHdMLmpzP0FVSUNsaWVudHMvRGV0YWlsUGFnZURlc2t0b3BJbWFnZUJsb2NrTWV0YUFzc2V0IzIzMDY1NC1UMS4yMTA5MDktVDEuMTY5NTkzLVQxXCI+XHUwMDNDL3NjcmlwdD5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiIGFzeW5jPVwiXCIgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvMzFOYjVoWlFpekwuX1JDfDIxUFdzMkxMSUdMLmpzLDExOFNheTdISVpMLmpzLDIxRTJhSURqNkRMLmpzLDQxLTV5Q0lKTGtMLmpzLDAxZzJldGFoME5MLmpzLDMxc2VsU3NOKzFMLmpzLDQxM3U5OFhPTlFMLmpzLDIxT1lFQmQ4UFZMLmpzLDUxLTJqZnVveG9MLmpzLDMxNm5WWjFjK2dMLmpzLDAxQWRZTFk5ckhMLmpzLDAxSU9NQ3NWRkNMLmpzLDAxODVJVFYwTTZMLmpzLDQxRGZIR2RYVWVMLmpzLDIxME5qTGstVW9MLmpzLDMxR1NvVXhrVG9MLmpzLDAxVFF5bzBibklMLmpzLDExU1JrWVdjcFBMLmpzLDcxLUVrc1Q0ZWFMLmpzLDAxT3JRNUFYcXNMLmpzLDMxVWpUQXBHT1BMLmpzLDAxTEhKdDVQaXlMLmpzLDMxQWMtY1ErWldMLmpzLDExb0dhb1lnYmRMLmpzLDAxSG1jYkZzbkZMLmpzLDMxc0crTTVRTjVMLmpzLDExQVZSVldUb3VMLmpzLDExTVFxRlBFSytMLmpzLDExRzRjNDNPWnZMLmpzLDExREdjclpzVXdMLmpzLDAxWDJ6aWdYNGtMLmpzLDAxT3R2cHdpa1FMLmpzLDMxcVVkb3hQRThMLmpzLDIxcU9HcWpjTTdMLmpzLDAxWkYrb3ZOZmxMLmpzLDMxWmwtQldFMTBMLmpzLDYxVjFZeWVRSTNMLmpzLDIxWVc5TEtGMnpMLmpzLDIxbXltRU9ORnRMLmpzLDYxbm85SUR0UHJMLmpzLDIxT0pEQVJCaFFMLmpzLDQxcytPQlB4VFBMLmpzLDUxSjZ4alhXY3RMLmpzLDAxSVdVYjI5UTRMLmpzLDExem9BcWtkMlVMLmpzLDAxSnpFMy1EZkxMLmpzLDAxWWl2ZWxZVzVMLmpzLDAxNlFGV0FBZE1MLmpzLDQxZjdaWURQaDZMLmpzLDAxMWJYMmNpSmJMLmpzLDIxMjIyQityQXpMLmpzLDAxZ3Azb3FwYjVMLmpzLDMxU1ZoVUh6MWJMLmpzLDIxbnNmcmprWmFMLmpzLDAxdThDaEZXZ2RMLmpzLDAxTktHYVcwdzVMLmpzLDAxckVtZExMcHhMLmpzLDMxYkVYblZnbEtMLmpzLDAxcmQzVVkzWjhMLmpzLDAxaGtzZU9YajZMLmpzLDAxbWI1c0t3Tk1MLmpzLDAxU2Q0SmdIOU1MLmpzLDMxWlM1VFFWV0RMLmpzLDUxWjZJcHFjUENMLmpzLDAxSUMtZ0JLeVlMLmpzLDUxSVZEVjhNSWlMLmpzLDIxcllVak1rMTZMLmpzLDAxT0kwUnpweGZMLmpzXy5qcz9BVUlDbGllbnRzL1VTU29mdGxpbmVzRGV0YWlsUGFnZU1ldGFBc3NldF9UVVJCT19ERVNLVE9QI2Rlc2t0b3AudXMuMjEzNDk4LVQxLjE2NzE2Mi1UMS4yMTU0ODUtVDEuMjEwNTQ3LVQxLjE5NTQwNi1DLjIyNzk0OC1UMS4xODM1MTEtVDEuMTUzNjYyLVQxLjEwMzA2MS1UMS4yMjEzMzAtVDEuMTIzMzkyLVQxLjIzMjAwMi1UMS4yMDA2MTYtVDEuMTczOTcxLVQxLjE4NDg4OC1UMS4xMzE5MDAtVDEuMTg0NjYwLUMuMTYyOTA5LVQxLjE1NTE3NS1UMS4yMTIyMTMtVDEuMjEzMDY2LVQxLjIwNzgyNi1UMS4xNDQyMDEtVDEuMjIxMDA5LVQxLjEyNjMzMS1UMS4xNTYzOTEtVDEuMTg4MjEzLVQxLjE3OTc4OS1UMS4xMDkzNzgtVDEuMTQ3OTU3LVQxLjE1NDAzMS1UMy4xOTg4OTgtQy4yMDA5NjMtVDEuMjI0NzIyLVQxLjE2OTU5My1UMS4xODE1NjEtVDEuMTg3NTU1LVQxXCI+XHUwMDNDL3NjcmlwdD5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiIGFzeW5jPVwiXCIgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvMzFjeE45WkNXa0wuanM/QVVJQ2xpZW50cy9EZXRhaWxQYWdlTWlyYWlBc3NldHMjMTUwMTUwLVQxXCI+XHUwMDNDL3NjcmlwdD5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiIGFzeW5jPVwiXCIgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFySEZ1UUI3ZkwuanM/QVVJQ2xpZW50cy9EZXRhaWxQYWdlQWxsT2ZmZXJzRGlzcGxheUFzc2V0cyMyMzA2OTctVDFcIj5cdTAwM0Mvc2NyaXB0Plx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIgYXN5bmM9XCJcIiBjcm9zc29yaWdpbj1cImFub255bW91c1wiIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MTRpaHhRRFdwTC5fUkN8MTEtQlpFSjhsbkwuanMsNjFHUTlJZEs3SEwuanMsMjFPZjAtOUhQQ0wuanMsMDEyRlZjMzEzMUwuanMsMTE5S0FXbEhVNkwuanMsNTF4TDJRTHY0WUwuanMsMTFBSGxRaFBSakwuanMsMDE2aUhncEY3NEwuanMsMTFhTllGRlM1aEwuanMsMTE2dGd3OVRTYUwuanMsMjExLXA0R1JVQ0wuanMsMDFQb0xYQkRYV0wuanMsNjFUcWdzdDE4dEwuanMsMTFCT2d2bm5udEwuanMsMzFVV3VQZ3RUdEwuanMsMDFycGF1VGVwNEwuanMsMDFpeXh1U0dqNEwuanMsMDFvR29FVUYxUEwuanNfLmpzP0FVSUNsaWVudHMvQW1hem9uVUkjMTkyMzM4LVQxLjIwMjA1MS1UMVwiPlx1MDAzQy9zY3JpcHQ+XHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIiBhc3luYz1cIlwiIGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzQxSU1RR2pwZ21MLmpzP0FVSUNsaWVudHMvQ2FyZEpzUnVudGltZUJ1enpDb3B5QnVpbGRcIj5cdTAwM0Mvc2NyaXB0Plx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIgYXN5bmM9XCJcIiBjcm9zc29yaWdpbj1cImFub255bW91c1wiIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MStSME94YVNETC5qcz9BVUlDbGllbnRzL1ZTRVJlbGF0ZWRWaWRlb3NDbGllbnRBc3NldHNcIj5cdTAwM0Mvc2NyaXB0Plx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIgYXN5bmM9XCJcIiBjcm9zc29yaWdpbj1cImFub255bW91c1wiIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS8wMUluWWxNaGc0TC5fUkN8MDF4NGdpVHkrdUwuanMsNDExaWQxMFl5VkwuanMsMDFyOUxwVDZwYkwuanMsNDFvUFJBMmd4WkwuanMsMTF5QXFxWHpLWkwuanMsODFoVURBd0tNQkwuanMsNjFlQlFHVUg4OUwuanMsMDFoU2dlYTRpVkwuanMsMDE2TnNoQ2JlUEwuanMsMDFOK1RKRE00Z0wuanNfLmpzP0FVSUNsaWVudHMvQnJpbGFcIj5cdTAwM0Mvc2NyaXB0Plx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIgYXN5bmM9XCJcIiBjcm9zc29yaWdpbj1cImFub255bW91c1wiIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS8zMTElMkJOVWlsampMLl9SQ3w1MUZoRGxQd0MtTC5qc18uanM/QVVJQ2xpZW50cy9Bc2tBdWlBc3NldHMjMTU1MjQ4LVQxLjE2MTI4OC1UMS4yMDY1MzItVDEuMTg4ODQ3LVQxXCI+XHUwMDNDL3NjcmlwdD5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiIGFzeW5jPVwiXCIgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvMTFvbWpKaHdzcUwuanM/QVVJQ2xpZW50cy9EZXRhaWxQYWdlTGF6eUxvYWRMaWJBc3NldHNcIj5cdTAwM0Mvc2NyaXB0Plx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIgYXN5bmM9XCJcIiBjcm9zc29yaWdpbj1cImFub255bW91c1wiIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS8zMWxLaUpybGhaTC5fUkN8MTF0WGU5OXlXQkwuanMsMDEtNE1ic0hNV0wuanMsMTFnRmlZZTdLYkwuanMsMjE3UG5ISXlseEwuanNfLmpzP0FVSUNsaWVudHMvRGVza3RvcE1lZGxleUZpbHRlcmluZ01ldGFBc3NldFwiPlx1MDAzQy9zY3JpcHQ+XHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIiBhc3luYz1cIlwiIGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzMxJTJCWUpta082WkwuanM/QVVJQ2xpZW50cy9QYWdlUmVmcmVzaEFzc2V0IzEyMzM5Mi1UMVwiPlx1MDAzQy9zY3JpcHQ+XHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIiBhc3luYz1cIlwiIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS92YXAvdmlkZW8vYWlyeTIvcHJvZC8yLjAuMTQ2MC4wL2pzL2Fpcnkuc2tpbi5fQ0I1MTMwNjY1ODlfLmpzXCI+XHUwMDNDL3NjcmlwdD5cdTAwM0NsaW5rIHJlbD1cInN0eWxlc2hlZXRcIiBocmVmPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL3ZhcC92aWRlby9haXJ5Mi9wcm9kLzIuMC4xNDYwLjAvY3NzL2JlYWNvbi5fQ0I1MTMwNjY1ODlfLmNzc1wiPlx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIgYXN5bmM9XCJcIiBjcm9zc29yaWdpbj1cImFub255bW91c1wiIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS80MUphQUsyaWJPTC5fUkN8NzE2WGpXb0gzK0wuanMsNjFxV240SEZ0dUwuanMsNDFXOW9oQTBlK0wuanMsMTF2ck5rYmRjdkwuanMsMjFTSGQ5ZzJMQUwuanMsMzF4aXl5V2cxa0wuanMsNTFZZVJjOFVLMUwuanMsMzFzNm54NFJudEwuanNfLmpzP0FVSUNsaWVudHMvQW1hem9uTmF2aWdhdGlvbkRlc2t0b3BNZXRhQXNzZXQjZGVza3RvcFwiPlx1MDAzQy9zY3JpcHQ+XHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIiBhc3luYz1cIlwiIGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzExVmJWJTJCJTJCS2hRTC5qcz9BVUlDbGllbnRzL1JldGFpbFdlYnNpdGVPdmVybGF5QVVJQXNzZXRzXCI+XHUwMDNDL3NjcmlwdD5cdTAwM0NzdHlsZT4ucy1zdWdnZXN0aW9uIHsgcGFkZGluZzogOHB4IDEwcHg7IGZvbnQtc2l6ZTogMTZweDsgZm9udC1mYW1pbHk6IFwiQW1hem9uIEVtYmVyXCI7IGN1cnNvcjogcG9pbnRlcjsgfVx1MDAzQy9zdHlsZT5cdTAwM0MvaGVhZD5cdTAwM0MhLS0gc3A6ZmVhdHVyZTpzdGFydC1ib2R5IC0tPlxuXHUwMDNDYm9keSBjbGFzcz1cImEtbS11cyBhLWF1aV8xNTI4NTItYyBhLWF1aV8xNTcxNDEtYyBhLWF1aV8xNTg2MTMtdDEgYS1hdWlfNzI1NTQtYyBhLWF1aV9kcm9wZG93bl8xODc5NTktYyBhLWF1aV9wY2lfcmlza19iYW5uZXJfMjEwMDg0LWMgYS1hdWlfcGVyZl8xMzAwOTMtYyBhLWF1aV90bnJfdjJfMTgwODM2LWMgYS1hdWlfdXhfMTQ1OTM3LWMgYS1tZXRlci1hbmltYXRlXCI+XHUwMDNDZGl2IGlkPVwiYXBfY29udGFpbmVyXCI+XHUwMDNDL2Rpdj5cdTAwM0NpZnJhbWUgZnJhbWVib3JkZXI9XCIwXCIgdGFiaW5kZXg9XCItMVwiIHNyYz1cImphdmFzY3JpcHQ6dm9pZChmYWxzZSlcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjA7ZmlsdGVyOkFscGhhKE9wYWNpdHk9JzAnKTtvcGFjaXR5OjA7XCI+XHUwMDNDL2lmcmFtZT5cdTAwM0NpZnJhbWUgZnJhbWVib3JkZXI9XCIwXCIgdGFiaW5kZXg9XCItMVwiIHNyYz1cImphdmFzY3JpcHQ6dm9pZChmYWxzZSlcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjA7ZmlsdGVyOkFscGhhKE9wYWNpdHk9JzAnKTtvcGFjaXR5OjA7XCI+XHUwMDNDL2lmcmFtZT5cdTAwM0NpZnJhbWUgZnJhbWVib3JkZXI9XCIwXCIgdGFiaW5kZXg9XCItMVwiIHNyYz1cImphdmFzY3JpcHQ6dm9pZChmYWxzZSlcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjA7ZmlsdGVyOkFscGhhKE9wYWNpdHk9JzAnKTtvcGFjaXR5OjA7XCI+XHUwMDNDL2lmcmFtZT5cdTAwM0NkaXYgaWQ9XCJhLXBhZ2VcIj5cdTAwM0NzY3JpcHQgdHlwZT1cImEtc3RhdGVcIiBkYXRhLWEtc3RhdGU9XCJ7JnF1b3Q7a2V5JnF1b3Q7OiZxdW90O2Etd2xhYi1zdGF0ZXMmcXVvdDt9XCI+e1wiQVVJXzE1NzE0MVwiOlwiQ1wiLFwiQVVJXzE1Mjg1MlwiOlwiQ1wiLFwiQVVJX1ROUl9WMl8xODA4MzZcIjpcIkNcIixcIkFVSV9VWF8xNDU5MzdcIjpcIkNcIixcIkFVSV8xNTg2MTNcIjpcIlQxXCIsXCJBVUlfNzI1NTRcIjpcIkNcIixcIkFVSV9EUk9QRE9XTl8xODc5NTlcIjpcIkNcIixcIkFVSV9QQ0lfUklTS19CQU5ORVJfMjEwMDg0XCI6XCJDXCIsXCJBVUlfUEVSRl8xMzAwOTNcIjpcIkNcIn1cdTAwM0Mvc2NyaXB0Plx1MDAzQ3NjcmlwdD50eXBlb2YgdWV4ID09PSAnZnVuY3Rpb24nICYmIHVleCgnbGQnLCAncG9ydGFsLWJiJywge3diOiAxfSlcdTAwM0Mvc2NyaXB0PiAgICBcdTAwM0NpbWcgaGVpZ2h0PVwiMVwiIHdpZHRoPVwiMVwiIHN0eWxlPVwiZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuO1wiIHNyYz1cIi8vZmxzLW5hLmFtYXpvbi5jb20vMS9iYXRjaC8xL09QL0FUVlBES0lLWDBERVI6MTQ1LTg5NzUzOTAtNTA2NDExMzo0NzVFMzRKUVY5Rk5QSEo5U1NURCR1ZWRhdGE9czolMkZncCUyRnVlZGF0YSUzRnN0YXRpY2IlMjZpZCUzRDQ3NUUzNEpRVjlGTlBISjlTU1REOjBcIiBhbHQ9XCJcIiBvbmxvYWQ9XCJ3aW5kb3cudWVfc2JsICZhbXA7JmFtcDsgd2luZG93LnVlX3NibCgpO1wiPlxuXG5cblx1MDAzQ3NjcmlwdD5cbiFmdW5jdGlvbigpe2Z1bmN0aW9uIG4obix0KXt2YXIgcj1pKG4pO3JldHVybiB0JiYocj1yKFwiaW5zdGFuY2VcIix0KSkscn12YXIgcj1bXSxjPTAsaT1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbj1jKys7cmV0dXJuIHIucHVzaChbdCxbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywwKSxuLHt0aW1lOkRhdGUubm93KCl9XSksaShuKX19O24uX3M9cix0aGlzLmNzYT1ufSgpO1xuaWYgKHdpbmRvdy5jc2EpIHtcbiAgICBjc2EoXCJDb25maWdcIiwge1xuICAgICAgICAnQXBwbGljYXRpb24nOiAnUmV0YWlsJyxcbiAgICAgICAgJ09iZnVzY2F0ZWRNYXJrZXRwbGFjZUlkJzogJ0FUVlBES0lLWDBERVInLFxuICAgICAgICAnRXZlbnRzLlN1c2hpRW5kcG9pbnQnOiAnaHR0cHM6Ly91bmFnaS1uYS5hbWF6b24uY29tLzEvZXZlbnRzL2NvbS5hbWF6b24uY3NtLm5leHVzY2xpZW50LnByb2QnXG4gICAgfSk7XG5cbiAgICBjc2EoXCJFdmVudHNcIikoXCJzZXRFbnRpdHlcIiwge1xuICAgICAgICBwYWdlOiB7cmVxdWVzdElkOiBcIjQ3NUUzNEpRVjlGTlBISjlTU1REXCIsIG1lYW5pbmdmdWw6IFwiaW50ZXJhY3RpdmVcIn0sXG4gICAgICAgIHNlc3Npb246IHtpZDogXCIxNDUtODk3NTM5MC01MDY0MTEzXCJ9XG4gICAgfSk7XG59XG4hZnVuY3Rpb24obil7dmFyIGUsbyx0PW4uY3NhLGk9e30sZj17fSx1PW4uY3NhLl9zLGM9MCxyPXt9LGE9e30scz1zZXRUaW1lb3V0LGw9T2JqZWN0LmtleXM7ZnVuY3Rpb24gZyhuLGkpe3JldHVybiB0KG4saSl9ZnVuY3Rpb24gZChuLGkpe3ZhciB0PWZbbl18fHt9O08odCxpKSxmW25dPXQscyhiLDApfWZ1bmN0aW9uIGgobixpKXtyW25dfHwocltuXT1bXSkscltuXS5wdXNoKGkpfWZ1bmN0aW9uIHAoaSx0KXtpZihpIGluIGEpdChhW2ldKTtlbHNle3ZhciBlPWZ1bmN0aW9uKG4pe3YoaSxlKSx0KG4pfTtoKGksZSl9fWZ1bmN0aW9uIHYobixpKXt2YXIgdD1yW25dO3QmJnQuc3BsaWNlKHQuaW5kZXhPZihpKSwxKX1mdW5jdGlvbiBtKG4pe2lmKGkuREVCVUcpdGhyb3cgbn1mdW5jdGlvbiB3KCl7cmV0dXJuIE1hdGguYWJzKDQyOTQ5NjcyOTUqTWF0aC5yYW5kb20oKXwwKS50b1N0cmluZygzNil9ZnVuY3Rpb24gYigpe2Zvcih2YXIgbj0wO25cdTAwM0N1Lmxlbmd0aDspe3ZhciBpPXVbbl0sdD1pWzBdaW4gZjtpZighdCYmIW8pcmV0dXJuIHZvaWQoYz1pLmxlbmd0aCk7dD8odS5zcGxpY2UoYz1uLDEpLFMoaSkpOm4rK319ZnVuY3Rpb24gUyhuKXt2YXIgYXJndW1lbnRzLGk9ZltuWzBdXSx0PShhcmd1bWVudHM9blsxXSlbMF07aWYoIWl8fCFpW3RdKXJldHVybiBtKFwiVW5kZWZpbmVkIGZ1bmN0aW9uOiBcIitpK1wiL1wiK3QpO2U9blszXSxmW25bMl1dPWlbdF0uYXBwbHkoaSxhcmd1bWVudHMuc2xpY2UoMSkpfHx7fSxlPTB9ZnVuY3Rpb24gRCgpe289MSxiKCl9ZnVuY3Rpb24gTyhpLHQpe2wodCkuZm9yRWFjaChmdW5jdGlvbihuKXtpW25dPXRbbl19KX1wKFwiJGJlZm9yZXVubG9hZFwiLEQpLGQoXCJDb25maWdcIix7aW5zdGFuY2U6ZnVuY3Rpb24obil7TyhpLG4pfX0pLHQucGx1Z2luPWZ1bmN0aW9uKG4pe24oZyl9LGcuY29uZmlnPWksZy5yZWdpc3Rlcj1kLGcub249aCxnLnJlbW92ZUxpc3RlbmVyPXYsZy5vbmNlPXAsZy5lbWl0PWZ1bmN0aW9uKG4saSl7KHJbbl18fFtdKS5mb3JFYWNoKGZ1bmN0aW9uKG4pe24oaSl9KSxhW25dPWl8fHt9fSxnLlVVSUQ9ZnVuY3Rpb24oKXtyZXR1cm5bdygpLHcoKSx3KCksdygpXS5qb2luKFwiLVwiKX0sZy50aW1lPWZ1bmN0aW9uKG4pe3ZhciBpPWU/bmV3IERhdGUoZS50aW1lKTpuZXcgRGF0ZTtyZXR1cm5cIklTT1wiPT09bj9pLnRvSVNPU3RyaW5nKCk6aS5nZXRUaW1lKCl9LGcuZXJyb3I9bSwoZy5nbG9iYWw9bikuY3NhLl9zLnB1c2g9ZnVuY3Rpb24obil7blswXWluIGYmJighdS5sZW5ndGh8fG8pP1Mobik6dS5zcGxpY2UoYysrLDAsbil9LGIoKSxzKGZ1bmN0aW9uKCl7cyhELGkuU2tpcE1pc3NpbmdQbHVnaW5zVGltZW91dHx8NWUzKX0sMSl9KFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3c/d2luZG93Omdsb2JhbCk7XG5jc2EucGx1Z2luKGZ1bmN0aW9uKHQpe3ZhciBlO2Z1bmN0aW9uIG4oKXtpZighZSl0cnl7ZT10Lmdsb2JhbC5sb2NhbFN0b3JhZ2V8fHt9fWNhdGNoKHQpe2U9e319fXQuc3RvcmU9ZnVuY3Rpb24odCxjKXt0cnl7aWYobigpLCF0KXJldHVybiBPYmplY3Qua2V5cyhlKTtpZighYylyZXR1cm4gZVt0XTtlW3RdPWN9Y2F0Y2godCl7fX0sdC5kZWxldGVTdG9yZWQ9ZnVuY3Rpb24odCl7dHJ5e24oKSxkZWxldGUgZVt0XX1jYXRjaCh0KXt9fX0pO1xuY3NhLnBsdWdpbihmdW5jdGlvbihhKXt2YXIgdCxlPWEuZ2xvYmFsLG49YShcIkV2ZW50c1wiKSxyPWUubG9jYXRpb24sbz1lLmRvY3VtZW50LGk9ZS5hZGRFdmVudExpc3RlbmVyLGw9YS5lbWl0O2Z1bmN0aW9uIGQoKXt2YXIgZT0hIXQ7ZSYmKGwoXCIkYmVmb3JlUGFnZVRyYW5zaXRpb25cIiksbChcIiRwYWdlVHJhbnNpdGlvblwiKSksdD1hLlVVSUQoKSxuKFwic2V0RW50aXR5XCIse3BhZ2U6e3NjaGVtYUlkOlwiY3NhLlBhZ2VFbnRpdHkuMVwiLGlkOnQsdXJsOnIuaHJlZixzZXJ2ZXI6ci5ob3N0bmFtZSxwYXRoOnIucGF0aG5hbWUscmVmZXJyZXI6by5yZWZlcnJlcix0aXRsZTpvLnRpdGxlfX0pLGUmJmwoXCIkYWZ0ZXJQYWdlVHJhbnNpdGlvblwiKX1mdW5jdGlvbiBmKCl7bChcIiRsb2FkXCIpLGwoXCIkYWZ0ZXJsb2FkXCIpfWZ1bmN0aW9uIHMoKXtsKFwiJGJlZm9yZXVubG9hZFwiKSxsKFwiJHVubG9hZFwiKSxsKFwiJGFmdGVydW5sb2FkXCIpfXImJm8mJihpJiYoaShcImJlZm9yZXVubG9hZFwiLHMpLGkoXCJwYWdlaGlkZVwiLHMpLFwiY29tcGxldGVcIj09PW8ucmVhZHlTdGF0ZT9mKCk6aShcImxvYWRcIixmKSksYS5yZWdpc3RlcihcIlNQQVwiLHtuZXdQYWdlOmR9KSxkKCkpfSk7XG5jc2EucGx1Z2luKGZ1bmN0aW9uKHQpe3ZhciBpPVwiVU5LTk9XTlwiLGE9XCJpZFwiLGU9XCJtZXNzYWdlSWRcIixjPVwidGltZXN0YW1wXCIsdT1cInByb2R1Y2VySWRcIixvPVwiYXBwbGljYXRpb25cIixmPVwib2JmdXNjYXRlZE1hcmtldHBsYWNlSWRcIixzPVwiZW50aXRpZXNcIixyPVwic2NoZW1hSWRcIixsPVwidmVyc2lvblwiLGQ9XCJhdHRyaWJ1dGVzXCIscD10LmNvbmZpZyxnPXQoXCJUcmFuc3BvcnRcIiksdj17fSxJPWZ1bmN0aW9uKG4sdCl7T2JqZWN0LmtleXMobikuZm9yRWFjaCh0KX07ZnVuY3Rpb24gbSh0LGksZSl7SShpLGZ1bmN0aW9uKG4pe24gaW4gdHx8KHRbbl09e3ZlcnNpb246MX0pLGIodFtuXSxpW25dLGUpfSl9ZnVuY3Rpb24gYih0LGksZSl7SShpLGZ1bmN0aW9uKG4peyFlJiZuIT09YXx8KHRbbl09aVtuXSl9KX1mdW5jdGlvbiBoKGMsbixvKXtJKG4sZnVuY3Rpb24obil7dmFyIHQ9Y1tuXTtpZih0W3JdKXt2YXIgaT17fSxlPXt9O0UoaSksaVthXT10W2FdLGlbdV09dFt1XXx8byxpW3JdPXRbcl0saVtsXT10W2xdKyssYihpW2RdPWUsdCwxKSxPKGUpLGcoXCJsb2dcIixpKX19KX1mdW5jdGlvbiBFKG4pe25bY109bltjXXx8dC50aW1lKFwiSVNPXCIpLG5bZV09dC5VVUlEKCksbltvXT1wLkFwcGxpY2F0aW9ufHxpLG5bZl09cC5PYmZ1c2NhdGVkTWFya2V0cGxhY2VJZHx8aX1mdW5jdGlvbiBPKG4pe2RlbGV0ZSBuW2xdLGRlbGV0ZSBuW3JdLGRlbGV0ZSBuW3VdfWZ1bmN0aW9uIGsoYyl7dmFyIG89e307dGhpcy5sb2c9ZnVuY3Rpb24obix0KXt2YXIgaT17fSxlPSh0fHx7fSkuZnVsbDtFKG4pLG0oaSx2LGUpLG0oaSxvLGUpLG0oaSxuW3NdfHx7fSxlKSxJKGksZnVuY3Rpb24obil7TyhpW25dKX0pLG5bdV09Y1t1XSxuW3NdPWksZyhcImxvZ1wiLG4pfSx0aGlzLnNldEVudGl0eT1mdW5jdGlvbihuKXttKG8sbiwxKSxoKG8sbixjW3VdKX19dC5vbihcIiRwYWdlVHJhbnNpdGlvblwiLGZ1bmN0aW9uKCl7dj17fX0pLHQucmVnaXN0ZXIoXCJFdmVudHNcIix7c2V0RW50aXR5OmZ1bmN0aW9uKG4pe20odixuLDEpLGgodixuLFwiY3NhXCIpfSxpbnN0YW5jZTpmdW5jdGlvbihuKXtyZXR1cm4gbmV3IGsobil9fSl9KTtcbmNzYS5wbHVnaW4oZnVuY3Rpb24obyl7dmFyIG4saSxyPVwiY3NhLmNhanVuLlwiLGM9XCJwb3N0XCIsdT1cInByZWZsaWdodFwiLGU9XCJhZGRFdmVudExpc3RlbmVyXCIsZj1cInNlbmRCZWFjb25cIix0PVwiVHJhbnNwb3J0XCIscz1vLmdsb2JhbCxhPXMuZG9jdW1lbnQsZD1vLnN0b3JlLGw9by5jb25maWcscD1bXSx2PVtdLGg9bFt0K1wiLkJhdGNoSW50ZXJ2YWxcIl18fDVlMyxnPWxbdCtcIi5NYXhFdmVudHNcIl18fDFlMyx5PTAsbT04NjRlNTtmdW5jdGlvbiBFKGUpe2lmKGdcdTAwM0M9Kyt5KXJldHVybiB5PT09Zz9vLmVycm9yKFwiTWF4IGV2ZW50cyByZWFjaGVkXCIpOjA7dmFyIHQ9ZS50aW1lc3RhbXA7aWYoby50aW1lKCktK25ldyBEYXRlKHQpPm0pcmV0dXJuIG8uZXJyb3IoXCJFdmVudCBpcyB0b28gb2xkOiBcIit0KTtuPW58fHNldFRpbWVvdXQoUyxoKSx2LnB1c2goZSl9ZnVuY3Rpb24gUygpe3AuZm9yRWFjaChmdW5jdGlvbih0KXt2YXIgbj1bXTt2LmZvckVhY2goZnVuY3Rpb24oZSl7dC5hY2NlcHRzKGUpJiZuLnB1c2goZSl9KSxuLmxlbmd0aCYmZnVuY3Rpb24odCxuLGUpe2QoZSxKU09OLnN0cmluZ2lmeShuKSk7ZnVuY3Rpb24gcigpe28uZGVsZXRlU3RvcmVkKGUpfVtmdW5jdGlvbihlLHQsbil7dmFyIHI9cy5uYXZpZ2F0b3J8fHt9LG89cy5jb3Jkb3ZhfHx7fTtpZighcltmXSlyZXR1cm47aWYoXCJpb3NcIj09PW8ucGxhdGZvcm1JZCYmIWkpe2lmKCFlW3VdKXJldHVybjsobmV3IEltYWdlKS5zcmM9ZVt1XSgpLnVybCxpPTF9dmFyIGE9ZVtjXSh0KTtpZighYS50eXBlJiZyW2ZdKGEudXJsLGEuYm9keSkpcmV0dXJuIG4oKSwxfSxmdW5jdGlvbihlLHQsbil7dmFyIHI9ZVtjXSh0KSxvPXIudHlwZSxhPW5ldyBYTUxIdHRwUmVxdWVzdDthLm9ubG9hZD1mdW5jdGlvbigpe2Euc3RhdHVzXHUwMDNDMjk5JiZuKCl9LGEub3BlbihcIlBPU1RcIixyLnVybCksbyYmYS5zZXRSZXF1ZXN0SGVhZGVyKFwiQ29udGVudC1UeXBlXCIsbyk7cmV0dXJuIGEuc2VuZChyLmJvZHkpLDF9XS5zb21lKGZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4gZSh0LG4scil9Y2F0Y2goZSl7fX0pfSh0LG4scitvLlVVSUQoKSl9KSx2PVtdLG49MH1vLnJlZ2lzdGVyKHQse2xvZzpFLHJlZ2lzdGVyOmZ1bmN0aW9uKGUpe3AucHVzaChlKX19KSxvLm9uY2UoXCIkYWZ0ZXJ1bmxvYWRcIixTKSxvLm9uY2UoXCIkYWZ0ZXJsb2FkXCIsZnVuY3Rpb24oKXsoZCgpfHxbXSkuZm9yRWFjaChmdW5jdGlvbihlKXtpZighZS5pbmRleE9mKHIpKXRyeXt2YXIgdD1kKGUpO28uZGVsZXRlU3RvcmVkKGUpLEpTT04ucGFyc2UodCkuZm9yRWFjaChFKX1jYXRjaChlKXt9fSksUygpLGEmJmFbZV0mJmFbZV0oXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsUywhMSl9KSxvLm9uKFwiJGFmdGVyUGFnZVRyYW5zaXRpb25cIixmdW5jdGlvbigpe3k9MH0pfSk7XG5jc2EucGx1Z2luKGZ1bmN0aW9uKG4pe3ZhciB0LHI9bi5jb25maWdbXCJFdmVudHMuU3VzaGlFbmRwb2ludFwiXTt2YXIgaT0vXFwvXFwvKC4qPylcXC8vLmV4ZWMocik7aSYmaVsxXSYmKHQ9XCJodHRwczovL1wiK2lbMV0rXCIvcGluZ1wiKSxuKFwiVHJhbnNwb3J0XCIpKFwicmVnaXN0ZXJcIix7cG9zdDpmdW5jdGlvbihuKXtyZXR1cm4gbj1uLm1hcChmdW5jdGlvbihuKXtyZXR1cm57ZGF0YTpufX0pLHt1cmw6cixib2R5OkpTT04uc3RyaW5naWZ5KHtldmVudHM6bn0pfX0scHJlZmxpZ2h0OmZ1bmN0aW9uKCl7cmV0dXJue3VybDp0fX0sYWNjZXB0czpmdW5jdGlvbigpe3JldHVybiAxfX0pfSk7XG5jc2EucGx1Z2luKGZ1bmN0aW9uKGkpe3ZhciB0LGEsbyxyLGM9aS5jb25maWdbXCJDb250ZW50LkltcHJlc3Npb25NaW5pbXVtVGltZVwiXXx8MWUzLGU9XCJhZGRFdmVudExpc3RlbmVyXCIsZD1cImhpZGRlblwiLG49XCJyZW5kZXJlZFRvXCIscz1uK1wiVmlld2VkXCIsZj1uK1wiTWVhbmluZ2Z1bFwiLHU9bitcIkltcHJlc3NlZFwiLGc9MSxtPTIsbD0zLHY9NCxwPTUsaD02LFQ9NyxJPWkuZ2xvYmFsLFA9aShcIkV2ZW50c1wiLHtwcm9kdWNlcklkOlwiY3NhXCJ9KSx5PUkuZG9jdW1lbnQsYj17fSx3PXt9O2lmKCF5fHwheVtlXXx8dm9pZCAwPT09eVtkXSlyZXR1cm4gRShcIlBhZ2VTdGF0ZUNoYW5nZS4yXCIse3N0YXRlOlwiaWdub3JlZFwifSk7ZnVuY3Rpb24gQyhlKXtpZighYltUXSl7dmFyIG47aWYoYltlXT1pLnRpbWUoKSxlIT09bCYmZSE9PWh8fCh0PXR8fGJbZV0pLHQmJiF5W2RdKWE9YXx8YltlXSwobj17fSlbZl09dC1vLG5bc109YS1vLEUoXCJQYWdlVmlldy40XCIsbikscj1yfHxzZXRUaW1lb3V0KFMsYyk7aWYoZSE9PXAmJmUhPT1nJiZlIT09bXx8KGNsZWFyVGltZW91dChyKSxyPTApLGUhPT1nJiZlIT09bXx8RShcIlBhZ2VSZW5kZXIuM1wiLHt0cmFuc2l0aW9uVHlwZTplPT09Zz9cImhhcmRcIjpcInNvZnRcIn0pLGU9PT1UKShuPXt9KVtmXT10LW8sbltzXT1hLW8sblt1XT1iW2VdLW8sRShcIlBhZ2VJbXByZXNzZWQuMlwiLG4pfX1mdW5jdGlvbiBFKGUsbil7d1tlXXx8KG4uc2NoZW1hSWQ9XCJjc2EuXCIrZSxQKFwibG9nXCIsbix7ZnVsbDoxfSksd1tlXT0xKX1mdW5jdGlvbiBNKCl7Qyh5W2RdP3A6dil9ZnVuY3Rpb24gUygpe0MoVCkscj0wfWZ1bmN0aW9uIFYoKXt2YXIgZT1vP206ZztiPXt9LHc9e30sYT10PTAsbz1pLnRpbWUoKSxDKGUpLE0oKX1mdW5jdGlvbiAkKCl7dmFyIGU9eS5yZWFkeVN0YXRlO1wiaW50ZXJhY3RpdmVcIj09PWUmJkMobCksXCJjb21wbGV0ZVwiPT09ZSYmQyhoKX1WKCkseVtlXShcInZpc2liaWxpdHljaGFuZ2VcIixNLCExKSx5W2VdKFwicmVhZHlzdGF0ZWNoYW5nZVwiLCQsITEpLGkub24oXCIkYWZ0ZXJQYWdlVHJhbnNpdGlvblwiLFYpLGkub25jZShcIiRsb2FkXCIsJCl9KTtcblx1MDAzQy9zY3JpcHQ+XG5cdTAwM0MhLS0gc3A6ZmVhdHVyZTpuYXYtaW5saW5lLWpzIC0tPlxuXHUwMDNDIS0tIEZyb20gcmVtb3RlIGNvbmZpZyB2My0tPlxuXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cbihmdW5jdGlvbihkKXtkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaGVhZGVyXCIpO2Z1bmN0aW9uIGIoZSl7cmV0dXJuW10uc2xpY2UuY2FsbChlKX1mdW5jdGlvbiBjKGYsZSl7cmV0dXJue206ZixhOmIoZSl9fXZhciBhPWZ1bmN0aW9uKGYpe3ZhciBnPXt9O2cuX3NvdXJjZU5hbWU9ZjtnLl9yZXBsYXk9W107Zy5nZXROb3c9ZnVuY3Rpb24oaSxoKXtyZXR1cm4gaH07ZnVuY3Rpb24gZShpLGgsail7aVtqXT1mdW5jdGlvbigpe2cuX3JlcGxheS5wdXNoKGguY29uY2F0KGMoaixhcmd1bWVudHMpKSl9fWcud2hlbj1mdW5jdGlvbigpe3ZhciBpPVtjKFwid2hlblwiLGFyZ3VtZW50cyldO3ZhciBoPXt9O2UoaCxpLFwicnVuXCIpO2UoaCxpLFwiZGVjbGFyZVwiKTtlKGgsaSxcInB1Ymxpc2hcIik7ZShoLGksXCJidWlsZFwiKTtyZXR1cm4gaH07ZShnLFtdLFwiZGVjbGFyZVwiKTtlKGcsW10sXCJidWlsZFwiKTtlKGcsW10sXCJwdWJsaXNoXCIpO2UoZyxbXSxcImltcG9ydEV2ZW50XCIpO2EuX3NoaW1zLnB1c2goZyk7cmV0dXJuIGd9O2EuX3NoaW1zPVtdO2lmKCFkLiROYXYpe2QuJE5hdj1hKFwicmN4LW5hdlwiKX1pZighZC4kTmF2Lm1ha2Upe2QuJE5hdi5tYWtlPWF9fSh3aW5kb3cpKTtcbiROYXYuaW1wb3J0RXZlbnQoJ25hdmJhckpTLWJlYWNvbmJlbHQnKTtcbiROYXYuZGVjbGFyZSgnaW1nLnNwcml0ZScsIHtcbiAgJ3BuZzgnOiAnaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2duby9zcHJpdGVzL2dsb2JhbC1zcHJpdGVfYmx1ZWJlYWNvbi12MS5fQ0IzMjc1MzM1NDBfLnBuZycsXG4gICdwbmczMic6ICdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvZ25vL3Nwcml0ZXMvbmF2LXNwcml0ZS1nbG9iYWxfYmx1ZWJlYWNvbi0xeF9vcHRpbWl6ZWRfbGF5b3V0MS5fQ0I0Njg2NzA3NzRfLnBuZycsXG4gICdwbmczMi0yeCc6ICdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvZ25vL3Nwcml0ZXMvbmF2LXNwcml0ZS1nbG9iYWxfYmx1ZWJlYWNvbi0yeF9vcHRpbWl6ZWRfbGF5b3V0MS5fQ0I0Njg2NzA3NzRfLnBuZydcbn0pO1xuJE5hdi5kZWNsYXJlKCdpbWcudGltZWxpbmUnLCB7XG4gICd0aW1lbGluZS1pY29uLTJ4JzogJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9nbm8vc3ByaXRlcy90aW1lbGluZV9zcHJpdGVfMnguX0NCMjc2MjM5NDA4Xy5wbmcnXG59KTtcbndpbmRvdy5fbmF2YmFyU3ByaXRlVXJsID0gJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9nbm8vc3ByaXRlcy9uYXYtc3ByaXRlLWdsb2JhbF9ibHVlYmVhY29uLTF4X29wdGltaXplZF9sYXlvdXQxLl9DQjQ2ODY3MDc3NF8ucG5nJztcbiROYXYuZGVjbGFyZSgnaW1nLnBpeGVsJywgJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS94LWxvY2FsZS9jb21tb24vdHJhbnNwYXJlbnQtcGl4ZWwuX0NCMzg2OTQyNDY0Xy5naWYnKTtcblx1MDAzQy9zY3JpcHQ+XG5cdTAwM0NpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2duby9zcHJpdGVzL25hdi1zcHJpdGUtZ2xvYmFsX2JsdWViZWFjb24tMXhfb3B0aW1pemVkX2xheW91dDEuX0NCNDY4NjcwNzc0Xy5wbmdcIiBzdHlsZT1cImRpc3BsYXk6bm9uZVwiIGFsdD1cIlwiPlxuXHUwMDNDIS0tW2lmIElFIDZdPlxuXHUwMDNDc3R5bGUgdHlwZT1cInRleHQvY3NzXCI+XHUwMDNDIS0tXG4gICNuYXZiYXIubmF2LXNwcml0ZS12MyAubmF2LXNwcml0ZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9nbm8vc3ByaXRlcy9nbG9iYWwtc3ByaXRlX2JsdWViZWFjb24tdjEuX0NCMzI3NTMzNTQwXy5wbmcpO1xuICB9XG4tLT5cblx1MDAzQyEtLVtlbmRpZl0tLS0tPlxuXHUwMDNDIS0tIE5BVllBQU4gSlMgLS0+XG5cdTAwM0NzY3JpcHQ+XG4od2luZG93LkFtYXpvblVJUGFnZUpTID8gQW1hem9uVUlQYWdlSlMgOiBQKS53aGVuKCduYXZDRicpLmV4ZWN1dGUoZnVuY3Rpb24oKSB7XG4gICh3aW5kb3cuQW1hem9uVUlQYWdlSlMgPyBBbWF6b25VSVBhZ2VKUyA6IFApLmxvYWQuanMoJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS80MUphQUsyaWJPTC5fUkN8NzE2WGpXb0gzK0wuanMsNjFxV240SEZ0dUwuanMsNDFXOW9oQTBlK0wuanMsMTF2ck5rYmRjdkwuanMsMjFTSGQ5ZzJMQUwuanMsMzF4aXl5V2cxa0wuanMsNTFZZVJjOFVLMUwuanMsMzFzNm54NFJudEwuanNfLmpzP0FVSUNsaWVudHMvQW1hem9uTmF2aWdhdGlvbkRlc2t0b3BNZXRhQXNzZXQjZGVza3RvcCcpO1xufSk7XG5cdTAwM0Mvc2NyaXB0PlxuXHUwMDNDIS0tIHNwOmZlYXR1cmU6bmF2YmFyIC0tPlxuXHUwMDNDIS0tIE5BVllBQU4gLS0+XG5cblxuXG5cblxuXG5cblx1MDAzQyEtLVBpbHUgLS0+XG5cblx1MDAzQyEtLSBuYXZtZXQgaW5pdGlhbCBkZWZpbml0aW9uIC0tPlxuXG5cblx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG4gICAgaWYod2luZG93Lm5hdm1ldD09PXVuZGVmaW5lZCkge1xuICAgICAgd2luZG93Lm5hdm1ldD1bXTtcbiAgICAgIGlmICh3aW5kb3cucGVyZm9ybWFuY2UgJiYgd2luZG93LnBlcmZvcm1hbmNlLnRpbWluZyAmJiB3aW5kb3cudWVfdDApIHtcbiAgICAgICAgdmFyIHQgPSB3aW5kb3cucGVyZm9ybWFuY2UudGltaW5nO1xuICAgICAgICB2YXIgbm93ID0gKyBuZXcgRGF0ZSgpO1xuICAgICAgICB3aW5kb3cubmF2bWV0LmJhc2ljID0ge1xuICAgICAgICAgICduZXR3b3JrTGF0ZW5jeSc6ICh0LnJlc3BvbnNlU3RhcnQgLSB0LmZldGNoU3RhcnQpLFxuICAgICAgICAgICduYXZGaXJzdFBhaW50JzogKG5vdyAtIHQucmVzcG9uc2VTdGFydCksXG4gICAgICAgICAgJ05hdlN0YXJ0JzogKG5vdyAtIHdpbmRvdy51ZV90MClcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG5cdTAwM0Mvc2NyaXB0PlxuXG5cblxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPndpbmRvdy5uYXZtZXQudG1wPStuZXcgRGF0ZSgpO1x1MDAzQy9zY3JpcHQ+XG4gIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG4gICAgd2luZG93LnVldCAmJiB1ZXQoJ25zJyk7XG4gICAgd2luZG93Ll9uYXZiYXIgPSAoZnVuY3Rpb24gKG8pIHtcbiAgICAgIG8uY29tcG9uZW50TG9hZGVkID0gby5sb2FkaW5nID0gZnVuY3Rpb24oKXt9O1xuICAgICAgby5icm93c2Vwcm9tb3MgPSB7fTtcbiAgICAgIG8uaXNzUHJvbW9zID0gW107XG4gICAgICByZXR1cm4gbztcbiAgICB9KHdpbmRvdy5fbmF2YmFyIHx8IHt9KSk7XG4gICAgd2luZG93Ll9uYXZiYXIuZGVjbGFyZU9uTG9hZCA9IGZ1bmN0aW9uICgpIHsgd2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdwYWdlLmxvYWQnKTsgfTtcbiAgICBpZiAod2luZG93LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCB3aW5kb3cuX25hdmJhci5kZWNsYXJlT25Mb2FkLCBmYWxzZSk7XG4gICAgfSBlbHNlIGlmICh3aW5kb3cuYXR0YWNoRXZlbnQpIHtcbiAgICAgIHdpbmRvdy5hdHRhY2hFdmVudChcIm9ubG9hZFwiLCB3aW5kb3cuX25hdmJhci5kZWNsYXJlT25Mb2FkKTtcbiAgICB9IGVsc2UgaWYgKHdpbmRvdy4kTmF2KSB7XG4gICAgICAkTmF2LndoZW4oJ3BhZ2UuZG9tUmVhZHknKS5ydW4oXCJPbmxvYWRGYWxsYmFja1NldHVwXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9uYXZiYXIuZGVjbGFyZU9uTG9hZCgpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHdpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnbG9nRXZlbnQuZW5hYmxlZCcsXG4gICAgICAnZmFsc2UnKTtcblxuICAgIHdpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmxpZ2h0bmluZ0RlYWxzJywge30pO1xuICBcdTAwM0Mvc2NyaXB0PlxuXG4gICAgXHUwMDNDc3R5bGUgbWFyaz1cImFib3ZlTmF2SW5qZWN0aW9uQ1NTXCIgdHlwZT1cInRleHQvY3NzXCI+XG4gICAgICBkaXYjbmF2U3dtSG9saWRheS5uYXYtZm9jdXMge2JvcmRlcjogbm9uZTttYXJnaW46IDA7fVxuICAgIFx1MDAzQy9zdHlsZT5cbiAgICBcdTAwM0NzY3JpcHQgbWFyaz1cImFib3ZlTmF2SW5qZWN0aW9uSlNcIiB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG4gICAgICB0cnkge1xuICAgICAgICBpZih3aW5kb3cubmF2bWV0PT09dW5kZWZpbmVkKXdpbmRvdy5uYXZtZXQ9W107IGlmKHdpbmRvdy4kTmF2KSB7ICROYXYud2hlbignJCcsICdjb25maWcnLCAnZmx5b3V0LmFjY291bnRMaXN0JywgJ1NpZ25JblJlZGlyZWN0JywgJ2RhdGFQYW5lbCcpLnJ1bignYWNjb3VudExpc3RSZWRpcmVjdEZpeCcsIGZ1bmN0aW9uICgkLCBjb25maWcsIGZseW91dCwgU2lnbkluUmVkaXJlY3QsIGRhdGFQYW5lbCkgeyBpZiAoIWNvbmZpZy5hY2NvdW50TGlzdCkgeyByZXR1cm47IH0gZmx5b3V0LmdldFBhbmVsKCkub25EYXRhKGZ1bmN0aW9uIChkYXRhKSB7IGlmIChTaWduSW5SZWRpcmVjdCkgeyB2YXIgJGFuY2hvcnMgPSAkKCdbZGF0YS1uYXYtcm9sZT1zaWduaW5dJywgZmx5b3V0LmVsZW0oKSk7ICQuZWFjaCgkYW5jaG9ycywgZnVuY3Rpb24oaSwgYW5jaG9yRWwpIHtTaWduSW5SZWRpcmVjdC5zZXRSZWRpcmVjdFVybCgkKGFuY2hvckVsKSwgbnVsbCwgbnVsbCk7fSk7fX0pO30pOyAkTmF2LndoZW4oJyQnKS5ydW4oJ2RlZmluZUlzQXJyYXknLCBmdW5jdGlvbihqUXVlcnkpIHsgaWYoalF1ZXJ5LmlzQXJyYXk9PT11bmRlZmluZWQpIHsgalF1ZXJ5LmlzQXJyYXk9ZnVuY3Rpb24ocGFyYW0pIHsgaWYocGFyYW0ubGVuZ3RoPT09dW5kZWZpbmVkKSB7IHJldHVybiBmYWxzZTsgfSByZXR1cm4gdHJ1ZTsgfTsgfSB9KTsgJE5hdi5kZWNsYXJlKCdjb25maWcuY2FydEZseW91dERpc2FibGVkJywgJ3RydWUnKTsgJE5hdi53aGVuKCckJywnJEYnLCdjb25maWcnLCdsb2dFdmVudCcsJ3BhbmVscycsJ3Bob25lSG9tZScsJ2RhdGFQYW5lbCcsJ2ZseW91dHMucmVuZGVyUHJvbW8nLCdmbHlvdXRzLnNsb3BweVRyaWdnZXInLCdmbHlvdXRzLmFjY2Vzc2liaWxpdHknLCd1dGlsLm1vdXNlT3V0JywndXRpbC5vbktleScsJ2RlYnVnLnBhcmFtJykuYnVpbGQoJ2ZseW91dHMuYnVpbGRTdWJQYW5lbHMnLGZ1bmN0aW9uKCQsJEYsY29uZmlnLGxvZ0V2ZW50LHBhbmVscyxwaG9uZUhvbWUsZGF0YVBhbmVsLHJlbmRlclByb21vLGNyZWF0ZVNsb3BweVRyaWdnZXIsYTExeUhhbmRsZXIsbW91c2VPdXRVdGlsaXR5LG9uS2V5LGRlYnVnUGFyYW0pe3ZhciBmbHlvdXREZWJ1Zz1kZWJ1Z1BhcmFtKCduYXZGbHlvdXRDbGljaycpO3JldHVybiBmdW5jdGlvbihmbHlvdXQsZXZlbnQpe3ZhciBsaW5rS2V5cz1bXTskKCcubmF2LWl0ZW0nLGZseW91dC5lbGVtKCkpLmVhY2goZnVuY3Rpb24oKXt2YXIgJGl0ZW09JCh0aGlzKTtsaW5rS2V5cy5wdXNoKHtsaW5rOiRpdGVtLHBhbmVsS2V5OiRpdGVtLmF0dHIoJ2RhdGEtbmF2LXBhbmVsa2V5Jyl9KTt9KTtpZihsaW5rS2V5cy5sZW5ndGg9PT0wKXtyZXR1cm47fSB2YXIgdmlzaWJsZT1mYWxzZTt2YXIgJHBhcmVudD0kKCdcdTAwM0NkaXYgY2xhc3M9XFwnbmF2LXN1YmNhdHNcXCc+XHUwMDNDL2Rpdj4nKS5hcHBlbmRUbyhmbHlvdXQuZWxlbSgpKTt2YXIgcGFuZWxHcm91cD1mbHlvdXQuZ2V0TmFtZSgpKydTdWJDYXRzJzt2YXIgaGlkZVRpbWVvdXQ9bnVsbDt2YXIgc2xvcHB5VHJpZ2dlcj1jcmVhdGVTbG9wcHlUcmlnZ2VyKCRwYXJlbnQpO3ZhciBzaG93UGFyZW50PWZ1bmN0aW9uKCl7aWYoaGlkZVRpbWVvdXQpe2NsZWFyVGltZW91dChoaWRlVGltZW91dCk7aGlkZVRpbWVvdXQ9bnVsbDt9IGlmKHZpc2libGUpe3JldHVybjt9IHZhciBoZWlnaHQ9JCgnI25hdi1mbHlvdXQtc2hvcEFsbCcpLmhlaWdodCgpOyAkcGFyZW50LmNzcyh7J2hlaWdodCc6IGhlaWdodH0pOyRwYXJlbnQuYW5pbWF0ZSh7d2lkdGg6J3Nob3cnfSx7ZHVyYXRpb246MjAwLGNvbXBsZXRlOmZ1bmN0aW9uKCl7JHBhcmVudC5jc3Moe292ZXJmbG93Oid2aXNpYmxlJ30pO319KTt2aXNpYmxlPXRydWU7fTt2YXIgaGlkZVBhcmVudE5vdz1mdW5jdGlvbigpeyRwYXJlbnQuc3RvcCgpLmNzcyh7b3ZlcmZsb3c6J2hpZGRlbicsZGlzcGxheTonbm9uZScsd2lkdGg6J2F1dG8nLGhlaWdodDonYXV0byd9KTtwYW5lbHMuaGlkZUFsbCh7Z3JvdXA6cGFuZWxHcm91cH0pO3Zpc2libGU9ZmFsc2U7aWYoaGlkZVRpbWVvdXQpe2NsZWFyVGltZW91dChoaWRlVGltZW91dCk7aGlkZVRpbWVvdXQ9bnVsbDt9fTt2YXIgaGlkZVBhcmVudD1mdW5jdGlvbigpe2lmKCF2aXNpYmxlKXtyZXR1cm47fSBpZihoaWRlVGltZW91dCl7Y2xlYXJUaW1lb3V0KGhpZGVUaW1lb3V0KTtoaWRlVGltZW91dD1udWxsO30gaGlkZVRpbWVvdXQ9c2V0VGltZW91dChoaWRlUGFyZW50Tm93LDEwKTt9O2ZseW91dC5vbkhpZGUoZnVuY3Rpb24oKXtzbG9wcHlUcmlnZ2VyLmRpc2FibGUoKTtoaWRlUGFyZW50Tm93KCk7dGhpcy5lbGVtKCkuaGlkZSgpO30pO3ZhciBhZGRQYW5lbD1mdW5jdGlvbigkbGluayxwYW5lbEtleSl7dmFyIHBhbmVsPWRhdGFQYW5lbCh7Y2xhc3NOYW1lOiduYXYtc3ViY2F0JyxkYXRhS2V5OnBhbmVsS2V5LGdyb3VwczpbcGFuZWxHcm91cF0sc3Bpbm5lcjpmYWxzZSx2aXNpYmxlOmZhbHNlfSk7aWYoIWZseW91dERlYnVnKXt2YXIgbW91c2VvdXQ9bW91c2VPdXRVdGlsaXR5KCk7bW91c2VvdXQuYWRkKGZseW91dC5lbGVtKCkpO21vdXNlb3V0LmFjdGlvbihmdW5jdGlvbigpe3BhbmVsLmhpZGUoKTt9KTttb3VzZW91dC5lbmFibGUoKTt9IHZhciBhMTF5PWExMXlIYW5kbGVyKHtsaW5rOiRsaW5rLG9uRXNjYXBlOmZ1bmN0aW9uKCl7cGFuZWwuaGlkZSgpOyRsaW5rLmZvY3VzKCk7fX0pO3ZhciBsb2dQYW5lbEludGVyYWN0aW9uPWZ1bmN0aW9uKHByb21vSUQsd2xUcmlnZ2Vycyl7dmFyIGxvZ05vdz0kRi5vbmNlKCkub24oZnVuY3Rpb24oKXt2YXIgcGFuZWxFdmVudD0kLmV4dGVuZCh7fSxldmVudCx7aWQ6cHJvbW9JRH0pO2lmKGNvbmZpZy5icm93c2VQcm9tb3MmJiEhY29uZmlnLmJyb3dzZVByb21vc1twcm9tb0lEXSl7cGFuZWxFdmVudC5icD0xO30gbG9nRXZlbnQocGFuZWxFdmVudCk7cGhvbmVIb21lLnRyaWdnZXIod2xUcmlnZ2Vycyk7fSk7aWYocGFuZWwuaXNWaXNpYmxlKCkmJnBhbmVsLmhhc0ludGVyYWN0ZWQoKSl7bG9nTm93KCk7fWVsc2V7cGFuZWwub25JbnRlcmFjdChsb2dOb3cpO319O3BhbmVsLm9uRGF0YShmdW5jdGlvbihkYXRhKXtyZW5kZXJQcm9tbyhkYXRhLnByb21vSUQscGFuZWwuZWxlbSgpKTtsb2dQYW5lbEludGVyYWN0aW9uKGRhdGEucHJvbW9JRCxkYXRhLndsVHJpZ2dlcnMpO30pO3BhbmVsLm9uU2hvdyhmdW5jdGlvbigpe3ZhciBjb2x1bW5Db3VudD0kKCcubmF2LWNvbHVtbicscGFuZWwuZWxlbSgpKS5sZW5ndGg7cGFuZWwuZWxlbSgpLmFkZENsYXNzKCduYXYtY29sY291bnQtJytjb2x1bW5Db3VudCk7c2hvd1BhcmVudCgpO3ZhciAkc3ViQ2F0TGlua3M9JCgnLm5hdi1zdWJjYXQtbGlua3MgPiBhJyxwYW5lbC5lbGVtKCkpO3ZhciBsZW5ndGg9JHN1YkNhdExpbmtzLmxlbmd0aDtpZihsZW5ndGg+MCl7dmFyIGZpcnN0RWxlbWVudExlZnRQb3M9JHN1YkNhdExpbmtzLmVxKDApLm9mZnNldCgpLmxlZnQ7Zm9yKHZhciBpPTE7aVx1MDAzQ2xlbmd0aDtpKyspe2lmKGZpcnN0RWxlbWVudExlZnRQb3M9PT0kc3ViQ2F0TGlua3MuZXEoaSkub2Zmc2V0KCkubGVmdCl7JHN1YkNhdExpbmtzLmVxKGkpLmFkZENsYXNzKCduYXZfbGluZXN0YXJ0Jyk7fX0gaWYoJCgnc3Bhbi5uYXYtdGl0bGUubmF2LWl0ZW0nLHBhbmVsLmVsZW0oKSkubGVuZ3RoPT09MCl7dmFyIGNhdFRpdGxlPSQudHJpbSgkbGluay5odG1sKCkpO2NhdFRpdGxlPWNhdFRpdGxlLnJlcGxhY2UoL3JlZj1zYV9tZW51X3RvcC9nLCdyZWY9c2FfbWVudScpO3ZhciAkc3ViUGFuZWxUaXRsZT0kKCdcdTAwM0NzcGFuIGNsYXNzPVxcJ25hdi10aXRsZSBuYXYtaXRlbVxcJz4nKyBjYXRUaXRsZSsnXHUwMDNDL3NwYW4+Jyk7cGFuZWwuZWxlbSgpLnByZXBlbmQoJHN1YlBhbmVsVGl0bGUpO319ICRsaW5rLmFkZENsYXNzKCduYXYtYWN0aXZlJyk7fSk7cGFuZWwub25IaWRlKGZ1bmN0aW9uKCl7JGxpbmsucmVtb3ZlQ2xhc3MoJ25hdi1hY3RpdmUnKTtoaWRlUGFyZW50KCk7YTExeS5kaXNhYmxlKCk7c2xvcHB5VHJpZ2dlci5kaXNhYmxlKCk7fSk7cGFuZWwub25TaG93KGZ1bmN0aW9uKCl7YTExeS5lbGVtcygkKCdhLCBhcmVhJyxwYW5lbC5lbGVtKCkpKTt9KTtzbG9wcHlUcmlnZ2VyLnJlZ2lzdGVyKCRsaW5rLHBhbmVsKTtpZihmbHlvdXREZWJ1Zyl7JGxpbmsuY2xpY2soZnVuY3Rpb24oKXtpZihwYW5lbC5pc1Zpc2libGUoKSl7cGFuZWwuaGlkZSgpO31lbHNle3BhbmVsLnNob3coKTt9fSk7fSB2YXIgcGFuZWxLZXlIYW5kbGVyPW9uS2V5KCRsaW5rLGZ1bmN0aW9uKCl7aWYodGhpcy5pc0VudGVyKCl8fHRoaXMuaXNTcGFjZSgpKXtwYW5lbC5zaG93KCk7fX0sJ2tleWRvd24nLGZhbHNlKTskbGluay5mb2N1cyhmdW5jdGlvbigpe3BhbmVsS2V5SGFuZGxlci5iaW5kKCk7fSkuYmx1cihmdW5jdGlvbigpe3BhbmVsS2V5SGFuZGxlci51bmJpbmQoKTt9KTtwYW5lbC5lbGVtKCkuYXBwZW5kVG8oJHBhcmVudCk7fTt2YXIgaGlkZVBhcmVudEFuZFJlc2V0VHJpZ2dlcj1mdW5jdGlvbigpe2hpZGVQYXJlbnQoKTtzbG9wcHlUcmlnZ2VyLmRpc2FibGUoKTt9O2Zvcih2YXIgaT0wO2lcdTAwM0NsaW5rS2V5cy5sZW5ndGg7aSsrKXt2YXIgaXRlbT1saW5rS2V5c1tpXTtpZihpdGVtLnBhbmVsS2V5KXthZGRQYW5lbChpdGVtLmxpbmssaXRlbS5wYW5lbEtleSk7fWVsc2V7aXRlbS5saW5rLm1vdXNlb3ZlcihoaWRlUGFyZW50QW5kUmVzZXRUcmlnZ2VyKTt9fX07fSk7fTtcbiAgICAgIH0gY2F0Y2ggKCBlcnIgKSB7XG4gICAgICAgIGlmICggd2luZG93LiROYXYgKSB7XG4gICAgICAgICAgd2luZG93LiROYXYud2hlbignbWV0cmljcycsICdsb2dVZUVycm9yJykucnVuKGZ1bmN0aW9uKG1ldHJpY3MsIGxvZykge1xuICAgICAgICAgICAgbWV0cmljcy5pbmNyZW1lbnQoJ05hdkpTOkFib3ZlTmF2SW5qZWN0aW9uOmVycm9yJyk7XG4gICAgICAgICAgICBsb2coZXJyLnRvU3RyaW5nKCksIHtcbiAgICAgICAgICAgICAgJ2F0dHJpYnV0aW9uJzogJ3JjeC1uYXYnLFxuICAgICAgICAgICAgICAnbG9nTGV2ZWwnOiAnRkFUQUwnXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIFx1MDAzQy9zY3JpcHQ+XG5cbiAgXHUwMDNDbm9zY3JpcHQ+XG4gICAgXHUwMDNDc3R5bGUgdHlwZT1cInRleHQvY3NzXCI+XHUwMDNDIS0tXG4gICAgICAjbmF2YmFyICNuYXYtc2hvcCAubmF2LWE6aG92ZXIge1xuICAgICAgICBjb2xvcjogI2ZmOTkwMDtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICB9XG4gICAgICAjbmF2YmFyICNuYXYtc2VhcmNoIC5uYXYtc2VhcmNoLWZhY2FkZSxcbiAgICAgICNuYXZiYXIgI25hdi10b29scyAubmF2LWljb24sXG4gICAgICAjbmF2YmFyICNuYXYtc2hvcCAubmF2LWljb24sXG4gICAgICAjbmF2YmFyICNuYXYtc3VibmF2IC5uYXYtaGFzQXJyb3cgLm5hdi1hcnJvdyB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgICAjbmF2YmFyICNuYXYtc2VhcmNoIC5uYXYtc2VhcmNoLXN1Ym1pdCxcbiAgICAgICNuYXZiYXIgI25hdi1zZWFyY2ggLm5hdi1zZWFyY2gtc2NvcGUge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIH1cbiAgICAgICNuYXYtc2VhcmNoIC5uYXYtc2VhcmNoLXNjb3BlIHtcbiAgICAgICAgcGFkZGluZzogMCA1cHg7XG4gICAgICB9XG4gICAgICAjbmF2YmFyICNuYXYtc2VhcmNoIC5uYXYtc2VhcmNoLWRyb3Bkb3duIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB0b3A6IDVweDtcbiAgICAgICAgaGVpZ2h0OiAyM3B4O1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIGZpbHRlcjogYWxwaGEob3BhY2l0eSA9IDEwMCk7XG4gICAgICB9XG4gICAgLS0+XHUwMDNDL3N0eWxlPlxuIFx1MDAzQy9ub3NjcmlwdD5cblx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+d2luZG93Lm5hdm1ldC5wdXNoKHtrZXk6J1ByZU5hdicsZW5kOituZXcgRGF0ZSgpLGJlZ2luOndpbmRvdy5uYXZtZXQudG1wfSk7XHUwMDNDL3NjcmlwdD5cblxuXHUwMDNDYSBpZD1cIm5hdi10b3BcIj5cdTAwM0MvYT5cblxuXG5cblxuXHUwMDNDYSBpZD1cInNraXBsaW5rXCIgdGFiaW5kZXg9XCIzXCIgY2xhc3M9XCJza2lwLWxpbmtcIj5Ta2lwIHRvIG1haW4gY29udGVudFx1MDAzQy9hPlxuXG5cblxuXG5cblxuXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj53aW5kb3cubmF2bWV0Lm1haW49K25ldyBEYXRlKCk7XHUwMDNDL3NjcmlwdD5cblxuXHUwMDNDaGVhZGVyIGNsYXNzPVwibmF2LW9wdC1zcHJpdGUgbmF2LWxvY2FsZS11cyBuYXYtbGFuZy1lbiBuYXYtc3NsIG5hdi11bnJlY1wiPlxuICBcdTAwM0NkaXYgaWQ9XCJuYXZiYXJcIiBjZWxfd2lkZ2V0X2lkPVwiTmF2aWdhdGlvbi1kZXNrdG9wLW5hdmJhclwiIHJvbGU9XCJuYXZpZ2F0aW9uXCIgY2xhc3M9XCJuYXYtc3ByaXRlLXYxIGNlbHdpZGdldCBuYXYtYmx1ZWJlYWNvbiBoYW1idXJnZXIgbmF2LXBhY2thcmQtZ2xvdyBuYXYtYTExeS10MVwiPlxuICAgIFxuICAgIFxuICAgIFx1MDAzQ2RpdiBpZD1cIm5hdi1iZWx0XCI+XG4gICAgICBcbiAgICAgIFxuICAgICAgXG4gICAgICBcdTAwM0NkaXYgY2xhc3M9XCJuYXYtbGVmdFwiPlxuICAgICAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPndpbmRvdy5uYXZtZXQudG1wPStuZXcgRGF0ZSgpO1x1MDAzQy9zY3JpcHQ+XG5cblx1MDAzQ2EgaHJlZj1cImphdmFzY3JpcHQ6IHZvaWQoMClcIiBhcmlhLWxhYmVsPVwiT3BlbiBNZW51XCIgaWQ9XCJuYXYtaGFtYnVyZ2VyLW1lbnVcIiByb2xlPVwiYnV0dG9uXCIgdGFiaW5kZXg9XCI1XCI+XHUwMDNDaSBjbGFzcz1cImhtLWljb24gbmF2LXNwcml0ZVwiPlx1MDAzQy9pPlx1MDAzQy9hPlxuXG5cdTAwM0NzY3JpcHQ+XG4gIHZhciBobWVudT1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5hdi1oYW1idXJnZXItbWVudVwiKTtobWVudS5zZXRBdHRyaWJ1dGUoXCJocmVmXCIsXCJqYXZhc2NyaXB0OiB2b2lkKDApXCIpLHdpbmRvdy5uYXZIYW1idXJnZXJNZXRyaWNMb2dnZXI9ZnVuY3Rpb24oKXtpZih3aW5kb3cudWUmJndpbmRvdy51ZS5jb3VudCl7dmFyIGU9XCJOYXY6SG1lbnU6SWNvbkNsaWNrQWN0aW9uUGVuZGluZ1wiO3dpbmRvdy51ZS5jb3VudChlLCh1ZS5jb3VudChlKXx8MCkrMSl9d2luZG93LiROYXYmJiROYXYuZGVjbGFyZShcIm5hdkhNZW51SWNvbkNsaWNrZWRcIiwhMCl9LGhtZW51LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLHdpbmRvdy5uYXZIYW1idXJnZXJNZXRyaWNMb2dnZXIpO1xuICB3aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2hhbWJ1cmdlck1lbnVJY29uQXZhaWxhYmxlT25Mb2FkJywgZmFsc2UpOyAgd2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdoYW1idXJnZXJNZW51V2VibGFiVHJlYXRtZW50JywgJ1QxJyk7XG5cdTAwM0Mvc2NyaXB0PlxuXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj53aW5kb3cubmF2bWV0LnB1c2goe2tleTonSGFtYnVyZ2VyTWVudUljb24nLGVuZDorbmV3IERhdGUoKSxiZWdpbjp3aW5kb3cubmF2bWV0LnRtcH0pO1x1MDAzQy9zY3JpcHQ+XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj53aW5kb3cubmF2bWV0LnRtcD0rbmV3IERhdGUoKTtcdTAwM0Mvc2NyaXB0PlxuICBcdTAwM0NkaXYgaWQ9XCJuYXYtbG9nb1wiPlxuICAgIFx1MDAzQ2EgaHJlZj1cIi9yZWY9bmF2X2xvZ29cIiBjbGFzcz1cIm5hdi1sb2dvLWxpbmtcIiBhcmlhLWxhYmVsPVwiQW1hem9uXCIgdGFiaW5kZXg9XCI2XCI+XG4gICAgICBcdTAwM0NzcGFuIGNsYXNzPVwibmF2LXNwcml0ZSBuYXYtbG9nby1iYXNlXCI+XHUwMDNDL3NwYW4+XG4gICAgICBcdTAwM0NzcGFuIGNsYXNzPVwibmF2LXNwcml0ZSBuYXYtbG9nby1leHRcIj5cdTAwM0Mvc3Bhbj5cbiAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJuYXYtc3ByaXRlIG5hdi1sb2dvLWxvY2FsZVwiPlx1MDAzQy9zcGFuPlxuICAgIFx1MDAzQy9hPlxuICBcdTAwM0MvZGl2PlxuXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj53aW5kb3cubmF2bWV0LnB1c2goe2tleTonTG9nbycsZW5kOituZXcgRGF0ZSgpLGJlZ2luOndpbmRvdy5uYXZtZXQudG1wfSk7XHUwMDNDL3NjcmlwdD5cbiAgICAgIFx1MDAzQy9kaXY+XG4gICAgICBcdTAwM0NkaXYgY2xhc3M9XCJuYXYtcmlnaHRcIj5cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj53aW5kb3cubmF2bWV0LnRtcD0rbmV3IERhdGUoKTtcdTAwM0Mvc2NyaXB0Plx1MDAzQyEtLSBOYXZ5YWFuIFNXTSAtLT5cblx1MDAzQ2RpdiBpZD1cIm5hdi1zd21zbG90XCI+XG4gIFx1MDAzQ2RpdiBpZD1cIm5hdlN3bUhvbGlkYXlcIiBzdHlsZT1cImhlaWdodDogMzlweDsgd2lkdGg6IDQwMHB4OyBvdmVyZmxvdzogaGlkZGVuOyBwb3NpdGlvbjogcmVsYXRpdmU7IFwiPlxuICAgIFx1MDAzQ2EgYXJpYS1sYWJlbD1cIlNob3Agd2l0aCAxMDAlIENvbmZpZGVuY2UuIExlYXJuIE1vcmVcIiBocmVmPVwiL2IvP2llPVVURjgmYW1wO25vZGU9MTc0MTY1NDQwMTEmYW1wO3JlZl89bmF2X3N3bV9BRV9FTl9TV01fQ29uZmlkZW5jZSZhbXA7cGZfcmRfcD05YmZiNzc0OS00MzZmLTQ3M2YtYTgxNi1hMTcwNWYwOTNmZmImYW1wO3BmX3JkX3M9bmF2LXNpdGV3aWRlLW1zZy1leHBvcnQmYW1wO3BmX3JkX3Q9NDIwMSZhbXA7cGZfcmRfaT1uYXZiYXItNDIwMSZhbXA7cGZfcmRfbT1BVFZQREtJS1gwREVSJmFtcDtwZl9yZF9yPTQ3NUUzNEpRVjlGTlBISjlTU1REXCIgY2xhc3M9XCJuYXYtaW1hZ2VIcmVmXCIgdGFiaW5kZXg9XCIyMVwiPlxuICBcdTAwM0NpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2FtYXpvbmdsb2JhbC9pbWFnZXMvRnVqaS9TV00vRW5nbGlzaC8yMDE4L1NlcHRlbWJlci9GdWppX0VOX1NXTV9Db25maWRlbmNlLl9DQjQ4NTg4NDU5OF8ucG5nXCI+XG5cdTAwM0MvYT5cbiAgICAgIFx1MDAzQy9kaXY+XG4gIFxuXHUwMDNDL2Rpdj5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPndpbmRvdy5uYXZtZXQucHVzaCh7a2V5OidTV00nLGVuZDorbmV3IERhdGUoKSxiZWdpbjp3aW5kb3cubmF2bWV0LnRtcH0pO1x1MDAzQy9zY3JpcHQ+XG4gICAgICBcdTAwM0MvZGl2PlxuICAgICAgXHUwMDNDZGl2IGNsYXNzPVwibmF2LWZpbGxcIj5cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj53aW5kb3cubmF2bWV0LnRtcD0rbmV3IERhdGUoKTtcdTAwM0Mvc2NyaXB0PlxuXHUwMDNDZGl2IGlkPVwibmF2LXNlYXJjaFwiPlxuICBcdTAwM0NkaXYgaWQ9XCJuYXYtYmFyLWxlZnRcIj5cdTAwM0MvZGl2PlxuICBcdTAwM0Nmb3JtIGFjY2VwdC1jaGFyc2V0PVwidXRmLThcIiBhY3Rpb249XCIvcy9yZWY9bmJfc2Jfbm9zc1wiIGNsYXNzPVwibmF2LXNlYXJjaGJhclwiIG1ldGhvZD1cIkdFVFwiIG5hbWU9XCJzaXRlLXNlYXJjaFwiIHJvbGU9XCJzZWFyY2hcIj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJuYXYtbGVmdFwiPlxuICAgICAgXHUwMDNDZGl2IGlkPVwibmF2LXNlYXJjaC1kcm9wZG93bi1jYXJkXCI+XG4gICAgICAgIFxuICBcdTAwM0NkaXYgY2xhc3M9XCJuYXYtc2VhcmNoLXNjb3BlIG5hdi1zcHJpdGVcIj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJuYXYtc2VhcmNoLWZhY2FkZVwiIGRhdGEtdmFsdWU9XCJzZWFyY2gtYWxpYXM9YXBzXCI+XG4gICAgICBcdTAwM0NzcGFuIGNsYXNzPVwibmF2LXNlYXJjaC1sYWJlbFwiPkFsbFx1MDAzQy9zcGFuPlxuICAgICAgXHUwMDNDaSBjbGFzcz1cIm5hdi1pY29uXCI+XHUwMDNDL2k+XG4gICAgXHUwMDNDL2Rpdj5cbiAgICBcdTAwM0NzcGFuIGlkPVwic2VhcmNoRHJvcGRvd25EZXNjcmlwdGlvblwiIHN0eWxlPVwiZGlzcGxheTpub25lXCI+U2VsZWN0IHRoZSBkZXBhcnRtZW50IHlvdSB3YW50IHRvIHNlYXJjaCBpblx1MDAzQy9zcGFuPlxuICAgIFx1MDAzQ3NlbGVjdCBhcmlhLWRlc2NyaWJlZGJ5PVwic2VhcmNoRHJvcGRvd25EZXNjcmlwdGlvblwiIGNsYXNzPVwibmF2LXNlYXJjaC1kcm9wZG93biBzZWFyY2hTZWxlY3RcIiBkYXRhLW5hdi1kaWdlc3Q9XCJYYTBHUStwUFEvdGRzVitHbVJXZVhCOFBVRDA9XCIgZGF0YS1uYXYtc2VsZWN0ZWQ9XCIwXCIgaWQ9XCJzZWFyY2hEcm9wZG93bkJveFwiIG5hbWU9XCJ1cmxcIiBzdHlsZT1cImRpc3BsYXk6IGJsb2NrO1wiIHRhYmluZGV4PVwiMThcIiB0aXRsZT1cIlNlYXJjaCBpblwiPlxuICAgICAgICBcdTAwM0NvcHRpb24gc2VsZWN0ZWQ9XCJzZWxlY3RlZFwiIHZhbHVlPVwic2VhcmNoLWFsaWFzPWFwc1wiPkFsbCBEZXBhcnRtZW50c1x1MDAzQy9vcHRpb24+XG4gICAgICAgIFx1MDAzQ29wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1hcnRzLWNyYWZ0cy1pbnRsLXNoaXBcIj5BcnRzICZhbXA7IENyYWZ0c1x1MDAzQy9vcHRpb24+XG4gICAgICAgIFx1MDAzQ29wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1hdXRvbW90aXZlLWludGwtc2hpcFwiPkF1dG9tb3RpdmVcdTAwM0Mvb3B0aW9uPlxuICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCJzZWFyY2gtYWxpYXM9YmFieS1wcm9kdWN0cy1pbnRsLXNoaXBcIj5CYWJ5XHUwMDNDL29wdGlvbj5cbiAgICAgICAgXHUwMDNDb3B0aW9uIHZhbHVlPVwic2VhcmNoLWFsaWFzPWJlYXV0eS1pbnRsLXNoaXBcIj5CZWF1dHkgJmFtcDsgUGVyc29uYWwgQ2FyZVx1MDAzQy9vcHRpb24+XG4gICAgICAgIFx1MDAzQ29wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1zdHJpcGJvb2tzLWludGwtc2hpcFwiPkJvb2tzXHUwMDNDL29wdGlvbj5cbiAgICAgICAgXHUwMDNDb3B0aW9uIHZhbHVlPVwic2VhcmNoLWFsaWFzPWNvbXB1dGVycy1pbnRsLXNoaXBcIj5Db21wdXRlcnNcdTAwM0Mvb3B0aW9uPlxuICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCJzZWFyY2gtYWxpYXM9ZGlnaXRhbC1tdXNpY1wiPkRpZ2l0YWwgTXVzaWNcdTAwM0Mvb3B0aW9uPlxuICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCJzZWFyY2gtYWxpYXM9ZWxlY3Ryb25pY3MtaW50bC1zaGlwXCI+RWxlY3Ryb25pY3NcdTAwM0Mvb3B0aW9uPlxuICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCJzZWFyY2gtYWxpYXM9ZGlnaXRhbC10ZXh0XCI+S2luZGxlIFN0b3JlXHUwMDNDL29wdGlvbj5cbiAgICAgICAgXHUwMDNDb3B0aW9uIHZhbHVlPVwic2VhcmNoLWFsaWFzPWluc3RhbnQtdmlkZW9cIj5QcmltZSBWaWRlb1x1MDAzQy9vcHRpb24+XG4gICAgICAgIFx1MDAzQ29wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1mYXNoaW9uLXdvbWVucy1pbnRsLXNoaXBcIj5Xb21lbidzIEZhc2hpb25cdTAwM0Mvb3B0aW9uPlxuICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCJzZWFyY2gtYWxpYXM9ZmFzaGlvbi1tZW5zLWludGwtc2hpcFwiPk1lbidzIEZhc2hpb25cdTAwM0Mvb3B0aW9uPlxuICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCJzZWFyY2gtYWxpYXM9ZmFzaGlvbi1naXJscy1pbnRsLXNoaXBcIj5HaXJscycgRmFzaGlvblx1MDAzQy9vcHRpb24+XG4gICAgICAgIFx1MDAzQ29wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1mYXNoaW9uLWJveXMtaW50bC1zaGlwXCI+Qm95cycgRmFzaGlvblx1MDAzQy9vcHRpb24+XG4gICAgICAgIFx1MDAzQ29wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1kZWFscy1pbnRsLXNoaXBcIj5EZWFsc1x1MDAzQy9vcHRpb24+XG4gICAgICAgIFx1MDAzQ29wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1ocGMtaW50bC1zaGlwXCI+SGVhbHRoICZhbXA7IEhvdXNlaG9sZFx1MDAzQy9vcHRpb24+XG4gICAgICAgIFx1MDAzQ29wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1raXRjaGVuLWludGwtc2hpcFwiPkhvbWUgJmFtcDsgS2l0Y2hlblx1MDAzQy9vcHRpb24+XG4gICAgICAgIFx1MDAzQ29wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1pbmR1c3RyaWFsLWludGwtc2hpcFwiPkluZHVzdHJpYWwgJmFtcDsgU2NpZW50aWZpY1x1MDAzQy9vcHRpb24+XG4gICAgICAgIFx1MDAzQ29wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1sdWdnYWdlLWludGwtc2hpcFwiPkx1Z2dhZ2VcdTAwM0Mvb3B0aW9uPlxuICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCJzZWFyY2gtYWxpYXM9bW92aWVzLXR2LWludGwtc2hpcFwiPk1vdmllcyAmYW1wOyBUVlx1MDAzQy9vcHRpb24+XG4gICAgICAgIFx1MDAzQ29wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1tdXNpYy1pbnRsLXNoaXBcIj5NdXNpYywgQ0RzICZhbXA7IFZpbnlsXHUwMDNDL29wdGlvbj5cbiAgICAgICAgXHUwMDNDb3B0aW9uIHZhbHVlPVwic2VhcmNoLWFsaWFzPXBldHMtaW50bC1zaGlwXCI+UGV0IFN1cHBsaWVzXHUwMDNDL29wdGlvbj5cbiAgICAgICAgXHUwMDNDb3B0aW9uIHZhbHVlPVwic2VhcmNoLWFsaWFzPXNvZnR3YXJlLWludGwtc2hpcFwiPlNvZnR3YXJlXHUwMDNDL29wdGlvbj5cbiAgICAgICAgXHUwMDNDb3B0aW9uIHZhbHVlPVwic2VhcmNoLWFsaWFzPXNwb3J0aW5nLWludGwtc2hpcFwiPlNwb3J0cyAmYW1wOyBPdXRkb29yc1x1MDAzQy9vcHRpb24+XG4gICAgICAgIFx1MDAzQ29wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz10b29scy1pbnRsLXNoaXBcIj5Ub29scyAmYW1wOyBIb21lIEltcHJvdmVtZW50XHUwMDNDL29wdGlvbj5cbiAgICAgICAgXHUwMDNDb3B0aW9uIHZhbHVlPVwic2VhcmNoLWFsaWFzPXRveXMtYW5kLWdhbWVzLWludGwtc2hpcFwiPlRveXMgJmFtcDsgR2FtZXNcdTAwM0Mvb3B0aW9uPlxuICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCJzZWFyY2gtYWxpYXM9dmlkZW9nYW1lcy1pbnRsLXNoaXBcIj5WaWRlbyBHYW1lc1x1MDAzQy9vcHRpb24+XG4gICAgXHUwMDNDL3NlbGVjdD5cbiAgXHUwMDNDL2Rpdj5cblxuICAgICAgXHUwMDNDL2Rpdj5cbiAgICBcdTAwM0MvZGl2PlxuICAgIFx1MDAzQ2RpdiBjbGFzcz1cIm5hdi1yaWdodFwiPlxuICAgICAgXHUwMDNDZGl2IGNsYXNzPVwibmF2LXNlYXJjaC1zdWJtaXQgbmF2LXNwcml0ZVwiPlxuICAgICAgICBcdTAwM0NzcGFuIGlkPVwibmF2LXNlYXJjaC1zdWJtaXQtdGV4dFwiIGNsYXNzPVwibmF2LXNlYXJjaC1zdWJtaXQtdGV4dCBuYXYtc3ByaXRlXCI+XG4gICAgICAgICAgR29cbiAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgICAgIFx1MDAzQ2lucHV0IHR5cGU9XCJzdWJtaXRcIiBjbGFzcz1cIm5hdi1pbnB1dFwiIHZhbHVlPVwiR29cIiB0YWJpbmRleD1cIjIwXCI+XG4gICAgICBcdTAwM0MvZGl2PlxuICAgIFx1MDAzQy9kaXY+XG4gICAgXHUwMDNDZGl2IGNsYXNzPVwibmF2LWZpbGxcIj5cbiAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cIm5hdi1zZWFyY2gtZmllbGQgXCI+XG4gICAgICAgIFx1MDAzQ2xhYmVsIGlkPVwibmF2LXNlYXJjaC1sYWJlbFwiIGZvcj1cInR3b3RhYnNlYXJjaHRleHRib3hcIiBjbGFzcz1cImFvay1vZmZzY3JlZW5cIj5cbiAgICAgICAgICBTZWFyY2hcbiAgICAgICAgXHUwMDNDL2xhYmVsPlxuICAgICAgICBcdTAwM0NpbnB1dCB0eXBlPVwidGV4dFwiIGlkPVwidHdvdGFic2VhcmNodGV4dGJveFwiIHZhbHVlPVwiXCIgbmFtZT1cImZpZWxkLWtleXdvcmRzXCIgYXV0b2NvbXBsZXRlPVwib2ZmXCIgcGxhY2Vob2xkZXI9XCJcIiBjbGFzcz1cIm5hdi1pbnB1dFwiIGRpcj1cImF1dG9cIiB0YWJpbmRleD1cIjE5XCI+XG4gICAgICBcdTAwM0MvZGl2PlxuICAgICAgXHUwMDNDZGl2IGlkPVwibmF2LWlzcy1hdHRhY2hcIj5cdTAwM0MvZGl2PlxuICAgIFx1MDAzQy9kaXY+XG4gIFx1MDAzQy9mb3JtPlxuXHUwMDNDL2Rpdj5cblx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+d2luZG93Lm5hdm1ldC5wdXNoKHtrZXk6J1NlYXJjaCcsZW5kOituZXcgRGF0ZSgpLGJlZ2luOndpbmRvdy5uYXZtZXQudG1wfSk7XHUwMDNDL3NjcmlwdD5cbiAgICAgIFx1MDAzQy9kaXY+XG4gICAgXHUwMDNDZGl2IGlkPVwibmF2LWZseW91dC1hbmNob3JcIj5cdTAwM0NkaXYgaWQ9XCJuYXYtZmx5b3V0LXByaW1lXCIgY2xhc3M9XCJuYXYtY29yZUZseW91dCBuYXYtZmx5b3V0XCI+XHUwMDNDZGl2IGNsYXNzPVwibmF2LWFycm93XCI+XHUwMDNDZGl2IGNsYXNzPVwibmF2LWFycm93LWlubmVyXCI+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cIm5hdi10ZW1wbGF0ZSBuYXYtZmx5b3V0LWNvbnRlbnQgbmF2LXNwaW5uZXJcIj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGlkPVwibmF2LWZseW91dC1hY2NvdW50TGlzdFwiIGNsYXNzPVwibmF2LWNvcmVGbHlvdXQgbmF2LWZseW91dFwiPlx1MDAzQ2RpdiBjbGFzcz1cIm5hdi1hcnJvd1wiPlx1MDAzQ2RpdiBjbGFzcz1cIm5hdi1hcnJvdy1pbm5lclwiPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJuYXYtdGVtcGxhdGUgbmF2LWZseW91dC1jb250ZW50XCI+XHUwMDNDZGl2IGlkPVwibmF2LWFsLWNvbnRhaW5lclwiPlx1MDAzQ2RpdiBpZD1cIm5hdi1hbC1zaWduaW5cIj5cdTAwM0NkaXYgaWQ9XCJuYXYtZmx5b3V0LXlhLXNpZ25pblwiIGNsYXNzPVwibmF2LWZseW91dC1jb250ZW50XCI+XHUwMDNDYSBocmVmPVwiL2dwL25hdmlnYXRpb24vcmVkaXJlY3Rvci5odG1sL3JlZj1zaWduLWluLXJlZGlyZWN0P2llPVVURjgmYW1wO2Fzc29jaWF0aW9uSGFuZGxlPXVzZmxleCZhbXA7Y3VycmVudFBhZ2VVUkw9aHR0cHMlM0ElMkYlMkZ3d3cuYW1hem9uLmNvbSUyRmRwJTJGQjAxR0tRSTM5MiUzRnJlZl8lM0RuYXZfc2lnbmluJmFtcDtwYWdlVHlwZT1EZXRhaWwmYW1wO3N3aXRjaEFjY291bnQ9JmFtcDt5c2hVUkw9aHR0cHMlM0ElMkYlMkZ3d3cuYW1hem9uLmNvbSUyRmdwJTJGeW91cnN0b3JlJTJGaG9tZSUzRmllJTNEVVRGOCUyNnJlZl8lM0RuYXZfc2lnbmluXCIgcmVsPVwibm9mb2xsb3dcIiBjbGFzcz1cIm5hdi1hY3Rpb24tYnV0dG9uXCIgZGF0YS1uYXYtcm9sZT1cInNpZ25pblwiIGRhdGEtbmF2LXJlZj1cIm5hdl9zaWduaW5cIj5cdTAwM0NzcGFuIGNsYXNzPVwibmF2LWFjdGlvbi1pbm5lclwiPlNpZ24gaW5cdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NkaXYgaWQ9XCJuYXYtZmx5b3V0LXlhLW5ld0N1c3RcIiBjbGFzcz1cIm5hdl9wb3BfbmV3X2N1c3QgbmF2LWZseW91dC1jb250ZW50XCI+TmV3IGN1c3RvbWVyPyBcdTAwM0NhIGhyZWY9XCJodHRwczovL3d3dy5hbWF6b24uY29tL2FwL3JlZ2lzdGVyP19lbmNvZGluZz1VVEY4JmFtcDtvcGVuaWQuYXNzb2NfaGFuZGxlPXVzZmxleCZhbXA7b3BlbmlkLmNsYWltZWRfaWQ9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wJTJGaWRlbnRpZmllcl9zZWxlY3QmYW1wO29wZW5pZC5pZGVudGl0eT1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAlMkZpZGVudGlmaWVyX3NlbGVjdCZhbXA7b3BlbmlkLm1vZGU9Y2hlY2tpZF9zZXR1cCZhbXA7b3BlbmlkLm5zPWh0dHAlM0ElMkYlMkZzcGVjcy5vcGVuaWQubmV0JTJGYXV0aCUyRjIuMCZhbXA7b3BlbmlkLm5zLnBhcGU9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZleHRlbnNpb25zJTJGcGFwZSUyRjEuMCZhbXA7b3BlbmlkLnBhcGUubWF4X2F1dGhfYWdlPTAmYW1wO29wZW5pZC5yZXR1cm5fdG89aHR0cHMlM0ElMkYlMkZ3d3cuYW1hem9uLmNvbSUyRmdwJTJGeW91cnN0b3JlJTJGaG9tZSUzRmllJTNEVVRGOCUyNnJlZl8lM0RuYXZfbmV3Y3VzdFwiIHJlbD1cIm5vZm9sbG93XCIgY2xhc3M9XCJuYXYtYVwiPlN0YXJ0IGhlcmUuXHUwMDNDL2E+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGlkPVwibmF2LWFsLXdpc2hsaXN0XCIgY2xhc3M9XCJuYXYtYWwtY29sdW1uIG5hdi10cGwtaXRlbUxpc3RcIj5cdTAwM0NhIGhyZWY9XCIvZ3AvcmVnaXN0cnkvd2lzaGxpc3Q/aWU9VVRGOCZhbXA7cmVmXz1mbHlvdXRfeWxfaGVhZGVyXCIgY2xhc3M9XCJuYXYtYWwtZmx5b3V0LWhlYWRlclwiIGlkPVwibmF2LWFsLXRpdGxlXCI+XHUwMDNDZGl2IGNsYXNzPVwibmF2LXRpdGxlXCI+WW91ciBMaXN0c1x1MDAzQy9kaXY+XHUwMDNDL2E+XHUwMDNDYSBocmVmPVwiL2dwL3JlZ2lzdHJ5L3dpc2hsaXN0P2llPVVURjgmYW1wO3JlZl89bmF2X3dpc2hsaXN0X2NyZWF0ZSZhbXA7dHJpZ2dlckVsZW1lbnRJRD1jcmVhdGVMaXN0XCIgY2xhc3M9XCJuYXYtbGluayBuYXYtaXRlbVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJuYXYtdGV4dFwiPkNyZWF0ZSBhIExpc3RcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9XCIvZ2N4L0dpZnRzLWZvci1FdmVyeW9uZS9nZmh6Lz9fZW5jb2Rpbmc9VVRGOCZhbXA7cmVmXz1uYXZfd2lzaGxpc3RfZ2ZcIiBjbGFzcz1cIm5hdi1saW5rIG5hdi1pdGVtXCI+XHUwMDNDc3BhbiBjbGFzcz1cIm5hdi10ZXh0XCI+RmluZCBhIEdpZnRcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9XCIvZ3AvQklUP2llPVVURjgmYW1wO2JpdENhbXBhaWduQ29kZT1hMDAzMiZhbXA7cmVmXz1uYXZfd2lzaGxpc3RfYml0X3YyX2EwMDMyXCIgY2xhc3M9XCJuYXYtbGluayBuYXYtaXRlbVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJuYXYtdGV4dFwiPlNhdmUgSXRlbXMgZnJvbSB0aGUgV2ViXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDYSBocmVmPVwiL3dlZGRpbmcvaG9tZT9fZW5jb2Rpbmc9VVRGOCZhbXA7cmVmXz1uYXZfd2lzaGxpc3Rfd3JcIiBjbGFzcz1cIm5hdi1saW5rIG5hdi1pdGVtXCI+XHUwMDNDc3BhbiBjbGFzcz1cIm5hdi10ZXh0XCI+V2VkZGluZyBSZWdpc3RyeVx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj1cIi9iYWJ5LXJlZy9ob21lcGFnZT9fZW5jb2Rpbmc9VVRGOCZhbXA7cmVmXz1uYXZfd2lzaGxpc3RfYnJcIiBjbGFzcz1cIm5hdi1saW5rIG5hdi1pdGVtXCI+XHUwMDNDc3BhbiBjbGFzcz1cIm5hdi10ZXh0XCI+QmFieSBSZWdpc3RyeVx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj1cIi9ncC9naWZ0LWNlbnRyYWwvb3JnYW5pemVyP2llPVVURjgmYW1wO3JlZl89bmF2X3dpc2hsaXN0X2ZhZmdpZnRcIiBjbGFzcz1cIm5hdi1saW5rIG5hdi1pdGVtXCI+XHUwMDNDc3BhbiBjbGFzcz1cIm5hdi10ZXh0XCI+RnJpZW5kcyAmYW1wOyBGYW1pbHkgR2lmdGluZ1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj1cIi9ncC9jbHBmP2llPVVURjgmYW1wO3JlZl89bmF2X3dpc2hsaXN0X3NtaV9zZV95YV9sbGxfbGxcIiBjbGFzcz1cIm5hdi1saW5rIG5hdi1pdGVtXCI+XHUwMDNDc3BhbiBjbGFzcz1cIm5hdi10ZXh0XCI+QW1hem9uU21pbGUgQ2hhcml0eSBMaXN0c1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj1cIi9ncC9wYW50cnkveW91cmxpc3RzP2llPVVURjgmYW1wO3JlZl89bmF2X3dpc2hsaXN0X3BudHJ5X2dub1wiIGNsYXNzPVwibmF2LWxpbmsgbmF2LWl0ZW1cIj5cdTAwM0NzcGFuIGNsYXNzPVwibmF2LXRleHRcIj5QYW50cnkgTGlzdHNcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9XCIvaWRlYXMvc2F2ZXM/X2VuY29kaW5nPVVURjgmYW1wO3JlZl89bmF2X3dpc2hsaXN0X3N0cm1faW5feW91dGlxdWVfbGlzdHNcIiBjbGFzcz1cIm5hdi1saW5rIG5hdi1pdGVtXCI+XHUwMDNDc3BhbiBjbGFzcz1cIm5hdi10ZXh0XCI+WW91ciBIZWFydHNcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9XCIvaWRlYXM/X2VuY29kaW5nPVVURjgmYW1wO3JlZl89bmF2X3dpc2hsaXN0X2lkZWFfbmF2XCIgY2xhc3M9XCJuYXYtbGluayBuYXYtaXRlbVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJuYXYtdGV4dFwiPkV4cGxvcmUgSWRlYSBMaXN0c1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj1cIi9zaG93cm9vbT9fZW5jb2Rpbmc9VVRGOCZhbXA7cmVmXz1uYXZfd2lzaGxpc3Rfc3JtX3lvdXJfZGVza193bFwiIGNsYXNzPVwibmF2LWxpbmsgbmF2LWl0ZW1cIj5cdTAwM0NzcGFuIGNsYXNzPVwibmF2LXRleHRcIj5FeHBsb3JlIFNob3dyb29tXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDYSBocmVmPVwiL3N0eWxlcXVpei8/X2VuY29kaW5nPVVURjgmYW1wO3JlZl89bmF2X3dpc2hsaXN0X3NxX3lhX3lsXCIgY2xhc3M9XCJuYXYtbGluayBuYXYtaXRlbVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJuYXYtdGV4dFwiPlRha2UgdGhlIEhvbWUgU3R5bGUgUXVpelx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGlkPVwibmF2LWFsLXlvdXItYWNjb3VudFwiIGNsYXNzPVwibmF2LWFsLWNvbHVtbiBuYXYtdGVtcGxhdGUgbmF2LWZseW91dC1jb250ZW50IG5hdi10cGwtaXRlbUxpc3RcIj5cdTAwM0NhIGhyZWY9XCIvZ3AvY3NzL2hvbWVwYWdlLmh0bWw/aWU9VVRGOCZhbXA7cmVmXz15YVwiIGNsYXNzPVwibmF2LWFsLWZseW91dC1oZWFkZXJcIj5cdTAwM0NkaXYgY2xhc3M9XCJuYXYtdGl0bGVcIj5Zb3VyIEFjY291bnRcdTAwM0MvZGl2Plx1MDAzQy9hPlx1MDAzQ2EgaHJlZj1cIi9ncC9jc3MvaG9tZXBhZ2UuaHRtbD9pZT1VVEY4JmFtcDtyZWZfPW5hdl95b3VyYWNjb3VudF95YVwiIGNsYXNzPVwibmF2LWxpbmsgbmF2LWl0ZW1cIj5cdTAwM0NzcGFuIGNsYXNzPVwibmF2LXRleHRcIj5Zb3VyIEFjY291bnRcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9XCIvZ3AvY3NzL29yZGVyLWhpc3Rvcnk/aWU9VVRGOCZhbXA7cmVmXz1uYXZfeW91cmFjY291bnRfb3JkZXJzXCIgY2xhc3M9XCJuYXYtbGluayBuYXYtaXRlbVwiIGlkPVwibmF2X3ByZWZldGNoX3lvdXJvcmRlcnNcIj5cdTAwM0NzcGFuIGNsYXNzPVwibmF2LXRleHRcIj5Zb3VyIE9yZGVyc1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj1cIi9ncC9yZWdpc3RyeS93aXNobGlzdD9pZT1VVEY4JmFtcDtyZWZfPW5hdl95b3VyYWNjb3VudF93bCZhbXA7cmVxdWlyZXNTaWduSW49MVwiIGNsYXNzPVwibmF2LWxpbmsgbmF2LWl0ZW1cIj5cdTAwM0NzcGFuIGNsYXNzPVwibmF2LXRleHRcIj5Zb3VyIExpc3RzXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDYSBocmVmPVwiL2dwL3lvdXJzdG9yZT9pZT1VVEY4JmFtcDtyZWZfPW5hdl95b3VyYWNjb3VudF9yZWNzXCIgY2xhc3M9XCJuYXYtbGluayBuYXYtaXRlbVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJuYXYtdGV4dFwiPllvdXIgUmVjb21tZW5kYXRpb25zXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDYSBocmVmPVwiL2dwL3N1YnNjcmliZS1hbmQtc2F2ZS9tYW5hZ2VyL3ZpZXdzdWJzY3JpcHRpb25zP2llPVVURjgmYW1wO3JlZl89bmF2X3lvdXJhY2NvdW50X3Nuc1wiIGNsYXNzPVwibmF2LWxpbmsgbmF2LWl0ZW1cIj5cdTAwM0NzcGFuIGNsYXNzPVwibmF2LXRleHRcIj5Zb3VyIFN1YnNjcmliZSAmYW1wOyBTYXZlIEl0ZW1zXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDYSBocmVmPVwiL3lvdXJtZW1iZXJzaGlwc2FuZHN1YnNjcmlwdGlvbnM/X2VuY29kaW5nPVVURjgmYW1wO3JlZl89bmF2X3lvdXJhY2NvdW50X2RpZ2l0YWxfc3Vic2NyaXB0aW9uc1wiIGNsYXNzPVwibmF2LWxpbmsgbmF2LWl0ZW1cIj5cdTAwM0NzcGFuIGNsYXNzPVwibmF2LXRleHRcIj5NZW1iZXJzaGlwcyAmYW1wOyBTdWJzY3JpcHRpb25zXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDYSBocmVmPVwiL2xvY2Fsc2VydmljZXMveWEvc2VydmljZXJlcXVlc3RzP19lbmNvZGluZz1VVEY4JmFtcDtyZWZfPW5hdl95b3VyYWNjb3VudF9kZXNrdG9wX3Zhc19yZXF1ZXN0bGlzdFwiIGNsYXNzPVwibmF2LWxpbmsgbmF2LWl0ZW1cIj5cdTAwM0NzcGFuIGNsYXNzPVwibmF2LXRleHRcIj5Zb3VyIFNlcnZpY2UgUmVxdWVzdHNcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9XCIvZ3AveW91ci1nYXJhZ2UvP2llPVVURjgmYW1wO3JlZl89bmF2X3lvdXJhY2NvdW50X2F1X3BmX2FzX0dOT1wiIGNsYXNzPVwibmF2LWxpbmsgbmF2LWl0ZW1cIj5cdTAwM0NzcGFuIGNsYXNzPVwibmF2LXRleHRcIj5Zb3VyIEdhcmFnZVx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj1cIi9mYW5zaG9wP19lbmNvZGluZz1VVEY4JmFtcDtyZWZfPW5hdl95b3VyYWNjb3VudF95ZnNcIiBjbGFzcz1cIm5hdi1saW5rIG5hdi1pdGVtXCI+XHUwMDNDc3BhbiBjbGFzcz1cIm5hdi10ZXh0XCI+WW91ciBGYW5zaG9wXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDYSBocmVmPVwiL3lvdXJwZXRzP19lbmNvZGluZz1VVEY4JmFtcDtyZWZfPW5hdl95b3VyYWNjb3VudF9wZXRfcHJvZmlsZXNcIiBjbGFzcz1cIm5hdi1saW5rIG5hdi1pdGVtXCI+XHUwMDNDc3BhbiBjbGFzcz1cIm5hdi10ZXh0XCI+WW91ciBQZXRzXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDYSBocmVmPVwiL21uL2Rjdy9teXguaHRtbD9fZW5jb2Rpbmc9VVRGOCZhbXA7cmVmXz1uYXZfeW91cmFjY291bnRfbXlrXCIgY2xhc3M9XCJuYXYtbGluayBuYXYtaXRlbVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJuYXYtdGV4dFwiPllvdXIgQ29udGVudCBhbmQgRGV2aWNlc1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj1cIi9ncC9kbXVzaWMvbXAzL3BsYXllcj9pZT1VVEY4JmFtcDtyZWZfPW5hdl95b3VyYWNjb3VudF9jbGRwbHlyXCIgY2xhc3M9XCJuYXYtbGluayBuYXYtaXRlbVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJuYXYtdGV4dFwiPllvdXIgTXVzaWMgTGlicmFyeVx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj1cIi9jbG91ZGRyaXZlP19lbmNvZGluZz1VVEY4JmFtcDtyZWZfPW5hdl95b3VyYWNjb3VudF9jbGRkcnZcIiBjbGFzcz1cIm5hdi1saW5rIG5hdi1pdGVtXCI+XHUwMDNDc3BhbiBjbGFzcz1cIm5hdi10ZXh0XCI+WW91ciBBbWF6b24gRHJpdmVcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9XCIvUHJpbWUtSW5zdGFudC1WaWRlby9zL2Jyb3dzZT9fZW5jb2Rpbmc9VVRGOCZhbXA7bm9kZT0yNjc2ODgyMDExJmFtcDtyZWZfPW5hdl95b3VyYWNjb3VudF9waXZcIiBjbGFzcz1cIm5hdi1saW5rIG5hdi1pdGVtXCI+XHUwMDNDc3BhbiBjbGFzcz1cIm5hdi10ZXh0XCI+WW91ciBQcmltZSBWaWRlb1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj1cIi9ncC9raW5kbGUva3Uva3VfY2VudHJhbD9pZT1VVEY4JmFtcDtyZWZfPW5hdl95b3VyYWNjb3VudF9rdVwiIGNsYXNzPVwibmF2LWxpbmsgbmF2LWl0ZW1cIj5cdTAwM0NzcGFuIGNsYXNzPVwibmF2LXRleHRcIj5Zb3VyIEtpbmRsZSBVbmxpbWl0ZWRcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9XCIvZ3AvdmlkZW8vd2F0Y2hsaXN0P2llPVVURjgmYW1wO3JlZl89bmF2X3lvdXJhY2NvdW50X3l3bFwiIGNsYXNzPVwibmF2LWxpbmsgbmF2LWl0ZW1cIj5cdTAwM0NzcGFuIGNsYXNzPVwibmF2LXRleHRcIj5Zb3VyIFdhdGNobGlzdFx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj1cIi9ncC92aWRlby9saWJyYXJ5P2llPVVURjgmYW1wO3JlZl89bmF2X3lvdXJhY2NvdW50X3l2bFwiIGNsYXNzPVwibmF2LWxpbmsgbmF2LWl0ZW1cIj5cdTAwM0NzcGFuIGNsYXNzPVwibmF2LXRleHRcIj5Zb3VyIFZpZGVvIExpYnJhcnlcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9XCIvZ3AvbWFzL3lvdXItYWNjb3VudC9teWFwcHM/aWU9VVRGOCZhbXA7cmVmXz1uYXZfeW91cmFjY291bnRfYWFkXCIgY2xhc3M9XCJuYXYtbGluayBuYXYtaXRlbVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJuYXYtdGV4dFwiPllvdXIgQW5kcm9pZCBBcHBzICZhbXA7IERldmljZXNcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJuYXYtc3ViY2F0c1wiPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgaWQ9XCJuYXYtZmx5b3V0LXNob3BBbGxcIiBjbGFzcz1cIm5hdi1jYXRGbHlvdXQgbmF2LWZseW91dFwiPlx1MDAzQ2RpdiBjbGFzcz1cIm5hdi1hcnJvd1wiPlx1MDAzQ2RpdiBjbGFzcz1cIm5hdi1hcnJvdy1pbm5lclwiPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJuYXYtdGVtcGxhdGUgbmF2LWZseW91dC1jb250ZW50IG5hdi1zcGlubmVyXCI+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBpZD1cIm5hdi1mbHlvdXQtdHJhbnNpZW50Rmx5b3V0XCIgY2xhc3M9XCJuYXYtY29yZUZseW91dCBuYXYtZmx5b3V0XCI+XHUwMDNDZGl2IGNsYXNzPVwibmF2LWFycm93XCI+XHUwMDNDZGl2IGNsYXNzPVwibmF2LWFycm93LWlubmVyXCI+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cIm5hdi10ZW1wbGF0ZSBuYXYtZmx5b3V0LWNvbnRlbnQgbmF2LXNwaW5uZXJcIj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwibmF2LXNpZ25pbi10dCBuYXYtZmx5b3V0XCIgc3R5bGU9XCJkaXNwbGF5OiBibG9jazsgcG9zaXRpb246IGFic29sdXRlOyB0b3A6IDU4cHg7IGxlZnQ6IDY3OC42MDlweDsgb3BhY2l0eTogMTtcIj5cdTAwM0NkaXYgY2xhc3M9XCJuYXYtYXJyb3dcIj5cdTAwM0NkaXYgY2xhc3M9XCJuYXYtYXJyb3ctaW5uZXJcIj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGlkPVwibmF2LXNpZ25pbi10b29sdGlwXCI+XHUwMDNDYSBocmVmPVwiL2dwL25hdmlnYXRpb24vcmVkaXJlY3Rvci5odG1sL3JlZj1zaWduLWluLXJlZGlyZWN0P2llPVVURjgmYW1wO2Fzc29jaWF0aW9uSGFuZGxlPXVzZmxleCZhbXA7Y3VycmVudFBhZ2VVUkw9aHR0cHMlM0ElMkYlMkZ3d3cuYW1hem9uLmNvbSUyRmRwJTJGQjAxR0tRSTM5MiUzRnJlZl8lM0RuYXZfY3VzdHJlY19zaWduaW4mYW1wO3BhZ2VUeXBlPURldGFpbCZhbXA7c3dpdGNoQWNjb3VudD0mYW1wO3lzaFVSTD1odHRwcyUzQSUyRiUyRnd3dy5hbWF6b24uY29tJTJGZ3AlMkZ5b3Vyc3RvcmUlMkZob21lJTNGaWUlM0RVVEY4JTI2cmVmXyUzRG5hdl9jdXN0cmVjX3NpZ25pblwiIGNsYXNzPVwibmF2LWFjdGlvbi1idXR0b25cIiBkYXRhLW5hdi1yb2xlPVwic2lnbmluXCIgZGF0YS1uYXYtcmVmPVwibmF2X2N1c3RyZWNfc2lnbmluXCI+XHUwMDNDc3BhbiBjbGFzcz1cIm5hdi1hY3Rpb24taW5uZXJcIj5TaWduIGluXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDZGl2IGNsYXNzPVwibmF2LXNpZ25pbi10b29sdGlwLWZvb3RlclwiPk5ldyBjdXN0b21lcj8gXHUwMDNDYSBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9hcC9yZWdpc3Rlcj9fZW5jb2Rpbmc9VVRGOCZhbXA7b3BlbmlkLmFzc29jX2hhbmRsZT11c2ZsZXgmYW1wO29wZW5pZC5jbGFpbWVkX2lkPWh0dHAlM0ElMkYlMkZzcGVjcy5vcGVuaWQubmV0JTJGYXV0aCUyRjIuMCUyRmlkZW50aWZpZXJfc2VsZWN0JmFtcDtvcGVuaWQuaWRlbnRpdHk9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wJTJGaWRlbnRpZmllcl9zZWxlY3QmYW1wO29wZW5pZC5tb2RlPWNoZWNraWRfc2V0dXAmYW1wO29wZW5pZC5ucz1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAmYW1wO29wZW5pZC5ucy5wYXBlPWh0dHAlM0ElMkYlMkZzcGVjcy5vcGVuaWQubmV0JTJGZXh0ZW5zaW9ucyUyRnBhcGUlMkYxLjAmYW1wO29wZW5pZC5wYXBlLm1heF9hdXRoX2FnZT0wJmFtcDtvcGVuaWQucmV0dXJuX3RvPWh0dHBzJTNBJTJGJTJGd3d3LmFtYXpvbi5jb20lMkZncCUyRnlvdXJzdG9yZSUyRmhvbWUlM0ZpZSUzRFVURjglMjZyZWZfJTNEbmF2X2N1c3RyZWNfbmV3Y3VzdFwiIGNsYXNzPVwibmF2LWFcIj5TdGFydCBoZXJlLlx1MDAzQy9hPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBpZD1cIm5hdi1mbHlvdXQtaWNwXCIgY2xhc3M9XCJuYXYtY29yZUZseW91dCBuYXYtZmx5b3V0XCI+XHUwMDNDZGl2IGNsYXNzPVwibmF2LWFycm93XCI+XHUwMDNDZGl2IGNsYXNzPVwibmF2LWFycm93LWlubmVyXCI+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cIm5hdi10ZW1wbGF0ZSBuYXYtZmx5b3V0LWNvbnRlbnQgbmF2LXNwaW5uZXJcIj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGlkPVwibmF2LWZseW91dC1pY3AtZm9vdGVyLWZseW91dFwiIGNsYXNzPVwibmF2LWNvcmVGbHlvdXQgbmF2LWZseW91dFwiPlx1MDAzQ2RpdiBjbGFzcz1cIm5hdi1hcnJvd1wiPlx1MDAzQ2RpdiBjbGFzcz1cIm5hdi1hcnJvdy1pbm5lclwiPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJuYXYtdGVtcGxhdGUgbmF2LWZseW91dC1jb250ZW50IG5hdi1zcGlubmVyXCI+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGlkPVwibmF2LWZseW91dC1pc3MtYW5jaG9yXCI+XHUwMDNDZGl2IGlkPVwibmF2LWZseW91dC1zZWFyY2hBamF4XCIgY2xhc3M9XCJuYXYtaXNzRmx5b3V0IG5hdi1mbHlvdXRcIj5cdTAwM0NkaXYgY2xhc3M9XCJuYXYtdGVtcGxhdGUgbmF2LWZseW91dC1jb250ZW50XCI+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cbiAgICBcdTAwM0NkaXYgaWQ9XCJuYXYtbWFpblwiIGNsYXNzPVwibmF2LXNwcml0ZVwiPlxuICAgICAgXG4gICAgICBcbiAgICAgIFxuICAgICAgXG4gICAgICBcbiAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cIm5hdi1sZWZ0XCI+XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cblxuXHUwMDNDZGl2IGlkPVwibmF2LWdsb2JhbC1sb2NhdGlvbi1zbG90XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWEtbW9kYWw9XCJ7JnF1b3Q7d2lkdGgmcXVvdDs6Mzc1LCZxdW90O2Nsb3NlQnV0dG9uJnF1b3Q7OiZxdW90O2ZhbHNlJnF1b3Q7LCZxdW90O3BvcG92ZXJMYWJlbCZxdW90OzomcXVvdDtDaG9vc2UgeW91ciBsb2NhdGlvbiZxdW90OywmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O2dsb3ctbW9kYWwmcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9ncC9nbG93L2dldC1hZGRyZXNzLXNlbGVjdGlvbnMuaHRtbD9zZWxlY3RlZExvY2F0aW9uVHlwZT1DT1VOVFJZX0NPREUmYW1wO3NlbGVjdGVkTG9jYXRpb25WYWx1ZT1DQSZhbXA7ZGV2aWNlVHlwZT1kZXNrdG9wJmFtcDtwYWdlVHlwZT1EZXRhaWwmYW1wO3N0b3JlQ29udGV4dD1qZXdlbHJ5JnF1b3Q7LCZxdW90O2Zvb3RlciZxdW90OzomcXVvdDtcdTAwM0NzcGFuIGNsYXNzPVxcJnF1b3Q7YS1kZWNsYXJhdGl2ZVxcJnF1b3Q7IGRhdGEtYWN0aW9uPVxcJnF1b3Q7YS1wb3BvdmVyLWNsb3NlXFwmcXVvdDsgZGF0YS1hLXBvcG92ZXItY2xvc2U9XFwmcXVvdDt7fVxcJnF1b3Q7Plx1MDAzQ3NwYW4gY2xhc3M9XFwmcXVvdDthLWJ1dHRvbiBhLWJ1dHRvbi1wcmltYXJ5XFwmcXVvdDs+XHUwMDNDc3BhbiBjbGFzcz1cXCZxdW90O2EtYnV0dG9uLWlubmVyXFwmcXVvdDs+XHUwMDNDYnV0dG9uIG5hbWU9XFwmcXVvdDtnbG93RG9uZUJ1dHRvblxcJnF1b3Q7IGNsYXNzPVxcJnF1b3Q7YS1idXR0b24tdGV4dFxcJnF1b3Q7IHR5cGU9XFwmcXVvdDtidXR0b25cXCZxdW90Oz5Eb25lXHUwMDNDL2J1dHRvbj5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj4mcXVvdDssJnF1b3Q7aGVhZGVyJnF1b3Q7OiZxdW90O0Nob29zZSB5b3VyIGxvY2F0aW9uJnF1b3Q7fVwiIGRhdGEtYWN0aW9uPVwiYS1tb2RhbFwiPlx1MDAzQ2EgY2xhc3M9XCJuYXYtYSBuYXYtYS0yIGEtcG9wb3Zlci10cmlnZ2VyIGEtZGVjbGFyYXRpdmVcIiB0YWJpbmRleD1cIjM1XCI+XHUwMDNDZGl2IGNsYXNzPVwibmF2LXNwcml0ZVwiIGlkPVwibmF2LXBhY2thcmQtZ2xvdy1sb2MtaWNvblwiPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGlkPVwiZ2xvdy1pbmdyZXNzLWJsb2NrXCI+XHUwMDNDc3BhbiBjbGFzcz1cIm5hdi1saW5lLTFcIiBpZD1cImdsb3ctaW5ncmVzcy1saW5lMVwiPkRlbGl2ZXIgdG9cdTAwM0Mvc3Bhbj5cdTAwM0NzcGFuIGNsYXNzPVwibmF2LWxpbmUtMlwiIGlkPVwiZ2xvdy1pbmdyZXNzLWxpbmUyXCI+Q2FuYWRhXHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0MvYT5cdTAwM0Mvc3Bhbj5cdTAwM0NpbnB1dCBkYXRhLWFkZG5ld2FkZHJlc3M9XCJhZGQtbmV3XCIgaWQ9XCJ1bmlmaWVkTG9jYXRpb24xQ2xpY2tBZGRyZXNzXCIgbmFtZT1cImRyb3Bkb3duLXNlbGVjdGlvblwiIHR5cGU9XCJoaWRkZW5cIiB2YWx1ZT1cImFkZC1uZXdcIj5cdTAwM0NpbnB1dCBkYXRhLWFkZG5ld2FkZHJlc3M9XCJhZGQtbmV3XCIgaWQ9XCJ1YmJTaGlwVG9cIiBuYW1lPVwiZHJvcGRvd24tc2VsZWN0aW9uLXViYlwiIHR5cGU9XCJoaWRkZW5cIiB2YWx1ZT1cImFkZC1uZXdcIj5cdTAwM0MvZGl2PlxuXG5cblxuICAgIFxuXG5cblxuXG5cdTAwM0NzY3JpcHQ+XG5QLndoZW4oXCJnbG93LXRvYXN0ZXItc3RyaW5nc1wiKS5leGVjdXRlKGZ1bmN0aW9uIChTKSB7IFMubG9hZCh7XCJnbG93LXRvYXN0ZXItdW5rbm93bi1lcnJvclwiOlwiQW4gZXJyb3IgaGFzIG9jY3VycmVkLiBQbGVhc2UgdHJ5IGFnYWluLlwiLFwiZ2xvdy10b2FzdGVyLWFkZHJlc3MtY2hhbmdlLWVycm9yXCI6XCJBbiBlcnJvciBoYXMgb2NjdXJyZWQgYW5kIHRoZSBhZGRyZXNzIGhhcyBub3QgYmVlbiB1cGRhdGVkLiBQbGVhc2UgdHJ5IGFnYWluLlwifSk7IH0pO1xuXHUwMDNDL3NjcmlwdD5cblxuXG5cblxuXG5cdTAwM0NzY3JpcHQ+XG5QLndoZW4oXCJnbG93LXRvYXN0ZXItbWFuYWdlclwiKS5leGVjdXRlKGZ1bmN0aW9uIChNKSB7IE0uY3JlYXRlKHtcImFpc1RyYW5zaXRpb25TdGF0ZVwiOlwiSU5cIixcInBhZ2VUeXBlXCI6XCJEZXRhaWxcIixcInN0b3JlTmFtZVwiOlwiamV3ZWxyeVwiLFwicmFuY29yTG9jYXRpb25Tb3VyY2VcIjpcIklQX0dFT0xPQ0FUSU9OXCJ9KTsgfSk7XG5cdTAwM0Mvc2NyaXB0PlxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgIFx1MDAzQ2RpdiBkYXRhLXRvYXN0ZXItYmxvY2tpbmc9XCIwXCIgZGF0YS10b2FzdGVyLXNsb3Q9XCJERUZBVUxUXCIgZGF0YS10b2FzdGVyLXR5cGU9XCJBSVNfSU5HUkVTU1wiIGFyaWEtZGVzY3JpYmVkYnk9XCJnbG93LXRvYXN0ZXItYm9keVwiIGFyaWEtbGFiZWxsZWRieT1cImdsb3ctdG9hc3Rlci10aXRsZVwiIGNsYXNzPVwiYS1zZWN0aW9uIGdsb3ctdG9hc3RlciBnbG93LXRvYXN0ZXItdGhlbWUtZGVmYXVsdCBnbG93LXRvYXN0ZXItc2xvdC1kZWZhdWx0IG5hdi1jb3JlRmx5b3V0IG5hdi1mbHlvdXRcIiByb2xlPVwiYWxlcnRkaWFsb2dcIiBzdHlsZT1cIlwiIHRhYmluZGV4PVwiLTFcIj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJnbG93LXRvYXN0ZXItY29udGVudFwiPlxuICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwibmF2LWFycm93XCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwibmF2LWFycm93LWlubmVyXCI+XHUwMDNDL2Rpdj5cbiAgICAgICAgICAgIFx1MDAzQy9kaXY+XG5cbiAgICAgICAgXHUwMDNDaDUgaWQ9XCJnbG93LXRvYXN0ZXItdGl0bGVcIiBjbGFzcz1cImdsb3ctdG9hc3Rlci10aXRsZSBhb2staGlkZGVuXCI+XG4gICAgICAgICAgICBJbnRlcm5hdGlvbmFsIFNob3BwaW5nIFRyYW5zaXRpb24gQWxlcnRcbiAgICAgICAgXHUwMDNDL2g1PlxuXG4gICAgICAgIFx1MDAzQ2RpdiBpZD1cImdsb3ctdG9hc3Rlci1ib2R5XCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgZ2xvdy10b2FzdGVyLWJvZHlcIj5cbiAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtYmFzZVwiPlxuICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBzdHlsZT1cImNvbG9yOiBibGFja1wiPlxuICAgICAgICAgICAgICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLWJveCBhLWFsZXJ0IGEtYWxlcnQtZXJyb3IgZ2xvdy10b2FzdGVyLWVycm9yIGFvay1oaWRkZW4gYS1zcGFjaW5nLWJhc2VcIiBhcmlhLWxpdmU9XCJhc3NlcnRpdmVcIiByb2xlPVwiYWxlcnRcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWJveC1pbm5lciBhLWFsZXJ0LWNvbnRhaW5lclwiPlx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLWFsZXJ0XCI+XHUwMDNDL2k+XHUwMDNDZGl2IGNsYXNzPVwiYS1hbGVydC1jb250ZW50XCI+XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2PlxuICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgICAgICAgICAgXHUwMDNDc3Ryb25nPiBXZSBzaGlwIGludGVybmF0aW9uYWxseVx1MDAzQy9zdHJvbmc+XHUwMDNDYnI+V2UncmUgc2hvd2luZyB5b3UgaXRlbXMgdGhhdCBzaGlwIHRvIFx1MDAzQ3N0cm9uZz4gQ2FuYWRhXHUwMDNDL3N0cm9uZz4uIFRvIHNlZSBpdGVtcyB0aGF0IHNoaXAgdG8gYSBkaWZmZXJlbnQgY291bnRyeSwgY2hhbmdlIHlvdXIgZGVsaXZlcnkgYWRkcmVzcy5cdTAwM0Nicj5BZGRpdGlvbmFsIGxhbmd1YWdlIGFuZCBjdXJyZW5jeSBzZXR0aW5ncyBhcmUgYXZhaWxhYmxlLlx1MDAzQ2EgaHJlZj1cIi9ncC9oZWxwL2N1c3RvbWVyL2Rpc3BsYXkuaHRtbC9yZWY9aWNwX2ZseW91dD9pZT1VVEY4JmFtcDtub2RlSWQ9MjAyMDg1OTEwXCI+IExlYXJuIG1vcmVcdTAwM0MvYT5cblxuICAgICAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgICAgIFx1MDAzQy9kaXY+XG5cbiAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImdsb3ctdG9hc3Rlci1mb290ZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uIGEtc3BhY2luZy10b3AtYmFzZSBhLWJ1dHRvbi1iYXNlIGdsb3ctdG9hc3Rlci1idXR0b24gZ2xvdy10b2FzdGVyLWJ1dHRvbi1kaXNtaXNzXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uLWlubmVyXCI+XHUwMDNDaW5wdXQgZGF0YS1hY3Rpb24tcGFyYW1zPVwieyZxdW90O3RvYXN0ZXJUeXBlJnF1b3Q7OiZxdW90O0FJU19JTkdSRVNTJnF1b3Q7fVwiIGRhdGEtYWN0aW9uLXR5cGU9XCJESVNNSVNTXCIgY2xhc3M9XCJhLWJ1dHRvbi1pbnB1dFwiIHR5cGU9XCJzdWJtaXRcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24tdGV4dFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgRG9uJ3QgQ2hhbmdlXG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24gYS1zcGFjaW5nLXRvcC1iYXNlIGEtYnV0dG9uLXByaW1hcnkgZ2xvdy10b2FzdGVyLWJ1dHRvbiBnbG93LXRvYXN0ZXItYnV0dG9uLXN1Ym1pdFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi1pbm5lclwiPlx1MDAzQ2lucHV0IGRhdGEtYWN0aW9uLXBhcmFtcz1cIlwiIGRhdGEtYWN0aW9uLXR5cGU9XCJTRUxFQ1RfTE9DQVRJT05cIiBjbGFzcz1cImEtYnV0dG9uLWlucHV0XCIgdHlwZT1cInN1Ym1pdFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi10ZXh0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICBDaGFuZ2UgQWRkcmVzc1xuICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgXHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cbiAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cIm5hdi1yaWdodFwiPlxuICAgICAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPndpbmRvdy5uYXZtZXQudG1wPStuZXcgRGF0ZSgpO1x1MDAzQy9zY3JpcHQ+XG4gICAgICAgIFx1MDAzQ2RpdiBpZD1cIm5hdi10b29sc1wiPlxuICAgICAgICAgIFxuICAgICAgICAgIFxuICAgICAgICAgIFxuICAgICAgICAgIFxuICBcdTAwM0NhIGhyZWY9XCIvZ3AvY3VzdG9tZXItcHJlZmVyZW5jZXMvc2VsZWN0LWxhbmd1YWdlL3JlZj10b3BuYXZfbGFuZz9wcmVmZXJlbmNlc1JldHVyblVybD0lMkZkcCUyRkIwMUdLUUkzOTJcIiBpZD1cImljcC1uYXYtZmx5b3V0XCIgY2xhc3M9XCJuYXYtYSBuYXYtYS0yIGljcC1saW5rLXN0eWxlLTJcIj5cbiAgICBcdTAwM0NzcGFuIGNsYXNzPVwiaWNwLW5hdi1saW5rLWlubmVyXCI+XG4gICAgICBcdTAwM0NzcGFuIGNsYXNzPVwibmF2LWxpbmUtMVwiPlxuICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiaWNwLW5hdi1nbG9iZS1pbWctMlwiPlx1MDAzQy9zcGFuPlxuICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiaWNwLW5hdi1sYW5ndWFnZVwiPkVOXHUwMDNDL3NwYW4+XG4gICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJuYXYtbGluZS0yXCI+Jm5ic3A7XG4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJuYXYtaWNvbiBuYXYtYXJyb3dcIiBzdHlsZT1cInZpc2liaWxpdHk6IHZpc2libGU7XCI+XHUwMDNDL3NwYW4+XG4gICAgICBcdTAwM0Mvc3Bhbj5cbiAgICBcdTAwM0Mvc3Bhbj5cbiAgICBcdTAwM0NzcGFuIGNsYXNzPVwiaWNwLW5hdi1saW5rLWJvcmRlclwiPlx1MDAzQy9zcGFuPlxuICBcdTAwM0MvYT5cblxuICAgICAgICAgIFxuXHUwMDNDYSBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9hcC9zaWduaW4/b3BlbmlkLnBhcGUubWF4X2F1dGhfYWdlPTAmYW1wO29wZW5pZC5yZXR1cm5fdG89aHR0cHMlM0ElMkYlMkZ3d3cuYW1hem9uLmNvbSUyRmRwJTJGQjAxR0tRSTM5MiUzRnJlZl8lM0RuYXZfeWFfc2lnbmluJmFtcDtvcGVuaWQuaWRlbnRpdHk9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wJTJGaWRlbnRpZmllcl9zZWxlY3QmYW1wO29wZW5pZC5hc3NvY19oYW5kbGU9dXNmbGV4JmFtcDtvcGVuaWQubW9kZT1jaGVja2lkX3NldHVwJmFtcDtvcGVuaWQuY2xhaW1lZF9pZD1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAlMkZpZGVudGlmaWVyX3NlbGVjdCZhbXA7b3BlbmlkLm5zPWh0dHAlM0ElMkYlMkZzcGVjcy5vcGVuaWQubmV0JTJGYXV0aCUyRjIuMCZhbXA7XCIgY2xhc3M9XCJuYXYtYSBuYXYtYS0yXCIgZGF0YS1uYXYtcmVmPVwibmF2X3lhX3NpZ25pblwiIGRhdGEtbmF2LXJvbGU9XCJzaWduaW5cIiBkYXRhLXV4LWpxLW1vdXNlZW50ZXI9XCJ0cnVlXCIgaWQ9XCJuYXYtbGluay1hY2NvdW50TGlzdFwiIHRhYmluZGV4PVwiNjFcIj5cbiAgXHUwMDNDc3BhbiBjbGFzcz1cIm5hdi1saW5lLTFcIj5IZWxsbywgU2lnbiBpblx1MDAzQy9zcGFuPlxuICBcdTAwM0NzcGFuIGNsYXNzPVwibmF2LWxpbmUtMiBcIj5BY2NvdW50ICZhbXA7IExpc3RzXHUwMDNDc3BhbiBjbGFzcz1cIm5hdi1pY29uIG5hdi1hcnJvd1wiIHN0eWxlPVwidmlzaWJpbGl0eTogdmlzaWJsZTtcIj5cdTAwM0Mvc3Bhbj5cbiAgXHUwMDNDL3NwYW4+XG4gIFx1MDAzQ3NwYW4gY2xhc3M9XCJuYXYtbGluZS0zXCI+U2lnbiBpblx1MDAzQy9zcGFuPlxuICBcdTAwM0NzcGFuIGNsYXNzPVwibmF2LWxpbmUtNFwiPkFjY291bnQgJmFtcDsgTGlzdHNcdTAwM0Mvc3Bhbj5cblx1MDAzQy9hPlxuXG4gICAgICAgICAgXG5cdTAwM0NhIGhyZWY9XCIvZ3AvY3NzL29yZGVyLWhpc3Rvcnk/cmVmXz1uYXZfb3JkZXJzX2ZpcnN0XCIgY2xhc3M9XCJuYXYtYSBuYXYtYS0yIG5hdi1zaW5nbGUtcm93LWxpbmtcIiBpZD1cIm5hdi1vcmRlcnNcIiB0YWJpbmRleD1cIjYzXCI+XG4gIFx1MDAzQ3NwYW4gY2xhc3M9XCJuYXYtbGluZS0xXCI+XHUwMDNDL3NwYW4+XG4gIFx1MDAzQ3NwYW4gY2xhc3M9XCJuYXYtbGluZS0yXCI+T3JkZXJzXHUwMDNDL3NwYW4+XG5cdTAwM0MvYT5cblxuICAgICAgICAgIFxuICAgICAgICAgIFxuICAgICAgICAgIFxuICBcdTAwM0NhIGhyZWY9XCIvZ3AvY2FydC92aWV3Lmh0bWw/cmVmXz1uYXZfY2FydFwiIGFyaWEtbGFiZWw9XCIwIGl0ZW1zIGluIGNhcnRcIiBjbGFzcz1cIm5hdi1hIG5hdi1hLTJcIiBpZD1cIm5hdi1jYXJ0XCIgdGFiaW5kZXg9XCI2NVwiPlxuICAgIFx1MDAzQ3NwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCIgY2xhc3M9XCJuYXYtbGluZS0xXCI+XHUwMDNDL3NwYW4+XG4gICAgXHUwMDNDc3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cIm5hdi1saW5lLTJcIj5DYXJ0XHUwMDNDc3BhbiBjbGFzcz1cIm5hdi1pY29uIG5hdi1hcnJvd1wiPlx1MDAzQy9zcGFuPlxuICAgIFx1MDAzQy9zcGFuPlxuICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJuYXYtY2FydC1pY29uIG5hdi1zcHJpdGVcIj5cdTAwM0Mvc3Bhbj5cbiAgICBcdTAwM0NzcGFuIGlkPVwibmF2LWNhcnQtY291bnRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cIm5hdi1jYXJ0LWNvdW50IG5hdi1jYXJ0LTBcIj4wXHUwMDNDL3NwYW4+XG4gIFx1MDAzQy9hPlxuXG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+d2luZG93Lm5hdm1ldC5wdXNoKHtrZXk6J1Rvb2xzJyxlbmQ6K25ldyBEYXRlKCksYmVnaW46d2luZG93Lm5hdm1ldC50bXB9KTtcdTAwM0Mvc2NyaXB0PlxuICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cIm5hdi1maWxsXCI+XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgXG4gICAgICAgICAgXG4gXHUwMDNDZGl2IGlkPVwibmF2LXNob3BcIj5cbiBcdTAwM0MvZGl2PlxuICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cIm5hdi14c2hvcC1jb250YWluZXJcIiBjbGFzcz1cIlwiPlxuICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwibmF2LXhzaG9wXCI+XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj53aW5kb3cubmF2bWV0LnRtcD0rbmV3IERhdGUoKTtcdTAwM0Mvc2NyaXB0PlxuXHUwMDNDYSBocmVmPVwiL2ludGVybmF0aW9uYWwtc2FsZXMtb2ZmZXJzL2IvP2llPVVURjgmYW1wO25vZGU9MTU1Mjk2MDkwMTEmYW1wO3JlZl89bmF2X25hdm1faW50bF9kZWFsX2J0blwiIGNsYXNzPVwibmF2LWFcIiB0YWJpbmRleD1cIjQ3XCI+VG9kYXkncyBEZWFsc1x1MDAzQy9hPlxuXG5cdTAwM0NhIGlkPVwibmF2LXlvdXItYW1hem9uXCIgaHJlZj1cIi9ncC95b3Vyc3RvcmUvaG9tZT9yZWZfPW5hdl9jc195c1wiIGNsYXNzPVwibmF2LWFcIiB0YWJpbmRleD1cIjQ4XCI+WW91ciBBbWF6b24uY29tXHUwMDNDL2E+XG5cblx1MDAzQ2EgaHJlZj1cIi9naWZ0LWNhcmRzL2IvP2llPVVURjgmYW1wO25vZGU9MjIzODE5MjAxMSZhbXA7cmVmXz1uYXZfY3NfZ2lmdF9jYXJkc1wiIGNsYXNzPVwibmF2LWFcIiB0YWJpbmRleD1cIjQ5XCI+R2lmdCBDYXJkc1x1MDAzQy9hPlxuXG5cdTAwM0NhIGhyZWY9XCIvZ3AvaGVscC9jdXN0b21lci9kaXNwbGF5Lmh0bWw/bm9kZUlkPTUwODUxMCZhbXA7cmVmXz1uYXZfY3NfaGVscFwiIGNsYXNzPVwibmF2LWFcIiB0YWJpbmRleD1cIjUwXCI+SGVscFx1MDAzQy9hPlxuXG5cdTAwM0NhIGhyZWY9XCIvZ3AvYnJvd3NlLmh0bWw/bm9kZT0xNjExNTkzMTAxMSZhbXA7cmVmXz1uYXZfY3NfcmVnaXN0cnlcIiBjbGFzcz1cIm5hdi1hXCIgdGFiaW5kZXg9XCI1MVwiPlJlZ2lzdHJ5XHUwMDNDL2E+XG5cblx1MDAzQ2EgaHJlZj1cIi9iLz9fZW5jb2Rpbmc9VVRGOCZhbXA7bGQ9QVpVU1NPQS1zZWxsJmFtcDtub2RlPTEyNzY2NjY5MDExJmFtcDtyZWZfPW5hdl9jc19zZWxsXCIgY2xhc3M9XCJuYXYtYVwiIHRhYmluZGV4PVwiNTJcIj5TZWxsXHUwMDNDL2E+XG5cblx1MDAzQ2EgaHJlZj1cIi9ncC9oZWxwL2N1c3RvbWVyL2FjY2Vzc2liaWxpdHlcIiBhcmlhLWxhYmVsPVwiQ2xpY2sgdG8gY2FsbCBvdXIgRGlzYWJpbGl0eSBDdXN0b21lciBTdXBwb3J0IGxpbmUsIG9yIHJlYWNoIHVzIGRpcmVjdGx5IGF0IDEtODg4LTI4My0xNjc4XCIgY2xhc3M9XCJuYXYtaGlkZGVuLWFyaWFcIiB0YWJpbmRleD1cIjUzXCI+RGlzYWJpbGl0eSBDdXN0b21lciBTdXBwb3J0XHUwMDNDL2E+XG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPndpbmRvdy5uYXZtZXQucHVzaCh7a2V5OidDcm9zc1Nob3AnLGVuZDorbmV3IERhdGUoKSxiZWdpbjp3aW5kb3cubmF2bWV0LnRtcH0pO1x1MDAzQy9zY3JpcHQ+XG4gICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXG4gICAgICBcdTAwM0MvZGl2PlxuICAgIFx1MDAzQy9kaXY+XG5cbiAgICBcdTAwM0NkaXYgaWQ9XCJuYXYtc3VibmF2LXRvYXN0ZXJcIj5cdTAwM0MvZGl2PlxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICBcdTAwM0MvZGl2PlxuXG4gIFxuICBcblxuXHUwMDNDL2hlYWRlcj5cblx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+d2luZG93Lm5hdm1ldC5wdXNoKHtrZXk6J05hdkJhcicsZW5kOituZXcgRGF0ZSgpLGJlZ2luOndpbmRvdy5uYXZtZXQubWFpbn0pO1x1MDAzQy9zY3JpcHQ+XG5cblxuXG4gICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj53aW5kb3cubmF2bWV0LnRtcD0rbmV3IERhdGUoKTtcdTAwM0Mvc2NyaXB0PlxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlx1MDAzQyEtLVxuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoXCJjb25maWcubmF2RGV2aWNlVHlwZVwiLCBcImRlc2t0b3BcIik7XG5cbndpbmRvdy4kTmF2ICYmICROYXYud2hlbihcImRhdGFcIikucnVuKGZ1bmN0aW9uKGRhdGEpIHsgZGF0YSh7XCJlbXB0eVdpc2hsaXN0XCI6e1widGVtcGxhdGVcIjp7XCJuYW1lXCI6XCJmbHlvdXRFcnJvclwiLFwiZGF0YVwiOntcImVycm9yXCI6e1wiYnV0dG9uXCI6e1widGV4dFwiOlwiWW91ciBXaXNobGlzdFwiLFwidXJsXCI6XCIvZ3AvcmVnaXN0cnkvd2lzaGxpc3QvMTQ1LTg5NzUzOTAtNTA2NDExMz9pZT1VVEY4JnJlZl89bmF2X2Vycl9lbXB0eV93aXNobGlzdFwifSxcInRpdGxlXCI6XCJPb3BzIVwiLFwicGFyYWdyYXBoXCI6XCJZb3VyIGxpc3QgaXMgZW1wdHlcIn19fX0sXCJmcmVzaFRpbWVvdXRcIjp7XCJ0ZW1wbGF0ZVwiOntcIm5hbWVcIjpcImZseW91dEVycm9yXCIsXCJkYXRhXCI6e1wiZXJyb3JcIjp7XCJ0aXRsZVwiOlwiXHUwMDNDc3R5bGU+I25hdi1mbHlvdXQtZnJlc2h7d2lkdGg6MjY5cHg7cGFkZGluZzowO30jbmF2LWZseW91dC1mcmVzaCAubmF2LWZseW91dC1jb250ZW50e3BhZGRpbmc6MDt9XHUwMDNDL3N0eWxlPlx1MDAzQ2EgaHJlZj0nL2FtYXpvbmZyZXNoJz5cdTAwM0NpbWcgc3JjPScvL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvb21haGEvaW1hZ2VzL3lvZGEvZmx5b3V0XzcyZHBpLl9WMjcwMjU1OTg5Xy5wbmcnIC8+XHUwMDNDL2E+XCJ9fX19LFwia2luZGxlVGltZW91dFwiOntcInRlbXBsYXRlXCI6e1wibmFtZVwiOlwiZmx5b3V0RXJyb3JcIixcImRhdGFcIjp7XCJlcnJvclwiOntcInBhcmFncmFwaFwiOlwiVW5hYmxlIHRvIHJldHJpZXZlIGxpc3QsIHBsZWFzZSB0cnkgYWdhaW4gbGF0ZXJcIn19fX0sXCJzaG9wQWxsVGltZW91dFwiOntcInRlbXBsYXRlXCI6e1wibmFtZVwiOlwiZmx5b3V0RXJyb3JcIixcImRhdGFcIjp7XCJlcnJvclwiOntcInBhcmFncmFwaFwiOlwiVW5hYmxlIHRvIHJldHJpZXZlIGRlcGFydG1lbnRzLCBwbGVhc2UgdHJ5IGFnYWluIGxhdGVyXCJ9fX19LFwicHJpbWVUaW1lb3V0XCI6e1widGVtcGxhdGVcIjp7XCJuYW1lXCI6XCJmbHlvdXRFcnJvclwiLFwiZGF0YVwiOntcImVycm9yXCI6e1widGl0bGVcIjpcIlx1MDAzQ2EgaHJlZj0nL2dwL3ByaW1lP3JlZl89bmF2X3ByaW1lX2J0bl9mYic+XHUwMDNDaW1nIHNyYz0nLy9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL3ByaW1lL3Bpdi9Zb3VyUHJpbWVQSVZfZmFsbGJhY2tfQ1RBLl9WMzI3MzQ2OTQzXy5qcGcnIC8+XHUwMDNDL2E+XCJ9fX19LFwiZXJyb3JXaXNobGlzdFwiOntcInRlbXBsYXRlXCI6e1wibmFtZVwiOlwiZmx5b3V0RXJyb3JcIixcImRhdGFcIjp7XCJlcnJvclwiOntcImJ1dHRvblwiOntcInRleHRcIjpcIllvdXIgV2lzaGxpc3RcIixcInVybFwiOlwiL2dwL3JlZ2lzdHJ5L3dpc2hsaXN0LzE0NS04OTc1MzkwLTUwNjQxMTM/aWU9VVRGOCZyZWZfPW5hdl9lcnJfd2lzaGxpc3RcIn0sXCJ0aXRsZVwiOlwiT29wcyFcIixcInBhcmFncmFwaFwiOlwiVW5hYmxlIHRvIHJldHJpZXZlIHlvdXIgd2lzaGxpc3RcIn19fX0sXCJ5b3VyQWNjb3VudENvbnRlbnRcIjp7XCJ0ZW1wbGF0ZVwiOntcIm5hbWVcIjpcImZseW91dEVycm9yXCIsXCJkYXRhXCI6e1wiZXJyb3JcIjp7XCJidXR0b25cIjp7XCJ0ZXh0XCI6XCJZb3VyIEFjY291bnRcIixcInVybFwiOlwiL2dwL2Nzcy9ob21lcGFnZS5odG1sLzE0NS04OTc1MzkwLTUwNjQxMTM/aWU9VVRGOCZyZWZfPW5hdl9lcnJfeW91cmFjY291bnRcIn0sXCJ0aXRsZVwiOlwiT29wcyFcIixcInBhcmFncmFwaFwiOlwiVW5hYmxlIHRvIHJldHJpZXZlIHlvdXIgYWNjb3VudFwifX19fSxcImNhcnRUaW1lb3V0XCI6e1widGVtcGxhdGVcIjp7XCJuYW1lXCI6XCJmbHlvdXRFcnJvclwiLFwiZGF0YVwiOntcImVycm9yXCI6e1wiYnV0dG9uXCI6e1widGV4dFwiOlwiWW91ciBDYXJ0XCIsXCJ1cmxcIjpcIi9ncC9jYXJ0L3ZpZXcuaHRtbC8xNDUtODk3NTM5MC01MDY0MTEzP2llPVVURjgmcmVmXz1uYXZfZXJyX2NhcnRfdGltZW91dFwifSxcInRpdGxlXCI6XCJPb3BzIVwiLFwicGFyYWdyYXBoXCI6XCJVbmFibGUgdG8gcmV0cmlldmUgeW91ciBjYXJ0LlwifX19fSxcImV3Y1RpbWVvdXRcIjp7XCJ0ZW1wbGF0ZVwiOntcIm5hbWVcIjpcImZseW91dEVycm9yXCIsXCJkYXRhXCI6e1wiZXJyb3JcIjp7XCJidXR0b25cIjp7XCJ0ZXh0XCI6XCJZb3VyIENhcnRcIixcInVybFwiOlwiL2dwL2NhcnQvdmlldy5odG1sLzE0NS04OTc1MzkwLTUwNjQxMTM/aWU9VVRGOCZyZWZfPW5hdl9lcnJfZXdjX3RpbWVvdXRcIn0sXCJ0aXRsZVwiOlwiT29wcyFcIixcInBhcmFncmFwaFwiOlwiVGhlcmUncyBhIHByb2JsZW0gbG9hZGluZyB5b3VyIGNhcnQgcmlnaHQgbm93LlwifX19fX0pOyB9KTtcblxuICB3aW5kb3cuJE5hdiAmJiAkTmF2LndoZW4oXCJ1dGlsLnRlbXBsYXRlc1wiKS5ydW4oXCJGbHlvdXRFcnJvclRlbXBsYXRlXCIsIGZ1bmN0aW9uICh0ZW1wbGF0ZXMpIHtcbiAgICB0ZW1wbGF0ZXMuYWRkKFwiZmx5b3V0RXJyb3JcIiwgXCJcdTAwM0MjIGlmKGVycm9yLnRpdGxlKSB7ICM+XHUwMDNDc3BhbiBjbGFzcz0nbmF2LXRpdGxlJz5cdTAwM0MjPWVycm9yLnRpdGxlICM+XHUwMDNDL3NwYW4+XHUwMDNDIyB9ICM+XHUwMDNDIyBpZihlcnJvci5wYXJhZ3JhcGgpIHsgIz5cdTAwM0NwIGNsYXNzPSduYXYtcGFyYWdyYXBoJz5cdTAwM0MjPWVycm9yLnBhcmFncmFwaCAjPlx1MDAzQy9wPlx1MDAzQyMgfSAjPlx1MDAzQyMgaWYoZXJyb3IuYnV0dG9uKSB7ICM+XHUwMDNDYSBocmVmPSdcdTAwM0MjPWVycm9yLmJ1dHRvbi51cmwgIz4nIGNsYXNzPSduYXYtYWN0aW9uLWJ1dHRvbicgPlx1MDAzQ3NwYW4gY2xhc3M9J25hdi1hY3Rpb24taW5uZXInPlx1MDAzQyM9ZXJyb3IuYnV0dG9uLnRleHQgIz5cdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0MjIH0gIz5cIik7XG4gIH0pO1xuXG5cbiAgd2luZG93LiROYXYgJiYgJE5hdi53aGVuKFwiZGF0YVwiKS5ydW4oZnVuY3Rpb24oZGF0YSkgeyBkYXRhKHt9KTsgfSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLm5hdkRlYnVnSGlnaHJlcycsIGZhbHNlKTtcblxuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy51cG5hdkhpZ2hSZXNJbWdJbmZvJyxcbiAge1widXBuYXYyeEltYWdlSGVpZ2h0XCI6XCJcIixcInVwbmF2MnhJbWFnZVBhdGhcIjpcIlwifSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnVwbmF2MnhBaXJ5UHJlbG9hZEltZ0luZm8nLFxuICB7XCJwcmVsb2FkSW1nUGF0aFwiOlwiXCIsXCJwcmVsb2FkSW1nSGVpZ2h0XCI6XCJcIn0pO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy51cG5hdjJ4QWlyeVBvc3RTbGF0ZUltZ0luZm8nLFxuICB7XCJwb3N0c2xhdGVJbWdIZWlnaHRcIjpcIlwiLFwicG9zdHNsYXRlSW1nUGF0aFwiOlwiXCJ9KTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucGFnZVR5cGUnLCAnRGV0YWlsJyk7XG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5zdWJQYWdlVHlwZScsICcnKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuZHluYW1pY01lbnVVcmwnLCAnL2dwL25hdmlnYXRpb24vYWpheC9keW5hbWljLW1lbnUuaHRtbC8xNDUtODk3NTM5MC01MDY0MTEzJyk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmRpc21pc3NOb3RpZmljYXRpb25VcmwnLFxuICAnL2dwL25hdmlnYXRpb24vYWpheC9kaXNtaXNzbm90aWZpY2F0aW9uLmh0bWwvMTQ1LTg5NzUzOTAtNTA2NDExMycpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5maXhlZFN1YkJhckJlYWNvbicsZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5lbmFibGVEeW5hbWljTWVudXMnLCB0cnVlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuaXNJbnRlcm5hbCcsIGZhbHNlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuaXNSZWNvZ25pemVkJywgZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy50cmFuc2llbnRGbHlvdXRUcmlnZ2VyJywgJyNuYXYtdHJhbnNpZW50LWZseW91dC10cmlnZ2VyJyk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnN1Ym5hdkZseW91dFVybCcsXG4gICcvZ3AvbmF2aWdhdGlvbi9hamF4L3N1Ym5hdi1mbHlvdXQvMTQ1LTg5NzUzOTAtNTA2NDExMycpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5yZWNvcmRFdlVybCcsXG4gICcvZ3AvbmF2aWdhdGlvbi9hamF4L3JlY29yZGV2ZW50Lmh0bWwvMTQ1LTg5NzUzOTAtNTA2NDExMycpO1xud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucmVjb3JkRXZJbnRlcnZhbCcsIDE1MDAwKTtcbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnNlc3Npb25JZCcsICcxNDUtODk3NTM5MC01MDY0MTEzJyk7XG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5yZXF1ZXN0SWQnLCAnNDc1RTM0SlFWOUZOUEhKOVNTVEQnKTtcblxuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5hbGV4YUxpc3RFbmFibGVkJywgdHJ1ZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnJlYWR5T25BVEYnLCBmYWxzZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmR5bmFtaWNNZW51QXJncycsXG4gIHtcInJpZFwiOlwiNDc1RTM0SlFWOUZOUEhKOVNTVERcIixcImlzRnVsbFdpZHRoUHJpbWVcIjowLFwiaXNQcmltZVwiOjAsXCJkeW5hbWljUmVxdWVzdFwiOjEsXCJ3ZWJsYWJzXCI6XCJcIixcImlzRnJlc2hSZWdpb25BbmRDdXN0b21lclwiOlwiXCIsXCJwcmltZU1lbnVXaWR0aFwiOjMxMH0pO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5jdXN0b21lck5hbWUnLFxuICBmYWxzZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnlvdXJBY2NvdW50UHJpbWVVUkwnLFxuICBudWxsKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcueW91ckFjY291bnRQcmltZUhvdmVyJywgdHJ1ZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnNlYXJjaEJhY2tTdGF0ZScsXG4gIHt9KTtcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdWV0KCdiYicsICdpc3MtaW5pdC1wYycsIHt3YjogMX0pO1xuICAgIH1cblxuICAgIGlmICghd2luZG93LiRTZWFyY2hKUyAmJiB3aW5kb3cuJE5hdikge1xuICAgICAgd2luZG93LiRTZWFyY2hKUyA9ICROYXYubWFrZSgnc3gnKTtcbiAgICB9XG5cbiAgXG4gIHZhciBvcHRzID0ge1xuICAgICAgaG9zdDogXCJjb21wbGV0aW9uLmFtYXpvbi5jb20vc2VhcmNoL2NvbXBsZXRlXCJcbiAgICAsIG1hcmtldElkOiBcIjFcIlxuICAgICwgb2JmdXNjYXRlZE1hcmtldElkOiBcIkFUVlBES0lLWDBERVJcIlxuICAgICwgc2VhcmNoQWxpYXNlczogW1wiYXBzXCIsIFwiYW1hem9uLWN1c3RvbS1wcm9kdWN0c1wiLCBcImFtYXpvbi1kZXZpY2VzXCIsIFwiYW1hem9uYmFzaWNzXCIsIFwiYW1hem9uZnJlc2hcIiwgXCJ3aG9sZWZvb2RzXCIsIFwic3RyaXBib29rc1wiLCBcInBvcHVsYXJcIiwgXCJhcHBhcmVsXCIsIFwiZWxlY3Ryb25pY3NcIiwgXCJzcG9ydGluZ1wiLCBcInNwb3J0cy1hbmQtZml0bmVzc1wiLCBcIm91dGRvb3ItcmVjcmVhdGlvblwiLCBcImZhbi1zaG9wXCIsIFwiZ2FyZGVuXCIsIFwidmlkZW9nYW1lc1wiLCBcInRveXMtYW5kLWdhbWVzXCIsIFwiamV3ZWxyeVwiLCBcImRpZ2l0YWwtdGV4dFwiLCBcImRpZ2l0YWwtbXVzaWNcIiwgXCJwcmltZS1kaWdpdGFsLW11c2ljXCIsIFwid2F0Y2hlc1wiLCBcImdyb2NlcnlcIiwgXCJocGNcIiwgXCJpbnN0YW50LXZpZGVvXCIsIFwiaGFuZG1hZGVcIiwgXCJoYW5kbWFkZS1qZXdlbHJ5XCIsIFwiaGFuZG1hZGUtaG9tZS1hbmQta2l0Y2hlblwiLCBcInByaW1lLWluc3RhbnQtdmlkZW9cIiwgXCJzaG9wLWluc3RhbnQtdmlkZW9cIiwgXCJiYWJ5LXByb2R1Y3RzXCIsIFwib2ZmaWNlLXByb2R1Y3RzXCIsIFwic29mdHdhcmVcIiwgXCJtYWdhemluZXNcIiwgXCJ0b29sc1wiLCBcImF1dG9tb3RpdmVcIiwgXCJtaXNjXCIsIFwiaW5kdXN0cmlhbFwiLCBcIm1pXCIsIFwicGV0LXN1cHBsaWVzXCIsIFwiZGlnaXRhbC1tdXNpYy10cmFja1wiLCBcImRpZ2l0YWwtbXVzaWMtYWxidW1cIiwgXCJtb2JpbGVcIiwgXCJtb2JpbGUtYXBwc1wiLCBcIm1vdmllcy10dlwiLCBcIm11c2ljLWFydGlzdFwiLCBcIm11c2ljLWFsYnVtXCIsIFwibXVzaWMtc29uZ1wiLCBcInN0cmlwYm9va3Mtc3BhbmlzaFwiLCBcImVsZWN0cm9uaWNzLWFjY2Vzc29yaWVzXCIsIFwicGFudHJ5XCIsIFwicGhvdG9cIiwgXCJhdWRpby12aWRlb1wiLCBcImNvbXB1dGVyc1wiLCBcImZ1cm5pdHVyZVwiLCBcImtpdGNoZW5cIiwgXCJhdWRpYmxlXCIsIFwiYXVkaW9ib29rc1wiLCBcImJlYXV0eVwiLCBcInNob2VzXCIsIFwiYXJ0cy1jcmFmdHNcIiwgXCJhcHBsaWFuY2VzXCIsIFwiZ2lmdC1jYXJkc1wiLCBcInBldHNcIiwgXCJvdXRkb29yXCIsIFwibGF3bmdhcmRlblwiLCBcImNvbGxlY3RpYmxlc1wiLCBcInJlcGxhY2VtZW50LXBhcnRzXCIsIFwiZmluYW5jaWFsXCIsIFwiZmluZS1hcnRcIiwgXCJmYXNoaW9uXCIsIFwiZmFzaGlvbi13b21lbnNcIiwgXCJmYXNoaW9uLXdvbWVucy1jbG90aGluZ1wiLCBcImZhc2hpb24td29tZW5zLWpld2VscnlcIiwgXCJmYXNoaW9uLXdvbWVucy1zaG9lc1wiLCBcImZhc2hpb24td29tZW5zLXdhdGNoZXNcIiwgXCJmYXNoaW9uLXdvbWVucy1oYW5kYmFnc1wiLCBcImZhc2hpb24tbWVuc1wiLCBcImZhc2hpb24tbWVucy1jbG90aGluZ1wiLCBcImZhc2hpb24tbWVucy1qZXdlbHJ5XCIsIFwiZmFzaGlvbi1tZW5zLXNob2VzXCIsIFwiZmFzaGlvbi1tZW5zLXdhdGNoZXNcIiwgXCJmYXNoaW9uLWdpcmxzXCIsIFwiZmFzaGlvbi1naXJscy1jbG90aGluZ1wiLCBcImZhc2hpb24tZ2lybHMtamV3ZWxyeVwiLCBcImZhc2hpb24tZ2lybHMtc2hvZXNcIiwgXCJmYXNoaW9uLWdpcmxzLXdhdGNoZXNcIiwgXCJmYXNoaW9uLWJveXNcIiwgXCJmYXNoaW9uLWJveXMtY2xvdGhpbmdcIiwgXCJmYXNoaW9uLWJveXMtamV3ZWxyeVwiLCBcImZhc2hpb24tYm95cy1zaG9lc1wiLCBcImZhc2hpb24tYm95cy13YXRjaGVzXCIsIFwiZmFzaGlvbi1iYWJ5XCIsIFwiZmFzaGlvbi1iYWJ5LWJveXNcIiwgXCJmYXNoaW9uLWJhYnktZ2lybHNcIiwgXCJmYXNoaW9uLWx1Z2dhZ2VcIiwgXCIzZC1wcmludGluZ1wiLCBcInRyYWRlaW4tYXBzXCIsIFwibG9jYWwtc2VydmljZXNcIiwgXCJ2ZWhpY2xlc1wiLCBcInZpZGVvLXNob3J0c1wiLCBcIndhcmVob3VzZS1kZWFsc1wiLCBcImx1eHVyeS1iZWF1dHlcIiwgXCJiYW5qby1hcHBzXCIsIFwiYmxhY2stZnJpZGF5XCIsIFwiY3liZXItbW9uZGF5XCIsIFwiYWxleGEtc2tpbGxzXCIsIFwic3Vic2NyaWJlLXdpdGgtYW1hem9uXCIsIFwiY291cnNlc1wiLCBcImVkdS1hbHQtY29udGVudFwiLCBcImFtYXpvbi1nbG9iYWwtc3RvcmVcIiwgXCJwcmltZS13YXJkcm9iZVwiXVxuICAgICwgZmlsdGVyQWxpYXNlczogW11cbiAgICAsIHBhZ2VUeXBlOiBcIkRldGFpbFwiXG4gICAgLCByZXF1ZXN0SWQ6IFwiNDc1RTM0SlFWOUZOUEhKOVNTVERcIlxuICAgICwgc2Vzc2lvbklkOiBcIjE0NS04OTc1MzkwLTUwNjQxMTNcIlxuICAgICwgbGFuZ3VhZ2U6IFwiZW5fVVNcIlxuICAgICwgY3VzdG9tZXJJZDogXCJcIlxuICAgICwgYjJiOiAwXG4gICAgLCBmcmVzaDogMFxuICAgICwgYmlhV2lkZ2V0VXJsOiBcIi9ncC95b3Vyc3RvcmUvMTQ1LTg5NzUzOTAtNTA2NDExMz9pZT1VVEY4JmVkaXQ9MSZwPWJvSWtETFRTYkFOQVN1MDgzeW13a1E2c05najVpSXlzc0VGOGElMkJpWUpKdXUxWlNCZjE1RDdFbllQR2FFejdPNnZGN2N2RTBERTM3YU9PYWNuY0ZTdEJQT1BIdkNNZXNrJnJlZj1uYl9zYl9zc19iaWFfYWNjdFwiXG4gICAgLCBpc0RkSW5UMzogMFxuICAgICwgaXNEZEluVDE6IDBcbiAgICAsIGlzSnBPckNuOiAwXG4gICAgLCBpc1VzZUF1aUlzczogMVxuICB9O1xuXG4gIHZhciBpc3NPcHRzID0ge1xuICAgICAgZmFsbGJhY2tGbGFnOiAxXG4gICAgLCBpc0RpZ2l0YWxGZWF0dXJlc0VuYWJsZWQ6IDBcbiAgICAsIGlzV2F5ZmluZGluZ0VuYWJsZWQ6IDFcbiAgICAsIGRyb3Bkb3duOiBcInNlbGVjdC5zZWFyY2hTZWxlY3RcIlxuICAgICwgZGVwYXJ0bWVudFRleHQ6IFwiaW4ge2RlcGFydG1lbnR9XCJcbiAgICAsIHN1Z2dlc3Rpb25UZXh0OiBcIlNlYXJjaCBzdWdnZXN0aW9uc1wiXG4gICAgLCByZWNlbnRTZWFyY2hlc1RyZWF0bWVudDogXCJDXCJcbiAgICAsIGF1dGhvclN1Z2dlc3Rpb25UZXh0OiBcIkV4cGxvcmUgYm9va3MgYnkgWFhBVVRIWFhcIlxuICAgICwgdHJhbnNsYXRlZFN0cmluZ3NNYXA6IHtcInN4LXlvdXItcmVjZW50LXNlYXJjaFwiOlwiSW5zcGlyZWQgYnkgeW91ciByZWNlbnQgc2VhcmNoXCIsXCJzeC1yZWNlbnQtc2VhcmNoZXNcIjpcIlJlY2VudCBzZWFyY2hlc1wifVxuICAgICwgYmlhVGl0bGVUZXh0OiBcIkJ1eSBpdCBhZ2FpblwiXG4gICAgLCBiaWFQdXJjaGFzZWRUZXh0OiBcIlB1cmNoYXNlZFwiXG4gICAgLCBiaWFWaWV3QWxsVGV4dDogXCJWaWV3IGFsbFwiXG4gICAgLCBiaWFWaWV3QWxsTWFuYWdlVGV4dDogXCJWaWV3IGFsbCBhbmQgbWFuYWdlXCJcbiAgICAsIGJpYUFuZFRleHQ6IFwiYW5kXCJcbiAgICAsIGJpYU1hbmFnZVRleHQ6IFwibWFuYWdlXCJcbiAgICAsIGJpYVdlYmxhYlRyZWF0bWVudDogXCJcIlxuICAgICwgaXNzTmF2Q29uZmlnOiB7fVxuICAgICwgbnA6IDBcbiAgICAsIGlzc0NvcnB1czogW11cbiAgICAsIGNmOiAxXG4gICAgLCByZW1vdmVEZWVwTm9kZUlTUzogXCJcIlxuICAgICwgdHJlbmRpbmdUcmVhdG1lbnQ6IFwiQ1wiXG4gICAgLCB1c2VBUElWMjogXCJcIlxuICAgICwgb3BmU3dpdGNoOiBcIlwiXG4gICAgLCBpc0lTU0Rlc2t0b3BSZWZhY3RvckVuYWJsZWQ6IFwiMVwiXG4gICAgLCBpc0FQSUNhY2hpbmdEaXNhYmxlZDogXCIxXCIgPT09IFwiMVwiXG4gICAgLCBpc0ludGVybmFsOiAwXG4gICAgLCB1c2VTZXJ2aWNlSGlnaGxpZ2h0aW5nOiBcIjFcIlxuICB9O1xuXG4gIFxuXG4gIGlmIChvcHRzLmlzVXNlQXVpSXNzID09PSAxICYmIHdpbmRvdy4kTmF2KSB7XG4gICAgd2luZG93LiROYXYud2hlbignc3guaXNzJykucnVuKCdpc3MtbWFzb24taW5pdCcsIGZ1bmN0aW9uKGlzcyl7XG4gICAgICB2YXIgaXNzSW5pdE9iaiA9IGJ1aWxkSXNzSW5pdE9iamVjdChvcHRzLCBpc3NPcHRzLCB0cnVlKTtcblxuICAgICAgbmV3IGlzcy5Jc3NQYXJlbnRDb29yZGluYXRvcihpc3NJbml0T2JqKTtcblxuICAgICAgJFNlYXJjaEpTLmRlY2xhcmUoJ2NhbkNyZWF0ZUF1dG9jb21wbGV0ZScsIGlzc0luaXRPYmopO1xuICAgIH0pO1xuICB9IGVsc2UgaWYgKHdpbmRvdy4kU2VhcmNoSlMpIHtcbiAgICBcbiAgICB2YXIgaXNzO1xuXG4gICAgLy8gQkVHSU4gRGVwcmVjYXRlZCBnbG9iYWxzXG4gICAgdmFyIGlzc0hvc3QgPSBvcHRzLmhvc3RcbiAgICAgICwgaXNzTWt0aWQgPSBvcHRzLm1hcmtldElkXG4gICAgICAsIGlzc1NlYXJjaEFsaWFzZXMgPSBvcHRzLnNlYXJjaEFsaWFzZXNcbiAgICAgICwgdXBkYXRlSVNTQ29tcGxldGlvbiA9IGZ1bmN0aW9uKCkgeyBpc3MudXBkYXRlQXV0b0NvbXBsZXRpb24oKTsgfTtcbiAgICAvLyBFTkQgZGVwcmVjYXRlZCBnbG9iYWxzXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAkU2VhcmNoSlMud2hlbignalF1ZXJ5JywgJ3NlYXJjaC1qcy1hdXRvY29tcGxldGUtbGliJykucnVuKCdhdXRvY29tcGxldGUtaW5pdCcsIGluaXRpYWxpemVBdXRvY29tcGxldGUpO1xuICAgICRTZWFyY2hKUy53aGVuKCdjYW5DcmVhdGVBdXRvY29tcGxldGUnKS5ydW4oJ2NyZWF0ZUF1dG9jb21wbGV0ZScsIGNyZWF0ZUF1dG9jb21wbGV0ZSk7XG5cbiAgICBcbiAgICBpZiAob3B0cy5pc0RkSW5UMykge1xuICAgICAgJFNlYXJjaEpTLndoZW4oJ3NlYXJjaC1qcy1hdXRvY29tcGxldGUnKS5ydW4oJ2F1dG9jb21wbGV0ZS1kZC1pbml0JywgZnVuY3Rpb24oKXsgbWVyZ2VCVEZEcm9wZG93bigpOyB9KTtcbiAgICB9XG5cbiAgICBpZiAob3B0cy5pc0RkSW5UMSkge1xuICAgICAgJFNlYXJjaEpTLndoZW4oJ3NlYXJjaC1qcy1hdXRvY29tcGxldGUnKS5ydW4oJ2F1dG9jb21wbGV0ZS1kZC1pbml0JywgZnVuY3Rpb24oKXsgc2VhcmNoRHJvcGRvd24oKTsgfSk7XG4gICAgfVxuXG4gIH0gLy8gRU5EIGNvbmRpdGlvbmFsIGZvciB3aW5kb3cuJFNlYXJjaEpTXG5cbiAgXG4gIFxuICBmdW5jdGlvbiBpbml0aWFsaXplQXV0b2NvbXBsZXRlKGpRdWVyeSkge1xuICAgIFxuICAgIHZhciBpc3NJbml0T2JqID0gYnVpbGRJc3NJbml0T2JqZWN0KG9wdHMsIGlzc09wdHMpO1xuICAgICRTZWFyY2hKUy5kZWNsYXJlKCdjYW5DcmVhdGVBdXRvY29tcGxldGUnLCBpc3NJbml0T2JqKTtcbiAgfSAvLyBFTkQgaW5pdGlhbGl6ZUF1dG9jb21wbGV0ZVxuXG4gIFxuICBcbiAgZnVuY3Rpb24gaW5pdFNlYXJjaENzbChzZWFyY2hDU0wsIGlzc0luaXRPYmplY3QpIHtcbiAgICBzZWFyY2hDU0wuaW5pdChvcHRzLnBhZ2VUeXBlLCAod2luZG93LnVlICYmIHdpbmRvdy51ZS5yaWQpIHx8IG9wdHMucmVxdWVzdElkKTtcblxuICAgICRTZWFyY2hKUy5kZWNsYXJlKCdjYW5DcmVhdGVBdXRvY29tcGxldGUnLCBpc3NJbml0T2JqZWN0KTtcbiAgfSAvLyBFTkQgaW5pdFNlYXJjaENzbFxuXG4gIFxuICBcbiAgZnVuY3Rpb24gY3JlYXRlQXV0b2NvbXBsZXRlKGlzc09iamVjdCkge1xuICAgIGlzcyA9IG5ldyBBdXRvQ29tcGxldGUoaXNzT2JqZWN0KTtcblxuICAgICRTZWFyY2hKUy5wdWJsaXNoKCdzZWFyY2gtanMtYXV0b2NvbXBsZXRlJywgaXNzKTtcblxuICAgIGxvZ01ldHJpY3MoKTtcbiAgfSAvLyBFTkQgY3JlYXRlQXV0b2NvbXBsZXRlXG5cbiAgXG4gIFxuICBmdW5jdGlvbiBidWlsZElzc0luaXRPYmplY3Qob3B0cywgaXNzT3B0cywgaXNOZXdJc3MpIHtcbiAgICB2YXIgaXNzSW5pdE9iaiA9IHtcbiAgICAgICAgc3JjOiBvcHRzLmhvc3RcbiAgICAgICwgc2Vzc2lvbklkOiBvcHRzLnNlc3Npb25JZFxuICAgICAgLCByZXF1ZXN0SWQ6IG9wdHMucmVxdWVzdElkXG4gICAgICAsIG1rdDogb3B0cy5tYXJrZXRJZFxuICAgICAgLCBvYmZNa3Q6IG9wdHMub2JmdXNjYXRlZE1hcmtldElkXG4gICAgICAsIHBhZ2VUeXBlOiBvcHRzLnBhZ2VUeXBlXG4gICAgICAsIGxhbmd1YWdlOiBvcHRzLmxhbmd1YWdlXG4gICAgICAsIGN1c3RvbWVySWQ6IG9wdHMuY3VzdG9tZXJJZFxuICAgICAgLCBmcmVzaDogb3B0cy5mcmVzaFxuICAgICAgLCBiMmI6IG9wdHMuYjJiXG4gICAgICAsIGFsaWFzZXM6IG9wdHMuc2VhcmNoQWxpYXNlc1xuICAgICAgLCBmYjogaXNzT3B0cy5mYWxsYmFja0ZsYWdcbiAgICAgICwgaXNEaWdpdGFsRmVhdHVyZXNFbmFibGVkOiBpc3NPcHRzLmlzRGlnaXRhbEZlYXR1cmVzRW5hYmxlZFxuICAgICAgLCBpc1dheWZpbmRpbmdFbmFibGVkOiBpc3NPcHRzLmlzV2F5ZmluZGluZ0VuYWJsZWRcbiAgICAgICwgaXNzUHJpbWVFbGlnaWJsZTogaXNzT3B0cy5pc3NQcmltZUVsaWdpYmxlXG4gICAgICAsIGRlcHRUZXh0OiBpc3NPcHRzLmRlcGFydG1lbnRUZXh0XG4gICAgICAsIHN1Z1RleHQ6IGlzc09wdHMuc3VnZ2VzdGlvblRleHRcbiAgICAgICwgZmlsdGVyQWxpYXNlczogb3B0cy5maWx0ZXJBbGlhc2VzXG4gICAgICAsIGJpYVdpZGdldFVybDogb3B0cy5iaWFXaWRnZXRVcmxcbiAgICAgICwgcmVjZW50U2VhcmNoZXNUcmVhdG1lbnQ6IGlzc09wdHMucmVjZW50U2VhcmNoZXNUcmVhdG1lbnRcbiAgICAgICwgYXV0aG9yU3VnZ2VzdGlvblRleHQ6IGlzc09wdHMuYXV0aG9yU3VnZ2VzdGlvblRleHRcbiAgICAgICwgdHJhbnNsYXRlZFN0cmluZ3NNYXA6IGlzc09wdHMudHJhbnNsYXRlZFN0cmluZ3NNYXBcbiAgICAgICwgYmlhVGl0bGVUZXh0OiBpc3NPcHRzLmJpYVRpdGxlVGV4dFxuICAgICAgLCBiaWFQdXJjaGFzZWRUZXh0OiBpc3NPcHRzLmJpYVB1cmNoYXNlZFRleHRcbiAgICAgICwgYmlhVmlld0FsbFRleHQ6IGlzc09wdHMuYmlhVmlld0FsbFRleHRcbiAgICAgICwgYmlhVmlld0FsbE1hbmFnZVRleHQ6IGlzc09wdHMuYmlhVmlld0FsbE1hbmFnZVRleHRcbiAgICAgICwgYmlhQW5kVGV4dDogaXNzT3B0cy5iaWFBbmRUZXh0XG4gICAgICAsIGJpYU1hbmFnZVRleHQ6IGlzc09wdHMuYmlhTWFuYWdlVGV4dFxuICAgICAgLCBiaWFXZWJsYWJUcmVhdG1lbnQ6IGlzc09wdHMuYmlhV2VibGFiVHJlYXRtZW50XG4gICAgICAsIGlzc05hdkNvbmZpZzogaXNzT3B0cy5pc3NOYXZDb25maWdcbiAgICAgICwgY2Y6IGlzc09wdHMuY2ZcbiAgICAgICwgaW1lOiBvcHRzLmlzSnBPckNuXG4gICAgICAsIG1rdGlkOiBvcHRzLm1hcmtldElkXG4gICAgICAsIHFzOiBvcHRzLmlzSnBPckNuXG4gICAgICAsIGlzc0NvcnB1czogaXNzT3B0cy5pc3NDb3JwdXNcbiAgICAgICwgZGVlcE5vZGVJU1M6IHtcbiAgICAgICAgICBzZWFyY2hBbGlhc0FjY2Vzc29yOiBmdW5jdGlvbigkKSB7XG4gICAgICAgICAgICByZXR1cm4gKHdpbmRvdy5TZWFyY2hQYWdlQWNjZXNzICYmIHdpbmRvdy5TZWFyY2hQYWdlQWNjZXNzLnNlYXJjaEFsaWFzKCkpIHx8XG4gICAgICAgICAgICAgICAgICAgJCgnc2VsZWN0LnNlYXJjaFNlbGVjdCcpLmNoaWxkcmVuKCkuYXR0cignZGF0YS1yb290LWFsaWFzJyk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBzZWFyY2hBbGlhc0Rpc3BsYXlOYW1lQWNjZXNzb3I6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuICh3aW5kb3cuU2VhcmNoUGFnZUFjY2VzcyAmJiB3aW5kb3cuU2VhcmNoUGFnZUFjY2Vzcy5zZWFyY2hBbGlhc0Rpc3BsYXlOYW1lKCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgLCByZW1vdmVEZWVwTm9kZUlTUzogaXNzT3B0cy5yZW1vdmVEZWVwTm9kZUlTU1xuICAgICAgLCB0cmVuZGluZ1RyZWF0bWVudDogaXNzT3B0cy50cmVuZGluZ1RyZWF0bWVudFxuICAgICAgLCB1c2VBUElWMjogaXNzT3B0cy51c2VBUElWMlxuICAgICAgLCBvcGZTd2l0Y2g6IGlzc09wdHMub3BmU3dpdGNoXG4gICAgICAsIGlzSVNTRGVza3RvcFJlZmFjdG9yRW5hYmxlZDogaXNzT3B0cy5pc0lTU0Rlc2t0b3BSZWZhY3RvckVuYWJsZWRcbiAgICAgICwgaXNBUElDYWNoaW5nRGlzYWJsZWQ6IGlzc09wdHMuaXNBUElDYWNoaW5nRGlzYWJsZWRcbiAgICAgICwgaXNJbnRlcm5hbDogaXNzT3B0cy5pc0ludGVybmFsXG4gICAgICAsIHVzZVNlcnZpY2VIaWdobGlnaHRpbmc6IGlzc09wdHMudXNlU2VydmljZUhpZ2hsaWdodGluZ1xuICAgIH07XG5cbiAgICAvLyBJZiB3ZSBhcmVuJ3QgdXNpbmcgdGhlIG5ldyBJU1MgdGhlbiB3ZSBuZWVkIHRvIGFkZCB0aGVzZSBwcm9wZXJ0aWVzXG4gICAgaWYgKCFpc05ld0lzcykge1xuICAgICAgaXNzSW5pdE9iai5kZCA9IGlzc09wdHMuZHJvcGRvd247IC8vIFRoZSBlbGVtZW50IHdpdGggaWQgc2VhcmNoRHJvcGRvd25Cb3ggZG9lc24ndCBleGlzdCBpbiBDLlxuICAgICAgaXNzSW5pdE9iai5pbWVTcGFjaW5nID0gaXNzT3B0cy5pbWVTcGFjaW5nO1xuICAgICAgaXNzSW5pdE9iai5pc05hdklubGluZSA9IDE7XG4gICAgICBpc3NJbml0T2JqLnRyaWdnZXJJU1NPbkNsaWNrID0gMDtcbiAgICAgIGlzc0luaXRPYmouc2MgPSAxO1xuICAgICAgaXNzSW5pdE9iai5ucCA9IGlzc09wdHMubnA7XG4gICAgfVxuXG4gICAgcmV0dXJuIGlzc0luaXRPYmo7XG4gIH0gLy8gRU5EIGJ1aWxkSXNzSW5pdE9iamVjdFxuXG4gIFxuICBmdW5jdGlvbiBsb2dNZXRyaWNzKCkge1xuICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicgJiYgdHlwZW9mIHVleCA9PSAnZnVuY3Rpb24nICkge1xuICAgICAgdWV0KCdiZScsICdpc3MtaW5pdC1wYycsIHt3YjogMX0pO1xuICAgICAgdWV4KCdsZCcsICdpc3MtaW5pdC1wYycsIHt3YjogMX0pO1xuICAgIH1cbiAgfSAvLyBFTkQgbG9nTWV0cmljc1xuXG5cbiAgICB3aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ25hdi5pbmxpbmUnKTtcblxuKGZ1bmN0aW9uIChpKSB7XG5pLm9ubG9hZCA9IGZ1bmN0aW9uKCkge3dpbmRvdy51ZXQgJiYgdWV0KCduZScpfTtcbmkuc3JjID0gd2luZG93Ll9uYXZiYXJTcHJpdGVVcmw7XG59KG5ldyBJbWFnZSgpKSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmF1dG9Gb2N1cycsIGZhbHNlKTtcblxuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5yZXNwb25zaXZlVG91Y2hBZ2VudHMnLCBbXCJpZVRvdWNoXCJdKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucmVzcG9uc2l2ZUdXJyxmYWxzZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnBhZ2VIaWRlRW5hYmxlZCcsZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5zc2xUcmlnZ2VyVHlwZScsJ2ZseW91dFByb3hpbWl0eUxhcmdlJyk7XG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5zc2xUcmlnZ2VyUmV0cnknLDApO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5kb3VibGVDYXJ0JyxmYWxzZSk7XG5cblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuZml4ZWRCYXJCZWFjb24nLGZhbHNlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuc2lnbkluT3ZlcnJpZGUnLCB0cnVlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuc2lnbkluVG9vbHRpcCcsdHJ1ZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmlzUHJpbWVNZW1iZXInLGZhbHNlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucGFja2FyZEdsb3dUb29sdGlwJywgZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5wYWNrYXJkR2xvd0ZseW91dCcsIGZhbHNlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucmlnaHRNYXJnaW5BbGlnbkVuYWJsZWQnLCB0cnVlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuZmx5b3V0QW5pbWF0aW9uJywgZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5jYW1wdXNBY3RpdmF0aW9uJywgJycpO1xuXG5cblxuXG4gICAgd2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucHJpbWVUb29sdGlwJyx7dXJsOicvZ3AvcHJpbWUvZGlnaXRhbC1hZG9wdGlvbi9uYXZpZ2F0aW9uLWJhci8xNDUtODk3NTM5MC01MDY0MTEzJ30pO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5wcmltZURheScsZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5kaXNhYmxlQnV5SXRBZ2FpbicsIGZhbHNlKTtcblxuXG5cblxuXG4gIFxuXG5cblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucHNldWRvUHJpbWVGaXJzdEJyb3dzZScsZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5zZGFZb3VyQWNjb3VudCcsZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5jc1lvdXJBY2NvdW50Jyx7dXJsOlwiL2dwL3lvdXJhY2NvdW50L25hdmlnYXRpb24vc2lkZXBhbmVsLzE0NS04OTc1MzkwLTUwNjQxMTNcIn0pO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5jYXJ0Rmx5b3V0RGlzYWJsZWQnLCB0cnVlKTtcblxuICB3aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5pc1RhYmxldEJyb3dzZXInLCBmYWxzZSk7XG4gIHdpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLkhtZW51UHJveGltaXR5QXJlYScsIFsyMDAsMjAwLDIwMCwyMDBdKTtcbiAgd2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuSE1lbnVJc1Byb3hpbWl0eScsIHRydWUpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5kZXNrdG9wSE1lbnVSZWZhY3RvcicsIGZhbHNlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcubmF2ZnJlc2gnLCBmYWxzZSk7XG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5pc0ZyZXNoUmVnaW9uJywgZmFsc2UpO1xuXG5cbmlmICh3aW5kb3cudWUgJiYgdWUudGFnKSB7IHVlLnRhZygnbmF2YmFyJyk7IH07XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmJsYWNrYmVsdCcsIHRydWUpO1xud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuYmVhY29uYmVsdCcsIHRydWUpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5iZWFjb25iZWx0Q292ZXInLCB0cnVlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuYWNjb3VudExpc3QnLCB0cnVlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucGlubmVkTmF2JyxmYWxzZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnBpbm5lZE5hdldpdGhFV0MnLGZhbHNlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucGlubmVkTmF2U3RhcnQnLDE1MCk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnBpbm5lZE5hdk1pbldpZHRoJyw5MDApO1xud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucGlubmVkTmF2TWluSGVpZ2h0Jyw3MDApO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5pUGFkVGFibGV0JywgZmFsc2UpO1xuXG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnNlYXJjaGFwaUVuZHBvaW50JyxmYWxzZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnRpbWVsaW5lJywgZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy50aW1lbGluZUFzaW5QcmljZUVuYWJsZWQnLCBmYWxzZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnRpbWVsaW5lRGVsZXRlRW5hYmxlZCcsZmFsc2UpO1xuXG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnNlYXJjaFRpbWVsaW5lJywgZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5zZWFyY2hUb3BDYXRlZ29yaWVzJywgZmFsc2UpO1xuXG4gICAgd2luZG93Ll9uYXZiYXIgPSB3aW5kb3cuX25hdmJhciB8fCB7fTtcbiAgICB3aW5kb3cuX25hdmJhci5icm93c2Vwcm9tb3MgPSB3aW5kb3cuX25hdmJhci5icm93c2Vwcm9tb3MgfHwge307XG4gICAgXG4gICAgd2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuYnJvd3NlUHJvbW9zJywgd2luZG93Ll9uYXZiYXIuYnJvd3NlcHJvbW9zKTtcblxuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5leHRlbmRlZEZseW91dCcsICdmYWxzZScpO1xuXG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmxvZ05vbkF1aUpzRXJyb3InLCBmYWxzZSk7XG5cblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucHNzRmxhZycsICcwJyk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmZseW91dENsaWNrU3RhdGUnLCAnVDEnKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuaXNTaG9ydEFjY291bnRMaXN0JywgZmFsc2UpO1xuXG5cbmlmICh3aW5kb3cuUCAmJiB0eXBlb2Ygd2luZG93LlAuZGVjbGFyZSA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiB3aW5kb3cuUC5ub3cgPT09IFwiZnVuY3Rpb25cIikge1xuICB3aW5kb3cuUC5ub3coJ3BhY2thcmRHbG93SW5ncmVzc0pzRW5hYmxlZCcpLmV4ZWN1dGUoZnVuY3Rpb24oZ2xvd0VuYWJsZWQpIHtcbiAgICBpZiAoIWdsb3dFbmFibGVkKSB7XG4gICAgICB3aW5kb3cuUC5kZWNsYXJlKCdwYWNrYXJkR2xvd0luZ3Jlc3NKc0VuYWJsZWQnLCB0cnVlKTtcbiAgICB9XG4gIH0pO1xuICB3aW5kb3cuUC5ub3coJ3BhY2thcmRHbG93U3RvcmVOYW1lJykuZXhlY3V0ZShmdW5jdGlvbihzdG9yZU5hbWUpIHtcbiAgICBpZiAoIXN0b3JlTmFtZSkge1xuICAgICAgd2luZG93LlAuZGVjbGFyZSgncGFja2FyZEdsb3dTdG9yZU5hbWUnLCAnamV3ZWxyeScpO1xuICAgIH1cbiAgfSk7XG59XG5cblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWdDb21wbGV0ZScpO1xuXG4tLT5cdTAwM0Mvc2NyaXB0PlxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPndpbmRvdy5uYXZtZXQucHVzaCh7a2V5OidQb3N0TmF2JyxlbmQ6K25ldyBEYXRlKCksYmVnaW46d2luZG93Lm5hdm1ldC50bXB9KTtcdTAwM0Mvc2NyaXB0PlxuXG5cblxuXG5cblxuXG5cdTAwM0NhIGlkPVwic2tpcHBlZExpbmtcIiB0YWJpbmRleD1cIi0xXCI+XHUwMDNDL2E+XG5cblx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+d2luZG93Lm5hdm1ldC5NYWluRW5kID0gbmV3IERhdGUoKTtcdTAwM0Mvc2NyaXB0Plx1MDAzQyEtLSBzcDpmZWF0dXJlOmhvc3QtYXRmIC0tPlxuXG5cdTAwM0NkaXYgaWQ9XCJkcFwiIGNsYXNzPVwiamV3ZWxyeSBlbl9VU1wiPlxuICAgICAgICAgXG5cblxuXG5cblxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuXG4gIGlmKHR5cGVvZiBQICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBQLndoZW4gPT09IFwiZnVuY3Rpb25cIil7XG4gICAgUC53aGVuKCdjZicpLmV4ZWN1dGUoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgUC53aGVuKCduYXZiYXJKUy1qUXVlcnknKS5leGVjdXRlKGZ1bmN0aW9uKCl7fSk7XG4gIFAud2hlbignZmluZGVyRml0c0pTJykuZXhlY3V0ZShmdW5jdGlvbigpe30pO1xuICBQLndoZW4oJ3R3aXN0ZXInKS5leGVjdXRlKGZ1bmN0aW9uKCl7fSk7XG4gIFAud2hlbignc3dmanMnKS5leGVjdXRlKGZ1bmN0aW9uKCl7fSk7XG5cbiAgICB9KTtcbiAgfVxuXHUwMDNDL3NjcmlwdD5cblxuXG5cbiAgXG5cblx1MDAzQ2RpdiBpZD1cImNwLW1lcmNoYW5kaXNpbmctd2lkZ2V0X2RpdlwiPlxuXHUwMDNDL2Rpdj5cblxuXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDZGl2IGlkPVwid2F5ZmluZGluZy1icmVhZGNydW1ic19jb250YWluZXJcIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXBhZGRpbmctbWVkaXVtIGZvbnQtc21vb3RoaW5nXCI+XG5cdTAwM0NkaXYgaWQ9XCJ3YXlmaW5kaW5nLWJyZWFkY3J1bWJzX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJhLXN1YmhlYWRlciBhLWJyZWFkY3J1bWIgZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwid2F5ZmluZGluZy1icmVhZGNydW1ic1wiPlxuICAgIFx1MDAzQ3VsIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLWhvcml6b250YWwgYS1zaXplLXNtYWxsXCI+XG4gICAgICAgICBcdTAwM0NsaT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsIGEtY29sb3ItdGVydGlhcnlcIiBocmVmPVwiL2FtYXpvbi1mYXNoaW9uL2IvcmVmPWRwX2JjX2F1aV9DXzEvMTQ1LTg5NzUzOTAtNTA2NDExMz9pZT1VVEY4JmFtcDtub2RlPTcxNDExMjMwMTFcIj5cbiAgICAgICAgICAgICAgICBDbG90aGluZywgU2hvZXMgJmFtcDsgSmV3ZWxyeVxuICAgICAgICAgICAgXHUwMDNDL2E+XG4gICAgICAgICBcdTAwM0Mvc3Bhbj5cdTAwM0MvbGk+XG4gICAgICAgICBcdTAwM0NsaSBjbGFzcz1cImEtYnJlYWRjcnVtYi1kaXZpZGVyXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtIGEtY29sb3ItdGVydGlhcnlcIj5cbiAgICAgICAgICAgICDigLpcbiAgICAgICAgIFx1MDAzQy9zcGFuPlx1MDAzQy9saT5cbiAgICAgICAgIFx1MDAzQ2xpPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWwgYS1jb2xvci10ZXJ0aWFyeVwiIGhyZWY9XCIvV29tZW5zLUZhc2hpb24vYi9yZWY9ZHBfYmNfYXVpX0NfMi8xNDUtODk3NTM5MC01MDY0MTEzP2llPVVURjgmYW1wO25vZGU9NzE0NzQ0MDAxMVwiPlxuICAgICAgICAgICAgICAgIFdvbWVuXG4gICAgICAgICAgICBcdTAwM0MvYT5cbiAgICAgICAgIFx1MDAzQy9zcGFuPlx1MDAzQy9saT5cbiAgICAgICAgIFx1MDAzQ2xpIGNsYXNzPVwiYS1icmVhZGNydW1iLWRpdmlkZXJcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW0gYS1jb2xvci10ZXJ0aWFyeVwiPlxuICAgICAgICAgICAgIOKAulxuICAgICAgICAgXHUwMDNDL3NwYW4+XHUwMDNDL2xpPlxuICAgICAgICAgXHUwMDNDbGk+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gICAgICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBhLWNvbG9yLXRlcnRpYXJ5XCIgaHJlZj1cIi9KZXdlbHJ5L2IvcmVmPWRwX2JjX2F1aV9DXzMvMTQ1LTg5NzUzOTAtNTA2NDExMz9pZT1VVEY4JmFtcDtub2RlPTcxOTIzOTQwMTFcIj5cbiAgICAgICAgICAgICAgICBKZXdlbHJ5XG4gICAgICAgICAgICBcdTAwM0MvYT5cbiAgICAgICAgIFx1MDAzQy9zcGFuPlx1MDAzQy9saT5cbiAgICAgICAgIFx1MDAzQ2xpIGNsYXNzPVwiYS1icmVhZGNydW1iLWRpdmlkZXJcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW0gYS1jb2xvci10ZXJ0aWFyeVwiPlxuICAgICAgICAgICAgIOKAulxuICAgICAgICAgXHUwMDNDL3NwYW4+XHUwMDNDL2xpPlxuICAgICAgICAgXHUwMDNDbGk+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gICAgICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBhLWNvbG9yLXRlcnRpYXJ5XCIgaHJlZj1cIi9Xb21lbnMtRmFzaGlvbi1FYXJyaW5ncy9iL3JlZj1kcF9iY19hdWlfQ180LzE0NS04OTc1MzkwLTUwNjQxMTM/aWU9VVRGOCZhbXA7bm9kZT03NDU0OTE3MDExXCI+XG4gICAgICAgICAgICAgICAgRWFycmluZ3NcbiAgICAgICAgICAgIFx1MDAzQy9hPlxuICAgICAgICAgXHUwMDNDL3NwYW4+XHUwMDNDL2xpPlxuICAgICAgICAgXHUwMDNDbGkgY2xhc3M9XCJhLWJyZWFkY3J1bWItZGl2aWRlclwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbSBhLWNvbG9yLXRlcnRpYXJ5XCI+XG4gICAgICAgICAgICAg4oC6XG4gICAgICAgICBcdTAwM0Mvc3Bhbj5cdTAwM0MvbGk+XG4gICAgICAgICBcdTAwM0NsaT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgICAgICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBhLWNvbG9yLXRlcnRpYXJ5XCIgaHJlZj1cIi9Xb21lbnMtRmFzaGlvbi1Ecm9wLURhbmdsZS1FYXJyaW5ncy9iL3JlZj1kcF9iY19hdWlfQ181LzE0NS04OTc1MzkwLTUwNjQxMTM/aWU9VVRGOCZhbXA7bm9kZT03NDU0OTIyMDExXCI+XG4gICAgICAgICAgICAgICAgIERyb3AgJmFtcDsgRGFuZ2xlXG4gICAgICAgICAgICAgXHUwMDNDL2E+XG4gICAgICAgICBcdTAwM0Mvc3Bhbj5cdTAwM0MvbGk+XG4gICAgXHUwMDNDL3VsPlxuXHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+IFxuXG4odHlwZW9mIHNldENTTVJlcSA9PT0gJ2Z1bmN0aW9uJykgJiYgc2V0Q1NNUmVxKFwieDFcIik7XG5cbiAgICAgICAgICAgICAgICBpZih0eXBlb2YgdWV0ID09PSAnZnVuY3Rpb24nKXt1ZXQoJ2JiJywgJ3VkcFYzYXRmd2FpdCcsIHt3YjogMX0pO307XG5cdTAwM0Mvc2NyaXB0PlxuXG4gICAgICAgIFx1MDAzQ2RpdiBpZD1cImRwLWNvbnRhaW5lclwiIGNsYXNzPVwiYS1jb250YWluZXJcIiByb2xlPVwibWFpblwiPlxuXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuICBcblxuXG5cblxuXG4gICAgXG5cblxuICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgIFxuICAgICAgICBcblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuXG5cblxuXG5cbiAgICAgIFxuXG4gICAgXG5cblxuICBcblxuXG4gIFxuXG5cblxuICAgIFxuICBcbiAgXG5cblxuICAgIFxuXG4gICAgXG5cblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblx1MDAzQ2RpdiBpZD1cIlByaW1lU3RyaXBlQ29udGVudFwiPlxuXG5cbiAgICAgIFxuICAgIFx1MDAzQy9kaXY+XG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuICBpZiAodHlwZW9mIENTTVJlcXMgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgIGlmIChDU01SZXFzLmhhc093blByb3BlcnR5KCdhZicpKSB7XG4gICAgICAgIENTTVJlcXMuYWYuYyA9IDE7XG4gICAgIH1cbiAgICAgaWYgKENTTVJlcXMuaGFzT3duUHJvcGVydHkoJ2NmJykpIHtcbiAgICAgICAgQ1NNUmVxcy5jZi5jID0gMTtcbiAgICAgfVxuICB9XG5cdTAwM0Mvc2NyaXB0PlxuXG5cblxuXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj4gICAgaWYodHlwZW9mIHVldCA9PT0gJ2Z1bmN0aW9uJyl7dWV0KCdiZScsICd1ZHBWM2F0ZndhaXQnLCB7d2I6IDF9KTt9O1xuICAgICAgICAgICAgICAgIGlmKHR5cGVvZiB1ZXggPT09ICdmdW5jdGlvbicpe3VleCgnbGQnLCAndWRwVjNhdGZ3YWl0Jywge3diOiAxfSk7fTtcblx1MDAzQy9zY3JpcHQ+XG5cblxuXG5cblxuXG5cbiAgXG5cblxuXG5cblxuICAgIFxuXG5cblxuXG5cblx1MDAzQ2RpdiBpZD1cInBwZFwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1iYXNlIGZvbnQtc21vb3RoaW5nXCI+XG4gICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj5cbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiY29tcGFueUNvbXBsaWFuY2VQb2xpY2llc19mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiY29tcGFueUNvbXBsaWFuY2VQb2xpY2llc1wiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG4gICAgXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcblxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImluc3RhbnRPcmRlclVwZGF0ZV9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiaW5zdGFudE9yZGVyVXBkYXRlXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJjZXJiZXJ1c19mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiY2VyYmVydXNcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuICAgIFxuICAgIFx1MDAzQ2RpdiBpZD1cImNlcmJlcnVzLWRhdGEtbWV0cmljc1wiIHN0eWxlPVwiZGlzcGxheTogbm9uZTtcIiBkYXRhLWFzaW49XCJCMDFHS1FJMzkyXCIgZGF0YS1hc2luLXByaWNlPVwiMTIuNTJcIiBkYXRhLWFzaW4tc2hpcHBpbmc9XCIwXCIgZGF0YS1hc2luLWN1cnJlbmN5LWNvZGU9XCJVU0RcIiBkYXRhLXN1YnN0aXR1dGUtY291bnQ9XCItMVwiIGRhdGEtZGV2aWNlLXR5cGU9XCJXRUJcIiBkYXRhLWRpc3BsYXktY29kZT1cIkFzaW4gaXMgbm90IGVsaWdpYmxlIGJlY2F1c2UgaXQgaXMgcHJpY2UgY29tcGV0aXRpdmVcIj5cdTAwM0MvZGl2PlxuXG4gICAgXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcblxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInByc3Vic3dpZGdldF9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwicHJzdWJzd2lkZ2V0XCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgIFx1MDAzQy9kaXY+XG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwibGVmdENvbFwiIGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuNSBkcF9haWJfbGVmdF9jb2x1bW5fdDFcIj5cbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiaW1hZ2VCbG9ja19mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiaW1hZ2VCbG9ja1wiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cbiAgICBcbiAgICAgIFxuXG5cblxuXG5cblx1MDAzQ2RpdiBpZD1cImltYWdlQmxvY2tcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cImEtc2VjdGlvbiBpbWFnZUJsb2NrUmVhcmNoXCIgc3R5bGU9XCJvcGFjaXR5OiAxO1wiPlxuICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtbGVmdC1ncmlkXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1maXhlZC1sZWZ0LWdyaWQtaW5uZXJcIiBzdHlsZT1cInBhZGRpbmctbGVmdDo1OHB4XCI+XG4gICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiYWx0SW1hZ2VzXCIgY2xhc3M9XCJhLWZpeGVkLWxlZnQtZ3JpZC1jb2wgYS1jb2wtbGVmdFwiIHN0eWxlPVwid2lkdGg6NThweDttYXJnaW4tbGVmdDotNThweDtmbG9hdDpsZWZ0O1wiPlxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDdWwgY2xhc3M9XCJhLXVub3JkZXJlZC1saXN0IGEtbm9zdHlsZSBhLWJ1dHRvbi1saXN0IGEtdmVydGljYWwgYS1zcGFjaW5nLXRvcC1leHRyYS1sYXJnZVwiPlxuXG4gICAgXG4gICAgXG5cbiAgICBcblxuICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgIFxuXG4gICAgXHUwMDNDbGkgY2xhc3M9XCJhLXNwYWNpbmctc21hbGwgMzYwSW5ncmVzc1RlbXBsYXRlIGFvay1oaWRkZW5cIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cInRodW1iLWFjdGlvblwiIGRhdGEtdGh1bWItYWN0aW9uPVwie31cIj5cbiAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbiBhLWJ1dHRvbi10aHVtYm5haWwgYS1idXR0b24tdG9nZ2xlXCIgaWQ9XCJhLWF1dG9pZC03XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uLWlubmVyXCI+XHUwMDNDaW5wdXQgY2xhc3M9XCJhLWJ1dHRvbi1pbnB1dFwiIHR5cGU9XCJzdWJtaXRcIiBhcmlhLWxhYmVsbGVkYnk9XCJhLWF1dG9pZC03LWFubm91bmNlXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uLXRleHRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBpZD1cImEtYXV0b2lkLTctYW5ub3VuY2VcIj5cbiAgICAgICAgICAgICAgICBcdTAwM0NpbWcgYWx0PVwiXCIgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL3gtbG9jYWxlL2NvbW1vbi90cmFuc3BhcmVudC1waXhlbC5fVjE5MjIzNDY3NV8uZ2lmXCI+XG4gICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgXHUwMDNDL3NwYW4+XHUwMDNDL2xpPlxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDbGkgY2xhc3M9XCJhLXNwYWNpbmctc21hbGwgdGVtcGxhdGVcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24tdGh1bWJuYWlsIGEtYnV0dG9uLXRvZ2dsZVwiIGlkPVwiYS1hdXRvaWQtOFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi1pbm5lclwiPlx1MDAzQ2lucHV0IGNsYXNzPVwiYS1idXR0b24taW5wdXRcIiB0eXBlPVwic3VibWl0XCIgYXJpYS1sYWJlbGxlZGJ5PVwiYS1hdXRvaWQtOC1hbm5vdW5jZVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi10ZXh0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaWQ9XCJhLWF1dG9pZC04LWFubm91bmNlXCI+XG4gICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwicGxhY2VIb2xkZXJcIj5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgIFx1MDAzQy9zcGFuPlx1MDAzQy9saT5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuXG4gICAgXG5cbiAgICBcbiAgICBcbiBcbiAgICBcblxuXHUwMDNDbGkgY2xhc3M9XCJhLXNwYWNpbmctc21hbGwgaXRlbSBpbWFnZVRodW1ibmFpbCBhLWRlY2xhcmF0aXZlXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uIGEtYnV0dG9uLXRodW1ibmFpbCBhLWJ1dHRvbi10b2dnbGUgYS1idXR0b24tc2VsZWN0ZWQgYS1idXR0b24tZm9jdXNcIiBpZD1cImEtYXV0b2lkLThcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24taW5uZXJcIj5cdTAwM0NpbnB1dCBjbGFzcz1cImEtYnV0dG9uLWlucHV0XCIgdHlwZT1cInN1Ym1pdFwiIGFyaWEtbGFiZWxsZWRieT1cImEtYXV0b2lkLTgtYW5ub3VuY2VcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24tdGV4dFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGlkPVwiYS1hdXRvaWQtOC1hbm5vdW5jZVwiPlxuICAgICAgICAgICAgICAgICAgXHUwMDNDaW1nIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS80MUg4ejRYYzBYTC5fQUNfVVM0MF8uanBnXCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XG4gICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cdTAwM0MvbGk+XHUwMDNDbGkgY2xhc3M9XCJhLXNwYWNpbmctc21hbGwgaXRlbSBpbWFnZVRodW1ibmFpbCBhLWRlY2xhcmF0aXZlXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uIGEtYnV0dG9uLXRodW1ibmFpbCBhLWJ1dHRvbi10b2dnbGVcIiBpZD1cImEtYXV0b2lkLThcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24taW5uZXJcIj5cdTAwM0NpbnB1dCBjbGFzcz1cImEtYnV0dG9uLWlucHV0XCIgdHlwZT1cInN1Ym1pdFwiIGFyaWEtbGFiZWxsZWRieT1cImEtYXV0b2lkLTgtYW5ub3VuY2VcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24tdGV4dFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGlkPVwiYS1hdXRvaWQtOC1hbm5vdW5jZVwiPlxuICAgICAgICAgICAgICAgICAgXHUwMDNDaW1nIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS81MUV2d2I4bDYlMkJMLl9BQ19VUzQwXy5qcGdcIj5cbiAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgIFx1MDAzQy9zcGFuPlx1MDAzQy9saT5cdTAwM0NsaSBjbGFzcz1cImEtc3BhY2luZy1zbWFsbCBpdGVtIGltYWdlVGh1bWJuYWlsIGEtZGVjbGFyYXRpdmVcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24tdGh1bWJuYWlsIGEtYnV0dG9uLXRvZ2dsZVwiIGlkPVwiYS1hdXRvaWQtOFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi1pbm5lclwiPlx1MDAzQ2lucHV0IGNsYXNzPVwiYS1idXR0b24taW5wdXRcIiB0eXBlPVwic3VibWl0XCIgYXJpYS1sYWJlbGxlZGJ5PVwiYS1hdXRvaWQtOC1hbm5vdW5jZVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi10ZXh0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaWQ9XCJhLWF1dG9pZC04LWFubm91bmNlXCI+XG4gICAgICAgICAgICAgICAgICBcdTAwM0NpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzQxcTJVUlZ1OGdMLl9BQ19VUzQwXy5qcGdcIj5cbiAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgIFx1MDAzQy9zcGFuPlx1MDAzQy9saT5cdTAwM0NsaSBjbGFzcz1cImEtc3BhY2luZy1zbWFsbCBpdGVtIGltYWdlVGh1bWJuYWlsIGEtZGVjbGFyYXRpdmVcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24tdGh1bWJuYWlsIGEtYnV0dG9uLXRvZ2dsZVwiIGlkPVwiYS1hdXRvaWQtOFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi1pbm5lclwiPlx1MDAzQ2lucHV0IGNsYXNzPVwiYS1idXR0b24taW5wdXRcIiB0eXBlPVwic3VibWl0XCIgYXJpYS1sYWJlbGxlZGJ5PVwiYS1hdXRvaWQtOC1hbm5vdW5jZVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi10ZXh0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaWQ9XCJhLWF1dG9pZC04LWFubm91bmNlXCI+XG4gICAgICAgICAgICAgICAgICBcdTAwM0NpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzQxYnVxSER0NWZMLl9BQ19VUzQwXy5qcGdcIj5cbiAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgIFx1MDAzQy9zcGFuPlx1MDAzQy9saT5cdTAwM0NsaSBjbGFzcz1cImEtc3BhY2luZy1zbWFsbCBpdGVtIGltYWdlVGh1bWJuYWlsIGEtZGVjbGFyYXRpdmVcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24tdGh1bWJuYWlsIGEtYnV0dG9uLXRvZ2dsZVwiIGlkPVwiYS1hdXRvaWQtOFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi1pbm5lclwiPlx1MDAzQ2lucHV0IGNsYXNzPVwiYS1idXR0b24taW5wdXRcIiB0eXBlPVwic3VibWl0XCIgYXJpYS1sYWJlbGxlZGJ5PVwiYS1hdXRvaWQtOC1hbm5vdW5jZVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi10ZXh0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaWQ9XCJhLWF1dG9pZC04LWFubm91bmNlXCI+XG4gICAgICAgICAgICAgICAgICBcdTAwM0NpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzQxUElrN3JraEpMLl9BQ19VUzQwXy5qcGdcIj5cbiAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgIFx1MDAzQy9zcGFuPlx1MDAzQy9saT5cdTAwM0NsaSBjbGFzcz1cImEtc3BhY2luZy1zbWFsbCBpdGVtIGltYWdlVGh1bWJuYWlsIGEtZGVjbGFyYXRpdmVcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24tdGh1bWJuYWlsIGEtYnV0dG9uLXRvZ2dsZVwiIGlkPVwiYS1hdXRvaWQtOFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi1pbm5lclwiPlx1MDAzQ2lucHV0IGNsYXNzPVwiYS1idXR0b24taW5wdXRcIiB0eXBlPVwic3VibWl0XCIgYXJpYS1sYWJlbGxlZGJ5PVwiYS1hdXRvaWQtOC1hbm5vdW5jZVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi10ZXh0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaWQ9XCJhLWF1dG9pZC04LWFubm91bmNlXCI+XG4gICAgICAgICAgICAgICAgICBcdTAwM0NpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxMTkxUmlPMzFMLl9BQ19VUzQwXy5qcGdcIj5cbiAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgIFx1MDAzQy9zcGFuPlx1MDAzQy9saT5cdTAwM0NsaSBjbGFzcz1cImEtc3BhY2luZy1zbWFsbCBpdGVtIHZpZGVvVGh1bWJuYWlsIGEtZGVjbGFyYXRpdmVcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24tdGh1bWJuYWlsIGEtYnV0dG9uLXRvZ2dsZVwiIGlkPVwiYS1hdXRvaWQtOFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi1pbm5lclwiPlx1MDAzQ2lucHV0IGNsYXNzPVwiYS1idXR0b24taW5wdXRcIiB0eXBlPVwic3VibWl0XCIgYXJpYS1sYWJlbGxlZGJ5PVwiYS1hdXRvaWQtOC1hbm5vdW5jZVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi10ZXh0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaWQ9XCJhLWF1dG9pZC04LWFubm91bmNlXCI+XG4gICAgICAgICAgICAgICAgICBcdTAwM0NpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzkxY1UlMkJ1VzFrOUwuU1M0MF9QS21iLXBsYXktYnV0dG9uLW92ZXJsYXktdGh1bWJfLnBuZ1wiPlxuICAgICAgICAgICAgICAgIFx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgXHUwMDNDL3NwYW4+XHUwMDNDL2xpPlx1MDAzQy91bD5cblxuIFx1MDAzQ3N0eWxlIHR5cGU9XCJ0ZXh0L2Nzc1wiPlxuICAgICNhbHRJbmdyZXNzU3BhbiB7XG4gICAgICAgIHdpZHRoOiA0MHB4O1xuICAgICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgfVxuXHUwMDNDL3N0eWxlPlxuXG5cbiAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS10ZXh0LWNlbnRlciBhLWZpeGVkLWxlZnQtZ3JpZC1jb2wgYS1jb2wtcmlnaHRcIiBzdHlsZT1cInBhZGRpbmctbGVmdDozLjUlO2Zsb2F0OmxlZnQ7XCI+XG4gICAgICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctYmFzZSBhLWdyaWQtdmVydGljYWwtYWxpZ24gYS1ncmlkLWNlbnRlciBjYW52YXMgaWU3LXdpZHRoLTk2XCIgc3R5bGU9XCJvcGFjaXR5OiAxO1wiPlxuICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cIm1haW4taW1hZ2UtY29udGFpbmVyXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2UtY29udGFpbmVyXCIgc3R5bGU9XCJoZWlnaHQ6IDM2MHB4O1wiPlxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuICAgIFx1MDAzQ2RpdiBpZD1cInZpZGVvLW91dGVyLWNvbnRhaW5lclwiPlxuICAgICAgICBcdTAwM0NkaXYgaWQ9XCJtYWluLXZpZGVvLWNvbnRhaW5lclwiIGNsYXNzPVwiY2hyb21lZnVsLWNvbnRhaW5lclwiPlxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0NkaXYgaWQ9XCJ2aWRlby1jYW52YXMtY2FwdGlvblwiIGNsYXNzPVwiYS1yb3dcIj5cbiAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtY29sdW1uIGEtc3BhbjEyIGEtdGV4dC1jZW50ZXJcIj5cbiAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGlkPVwidmlkZW9DYXB0aW9uXCIgY2xhc3M9XCJhLWNvbG9yLXNlY29uZGFyeVwiPlx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICBcdTAwM0MvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cdTAwM0NkaXYgY2xhc3M9XCJhLWhpZGRlblwiIGlkPVwiYXVpSW1tZXJzaXZlVmlld0RpdlwiPlx1MDAzQy9kaXY+IFxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgIFxuXG5cblxuXG5cdTAwM0NkaXYgY2xhc3M9XCJ2YXJpYXRpb25VbmF2YWlsYWJsZSB1bmF2YWlsYWJsZUV4cFwiIHN0eWxlPVwiZGlzcGxheTogbm9uZTtcIj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJpbm5lclwiPlxuICAgICAgICBcbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1ib3ggYS1hbGVydCBhLWFsZXJ0LWVycm9yXCIgYXJpYS1saXZlPVwiYXNzZXJ0aXZlXCIgcm9sZT1cImFsZXJ0XCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1ib3gtaW5uZXIgYS1hbGVydC1jb250YWluZXJcIj5cdTAwM0NoNCBjbGFzcz1cImEtYWxlcnQtaGVhZGluZ1wiPkltYWdlIFVuYXZhaWxhYmxlXHUwMDNDL2g0Plx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLWFsZXJ0XCI+XHUwMDNDL2k+XHUwMDNDZGl2IGNsYXNzPVwiYS1hbGVydC1jb250ZW50XCI+XG4gICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS10ZXh0LWJvbGRcIj5cbiAgICAgICAgICAgICAgICBJbWFnZSBub3QgYXZhaWxhYmxlIGZvclx1MDAzQ2JyPkNvbG9yOlxuICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJ1bnZhaWxhYmxlVmFyaWF0aW9uXCI+XHUwMDNDL3NwYW4+XG4gICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XG4gICAgXHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XG5cblxuXG5cblx1MDAzQyEtLSBBcHBlbmQgb25sb2FkIGZ1bmN0aW9uIHRvIHN0cmV0Y2ggaW1hZ2Ugb24gbG9hZCB0byBhdm9pZCBmbGlja2VyIHdoZW4gdHJhbnNpdGlvbmluZyBmcm9tIGxvdyByZXMgaW1hZ2UgZnJvbSBNYXNvbiB0byBsYXJnZSBpbWFnZSB2YXJpYW50IGluIGRlc2t0b3AgLS0+XG5cdTAwM0MhLS0gYW55IGNoYW5nZSBpbiBvbmxvYWQgZnVuY3Rpb24gcmVxdWlyZXMgYSBjb3JyZXNwb25kaW5nIGNoYW5nZSBpbiBNYXNvbiB0byBhbGxvdyBpdCBwYXNzIGluIC9tYXNvbi9hbWF6b24tZmFtaWx5L2dwL3Byb2R1Y3QvZmVhdHVyZXMvZW1iZWQtZmVhdHVyZXMubWkgLS0+XG5cdTAwM0MhLS0gYW5kIC9tYXNvbi9hbWF6b24tZmFtaWx5L2dwL3Byb2R1Y3QvZmVhdHVyZXMvZW1iZWQtbGFuZGluZy1pbWFnZS5taSAtLT5cblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICBcblxuXG5cblx1MDAzQ3VsIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLW5vc3R5bGUgYS1ob3Jpem9udGFsIGxpc3QgbWFpbnRhaW4taGVpZ2h0XCI+XG5cblxuXG5cdFx1MDAzQ2xpIGNsYXNzPVwiaW1hZ2UgaXRlbSBpdGVtTm8wIG1haW50YWluLWhlaWdodCBzZWxlY3RlZFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuXHQgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cIm1haW4taW1hZ2UtY2xpY2tcIiBkYXRhLW1haW4taW1hZ2UtY2xpY2s9XCJ7fVwiPlxuXHQgICAgICAgIFx1MDAzQ2RpdiBpZD1cImltZ1RhZ1dyYXBwZXJJZFwiIGNsYXNzPVwiaW1nVGFnV3JhcHBlclwiIHN0eWxlPVwiaGVpZ2h0OiAzNjBweDtcIj5cblx0ICAgICAgICAgICAgXHUwMDNDaW1nIGFsdD1cIktlbXN0b25lIEVsZWdhbnQgUm9zZSBHb2xkL1NpbHZlciAyIFRvbmUgTXVsdGlsYXllciBEYW5nbGUgRWFycmluZ3MgQWNjZXNzb3J5IGZvciBXb21hbiwgMi40IEluY2hlc1wiIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXNneUdxWDI3TC5fQUNfVVk2OTVfLmpwZ1wiIGRhdGEtb2xkLWhpcmVzPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxc2d5R3FYMjdMLl9BQ19VTDEwMDBfLmpwZ1wiIG9ubG9hZD1cImlmKHRoaXMud2lkdGgvdGhpcy5oZWlnaHQgPiAxLjApe3RoaXMuY2xhc3NOYW1lICs9ICcgYS1zdHJldGNoLWhvcml6b250YWwnfWVsc2V7dGhpcy5jbGFzc05hbWUgKz0gJyBhLXN0cmV0Y2gtdmVydGljYWwnfTt0aGlzLm9ubG9hZD0nJztcIiBjbGFzcz1cImEtZHluYW1pYy1pbWFnZSBhLXN0cmV0Y2gtdmVydGljYWxcIiBpZD1cImxhbmRpbmdJbWFnZVwiIGRhdGEtYS1keW5hbWljLWltYWdlPVwieyZxdW90O2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXNneUdxWDI3TC5fQUNfVVk1MzVfLmpwZyZxdW90OzpbNTM1LDUzNV0sJnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxc2d5R3FYMjdMLl9BQ19VWTY5NV8uanBnJnF1b3Q7Ols2OTUsNjk1XSwmcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFzZ3lHcVgyN0wuX0FDX1VZMzk1Xy5qcGcmcXVvdDs6WzM5NSwzOTVdLCZxdW90O2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXNneUdxWDI3TC5fQUNfVVk1NzVfLmpwZyZxdW90OzpbNTc1LDU3NV0sJnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxc2d5R3FYMjdMLl9BQ19VWTY3NV8uanBnJnF1b3Q7Ols2NzUsNjc1XSwmcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFzZ3lHcVgyN0wuX0FDX1VZNTAwXy5qcGcmcXVvdDs6WzUwMCw1MDBdLCZxdW90O2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXNneUdxWDI3TC5fQUNfVVk2MjVfLmpwZyZxdW90OzpbNjI1LDYyNV19XCIgc3R5bGU9XCJtYXgtd2lkdGg6IDI3My42cHg7IG1heC1oZWlnaHQ6IDM2MHB4O1wiPlxuXHQgICAgICAgIFx1MDAzQy9kaXY+XG5cdCAgICBcdTAwM0Mvc3Bhbj5cblx0XHUwMDNDL3NwYW4+XHUwMDNDL2xpPlxuXG5cblxuXG5cdTAwM0NsaSBjbGFzcz1cIm1haW5JbWFnZVRlbXBsYXRlIHRlbXBsYXRlXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cIm1haW4taW1hZ2UtY2xpY2tcIiBkYXRhLW1haW4taW1hZ2UtY2xpY2s9XCJ7fVwiPlxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJpbWdUYWdXcmFwcGVyXCI+XG4gICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwicGxhY2VIb2xkZXJcIj5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICBcdTAwM0Mvc3Bhbj5cblx1MDAzQy9zcGFuPlx1MDAzQy9saT5cblxuXG5cdTAwM0NsaSBjbGFzcz1cInN3YXRjaEhvdmVyRXhwIGEtaGlkZGVuIG1haW50YWluLWhlaWdodFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJtYWluLWltYWdlLWNsaWNrXCIgZGF0YS1tYWluLWltYWdlLWNsaWNrPVwie31cIj5cbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiaW1nVGFnV3JhcHBlclwiPlxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cInBsYWNlSG9sZGVyXCI+XHUwMDNDL3NwYW4+XG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgXHUwMDNDL3NwYW4+XG5cdTAwM0Mvc3Bhbj5cdTAwM0MvbGk+XG5cblxuXG5cdTAwM0NsaSBpZD1cIm5vRmxhc2hDb250ZW50XCIgY2xhc3M9XCJub0ZsYXNoIGEtaGlkZGVuXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gICAgXHUwMDNDaHphOnN0cmluZyBpZD1cInNvZnRsaW5lc19kcF92aWRlb19mbGFzaF9wbGF5ZXJcIj5cbiAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCIgaHJlZj1cImh0dHBzOi8vZ2V0LmFkb2JlLmNvbS9mbGFzaHBsYXllclwiPlxuICAgICAgICBcdTAwM0NoemE6c3RyaW5nIGlkPVwic29mdGxpbmVzX2RwX3ZpZGVvX2ZsYXNoX3BsYXllcl90ZXh0XCI+XG4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJzd1Nwcml0ZSBzX2V4dExpbmtcIj5cdTAwM0Mvc3Bhbj5cbiAgICBcdTAwM0MvaHphOnN0cmluZz5cdTAwM0MvYT5cblx1MDAzQy9oemE6c3RyaW5nPlx1MDAzQy9zcGFuPlx1MDAzQy9saT5cblxuXG5cdTAwM0MvdWw+XG5cblxuXG5cblxuXG5cblx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG4gICAgdmFyIG1haW5JbWdDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW4taW1hZ2UtY29udGFpbmVyXCIpO1xuICAgIHZhciBsYW5kaW5nSW1hZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxhbmRpbmdJbWFnZVwiKTtcbiAgICB2YXIgaW1nV3JhcHBlckRpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaW1nVGFnV3JhcHBlcklkXCIpO1xuICAgIFxuICAgIHZhciBjb250YWluZXJXaWR0aCA9IG1haW5JbWdDb250YWluZXIub2Zmc2V0V2lkdGg7XG4gICAgdmFyIGhvbGRlclJhdGlvID0gMS4wO1xuICAgIHZhciBzaG91bGRBdXRvUGxheSA9IGZhbHNlO1xuICAgIHZhciBjb250YWluZXJIZWlnaHQgPSBjb250YWluZXJXaWR0aC9ob2xkZXJSYXRpbztcbiAgICBjb250YWluZXJIZWlnaHQgPSBNYXRoLm1pbihjb250YWluZXJIZWlnaHQsIDU3NSk7XG5cbiAgICB2YXIgZHluYW1pY0ltYWdlTWF4SGVpZ2h0ID0gNjk1IDtcbiAgICB2YXIgZHluYW1pY0ltYWdlTWF4V2lkdGggPSA2OTUgO1xuICAgIFxuICAgIGR5bmFtaWNJbWFnZU1heEhlaWdodCA9IGxhbmRpbmdJbWFnZS5uYXR1cmFsSGVpZ2h0O1xuICAgIGR5bmFtaWNJbWFnZU1heFdpZHRoID0gbGFuZGluZ0ltYWdlLm5hdHVyYWxXaWR0aDtcbiAgICBcbiAgICB2YXIgYXNwZWN0UmF0aW8gPSBkeW5hbWljSW1hZ2VNYXhXaWR0aC9keW5hbWljSW1hZ2VNYXhIZWlnaHQ7XG5cbiAgICB2YXIgaW1hZ2VNYXhIZWlnaHQgPSBjb250YWluZXJIZWlnaHQ7XG4gICAgdmFyIGltYWdlTWF4V2lkdGggPSBjb250YWluZXJXaWR0aDtcblxuICAgIGlmKCFzaG91bGRBdXRvUGxheSAmJiAhdHJ1ZSkge1xuICAgICAgICBpbWFnZU1heEhlaWdodCA9IE1hdGgubWluKGltYWdlTWF4SGVpZ2h0LCBkeW5hbWljSW1hZ2VNYXhIZWlnaHQpO1xuICAgICAgICBpbWFnZU1heFdpZHRoID0gTWF0aC5taW4oaW1hZ2VNYXhXaWR0aCwgZHluYW1pY0ltYWdlTWF4V2lkdGgpO1xuICAgIH1cblxuICAgIFxuICAgIHZhciB1c2VJbWFnZUJsb2NrTGVmdENvbENlbnRlcmluZyA9IGZhbHNlO1xuICAgIHZhciByaWdodE1hcmdpbiA9IDU4O1xuXG4gICAgaWYodHlwZW9mIHVzZUltYWdlQmxvY2tMZWZ0Q29sQ2VudGVyaW5nICE9PSBcInVuZGVmaW5lZFwiICYmIHVzZUltYWdlQmxvY2tMZWZ0Q29sQ2VudGVyaW5nKXtcbiAgICAgICAgbWFpbkltZ0NvbnRhaW5lci5zdHlsZS5tYXJnaW5SaWdodCA9IHJpZ2h0TWFyZ2luICsgXCJweFwiO1xuICAgIH1cbiAgICBtYWluSW1nQ29udGFpbmVyLnN0eWxlLmhlaWdodCA9IGNvbnRhaW5lckhlaWdodCArIFwicHhcIjtcbiAgICBcbiAgICB2YXIgaW1hZ2VNYXhXaWR0aEJhc2VkT25IZWlnaHQgPSBpbWFnZU1heEhlaWdodCAqIGFzcGVjdFJhdGlvO1xuICAgIHZhciBpbWFnZU1heEhlaWdodEJhc2VkT25XaWR0aCA9IGltYWdlTWF4V2lkdGggLyBhc3BlY3RSYXRpbztcbiAgICBpbWFnZU1heEhlaWdodCA9IE1hdGgubWluKGltYWdlTWF4SGVpZ2h0LCBpbWFnZU1heEhlaWdodEJhc2VkT25XaWR0aCk7XG4gICAgaW1hZ2VNYXhXaWR0aCA9IE1hdGgubWluKGltYWdlTWF4V2lkdGgsIGltYWdlTWF4V2lkdGhCYXNlZE9uSGVpZ2h0KTtcblxuICAgIGlmKGltZ1dyYXBwZXJEaXYpe1xuICAgICAgICBpbWdXcmFwcGVyRGl2LnN0eWxlLmhlaWdodCA9IGNvbnRhaW5lckhlaWdodCArIFwicHhcIjtcbiAgICB9XG5cbiAgICBpZihsYW5kaW5nSW1hZ2Upe1xuICAgICAgICBsYW5kaW5nSW1hZ2Uuc3R5bGUubWF4SGVpZ2h0ID0gaW1hZ2VNYXhIZWlnaHQgKyBcInB4XCI7XG4gICAgICAgIGxhbmRpbmdJbWFnZS5zdHlsZS5tYXhXaWR0aCA9IGltYWdlTWF4V2lkdGggKyBcInB4XCI7XG4gICAgfVxuXG4gICAgaWYoc2hvdWxkQXV0b1BsYXkpe1xuICAgICAgICBpZihsYW5kaW5nSW1hZ2Upe1xuICAgICAgICAgICAgbGFuZGluZ0ltYWdlLnN0eWxlLmhlaWdodCA9IGltYWdlTWF4SGVpZ2h0ICsgXCJweFwiO1xuICAgICAgICAgICAgbGFuZGluZ0ltYWdlLnN0eWxlLndpZHRoICA9IGltYWdlTWF4V2lkdGggKyBcInB4XCI7XG4gICAgICAgIH1cbiAgICB9XG5cblx1MDAzQy9zY3JpcHQ+XG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICAgIFx1MDAzQ2RpdiBzdHlsZT1cInBvc2l0aW9uOiBhYnNvbHV0ZTsgbGVmdDogNTAlOyB0b3A6IDUwJTsgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtNTAlLCAtNTAlLCAwcHgpOyB6LWluZGV4OiAzOyB3aWR0aDogNDhweDsgaGVpZ2h0OiA0OHB4OyBib3JkZXI6IDhweCBzb2xpZCByZ2IoMjU1LCAyNTUsIDI1NSk7IGJvcmRlci1yYWRpdXM6IDEwMCU7IGRpc3BsYXk6IG5vbmU7XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtc3Bpbm5lciBhLXNwaW5uZXItbWVkaXVtXCI+XHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2PlxuXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cblx1MDAzQ2M6aWYgdGVzdD1cImZhbHNlXCI+XG5cdTAwM0NkaXYgaWQ9XCJpbWFnZS1jYW52YXMtY2FwdGlvblwiIGNsYXNzPVwiYS1yb3dcIj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLWNvbHVtbiBhLXNwYW4xMiBhLXRleHQtY2VudGVyXCI+XG4gICAgICAgIFx1MDAzQ3NwYW4gaWQ9XCJjYW52YXNDYXB0aW9uXCIgY2xhc3M9XCJhLXNpemUtc21hbGwgYS1jb2xvci1zZWNvbmRhcnlcIj5Sb2xsIG92ZXIgaW1hZ2UgdG8gem9vbSBpblx1MDAzQy9zcGFuPlxuICAgIFx1MDAzQy9kaXY+XG5cdTAwM0MvZGl2PlxuXHUwMDNDZGl2IGlkPVwibW9kZWwtbWVhc3VyZW1lbnRzLWNvbnRhaW5lclwiIGNsYXNzPVwiYS1yb3dcIj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLWNvbHVtbiBhLXNwYW4xMiBhLXRleHQtY2VudGVyXCI+XG4gICAgICAgIFx1MDAzQ3NwYW4gaWQ9XCJtb2RlbFByaW1hcnlcIiBjbGFzcz1cImEtY29sb3ItYmFzZVwiPlx1MDAzQy9zcGFuPlxuICAgICAgICBcdTAwM0NzcGFuIGlkPVwibW9kZWxTZWNvbmRhcnlcIiBjbGFzcz1cImEtY29sb3ItYmFzZVwiPlx1MDAzQy9zcGFuPlxuICAgIFx1MDAzQy9kaXY+XG5cdTAwM0MvZGl2PlxuXHUwMDNDL2M6aWY+XG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJjb2xsZWN0aW9ucy1jb2xsZWN0LWJ1dHRvblwiPlx1MDAzQy9kaXY+XG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2PlxuXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG5cblxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuUC53aGVuKCdBJykucmVnaXN0ZXIoXCJJbWFnZUJsb2NrQVRGXCIsIGZ1bmN0aW9uKEEpe1xuICAgIHZhciBkYXRhID0ge1xuICAgICAgICAgICAgICAgICdjb2xvckltYWdlcyc6IHsgJ2luaXRpYWwnOiBbe1wiaGlSZXNcIjpcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXNneUdxWDI3TC5fQUNfVUwxMDAwXy5qcGdcIixcInRodW1iXCI6XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFIOHo0WGMwWEwuX0FDX1VTNDBfLmpwZ1wiLFwibGFyZ2VcIjpcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS80MUg4ejRYYzBYTC5fQUNfLmpwZ1wiLFwibWFpblwiOntcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXNneUdxWDI3TC5fQUNfVVkzOTVfLmpwZ1wiOlszOTUsMzk1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXNneUdxWDI3TC5fQUNfVVk1MDBfLmpwZ1wiOls1MDAsNTAwXSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXNneUdxWDI3TC5fQUNfVVk1MzVfLmpwZ1wiOls1MzUsNTM1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXNneUdxWDI3TC5fQUNfVVk1NzVfLmpwZ1wiOls1NzUsNTc1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXNneUdxWDI3TC5fQUNfVVk2MjVfLmpwZ1wiOls2MjUsNjI1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXNneUdxWDI3TC5fQUNfVVk2NzVfLmpwZ1wiOls2NzUsNjc1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXNneUdxWDI3TC5fQUNfVVk2OTVfLmpwZ1wiOls2OTUsNjk1XX0sXCJ2YXJpYW50XCI6XCJNQUlOXCIsXCJsb3dSZXNcIjpudWxsfSx7XCJoaVJlc1wiOlwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxd0lyY09PUENMLl9BQ19VTDEwMDBfLmpwZ1wiLFwidGh1bWJcIjpcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS81MUV2d2I4bDYlMkJMLl9BQ19VUzQwXy5qcGdcIixcImxhcmdlXCI6XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFFdndiOGw2JTJCTC5fQUNfLmpwZ1wiLFwibWFpblwiOntcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXdJcmNPT1BDTC5fQUNfVVkzOTVfLmpwZ1wiOlszOTUsMzk1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXdJcmNPT1BDTC5fQUNfVVk1MDBfLmpwZ1wiOls1MDAsNTAwXSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXdJcmNPT1BDTC5fQUNfVVk1MzVfLmpwZ1wiOls1MzUsNTM1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXdJcmNPT1BDTC5fQUNfVVk1NzVfLmpwZ1wiOls1NzUsNTc1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXdJcmNPT1BDTC5fQUNfVVk2MjVfLmpwZ1wiOls2MjUsNjI1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXdJcmNPT1BDTC5fQUNfVVk2NzVfLmpwZ1wiOls2NzUsNjc1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXdJcmNPT1BDTC5fQUNfVVk2OTVfLmpwZ1wiOls2OTUsNjk1XX0sXCJ2YXJpYW50XCI6XCJQVDAxXCIsXCJsb3dSZXNcIjpudWxsfSx7XCJoaVJlc1wiOlwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxVG83M3JaNTJMLl9BQ19VTDEyMDBfLmpwZ1wiLFwidGh1bWJcIjpcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS80MXEyVVJWdThnTC5fQUNfVVM0MF8uanBnXCIsXCJsYXJnZVwiOlwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzQxcTJVUlZ1OGdMLl9BQ18uanBnXCIsXCJtYWluXCI6e1wiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxVG83M3JaNTJMLl9BQ19VWTM5NV8uanBnXCI6WzM5NSwzOTVdLFwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxVG83M3JaNTJMLl9BQ19VWTUwMF8uanBnXCI6WzUwMCw1MDBdLFwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxVG83M3JaNTJMLl9BQ19VWTUzNV8uanBnXCI6WzUzNSw1MzVdLFwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxVG83M3JaNTJMLl9BQ19VWTU3NV8uanBnXCI6WzU3NSw1NzVdLFwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxVG83M3JaNTJMLl9BQ19VWTYyNV8uanBnXCI6WzYyNSw2MjVdLFwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxVG83M3JaNTJMLl9BQ19VWTY3NV8uanBnXCI6WzY3NSw2NzVdLFwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxVG83M3JaNTJMLl9BQ19VWTY5NV8uanBnXCI6WzY5NSw2OTVdfSxcInZhcmlhbnRcIjpcIlBUMDJcIixcImxvd1Jlc1wiOm51bGx9LHtcImhpUmVzXCI6XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFBT2ZtUWx2akwuX0FDX1VMMTIwMF8uanBnXCIsXCJ0aHVtYlwiOlwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzQxYnVxSER0NWZMLl9BQ19VUzQwXy5qcGdcIixcImxhcmdlXCI6XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFidXFIRHQ1ZkwuX0FDXy5qcGdcIixcIm1haW5cIjp7XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFBT2ZtUWx2akwuX0FDX1VZMzk1Xy5qcGdcIjpbMzk1LDM5NV0sXCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFBT2ZtUWx2akwuX0FDX1VZNTAwXy5qcGdcIjpbNTAwLDUwMF0sXCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFBT2ZtUWx2akwuX0FDX1VZNTM1Xy5qcGdcIjpbNTM1LDUzNV0sXCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFBT2ZtUWx2akwuX0FDX1VZNTc1Xy5qcGdcIjpbNTc1LDU3NV0sXCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFBT2ZtUWx2akwuX0FDX1VZNjI1Xy5qcGdcIjpbNjI1LDYyNV0sXCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFBT2ZtUWx2akwuX0FDX1VZNjc1Xy5qcGdcIjpbNjc1LDY3NV0sXCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFBT2ZtUWx2akwuX0FDX1VZNjk1Xy5qcGdcIjpbNjk1LDY5NV19LFwidmFyaWFudFwiOlwiUFQwM1wiLFwibG93UmVzXCI6bnVsbH0se1wiaGlSZXNcIjpcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXFobG1SJTJCeUtMLl9BQ19VTDEwMDBfLmpwZ1wiLFwidGh1bWJcIjpcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS80MVBJazdya2hKTC5fQUNfVVM0MF8uanBnXCIsXCJsYXJnZVwiOlwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzQxUElrN3JraEpMLl9BQ18uanBnXCIsXCJtYWluXCI6e1wiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxcWhsbVIlMkJ5S0wuX0FDX1VZMzk1Xy5qcGdcIjpbMzk1LDM5NV0sXCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFxaGxtUiUyQnlLTC5fQUNfVVk1MDBfLmpwZ1wiOls1MDAsNTAwXSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXFobG1SJTJCeUtMLl9BQ19VWTUzNV8uanBnXCI6WzUzNSw1MzVdLFwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxcWhsbVIlMkJ5S0wuX0FDX1VZNTc1Xy5qcGdcIjpbNTc1LDU3NV0sXCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFxaGxtUiUyQnlLTC5fQUNfVVk2MjVfLmpwZ1wiOls2MjUsNjI1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXFobG1SJTJCeUtMLl9BQ19VWTY3NV8uanBnXCI6WzY3NSw2NzVdLFwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxcWhsbVIlMkJ5S0wuX0FDX1VZNjk1Xy5qcGdcIjpbNjk1LDY5NV19LFwidmFyaWFudFwiOlwiUFQwNFwiLFwibG93UmVzXCI6bnVsbH0se1wiaGlSZXNcIjpcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS83MUViSFBQWHo2TC5fQUNfVUwxMDAwXy5qcGdcIixcInRodW1iXCI6XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjExOTFSaU8zMUwuX0FDX1VTNDBfLmpwZ1wiLFwibGFyZ2VcIjpcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MTE5MVJpTzMxTC5fQUNfLmpwZ1wiLFwibWFpblwiOntcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS83MUViSFBQWHo2TC5fQUNfVVkzOTVfLmpwZ1wiOlszOTUsMzk1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS83MUViSFBQWHo2TC5fQUNfVVk1MDBfLmpwZ1wiOls1MDAsNTAwXSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS83MUViSFBQWHo2TC5fQUNfVVk1MzVfLmpwZ1wiOls1MzUsNTM1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS83MUViSFBQWHo2TC5fQUNfVVk1NzVfLmpwZ1wiOls1NzUsNTc1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS83MUViSFBQWHo2TC5fQUNfVVk2MjVfLmpwZ1wiOls2MjUsNjI1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS83MUViSFBQWHo2TC5fQUNfVVk2NzVfLmpwZ1wiOls2NzUsNjc1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS83MUViSFBQWHo2TC5fQUNfVVk2OTVfLmpwZ1wiOls2OTUsNjk1XX0sXCJ2YXJpYW50XCI6XCJQVDA1XCIsXCJsb3dSZXNcIjpudWxsfSx7XCJoaVJlc1wiOlwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxNHdTNVI1cG5MLl9BQ19VTDEwMDFfLmpwZ1wiLFwidGh1bWJcIjpcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS81MW1rVk0lMkJlVjZMLl9BQ19VUzQwXy5qcGdcIixcImxhcmdlXCI6XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFta1ZNJTJCZVY2TC5fQUNfLmpwZ1wiLFwibWFpblwiOntcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MTR3UzVSNXBuTC5fQUNfVVkzOTVfLmpwZ1wiOlszOTUsMzk1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MTR3UzVSNXBuTC5fQUNfVVk1MDBfLmpwZ1wiOls1MDAsNTAwXSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MTR3UzVSNXBuTC5fQUNfVVk1MzVfLmpwZ1wiOls1MzUsNTM1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MTR3UzVSNXBuTC5fQUNfVVk1NzVfLmpwZ1wiOls1NzUsNTc1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MTR3UzVSNXBuTC5fQUNfVVk2MjVfLmpwZ1wiOls2MjUsNjI1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MTR3UzVSNXBuTC5fQUNfVVk2NzVfLmpwZ1wiOls2NzUsNjc1XSxcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MTR3UzVSNXBuTC5fQUNfVVk2OTVfLmpwZ1wiOls2OTUsNjk1XX0sXCJ2YXJpYW50XCI6XCJQVDA2XCIsXCJsb3dSZXNcIjpudWxsfV19LFxuICAgICAgICAgICAgICAgICdjb2xvclRvQXNpbic6IHsnaW5pdGlhbCc6IHt9fSxcbiAgICAgICAgICAgICAgICAnaG9sZGVyUmF0aW8nOiAxLjAsXG4gICAgICAgICAgICAgICAgJ2hvbGRlck1heEhlaWdodCc6IDU3NSxcbiAgICAgICAgICAgICAgICAnaGVyb0ltYWdlJzogeydpbml0aWFsJzogW119LFxuICAgICAgICAgICAgICAgICdoZXJvVmlkZW8nOiB7J2luaXRpYWwnOiBbXX0sXG4gICAgICAgICAgICAgICAgJ3NwaW4zNjBDb2xvckRhdGEnOiB7J2luaXRpYWwnOiB7fX0sXG4gICAgICAgICAgICAgICAgJ3NwaW4zNjBDb2xvckVuYWJsZWQnOiB7J2luaXRpYWwnOiAwfSxcbiAgICAgICAgICAgICAgICAnc3BpbjM2MENvbmZpZ0VuYWJsZWQnOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAnc3BpbjM2MExhenlMb2FkRW5hYmxlZCc6IGZhbHNlLFxuICAgICAgICAgICAgICAgICdwbGF5VmlkZW9JbkltbWVyc2l2ZVZpZXcnOmZhbHNlLFxuICAgICAgICAgICAgICAgICd1c2VUYWJiZWRJbW1lcnNpdmVWaWV3JzpmYWxzZSxcbiAgICAgICAgICAgICAgICAndG90YWxWaWRlb0NvdW50JzonMCcsXG4gICAgICAgICAgICAgICAgJ3ZpZGVvSW5ncmVzc0FURlNsYXRlVGh1bWJVUkwnOidodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvOTFjVSUyQnVXMWs5TC5fU1M0MF9QS21iLXBsYXktYnV0dG9uLW92ZXJsYXktdGh1bWJfLnBuZycsXG4gICAgICAgICAgICAgICAgJ21lZGlhVHlwZUNvdW50JzonMCcsXG4gICAgICAgICAgICAgICAgJ2F0ZkVuaGFuY2VkSG92ZXJPdmVybGF5JyA6IHRydWUsXG4gICAgICAgICAgICAgICAgJ3dpbm5pbmdBc2luJzogJ0IwMUdLUUkzOTInLFxuICAgICAgICAgICAgICAgICd3ZWJsYWJzJyA6IHt9LFxuICAgICAgICAgICAgICAgICdhaWJFeHAzTGF5b3V0JyA6IDEsXG4gICAgICAgICAgICAgICAgJ2FpYlJ1bGVOYW1lJyA6ICdmcmFuay1wb3dlcmVkJyxcbiAgICAgICAgICAgICAgICAnYWNFbmFibGVkJyA6IHRydWUsXG4gICAgICAgICAgICAgICAgJ2RwNjBWaWRlb1Bvc2l0aW9uJzogMCxcbiAgICAgICAgICAgICAgICAnZHA2MFZhcmlhbnRMaXN0JzogJycsXG4gICAgICAgICAgICAgICAgJ2RwNjBWaWRlb1RodW1iJzogJycsXG4gICAgICAgICAgICAgICAgJ2RwNjBNYWluSW1hZ2UnOiAnaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxc2d5R3FYMjdMLl9BQ19VWTM5NV8uanBnJyxcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB9O1xuICAgIEEudHJpZ2dlcignUC5BYm92ZVRoZUZvbGQnKTsgLy8gdHJpZ2dlciBBVEYgZXZlbnQuXG4gICAgcmV0dXJuIGRhdGE7XG59KTtcblx1MDAzQy9zY3JpcHQ+XG5cblxuXG5cdTAwM0NkaXYgaWQ9XCJ0d2lzdGVyLW1haW4taW1hZ2VcIiBjbGFzcz1cImEtaGlkZGVuXCIgY3VzdG9tZnVuY3Rpb25uYW1lPVwiKGZ1bmN0aW9uKGlkLCBzdGF0ZSl7IFAud2hlbignQScpLmV4ZWN1dGUoZnVuY3Rpb24oQSl7IEEudHJpZ2dlcignaW1hZ2UtYmxvY2stdHdpc3Rlci1zd2F0Y2gtaG92ZXInLCBpZCwgc3RhdGUpOyB9KTsgfSk7XCI+XHUwMDNDL2Rpdj5cblxuXHUwMDNDZGl2IGlkPVwidGh1bWJzLWltYWdlXCIgY2xhc3M9XCJhLWhpZGRlblwiIGN1c3RvbWZ1bmN0aW9ubmFtZT1cIihmdW5jdGlvbihpZCwgc3RhdGUsIG9ubG9hZEZ1bmN0aW9uKXsgUC53aGVuKCdBJykuZXhlY3V0ZShmdW5jdGlvbihBKXsgQS50cmlnZ2VyKCdpbWFnZS1ibG9jay10d2lzdGVyLXN3YXRjaC1jbGljaycsIGlkLCBzdGF0ZSwgb25sb2FkRnVuY3Rpb24pOyB9KTsgfSk7XCI+XHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICBcblxuXG5cblxuXG4gICAgXG4gXG5cblxuXG5cblxuXG5cblxuXG5cdFxuXHQgICAgXG5cdCAgICBcblx0XG5cdFxuXG5cblxuXG4gICAgXG5cblxuXG5cdTAwM0NkaXYgY2xhc3M9XCJhLXBvcG92ZXItcHJlbG9hZFwiIGlkPVwiYS1wb3BvdmVyLWltbWVyc2l2ZVZpZXdcIj5cblxuICAgIFx1MDAzQ2RpdiBpZD1cIml2TWFpblwiIGNsYXNzPVwibGVnYWN5SW1tZXJzaXZlVmlld1wiPlxuICAgICAgICBcdTAwM0NkaXYgaWQ9XCJpdlRodW1iQ29sdW1uXCI+XG4gICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJpdlRpdGxlXCI+XHUwMDNDL2Rpdj5cbiAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cIml2VmFyaWF0aW9uU2VsZWN0aW9uXCI+XHUwMDNDL2Rpdj5cbiAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cIml2TWVkaWFTZWxlY3Rpb25cIj5cbiAgICAgICAgICAgICAgICBcdTAwM0NzZWxlY3QgaWQ9XCJpdk1lZGlhU2VsZWN0XCI+XHUwMDNDL3NlbGVjdD5cbiAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJpdlRodW1ic1wiPlxuICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cIml2Um93IHBsYWNlaG9sZGVyXCI+XHUwMDNDL2Rpdj5cbiAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiaXZUaHVtYlZpZGVvUG9wb3ZlciBwbGFjZWhvbGRlclwiPlxuICAgICAgICAgICAgICAgICAgICBcdTAwM0NiIGNsYXNzPVwiaXZWaWRlb1BvcG92ZXJUaXRsZVwiPlx1MDAzQy9iPlx1MDAzQ2JyPlx1MDAzQ3NwYW4gY2xhc3M9XCJpdlZpZGVvUG9wb3ZlckR1cmF0aW9uXCI+XHUwMDNDL3NwYW4+XG4gICAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiaXZUaHVtYiBwbGFjZWhvbGRlclwiPlxuICAgICAgICAgICAgICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJpdlRodW1iSW1hZ2VcIj5cdTAwM0MvZGl2PlxuICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiaXZWaWRlb0xpc3RcIj5cbiAgICAgICAgICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJpdlRodW1iVmlkZW9MaXN0T3V0ZXIgcGxhY2Vob2xkZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiaXZUaHVtYlZpZGVvTGlzdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiaXZUaHVtYkltYWdlXCI+XHUwMDNDL2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiaXZUaHVtYlRleHRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2IgY2xhc3M9XCJpdlRodW1iVGl0bGVcIj5cdTAwM0MvYj5cbiAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJpdlRodW1iRHVyYXRpb25cIj5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cIml2Q2xlYXJmaXhcIj5cdTAwM0MvZGl2PlxuICAgICAgICAgICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0NkaXYgaWQ9XCJpdlN0YWdlXCI+XG4gICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJpdkxhcmdlSW1hZ2VcIj5cdTAwM0MvZGl2PlxuICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiaXZMYXJnZVZpZGVvXCI+XHUwMDNDL2Rpdj5cbiAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cIml2TGFyZ2UzNjBcIj5cdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJpdkNsZWFyZml4XCI+XHUwMDNDL2Rpdj5cbiAgICBcdTAwM0MvZGl2PlxuXG5cdTAwM0MvZGl2PlxuXG5cblxuXG4gICAgXG5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJkcC1jaWYgYW9rLWhpZGRlblwiIGRhdGEtZmVhdHVyZS1kZXRhaWxzPVwieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7aW1hZ2VibG9jayZxdW90OywmcXVvdDtoYXNDb21wb25lbnRzJnF1b3Q7OnRydWUsJnF1b3Q7Y29tcG9uZW50cyZxdW90OzpbeyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7bWFpbmltYWdlJnF1b3Q7LCZxdW90O2V2ZW50cyZxdW90OzpbJnF1b3Q7Y2xpY2smcXVvdDssJnF1b3Q7aG92ZXImcXVvdDtdfSx7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDt0aHVtYm5haWwmcXVvdDssJnF1b3Q7ZXZlbnRzJnF1b3Q7OlsmcXVvdDtjbGljayZxdW90OywmcXVvdDtob3ZlciZxdW90O119XX1cIj5cdTAwM0MvZGl2PlxuICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHt2YXIgX25wPSh3aW5kb3cuUC5fbmFtZXNwYWNlKFwiRGV0YWlsUGFnZUltYWdlQmxvY2tUZW1wbGF0ZVwiKSk7aWYoX25wLmd1YXJkRmF0YWwpe19ucC5ndWFyZEZhdGFsKGYpKF9ucCk7fWVsc2V7ZihfbnApO319KGZ1bmN0aW9uKFApIHtcbiAgICAgICAgUC5ub3coKS5leGVjdXRlKCdkcC1tYXJrLWltYWdlYmxvY2snLGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICB2YXIgb3B0aW9ucyA9IHtcbiAgICAgICAgICAgICAgICBoYXNDb21wb25lbnRzOiB0cnVlLFxuICAgICAgICAgICAgICAgIGNvbXBvbmVudHM6IFt7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdtYWluaW1hZ2UnXG4gICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAndGh1bWJuYWlsJ1xuICAgICAgICAgICAgICAgIH1dXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cubWFya0ZlYXR1cmVSZW5kZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICB3aW5kb3cubWFya0ZlYXR1cmVSZW5kZXIoJ2ltYWdlYmxvY2snLG9wdGlvbnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KSk7XHUwMDNDL3NjcmlwdD5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgIFx1MDAzQy9kaXY+XG5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLWNvbHVtbiBhLXNwYW43IGRwX2FpYl9yaWdodF9jb2x1bW5fdDEgYS1zcGFuLWxhc3RcIj5cbiAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtcmlnaHQtZ3JpZFwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtcmlnaHQtZ3JpZC1pbm5lclwiIHN0eWxlPVwicGFkZGluZy1yaWdodDoyNDRweFwiPlxuICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiY2VudGVyQ29sXCIgY2xhc3M9XCJhLWZpeGVkLXJpZ2h0LWdyaWQtY29sIGllNy13aWR0aC05MzUgYS1jb2wtbGVmdFwiIHN0eWxlPVwicGFkZGluZy1yaWdodDo2LjUlO2Zsb2F0OmxlZnQ7XCI+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInRpdGxlQmxvY2tcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cInRpdGxlQmxvY2tcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFx0ICAgIFxuICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDZGl2IGlkPVwidGl0bGVCbG9ja0xlZnRTZWN0aW9uXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj5cbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJieWxpbmVJbmZvX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJieWxpbmVJbmZvXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuICAgICBcblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2EgaWQ9XCJieWxpbmVJbmZvXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9LZW1zdG9uZS9iL3JlZj13X2JsX3NsX2FwX2plX3dlYl8xNDEzOTIxNTAxMT9pZT1VVEY4JmFtcDtub2RlPTE0MTM5MjE1MDExJmFtcDtmaWVsZC1sYnJfYnJhbmRzX2Jyb3dzZS1iaW49S2Vtc3RvbmVcIj5LZW1zdG9uZVx1MDAzQy9hPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICBcblxuICAgIFxuICAgIFxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICBcblx1MDAzQy9kaXY+XG5cblxuXHUwMDNDZGl2IGlkPVwidGl0bGVCbG9ja1JpZ2h0U2VjdGlvblwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+XG4gICAgXG4gICAgICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwidGl0bGVfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cInRpdGxlXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuXG5cbiAgICBcblxuXG5cbiAgICBcdTAwM0NkaXYgaWQ9XCJ0aXRsZVNlY3Rpb25cIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPlxuICAgICAgICBcdTAwM0NoMSBpZD1cInRpdGxlXCIgY2xhc3M9XCJhLXNpemUtbGFyZ2UgYS1zcGFjaW5nLW5vbmUgYS1jb2xvci1zZWNvbmRhcnlcIj5cbiAgICAgICAgICAgIFx1MDAzQ3NwYW4gaWQ9XCJwcm9kdWN0VGl0bGVcIiBjbGFzcz1cImEtc2l6ZS1sYXJnZVwiPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgS2Vtc3RvbmUgRWxlZ2FudCBSb3NlIEdvbGQvU2lsdmVyIDIgVG9uZSBNdWx0aWxheWVyIERhbmdsZSBFYXJyaW5ncyBBY2Nlc3NvcnkgZm9yIFdvbWFuLCAyLjQgSW5jaGVzXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFx1MDAzQy9zcGFuPlxuXG4gICAgICAgICAgICBcblxuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXHUwMDNDL2gxPlxuXG4gICAgICAgIFx1MDAzQ2RpdiBpZD1cImV4cGFuZFRpdGxlVG9nZ2xlXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgZXhwYW5kIGFvay1oaWRkZW5cIj5cdTAwM0MvZGl2PlxuICAgICAgICBcbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuICAgIFxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiYXZlcmFnZUN1c3RvbWVyUmV2aWV3c19mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiYXZlcmFnZUN1c3RvbWVyUmV2aWV3c1wiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cdTAwM0NzdHlsZSB0eXBlPVwidGV4dC9jc3NcIj5cbiAgICAvKiBcbiAgICAqIEZpeCBmb3IgVURQLTEwNjEuIEF2ZXJhZ2UgY3VzdG9tZXIgcmV2aWV3cyBoYXMgYSBzbWFsbCBleHRyYSBsaW5lIG9uIGhvdmVyIFxuICAgICogaHR0cHM6Ly9vbW5pLWdyb2suYW1hem9uLmNvbS94cmVmL3NyYy9hcHBncm91cC93ZWJzaXRlVGVtcGxhdGVzL3JldGFpbC9Tb2Z0bGluZXNEZXRhaWxQYWdlQXNzZXRzL3VkcC1pbnRsLWxvY2svc3JjL2xlZ2FjeS5jc3M/aW5kZXhOYW1lPVdlYnNpdGVUZW1wbGF0ZXMjNDBcbiAgICAqL1xuICAgIC5ub1VuZGVybGluZSBhOmhvdmVyIHsgXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgXG4gICAgfVxuXHUwMDNDL3N0eWxlPlxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcblxuICAgICAgICBcblxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcblx0XHRcblx0XHRcblx0XHRcblx0XHRcblx0XHQgICAgICAgIFxuXHRcdFxuXHRcdFxuXHRcdFxuXHRcdFxuXHRcdFxuXHRcdFxuXHRcdFxuXHRcdCAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFx1MDAzQ2RpdiBpZD1cImF2ZXJhZ2VDdXN0b21lclJldmlld3NcIiBjbGFzcz1cImEtc3BhY2luZy1ub25lXCIgZGF0YS1hc2luPVwiQjAxR0tRSTM5MlwiIGRhdGEtcmVmPVwiZHB4X2Fjcl9wb3BfXCI+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gIFxuICBcbiAgXG4gICAgXG4gIFxuXG5cblxuXG5cbiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImFjclN0YXJzTGluay1jbGljay1tZXRyaWNzXCIgZGF0YS1hY3JzdGFyc2xpbmstY2xpY2stbWV0cmljcz1cInt9XCI+XG4gICAgICAgICAgICBcblxuXG5cblxuXG4gICAgXHUwMDNDc3BhbiBpZD1cImFjclBvcG92ZXJcIiBjbGFzcz1cInJldmlld0NvdW50VGV4dExpbmtlZEhpc3RvZ3JhbSBub1VuZGVybGluZVwiIHRpdGxlPVwiNC40IG91dCBvZiA1IHN0YXJzXCI+XG4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLXBvcG92ZXJcIiBkYXRhLWEtcG9wb3Zlcj1cInsmcXVvdDttYXgtd2lkdGgmcXVvdDs6JnF1b3Q7NzAwJnF1b3Q7LCZxdW90O2Nsb3NlQnV0dG9uJnF1b3Q7OiZxdW90O2ZhbHNlJnF1b3Q7LCZxdW90O3Bvc2l0aW9uJnF1b3Q7OiZxdW90O3RyaWdnZXJCb3R0b20mcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9ncC9jdXN0b21lci1yZXZpZXdzL3dpZGdldHMvYXZlcmFnZS1jdXN0b21lci1yZXZpZXcvcG9wb3Zlci9yZWY9ZHB4X2Fjcl9wb3BfP2NvbnRleHRJZD1kcHgmYW1wO2FzaW49QjAxR0tRSTM5MiZxdW90O31cIj5cbiAgICAgICAgICAgIFx1MDAzQ2EgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIGNsYXNzPVwiYS1wb3BvdmVyLXRyaWdnZXIgYS1kZWNsYXJhdGl2ZVwiPlxuICAgICAgICAgICAgICAgIFxuXG5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyIGEtc3Rhci00LTVcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPjQuNCBvdXQgb2YgNSBzdGFyc1x1MDAzQy9zcGFuPlx1MDAzQy9pPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcG9wb3ZlclwiPlx1MDAzQy9pPlx1MDAzQy9hPlxuICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtbGV0dGVyLXNwYWNlXCI+XHUwMDNDL3NwYW4+XG4gICAgXHUwMDNDL3NwYW4+XG5cblxuICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtbGV0dGVyLXNwYWNlXCI+XHUwMDNDL3NwYW4+XG4gICAgICAgIFxuICAgICAgICBcblxuICAgICAgICBcblxuICAgICAgICBcblxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImFjckxpbmstY2xpY2stbWV0cmljc1wiIGRhdGEtYWNybGluay1jbGljay1tZXRyaWNzPVwie31cIj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDYSBpZD1cImFjckN1c3RvbWVyUmV2aWV3TGlua1wiIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIGhyZWY9XCIjY3VzdG9tZXJSZXZpZXdzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGlkPVwiYWNyQ3VzdG9tZXJSZXZpZXdUZXh0XCIgY2xhc3M9XCJhLXNpemUtYmFzZVwiPjEyMSBjdXN0b21lciByZXZpZXdzXHUwMDNDL3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQy9hPlxuICAgICAgICAgICAgICAgIFx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cbiAgICAgICAgICAgICAgICAgICAgUC53aGVuKCdBJywgJ3JlYWR5JykuZXhlY3V0ZShmdW5jdGlvbihBKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBBLmRlY2xhcmF0aXZlKCdhY3JMaW5rLWNsaWNrLW1ldHJpY3MnLCAnY2xpY2snLCB7IFwiYWxsb3dMaW5rRGVmYXVsdFwiIDogdHJ1ZSB9LCBmdW5jdGlvbihldmVudCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYod2luZG93LnVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVlLmNvdW50KFwiYWNyTGlua0NsaWNrQ291bnRcIiwgKHVlLmNvdW50KFwiYWNyTGlua0NsaWNrQ291bnRcIikgfHwgMCkgKyAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgXHUwMDNDL3NjcmlwdD5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG4gICAgICAgICAgICBQLndoZW4oJ0EnLCAnY2YnKS5leGVjdXRlKGZ1bmN0aW9uKEEpIHtcbiAgICAgICAgICAgICAgICBBLmRlY2xhcmF0aXZlKCdhY3JTdGFyc0xpbmstY2xpY2stbWV0cmljcycsICdjbGljaycsIHsgXCJhbGxvd0xpbmtEZWZhdWx0XCIgOiB0cnVlIH0sICBmdW5jdGlvbihldmVudCl7XG4gICAgICAgICAgICAgICAgICAgIGlmKHdpbmRvdy51ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdWUuY291bnQoXCJhY3JTdGFyc0xpbmtXaXRoUG9wb3ZlckNsaWNrQ291bnRcIiwgKHVlLmNvdW50KFwiYWNyU3RhcnNMaW5rV2l0aFBvcG92ZXJDbGlja0NvdW50XCIpIHx8IDApICsgMSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBcdTAwM0Mvc2NyaXB0PlxuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgIFxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiYXNrX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJhc2tcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuICBcbiAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYXNrUGlwZVwiPiB8IFx1MDAzQy9zcGFuPlxuICBcbiAgXHUwMDNDc3BhbiBjZWxfd2lkZ2V0X2lkPVwiYXNrLWF0Zi1saW5rLWRlc2t0b3BcIiBjbGFzcz1cImNlbHdpZGdldFwiPlxuICAgIFx1MDAzQ2EgaWQ9XCJhc2tBVEZMaW5rXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIGFza0FURkxpbmtcIiBocmVmPVwiI0Fza1wiPlxuICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlXCI+XG4gICAgICAgIDYgYW5zd2VyZWQgcXVlc3Rpb25zXG4gICAgICBcdTAwM0Mvc3Bhbj5cbiAgICBcdTAwM0MvYT5cbiAgXHUwMDNDL3NwYW4+XG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJwcmltZUV4Y2x1c2l2ZUJhZGdlX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJwcmltZUV4Y2x1c2l2ZUJhZGdlXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiYWNCYWRnZV9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiYWNCYWRnZVwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICBcdTAwM0NzY3JpcHQgdHlwZT1cImEtc3RhdGVcIiBkYXRhLWEtc3RhdGU9XCJ7JnF1b3Q7a2V5JnF1b3Q7OiZxdW90O2FjU3RhdGUmcXVvdDt9XCI+e1wiYWNBc2luXCI6XCJCMDFHS1FJMzkyXCJ9XHUwMDNDL3NjcmlwdD5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInplaXRnZWlzdEJhZGdlX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJ6ZWl0Z2Vpc3RCYWRnZVwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJzb2NpYWxGYWJyaWNfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cInNvY2lhbEZhYnJpY1wiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICBcblx1MDAzQy9kaXY+XG5cbiAgICBcdCAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcdFxuICAgICAgICBcdFx0XG4gICAgICAgIFx0XHRcblx0XHRcdFx0XHRcdTAwM0Nocj5cbiAgICAgICAgXHRcdFxuICAgICAgICBcdFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJkZXNrdG9wX3VuaWZpZWRQcmljZVwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiZGVza3RvcF91bmlmaWVkUHJpY2VcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFx0ICAgIFxuICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJ1bmlmaWVkUHJpY2VfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cInVuaWZpZWRQcmljZVwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblxuXG5cbiAgXG4gIFxuICBcbiAgXG4gIFxuICBcbiAgXG4gIFxuICBcbiAgXG4gIFxuICBcbiAgXG5cbiAgXG4gIFxuXG4gIFxuICBcbiAgXG4gIFxuICBcbiAgXG4gIFxuICBcbiAgXG4gIFxuICBcbiAgXG5cbiAgXG4gICAgXG4gICAgXG4gICAgXG4gICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICAgICAgXHUwMDNDIS0tRGVwcmVjYXRlZCB3aGVuIFBXX0RQWF9QUklDRV9NT0RVTEVfQ09QXzE5NTUwNSBpcyBUMSAxMDAlLS0tPlxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG5cblxuXG5cbiAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJwcmljZVwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1zbWFsbFwiPlxuICAgICAgICAgIFx1MDAzQ3RhYmxlIGNsYXNzPVwiYS1saW5laXRlbVwiPlxuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIFxuXG5cblxuICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cdTAwM0N0Ym9keT5cdTAwM0N0cj5cbiAgICBcdTAwM0N0ZCBjbGFzcz1cImEtY29sb3Itc2Vjb25kYXJ5IGEtc2l6ZS1iYXNlIGEtdGV4dC1yaWdodCBhLW5vd3JhcFwiPlByaWNlOlx1MDAzQy90ZD5cbiAgICBcdTAwM0N0ZCBjbGFzcz1cImEtc3BhbjEyIGEtY29sb3Itc2Vjb25kYXJ5IGEtc2l6ZS1iYXNlXCI+XG4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJwcmljZUJsb2NrU3RyaWtlUHJpY2VTdHJpbmcgYS10ZXh0LXN0cmlrZVwiPiAkMTkuNDJcdTAwM0Mvc3Bhbj5cbiAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ3NwYW4gaWQ9XCJsaXN0UHJpY2VMZWdhbE1lc3NhZ2VcIj5cblx0XG5cdTAwM0Mvc3Bhbj5cblxuXHUwMDNDc3R5bGU+XG4gICAgI2xpc3RQcmljZUxlZ2FsTWVzc2FnZVRleHQge1xuICAgICAgICBtYXJnaW4tbGVmdDogNXB4ICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIFxuICAgICNsaXN0UHJpY2VMZWdhbE1lc3NhZ2UgLmEtcG9wb3Zlci10cmlnZ2VyOmhvdmVyIHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgIWltcG9ydGFudDtcbiAgICB9XG4gICAgXG4gICAgI2xpc3RQcmljZUxlZ2FsTWVzc2FnZSAuYS1pY29uLXBvcG92ZXIge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2sgIWltcG9ydGFudDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDBweCAhaW1wb3J0YW50O1xuICAgICAgICBtYXJnaW4tdG9wOiA2cHggIWltcG9ydGFudDtcbiAgICB9XG5cdTAwM0Mvc3R5bGU+XG4gICAgICAgIFxuICAgIFx1MDAzQy90ZD5cblx1MDAzQy90cj5cbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ3RyIGlkPVwicHJpY2VibG9ja19kZWFscHJpY2Vfcm93XCI+XG4gICAgXHUwMDNDdGQgaWQ9XCJwcmljZWJsb2NrX2RlYWxwcmljZV9sYmxcIiBjbGFzcz1cImEtY29sb3Itc2Vjb25kYXJ5IGEtc2l6ZS1iYXNlIGEtdGV4dC1yaWdodCBhLW5vd3JhcFwiPldpdGggRGVhbDpcdTAwM0MvdGQ+XG4gICAgXHUwMDNDdGQgY2xhc3M9XCJhLXNwYW4xMlwiPlxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gaWQ9XCJwcmljZWJsb2NrX2RlYWxwcmljZVwiIGNsYXNzPVwiYS1zaXplLW1lZGl1bSBhLWNvbG9yLXByaWNlIHByaWNlQmxvY2tEZWFsUHJpY2VTdHJpbmdcIj4kMTIuNTJcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgICAgXG4gICAgICAgICAgXG4gICAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXHUwMDNDc3BhbiBpZD1cImRlYWxwcmljZV9zaGlwcGluZ21lc3NhZ2VcIiBjbGFzcz1cImEtc2l6ZS1tZWRpdW1cIj4gIFxuICAgIFxuICAgIFxuXG5cblxuXG5cblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDc3BhbiBpZD1cInByaWNlLXNoaXBwaW5nLW1lc3NhZ2VcIiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiPlx1MDAzQy9zcGFuPlxuICAgIFxuXG5cblxuXG5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICBcbiAgICAgICAgICBcbiAgICAgICAgXG4gICAgXHUwMDNDL3RkPlxuXHUwMDNDL3RyPlxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cbiAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDdHIgaWQ9XCJkZWFscHJpY2Vfc2F2aW5nc1wiPlxuXHQgICAgXHUwMDNDdGQgY2xhc3M9XCJhLWNvbG9yLXNlY29uZGFyeSBhLXNpemUtYmFzZSBhLXRleHQtcmlnaHQgYS1ub3dyYXBcIj5Zb3UgU2F2ZTpcdTAwM0MvdGQ+XG4gICAgICAgIFx1MDAzQ3RkIGNsYXNzPVwiYS1zcGFuMTIgYS1jb2xvci1wcmljZSBhLXNpemUtYmFzZSBwcmljZUJsb2NrU2F2aW5nc1N0cmluZ1wiPlxuICAgICAgICAgICAgJDYuOTAgKDM2JSlcbiAgICAgICAgICAgIFxuICAgICAgICBcdTAwM0MvdGQ+XG4gICAgXHUwMDNDL3RyPlxuXG5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblx1MDAzQ3RyIGlkPVwicHJpY2VibG9ja19zbnN1cHNlbGxfcm93XCIgY2xhc3M9XCJhb2staGlkZGVuXCI+XG4gICAgXHUwMDNDdGQgY29sc3Bhbj1cIjJcIj5cbiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItcHJpY2VcIj5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFx1MDAzQy9zcGFuPlxuICAgIFx1MDAzQy90ZD5cblx1MDAzQy90cj5cbiAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuXG5cblxuXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cblxuXG5cbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cbiAgICBcblxuXG4gICAgXG5cblxuXG5cblxuICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICBcblxuXG5cbiAgICAgICAgXG4gICAgXG5cblxuXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cblxuXG5cblxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cblxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuXG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblxuXG5cblxuICAgIFxuICAgIFxuXG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblxuXG5cblxuICBcbiAgXG4gICAgXG4gIFxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblxuXG5cblxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXG5cblxuXG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcblxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgIFx1MDAzQy90Ym9keT5cdTAwM0MvdGFibGU+XG4gICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgXG4gICAgXG4gIFxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICBcdCAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJwd1RlZW5NZXNzYWdpbmdfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cInB3VGVlbk1lc3NhZ2luZ1wiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblxuXG5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInBtcHV4X2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJwbXB1eFwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJpc3N1YW5jZVByaWNlYmxvY2tBbWFib3RfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cImlzc3VhbmNlUHJpY2VibG9ja0FtYWJvdFwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImFsdGVybmF0aXZlT2ZmZXJFbGlnaWJpbGl0eU1lc3NhZ2luZ19mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiYWx0ZXJuYXRpdmVPZmZlckVsaWdpYmlsaXR5TWVzc2FnaW5nXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuXG5cblxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG4gICAgICAgXG4gICAgXG4gICAgXG4gICAgXG4gXHRcbiBcdFx0XG4gXHRcdFxuIFx0XHRcbiBcdFx0XG4gXHRcdFxuIFx0XHRcbiBcdFx0XG4gXHRcdFxuIFx0XHRcbiBcdFx0XG4gXHRcbiBcdFxuIFx0XG4gXHRcdFxuIFx0XHRcbiAgICAgICAgXG4gICAgICAgIFxuIFx0XHRcbiBcdFx0XG4gXHRcdFxuIFx0XHRcbiBcdFx0XG5cdFx0XG5cdFx0XG5cdFx0XG4gICAgICAgIFxuICAgICAgICBcbiBcdFx0XG4gXHRcdFxuIFx0XHRcbiBcdFx0XG4gXHRcdFxuIFx0XHRcbiBcdFx0XG4gXHRcdFxuIFx0XG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInByb21pc2VCYXNlZEJhZGdlX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJwcm9taXNlQmFzZWRCYWRnZVwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuXG5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiYXBwbGljYWJsZVByb21vdGlvbkxpc3RfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cImFwcGxpY2FibGVQcm9tb3Rpb25MaXN0XCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInNvZnRsaW5lc1R3aXN0ZXJfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cInNvZnRsaW5lc1R3aXN0ZXJcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcbiBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJ0d2lzdGVyX2Rlc2NyaXB0aW9uX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwidHdpc3RlckRlc2NyaXB0aW9uXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiYWRkT25JdGVtX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJhZGRPbkl0ZW1cIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJhdmFpbGFiaWxpdHlfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cImF2YWlsYWJpbGl0eVwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG5cblxuXG5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImdsb2JhbFN0b3JlQmFkZ2VQb3BvdmVyX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJnbG9iYWxTdG9yZUJhZGdlUG9wb3ZlclwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cbiAgXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiaG9saWRheURlbGl2ZXJ5TWVzc2FnZV9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiaG9saWRheURlbGl2ZXJ5TWVzc2FnZVwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblxuXG5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImRwRmFzdFRyYWNrX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJkcEZhc3RUcmFja1wiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcblxuXG5cbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuXG5cblxuXG5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwic2hpcHNGcm9tU29sZEJ5X2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJzaGlwc0Zyb21Tb2xkQnlcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiYnVzaW5lc3NQcmljaW5nX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJidXNpbmVzc1ByaWNpbmdcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICBcblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInNtaWxlRWxpZ2liaWxpdHlfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cInNtaWxlRWxpZ2liaWxpdHlcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJob2xpZGF5QXZhaWxhYmlsaXR5TWVzc2FnZV9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiaG9saWRheUF2YWlsYWJpbGl0eU1lc3NhZ2VcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiZ2lmdGNhcmQtaG9saWRheS1hdmFpbGFiaWxpdHktbWVzc2FnaW5nX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJnaWZ0Q2FyZEhvbGlkYXlBdmFpbGFiaWxpdHlNZXNzYWdpbmdcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXHUwMDNDIS0tZ2lmdENhcmRIb2xpZGF5QXZhaWxhYmlsaXR5TWVzc2FnaW5nX3BsYWNlaG9sZGVyLS0+XG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiYW5kb25Db3JkX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJhbmRvbkNvcmRcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiY2xpY2tUb0NvbnRhY3RfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cImNsaWNrVG9Db250YWN0XCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImZlYXR1cmVidWxsZXRzX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJmZWF0dXJlYnVsbGV0c1wiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXHUwMDNDZGl2IGlkPVwiZmVhdHVyZS1idWxsZXRzXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1lZGl1bSBhLXNwYWNpbmctdG9wLXNtYWxsXCI+XG4gICAgXG5cblxuXG5cblxuXG4gICAgXG5cdFx0XG5cdFx0XHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0N1bCBjbGFzcz1cImEtdW5vcmRlcmVkLWxpc3QgYS12ZXJ0aWNhbCBhLXNwYWNpbmctbm9uZVwiPlxuXHRcdFx0XHRcdFxuXHRcdFx0XHRcdFxuXHRcdFx0XHRcdFx0XHUwMDNDbGk+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+IFxuXHRcdFx0XHRcdFx0XHREaXN0aW5jdGl2ZSBEZXNpZ246IERhbmdsZWQgd2l0aCByb3NlIGdvbGQgYW5kIHNpbHZlciBwbGF0ZWQgbG9vcHMgYW5kIGVhY2ggbG9vcCBpcyB2YXJ5IGluIHNpemUsIGhhdmluZyBhIHNlbnNlIG9mIGhpZXJhcmNoeVxuXHRcdFx0XHRcdFx0XHRcblx0XHRcdFx0XHRcdFx1MDAzQy9zcGFuPlx1MDAzQy9saT5cblx0XHRcdFx0XHRcblx0XHRcdFx0XHRcdFx1MDAzQ2xpPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPiBcblx0XHRcdFx0XHRcdFx0U3BlY2lmaWNhdGlvbjogMC45MlwiIHggMi40NVwiIGFwcHJveC4gTmV0IFdlaWdodDogNy41ZyAvIDAuMjZvei4gKGFsbCB0aGUgZGF0YXMgY29tZSBmcm9tIG1hbnVhbCBtZWFzdXJlbWVudClcblx0XHRcdFx0XHRcdFx0XG5cdFx0XHRcdFx0XHRcdTAwM0Mvc3Bhbj5cdTAwM0MvbGk+XG5cdFx0XHRcdFx0XG5cdFx0XHRcdFx0XHRcdTAwM0NsaT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj4gXG5cdFx0XHRcdFx0XHRcdElkZWEgR2lmdCBDaG9pY2U6IFdpdGggZ2lmdCBib3gsIHBlcmZlY3QgZ2lmdCBmb3IgZnJpZW5kcywgbG92ZXIgYW5kIGZhbWlseSBtZW1iZXJzOyBzdWl0YWJsZSBmb3IgVmFsZW50aW5l4oCZcyBEYXksIENocmlzdG1hcyBEYXksIGJpcnRoZGF5LCBldGMuLlxuXHRcdFx0XHRcdFx0XHRcblx0XHRcdFx0XHRcdFx1MDAzQy9zcGFuPlx1MDAzQy9saT5cblx0XHRcdFx0XHRcblx0XHRcdFx0XHRcdFx1MDAzQ2xpPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPiBcblx0XHRcdFx0XHRcdFx0Q2FyZSBmb3IgVGhlIEpld2Vscnk6IEtlZXAgaXQgZHJ5IGFuZCBhdm9pZCBjaGVtaWNhbHM7IEF2b2lkIGJlaW5nIHN0cnVjazsgQ2xlYW4gYW5kIHdpcGUgd2l0aCBkcnkgc29mdCBjbG90aDsgU3RvcmUgdGhlIGpld2VscnkgaW5zaWRlIGEgc29mdCBjbG90aCBwb2NrZXQuXG5cdFx0XHRcdFx0XHRcdFxuXHRcdFx0XHRcdFx0XHUwMDNDL3NwYW4+XHUwMDNDL2xpPlxuXHRcdFx0XHRcdFxuXHRcdFx0XHRcdFx0XHUwMDNDbGk+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+IFxuXHRcdFx0XHRcdFx0XHRDdXN0b21lciBDYXJlIFNlcnZpY2U6IEN1c3RvbWVyIHJlY29nbml0aW9uIGlzIG9mIGdyZWF0IGltcG9ydGFuY2UgdG8gdXMgYW5kIHdlIHdvdWxkIGJlIHZlcnkgaGFwcHkgaWYgeW91IHNoYXJlIHlvdXIgdXNhZ2UgZXhwZXJpZW5jZSB3aXRoIHVzIGFuZCBvdGhlciBjb25zdW1lcnMuIEFsbCB5b3VyIHJlc3BvbnNlcyBhcmUgdmFsdWVkIGhpZ2hseSBhbmQgd2lsbCBiZSB1c2VkIHRvIGZ1cnRoZXIgaW1wcm92ZSB0aGUgcXVhbGl0eSBvZiBvdXIgc2VydmljZSBhbmQgcHJvZHVjdHMuIElmIHlvdSBoYXZlIGFueSBwcm9ibGVtIG9yIHF1ZXN0aW9uIGFib3V0IG91ciBwcm9kdWN0LCBubyBtYXR0ZXIgaXQgaXMgYmVmb3JlIG9yIGFmdGVyIHB1cmNoYXNlLCBwbHMgbGV0IHVzIGtub3cuIFdlIHdpbGwgYW5zd2VyIHdpdGhpbiAyNCBob3Vycy5cblx0XHRcdFx0XHRcdFx0XG5cdFx0XHRcdFx0XHRcdTAwM0Mvc3Bhbj5cdTAwM0MvbGk+XG5cdFx0XHRcdFx0XG5cdFx0XHRcdFx1MDAzQy91bD5cblx0XHRcdFx0XHUwMDNDIS0tICBMb2FkaW5nIEVEUCByZWxhdGVkIG1ldGFkYXRhIC0tPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICBcdFxuICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICBcblx0XHRcdFxuXHRcdFx0XG5cdFx0XG5cblx0XHRcblxuXHRcdFxuXG4gICAgXG5cdTAwM0MvZGl2PlxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInByb2R1Y3RPdmVydmlld19mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwicHJvZHVjdE92ZXJ2aWV3XCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cbiAgICBcblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJnbG9iYWxTdG9yZUluZm9CdWxsZXRzX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJnbG9iYWxTdG9yZUluZm9CdWxsZXRzXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuXG5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwib2xwX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJvbHBcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctc21hbGwgYS1zcGFjaW5nLXRvcC1zbWFsbFwiPlxuICAgICAgICBcdTAwM0NkaXYgaWQ9XCJvbHAtdXBkLW5ld1wiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1zbWFsbCBhLXNwYWNpbmctdG9wLXNtYWxsXCI+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4+XHUwMDNDYSBocmVmPVwiL2dwL29mZmVyLWxpc3RpbmcvQjAxR0tRSTM5Mi9yZWY9ZHBfb2xwX25ld19jZW50ZXI/aWU9VVRGOCZhbXA7Y29uZGl0aW9uPW5ld1wiPlx1MDAzQ2I+TmV3XHUwMDNDL2I+ICgxKSBmcm9tICQxMi41Mlx1MDAzQy9hPlx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4+XHUwMDNDYSBocmVmPVwiL2dwL2hlbHAvY3VzdG9tZXIvZGlzcGxheS5odG1sL3JlZj1ta19zc3NfZHBfMT9pZT1VVEY4JmFtcDtwb3AtdXA9MSZhbXA7bm9kZUlkPTUyNzY5MlwiIHRhcmdldD1cIkFtYXpvbkhlbHBcIiBvbmNsaWNrPVwicmV0dXJuIGFtel9qc19Qb3BXaW4odGhpcy5ocmVmLCdBbWF6b25IZWxwJywnd2lkdGg9NTUwLGhlaWdodD01NTAscmVzaXphYmxlPTEsc2Nyb2xsYmFycz0xLHRvb2xiYXI9MCxzdGF0dXM9MCcpO1wiPkRldGFpbHNcdTAwM0MvYT5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgIFxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgIFx1MDAzQy9kaXY+XG4gICAgXG4gICAgICAgIFxuXG5cblxuICAgIFxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJlZHBJbmdyZXNzX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJlZHBJbmdyZXNzXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFx0XG4gICAgICAgIFx0XHRcbiAgICAgICAgXHRcdFx0XG5cblxuXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1taW5pXCI+IFxuICAgIFx1MDAzQ2hyIGNsYXNzPVwiYS1zcGFjaW5nLW1pbmkgYS1kaXZpZGVyLW5vcm1hbFwiPlxuICAgIFx1MDAzQ2EgaWQ9XCJzb2Z0bGluZXNUZWNobmljYWxTcGVjaWZpY2F0aW9uc0xpbmtcIiBjbGFzcz1cImEtbGluay1lbXBoYXNpc1wiIGhyZWY9XCIjdGVjaG5pY2FsU3BlY2lmaWNhdGlvbnNfZmVhdHVyZV9kaXZcIj5cbiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlXCI+XG4gICAgICAgICAgICBTZWUgcHJvZHVjdCBzcGVjaWZpY2F0aW9uc1xuICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICBcdTAwM0MvYT5cblx1MDAzQy9kaXY+XG5cbiAgICAgICAgXHRcdFxuICAgICAgICBcdFx0XG4gICAgICAgIFx0XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImFtYXpvbkdsb2JhbF9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiYW1hem9uR2xvYmFsXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInZlbmRvclBvd2VyZWRDb3Vwb25fZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cInZlbmRvclBvd2VyZWRDb3Vwb25cIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJ2YWx1ZVBpY2tfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cInZhbHVlUGlja1wiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJoZXJvUXVpY2tQcm9tb19mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiaGVyb1F1aWNrUHJvbW9cIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cblxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInJlY29tbWVuZGF0aW9uc19mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwicmVjb21tZW5kYXRpb25zXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDaHIgY2xhc3M9XCJhLXNwYWNpbmctbWVkaXVtIGEtZGl2aWRlci1ub3JtYWxcIj5cbiAgICAgICAgXG5cbiAgICAgICAgXHUwMDNDZGl2IGlkPVwicmVjb21tZW5kYXRpb25zXCIgY2xhc3M9XCJhLXNlY3Rpb24gY3RsLW92ZXJyaWRlXCI+XG4gICAgICAgICAgICBcblxuXG5cdTAwM0NoNCBjbGFzcz1cImEtc3BhY2luZy1taW5pIGEtdGV4dC1sZWZ0XCI+XG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgQ3VzdG9tZXJzIHdobyB2aWV3ZWQgdGhpcyBpdGVtIGFsc28gYm91Z2h0XG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblx1MDAzQy9oND5cblxuXG5cblxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXHUwMDNDdWwgY2xhc3M9XCJhLXVub3JkZXJlZC1saXN0IGEtaG9yaXpvbnRhbFwiPlxuICAgIFxuICAgICAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgICAgIFx1MDAzQ2xpIGNsYXNzPVwiYS1saXN0LW5vcm1hbCBhLXNwYWNpbmctYmFzZSBpdGVtLTBcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgICAgICAgICAgIFxuXG5cblx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XG4gICAgXG4gICAgICAgIFxuICAgIFxuICAgIFx1MDAzQ2EgZGF0YS1kcGltYWdlY2FjaGVkdXJsPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzQxeFBUR0VOVnZMLl9TWDM0Ml8uanBnXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIGFvay1ibG9jayBhLXRleHQtY2VudGVyIGRwQ2FjaGVkSW1hZ2VVUkxzXCIgdGl0bGU9XCJERVNJTVRJT04gMThLIEdvbGQgUGxhdGVkIENsYXNzaWMgVHdpc3QgV2F2ZSBTdGVybGluZyBTaWx2ZXIgUG9zdCBEYW5nbGUgRWFycmluZ3MgZm9yIFdvbWVuIEdpcmxzXCIgaHJlZj1cIi9ERVNJTVRJT04tQ2xhc3NpYy1IeXBvYWxsZXJnZW5pYy1FYXJyaW5ncy1TdGVybGluZy9kcC9CMDdCSExYUVBGL3JlZj1jdHNfamVfMV92dHBcIj5cbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblxuXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIHN0eWxlPVwiY3Vyc29yOnBvaW50ZXI7IHdpZHRoOjExMHB4OyBoZWlnaHQ6MTEwcHg7YmFja2dyb3VuZDp1cmwoJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS80MXhQVEdFTlZ2TC5fU1AxMTAsMTEwLDB8NDFneHBiV1hCTEwuanBnLDQxTFFtcXRBc1dMLmpwZyw0MU1OOUx5dkxDTC5qcGdfLmpwZycpIG5vLXJlcGVhdCAwcHggMFwiIGNsYXNzPVwiYW9rLWlubGluZS1ibG9jayBjdGwtaW1hZ2VcIj5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG5cblxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgXHUwMDNDL2E+XG5cdTAwM0MvZGl2PlxuXG5cdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBpdGVtLXRpdGxlIGEtdGV4dC1jZW50ZXJcIj5cbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1zbWFsbFwiPkRFU0lNVElPTlx1MDAzQy9zcGFuPlxuICAgICAgICBcbiAgICBcblx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG5cdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBpdGVtLXByaWNlIGEtdGV4dC1jZW50ZXJcIj5cbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1zbWFsbFwiPiQxMC45OSAtICQxMi45OVx1MDAzQy9zcGFuPlxuICAgICAgICBcbiAgICBcbiAgICBcblx1MDAzQy9kaXY+XG5cbiAgICAgICAgXHUwMDNDL3NwYW4+XHUwMDNDL2xpPlxuICAgIFxuICAgICAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgICAgIFx1MDAzQ2xpIGNsYXNzPVwiYS1saXN0LW5vcm1hbCBhLXNwYWNpbmctYmFzZSBpdGVtLTFcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgICAgICAgICAgIFxuXG5cblx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XG4gICAgXG4gICAgICAgIFxuICAgIFxuICAgIFx1MDAzQ2EgZGF0YS1kcGltYWdlY2FjaGVkdXJsPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzQxZ3hwYldYQkxMLl9TWDM0Ml8uanBnXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIGFvay1ibG9jayBhLXRleHQtY2VudGVyIGRwQ2FjaGVkSW1hZ2VVUkxzXCIgdGl0bGU9XCIxNEsgR29sZCBQbGF0ZWQgSW5maW5pdHkgU3RlcmxpbmcgU2lsdmVyIFBvc3QgSG9vcCBFYXJyaW5ncyBmb3IgV29tZW5cIiBocmVmPVwiL1BsYXRlZC1JbmZpbml0eS1TdGVybGluZy1TaWx2ZXItRWFycmluZ3MvZHAvQjA3M1JRTDYxQi9yZWY9Y3RzX2plXzJfdnRwXCI+XG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBzdHlsZT1cImN1cnNvcjpwb2ludGVyOyB3aWR0aDoxMTBweDsgaGVpZ2h0OjExMHB4O2JhY2tncm91bmQ6dXJsKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDF4UFRHRU5WdkwuX1NQMTEwLDExMCwwfDQxZ3hwYldYQkxMLmpwZyw0MUxRbXF0QXNXTC5qcGcsNDFNTjlMeXZMQ0wuanBnXy5qcGcnKSBuby1yZXBlYXQgLTExMHB4IDBcIiBjbGFzcz1cImFvay1pbmxpbmUtYmxvY2sgY3RsLWltYWdlXCI+XHUwMDNDL3NwYW4+XG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgIFx1MDAzQy9hPlxuXHUwMDNDL2Rpdj5cblxuXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgaXRlbS10aXRsZSBhLXRleHQtY2VudGVyXCI+XG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtc21hbGxcIj5QQVZPSVx1MDAzQy9zcGFuPlxuICAgICAgICBcbiAgICBcblx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG5cdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBpdGVtLXByaWNlIGEtdGV4dC1jZW50ZXJcIj5cbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1zbWFsbFwiPiQxNC45NVx1MDAzQy9zcGFuPlxuICAgICAgICBcbiAgICBcbiAgICBcblx1MDAzQy9kaXY+XG5cbiAgICAgICAgXHUwMDNDL3NwYW4+XHUwMDNDL2xpPlxuICAgIFxuICAgICAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgICAgIFx1MDAzQ2xpIGNsYXNzPVwiYS1saXN0LW5vcm1hbCBhLXNwYWNpbmctYmFzZSBpdGVtLTJcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgICAgICAgICAgIFxuXG5cblx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XG4gICAgXG4gICAgICAgIFxuICAgIFxuICAgIFx1MDAzQ2EgZGF0YS1kcGltYWdlY2FjaGVkdXJsPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzQxTFFtcXRBc1dMLl9TWDM0Ml8uanBnXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIGFvay1ibG9jayBhLXRleHQtY2VudGVyIGRwQ2FjaGVkSW1hZ2VVUkxzXCIgdGl0bGU9XCJMT1ZFJmFtcDtDTE9WRVIgRWFycmluZ3MgZm9yIFdvbWVuIERhbmdsaW5nLCBDcnlzdGFsIERyb3AgRGFuZ2xlIEVhcnJpbmdzIEVsbGlwdGljYWwgUmluZyBUZWFyZHJvcCBXb21lbiBHaXJscyBXZWRkaW5nIEdpZnQgUm9zZSBHb2xkXCIgaHJlZj1cIi9MT1ZFLUNMT1ZFUi1FYXJyaW5ncy1FbGxpcHRpY2FsLVRlYXJkcm9wL2RwL0IwN0oxVlI2WjIvcmVmPWN0c19qZV8zX3Z0cFwiPlxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXG5cbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gc3R5bGU9XCJjdXJzb3I6cG9pbnRlcjsgd2lkdGg6MTEwcHg7IGhlaWdodDoxMTBweDtiYWNrZ3JvdW5kOnVybCgnaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzQxeFBUR0VOVnZMLl9TUDExMCwxMTAsMHw0MWd4cGJXWEJMTC5qcGcsNDFMUW1xdEFzV0wuanBnLDQxTU45THl2TENMLmpwZ18uanBnJykgbm8tcmVwZWF0IC0yMjBweCAwXCIgY2xhc3M9XCJhb2staW5saW5lLWJsb2NrIGN0bC1pbWFnZVwiPlx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICBcdTAwM0MvYT5cblx1MDAzQy9kaXY+XG5cblx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGl0ZW0tdGl0bGUgYS10ZXh0LWNlbnRlclwiPlxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLXNtYWxsXCI+TE9WRSZhbXA7Q0xPVkVSXHUwMDNDL3NwYW4+XG4gICAgICAgIFxuICAgIFxuXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cblx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGl0ZW0tcHJpY2UgYS10ZXh0LWNlbnRlclwiPlxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLXNtYWxsXCI+JDEyLjk5IC0gJDIyLjk5XHUwMDNDL3NwYW4+XG4gICAgICAgIFxuICAgIFxuICAgIFxuXHUwMDNDL2Rpdj5cblxuICAgICAgICBcdTAwM0Mvc3Bhbj5cdTAwM0MvbGk+XG4gICAgXG4gICAgICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICAgICAgXHUwMDNDbGkgY2xhc3M9XCJhLWxpc3Qtbm9ybWFsIGEtc3BhY2luZy1iYXNlIGl0ZW0tM1wiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICAgICAgICAgICAgXG5cblxuXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj5cbiAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXHUwMDNDYSBkYXRhLWRwaW1hZ2VjYWNoZWR1cmw9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFNTjlMeXZMQ0wuX1NYMzQyXy5qcGdcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgYW9rLWJsb2NrIGEtdGV4dC1jZW50ZXIgZHBDYWNoZWRJbWFnZVVSTHNcIiB0aXRsZT1cIktlbXN0b25lIEJydXNoZWQgU2F0aW4gUm9zZSBHb2xkIFBsYXRlZCBEcm9wIERhbmdsZSBFYXJyaW5ncyBDaGFuZGVsaWVyIEVhcnJpbmdzIGZvciBXb21lblwiIGhyZWY9XCIvS2Vtc3RvbmUtQnJ1c2hlZC1QbGF0ZWQtRGFuZ2xlLUVhcnJpbmdzL2RwL0IwMUhYRkdNTjgvcmVmPWN0c19qZV80X3Z0cFwiPlxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXG5cbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gc3R5bGU9XCJjdXJzb3I6cG9pbnRlcjsgd2lkdGg6MTEwcHg7IGhlaWdodDoxMTBweDtiYWNrZ3JvdW5kOnVybCgnaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzQxeFBUR0VOVnZMLl9TUDExMCwxMTAsMHw0MWd4cGJXWEJMTC5qcGcsNDFMUW1xdEFzV0wuanBnLDQxTU45THl2TENMLmpwZ18uanBnJykgbm8tcmVwZWF0IC0zMzBweCAwXCIgY2xhc3M9XCJhb2staW5saW5lLWJsb2NrIGN0bC1pbWFnZVwiPlx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICBcdTAwM0MvYT5cblx1MDAzQy9kaXY+XG5cblx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGl0ZW0tdGl0bGUgYS10ZXh0LWNlbnRlclwiPlxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLXNtYWxsXCI+S2Vtc3RvbmVcdTAwM0Mvc3Bhbj5cbiAgICAgICAgXG4gICAgXG5cdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgaXRlbS1wcmljZSBhLXRleHQtY2VudGVyXCI+XG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtc21hbGxcIj4kMTQuOTlcdTAwM0Mvc3Bhbj5cbiAgICAgICAgXG4gICAgXG4gICAgXG5cdTAwM0MvZGl2PlxuXG4gICAgICAgIFx1MDAzQy9zcGFuPlx1MDAzQy9saT5cbiAgICBcblx1MDAzQy91bD5cblxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuXG4gICAgICAgICAgICBcblxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgIFxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwibXVsdGlwbGVSZWNvbW1lbmRhdGlvbnNfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cIm11bHRpcGxlUmVjb21tZW5kYXRpb25zXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG4gICAgXHUwMDNDc3BhbiBpZD1cIm11bHRpcGxlUmVjb21tZW5kYXRpb25zXCIgZGF0YS1hc2luPVwiQjAxR0tRSTM5MlwiIGRhdGEtaWRzPVwieyZxdW90O2hhc0Vycm9yJnF1b3Q7OmZhbHNlLCZxdW90O3ZpZXdBZGFwdGVyJnF1b3Q7Om51bGwsJnF1b3Q7aXNDcml0aWNhbCZxdW90OzpmYWxzZSwmcXVvdDtkaXNwbGF5YWJsZSZxdW90Ozp0cnVlLCZxdW90O292ZXJyaWRkZW5WaWV3QWRhcHRlciZxdW90OzpudWxsLCZxdW90O2FzaW4mcXVvdDs6JnF1b3Q7QjAxR0tRSTM5MiZxdW90OywmcXVvdDtyZWNvbW1lbmRhdGlvbnMmcXVvdDs6eyZxdW90O3JlY29tbWVuZGF0aW9ucyZxdW90OzpbW3smcXVvdDtpZCZxdW90OzomcXVvdDtCMDdCSExYUVBGJnF1b3Q7LCZxdW90O2FzaW5TcGVjaWZpY1VybFBhcmFtcyZxdW90OzpudWxsfSx7JnF1b3Q7aWQmcXVvdDs6JnF1b3Q7QjA3M1JRTDYxQiZxdW90OywmcXVvdDthc2luU3BlY2lmaWNVcmxQYXJhbXMmcXVvdDs6bnVsbH0seyZxdW90O2lkJnF1b3Q7OiZxdW90O0IwN0oxVlI2WjImcXVvdDssJnF1b3Q7YXNpblNwZWNpZmljVXJsUGFyYW1zJnF1b3Q7Om51bGx9LHsmcXVvdDtpZCZxdW90OzomcXVvdDtCMDFIWEZHTU44JnF1b3Q7LCZxdW90O2FzaW5TcGVjaWZpY1VybFBhcmFtcyZxdW90OzpudWxsfV1dLCZxdW90O3JlZnRhZ1N1ZmZpeCZxdW90OzomcXVvdDt2dHAmcXVvdDssJnF1b3Q7cmVjb21tZW5kYXRpb25VcmxQYXJhbXMmcXVvdDs6bnVsbH0sJnF1b3Q7c2hvd1NpbXBsaWZpZWRQcmljZSZxdW90OzpmYWxzZSwmcXVvdDtzaG93UmVjb21tZW5kYXRpb25zUHJpbWVFbGlnaWJpbGl0eSZxdW90OzpmYWxzZSwmcXVvdDtpbmplY3RlZFZpZXdNb2RlbCZxdW90OzpudWxsLCZxdW90O3ByaW1lRWxpZ2libGVMb2NhbGUmcXVvdDs6dHJ1ZSwmcXVvdDtsb2dnaW5nSW5mb3JtYXRpb24mcXVvdDs6bnVsbH1cIiBkYXRhLWluamVjdGVkdmlld21vZGVsPVwiXCIgZGF0YS1wcmltZWVsaWdpYmxlbG9jYWxlPVwidHJ1ZVwiIGRhdGEtc2hvd3JlY29tbWVuZGF0aW9uc3ByaW1lZWxpZ2liaWxpdHk9XCJmYWxzZVwiIGRhdGEtc2hvd3NpbXBsaWZpZWRwcmljZT1cImZhbHNlXCI+IFxuICAgIFx1MDAzQy9zcGFuPlxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwicHdDb250cm9sbGVyX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJwd0NvbnRyb2xsZXJcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJuZXdlclZlcnNpb25fZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cIm5ld2VyVmVyc2lvblwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwicHJvZHVjdEFsZXJ0X2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJwcm9kdWN0QWxlcnRcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImhvdmVyLXpvb20tZW5kXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCI+XHUwMDNDL2Rpdj5cbiAgICAgICAgICAgIFx1MDAzQy9kaXY+XG5cbiAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInJpZ2h0Q29sXCIgY2xhc3M9XCJhLWZpeGVkLXJpZ2h0LWdyaWQtY29sIGEtY29sLXJpZ2h0XCIgc3R5bGU9XCJ3aWR0aDoyNDRweDttYXJnaW4tcmlnaHQ6LTI0NHB4O2Zsb2F0OmxlZnQ7XCI+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInB3T25ib2FyZGluZ0hpbnRfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cInB3T25ib2FyZGluZ0hpbnRcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJkZXNrdG9wX2J1eWJveFwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiZGVza3RvcF9idXlib3hcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFx0ICAgIFxuICAgICAgICAgICAgICAgIFxuXG4gXHUwMDNDZGl2IGlkPVwiYnV5Ym94XCI+XG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwicXVhbGlmaWVkQnV5Ym94XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJxdWFsaWZpZWRCdXlib3hcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFx0ICAgIFxuICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuIFxuICAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcbiAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgIFxuICAgICAgICAgXG4gICAgIFxuIFxuXG5cbiBcdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb25cIj5cbiAgICAgXHUwMDNDZm9ybSBtZXRob2Q9XCJwb3N0XCIgaWQ9XCJhZGRUb0NhcnRcIiBhY3Rpb249XCIvZ3AvcHJvZHVjdC9oYW5kbGUtYnV5LWJveC9yZWY9ZHBfc3RhcnQtYmJmXzFfZ2xhbmNlXCIgY2xhc3M9XCJhLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2lucHV0IHR5cGU9XCJoaWRkZW5cIiBpZD1cIm9mZmVyTGlzdGluZ0lEXCIgbmFtZT1cIm9mZmVyTGlzdGluZ0lEXCIgdmFsdWU9XCJsamFNQ1RKcyUyQnNJTW03ejVkc0REQVg5eXFQN0VXUVczJTJGcDl6OTJyOU5GQyUyRjdpN1BUeUxOejJLem1PRGNIeW5ZTTBvelZCTnhRcTZnT0hibEJQZ01ONTlSZ1ZQZHA1b2FZaWN1eWhXZHlBY2c0d0dEem1VQnRUa2FTR0FVaDNCTHA4SkYxcEF6eWJRRWclMkI1TW03cGklMkZ6bnJBOXVyQVdzUVwiPlxuICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgaWQ9XCJzZXNzaW9uLWlkXCIgbmFtZT1cInNlc3Npb24taWRcIiB2YWx1ZT1cIjE0NS04OTc1MzkwLTUwNjQxMTNcIj5cbiAgICAgICAgICAgICAgXHUwMDNDaW5wdXQgdHlwZT1cImhpZGRlblwiIGlkPVwiQVNJTlwiIG5hbWU9XCJBU0lOXCIgdmFsdWU9XCJCMDFHS1FJMzkyXCI+XG4gICAgICAgICAgICAgIFx1MDAzQ2lucHV0IHR5cGU9XCJoaWRkZW5cIiBpZD1cImlzTWVyY2hhbnRFeGNsdXNpdmVcIiBuYW1lPVwiaXNNZXJjaGFudEV4Y2x1c2l2ZVwiIHZhbHVlPVwiMFwiPlxuICAgICAgICAgICAgICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgaWQ9XCJtZXJjaGFudElEXCIgbmFtZT1cIm1lcmNoYW50SURcIiB2YWx1ZT1cIkEyUjhOV0FBMEUyMUtEXCI+XG4gICAgICAgICAgICAgIFx1MDAzQ2lucHV0IHR5cGU9XCJoaWRkZW5cIiBpZD1cImlzQWRkb25cIiBuYW1lPVwiaXNBZGRvblwiIHZhbHVlPVwiMFwiPlxuICAgICAgICAgICAgICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgaWQ9XCJub2RlSURcIiBuYW1lPVwibm9kZUlEXCIgdmFsdWU9XCIzMzY3NTgxXCI+XG4gICAgICAgICAgICAgIFx1MDAzQ2lucHV0IHR5cGU9XCJoaWRkZW5cIiBpZD1cInNlbGxpbmdDdXN0b21lcklEXCIgbmFtZT1cInNlbGxpbmdDdXN0b21lcklEXCIgdmFsdWU9XCJBMlI4TldBQTBFMjFLRFwiPlxuICAgICAgICAgICAgICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgaWQ9XCJxaWRcIiBuYW1lPVwicWlkXCIgdmFsdWU9XCJcIj5cbiAgICAgICAgICAgICAgXHUwMDNDaW5wdXQgdHlwZT1cImhpZGRlblwiIGlkPVwic3JcIiBuYW1lPVwic3JcIiB2YWx1ZT1cIlwiPlxuICAgICAgICAgICAgICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgaWQ9XCJzdG9yZUlEXCIgbmFtZT1cInN0b3JlSURcIiB2YWx1ZT1cImpld2VscnlcIj5cbiAgICAgICAgICAgICAgXHUwMDNDaW5wdXQgdHlwZT1cImhpZGRlblwiIGlkPVwidGFnQWN0aW9uQ29kZVwiIG5hbWU9XCJ0YWdBY3Rpb25Db2RlXCIgdmFsdWU9XCIzMzY3NTgxXCI+XG4gICAgICAgICAgICAgIFx1MDAzQ2lucHV0IHR5cGU9XCJoaWRkZW5cIiBpZD1cInZpZXdJRFwiIG5hbWU9XCJ2aWV3SURcIiB2YWx1ZT1cImdsYW5jZVwiPlxuICAgICAgICAgICAgICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgaWQ9XCJyZWJhdGVJZFwiIG5hbWU9XCJyZWJhdGVJZFwiIHZhbHVlPVwiXCI+XG4gICAgICAgICAgICAgIFx1MDAzQ2lucHV0IHR5cGU9XCJoaWRkZW5cIiBpZD1cImN0YURldmljZVR5cGVcIiBuYW1lPVwiY3RhRGV2aWNlVHlwZVwiIHZhbHVlPVwiZGVza3RvcFwiPlxuICAgICAgICAgICAgICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgaWQ9XCJjdGFQYWdlVHlwZVwiIG5hbWU9XCJjdGFQYWdlVHlwZVwiIHZhbHVlPVwiZGV0YWlsXCI+XG4gICAgICAgICAgICAgIFx1MDAzQ2lucHV0IHR5cGU9XCJoaWRkZW5cIiBpZD1cInVzZVByaW1lSGFuZGxlclwiIG5hbWU9XCJ1c2VQcmltZUhhbmRsZXJcIiB2YWx1ZT1cIjBcIj5cbiAgICAgICAgICAgICAgXG5cblxuXG5cbiAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDaW5wdXQgdHlwZT1cImhpZGRlblwiIGlkPVwicnNpZFwiIG5hbWU9XCJyc2lkXCIgdmFsdWU9XCIxNDUtODk3NTM5MC01MDY0MTEzXCI+XG4gICAgICAgICAgICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgaWQ9XCJzb3VyY2VDdXN0b21lck9yZ0xpc3RJRFwiIG5hbWU9XCJzb3VyY2VDdXN0b21lck9yZ0xpc3RJRFwiIHZhbHVlPVwiXCI+XG4gICAgICAgICAgICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgaWQ9XCJzb3VyY2VDdXN0b21lck9yZ0xpc3RJdGVtSURcIiBuYW1lPVwic291cmNlQ3VzdG9tZXJPcmdMaXN0SXRlbUlEXCIgdmFsdWU9XCJcIj5cbiAgICAgICAgICAgIFx1MDAzQ2lucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwid2xQb3BDb21tYW5kXCIgdmFsdWU9XCJcIj5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG5cbiAgICAgXG4gXG5cblxuXG5cblxuXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG5cbiAgIFxuXG4gICBcbiAgIFxuXG4gIFx1MDAzQ2RpdiBjbGFzcz1cImEtYm94LWdyb3VwXCI+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cdTAwM0NzdHlsZT5cbi5nYl9ib3hfaW5mbyB7Ym9yZGVyLWNvbG9yOiNiYmQzZGU7fVxuLmdiX2JveF9lcnJvciB7Ym9yZGVyLWNvbG9yOiNjNDAwMDA7fVxuLmdiX2JveF93YXJuIHtib3JkZXItY29sb3I6IzhiNmUwMDt9XG4uZ2JfYm94X3N1Y2Nlc3Mge2JvcmRlci1jb2xvcjojODljZDg5O31cblx1MDAzQy9zdHlsZT5cblxuXG5cdFxuXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1ib3ggYS1sYXN0XCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1ib3gtaW5uZXJcIj5cblxuICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXBhZGRpbmctbm9uZVwiPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwicHJpY2VJbnNpZGVCdXlCb3hfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cInByaWNlSW5zaWRlQnV5Qm94XCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb25cIj5cblxuXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcdTAwM0NzcGFuIGlkPVwicHJpY2VfaW5zaWRlX2J1eWJveFwiIGNsYXNzPVwiYS1zaXplLW1lZGl1bSBhLWNvbG9yLXByaWNlXCI+XG4gICAgICAgICQxMi41MlxuICAgIFx1MDAzQy9zcGFuPlxuICAgIFxuXHUwMDNDL2Rpdj5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiZGVza3RvcF9xdWFsaWZpZWRCdXlCb3hcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cImRlc2t0b3BfcXVhbGlmaWVkQnV5Qm94XCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcdCAgICBcbiAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcblxuICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXBhZGRpbmctbm9uZVwiPlxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImludml0ZVBsYXRmb3JtX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJpbnZpdGVQbGF0Zm9ybVwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInBvaW50c0luc2lkZUJ1eUJveF9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwicG9pbnRzSW5zaWRlQnV5Qm94XCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwic2hpcHBpbmdNZXNzYWdlSW5zaWRlQnV5Qm94X2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJzaGlwcGluZ01lc3NhZ2VJbnNpZGVCdXlCb3hcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvblwiPlxuXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLWNvbHVtbiBhLXNwYW4xMiBhLXRleHQtbGVmdCBhLXNwYWNpbmctdG9wLW1pY3JvXCI+XG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDc3BhbiBpZD1cInByaWNlLXNoaXBwaW5nLW1lc3NhZ2VcIiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiPlx1MDAzQy9zcGFuPlxuICAgIFxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XG5cdTAwM0MvZGl2PlxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJkcEZhc3RUcmFja0luc2lkZUJ1eUJveF9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiZHBGYXN0VHJhY2tJbnNpZGVCdXlCb3hcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1taW5pIGEtc3BhY2luZy10b3AtbWljcm9cIj5cblx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XG4gICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuMTIgYS10ZXh0LWxlZnRcIj5cbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuXG5cblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG5cblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDZGl2IGlkPVwiZmFzdC10cmFja1wiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+XG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDaW5wdXQgdHlwZT1cImhpZGRlblwiIGlkPVwiZnRTZWxlY3RBc2luXCIgdmFsdWU9XCJCMDFHS1FJMzkyXCI+XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFx1MDAzQ2lucHV0IHR5cGU9XCJoaWRkZW5cIiBpZD1cImZ0U2VsZWN0TWVyY2hhbnRcIiB2YWx1ZT1cIkEyUjhOV0FBMEUyMUtEXCI+XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ2RpdiBpZD1cImZhc3QtdHJhY2stbWVzc2FnZVwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+XG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPlxuICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiZGVsaXZlcnktbWVzc2FnZVwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3AtbWluaVwiPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcblx0XHQgICAgICAgICAgICAgICAgICAgIFxuXHRcdCAgICAgICAgICAgICAgICAgICAgICAgIFxuXHRcdCAgICAgICAgICAgICAgICAgICAgICAgIFxuXHRcdCAgICAgICAgICAgICAgICAgICAgICAgIFxuXHRcdCAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS10ZXh0LWJvbGRcIj5cblx0XHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXHRcdCAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cblx0XHQgICAgICAgICAgICAgICAgICAgICAgICBcblx0XHQgICAgICAgICAgICAgICAgICAgIFxuXHRcdCAgICAgICAgICAgICAgICAgICAgXG5cdFx0ICAgICAgICAgICAgICAgICAgICAgICAgXG5cdFx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXHRcdCAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblx0XHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cdFx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXHRcdCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhpcyBpdGVtIHNoaXBzIHRvIFx1MDAzQ2I+Q2FuYWRhXHUwMDNDL2I+LiBcdTAwM0NiPldhbnQgaXQgV2VkbmVzZGF5LCBPY3QuIDI/XHUwMDNDL2I+IE9yZGVyIHdpdGhpbiBcdTAwM0NiPlx1MDAzQ3NwYW4gaWQ9XCJmdENvdW50ZG93blwiIGNsYXNzPVwiYS1jb2xvci1zdWNjZXNzIGEtY29sb3ItYXZhaWxhYmxlIGZ0Q291bnRkb3duQ2xhc3NcIj4yMiBocnMgNDggbWluc1x1MDAzQy9zcGFuPlx1MDAzQy9iPiBhbmQgY2hvb3NlIFx1MDAzQ2I+QW1hem9uR2xvYmFsIFByaW9yaXR5IFNoaXBwaW5nXHUwMDNDL2I+IGF0IGNoZWNrb3V0LlxuXHRcdCAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblx0XHQgICAgICAgICAgICAgICAgICAgICAgICBcblx0XHQgICAgICAgICAgICAgICAgICAgIFxuXHRcdCAgICAgICAgICAgICAgICAgICAgXG5cdFx0ICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDYSBocmVmPVwiL2dwL2hlbHAvY3VzdG9tZXIvZGlzcGxheS5odG1sL3JlZj1mdGluZm9fZHBfP2llPVVURjgmYW1wO25vZGVJZD0yMDEwNzQyMzAmYW1wO3BvcC11cD0xXCIgdGFyZ2V0PVwiQW1hem9uSGVscFwiIG9uY2xpY2s9XCJyZXR1cm4gYW16X2pzX1BvcFdpbignL2dwL2hlbHAvY3VzdG9tZXIvZGlzcGxheS5odG1sL3JlZj1mdGluZm9fZHBfP2llPVVURjgmYW1wO25vZGVJZD0yMDEwNzQyMzAmYW1wO3BvcC11cD0xJywnQW1hem9uSGVscCcsJ3dpZHRoPTU1MCxoZWlnaHQ9NjAwLHJlc2l6YWJsZT0xLHNjcm9sbGJhcnM9MSx0b29sYmFyPTEsc3RhdHVzPTEnKTtcIj5MZWFybiBtb3JlXHUwMDNDL2E+XG5cdFx0ICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXHRcdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuZnVuY3Rpb24gZmFzdFRyYWNrQ291bnREb3duKHNlY29uZHNMZWZ0LCBtZXNzYWdlU2VjdGlvbklkKSB7XG4gICAgdmFyIHNlY3Rpb25JZCA9IG1lc3NhZ2VTZWN0aW9uSWQ7XG4gICAgdmFyIEZUX3Nob3dBbmRJbkNvdW50ZG93biA9IGZhbHNlO1xuICAgIHZhciBGVF9EYXlTdHJpbmcgPSBcImRheVwiO1xuICAgIHZhciBGVF9EYXlzU3RyaW5nID0gXCJkYXlzXCI7XG4gICAgdmFyIEZUX0hvdXJTdHJpbmcgPSBcImhyXCI7XG4gICAgdmFyIEZUX0hvdXJzU3RyaW5nID0gXCJocnNcIjtcbiAgICB2YXIgRlRfTWludXRlU3RyaW5nID0gXCJtaW5cIjtcbiAgICB2YXIgRlRfTWludXRlc1N0cmluZyA9IFwibWluc1wiO1xuICAgIHZhciBGVF9BbmRTdHJpbmcgPSBcImFuZFwiO1xuICAgIHZhciBGVF9zdGFydGVkV2l0aEhvdXIgPSBuZXcgRGF0ZSgpLmdldEhvdXJzKCk7XG4gICAgdmFyIEZUX2dpdmVuU2Vjb25kcywgRlRfYWN0dWFsU2Vjb25kcztcbiAgICB2YXIgdGltZXJJZDtcblxuICAgIGZ1bmN0aW9uIGdldEVsZW1lbnRzQnlDbGFzc05hbWVDdXN0b20oY2xhc3NOYW1lKSB7XG4gICAgICAgIHZhciBzZWxlY3RlZEVsZW1lbnRzID0gW107XG5cbiAgICAgICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwpIHtcbiAgICAgICAgICAgIHZhciBzZWN0aW9uSWRFbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIjXCIgKyBzZWN0aW9uSWQpO1xuICAgICAgICAgICAgZm9yIChpbmRleCA9IDA7IGluZGV4IFx1MDAzQyBzZWN0aW9uSWRFbGVtZW50cy5sZW5ndGg7ICsraW5kZXgpIHtcbiAgICAgICAgICAgICAgICB2YXIgZWxlbWVudHMgPSBzZWN0aW9uSWRFbGVtZW50c1tpbmRleF0ucXVlcnlTZWxlY3RvckFsbChcIi5cIiArIGNsYXNzTmFtZSk7XG4gICAgICAgICAgICAgICAgZm9yKHZhciBpID0gMDsgZWxlbWVudHMgJiYgaSBcdTAwM0MgZWxlbWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRFbGVtZW50cy5wdXNoKGVsZW1lbnRzW2ldKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gc2VsZWN0ZWRFbGVtZW50cztcbiAgICB9XG4gICAgXG4gICAgdmFyIEZUX0N1cnJlbnREaXNwbGF5TWluO1xuICAgIHZhciBjbGllbnRTZXJ2ZXJUaW1lRHJpZnQ7XG4gICAgdmFyIGZpcnN0VGltZVVwZGF0ZSA9IHRydWU7XG4gICAgXG4gICAgdmFyIGNvdW50ZG93bkVsZW1lbnRzID0gZ2V0RWxlbWVudHNCeUNsYXNzTmFtZUN1c3RvbShcImZ0Q291bnRkb3duQ2xhc3NcIik7XG4gICAgaWYgKGNvdW50ZG93bkVsZW1lbnRzLmxlbmd0aCBcdTAwM0MgMSAmJiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChzZWN0aW9uSWQpICYmIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZnRDb3VudGRvd25cIikpIHtcbiAgICAgICAgY291bnRkb3duRWxlbWVudHMucHVzaChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZ0Q291bnRkb3duXCIpKTtcbiAgICB9XG4gICAgXG4gICAgZnVuY3Rpb24gZ2V0VGltZVJlbWFpbmluZ1N0cmluZyggZGF5cywgaG91cnMsIG1pbnV0ZXMgKVxuICAgIHtcblxuICAgICAgICBob3VycyA9IChkYXlzICogMjQpICsgaG91cnM7XG4gICAgICAgIHZhciBob3VyU3RyaW5nICAgPSAgKCBob3VycyA9PSAxID8gRlRfSG91clN0cmluZyA6IEZUX0hvdXJzU3RyaW5nICk7XG4gICAgICAgIHZhciBtaW51dGVTdHJpbmcgPSAgKCBtaW51dGVzICA9PSAxID8gRlRfTWludXRlU3RyaW5nIDogRlRfTWludXRlc1N0cmluZyApO1xuICAgICAgICBpZiAoaG91cnMgPT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIG1pbnV0ZXMgKyBcIiBcIiArIG1pbnV0ZVN0cmluZztcbiAgICAgICAgfVxuICAgICAgICBpZiAobWludXRlcyA9PSAwKSB7XG4gICAgICAgICAgcmV0dXJuIGhvdXJzICsgXCIgXCIgKyBob3VyU3RyaW5nO1xuICAgICAgICB9XG4gICAgICAgIGlmIChGVF9zaG93QW5kSW5Db3VudGRvd24pIHtcbiAgICAgICAgICByZXR1cm4gaG91cnMgKyBcIiBcIiArIGhvdXJTdHJpbmcgKyBcIiBcIiArIEZUX0FuZFN0cmluZyArIFwiIFwiICsgbWludXRlcyArIFwiIFwiICsgbWludXRlU3RyaW5nO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBob3VycyArIFwiIFwiICsgaG91clN0cmluZyArIFwiIFwiICsgbWludXRlcyArIFwiIFwiICsgbWludXRlU3RyaW5nO1xuICAgICAgICB9XG5cbiAgICB9ICAgICAgICBcbiAgICBcbiAgICBmdW5jdGlvbiBoaWRlQWxsRmFzdFRyYWNrQ29tcG9uZW50cygpIHtcbiAgICAgICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwpIHtcbiAgICAgICAgICAgIHZhciBmYXN0VHJhY2tDb21wb25lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIiNmYXN0LXRyYWNrXCIpO1xuICAgICAgICAgICAgdmFyIGluZGV4O1xuICAgICAgICAgICAgdmFyIHNob3VsZEhpZGVTZWN0aW9ucyA9IGZhbHNlO1xuICAgICAgICAgICAgaWYgKGZhc3RUcmFja0NvbXBvbmVudHMpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGluZGV4ID0gMDsgaW5kZXggXHUwMDNDIGZhc3RUcmFja0NvbXBvbmVudHMubGVuZ3RoOyArK2luZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChmYXN0VHJhY2tDb21wb25lbnRzW2luZGV4XS5xdWVyeVNlbGVjdG9yKFwiI1wiICsgc2VjdGlvbklkKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmFzdFRyYWNrQ29tcG9uZW50c1tpbmRleF0uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2hvdWxkSGlkZVNlY3Rpb25zID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc2hvdWxkSGlkZVNlY3Rpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzZWN0aW9uQ29tcG9uZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIjXCIgKyBzZWN0aW9uSWQpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoc2VjdGlvbkNvbXBvbmVudHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoaW5kZXggPSAwOyBpbmRleCBcdTAwM0Mgc2VjdGlvbkNvbXBvbmVudHMubGVuZ3RoOyArK2luZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VjdGlvbkNvbXBvbmVudHNbaW5kZXhdLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIEZUX2Rpc3BsYXlDb3VudGRvd24oZm9yY2VVcGRhdGUpXG4gICAge1xuICAgICAgICB2YXIgRlRfcmVtYWluU2Vjb25kcyA9IEZUX2dpdmVuU2Vjb25kcyAtIEZUX2FjdHVhbFNlY29uZHM7XG4gICAgICAgIC8vZm9yIGNvbXBvbmVudHMgaGF2aW5nIG91dGVyIGRpdiBcImZhc3QtdHJhY2tcIiBoaWRlIHRoYXQgY29tcG9uZW50IGVsc2UgaGlkZSB0aGUgbWVzc2FnZSBzZWN0aW9uSWQuXG4gICAgICAgIGlmIChGVF9yZW1haW5TZWNvbmRzIFx1MDAzQyAxKSB7XG4gICAgICAgICAgICBoaWRlQWxsRmFzdFRyYWNrQ29tcG9uZW50cygpO1xuICAgICAgICB9XG5cbiAgICAgIHZhciBGVF9zZWNvbmRzUGVyRGF5ID0gMjQgKiA2MCAqIDYwO1xuICAgICAgdmFyIEZUX2RheXNMb25nID0gRlRfcmVtYWluU2Vjb25kcyAvIEZUX3NlY29uZHNQZXJEYXk7XG4gICAgICB2YXIgRlRfZGF5cyA9IE1hdGguZmxvb3IoRlRfZGF5c0xvbmcpO1xuICAgICAgdmFyIEZUX2hvdXJzTG9uZyA9IChGVF9kYXlzTG9uZyAtIEZUX2RheXMpICogMjQ7XG4gICAgICB2YXIgRlRfaG91cnMgPSBNYXRoLmZsb29yKEZUX2hvdXJzTG9uZyk7XG4gICAgICB2YXIgRlRfbWluc0xvbmcgPSAoRlRfaG91cnNMb25nIC0gRlRfaG91cnMpICogNjA7XG4gICAgICB2YXIgRlRfbWlucyA9IE1hdGguZmxvb3IoRlRfbWluc0xvbmcpO1xuICAgICAgdmFyIEZUX3NlY3NMb25nID0gKEZUX21pbnNMb25nIC0gRlRfbWlucykgKiA2MDtcbiAgICAgIHZhciBGVF9zZWNzID0gTWF0aC5mbG9vcihGVF9zZWNzTG9uZyk7XG4gICAgICAgICAgdGltZXJJZCA9IHNldFRpbWVvdXQoRlRfZ2V0VGltZSwgMTAwMCk7XG4gICAgICB2YXIgZnRDb3VudGRvd24gPSBnZXRUaW1lUmVtYWluaW5nU3RyaW5nKCBGVF9kYXlzLCBGVF9ob3VycywgRlRfbWlucyApO1xuICAgICAgaWYgKGNvdW50ZG93bkVsZW1lbnRzLmxlbmd0aCkge1xuICAgICAgICBpZiAoRlRfQ3VycmVudERpc3BsYXlNaW4gIT0gRlRfbWlucyB8fCBmb3JjZVVwZGF0ZSB8fCBmaXJzdFRpbWVVcGRhdGUpIHtcbiAgICAgICAgICB2YXIgaSA9IDAsIGNvdW50ZG93bkVsZW1lbnQ7XG4gICAgICAgICAgd2hpbGUgKGNvdW50ZG93bkVsZW1lbnQgPSBjb3VudGRvd25FbGVtZW50c1tpKytdKSB7XG4gICAgICAgICAgICBjb3VudGRvd25FbGVtZW50LmlubmVySFRNTCA9IGZ0Q291bnRkb3duO1xuICAgICAgICAgIH1cbiAgICAgICAgICBGVF9DdXJyZW50RGlzcGxheU1pbiA9IEZUX21pbnM7XG4gICAgICAgICAgZmlyc3RUaW1lVXBkYXRlID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgZnVuY3Rpb24gRlRfZ2V0Q291bnRkb3duKHNlY29uZHNMZWZ0KVxuICAgIHtcbiAgICAgIHZhciBGVF9jdXJyZW50VGltZSA9IG5ldyBEYXRlKCk7XG4gICAgICB2YXIgRlRfY3VycmVudEhvdXJzID0gRlRfY3VycmVudFRpbWUuZ2V0SG91cnMoKTtcbiAgICAgIHZhciBGVF9jdXJyZW50TWlucyA9IEZUX2N1cnJlbnRUaW1lLmdldE1pbnV0ZXMoKTtcbiAgICAgIHZhciBGVF9jdXJyZW50U2VjcyA9IEZUX2N1cnJlbnRUaW1lLmdldFNlY29uZHMoKTtcbiAgICAgIEZUX2dpdmVuU2Vjb25kcyA9IEZUX2N1cnJlbnRIb3VycyAqIDM2MDAgKyBGVF9jdXJyZW50TWlucyAqIDYwICsgRlRfY3VycmVudFNlY3M7XG4gICAgICBGVF9naXZlblNlY29uZHMgKz0gc2Vjb25kc0xlZnQ7XG4gICAgICBGVF9nZXRUaW1lKCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIEZUX2dldFRpbWUoKVxuICAgIHtcbiAgICAgIHZhciBGVF9uZXdDdXJyZW50VGltZSA9IG5ldyBEYXRlKCk7XG4gICAgICB2YXIgRlRfYWN0dWFsSG91cnMgPSBGVF9uZXdDdXJyZW50VGltZS5nZXRIb3VycygpO1xuICAgICAgaWYgKEZUX3N0YXJ0ZWRXaXRoSG91ciA+IEZUX2FjdHVhbEhvdXJzKSB7XG4gICAgICAgIEZUX2FjdHVhbEhvdXJzICs9IDI0O1xuICAgICAgfVxuICAgICAgdmFyIEZUX2FjdHVhbE1pbnMgPSBGVF9uZXdDdXJyZW50VGltZS5nZXRNaW51dGVzKCk7XG4gICAgICB2YXIgRlRfYWN0dWFsU2VjcyA9IEZUX25ld0N1cnJlbnRUaW1lLmdldFNlY29uZHMoKTtcbiAgICAgIEZUX2FjdHVhbFNlY29uZHMgPSBGVF9hY3R1YWxIb3VycyAqIDM2MDAgKyBGVF9hY3R1YWxNaW5zICogNjAgKyBGVF9hY3R1YWxTZWNzO1xuICAgICAgRlRfZGlzcGxheUNvdW50ZG93bigpO1xuICAgIH1cbiAgICAgICAgRlRfZ2V0Q291bnRkb3duKHNlY29uZHNMZWZ0KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBzdG9wVGltZXIgOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcklkKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG59XG5cdTAwM0Mvc2NyaXB0PlxuXG4gICAgICAgICAgICAgICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cbiAgICAgICAgICAgICAgICAgICAgUC53aGVuKFwiQVwiLCBcImpRdWVyeVwiKS5leGVjdXRlKGZ1bmN0aW9uKEEsICQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYWdlU3RhdGUgPSBBLnN0YXRlKCdmdFBhZ2VTdGF0ZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBwYWdlU3RhdGUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFnZVN0YXRlID0ge307XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwYWdlU3RhdGVbXCJkZWxpdmVyeS1tZXNzYWdlXCJdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFnZVN0YXRlW1wiZGVsaXZlcnktbWVzc2FnZVwiXS5zdG9wVGltZXIoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2VTdGF0ZVtcImRlbGl2ZXJ5LW1lc3NhZ2VcIl0gPSBuZXcgZmFzdFRyYWNrQ291bnREb3duKDgyMTEyLFwiZGVsaXZlcnktbWVzc2FnZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoMCA+IDApICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhZ2VTdGF0ZVtcInVwc2VsbC1tZXNzYWdlXCJdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2VTdGF0ZVtcInVwc2VsbC1tZXNzYWdlXCJdLnN0b3BUaW1lcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWdlU3RhdGVbXCJ1cHNlbGwtbWVzc2FnZVwiXSA9IG5ldyBmYXN0VHJhY2tDb3VudERvd24oMCxcInVwc2VsbC1tZXNzYWdlXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoMCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocGFnZVN0YXRlW1wiYW1hem9uLWRheS1tZXNzYWdlXCJdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2VTdGF0ZVtcImFtYXpvbi1kYXktbWVzc2FnZVwiXS5zdG9wVGltZXIoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFnZVN0YXRlW1wiYW1hem9uLWRheS1tZXNzYWdlXCJdID0gbmV3IGZhc3RUcmFja0NvdW50RG93bigwLFwiYW1hem9uLWRheS1tZXNzYWdlXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBBLnN0YXRlKCdmdFBhZ2VTdGF0ZScsIHBhZ2VTdGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIFx1MDAzQy9zY3JpcHQ+XG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgXG5cdTAwM0MvZGl2PlxuXG4gICAgICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuICAgIHZhciBMVVhRdWFudGl0eVJlZnJlc2hFbmFibGVkID0gZmFsc2U7XG4gICAgUC53aGVuKFwiTFVYRFBRdWFudGl0eVJlZnJlc2hcIikuZXhlY3V0ZShmdW5jdGlvbigpIHtcbiAgICAgICAgTFVYUXVhbnRpdHlSZWZyZXNoRW5hYmxlZCA9IHRydWU7XG4gICAgfSk7XG5cbiAgICBQLndoZW4oXCJBXCIsIFwialF1ZXJ5XCIpLmV4ZWN1dGUoZnVuY3Rpb24oQSwgJCkge1xuICAgICAgICAkKFwiI3F1YW50aXR5XCIpLmxpdmUoXCJjaGFuZ2VcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XG5cbiAgICAgICAgICAgIC8vIExldCBMb2NhdGlvblVYIGhhbmRsZSBxdWFudGl0eSByZWZyZXNoZXMgaWYgaXQncyBlbmFibGVkLlxuICAgICAgICAgICAgaWYgKExVWFF1YW50aXR5UmVmcmVzaEVuYWJsZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9ICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICBpZiAoZXZlbnQudXBkYXRlRlRPblF1YW50aXR5Q2hhbmdlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZXZlbnQudXBkYXRlRlRPblF1YW50aXR5Q2hhbmdlID0gMTtcblxuICAgICAgICAgICAgdmFyIHF1YW50aXR5ID0gJCh0aGlzKS52YWwoKTtcbiAgICAgICAgICAgIHZhciBhc2luID0gJChcIiNmdFNlbGVjdEFzaW5cIikudmFsKCk7XG4gICAgICAgICAgICB2YXIgbWVyY2hhbnRJZCA9ICQoXCIjZnRTZWxlY3RNZXJjaGFudFwiKS52YWwoKTtcblxuICAgICAgICAgICAgaWYgKCFhc2luIHx8ICFtZXJjaGFudElkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgcGFyYW1zID0gW107XG4gICAgICAgICAgICBwYXJhbXMucHVzaChcImFzaW49XCIgKyBhc2luKTtcbiAgICAgICAgICAgIHBhcmFtcy5wdXNoKFwicXVhbnRpdHk9XCIgKyBxdWFudGl0eSk7XG4gICAgICAgICAgICBwYXJhbXMucHVzaChcIm1lcmNoYW50SWQ9XCIgKyBtZXJjaGFudElkKTtcblxuICAgICAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgICAgICB1cmw6IFwiL2dwL3Byb2R1Y3QvZmVhdHVyZXMvZHAtZmFzdC10cmFjay91ZHAtYWpheC1oYW5kbGVyL2dldC1xdWFudGl0eS11cGRhdGUtbWVzc2FnZS5odG1sP2llPVVURjhcIixcbiAgICAgICAgICAgICAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PXV0Zi04JyxcbiAgICAgICAgICAgICAgICBkYXRhOiBwYXJhbXMuam9pbignJicpLFxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImh0bWxcIixcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihvYmpSZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAob2JqUmVzcG9uc2UgIT0gbnVsbCAmJiBvYmpSZXNwb25zZSAhPSBcIlwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiI2Zhc3QtdHJhY2stbWVzc2FnZVwiKS5yZXBsYWNlV2l0aChvYmpSZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfSk7XG4gICAgfSk7XG5cdTAwM0Mvc2NyaXB0PlxuXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICBcblx1MDAzQy9kaXY+XG5cbiAgICBcbiAgICBcblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XG5cdTAwM0MvZGl2PlxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJwcm9taXNlQmFzZWRCYWRnZUluc2lkZUJ1eUJveF9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwicHJvbWlzZUJhc2VkQmFkZ2VJbnNpZGVCdXlCb3hcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1pbmlcIj5cblx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XG4gICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuMTIgYS10ZXh0LWxlZnRcIj5cbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG5cblxuICAgXG4gICAgICAgIFxuICAgXG4gICAgXG5cblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuXG5cbiAgICBcblxuXG4gICAgXG4gICAgXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cdTAwM0MvZGl2PlxuXHUwMDNDL2Rpdj5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiYWRkT25NZXNzYWdlX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJhZGRPbk1lc3NhZ2VcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJhdmFpbGFiaWxpdHlJbnNpZGVCdXlCb3hfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cImF2YWlsYWJpbGl0eUluc2lkZUJ1eUJveFwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctdG9wLW1pY3JvXCI+XG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG5cblxuXG5cblxuXG5cdTAwM0NkaXYgaWQ9XCJhdmFpbGFiaWxpdHlcIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctYmFzZVwiPlxuICAgIFxuICAgIFxuICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtbWVkaXVtIGEtY29sb3Itc3VjY2Vzc1wiPlxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgSW4gU3RvY2suXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcdTAwM0Mvc3Bhbj5cbiAgICBcbiAgICBcbiAgICBcblxuXG5cbiAgICBcbiAgICBcbiAgICBcblx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj5cbiAgICBcblxuICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgIFxuXG4gICAgXG4gXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cblxuXG4gIFxuXG5cblxuXG5cbiAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG5cblxuXG5cblx1MDAzQy9kaXY+XG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInF1YW50aXR5UmVsb2NhdGVfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cInF1YW50aXR5UmVsb2NhdGVcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuXG4gICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW1pbmlcIj5cbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuMTIgYS10ZXh0LWNlbnRlciBhLXNwYWNpbmctc21hbGxcIj5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgXHUwMDNDZGl2IGlkPVwic2VsZWN0UXVhbnRpdHlcIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXBhZGRpbmctbm9uZVwiPlxuICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwicXVhbnRpdHktZHJvcGRvd25cIiBkYXRhLXF1YW50aXR5LWRyb3Bkb3duPVwie31cIj5cbiAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtc3BhY2luZy1iYXNlXCI+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuMTIgYS10ZXh0LWxlZnRcIj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZHJvcGRvd24tY29udGFpbmVyXCI+XHUwMDNDbGFiZWwgZm9yPVwicXVhbnRpdHlcIiBjbGFzcz1cImEtbmF0aXZlLWRyb3Bkb3duXCI+UXR5Olx1MDAzQy9sYWJlbD5cdTAwM0NzZWxlY3QgbmFtZT1cInF1YW50aXR5XCIgYXV0b2NvbXBsZXRlPVwib2ZmXCIgaWQ9XCJxdWFudGl0eVwiIHRhYmluZGV4PVwiLTFcIiBjbGFzcz1cImEtbmF0aXZlLWRyb3Bkb3duXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDb3B0aW9uIHZhbHVlPVwiMVwiIHNlbGVjdGVkPVwiXCI+MVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDb3B0aW9uIHZhbHVlPVwiMlwiPjJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ29wdGlvbiB2YWx1ZT1cIjNcIj4zXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCI0XCI+NFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDb3B0aW9uIHZhbHVlPVwiNVwiPjVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ29wdGlvbiB2YWx1ZT1cIjZcIj42XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCI3XCI+N1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDb3B0aW9uIHZhbHVlPVwiOFwiPjhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ29wdGlvbiB2YWx1ZT1cIjlcIj45XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCIxMFwiPjEwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCIxMVwiPjExXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCIxMlwiPjEyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCIxM1wiPjEzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCIxNFwiPjE0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCIxNVwiPjE1XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCIxNlwiPjE2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCIxN1wiPjE3XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCIxOFwiPjE4XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCIxOVwiPjE5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NvcHRpb24gdmFsdWU9XCIyMFwiPjIwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQy9zZWxlY3Q+XHUwMDNDc3BhbiB0YWJpbmRleD1cIi0xXCIgY2xhc3M9XCJhLWJ1dHRvbiBhLWJ1dHRvbi1kcm9wZG93biBhLWJ1dHRvbi1zbWFsbFwiIGlkPVwiYS1hdXRvaWQtOVwiIHN0eWxlPVwibWluLXdpZHRoOiAwJTtcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24taW5uZXJcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24tdGV4dCBhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLWRyb3Bkb3duLWJ1dHRvblwiIHJvbGU9XCJidXR0b25cIiB0YWJpbmRleD1cIjBcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBpZD1cImEtYXV0b2lkLTktYW5ub3VuY2VcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1kcm9wZG93bi1sYWJlbFwiPlF0eTpcdTAwM0Mvc3Bhbj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1kcm9wZG93bi1wcm9tcHRcIj4xXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1kcm9wZG93blwiPlx1MDAzQy9pPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICAgICAgXG4gICAgICAgIFx1MDAzQy9zcGFuPlxuICAgIFx1MDAzQy9kaXY+XG4gICAgXG4gICAgXG4gICAgXG5cblxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwic29sZEJ5VGhpcmRQYXJ0eVJlbG9jYXRlX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJzb2xkQnlUaGlyZFBhcnR5UmVsb2NhdGVcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImFkZFRvQ2FydF9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiYWRkVG9DYXJ0XCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgICBcbiAgICAgIFxuICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtYnV0dG9uLXN0YWNrXCI+XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImRwLXByZS1hdGMtZGVjbGFyYXRpdmVcIiBkYXRhLWRwLXByZS1hdGMtZGVjbGFyYXRpdmU9XCJ7fVwiIGlkPVwiYXRjLWRlY2xhcmF0aXZlXCI+XG4gICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGlkPVwic3VibWl0LmFkZC10by1jYXJ0XCIgY2xhc3M9XCJhLWJ1dHRvbiBhLXNwYWNpbmctc21hbGwgYS1idXR0b24tcHJpbWFyeSBhLWJ1dHRvbi1pY29uXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uLWlubmVyXCI+XHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2FydFwiPlx1MDAzQy9pPlx1MDAzQ2lucHV0IGlkPVwiYWRkLXRvLWNhcnQtYnV0dG9uXCIgbmFtZT1cInN1Ym1pdC5hZGQtdG8tY2FydFwiIHRpdGxlPVwiQWRkIHRvIFNob3BwaW5nIENhcnRcIiBkYXRhLWhvdmVyPVwiU2VsZWN0IFx1MDAzQ2I+X19kaW1zX19cdTAwM0MvYj4gZnJvbSB0aGUgbGVmdFx1MDAzQ2JyPiB0byBhZGQgdG8gU2hvcHBpbmcgQ2FydFwiIGNsYXNzPVwiYS1idXR0b24taW5wdXRcIiB0eXBlPVwic3VibWl0XCIgdmFsdWU9XCJBZGQgdG8gQ2FydFwiIGFyaWEtbGFiZWxsZWRieT1cInN1Ym1pdC5hZGQtdG8tY2FydC1hbm5vdW5jZVwiPlx1MDAzQ3NwYW4gaWQ9XCJzdWJtaXQuYWRkLXRvLWNhcnQtYW5ub3VuY2VcIiBjbGFzcz1cImEtYnV0dG9uLXRleHRcIiBhcmlhLWhpZGRlbj1cInRydWVcIj5BZGQgdG8gQ2FydFx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgXG4gICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDZGl2IGNsYXNzPVwiZHAtY2lmIGFvay1oaWRkZW5cIiBkYXRhLWZlYXR1cmUtZGV0YWlscz1cInsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O2F0YyZxdW90OywmcXVvdDtpc0ludGVyYWN0aXZlJnF1b3Q7OmZhbHNlfVwiPlx1MDAzQy9kaXY+XG4gICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj4oZnVuY3Rpb24oZikge3ZhciBfbnA9KHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJEZXRhaWxQYWdlQnV5Qm94VGVtcGxhdGVcIikpO2lmKF9ucC5ndWFyZEZhdGFsKXtfbnAuZ3VhcmRGYXRhbChmKShfbnApO31lbHNle2YoX25wKTt9fShmdW5jdGlvbihQKSB7XG4gICAgICAgIFAubm93KCkuZXhlY3V0ZSgnZHAtbWFyay1hdGMnLGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHdpbmRvdy5tYXJrRmVhdHVyZVJlbmRlciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5tYXJrRmVhdHVyZVJlbmRlcignYXRjJyx7aXNJbnRlcmFjdGl2ZTpmYWxzZX0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KSk7XHUwMDNDL3NjcmlwdD5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJidXlOb3dfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cImJ1eU5vd1wiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLWJ1dHRvbi1zdGFja1wiPlxuICAgICAgICBcbiAgICAgICAgXHUwMDNDZGl2IGlkPVwiYnV5Tm93XCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLWJhc2VcIj5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXHUwMDNDZGl2IGlkPVwidHVyYm9TdGF0ZVwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtcGFkZGluZy1ub25lXCI+XG4gICAgICAgICAgICBcdTAwM0NzY3JpcHQgdHlwZT1cImEtc3RhdGVcIiBkYXRhLWEtc3RhdGU9XCJ7JnF1b3Q7a2V5JnF1b3Q7OiZxdW90O3R1cmJvLWNoZWNrb3V0LXBhZ2Utc3RhdGUmcXVvdDt9XCI+e1widHVyYm9XZWJsYWJcIjpcIlJDWF9DSEVDS09VVF9UVVJCT19ERVNLVE9QX05PTlBSSU1FXzg3Nzg0XCIsXCJzdHJpbmdzXCI6e1wiVFVSQk9fQ0hFQ0tPVVRfSEVBREVSXCI6XCJCdXkgbm93OiBLZW1zdG9uZSBFbGVnYW50IFJvc2UgR29sZC9TaWx2ZXIgMiBUb25lIE11bHRpbGF5ZXIgRGFuZ2xlIEVhcnJpbmdzIEFjY2Vzc29yeSBmb3IgV29tYW4sIDIuNCBJbmNoZXNcIixcIlRVUkJPX0xPQURJTkdfVEVYVFwiOlwiTG9hZGluZyB5b3VyIG9yZGVyIHN1bW1hcnlcIn0sXCJpbnB1dHNcIjp7XCJhXCI6XCJCMDFHS1FJMzkyXCIsXCJxdWFudGl0eVwiOlwiMVwiLFwicmVxdWVzdElkXCI6XCI0NzVFMzRKUVY5Rk5QSEo5U1NURFwiLFwiY3VzdG9tSXRlbVByaWNlXCI6XCJcIixcIm9pZFwiOlwibGphTUNUSnMlMkJzSU1tN3o1ZHNEREFYOXlxUDdFV1FXMyUyRnA5ejkycjlORkMlMkY3aTdQVHlMTnoyS3ptT0RjSHluWU0wb3pWQk54UXE2Z09IYmxCUGdNTjU5UmdWUGRwNW9hWWljdXloV2R5QWNnNHdHRHptVUJ0VGthU0dBVWgzQkxwOEpGMXBBenliUUVnJTJCNU1tN3BpJTJGem5yQTl1ckFXc1FcIixcInNlc3Npb25JZFwiOlwiMTQ1LTg5NzUzOTAtNTA2NDExM1wiLFwiYWRkcmVzc0lkXCI6XCJhZGQtbmV3XCJ9LFwiY29uZmlndXJhdGlvbnNcIjp7XCJpc1NpZ25JbkVuYWJsZWRcIjp0cnVlLFwiaW5pdGlhdGVTZWxlY3RvclwiOlwiI2J1eS1ub3ctYnV0dG9uXCIsXCJwcmVmZXRjaEVuYWJsZWRcIjp0cnVlfSxcImJ1dHRvbklEXCI6XCJidXktbm93XCIsXCJlbGlnaWJpbGl0eVwiOntcInByaW1lXCI6ZmFsc2UsXCJjYW5PbmVDbGlja1wiOmZhbHNlLFwicHJlT3JkZXJcIjpmYWxzZSxcImlzRWxpZ2libGVcIjpmYWxzZSxcInByaW1lU2hpcHBpbmdcIjp0cnVlLFwiY3VzdG9tZXJEZWZhdWx0c1wiOmZhbHNlLFwiY2FuQnV5Tm93XCI6dHJ1ZX0sXCJ0dXJib1dlYmxhYlRyZWF0bWVudFwiOlwiVDFcIixcInRpbWVvdXRcIjpcIjUwMDBcIn1cdTAwM0Mvc2NyaXB0PlxuICAgICAgICBcdTAwM0MvZGl2PlxuXG4gICAgICAgIFxuICAgICAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPihmdW5jdGlvbihmKSB7dmFyIF9ucD0od2luZG93LlAuX25hbWVzcGFjZShcIlR1cmJvQ2xpZW50RGV0YWlsUGFnZVwiKSk7aWYoX25wLmd1YXJkRmF0YWwpe19ucC5ndWFyZEZhdGFsKGYpKF9ucCk7fWVsc2V7ZihfbnApO319KGZ1bmN0aW9uKFApIHtcbiAgICAgICAgICAgIFAud2hlbignY2YnKS5leGVjdXRlKGZ1bmN0aW9uIGV4ZWN1dGVUdXJib0Fzc2V0c0xvYWRUcmlnZ2VyRXZlbnQoKSB7XG4gICAgICAgICAgICAgICAgUC5ub3coJ3R1cmJvLWNoZWNrb3V0LWFzc2V0cy1sb2FkLXRyaWdnZXInKS5leGVjdXRlKGZ1bmN0aW9uKGFzc2V0c0xvYWRUcmlnZ2VyKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChhc3NldHNMb2FkVHJpZ2dlcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgbG9nVHVyYm9Db3VudGVyKFwiQXNzZXRUcmlnZ2VyRGVkdXBlXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFAuZGVjbGFyZSgndHVyYm8tY2hlY2tvdXQtYXNzZXRzLWxvYWQtdHJpZ2dlcicsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbG9nVHVyYm9Db3VudGVyKCdBc3NldFRyaWdnZXInKTtcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbG9nVHVyYm9Db3VudGVyKCdBc3NldFRyaWdnZXJFeGNlcHRpb24nKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gbG9nVHVyYm9Db3VudGVyKG5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNvdW50ZXIgPSAndHVyYm9DaGVja291dCcgKyBuYW1lO1xuICAgICAgICAgICAgICAgICAgICBpZiAod2luZG93LnVlICYmIHdpbmRvdy51ZS5jb3VudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LnVlLmNvdW50KGNvdW50ZXIsIDEpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pKTtcdTAwM0Mvc2NyaXB0PlxuICAgIFxuXG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYS1tb2RhbFwiIGRhdGEtYS1tb2RhbD1cInsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O3R1cmJvJnF1b3Q7fVwiIGlkPVwidHVyYm8tY2hlY2tvdXQtbW9kYWxcIj5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gaWQ9XCJzdWJtaXQuYnV5LW5vd1wiIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24taWNvbiBhLWJ1dHRvbi1vbmVjbGljayBvbm1sLWJ1eS1ub3ctYnV0dG9uXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24taW5uZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1idXlub3dcIiByb2xlPVwiaW1nXCI+XHUwMDNDL2k+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDaW5wdXQgaWQ9XCJidXktbm93LWJ1dHRvblwiIG5hbWU9XCJzdWJtaXQuYnV5LW5vd1wiIGNsYXNzPVwiYS1idXR0b24taW5wdXRcIiB0eXBlPVwic3VibWl0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBpZD1cInN1Ym1pdC5idXktbm93LWFubm91bmNlXCIgY2xhc3M9XCJhLWJ1dHRvbi10ZXh0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+QnV5IE5vd1x1MDAzQy9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgXHUwMDNDL2Rpdj5cbiAgICBcblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInNoaXBzRnJvbVNvbGRCeUluc2lkZUJ1eUJveF9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwic2hpcHNGcm9tU29sZEJ5SW5zaWRlQnV5Qm94XCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbWVkaXVtXCI+XG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ2RpdiBpZD1cIm1lcmNoYW50LWluZm9cIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbWluaVwiPlxuICAgIFxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG5cblxuXG5cbiAgICBcblxuXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBTb2xkIGJ5IFx1MDAzQ2EgaHJlZj1cIi9ncC9oZWxwL3NlbGxlci9hdC1hLWdsYW5jZS5odG1sL3JlZj1kcF9tZXJjaGFudF9saW5rP2llPVVURjgmYW1wO3NlbGxlcj1BMlI4TldBQTBFMjFLRCZhbXA7aXNBbWF6b25GdWxmaWxsZWQ9MVwiIGlkPVwic2VsbGVyUHJvZmlsZVRyaWdnZXJJZFwiPktlbXN0b25lXHUwMDNDL2E+IGFuZCBcdTAwM0NhIGhyZWY9XCIvZ3AvaGVscC9jdXN0b21lci9kaXNwbGF5Lmh0bWw/aWU9VVRGOCZhbXA7cmVmPWRwX2Z1bGZpbGxtZW50JmFtcDtub2RlSWQ9MTA2MDk2MDExXCIgaWQ9XCJTU09GcG9wb3ZlckxpbmtcIiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIj5GdWxmaWxsZWQgYnkgQW1hem9uXHUwMDNDL2E+LlxuICAgICAgICBcbiAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInNlbGxlci1wb3BvdmVyLWluZm9ybWF0aW9uXCIgZGF0YS10aXRsZT1cIlNlbGxlciBJbmZvcm1hdGlvblwiIGRhdGEtYXNpbj1cIkIwMUdLUUkzOTJcIiBkYXRhLW1lcmNoYW50LWlkPVwiQTJSOE5XQUEwRTIxS0RcIj5cdTAwM0MvZGl2PlxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuICAgIFAud2hlbihcInNlbGxlci1yZWdpc3Rlci1wb3BvdmVyXCIpLmV4ZWN1dGUoZnVuY3Rpb24oc2VsbGVyUmVnaXN0ZXJQb3BvdmVyKSB7XG4gICAgICAgIHNlbGxlclJlZ2lzdGVyUG9wb3ZlcigpO1xuICAgIH0pO1xuXHUwMDNDL3NjcmlwdD5cbiAgICAgICAgXG4gICAgXG4gICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcblxuICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiXCI+XG4gICAgICAgICAgICBcbiAgICAgICAgXHUwMDNDL3NwYW4+XG5cbiAgICAgICAgXG5cblxuXG5cblxuXG5cbiAgICAgICAgXG5cblxuXG4gICAgXG5cblx1MDAzQy9kaXY+XG5cblxuXG4gICAgXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICBcblxuXG5cblxuXG5cblxuICBcbiAgXG4gIFxuICAgIFxuICBcblxuXG5cblxuXG5cblxuXHUwMDNDZGl2IGNsYXNzPVwiYS1wb3BvdmVyLXByZWxvYWRcIiBpZD1cImEtcG9wb3Zlci1TU09GcG9wb3ZlckxpbmstY29udGVudFwiPlxuICBcdTAwM0NwPkZ1bGZpbGxtZW50IGJ5IEFtYXpvbiAoRkJBKSBpcyBhIHNlcnZpY2Ugd2Ugb2ZmZXIgc2VsbGVycyB0aGF0IGxldHMgdGhlbSBzdG9yZSB0aGVpciBwcm9kdWN0cyBpbiBBbWF6b24ncyBmdWxmaWxsbWVudCBjZW50ZXJzLCBhbmQgd2UgZGlyZWN0bHkgcGFjaywgc2hpcCwgYW5kIHByb3ZpZGUgY3VzdG9tZXIgc2VydmljZSBmb3IgdGhlc2UgcHJvZHVjdHMuIFNvbWV0aGluZyB3ZSBob3BlIHlvdSdsbCBlc3BlY2lhbGx5IGVuam95OiBcdTAwM0NlbT5GQkEgaXRlbXMgcXVhbGlmeSBmb3IgRlJFRSBTaGlwcGluZyBhbmQgQW1hem9uIFByaW1lLlx1MDAzQy9lbT5cdTAwM0MvcD5cbiAgXHUwMDNDcD5JZiB5b3UncmUgYSBzZWxsZXIsIEZ1bGZpbGxtZW50IGJ5IEFtYXpvbiBjYW4gaGVscCB5b3UgZ3JvdyB5b3VyIGJ1c2luZXNzLiBcdTAwM0NhIGhyZWY9XCJodHRwczovL3NlcnZpY2VzLmFtYXpvbi5jb20vZnVsZmlsbG1lbnQtYnktYW1hem9uL2JlbmVmaXRzLmh0bVwiPkxlYXJuIG1vcmUgYWJvdXQgdGhlIHByb2dyYW0uXHUwMDNDL2E+XHUwMDNDL3A+XG5cdTAwM0MvZGl2PlxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuICBQLndoZW4oXCJBXCIsIFwialF1ZXJ5XCIsIFwiYS1wb3BvdmVyXCIsIFwicmVhZHlcIikuZXhlY3V0ZShmdW5jdGlvbihBLCAkLCBwb3BvdmVyKSB7XG4gICAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgICAgdmFyIHRpdGxlID0gXCJXaGF0IGlzIEZ1bGZpbGxtZW50IGJ5IEFtYXpvbj9cIjtcbiAgICAgIHZhciB0cmlnZ2VySWQgPSBcIiNTU09GcG9wb3ZlckxpbmtcIjtcbiAgICAgIHZhciBjb250ZW50SWQgPSBcIlNTT0Zwb3BvdmVyTGluay1jb250ZW50XCI7XG5cbiAgICAgIHZhciBvcHRpb25zID0ge1xuICAgICAgICBcImhlYWRlclwiOiB0aXRsZSxcbiAgICAgICAgXCJuYW1lXCI6IGNvbnRlbnRJZCxcbiAgICAgICAgXCJhY3RpdmF0ZVwiOiBcIm9uY2xpY2tcIixcbiAgICAgICAgXCJ3aWR0aFwiOiA0MzAsXG4gICAgICAgIFwicG9zaXRpb25cIjogXCJ0cmlnZ2VyQm90dG9tXCJcbiAgICAgIH07XG5cbiAgICAgIHZhciAkdHJpZ2dlciA9ICQodHJpZ2dlcklkKTtcbiAgICAgIHZhciBpbnN0YW5jZSA9IHBvcG92ZXIuY3JlYXRlKCR0cmlnZ2VyLCBvcHRpb25zKTtcbiAgfSk7XG5cdTAwM0Mvc2NyaXB0PlxuXG5cblxuXG5cblxuXHUwMDNDL2Rpdj5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwib3JpZ2luYWxQYWNrYWdpbmdNZXNzYWdlSW5zaWRlQnV5Qm94X2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJvcmlnaW5hbFBhY2thZ2luZ01lc3NhZ2VJbnNpZGVCdXlCb3hcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImhiYUxhYmVsX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJoYmFMYWJlbFwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwidHJhZGVJbkluc3RhbnRTYXZpbmdzX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJ0cmFkZUluSW5zdGFudFNhdmluZ3NcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInF1YW50aXR5TGF5b3V0SGlnaF9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwicXVhbnRpdHlMYXlvdXRIaWdoXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImJib3BfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cImJib3BcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXG5cbiAgICAgXG4gICAgIFxuXG5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJ2b2x0YWdlQ29tcGxpYW5jZV9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwidm9sdGFnZUNvbXBsaWFuY2VcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXG5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiYnVzaW5lc3NQcmljaW5nX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJidXNpbmVzc1ByaWNpbmdcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuICAgICBcblxuXG5cblxuXG5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJzb2xkQnlUaGlyZFBhcnR5X2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJzb2xkQnlUaGlyZFBhcnR5XCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInNjaGVkdWxlZERlbGl2ZXJ5X2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJzY2hlZHVsZWREZWxpdmVyeVwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cbiAgICAgXG4gICAgICAgIFxuXG5cblxuXG5cbiAgICAgXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJiYmdfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cImJiZ1wiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cIm1iYl9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwibWJiXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInF1YW50aXR5TGF5b3V0TG93X2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJxdWFudGl0eUxheW91dExvd1wiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJzaW1wbGVCdW5kbGVWMl9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwic2ltcGxlQnVuZGxlVjJcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImFzZ19mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiYXNnXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImFkZFRvQ2FydF9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiYWRkVG9DYXJ0XCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJwcmVBZGRUb0NhcnRGcmFtZXdvcmtfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cInByZUFkZFRvQ2FydEZyYW1ld29ya1wiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG4gICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJhLXN0YXRlXCIgZGF0YS1hLXN0YXRlPVwieyZxdW90O2tleSZxdW90OzomcXVvdDtkcC1wcmUtYXRjLWhlcm8mcXVvdDt9XCI+e1wiaGVyb05hbWVcIjpcIlwifVx1MDAzQy9zY3JpcHQ+XG4gICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJhLXN0YXRlXCIgZGF0YS1hLXN0YXRlPVwieyZxdW90O2tleSZxdW90OzomcXVvdDtkcC1wcmUtYXRjLWhlcm8tY2FuZGlkYXRlcyZxdW90O31cIj5bXCJkYXNoUHJlUmVnaXN0cmF0aW9uXCIsXCJhZGRTZXJ2aWNlc1wiXVx1MDAzQy9zY3JpcHQ+XG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImJ1eU5vd19mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiYnV5Tm93XCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJoaWdoVmFsdWVNZXNzYWdpbmdfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cImhpZ2hWYWx1ZU1lc3NhZ2luZ1wiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG4gICAgXG5cblxuXG5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwib25lQ2xpY2tfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cIm9uZUNsaWNrXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuXG4gICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0NkaXYgaWQ9XCJPbmVDbGlja0JveFwiIGNsYXNzPVwiYS1idXR0b24tc3RhY2tcIj5cbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cIm9uZUNsaWNrU2lnbkluXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLWJhc2UgYS10ZXh0LWNlbnRlclwiPlxuICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuXHUwMDNDL2Rpdj5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJkZXRhaWxQYWdlR2lmdGluZ19mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiZGV0YWlsUGFnZUdpZnRpbmdcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJ3YXJyYW50eUNFVGVjaFwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwid2FycmFudHlDRVRlY2hcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFx0ICAgIFxuICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuICAgIFx0ICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwibWFrb0dpZnRpbmdPcHRpb25cIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cIm1ha29HaWZ0aW5nT3B0aW9uXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcdCAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cIm1ha29QcmVSZWdpc3RyYXRpb25cIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cIm1ha29QcmVSZWdpc3RyYXRpb25cIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFx0ICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwibWFrb0NFVGVjaFwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwibWFrb0NFVGVjaFwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXHQgICAgXG4gICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG4gICAgXHQgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJhY2Nlc3NvcnlVcHNlbGxBbWFib3RfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cImFjY2Vzc29yeVVwc2VsbEFtYWJvdFwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImFjY2Vzc29yeVVwc2VsbEJ0Zl9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiYWNjZXNzb3J5VXBzZWxsQnRmXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiBcbiAgICBcbiAgICBcbiAgICBcblxuXG4gICAgXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImdsb3dDb250ZXh0dWFsSW5ncmVzc1B0X2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJnbG93Q29udGV4dHVhbEluZ3Jlc3NQdFwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDaHIgY2xhc3M9XCJhLWRpdmlkZXItbm9ybWFsXCI+XG4gICAgICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuXG5cblxuICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJkcENvbnRleHR1YWxJbmdyZXNzUHRcIiBkYXRhLWRwY29udGV4dHVhbGluZ3Jlc3NwdD1cInt9XCI+XG4gICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgaHJlZj1cIiNcIj5cbiAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtc3BhY2luZy1taW5pXCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuMTIgYS10ZXh0LWxlZnRcIj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiY29udGV4dHVhbEluZ3Jlc3NQdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiY29udGV4dHVhbEluZ3Jlc3NQdFBpblwiPlx1MDAzQy9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGlkPVwiY29udGV4dHVhbEluZ3Jlc3NQdExhYmVsXCIgY2xhc3M9XCJhLXNpemUtc21hbGxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJjb250ZXh0dWFsSW5ncmVzc1B0TGFiZWxfZGVsaXZlcnlTaG9ydExpbmVcIj5cdTAwM0NzcGFuPkRlbGl2ZXIgdG8mbmJzcDtcdTAwM0Mvc3Bhbj5cdTAwM0NzcGFuPkNhbmFkYVx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDL2E+XG4gICAgXHUwMDNDL3NwYW4+XG5cblxuICAgIFxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwidW5pZmllZExvY2F0aW9uX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJ1bmlmaWVkTG9jYXRpb25cIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuICAgICAgICBcbiAgICBcblxuXG5cblxuICAgIFx0ICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiZGlnaXRhbERhc2hIaWdoUHJvbWluZW5jZV9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiZGlnaXRhbERhc2hIaWdoUHJvbWluZW5jZVwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImFkZFRvV2lzaGxpc3RfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cImFkZFRvV2lzaGxpc3RcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDaHIgY2xhc3M9XCJhLXNwYWNpbmctYmFzZSBhLWRpdmlkZXItbm9ybWFsXCI+XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgICAgICBcbiAgICBcblxuXG5cblxuXG4gIFx1MDAzQ2RpdiBpZD1cIndpc2hsaXN0QnV0dG9uU3RhY2tcIiBjbGFzcz1cImEtYnV0dG9uLXN0YWNrXCI+XG4gICAgICBcbiAgICAgIFxuICAgICAgXG4gICAgICBcbiAgICAgIFxuICAgICAgXG4gICAgICBcbiAgICAgIFxuXG4gICAgICBcbiAgICAgIFxuICAgICAgXG4gICAgICBcdTAwM0NkaXYgaWQ9XCJhZGQtdG8td2lzaGxpc3QtYnV0dG9uLWdyb3VwXCIgZGF0YS1ob3Zlcj1cIlx1MDAzQyEtLSBJZiBQYXJ0aWFsSXRlbVN0YXRlV2VibGFiIGlzIHRydWUgdGhlbiwgc2hvd2luZyBkaWZmZXJlbnQgQWRkLXRvLXdpc2gtbGlzdCB0b29sLXRpcCBtZXNzYWdlIHdoaWNoIGlzIGNvbnNpc3RlbnQgd2l0aCBBZGQtdG8tQ2FydCB0b29sIHRpcCBtZXNzYWdlLiAgLS0+XG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgU2VsZWN0IFx1MDAzQ2I+X19kaW1zX19cdTAwM0MvYj4gZnJvbSB0aGUgbGVmdFx1MDAzQ2JyPiB0byBhZGQgdG8gV2lzaCBMaXN0XCIgY2xhc3M9XCJhLWJ1dHRvbi1ncm91cCBhLWRlY2xhcmF0aXZlIGEtc3BhY2luZy1ub25lXCIgZGF0YS1hY3Rpb249XCJhLWJ1dHRvbi1ncm91cFwiIHJvbGU9XCJyYWRpb2dyb3VwXCI+XG4gICAgICAgICAgICAgIFx1MDAzQ3NwYW4gaWQ9XCJ3aXNoTGlzdE1haW5CdXR0b25cIiBjbGFzcz1cImEtYnV0dG9uIGEtYnV0dG9uLWdyb3VwLWZpcnN0IGEtc3BhY2luZy1ub25lIGEtYnV0dG9uLWJhc2UgYS1kZWNsYXJhdGl2ZVwiIHJvbGU9XCJyYWRpb1wiIGFyaWEtbGFiZWxsZWRieT1cIndpc2hMaXN0TWFpbkJ1dHRvbi1hbm5vdW5jZVwiIGFyaWEtcG9zaW5zZXQ9XCIxXCIgYXJpYS1zZXRzaXplPVwiMVwiIGRhdGEtYWN0aW9uPVwiYWRkLXdpc2hsaXN0LWRlY2xhcmF0aXZlXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uLWlubmVyXCI+XHUwMDNDaW5wdXQgaWQ9XCJhZGQtdG8td2lzaGxpc3QtYnV0dG9uLXN1Ym1pdFwiIG5hbWU9XCJzdWJtaXQuYWRkLXRvLXJlZ2lzdHJ5Lndpc2hsaXN0XCIgdGl0bGU9XCJBZGQgdG8gTGlzdFwiIGRhdGEtYWN0aW9uPVwiYXR3bC1zcGxpdGJ1dHRvbi1tYWluXCIgZGF0YS1ob3Zlcj1cIlx1MDAzQyEtLSBJZiBQYXJ0aWFsSXRlbVN0YXRlV2VibGFiIGlzIHRydWUgdGhlbiwgc2hvd2luZyBkaWZmZXJlbnQgQWRkLXRvLXdpc2gtbGlzdCB0b29sLXRpcCBtZXNzYWdlIHdoaWNoIGlzIGNvbnNpc3RlbnQgd2l0aCBBZGQtdG8tQ2FydCB0b29sIHRpcCBtZXNzYWdlLiAgLS0+XG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgU2VsZWN0IFx1MDAzQ2I+X19kaW1zX19cdTAwM0MvYj4gZnJvbSB0aGUgbGVmdFx1MDAzQ2JyPiB0byBhZGQgdG8gV2lzaCBMaXN0XCIgY2xhc3M9XCJhLWJ1dHRvbi1pbnB1dCBhLWRlY2xhcmF0aXZlXCIgdHlwZT1cInN1Ym1pdFwiIGFyaWEtbGFiZWxsZWRieT1cIndpc2hMaXN0TWFpbkJ1dHRvbi1hbm5vdW5jZVwiPlx1MDAzQ3NwYW4gaWQ9XCJ3aXNoTGlzdE1haW5CdXR0b24tYW5ub3VuY2VcIiBjbGFzcz1cImEtYnV0dG9uLXRleHQgYS10ZXh0LWxlZnRcIiBhcmlhLWhpZGRlbj1cInRydWVcIj5cbiAgICAgICAgICAgICAgICAgIEFkZCB0byBMaXN0XG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XG4gICAgICAgICAgICAgIFxuICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgIFxuICAgICAgXG4gICAgICAgXG4gICAgICBcdTAwM0NkaXYgaWQ9XCJhdHdsLWlubGluZS1zcGlubmVyXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1oaWRkZW5cIj5cbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1zcGlubmVyLXdyYXBwZXJcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1zcGlubmVyIGEtc3Bpbm5lci1tZWRpdW1cIj5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2PlxuICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXG4gICAgICBcbiAgICAgIFx1MDAzQ2RpdiBpZD1cImF0d2wtaW5saW5lXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1oaWRkZW5cIj5cbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS10ZXh0LWVsbGlwc2lzXCI+XG4gICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJhdHdsLWlubGluZS1zdWNlc3MtbXNnXCIgY2xhc3M9XCJhLWJveCBhLWFsZXJ0LWlubGluZSBhLWFsZXJ0LWlubGluZS1zdWNjZXNzXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1ib3gtaW5uZXIgYS1hbGVydC1jb250YWluZXJcIj5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1hbGVydFwiPlx1MDAzQy9pPlx1MDAzQ2RpdiBjbGFzcz1cImEtYWxlcnQtY29udGVudFwiPlxuICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2VcIiByb2xlPVwiYWxlcnRcIj5cbiAgICAgICAgICAgICAgICBBZGRlZCB0b1xuICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2PlxuICAgICAgICAgICAgXHUwMDNDYSBpZD1cImF0d2wtaW5saW5lLWxpbmtcIiBjbGFzcz1cImEtbGluay1ub3JtYWxcIiBocmVmPVwiL2dwL3JlZ2lzdHJ5L3dpc2hsaXN0L1wiPlxuICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gaWQ9XCJhdHdsLWlubGluZS1saW5rLXRleHRcIiBjbGFzcz1cImEtc2l6ZS1iYXNlXCIgcm9sZT1cImFsZXJ0XCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgICAgICAgICBcdTAwM0MvYT5cbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgIFx1MDAzQy9kaXY+XG5cbiAgICAgIFxuICAgICAgXHUwMDNDZGl2IGlkPVwiYXR3bC1pbmxpbmUtZXJyb3JcIiBjbGFzcz1cImEtc2VjdGlvbiBhLWhpZGRlblwiPlxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLWJveCBhLWFsZXJ0LWlubGluZSBhLWFsZXJ0LWlubGluZS1lcnJvclwiIGFyaWEtbGl2ZT1cImFzc2VydGl2ZVwiIHJvbGU9XCJhbGVydFwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtYm94LWlubmVyIGEtYWxlcnQtY29udGFpbmVyXCI+XHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tYWxlcnRcIj5cdTAwM0MvaT5cdTAwM0NkaXYgY2xhc3M9XCJhLWFsZXJ0LWNvbnRlbnRcIj5cbiAgICAgICAgICBcdTAwM0NzcGFuIGlkPVwiYXR3bC1pbmxpbmUtZXJyb3ItbXNnXCIgY2xhc3M9XCJhLXNpemUtYmFzZVwiIHJvbGU9XCJhbGVydFwiPlxuICAgICAgICAgICAgVW5hYmxlIHRvIGFkZCBpdGVtIHRvIExpc3QuIFBsZWFzZSB0cnkgYWdhaW4uXG4gICAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2PlxuICAgICAgXHUwMDNDL2Rpdj5cblxuICAgICAgXHUwMDNDZGl2IGlkPVwiYXR3bC1kZC1zcGlubmVyLWhvbGRlclwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtaGlkZGVuXCI+XG4gICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1kcm9wZG93blwiPlxuICAgICAgICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1wb3BvdmVyLXdyYXBwZXJcIj5cbiAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXRleHQtY2VudGVyIGEtcG9wb3Zlci1pbm5lclwiPlxuICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtYm94IGEtcG9wb3Zlci1sb2FkaW5nXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1ib3gtaW5uZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICBcdTAwM0MvZGl2Plx1MDAzQy9kaXY+XG4gICAgICAgICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICBcdTAwM0MvZGl2PlxuICAgICAgXHUwMDNDZGl2IGlkPVwiYXR3bC1kZC1lcnJvci1ob2xkZXJcIiBjbGFzcz1cImEtc2VjdGlvbiBhLWhpZGRlblwiPlxuICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLWRyb3Bkb3duXCI+XG4gICAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXBvcG92ZXItd3JhcHBlclwiPlxuICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1iYXNlIGEtcGFkZGluZy1iYXNlIGEtdGV4dC1sZWZ0IGEtcG9wb3Zlci1pbm5lclwiPlxuICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2gzIGNsYXNzPVwiYS1jb2xvci1lcnJvclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICBTb3JyeSwgdGhlcmUgd2FzIGEgcHJvYmxlbS5cbiAgICAgICAgICAgICAgICAgICAgICBcdTAwM0MvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgVGhlcmUgd2FzIGFuIGVycm9yIHJldHJpZXZpbmcgeW91ciBXaXNoIExpc3RzLiBQbGVhc2UgdHJ5IGFnYWluLlxuICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgIFx1MDAzQ2RpdiBpZD1cImF0d2wtZGQtdW5hdmFpbC1ob2xkZXJcIiBjbGFzcz1cImEtc2VjdGlvbiBhLWhpZGRlblwiPlxuICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLWRyb3Bkb3duXCI+XG4gICAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXBvcG92ZXItd3JhcHBlclwiPlxuICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1iYXNlIGEtcGFkZGluZy1iYXNlIGEtdGV4dC1sZWZ0IGEtcG9wb3Zlci1pbm5lclwiPlxuICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2gzIGNsYXNzPVwiYS1jb2xvci1lcnJvclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICBTb3JyeSwgdGhlcmUgd2FzIGEgcHJvYmxlbS5cbiAgICAgICAgICAgICAgICAgICAgICBcdTAwM0MvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgTGlzdCB1bmF2YWlsYWJsZS5cbiAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgIFx1MDAzQy9kaXY+XG4gICAgICBcdTAwM0NzY3JpcHQgdHlwZT1cImEtc3RhdGVcIiBkYXRhLWEtc3RhdGU9XCJ7JnF1b3Q7a2V5JnF1b3Q7OiZxdW90O2F0d2wmcXVvdDt9XCI+e1wic2hvd0lubGluZUxpbmtcIjpmYWxzZSxcImh6UG9wb3ZlclwiOnRydWUsXCJ3aXNobGlzdEJ1dHRvbklkXCI6XCJhZGQtdG8td2lzaGxpc3QtYnV0dG9uXCIsXCJkcm9wRG93bkh0bWxcIjpcIlwiLFwiaW5saW5lSnNGaXhcIjp0cnVlLFwid2lzaGxpc3RCdXR0b25TdWJtaXRJZFwiOlwiYWRkLXRvLXdpc2hsaXN0LWJ1dHRvbi1zdWJtaXRcIixcIm1heEFqYXhGYWlsdXJlQ291bnRcIjpcIjNcIixcImFzaW5cIjpcIkIwMUdLUUkzOTJcIn1cdTAwM0Mvc2NyaXB0PlxuXG4gICAgICBcbiAgICAgICAgICBcbiAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcblxuICAgIFxuXG5cbiAgICAgICAgICBcbiAgICAgICAgICBcbiAgICAgIFxuXG4gIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cImEtc3RhdGVcIiBkYXRhLWEtc3RhdGU9XCJ7JnF1b3Q7a2V5JnF1b3Q7OiZxdW90O3BvcG92ZXJTdGF0ZSZxdW90O31cIj57XCJmb3JtSWRcIjpcImFkZFRvQ2FydFwiLFwic2hvd1dpc2hMaXN0RHJvcERvd25cIjpmYWxzZSxcImJhYnlSZWdpc3RyeUlkXCI6XCJhZGQtdG8tcmVnaXN0cnktYmFieS1idXR0b25cIixcInNob3dCYWJ5UmVnRHJvcGRvd25cIjpmYWxzZSxcIndpc2hsaXN0UG9wb3ZlcldpZHRoXCI6MjA2LFwiaXNBZGRUb1dpc2hMaXN0RHJvcERvd25BdWlFbmFibGVkXCI6dHJ1ZSxcInNob3dQb3BvdmVyXCI6ZmFsc2V9XHUwMDNDL3NjcmlwdD5cblxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPihmdW5jdGlvbihmKSB7dmFyIF9ucD0od2luZG93LlAuX25hbWVzcGFjZShcImxpc3QtQ0YtcmVnaXN0ZXItanNcIikpO2lmKF9ucC5ndWFyZEZhdGFsKXtfbnAuZ3VhcmRGYXRhbChmKShfbnApO31lbHNle2YoX25wKTt9fShmdW5jdGlvbihQKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgICB3aW5kb3cuUC5ub3coJ2F0d2wtY2YnKS5leGVjdXRlKGZ1bmN0aW9uIChtb2R1bGUpIHtcbiAgICAgICAgdmFyIGlzUmVnaXN0ZXJlZCA9ICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyk7XG4gICAgICAgIGlmICghaXNSZWdpc3RlcmVkKSB7XG4gICAgICAgICAgICB3aW5kb3cuUC5yZWdpc3RlcignYXR3bC1jZicpO1xuICAgICAgICB9XG4gICAgfSk7XG59KSk7XHUwMDNDL3NjcmlwdD5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJkaWdpdGFsRGFzaExvd1Byb21pbmVuY2VfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cImRpZ2l0YWxEYXNoTG93UHJvbWluZW5jZVwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuXG5cbiAgICAgICAgICAgICAgICBcdTAwM0MvZGl2PlxuXG5cbiAgICAgICAgICAgICBcdTAwM0MvZGl2Plx1MDAzQy9kaXY+XG4gICBcdTAwM0MvZGl2PlxuXG5cbiAgXG4gICAgICAgIFxuICAgIFxuXG5cblxuXG5cbiAgICBcdTAwM0NpbnB1dCBkYXRhLWFkZG5ld2FkZHJlc3M9XCJhZGQtbmV3XCIgaWQ9XCJjYXJ0QWRkcmVzc05ld1wiIG5hbWU9XCJkcm9wZG93bi1zZWxlY3Rpb25cIiB0eXBlPVwiaGlkZGVuXCIgdmFsdWU9XCJhZGQtbmV3XCI+XHUwMDNDaW5wdXQgZGF0YS1hZGRuZXdhZGRyZXNzPVwiYWRkLW5ld1wiIGlkPVwiY2FydEFkZHJlc3NVc2VkXCIgbmFtZT1cImRyb3Bkb3duLXNlbGVjdGlvbi11YmJcIiB0eXBlPVwiaGlkZGVuXCIgdmFsdWU9XCJhZGQtbmV3XCI+XHUwMDNDL2Zvcm0+XG4gXHUwMDNDL2Rpdj5cblxuICAgIFx0ICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgXG5cblxuXG5cdTAwM0MvZGl2PlxuXG4gICAgXHQgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInRlbGxBRnJpZW5kQm94X2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJ0ZWxsQUZyaWVuZEJveFwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy10b3Atc21hbGxcIj5cbiAgICBcblxuXG5cblxuXG5cbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcblxuICAgICAgICBcbiAgICAgICAgICAgIFxuXG4gICAgICAgIFx1MDAzQ2RpdiBpZD1cInRlbGwtYS1mcmllbmRcIiBkYXRhLWNsb3NlPVwiQ2xvc2VcIiBkYXRhLWRlc3Q9XCJcIiBkYXRhLXRpdGxlPVwiU2hhcmUgdGhpcyBpdGVtIHZpYSBFbWFpbFwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtdGV4dC1jZW50ZXIgYS1zcGFjaW5nLXNtYWxsXCI+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG4gICAgXHUwMDNDYSBpZD1cInN3Zk1haWxUb1wiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBlbWFpbFwiIHRpdGxlPVwiU2hhcmUgdmlhIGUtbWFpbFwiIGhyZWY9XCJtYWlsdG86P2JvZHk9SSUyMHdhbnQlMjB0byUyMHJlY29tbWVuZCUyMHRoaXMlMjBwcm9kdWN0JTIwYXQlMjBBbWF6b24uY29tJTBBJTBBS2Vtc3RvbmUlMjBFbGVnYW50JTIwUm9zZSUyMEdvbGQlMkZTaWx2ZXIlMjAyJTIwVG9uZSUyME11bHRpbGF5ZXIlMjBEYW5nbGUlMjBFYXJyaW5ncyUyMEFjY2Vzc29yeSUyMGZvciUyMFdvbWFuJTJDJTIwMi40JTIwSW5jaGVzJTBBYnklMjBLZW1zdG9uZSUwQUxlYXJuJTIwbW9yZSUzQSUyMGh0dHBzJTNBJTJGJTJGd3d3LmFtYXpvbi5jb20lMkZkcCUyRkIwMUdLUUkzOTIlMkZyZWYlM0RjbV9zd19lbV9yX210X2RwX1VfbUlzS0RiNDUzSlZGUCZhbXA7c3ViamVjdD1JJTIwd2FudCUyMHRvJTIwcmVjb21tZW5kJTIwdGhpcyUyMHByb2R1Y3QlMjBvbiUyMEFtYXpvblwiPlNoYXJlXHUwMDNDL2E+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGV0dGVyLXNwYWNlXCI+XHUwMDNDL3NwYW4+XG5cblx1MDAzQ2EgaWQ9XCJzd2ZJbWFnZU1haWxUb1wiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBlbWFpbFwiIHRpdGxlPVwiU2hhcmUgdmlhIGUtbWFpbFwiIGhyZWY9XCJtYWlsdG86P2JvZHk9SSUyMHdhbnQlMjB0byUyMHJlY29tbWVuZCUyMHRoaXMlMjBwcm9kdWN0JTIwYXQlMjBBbWF6b24uY29tJTBBJTBBS2Vtc3RvbmUlMjBFbGVnYW50JTIwUm9zZSUyMEdvbGQlMkZTaWx2ZXIlMjAyJTIwVG9uZSUyME11bHRpbGF5ZXIlMjBEYW5nbGUlMjBFYXJyaW5ncyUyMEFjY2Vzc29yeSUyMGZvciUyMFdvbWFuJTJDJTIwMi40JTIwSW5jaGVzJTBBYnklMjBLZW1zdG9uZSUwQUxlYXJuJTIwbW9yZSUzQSUyMGh0dHBzJTNBJTJGJTJGd3d3LmFtYXpvbi5jb20lMkZkcCUyRkIwMUdLUUkzOTIlMkZyZWYlM0RjbV9zd19lbV9yX210X2RwX1VfbUlzS0RiNDUzSlZGUCZhbXA7c3ViamVjdD1JJTIwd2FudCUyMHRvJTIwcmVjb21tZW5kJTIwdGhpcyUyMHByb2R1Y3QlMjBvbiUyMEFtYXpvblwiPlx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXNoYXJlLWVtYWlsXCIgcm9sZT1cImltZ1wiPlx1MDAzQy9pPlx1MDAzQy9hPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxldHRlci1zcGFjZVwiPlx1MDAzQy9zcGFuPlxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuUC53aGVuKCdBJywncmVhZHknKS5leGVjdXRlKGZ1bmN0aW9uKEEpe1xuICAgIHZhciAkID0gQS4kO1xuICAgIGZ1bmN0aW9uIGNvbGxlY3RNZXRyaWNzKCBwbGFjZW1lbnRJZCApIHtcbiAgICAgICAgQS5hamF4KCcvZ3AvYXcvc29jaWFsL3N3Zi9tZXRyaWNzLmh0bWwvcmVmPWNtX3N3X2VtX210X2RwXycrIHBsYWNlbWVudElkLCB7XG4gICAgICAgICAgICBtZXRob2Q6ICdwb3N0JyxcbiAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgIGlkOiAnbWFpbHRvRHAnLFxuICAgICAgICAgICAgICAgIHJlc3VsdDogJ21haWx0byBzaGFyZSB0cmlnZ2VyZWQnXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAkKCcjc3dmTWFpbFRvLCNzd2ZJbWFnZScpLmNsaWNrKCBmdW5jdGlvbigpe1xuICAgICAgICAgICAgY29sbGVjdE1ldHJpY3MoJ2RwX1VfbUlzS0RiNDUzSlZGUCcpO1xuICAgIH0pO1xufSk7XG5cdTAwM0Mvc2NyaXB0PlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2EgaWQ9XCJmYWNlYm9va1wiIGRhdGEtaGVpZ2h0PVwiNDAwXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHN3Zi1zb2NpYWwtc2l0ZVwiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCIgdGl0bGU9XCJTaGFyZSBvbiBGYWNlYm9va1wiIGhyZWY9XCIvZ3AvcmVkaXJlY3QuaHRtbC9yZWY9Y21fc3dfY2xfZmFfZHBfVV9tSXNLRGI0NTNKVkZQP19lbmNvZGluZz1VVEY4JmFtcDtsb2NhdGlvbj1odHRwcyUzQSUyRiUyRnd3dy5mYWNlYm9vay5jb20lMkZkaWFsb2clMkZzaGFyZSUzRl9lbmNvZGluZyUzRFVURjglMjZkaXNwbGF5JTNEcG9wdXAlMjZocmVmJTNEaHR0cHMlMjUzQSUyNTJGJTI1MkZ3d3cuYW1hem9uLmNvbSUyNTJGZHAlMjUyRkIwMUdLUUkzOTIlMjUyRnJlZiUyNTNEY21fc3dfcl9mYV9kcF9VX21Jc0tEYjQ1M0pWRlAlMjZyZWRpcmVjdF91cmklM0RodHRwcyUyNTNBJTI1MkYlMjUyRnd3dy5hbWF6b24uY29tJTI1MkZncCUyNTJGcGRwJTI1MkZ0YWYlMjUyRmZiX3Bvc3RfcmVkaXJlY3QuaHRtbCUyNTJGcmVmJTI1M0RjbV9zd19zX2ZhX2RwX1VfbUlzS0RiNDUzSlZGUCUyNmFwcF9pZCUzRDE2NDczNDM4MTI2MiUyNmhhc2h0YWclM0QlMjUyM0FtYXpvbiZhbXA7dG9rZW49NzhFMEE2NjU3Nzg3ODEyQkE2MjAzQ0U1MjEyODQ3MDIzNDcyMTE2QVwiPlx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXNoYXJlLWZhY2Vib29rXCIgcm9sZT1cImltZ1wiIGFyaWEtbGFiZWw9XCJGYWNlYm9va1wiPlx1MDAzQy9pPlx1MDAzQy9hPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxldHRlci1zcGFjZVwiPlx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDYSBpZD1cInR3aXR0ZXJcIiBkYXRhLWhlaWdodD1cIjQwMFwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzd2Ytc29jaWFsLXNpdGVcIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lclwiIHRpdGxlPVwiU2hhcmUgb24gVHdpdHRlclwiIGhyZWY9XCIvZ3AvcmVkaXJlY3QuaHRtbC9yZWY9Y21fc3dfY2xfdHdfZHBfVV9tSXNLRGI0NTNKVkZQP19lbmNvZGluZz1VVEY4JmFtcDtsb2NhdGlvbj1odHRwcyUzQSUyRiUyRnR3aXR0ZXIuY29tJTJGaW50ZW50JTJGdHdlZXQlM0ZvcmlnaW5hbF9yZWZlcmVyJTNEaHR0cHMlMjUyNTNBJTI1MjUyRiUyNTI1MkZ3d3cuYW1hem9uLmNvbSUyNTI1MkZncCUyNTI1MkZwcm9kdWN0JTI1MjUyRkIwMUdLUUkzOTIlMjUyNTJGcmVmJTI1MjUzRGNtX3N3X3JfdHdfZHBfVV94X21Jc0tEYjQ1M0pWRlAlMjZ0ZXh0JTNES2Vtc3RvbmUlMjUyMEVsZWdhbnQlMjUyMFJvc2UlMjUyMEdvbGQlMjUyRlNpbHZlciUyNTIwMiUyNTIwVG9uZSUyNTIwTXVsdGlsYXllciUyNTIwRGFuZ2xlJTI1MjBFYXJyaW5ncyUyNTIwQWNjZXNzb3J5Li4uJTI2cmVsYXRlZCUzRGFtYXpvbmRlYWxzJTI1MkNhbWF6b25tcDMlMjZ1cmwlM0RodHRwcyUyNTNBJTI1MkYlMjUyRnd3dy5hbWF6b24uY29tJTI1MkZkcCUyNTJGQjAxR0tRSTM5MiUyNTJGcmVmJTI1M0RjbV9zd19yX3R3X2RwX1VfeF9tSXNLRGI0NTNKVkZQJTI2dmlhJTNEYW1hem9uJmFtcDt0b2tlbj1FNzFBQTY2NEQ3MjY1RUYxMUREOTBDQ0VGOUFFMTkzMjA1NEU1NjJBXCI+XHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tc2hhcmUtdHdpdHRlclwiIHJvbGU9XCJpbWdcIiBhcmlhLWxhYmVsPVwiVHdpdHRlclwiPlx1MDAzQy9pPlx1MDAzQy9hPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxldHRlci1zcGFjZVwiPlx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDYSBpZD1cInBpbnRlcmVzdFwiIGRhdGEtaGVpZ2h0PVwiNTcwXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHN3Zi1zb2NpYWwtc2l0ZVwiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCIgdGl0bGU9XCJQaW4gaXQgb24gUGludGVyZXN0XCIgaHJlZj1cIi9ncC9yZWRpcmVjdC5odG1sL3JlZj1jbV9zd19jbF9waV9kcF9VX21Jc0tEYjQ1M0pWRlA/X2VuY29kaW5nPVVURjgmYW1wO2xvY2F0aW9uPWh0dHBzJTNBJTJGJTJGcGludGVyZXN0LmNvbSUyRnBpbiUyRmNyZWF0ZSUyRmJ1dHRvbiUzRnVybCUzRGh0dHBzJTI1M0ElMjUyRiUyNTJGd3d3LmFtYXpvbi5jb20lMjUyRmRwJTI1MkZCMDFHS1FJMzkyJTI1MkZyZWYlMjUzRGNtX3N3X3JfcGlfZHBfVV94X21Jc0tEYjQ1M0pWRlAlMjZ0aXRsZSUzREtlbXN0b25lJTI1MjBFbGVnYW50JTI1MjBSb3NlJTI1MjBHb2xkJTI1MkZTaWx2ZXIlMjUyMDIlMjUyMFRvbmUlMjUyME11bHRpbGF5ZXIlMjUyMERhbmdsLi4uJTI2ZGVzY3JpcHRpb24lM0RLZW1zdG9uZSUyNTIwRWxlZ2FudCUyNTIwUm9zZSUyNTIwR29sZCUyNTJGU2lsdmVyJTI1MjAyJTI1MjBUb25lJTI1MjBNdWx0aWxheWVyJTI1MjBEYW5nbC4uLiUyNTIwaHR0cHMlMjUzQSUyNTJGJTI1MkZ3d3cuYW1hem9uLmNvbSUyNTJGZHAlMjUyRkIwMUdLUUkzOTIlMjUyRnJlZiUyNTNEY21fc3dfcl9waV9kcF9VX3hfbUlzS0RiNDUzSlZGUCUyNm1lZGlhJTNEaHR0cHMlMjUzQSUyNTJGJTI1MkZpbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tJTI1MkZpbWFnZXMlMjUyRkklMjUyRjQxSDh6NFhjMFhMLmpwZyZhbXA7dG9rZW49Q0MzNEQ1NkVFNTUyMDlBQkM2MkNCNzhERDQ3NkZFMzMyRUM4RkM1N1wiPlx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXNoYXJlLXBpbnRlcmVzdFwiIHJvbGU9XCJpbWdcIiBhcmlhLWxhYmVsPVwiUGludGVyZXN0XCI+XHUwMDNDL2k+XHUwMDNDL2E+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGV0dGVyLXNwYWNlXCI+XHUwMDNDL3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcblxuICAgICAgICAgICAgXG5cbiAgICAgICAgXHUwMDNDL2Rpdj5cblxuICAgICAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuICAgICAgICAgICAgUC53aGVuKFwiQVwiLFwialF1ZXJ5XCIpLmV4ZWN1dGUoZnVuY3Rpb24oQSwkKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRhZiA9ICQoXCIjdGVsbC1hLWZyaWVuZFwiKTtcbiAgICAgICAgICAgICAgICB0YWYuY2hpbGRyZW4oXCJbZGF0YS1oZWlnaHRdXCIpLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgaGVpZ2h0ID0gJCh0aGlzKS5hdHRyKFwiZGF0YS1oZWlnaHRcIik7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5vcGVuKHRoaXMuaHJlZiwgXCJfYmxhbmtcIiwgXCJsb2NhdGlvbj15ZXMsd2lkdGg9NzAwLGhlaWdodD1cIiArIGhlaWdodCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBBLm9uLmxvYWQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgaGFzaFZhbHVlID0gd2luZG93LmxvY2F0aW9uLmhhc2g7XG4gICAgICAgICAgICAgICAgICAgIHZhciBoYXNoSW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzd2ZIYXNoVmFsdWUgPSBcIl9zd2Z0ZXh0X1N3ZlwiO1xuICAgICAgICAgICAgICAgICAgICBoYXNoSW5kZXggPSBoYXNoVmFsdWUuaW5kZXhPZihzd2ZIYXNoVmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaGFzaFZhbHVlICE9IFwiXCIgJiYgIGhhc2hJbmRleCA+IC0xICYmIHR5cGVvZih3aW5kb3cuc3dmUG9wVXBTaG93bikgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiI3N3ZlRleHRcIikuY2xpY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zd2ZQb3BVcFNob3duID0gMTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIFx1MDAzQy9zY3JpcHQ+XG5cbiAgICAgICAgXHUwMDNDc3R5bGUgdHlwZT1cInRleHQvY3NzXCI+XG4gICAgICAgICAgICAjdGVsbC1hLWZyaWVuZCAuc3dmLXNvY2lhbC1zaXRlIHtcbiAgICAgICAgICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICBcdTAwM0Mvc3R5bGU+XG5cbiAgICAgICAgXG4gICAgXG4gICAgXG5cblxuXHUwMDNDL2Rpdj5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJjcm9zc0JvcmRlcldpZGdldF9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiY3Jvc3NCb3JkZXJXaWRnZXRcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXG5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImFsbU11bHRpT2ZmZXJFZ3Jlc3NfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cImFsbU11bHRpT2ZmZXJFZ3Jlc3NcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInJlZGlyZWN0aW9uX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJyZWRpcmVjdGlvblwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJtb3JlQnV5aW5nQ2hvaWNlc19mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwibW9yZUJ1eWluZ0Nob2ljZXNcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1tZWRpdW0gYS1zcGFjaW5nLXRvcC1iYXNlXCI+XG4gICAgICAgIFx1MDAzQ2RpdiBpZD1cIm1iYy1hY3Rpb24tcGFuZWwtd3JhcHBlclwiIHN0eWxlPVwiXCI+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cIm1iY1wiIGRhdGEtYXNpbj1cIkIwMUdLUUkzOTJcIiBkYXRhLWJyYW5kPVwiS2Vtc3RvbmVcIiBkYXRhLXByb2R1Y3QtZ3JvdXA9XCJqZXdlbHJ5X2Rpc3BsYXlfb25fd2Vic2l0ZVwiIGRhdGEtdGltZW91dD1cIlNvcnJ5IHdlIGVuY291bnRlcmVkIGEgcHJvYmxlbS5cIiBjbGFzcz1cImEtYm94LWdyb3VwXCI+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3N0eWxlIHR5cGU9XCJ0ZXh0L2Nzc1wiPiAub2xwLXByaW1lLWJhZGdlIHt2ZXJ0aWNhbC1hbGlnbjogdGV4dC10b3AgIWltcG9ydGFudH0gXHUwMDNDL3N0eWxlPlxuICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1ib3ggYS10ZXh0LWNlbnRlclwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtYm94LWlubmVyIGEtcGFkZGluZy1zbWFsbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2g1PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBpZD1cIm1iYy10aXRsZVwiPk90aGVyIFNlbGxlcnMgb24gQW1hem9uXHUwMDNDL3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9oNT5cbiAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgTUJDRmVhdHVyZVNjb3BlID0gXCJtYmNVSVwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdWV0KCdiYicsIE1CQ0ZlYXR1cmVTY29wZSwge3diOiAxfSk7ICAvL3RpbWVzdGFtcCBib2R5LWJlZ2luXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL3NjcmlwdD5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdWV0KCdiZScsIE1CQ0ZlYXR1cmVTY29wZSwge3diOiAxfSk7ICAvL3RpbWVzdGFtcCBib2R5LWVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHVleCA9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVleCgnbGQnLCBNQkNGZWF0dXJlU2NvcGUsIHt3YjogMX0pOyAgLy9zZW5kIG1ldHJpY3NcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvc2NyaXB0PlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1ib3hcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWJveC1pbm5lciBhLXBhZGRpbmctYmFzZVwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGlkPVwibWJjLXVwZC1vbHAtbGlua1wiIGNsYXNzPVwiYS1zaXplLXNtYWxsXCI+XHUwMDNDYSBocmVmPVwiL2dwL29mZmVyLWxpc3RpbmcvQjAxR0tRSTM5Mi9yZWY9ZHBfb2xwX25ld19tYmM/aWU9VVRGOCZhbXA7Y29uZGl0aW9uPW5ld1wiPlx1MDAzQ2I+TmV3XHUwMDNDL2I+ICgxKSBmcm9tICQxMi41Mlx1MDAzQy9hPlx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuPlx1MDAzQ2EgaHJlZj1cIi9ncC9oZWxwL2N1c3RvbWVyL2Rpc3BsYXkuaHRtbC9yZWY9bWtfc3NzX2RwXzE/aWU9VVRGOCZhbXA7cG9wLXVwPTEmYW1wO25vZGVJZD01Mjc2OTJcIiB0YXJnZXQ9XCJBbWF6b25IZWxwXCIgb25jbGljaz1cInJldHVybiBhbXpfanNfUG9wV2luKHRoaXMuaHJlZiwnQW1hem9uSGVscCcsJ3dpZHRoPTU1MCxoZWlnaHQ9NTUwLHJlc2l6YWJsZT0xLHNjcm9sbGJhcnM9MSx0b29sYmFyPTAsc3RhdHVzPTAnKTtcIj5EZXRhaWxzXHUwMDNDL2E+XHUwMDNDL3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICBcdTAwM0MvZGl2Plx1MDAzQy9kaXY+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICAgIFxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG4gICAgICBcdTAwM0MvZGl2PlxuICAgIFxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuUC53aGVuKCdBJywnalF1ZXJ5JykuZXhlY3V0ZShmdW5jdGlvbihBLCQpICB7XG4gICAgZnVuY3Rpb24gdG9nZ2xlRXhwYW5kZXJIZWFkZXJUZXh0V2VpZ2h0KGRhdGEpIHtcbiAgICAgICAkKFwiW2RhdGEtYS1leHBhbmRlci1uYW1lPVwiK2RhdGEuZXhwYW5kZXIuZXhwYW5kZXJOYW1lK1wiXSAuYS1tYmMtZXhwYW5kZXItaGVhZGluZy10ZXh0XCIpLnRvZ2dsZUNsYXNzKFwiYS1tYmMtZXhwYW5kZXItaGVhZGluZy10ZXh0LWJvbGRcIik7XG4gICAgfVxuXG4gICAgdmFyIG9mZmVyQ291bnQgPSAwO1xuICAgIGZvcih2YXIgaT0xOyBpIFx1MDAzQz0gb2ZmZXJDb3VudDsgaSsrKXtcbiAgICAgICAgJChcIi5tYmNMaVwiK2kpLmJpbmQoXCJjbGlja1wiLCBmdW5jdGlvbigpe1xuICAgICAgICAgICAgdGhpcy5jbGljaygpO1xuICAgICAgICB9KTtcbiAgICAgICAgJChcIi5tYmNMaVwiK2krXCIgLmEtYnV0dG9uIGFcIikuYmluZChcImNsaWNrXCIsIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICB3aW5kb3cub3Blbih0aGlzLmhyZWYsXCJfc2VsZlwiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIEEub24oJ2E6ZXhwYW5kZXI6bWJjX2V4cGFuZGVyXycraSsnOnRvZ2dsZTpleHBhbmQnLCB0b2dnbGVFeHBhbmRlckhlYWRlclRleHRXZWlnaHQpO1xuICAgICAgICBBLm9uKCdhOmV4cGFuZGVyOm1iY19leHBhbmRlcl8nK2krJzp0b2dnbGU6Y29sbGFwc2UnLCB0b2dnbGVFeHBhbmRlckhlYWRlclRleHRXZWlnaHQpO1xuICAgIH1cblxuICAgIGlmICgkKFwiI21iYy1wYW5lbFwiKS5sZW5ndGggPT0gMCkge1xuICAgICAgICAkKFwiI21iYy1hY3Rpb24tcGFuZWwtd3JhcHBlclwiKS5zaG93KCk7XG4gICAgfVxufSk7XG5cdTAwM0Mvc2NyaXB0PlxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInNreUNpdHlTb2Z0TWVyZ2VfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cInNreUNpdHlTb2Z0TWVyZ2VcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcdTAwM0NkaXYgaWQ9XCJza3ljaXR5LXNvZnQtbWVyZ2VcIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbWVkaXVtIGEtc3BhY2luZy10b3AtYmFzZSBjZWx3aWRnZXRcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWJveC1ncm91cFwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtYm94IGEtZmlyc3RcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWJveC1pbm5lciBhLXBhZGRpbmctc21hbGxcIj5cdTAwM0NoNSBjbGFzcz1cImEtdGV4dC1jZW50ZXJcIj5CYXJnYWluIEZpbmRzXHUwMDNDL2g1Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLWJveCBza3ljaXR5LWFsdy1pdGVtLWNvbnRhaW5lclwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtYm94LWlubmVyIGEtcGFkZGluZy1zbWFsbFwiPlxuXG5cblxuXG5cblx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtZ3JpZC12ZXJ0aWNhbC1hbGlnbiBhLWdyaWQtY2VudGVyXCI+XG5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLWNvbHVtbiBhLXNwYW41XCI+XG4gICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi84OUxPT0stRWFyaW5nLUpld2VscnktVGVhcmRyb3AtU3RhaW5sZXNzLUVhcnJpbmdzL2RwL0IwN0JUMzVZSzMvcmVmPWFscF9kcHdpZGdldF9hX3dfP3RoPTEmYW1wO3BzYz0xJmFtcDtzbWlkPUE2TURKVlpIQjFERjRcIj5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cInNreWNpdHktaW1hZ2UtaHRtbCBza3ljaXR5LWltYWdlLWxvYWRlZFwiIGRhdGEtaHRtbD1cIlx1MDAzQ2ltZyBhbHQ9JnF1b3Q7JnF1b3Q7IHNyYz0mcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MWJ0SzF0TDMtTC5fQUNfU1I3NSwxMDBfLmpwZyZxdW90OyBjbGFzcz0mcXVvdDtza3ljaXR5LWltYWdlJnF1b3Q7IGhlaWdodD0mcXVvdDsxMDBweCZxdW90OyB3aWR0aD0mcXVvdDs3NXB4JnF1b3Q7IGRhdGEtYS1oaXJlcz0mcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MWJ0SzF0TDMtTC5fQUNfU1IxNTAsMjAwXy5qcGcmcXVvdDs+XCI+XHUwMDNDL3NwYW4+XHUwMDNDaW1nIGFsdD1cIlwiIHNyYz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxYnRLMXRMMy1MLl9BQ19TUjc1LDEwMF8uanBnXCIgY2xhc3M9XCJza3ljaXR5LWltYWdlXCIgaGVpZ2h0PVwiMTAwcHhcIiB3aWR0aD1cIjc1cHhcIiBkYXRhLWEtaGlyZXM9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MWJ0SzF0TDMtTC5fQUNfU1IxNTAsMjAwXy5qcGdcIj5cbiAgICAgICAgXHUwMDNDL2E+XG4gICAgXHUwMDNDL2Rpdj5cblxuICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtY29sdW1uIGEtc3BhbjcgYS1zcGFuLWxhc3RcIj5cbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj5cbiAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi84OUxPT0stRWFyaW5nLUpld2VscnktVGVhcmRyb3AtU3RhaW5sZXNzLUVhcnJpbmdzL2RwL0IwN0JUMzVZSzMvcmVmPWFscF9kcHdpZGdldF9hX3dfP3RoPTEmYW1wO3BzYz0xJmFtcDtzbWlkPUE2TURKVlpIQjFERjRcIj44OUxPT0stRWFyaW5nIEpld2VscnkgRmFzaGlvbiBMYeKAplx1MDAzQy9hPlxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtY29sb3Itc2Vjb25kYXJ5XCI+ODlMT09LLUVhcmluZ1x1MDAzQy9zcGFuPlxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlLXBsdXMgYS1jb2xvci1wcmljZVwiPiQxLjk3XHUwMDNDL3NwYW4+XG4gICAgICAgICAgICBcbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj5cbiAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtc21hbGwgYS1jb2xvci1zZWNvbmRhcnlcIj5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj5cbiAgICAgICAgICAgICAgICBcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyIGEtc3Rhci00XCI+XHUwMDNDL2k+XG4gICAgICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiBocmVmPVwiL3Byb2R1Y3QtcmV2aWV3cy9CMDdCVDM1WUszL3JlZj1hbHBfZHB3aWRnZXRfcl93Xz9pZT1VVEY4JmFtcDtyZXZpZXdlclR5cGU9YWxsX3Jldmlld3NcIj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1zbWFsbFwiPjU3XHUwMDNDL3NwYW4+XG4gICAgICAgICAgICAgICAgXHUwMDNDL2E+XG4gICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICBcbiAgICBcdTAwM0MvZGl2PlxuXG5cdTAwM0MvZGl2PlxuXHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtYm94IGEtbGFzdCBza3ljaXR5LWFsdy1pdGVtLWNvbnRhaW5lclwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtYm94LWlubmVyIGEtcGFkZGluZy1zbWFsbFwiPlxuXG5cblxuXG5cblx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtZ3JpZC12ZXJ0aWNhbC1hbGlnbiBhLWdyaWQtY2VudGVyXCI+XG5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLWNvbHVtbiBhLXNwYW41XCI+XG4gICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9GYW50aW55LUJyZWF0aGFibGUtU25lYWtlcnMtVTExOFNXWDAyNC1MSC1HcmVlbi9kcC9CMDdERkRGOUZGL3JlZj1hbHBfZHB3aWRnZXRfYV93Xz90aD0xJmFtcDtwc2M9MSZhbXA7c21pZD1BMlFBQkdDV1g0REJIQlwiPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwic2t5Y2l0eS1pbWFnZS1odG1sIHNreWNpdHktaW1hZ2UtbG9hZGVkXCIgZGF0YS1odG1sPVwiXHUwMDNDaW1nIGFsdD0mcXVvdDsmcXVvdDsgc3JjPSZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxOVFVSjBKenBMLl9BQ19TUjc1LDEwMF8uanBnJnF1b3Q7IGNsYXNzPSZxdW90O3NreWNpdHktaW1hZ2UmcXVvdDsgaGVpZ2h0PSZxdW90OzEwMHB4JnF1b3Q7IHdpZHRoPSZxdW90Ozc1cHgmcXVvdDsgZGF0YS1hLWhpcmVzPSZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxOVFVSjBKenBMLl9BQ19TUjE1MCwyMDBfLmpwZyZxdW90Oz5cIj5cdTAwM0Mvc3Bhbj5cdTAwM0NpbWcgYWx0PVwiXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDE5UVVKMEp6cEwuX0FDX1NSNzUsMTAwXy5qcGdcIiBjbGFzcz1cInNreWNpdHktaW1hZ2VcIiBoZWlnaHQ9XCIxMDBweFwiIHdpZHRoPVwiNzVweFwiIGRhdGEtYS1oaXJlcz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxOVFVSjBKenBMLl9BQ19TUjE1MCwyMDBfLmpwZ1wiPlxuICAgICAgICBcdTAwM0MvYT5cbiAgICBcdTAwM0MvZGl2PlxuXG4gICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuNyBhLXNwYW4tbGFzdFwiPlxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlxuICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiBocmVmPVwiL0ZhbnRpbnktQnJlYXRoYWJsZS1TbmVha2Vycy1VMTE4U1dYMDI0LUxILUdyZWVuL2RwL0IwN0RGREY5RkYvcmVmPWFscF9kcHdpZGdldF9hX3dfP3RoPTEmYW1wO3BzYz0xJmFtcDtzbWlkPUEyUUFCR0NXWDREQkhCXCI+Q0lPUiBLaWRzIFNob2VzIFNsaXAtb24gQnJlYXRoYWLigKZcdTAwM0MvYT5cbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj5cbiAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNvbG9yLXNlY29uZGFyeVwiPkNJT1JcdTAwM0Mvc3Bhbj5cbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj5cbiAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtYmFzZS1wbHVzIGEtY29sb3ItcHJpY2VcIj4kNS45OVx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcHJpbWUgYS1pY29uLXNtYWxsXCIgcm9sZT1cImltZ1wiPlx1MDAzQy9pPlxuICAgICAgICAgICAgXG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XG4gICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLXNtYWxsIGEtY29sb3Itc2Vjb25kYXJ5XCI+KyBGcmVlIFNoaXBwaW5nXHUwMDNDL3NwYW4+XG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3RhciBhLXN0YXItNFwiPlx1MDAzQy9pPlxuICAgICAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9wcm9kdWN0LXJldmlld3MvQjA3REZERjlGRi9yZWY9YWxwX2Rwd2lkZ2V0X3Jfd18/aWU9VVRGOCZhbXA7cmV2aWV3ZXJUeXBlPWFsbF9yZXZpZXdzXCI+XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtc21hbGxcIj4zMVx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgICAgIFx1MDAzQy9hPlxuICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXG4gICAgXHUwMDNDL2Rpdj5cblxuXHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInByb2R1Y3QtYWRzLWZlZWRiYWNrX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJwcm9kdWN0QWRzRmVlZGJhY2tcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwiYW1zRGV0YWlsUmlnaHRfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cImFtc0RldGFpbFJpZ2h0XCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFx1MDAzQ2RpdiBpZD1cImFtc0RldGFpbFJpZ2h0VjJcIiBkYXRhLWRldGFpbHBhZ2Vhc2luPVwiQjAxR0tRSTM5MlwiPlxuICAgICAgICBcdTAwM0NzY3JpcHQ+aWYgKHR5cGVvZiB1ZXQgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIHVlcyA9PT0gJ2Z1bmN0aW9uJykge3ZhciBzY29wZSA9ICdEZXRhaWxfYW1zLWRldGFpbC1yaWdodC12Ml9kZXNrdG9wJzt2YXIgcGxhY2VtZW50SWQgPSAnNmY5ZDJjNTgtNWJhYS00YTk5LTk5ZmMtNjYzMjQ1Mjg2ZjdmJzt1ZXMoJ3diJywgJ2FkcGxhY2VtZW50czonICsgc2NvcGUucmVwbGFjZSgvXFxfL2csICc6JyksIHt3YjoxfSk7IHVldCgnYmInLCAnYWRwbGFjZW1lbnRzOicgKyBzY29wZS5yZXBsYWNlKC9cXF8vZywgJzonKSwge3diOjF9KTsgaWYgKHBsYWNlbWVudElkKSB7dWVzKCd3YicsICdhZHBsYWNlbWVudHM6JyArIHBsYWNlbWVudElkLCB7d2I6MX0pO3VldCgnYmInLCAnYWRwbGFjZW1lbnRzOicgKyBwbGFjZW1lbnRJZCwge3diOjF9KTt9fVx1MDAzQy9zY3JpcHQ+XHUwMDNDZGl2IGlkPVwiYXBlX0RldGFpbF9hbXMtZGV0YWlsLXJpZ2h0LXYyX2Rlc2t0b3BfcGxhY2VtZW50XCIgY2xhc3M9XCJjb3BpbG90LXNlY3VyZS1kaXNwbGF5IGNlbHdpZGdldCAgdGV4dC94LWRhY3gtc2FmZWZyYW1lXCIgY2VsX3dpZGdldF9pZD1cImFkcGxhY2VtZW50czpEZXRhaWw6YW1zLWRldGFpbC1yaWdodC12MjpkZXNrdG9wXCIgZGF0YS1jYW1wYWlnbj1cIjEzODI5XCIgc3R5bGU9XCJkaXNwbGF5OiBub25lOyBtYXJnaW46IDEwcHggYXV0byBhdXRvOyBsaW5lLWhlaWdodDogMDtcIiBkYXRhLWFkLWRldGFpbHM9XCJ7JnF1b3Q7c2xvdCZxdW90OyA6JnF1b3Q7RGV0YWlsX2Ftcy1kZXRhaWwtcmlnaHQtdjJfZGVza3RvcCZxdW90OywmcXVvdDtzbG90TmFtZSZxdW90OyA6JnF1b3Q7YW1zLWRldGFpbC1yaWdodC12MiZxdW90OywmcXVvdDtzcmMmcXVvdDsgOiAmcXVvdDtodHRwczovL2FheC11cy1lYXN0LmFtYXpvbi1hZHN5c3RlbS5jb20vZS94c3AvZ2V0QWQ/c3JjPTUwMCZhbXA7c2xvdD1hbXMtZGV0YWlsLXJpZ2h0LXYyJmFtcDtyaWQ9MDEwMTU0N2MwZTZhM2ViMTlhNjY2NTU5YjhmYjRkOGYwZGZiZjcxZDBhY2JiMDhlM2I5YzEzNWQxNTRjNTgyMmFlZTgmcXVvdDssJnF1b3Q7YWRTZXJ2ZXImcXVvdDsgOiZxdW90O2NzJnF1b3Q7LCZxdW90O2NhbXBhaWduSWQmcXVvdDsgOiAgJnF1b3Q7MTM4MjkmcXVvdDssJnF1b3Q7YXJpZCZxdW90OyA6JnF1b3Q7MWU0OWJkMWZiYjI2NDQxN2EwNmZjMmU2MmNjMDM1NjImcXVvdDssJnF1b3Q7cGxhY2VtZW50SWQmcXVvdDs6ICZxdW90OzZmOWQyYzU4LTViYWEtNGE5OS05OWZjLTY2MzI0NTI4NmY3ZiZxdW90OywmcXVvdDtzaXplJnF1b3Q7IDp7JnF1b3Q7d2lkdGgmcXVvdDs6ICZxdW90OzEwMCUmcXVvdDssJnF1b3Q7aGVpZ2h0JnF1b3Q7IDogJnF1b3Q7MjUwcHgmcXVvdDt9LCZxdW90O2FsbG93ZWRTaXplcyZxdW90OyA6W10sJnF1b3Q7YWxsb3dlZERvbWFpbnMmcXVvdDsgOiAgWyZxdW90O2ctZWN4LmltYWdlcy1hbWF6b24uY29tJnF1b3Q7XSwmcXVvdDthYW5QYXJhbXMmcXVvdDsgOiAgICZxdW90O3NpdGUlM0RhbWF6b24udXMlM0JwdCUzRERldGFpbCUzQnNsb3QlM0RhbXMtZGV0YWlsLXJpZ2h0LXYyJTNCcGlkJTNEQjAxR0tRSTM5MiUzQmFyaWQlM0QxZTQ5YmQxZmJiMjY0NDE3YTA2ZmMyZTYyY2MwMzU2MiZxdW90OywmcXVvdDtsb2FkQWZ0ZXImcXVvdDsgOiAgICZxdW90O2ltbWVkaWF0ZSZxdW90OywmcXVvdDtleHRyYURlbGF5JnF1b3Q7IDogIDAsJnF1b3Q7aWZyYW1lRXh0cmFTdHlsZSZxdW90OzogJnF1b3Q7JnF1b3Q7LCZxdW90O2lmcmFtZUNsYXNzJnF1b3Q7OiAgJnF1b3Q7JnF1b3Q7LCZxdW90O2FkUGl4ZWxzJnF1b3Q7OiBbXSwmcXVvdDthZFBpeGVsRGVsYXkmcXVvdDs6ICZxdW90OzAmcXVvdDssJnF1b3Q7YWF4SW5zdHJQaXhlbFVybCZxdW90OzogJnF1b3Q7JnF1b3Q7LCZxdW90O3NlcnZlclNpZGVGZXRjaEFkJnF1b3Q7OiAmcXVvdDtmYWxzZSZxdW90OywmcXVvdDtlbmFibGVBZEJsb2NrZXJEZXRlY3RvciZxdW90OzogZmFsc2UsJnF1b3Q7ZGlzYWJsZVJlc2l6ZUZ1bmMmcXVvdDs6IHRydWUsJnF1b3Q7ZmFsbGJhY2tTdGF0aWNBZEltZ1VybCZxdW90OzogJnF1b3Q7JnF1b3Q7LCZxdW90O2ZhbGxiYWNrU3RhdGljQWRDbGlja1VybCZxdW90OzogJnF1b3Q7JnF1b3Q7LCZxdW90O2ZhbGxiYWNrU3RhdGljQWRFeHRyYVN0eWxlJnF1b3Q7OiAmcXVvdDsmcXVvdDssJnF1b3Q7YWRGZWVkYmFja0luZm8mcXVvdDs6IHsmcXVvdDtlbmRQb2ludCZxdW90OzogJnF1b3Q7L2dwL2FxLWZlZWRiYWNrL2xhenlMb2FkL2hhbmRsZXIvYWYtbGluay1oYW5kbGVyLmh0bWwmcXVvdDssJnF1b3Q7Ym9vbEZlZWRiYWNrJnF1b3Q7OiB0cnVlLCZxdW90O3NsdWdUZXh0JnF1b3Q7OiAmcXVvdDtBZHZlcnRpc2VtZW50JnF1b3Q7fSwmcXVvdDthZFBsYWNlbWVudE1ldGFEYXRhJnF1b3Q7OiB7JnF1b3Q7cGFnZVVybCZxdW90OzogJnF1b3Q7YUhSMGNITTZMeTkzZDNjdVlXMWhlbTl1TG1OdmJTOW5jQzl3Y205a2RXTjBMMEl3TVVkTFVVa3pPVEk9JnF1b3Q7LCZxdW90O2FkRWxlbWVudElkJnF1b3Q7OiAmcXVvdDthcGVfRGV0YWlsX2Ftcy1kZXRhaWwtcmlnaHQtdjJfZGVza3RvcF9wbGFjZW1lbnQmcXVvdDssJnF1b3Q7cGFnZVR5cGUmcXVvdDs6ICZxdW90O0RldGFpbCZxdW90OywmcXVvdDtzbG90TmFtZSZxdW90OzogJnF1b3Q7YW1zLWRldGFpbC1yaWdodC12MiZxdW90O30sJnF1b3Q7YWRDcmVhdGl2ZU1ldGFEYXRhJnF1b3Q7OiB7JnF1b3Q7YWROZXR3b3JrJnF1b3Q7OiAmcXVvdDtjcyZxdW90O30sJnF1b3Q7YWR2ZXJ0aXNlbWVudFN0eWxlJnF1b3Q7OiB7JnF1b3Q7cG9zaXRpb24mcXVvdDs6ICZxdW90O2Fic29sdXRlJnF1b3Q7LCZxdW90O3RvcCZxdW90OzogJnF1b3Q7MnB4JnF1b3Q7LCZxdW90O3JpZ2h0JnF1b3Q7OiAmcXVvdDswcHgmcXVvdDssJnF1b3Q7ZGlzcGxheSZxdW90OzogJnF1b3Q7aW5saW5lLWJsb2NrJnF1b3Q7LCZxdW90O2ZvbnQmcXVvdDs6ICZxdW90O25vcm1hbCAxMXB4IEFyaWFsJnF1b3Q7LCZxdW90O2NvbG9yJnF1b3Q7OiAmcXVvdDtncmV5JnF1b3Q7fSwmcXVvdDtmZWVkYmFja0RpdlN0eWxlJnF1b3Q7OiB7JnF1b3Q7cG9zaXRpb24mcXVvdDs6ICZxdW90O3JlbGF0aXZlJnF1b3Q7LCZxdW90O2hlaWdodCZxdW90OzogJnF1b3Q7MTRweCZxdW90OywmcXVvdDt0b3AmcXVvdDs6ICZxdW90OzJweCZxdW90O30sJnF1b3Q7dmlld2FiaWxpdHlTdGFuZGFyZHMmcXVvdDs6IFt7JnF1b3Q7cCZxdW90OzogMCwgJnF1b3Q7dCZxdW90OzogMCwgJnF1b3Q7ZGVmJnF1b3Q7OiAmcXVvdDthbXpuJnF1b3Q7fSwgeyZxdW90O3AmcXVvdDs6IDUwLCAmcXVvdDt0JnF1b3Q7OiAxLCAmcXVvdDtkZWYmcXVvdDs6ICZxdW90O2lhYiZxdW90O30sIHsmcXVvdDtwJnF1b3Q7OiAxMDAsICZxdW90O3QmcXVvdDs6IDEsICZxdW90O2RlZiZxdW90OzogJnF1b3Q7Z3JvdXBtJnF1b3Q7fV0sJnF1b3Q7YWpheFdlYmxhYlRyaWdnZXJJZCZxdW90OzogJnF1b3Q7JnF1b3Q7LCZxdW90O2FicFN0YXR1cyZxdW90OzogJnF1b3Q7LTEmcXVvdDssJnF1b3Q7YWJwQWNjZXB0YWJsZSZxdW90OzogJnF1b3Q7dHJ1ZSZxdW90OywmcXVvdDtwcm9ncmFtSWRzVG9Db2xsYXBzZSZxdW90OzogW10sJnF1b3Q7REFzZlVybCZxdW90OzomcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvYXBlL3NmL2Rlc2t0b3AvREFzZi0xLjUwLjIyOGY5OGMuX1Y0NTE5NTA5MTBfLmpzJnF1b3Q7fVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGRhdGEtYXJpZD1cIjFlNDliZDFmYmIyNjQ0MTdhMDZmYzJlNjJjYzAzNTYyXCI+XHUwMDNDaWZyYW1lIG5hbWU9XCJ7JnF1b3Q7c2xvdCZxdW90OzomcXVvdDtEZXRhaWxfYW1zLWRldGFpbC1yaWdodC12Ml9kZXNrdG9wJnF1b3Q7LCZxdW90O3Nsb3ROYW1lJnF1b3Q7OiZxdW90O2Ftcy1kZXRhaWwtcmlnaHQtdjImcXVvdDssJnF1b3Q7c3JjJnF1b3Q7OiZxdW90O2h0dHBzOi8vYWF4LXVzLWVhc3QuYW1hem9uLWFkc3lzdGVtLmNvbS9lL3hzcC9nZXRBZD9zcmM9NTAwJmFtcDtzbG90PWFtcy1kZXRhaWwtcmlnaHQtdjImYW1wO3JpZD0wMTAxNTQ3YzBlNmEzZWIxOWE2NjY1NTliOGZiNGQ4ZjBkZmJmNzFkMGFjYmIwOGUzYjljMTM1ZDE1NGM1ODIyYWVlOCZxdW90OywmcXVvdDthZFNlcnZlciZxdW90OzomcXVvdDtjcyZxdW90OywmcXVvdDtjYW1wYWlnbklkJnF1b3Q7OiZxdW90OzEzODI5JnF1b3Q7LCZxdW90O2FyaWQmcXVvdDs6JnF1b3Q7MWU0OWJkMWZiYjI2NDQxN2EwNmZjMmU2MmNjMDM1NjImcXVvdDssJnF1b3Q7cGxhY2VtZW50SWQmcXVvdDs6JnF1b3Q7NmY5ZDJjNTgtNWJhYS00YTk5LTk5ZmMtNjYzMjQ1Mjg2ZjdmJnF1b3Q7LCZxdW90O3NpemUmcXVvdDs6eyZxdW90O3dpZHRoJnF1b3Q7OiZxdW90OzEwMCUmcXVvdDssJnF1b3Q7aGVpZ2h0JnF1b3Q7OiZxdW90OzI1MHB4JnF1b3Q7fSwmcXVvdDthbGxvd2VkU2l6ZXMmcXVvdDs6W3smcXVvdDt3aWR0aCZxdW90OzomcXVvdDsxMDAlJnF1b3Q7LCZxdW90O2hlaWdodCZxdW90OzomcXVvdDsyNTBweCZxdW90O31dLCZxdW90O2FsbG93ZWREb21haW5zJnF1b3Q7OlsmcXVvdDtnLWVjeC5pbWFnZXMtYW1hem9uLmNvbSZxdW90OywmcXVvdDtkM2wzbGtpbnozZjU2dC5jbG91ZGZyb250Lm5ldCZxdW90OywmcXVvdDtnLWVjeC5pbWFnZXMtYW1hem9uLmNvbSZxdW90OywmcXVvdDt6LWVjeC5pbWFnZXMtYW1hem9uLmNvbSZxdW90OywmcXVvdDtpbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tJnF1b3Q7LCZxdW90O2ctZWM0LmltYWdlcy1hbWF6b24uY29tJnF1b3Q7LCZxdW90O2ltYWdlcy1jbi5zc2wtaW1hZ2VzLWFtYXpvbi5jb20mcXVvdDtdLCZxdW90O2FhblBhcmFtcyZxdW90OzomcXVvdDtzaXRlJTNEYW1hem9uLnVzJTNCcHQlM0REZXRhaWwlM0JzbG90JTNEYW1zLWRldGFpbC1yaWdodC12MiUzQnBpZCUzREIwMUdLUUkzOTIlM0JhcmlkJTNEMWU0OWJkMWZiYjI2NDQxN2EwNmZjMmU2MmNjMDM1NjImcXVvdDssJnF1b3Q7bG9hZEFmdGVyJnF1b3Q7OiZxdW90O2ltbWVkaWF0ZSZxdW90OywmcXVvdDtleHRyYURlbGF5JnF1b3Q7OjAsJnF1b3Q7aWZyYW1lRXh0cmFTdHlsZSZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7aWZyYW1lQ2xhc3MmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O2FkUGl4ZWxzJnF1b3Q7OltdLCZxdW90O2FkUGl4ZWxEZWxheSZxdW90OzomcXVvdDswJnF1b3Q7LCZxdW90O2FheEluc3RyUGl4ZWxVcmwmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O3NlcnZlclNpZGVGZXRjaEFkJnF1b3Q7OiZxdW90O2ZhbHNlJnF1b3Q7LCZxdW90O2VuYWJsZUFkQmxvY2tlckRldGVjdG9yJnF1b3Q7OmZhbHNlLCZxdW90O2Rpc2FibGVSZXNpemVGdW5jJnF1b3Q7OnRydWUsJnF1b3Q7ZmFsbGJhY2tTdGF0aWNBZEltZ1VybCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7ZmFsbGJhY2tTdGF0aWNBZENsaWNrVXJsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDtmYWxsYmFja1N0YXRpY0FkRXh0cmFTdHlsZSZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7YWRGZWVkYmFja0luZm8mcXVvdDs6eyZxdW90O2VuZFBvaW50JnF1b3Q7OiZxdW90Oy9ncC9hcS1mZWVkYmFjay9sYXp5TG9hZC9oYW5kbGVyL2FmLWxpbmstaGFuZGxlci5odG1sJnF1b3Q7LCZxdW90O2Jvb2xGZWVkYmFjayZxdW90Ozp0cnVlLCZxdW90O3NsdWdUZXh0JnF1b3Q7OiZxdW90O0FkdmVydGlzZW1lbnQmcXVvdDt9LCZxdW90O2FkUGxhY2VtZW50TWV0YURhdGEmcXVvdDs6eyZxdW90O3BhZ2VVcmwmcXVvdDs6JnF1b3Q7YUhSMGNITTZMeTkzZDNjdVlXMWhlbTl1TG1OdmJTOW5jQzl3Y205a2RXTjBMMEl3TVVkTFVVa3pPVEk9JnF1b3Q7LCZxdW90O2FkRWxlbWVudElkJnF1b3Q7OiZxdW90O2FwZV9EZXRhaWxfYW1zLWRldGFpbC1yaWdodC12Ml9kZXNrdG9wX3BsYWNlbWVudCZxdW90OywmcXVvdDtwYWdlVHlwZSZxdW90OzomcXVvdDtEZXRhaWwmcXVvdDssJnF1b3Q7c2xvdE5hbWUmcXVvdDs6JnF1b3Q7YW1zLWRldGFpbC1yaWdodC12MiZxdW90O30sJnF1b3Q7YWRDcmVhdGl2ZU1ldGFEYXRhJnF1b3Q7OnsmcXVvdDthZE5ldHdvcmsmcXVvdDs6JnF1b3Q7Y3MmcXVvdDt9LCZxdW90O2FkdmVydGlzZW1lbnRTdHlsZSZxdW90Ozp7JnF1b3Q7cG9zaXRpb24mcXVvdDs6JnF1b3Q7YWJzb2x1dGUmcXVvdDssJnF1b3Q7dG9wJnF1b3Q7OiZxdW90OzJweCZxdW90OywmcXVvdDtyaWdodCZxdW90OzomcXVvdDswcHgmcXVvdDssJnF1b3Q7ZGlzcGxheSZxdW90OzomcXVvdDtpbmxpbmUtYmxvY2smcXVvdDssJnF1b3Q7Zm9udCZxdW90OzomcXVvdDtub3JtYWwgMTFweCBBcmlhbCZxdW90OywmcXVvdDtjb2xvciZxdW90OzomcXVvdDtncmV5JnF1b3Q7fSwmcXVvdDtmZWVkYmFja0RpdlN0eWxlJnF1b3Q7OnsmcXVvdDtwb3NpdGlvbiZxdW90OzomcXVvdDtyZWxhdGl2ZSZxdW90OywmcXVvdDtoZWlnaHQmcXVvdDs6JnF1b3Q7MTRweCZxdW90OywmcXVvdDt0b3AmcXVvdDs6JnF1b3Q7MnB4JnF1b3Q7fSwmcXVvdDt2aWV3YWJpbGl0eVN0YW5kYXJkcyZxdW90OzpbeyZxdW90O3AmcXVvdDs6MCwmcXVvdDt0JnF1b3Q7OjAsJnF1b3Q7ZGVmJnF1b3Q7OiZxdW90O2Ftem4mcXVvdDt9LHsmcXVvdDtwJnF1b3Q7OjUwLCZxdW90O3QmcXVvdDs6MSwmcXVvdDtkZWYmcXVvdDs6JnF1b3Q7aWFiJnF1b3Q7fSx7JnF1b3Q7cCZxdW90OzoxMDAsJnF1b3Q7dCZxdW90OzoxLCZxdW90O2RlZiZxdW90OzomcXVvdDtncm91cG0mcXVvdDt9XSwmcXVvdDthamF4V2VibGFiVHJpZ2dlcklkJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDthYnBTdGF0dXMmcXVvdDs6JnF1b3Q7LTEmcXVvdDssJnF1b3Q7YWJwQWNjZXB0YWJsZSZxdW90OzomcXVvdDt0cnVlJnF1b3Q7LCZxdW90O3Byb2dyYW1JZHNUb0NvbGxhcHNlJnF1b3Q7OltdLCZxdW90O0RBc2ZVcmwmcXVvdDs6JnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2FwZS9zZi9kZXNrdG9wL0RBc2YtMS41MC4yMjhmOThjLl9WNDUxOTUwOTEwXy5qcyZxdW90OywmcXVvdDtob3N0RG9tYWluJnF1b3Q7OiZxdW90O2h0dHBzOi8vd3d3LmFtYXpvbi5jb20mcXVvdDssJnF1b3Q7cXVlcnlQYXJhbXMmcXVvdDs6e30sJnF1b3Q7YVBhZ2VTdGFydCZxdW90OzoxNTY5Nzk0NDU4OTEzLCZxdW90O2FkU3RhcnRUaW1lJnF1b3Q7OjE1Njk3OTQ0NTkzNTAsJnF1b3Q7c2FmZUZyYW1lU3JjJnF1b3Q7OiZxdW90O2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9hcGUvc2Yvd2hpdGVsaXN0ZWQvZGVza3RvcC9zZi0xLjUwLjIyOGY5OGMuX1Y0NTE5NTA5MDhfLmh0bWwmcXVvdDt9XCIgaWQ9XCJhcGVfRGV0YWlsX2Ftcy1kZXRhaWwtcmlnaHQtdjJfZGVza3RvcF9pZnJhbWVcIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvYXBlL3NmL3doaXRlbGlzdGVkL2Rlc2t0b3Avc2YtMS41MC4yMjhmOThjLl9WNDUxOTUwOTA4Xy5odG1sXCIgaGVpZ2h0PVwiMjUwcHhcIiB3aWR0aD1cIjEwMCVcIiBjbGFzcz1cIlwiIGZyYW1lYm9yZGVyPVwiMFwiIG1hcmdpbmhlaWdodD1cIjBcIiBtYXJnaW53aWR0aD1cIjBcIiBzY3JvbGxpbmc9XCJub1wiIGFsbG93dHJhbnNwYXJlbmN5PVwidHJ1ZVwiIGFsbG93ZnVsbHNjcmVlbj1cIlwiIG1vemFsbG93ZnVsbHNjcmVlbj1cIlwiIHdlYmtpdGFsbG93ZnVsbHNjcmVlbj1cIlwiIGRhdGEtYXJpZD1cIjFlNDliZDFmYmIyNjQ0MTdhMDZmYzJlNjJjYzAzNTYyXCIgc2FuZGJveD1cImFsbG93LXNjcmlwdHMgYWxsb3ctdG9wLW5hdmlnYXRpb24gYWxsb3ctcG9wdXBzIGFsbG93LXBvcHVwcy10by1lc2NhcGUtc2FuZGJveCBhbGxvdy1zYW1lLW9yaWdpblwiIHN0eWxlPVwiXCI+XHUwMDNDL2lmcmFtZT5cdTAwM0MvZGl2Plx1MDAzQ3NjcmlwdD4oZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGQsZSl7aWYod2luZG93LmFkZEV2ZW50TGlzdGVuZXIpe3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKGQsZSxmYWxzZSk7fWVsc2V7aWYod2luZG93LmF0dGFjaEV2ZW50KXt3aW5kb3cuYXR0YWNoRXZlbnQoXCJvblwiK2QsZSk7fX19ZnVuY3Rpb24gYyhkLGUpe2lmKHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKXt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihkLGUsZmFsc2UpO31lbHNle2lmKHdpbmRvdy5kZXRhY2hFdmVudCl7d2luZG93LmRldGFjaEV2ZW50KFwib25cIitkLGUpO319fXZhciBiPWZ1bmN0aW9uKCl7KGZ1bmN0aW9uKCl7KGZ1bmN0aW9uKGosbSl7ai5zZkxvZ0Vycm9ycz1qLnNmTG9nRXJyb3JzfHxmYWxzZTt2YXIgbz1vfHxmdW5jdGlvbihzLHIpe3I9cnx8bmV3IEVycm9yKHMpO2lmKGoudWUmJnR5cGVvZiB1ZS5jb3VudD09XCJmdW5jdGlvblwiKXt1ZS5jb3VudChcImFkcGxhY2VtZW50czpzYWZlRnJhbWVFcnJvclwiLDEpO31pZighai5zZkxvZ0Vycm9ycyl7cmV0dXJuO31pZihqLnVlTG9nRXJyb3Ipe2oudWVMb2dFcnJvcihyLHtsb2dMZXZlbDpcIkVSUk9SXCIsYXR0cmlidXRpb246XCJBUEUtc2FmZWZyYW1lXCIsbWVzc2FnZTpzK1wiIFwifSk7fWVsc2V7aWYodHlwZW9mIGNvbnNvbGUhPT1cInVuZGVmaW5lZFwiJiZjb25zb2xlLmVycm9yKXtjb25zb2xlLmVycm9yKHMscik7fX19O2ouYWFuUGFyYW1zPWouYWFuUGFyYW1zfHx7fTtqLmFhblBhcmFtc1tcImFtcy1kZXRhaWwtcmlnaHQtdjJcIl09XCJzaXRlPWFtYXpvbi51cztwdD1EZXRhaWw7c2xvdD1hbXMtZGV0YWlsLXJpZ2h0LXYyO3BpZD1CMDFHS1FJMzkyO2FyaWQ9MWU0OWJkMWZiYjI2NDQxN2EwNmZjMmU2MmNjMDM1NjJcIjtqW1wiYW1zLWRldGFpbC1yaWdodC12MlwiXT17fTtqW1wiYW1zLWRldGFpbC1yaWdodC12MlwiXS5hZFN0YXJ0VGltZT0obmV3IERhdGUoKSkuZ2V0VGltZSgpO2Z1bmN0aW9uIGQoKXtyZXR1cm4gai5pbm5lckhlaWdodHx8bS5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0O31mdW5jdGlvbiBnKCl7cmV0dXJuIGouaW5uZXJXaWR0aHx8bS5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGg7fWZ1bmN0aW9uIGUodCxyLHMpe2lmKHQ+MCl7cmV0dXJuKHM+dCk7fWVsc2V7cmV0dXJuKHI+MCk7fX12YXIgZj1mdW5jdGlvbigpe3JldHVybihEYXRlLm5vdz9EYXRlLm5vdygpOm5ldyBEYXRlKCkuZ2V0VGltZSgpKTt9O3Rocm90dGxlPWZ1bmN0aW9uKHMsdSx5KXt2YXIgcix3LHo7dmFyIHg9bnVsbDt2YXIgdj0wO2lmKCF5KXt5PXt9O312YXIgdD1mdW5jdGlvbigpe3Y9eS5sZWFkaW5nPT09ZmFsc2U/MDpmKCk7eD1udWxsO3o9cy5hcHBseShyLHcpO2lmKCF4KXtyPXc9bnVsbDt9fTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgQj1mKCk7aWYoIXYmJnkubGVhZGluZz09PWZhbHNlKXt2PUI7fXZhciBBPXUtKEItdik7cj10aGlzO3c9YXJndW1lbnRzO2lmKEFcdTAwM0M9MHx8QT51KXtpZih4KXtjbGVhclRpbWVvdXQoeCk7eD1udWxsO312PUI7ej1zLmFwcGx5KHIsdyk7aWYoIXgpe3I9dz1udWxsO319ZWxzZXtpZigheCYmeS50cmFpbGluZyE9PWZhbHNlKXt4PXNldFRpbWVvdXQodCxBKTt9fXJldHVybiB6O307fTtmdW5jdGlvbiBsKHUsdyx2LHIpe3RyeXt2YXIgdD1tLmdldEVsZW1lbnRCeUlkKHUpLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO2lmKGUodC50b3AsdC5ib3R0b20sZCgpKSYmZSh0LmxlZnQsdC5yaWdodCxnKCkpKXtpZih0eXBlb2YgdWV0PT1cImZ1bmN0aW9uXCIpe3VldChcImJiXCIsXCJhZHBsYWNlbWVudHM6dmlld2FibGVsYXRlbmN5OlwiK3cse3diOjF9KTtpZih2KXt1ZXQoXCJiYlwiLFwiYWRwbGFjZW1lbnRzOnZpZXdhYmxlbGF0ZW5jeTpcIit2LHt3YjoxfSk7fX1pZih0eXBlb2YgdWV4PT1cImZ1bmN0aW9uXCImJmoudWUmJnR5cGVvZiB1ZS5jb3VudD09XCJmdW5jdGlvblwiKXtpZihqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW3JdLmxvYWRlZCl7dWV4KFwibGRcIixcImFkcGxhY2VtZW50czp2aWV3YWJsZWxhdGVuY3k6XCIrdyx7d2I6MX0pO2lmKHYpe3VleChcImxkXCIsXCJhZHBsYWNlbWVudHM6dmlld2FibGVsYXRlbmN5OlwiK3Yse3diOjF9KTt9dWUuY291bnQoXCJhZHBsYWNlbWVudHM6aHRtbHZpZXdlZDpsb2FkZWQ6XCIrdywxKTtpZih2KXt1ZS5jb3VudChcImFkcGxhY2VtZW50czpodG1sdmlld2VkOmxvYWRlZDpcIit2LDEpO319dWUuY291bnQoXCJhZHBsYWNlbWVudHM6aHRtbHZpZXdlZDpcIit3LDEpO2lmKHYpe3VlLmNvdW50KFwiYWRwbGFjZW1lbnRzOmh0bWx2aWV3ZWQ6XCIrdiwxKTt9fWouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbcl0udmlld2VkPXRydWU7aWYoai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tyXS50cmFja2VyKXtjKFwic2Nyb2xsXCIsai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tyXS50cmFja2VyKTtjKFwicmVzaXplXCIsai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tyXS50cmFja2VyKTt9fX1jYXRjaChzKXtqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW3JdLnZhbGlkPWZhbHNlO319dHJ5e2ouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnM9ai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc3x8e307dmFyIHE9XCJhcGVfRGV0YWlsX2Ftcy1kZXRhaWwtcmlnaHQtdjJfZGVza3RvcF9wbGFjZW1lbnRcIjt2YXIgcD1cIkRldGFpbF9hbXMtZGV0YWlsLXJpZ2h0LXYyX2Rlc2t0b3BcIi5yZXBsYWNlKC9cXF8vZyxcIjpcIik7dmFyIGg9XCI2ZjlkMmM1OC01YmFhLTRhOTktOTlmYy02NjMyNDUyODZmN2ZcIjt2YXIgaT1cIjFlNDliZDFmYmIyNjQ0MTdhMDZmYzJlNjJjYzAzNTYyXCI7ai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tpXT1qLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW2ldfHx7fTtqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW2ldLnZhbGlkPXRydWU7bChxLHAsaCxpKTtpZihqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW2ldLnZhbGlkJiYhai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tpXS52aWV3ZWQpe2ouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbaV0udHJhY2tlcj10aHJvdHRsZShmdW5jdGlvbigpe2wocSxwLGgsaSk7fSwyMCk7YShcInNjcm9sbFwiLGouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbaV0udHJhY2tlcik7YShcInJlc2l6ZVwiLGouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbaV0udHJhY2tlcik7fX1jYXRjaChrKXtpZihqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzJiZqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW1wiMWU0OWJkMWZiYjI2NDQxN2EwNmZjMmU2MmNjMDM1NjJcIl0pe2ouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbXCIxZTQ5YmQxZmJiMjY0NDE3YTA2ZmMyZTYyY2MwMzU2MlwiXS52YWxpZD1mYWxzZTt9byhcIkVycm9yIGluaXRpYWxpemluZyB2aWV3YWJsZSBsYXRlbmN5IGluc3RydW1lbnRhdGlvblwiLGspO310cnl7aWYoai5EQXNmKXtqLkRBc2YubG9hZEFkcygpO31lbHNle3ZhciBuPW0uY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtuLnR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIjtuLmFzeW5jPXRydWU7bi5jaGFyc2V0PVwidXRmLThcIjtuLnNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9hcGUvc2YvZGVza3RvcC9EQXNmLTEuNTAuMjI4Zjk4Yy5fVjQ1MTk1MDkxMF8uanM/Y3NtX2F0dHJpYnV0aW9uPUFQRS1TYWZlRnJhbWVcIjtuLm9uZXJyb3I9ZnVuY3Rpb24oKXtvKFwiRXJyb3IgbG9hZGluZyBTYWZlRnJhbWUgbGlicmFyeVwiKTt9O24uc2V0QXR0cmlidXRlKFwiY3Jvc3NvcmlnaW5cIixcImFub255bW91c1wiKTsobS5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF18fG0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJib2R5XCIpWzBdKS5hcHBlbmRDaGlsZChuKTt9fWNhdGNoKGspe28oXCJFcnJvciBhcHBlbmRpbmcgREFzZiBsaWJyYXJ5XCIsayk7fX0od2luZG93LGRvY3VtZW50KSk7fSkoKTt9O2IoKTt9KSgpO1x1MDAzQy9zY3JpcHQ+XG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJzZXJ2aWNlc0ludGVyc3RpdGlhbF9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwic2VydmljZXNJbnRlcnN0aXRpYWxcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgIFxuICAgICAgICAgXG4gICAgICAgICBcbiAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJ1c3NfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cInVzc1wiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblx1MDAzQ2RpdiBpZD1cInVzcy1zaGVldC12aWV3XCIgZGF0YS1sYXlvdXQtdHlwZT1cInVzcy1kZWZhdWx0LWxheW91dFwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIHVzcy1jLXVzcy1zaGVldC12aWV3LWdyZWRpZW50IHVzcy1sLXVzcy1zaGVldC12aWV3IGFvay1oaWRkZW5cIj5cblx0XG5cblxuXG5cblx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSB1c3MtbC1kZWZhdWx0LWxheW91dFwiPlxuXHRcdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgdXNzLWMtaGVhZFwiPlxuXHRcdTAwM0MvZGl2PlxuXHRcdTAwM0NociBjbGFzcz1cImEtc3BhY2luZy1ub25lIGEtZGl2aWRlci1ub3JtYWxcIj5cblx0XHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIHVzcy1jLWJvZHlcIj5cblx0XHRcdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gdXNzLWxvYWRpbmctc2tlbGV0b25cIj5cblx0XHRcdFxuXG5cdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1lZGl1bSBhLXNwYWNpbmctdG9wLW1lZGl1bSBsb2FkaW5nLW1lc3NhZ2UgdXNzLXJlY29tbWVuZGF0aW9ucy1tZXNzYWdlIHVzcy10ZXh0LXdoaXRlLWNvbG9yIGFvay1oaWRkZW5cIj5cblx0XHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1tZWRpdW0gYS10ZXh0LWJvbGRcIj5cblx0ICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBMb2FkaW5nIHJlY29tbWVuZGF0aW9ucyBmb3IgeW91XG4gICAgICAgICAgICBcbiAgICAgICAgXG5cdFx1MDAzQy9zcGFuPlxuXHUwMDNDL2Rpdj5cblxuXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1tZWRpdW0gYS1zcGFjaW5nLXRvcC1tZWRpdW0gYXNpbi1mYWNlb3V0LXNrZWxldG9uXCI+XG5cdFx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtbGVmdC1ncmlkXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1maXhlZC1sZWZ0LWdyaWQtaW5uZXJcIiBzdHlsZT1cInBhZGRpbmctbGVmdDoxNjBweFwiPlxuXHRcdFx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtbGVmdC1ncmlkLWNvbCBhLWNvbC1sZWZ0XCIgc3R5bGU9XCJ3aWR0aDoxNjBweDttYXJnaW4tbGVmdDotMTYwcHg7ZmxvYXQ6bGVmdDtcIj5cblx0XHRcdFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBpbWFnZS1za2VsZXRvblwiPlx1MDAzQy9kaXY+XG5cdFx0XHUwMDNDL2Rpdj5cblx0XHRcdTAwM0NkaXYgY2xhc3M9XCJhLWZpeGVkLWxlZnQtZ3JpZC1jb2wgYS1jb2wtcmlnaHRcIiBzdHlsZT1cInBhZGRpbmctbGVmdDowJTtmbG9hdDpsZWZ0O1wiPlxuXHRcdFx0XHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1zbWFsbCBsb2FkaW5nLWJhclwiPlx1MDAzQy9kaXY+XG5cdFx0XHRcdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsIGxvYWRpbmctYmFyXCI+XHUwMDNDL2Rpdj5cblx0XHRcdFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctc21hbGwgbG9hZGluZy1iYXJcIj5cdTAwM0MvZGl2PlxuXHRcdFx0XHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1zbWFsbCBidXR0b24tc2tlbGV0b25cIj5cdTAwM0MvZGl2PlxuXHRcdFx1MDAzQy9kaXY+XG5cdFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XG5cdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1lZGl1bSBhc2luLWZhY2VvdXQtc2tlbGV0b25cIj5cblx0XHUwMDNDZGl2IGNsYXNzPVwiYS1maXhlZC1sZWZ0LWdyaWRcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWZpeGVkLWxlZnQtZ3JpZC1pbm5lclwiIHN0eWxlPVwicGFkZGluZy1sZWZ0OjE2MHB4XCI+XG5cdFx0XHUwMDNDZGl2IGNsYXNzPVwiYS1maXhlZC1sZWZ0LWdyaWQtY29sIGEtY29sLWxlZnRcIiBzdHlsZT1cIndpZHRoOjE2MHB4O21hcmdpbi1sZWZ0Oi0xNjBweDtmbG9hdDpsZWZ0O1wiPlxuXHRcdFx0XHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGltYWdlLXNrZWxldG9uXCI+XHUwMDNDL2Rpdj5cblx0XHRcdTAwM0MvZGl2PlxuXHRcdFx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtbGVmdC1ncmlkLWNvbCBhLWNvbC1yaWdodFwiIHN0eWxlPVwicGFkZGluZy1sZWZ0OjAlO2Zsb2F0OmxlZnQ7XCI+XG5cdFx0XHRcdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsIGxvYWRpbmctYmFyXCI+XHUwMDNDL2Rpdj5cblx0XHRcdFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctc21hbGwgbG9hZGluZy1iYXJcIj5cdTAwM0MvZGl2PlxuXHRcdFx0XHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1zbWFsbCBsb2FkaW5nLWJhclwiPlx1MDAzQy9kaXY+XG5cdFx0XHRcdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsIGJ1dHRvbi1za2VsZXRvblwiPlx1MDAzQy9kaXY+XG5cdFx0XHUwMDNDL2Rpdj5cblx0XHUwMDNDL2Rpdj5cdTAwM0MvZGl2PlxuXHUwMDNDL2Rpdj5cblx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbWVkaXVtIGFzaW4tZmFjZW91dC1za2VsZXRvblwiPlxuXHRcdTAwM0NkaXYgY2xhc3M9XCJhLWZpeGVkLWxlZnQtZ3JpZFwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtbGVmdC1ncmlkLWlubmVyXCIgc3R5bGU9XCJwYWRkaW5nLWxlZnQ6MTYwcHhcIj5cblx0XHRcdTAwM0NkaXYgY2xhc3M9XCJhLWZpeGVkLWxlZnQtZ3JpZC1jb2wgYS1jb2wtbGVmdFwiIHN0eWxlPVwid2lkdGg6MTYwcHg7bWFyZ2luLWxlZnQ6LTE2MHB4O2Zsb2F0OmxlZnQ7XCI+XG5cdFx0XHRcdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gaW1hZ2Utc2tlbGV0b25cIj5cdTAwM0MvZGl2PlxuXHRcdFx1MDAzQy9kaXY+XG5cdFx0XHUwMDNDZGl2IGNsYXNzPVwiYS1maXhlZC1sZWZ0LWdyaWQtY29sIGEtY29sLXJpZ2h0XCIgc3R5bGU9XCJwYWRkaW5nLWxlZnQ6MCU7ZmxvYXQ6bGVmdDtcIj5cblx0XHRcdFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctc21hbGwgbG9hZGluZy1iYXJcIj5cdTAwM0MvZGl2PlxuXHRcdFx0XHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1zbWFsbCBsb2FkaW5nLWJhclwiPlx1MDAzQy9kaXY+XG5cdFx0XHRcdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsIGxvYWRpbmctYmFyXCI+XHUwMDNDL2Rpdj5cblx0XHRcdFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctc21hbGwgYnV0dG9uLXNrZWxldG9uXCI+XHUwMDNDL2Rpdj5cblx0XHRcdTAwM0MvZGl2PlxuXHRcdTAwM0MvZGl2Plx1MDAzQy9kaXY+XG5cdTAwM0MvZGl2PlxuXHRcdFx1MDAzQy9kaXY+XG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbWVkaXVtIGEtdGV4dC1jZW50ZXIgdXNzLXJlY29tbWVuZGF0aW9ucy1tZXNzYWdlIHVzcy1yZWNvbW1lbmRhdGlvbnMtbG9hZGVkLW1lc3NhZ2UgdXNzLXRleHQtd2hpdGUtY29sb3IgYW9rLWhpZGRlblwiPlxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1tZWRpdW0gYS10ZXh0LWJvbGRcIj5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVjb21tZW5kYXRpb25zIGZvciB5b3VcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgXHUwMDNDL2Rpdj5cblx0XHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XG5cblx1MDAzQy9kaXY+XG5cblxuXG5cdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYW9rLWhpZGRlbiB1c3MtdGVtcGxhdGUtc3RvcmVcIj5cblx0XG5cdTAwM0NkaXYgZGF0YS10ZW1wbGF0ZS1uYW1lPVwidXNzLWMtYXRjLXN0YXR1cy13aWRnZXRcIiBkYXRhLXdpZGdldC10eXBlPVwidXNzLWMtYXRjLXN0YXR1cy13aWRnZXRcIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLWJhc2UgdXNzLWMtYXRjLXN0YXR1cy13aWRnZXQgdXNzLWwtYXRjLXN0YXR1cy13aWRnZXQgdXNzLXRlbXBsYXRlXCI+XG4gICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuMTIgYS10ZXh0LWNlbnRlciBhLXNwYWNpbmctbm9uZSBhdGMtYWNrbm93bGVkZ2VtZW50LW1lc3NhZ2VcIj5cbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW5vbmVcIj5cbiAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtaW1hZ2UtY29udGFpbmVyIGEtZHluYW1pYy1pbWFnZS1jb250YWluZXIgbWFpbi1pbWFnZSB1c3Mtby1wcm9taXNpbmctdWktZWxlbWVudC1hbmltYXRpb24gaXMtbG9hZGluZ1wiIHN0eWxlPVwid2lkdGg6NjBweDsgaGVpZ2h0OjYwcHg7XCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIHVpLXByb21pc2VcIj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1zcGlubmVyLXdyYXBwZXJcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1zcGlubmVyIGEtc3Bpbm5lci1tZWRpdW1cIj5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2PlxuICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIHVpLXZhbHVlXCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gc3VjY2Vzcy10aWNrLW1hcmstcGxhY2Vob2xkZXJcIj5cbiAgICAgICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBlcnJvci10aWNrLW1hcmstcGxhY2Vob2xkZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24td2FybmluZyBhLWljb24tbWVkaXVtXCIgcm9sZT1cImltZ1wiPlx1MDAzQy9pPlxuICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctbm9uZVwiPlxuICAgICAgICAgICAgXG5cblxuXG5cdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgdXNzLWMtYXRjLXN0YXR1cy1tc2cgdXNzLW8tcHJvbWlzaW5nLXVpLWVsZW1lbnQtYW5pbWF0aW9uIGlzLWxvYWRpbmdcIj5cblxuXHRcdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gdWktcHJvbWlzZSBhdGMtc3VjY2VzcyBhdGMtZXJyb3JcIj5cbiAgICAgICAgXHUwMDNDaDEgY2xhc3M9XCJhLXNpemUtZXh0cmEtbGFyZ2UgYS1zcGFjaW5nLW1pY3JvIHN1Y2Nlc3MtbWVzc2FnZSB1c3MtdGV4dC13aGl0ZS1jb2xvclwiPlxuICAgICAgICAgICAgQWRkaW5nIHRvIENhcnQuLi5cbiAgICAgICAgXHUwMDNDL2gxPlxuXHRcdTAwM0MvZGl2PlxuXG5cdFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSB1aS12YWx1ZVwiPlxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYXRjLXN1Y2Nlc3MtbWVzc2FnZVwiPlxuICAgICAgICAgICAgXHUwMDNDaDEgY2xhc3M9XCJhLXNpemUtZXh0cmEtbGFyZ2UgYS1zcGFjaW5nLW1pY3JvIHN1Y2Nlc3MtbWVzc2FnZSB1c3MtdGV4dC13aGl0ZS1jb2xvclwiPlxuICAgICAgICAgICAgICAgIEFkZGVkIHRvIENhcnRcbiAgICAgICAgICAgIFx1MDAzQy9oMT5cbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGF0Yy1lcnJvci1tZXNzYWdlXCI+XG4gICAgICAgICAgICBcdTAwM0NoMSBjbGFzcz1cImEtc2l6ZS1leHRyYS1sYXJnZSBhLXNwYWNpbmctbWljcm8gZXJyb3ItbWVzc2FnZSB1c3MtdGV4dC13aGl0ZS1jb2xvclwiPlxuICAgICAgICAgICAgICAgIE5vdCBBZGRlZFxuICAgICAgICAgICAgXHUwMDNDL2gxPlxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYXRjLWl0ZW0taW4tY2FydC1tZXNzYWdlXCI+XG4gICAgICAgICAgICBcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdWNjZXNzIGEtaWNvbi1tZWRpdW1cIiByb2xlPVwiaW1nXCI+XHUwMDNDL2k+XG4gICAgICAgICAgICBcdTAwM0NoMiBjbGFzcz1cImEtY29sb3Itc3VjY2VzcyBpdGVtLWluLWNhcnQtbWVzc2FnZVwiPlxuICAgICAgICAgICAgICAgIEl0ZW0gaXMgaW4geW91ciBDYXJ0XG4gICAgICAgICAgICBcdTAwM0MvaDI+XG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgXHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIHVzcy1jLWNhcnQtc3RhdHVzLW1zZyB1c3Mtby1wcm9taXNpbmctdWktZWxlbWVudCBpcy1sb2FkaW5nXCI+XG4gICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIHVpLXByb21pc2VcIj5cbiAgICBcdTAwM0MvZGl2PlxuICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSB1aS12YWx1ZVwiPlxuICAgICAgICBcdTAwM0NzcGFuIGRhdGEtY2FydC1jb3VudC1wbHVyYWwtdGVtcGxhdGU9XCJDYXJ0IFN1YnRvdGFsICgjIyNjYXJ0Q291bnQgaXRlbXMpOlwiIGRhdGEtY2FydC1jb3VudC1zaW5ndWxhci10ZW1wbGF0ZT1cIkNhcnQgU3VidG90YWwgKCMjI2NhcnRDb3VudCBpdGVtKTpcIiBjbGFzcz1cImEtc2l6ZS1iYXNlLXBsdXMgY2FydC1jb3VudCB1c3MtdGV4dC13aGl0ZS1jb2xvclwiPlxuICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlLXBsdXMgY2FydC1zdWItdG90YWwgdXNzLXRleHQtd2hpdGUtY29sb3IgYS10ZXh0LWJvbGRcIj5cdTAwM0Mvc3Bhbj5cbiAgICBcdTAwM0MvZGl2PlxuXHUwMDNDL2Rpdj5cblxuICAgICAgICAgICAgXG5cdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1pY3JvIHVzcy1jLXNoaXBwaW5nLWRldGFpbHMgYW9rLWhpZGRlblwiPlxuICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBzaGlwcGluZy1tZXNzYWdlLXBsYWNlaG9sZGVyIHVzcy10ZXh0LXdoaXRlLWNvbG9yXCI+XHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XG5cbiAgICAgICAgICAgIFxuXG5cblxuXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1tZWRpdW0gdXNzLWMtc3ViLW5hdlwiPlxuXHRcdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24tYmFzZSBjYXJ0LWJ0blwiIGlkPVwiYS1hdXRvaWQtMTBcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24taW5uZXJcIj5cdTAwM0NhIGhyZWY9XCIvZ3AvY2FydC92aWV3Lmh0bWwvcmVmPXVzc19jYXJ0XCIgY2xhc3M9XCJhLWJ1dHRvbi10ZXh0XCIgcm9sZT1cImJ1dHRvblwiIGlkPVwiYS1hdXRvaWQtMTAtYW5ub3VuY2VcIj5cblx0XHRWaWV3IENhcnRcblx0XHUwMDNDL2E+XHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XG5cdFx1MDAzQ2Zvcm0gbWV0aG9kPVwicG9zdFwiIGFjdGlvbj1cIi9ncC9jYXJ0L2Rlc2t0b3AvZ28tdG8tY2hlY2tvdXQuaHRtbC9yZWY9cGRfbHVjX21yaT9wcm9jZWVkVG9DaGVja291dD1Qcm9jZWVkJmFtcDt6aXBjb2RlPSZhbXA7YWRkcmVzc0lEPW5ldyZhbXA7emlwY29kZT1cIiBjbGFzcz1cImNoZWNrb3V0LWZvcm0gYS1zcGFjaW5nLW5vbmVcIj5cblx0XHRcdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24gYS1zcGFjaW5nLW5vbmUgYS1idXR0b24tcHJpbWFyeSBjaGVja291dC1idG5cIiBpZD1cImEtYXV0b2lkLTExXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uLWlubmVyXCI+XHUwMDNDaW5wdXQgY2xhc3M9XCJhLWJ1dHRvbi1pbnB1dFwiIHR5cGU9XCJzdWJtaXRcIiBhcmlhLWxhYmVsbGVkYnk9XCJhLWF1dG9pZC0xMS1hbm5vdW5jZVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi10ZXh0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaWQ9XCJhLWF1dG9pZC0xMS1hbm5vdW5jZVwiPlxuICAgICAgICAgICAgICAgIFByb2NlZWQgdG8gY2hlY2tvdXRcbiAgICAgICAgXHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XG5cdFx1MDAzQy9mb3JtPlxuXHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICBcdTAwM0MvZGl2PlxuXG5cdFxuXG5cdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1lZGl1bSBhLXRleHQtY2VudGVyIGF0Yy1nZW5lcmljLWVycm9yIGFvay1oaWRkZW5cIj5cblx0XHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGF0Yy1lcnJvclwiPlxuXHRcdFx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXdhcm5pbmcgYS1pY29uLW1lZGl1bVwiIHJvbGU9XCJpbWdcIj5cdTAwM0MvaT5cblx0XHRcdTAwM0NoMSBjbGFzcz1cImEtc2l6ZS1leHRyYS1sYXJnZSBhLXNwYWNpbmctbWljcm8gZXJyb3ItbWVzc2FnZSB1c3MtdGV4dC13aGl0ZS1jb2xvclwiPlxuXHRcdFx0Tm90IEFkZGVkXG5cdFx0XHUwMDNDL2gxPlxuXHRcdTAwM0MvZGl2PlxuXHRcdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UtcGx1cyB1c3MtdGV4dC13aGl0ZS1jb2xvclwiPlxuXHRcdFRoZXJlIHdhcyBhIHByb2JsZW0gYWRkaW5nIHRoaXMgaXRlbSB0byBDYXJ0LiBQbGVhc2UgdHJ5IGFnYWluIGxhdGVyLlxuXHRcdTAwM0Mvc3Bhbj5cblx1MDAzQy9kaXY+XG5cblx1MDAzQy9kaXY+XG5cblxuICAgICAgICBcdTAwM0NkaXYgZGF0YS10ZW1wbGF0ZS1uYW1lPVwidXNzLW5vLXJlY29tbWVuZGF0aW9uLXdpZGdldFwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIHVzcy10ZW1wbGF0ZSBhLXRleHQtY2VudGVyIHVzcy10ZXh0LXdoaXRlLWNvbG9yXCI+XG5cdCAgICAgICAgXG5cblxuXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1tZWRpdW0gYS1zcGFjaW5nLXRvcC1tZWRpdW1cIj5cbiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlXCI+XG5cdCAgICAgICAgU29ycnksIHdlJ3JlIGhhdmluZyB0cm91YmxlIHNob3dpbmcgcmVjb21tZW5kYXRpb25zIHJpZ2h0IG5vdy4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlci5cbiAgICAgICAgXHUwMDNDL3NwYW4+XG5cdTAwM0MvZGl2PlxuXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWwgY29udGludWUtc2hvcHBpbmdcIiBocmVmPVwiI1wiPlxuXHRDb250aW51ZSBzaG9wcGluZ1xuXHUwMDNDL2E+XG5cbiAgICAgICAgXHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XG5cblxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPihmdW5jdGlvbihmKSB7dmFyIF9ucD0od2luZG93LlAuX25hbWVzcGFjZShcIlVTU0xheW91dFJlZ2lzdHJhdGlvblwiKSk7aWYoX25wLmd1YXJkRmF0YWwpe19ucC5ndWFyZEZhdGFsKGYpKF9ucCk7fWVsc2V7ZihfbnApO319KGZ1bmN0aW9uKFApIHtcbiAgICBQLndoZW4oXCJ1c3MtZGVmYXVsdC1sYXlvdXRcIikucmVnaXN0ZXIoXCJ1c3MtbGF5b3V0XCIsIGZ1bmN0aW9uKGRlZmF1bHRMYXlvdXQpe1xuICAgICAgICByZXR1cm4gZGVmYXVsdExheW91dDtcbiAgICB9KTtcbn0pKTtcdTAwM0Mvc2NyaXB0PlxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwidXNzSW5pdF9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwidXNzSW5pdFwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0MvZGl2Plx1MDAzQy9kaXY+XG4gICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgIFxuICAgIFxuXHUwMDNDL2Rpdj5cblxuXG5cbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuXG5cbiAgICBcblxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuc2V0Q1NNUmVxKCdhZicpO1xuaWYodHlwZW9mIGFkZGxvbmdQb2xlVGFnID09PSAnZnVuY3Rpb24nKXsgYWRkbG9uZ1BvbGVUYWcoJ2FmJywnZGVza3RvcC1odG1sLWF0Zi1tYXJrZXInKTt9O1xuUC53aGVuKCdqUXVlcnknLCAnYXRmJykuZXhlY3V0ZShmdW5jdGlvbigkLCBhdGYpe1xuICAgIHZhciAkaW1hZ2UgPSAkKFwiI2xhbmRpbmdJbWFnZVwiKTtcbiAgICB2YXIgc2l6ZXMgPSAkaW1hZ2UuZGF0YSgnYUR5bmFtaWNJbWFnZScpO1xuXG4gICAgaWYgKCFzaXplcyB8fCB0eXBlb2Ygc2l6ZXMgIT09ICdvYmplY3QnKXtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyICRjb250YWluZXIgPSAkaW1hZ2UuZGF0YSgnYUR5bmFtaWNJbWFnZUNvbnRhaW5lcicpO1xuICAgIGlmICh0eXBlb2YgJGNvbnRhaW5lciA9PT0gJ3VuZGVmaW5lZCcpe1xuICAgICAgJGNvbnRhaW5lciA9ICRpbWFnZS5wYXJlbnRzKCcuYUR5bmFtaWNJbWFnZUNvbnRhaW5lcicpO1xuICAgICAgaWYgKCRjb250YWluZXIubGVuZ3RoID09PSAwKXtcbiAgICAgICAgJGNvbnRhaW5lciA9ICRpbWFnZS5wYXJlbnQoKTtcbiAgICAgIH1cbiAgICAgICRpbWFnZS5kYXRhKCdhRHluYW1pY0ltYWdlQ29udGFpbmVyJywgJGNvbnRhaW5lcik7XG4gICAgfVxuXG4gICAgdmFyIHBpeGVsUmF0aW8gPSB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyA/IHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvIDogMTtcbiAgICB2YXIgd2lkdGggPSAkY29udGFpbmVyLndpZHRoKCkgKiBwaXhlbFJhdGlvO1xuICAgIHZhciBoZWlnaHQgPSAkY29udGFpbmVyLmhlaWdodCgpICogcGl4ZWxSYXRpbztcbiAgICB2YXIgY2xvc2VzdFNpemVEaWZmID0gTnVtYmVyLk1BWF9WQUxVRTtcbiAgICB2YXIgY2xvc2VzdExhcmdlclNpemVEaWZmID0gTnVtYmVyLk1BWF9WQUxVRTtcbiAgICB2YXIgY2xvc2VzdFVybCA9ICRpbWFnZS5hdHRyKCdzcmMnKSB8fCAnJztcbiAgICB2YXIgY2xvc2VzdExhcmdlclVybDtcbiAgICB2YXIgYXNwZWN0UmF0aW8gPSB3aWR0aCAvIGhlaWdodDtcblxuICAgICQuZWFjaChzaXplcywgZnVuY3Rpb24odXJsLCBzaXplKXtcbiAgICAgIHZhciBwcm9wb3NlZEhlaWdodCA9IHBhcnNlSW50KHNpemVbMF0sIDEwKTtcbiAgICAgIHZhciBwcm9wb3NlZFdpZHRoID0gcGFyc2VJbnQoc2l6ZVsxXSwgMTApO1xuICAgICAgdmFyIGhlaWdodERpZmYgPSBwcm9wb3NlZEhlaWdodCAtIGhlaWdodDtcbiAgICAgIHZhciB3aWR0aERpZmYgPSBwcm9wb3NlZFdpZHRoIC0gd2lkdGg7XG4gICAgICB2YXIgc2l6ZURpZmYgPSBhc3BlY3RSYXRpbyA+PSAxID8gd2lkdGhEaWZmIDogaGVpZ2h0RGlmZjtcblxuICAgICAgaWYgKE1hdGguYWJzKHNpemVEaWZmKSBcdTAwM0MgY2xvc2VzdExhcmdlclNpemVEaWZmICYmIHNpemVEaWZmID49IDApe1xuICAgICAgICBjbG9zZXN0TGFyZ2VyU2l6ZURpZmYgPSBNYXRoLmFicyhzaXplRGlmZik7XG4gICAgICAgIGNsb3Nlc3RMYXJnZXJVcmwgPSB1cmw7XG4gICAgICB9XG5cbiAgICAgIGlmIChNYXRoLmFicyhzaXplRGlmZikgXHUwMDNDIGNsb3Nlc3RTaXplRGlmZil7XG4gICAgICAgIGNsb3Nlc3RTaXplRGlmZiA9IE1hdGguYWJzKHNpemVEaWZmKTtcbiAgICAgICAgY2xvc2VzdFVybCA9IHVybDtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGlmIChjbG9zZXN0TGFyZ2VyVXJsKXtcbiAgICAgIGNsb3Nlc3RVcmwgPSBjbG9zZXN0TGFyZ2VyVXJsO1xuICAgIH1cbiAgICBpZihjbG9zZXN0VXJsICYmIGNsb3Nlc3RVcmwgIT0gJycpe1xuICAgICAgJGltYWdlLmF0dHIoXCJzcmNcIixjbG9zZXN0VXJsKTtcbiAgICB9XG59KTtcblx1MDAzQy9zY3JpcHQ+XG5cblxuICAgIFx1MDAzQ2RpdiBpZD1cImJvdHRvbVJvd1wiPlxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwidHdpc3RlckpzSW5pdGlhbGl6ZXJfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cInR3aXN0ZXJKc0luaXRpYWxpemVyXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgXG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInBhZ2VSZWZyZXNoSnNJbml0aWFsaXplcl9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwicGFnZVJlZnJlc2hKc0luaXRpYWxpemVyXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblx0XG4gICAgXG4gICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJhLXN0YXRlXCIgZGF0YS1hLXN0YXRlPVwieyZxdW90O2tleSZxdW90OzomcXVvdDtwYWdlLXJlZnJlc2gtZGF0YS1kcHgmcXVvdDt9XCI+e1wicGFnZVJlZnJlc2hVcmxQYXJhbXNcIjp7fX1cdTAwM0Mvc2NyaXB0PlxuICAgIFxuICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG4gICAgICAgIFAucmVnaXN0ZXIoJ3BhZ2UtcmVmcmVzaC1qcy1pbml0LWRweC1kYXRhJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGRhdGFUb1JldHVybiA9IHt9O1xuICAgICAgICAgICAgZGF0YVRvUmV0dXJuLmRpdlRvVXBkYXRlRGF0YSA9IHtcInJlbnRidXlib3hcIjp7XCJtb2JiX3NoaXBzRnJvbVNvbGRCeVwiOntcImRpdlRvVXBkYXRlXCI6XCJtb2JiX3NoaXBzRnJvbVNvbGRCeV9mZWF0dXJlX2RpdlwifSxcInBvaW50c0luc2lkZUJ1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJwb2ludHNJbnNpZGVCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJ1c2VkQWNjb3JkaW9uUm93SGVhZGVyXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInByaW1lRWFybHlBY2Nlc3NcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicHJpbWVFYXJseUFjY2Vzc19mZWF0dXJlX2RpdlwifSxcInByb2R1Y3RBZHNGZWVkYmFja1wiOntcImRpdlRvVXBkYXRlXCI6XCJwcm9kdWN0LWFkcy1mZWVkYmFja19mZWF0dXJlX2RpdlwifSxcInR3aXN0ZXJVdGlsc1wiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJzbWFydEN1c3RvbWVyTG9jYXRpb25cIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiY291cG9uQ291bnRcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiY291cG9uQ291bnRfZmVhdHVyZV9kaXZcIn0sXCJjdXN0b21lckluZm9cIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwidHdpc3RlckRpbWVuc2lvblNsb3RzXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInNoaXBwaW5nTWVzc2FnZVwiOntcImRpdlRvVXBkYXRlXCI6XCJzaGlwcGluZ01lc3NhZ2VfZmVhdHVyZV9kaXZcIn0sXCJvbmVDbGlja1wiOntcImRpdlRvVXBkYXRlXCI6XCJvbmVDbGlja19mZWF0dXJlX2RpdlwifSxcImNwc2lhUHJvZHVjdFNhZmV0eVdhcm5pbmdcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiY3BzaWFQcm9kdWN0U2FmZXR5V2FybmluZ19mZWF0dXJlX2RpdlwifSxcImJib3BcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYmJvcF9mZWF0dXJlX2RpdlwifSxcInB3VGVlbk1lc3NhZ2luZ1wiOntcImRpdlRvVXBkYXRlXCI6XCJwd1RlZW5NZXNzYWdpbmdfZmVhdHVyZV9kaXZcIn0sXCJtb2JiX2FsdGVybmF0aXZlT2ZmZXJFbGlnaWJpbGl0eU1lc3NhZ2luZ1wiOntcImRpdlRvVXBkYXRlXCI6XCJtb2JiX2FsdGVybmF0aXZlT2ZmZXJFbGlnaWJpbGl0eU1lc3NhZ2luZ19mZWF0dXJlX2RpdlwifSxcImRleFwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJhY2Nlc3NvcnlVcHNlbGxBbWFib3RcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYWNjZXNzb3J5VXBzZWxsQW1hYm90X2ZlYXR1cmVfZGl2XCJ9LFwicmVudEFjY29yZGlvblJvd0hlYWRlclwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJhbXNEZXRhaWxSaWdodFwiOntcImRpdlRvVXBkYXRlXCI6XCJhbXNEZXRhaWxSaWdodF9mZWF0dXJlX2RpdlwifSxcInNvZnRsaW5lc0F0ZkRlY2x1dHRlclwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJyZW50QWNjb3JkaW9uUm93Q29udGVudFwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJjZXJiZXJ1c1wiOntcImRpdlRvVXBkYXRlXCI6XCJjZXJiZXJ1c19mZWF0dXJlX2RpdlwifSxcInNjaGVkdWxlZERlbGl2ZXJ5XCI6e1wiZGl2VG9VcGRhdGVcIjpcInNjaGVkdWxlZERlbGl2ZXJ5X2ZlYXR1cmVfZGl2XCJ9LFwibHdjZlwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJiMmJyZEJ1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJiMmJyZEJ1eUJveF9mZWF0dXJlX2RpdlwifSxcInNreUNpdHlTb2Z0TWVyZ2VcIjp7XCJkaXZUb1VwZGF0ZVwiOlwic2t5Q2l0eVNvZnRNZXJnZV9mZWF0dXJlX2RpdlwifSxcInByb2R1Y3REZXNjcmlwdGlvblwiOntcImRpdlRvVXBkYXRlXCI6XCJkcF9wcm9kdWN0RGVzY3JpcHRpb25fY29udGFpbmVyX2RpdlwifSxcImRpZ2l0YWxEYXNoTG93UHJvbWluZW5jZVwiOntcImRpdlRvVXBkYXRlXCI6XCJkaWdpdGFsRGFzaExvd1Byb21pbmVuY2VfZmVhdHVyZV9kaXZcIn0sXCJkZWZhdWx0U2hpcHBpbmdBZGRyZXNzXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcImJiZ1wiOntcImRpdlRvVXBkYXRlXCI6XCJiYmdfZmVhdHVyZV9kaXZcIn0sXCJ1bnF1YWxpZmllZEJ1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJ1bnF1YWxpZmllZEJ1eUJveF9mZWF0dXJlX2RpdlwifSxcImIyYkFjY29yZGlvblJvd0NvbnRlbnRcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwibm9ucHJpbWVwcm9kdWN0XCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInByaW1lRXhjbHVzaXZlQmFkZ2VcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicHJpbWVFeGNsdXNpdmVCYWRnZV9mZWF0dXJlX2RpdlwifSxcInR3aXN0ZXJEZXNjcmlwdGlvblwiOntcImRpdlRvVXBkYXRlXCI6XCJ0d2lzdGVyX2Rlc2NyaXB0aW9uX2RpdlwifSxcImVkcFBvcG92ZXJDb250ZW50XCI6e1wiZGl2VG9VcGRhdGVcIjpcImVkcFBvcG92ZXJDb250ZW50X2ZlYXR1cmVfZGl2XCJ9LFwiaGlnaFZhbHVlTWVzc2FnaW5nXCI6e1wiZGl2VG9VcGRhdGVcIjpcImhpZ2hWYWx1ZU1lc3NhZ2luZ19mZWF0dXJlX2RpdlwifSxcInRyYWRlSW5zdGFudFNhdmluZ3NcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidHJhZGVJbnN0YW50U2F2aW5nc19mZWF0dXJlX2RpdlwifSxcIm1vYmJfYXZhaWxhYmlsaXR5XCI6e1wiZGl2VG9VcGRhdGVcIjpcIm1vYmJfYXZhaWxhYmlsaXR5X2ZlYXR1cmVfZGl2XCJ9LFwiYXZlcmFnZUN1c3RvbWVyUmV2aWV3c1wiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJmZWF0dXJlYnVsbGV0c1wiOntcImRpdlRvVXBkYXRlXCI6XCJmZWF0dXJlYnVsbGV0c19mZWF0dXJlX2RpdlwifSxcInB3QnV5Qm94QWNjb3JkaW9uUm93Q29udGVudFwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJhdmFpbEZyb21QQ1wiOntcImRpdlRvVXBkYXRlXCI6XCJhdmFpbEZyb21QQ19mZWF0dXJlX2RpdlwifSxcImFtYXpvbkdsb2JhbFwiOntcImRpdlRvVXBkYXRlXCI6XCJhbWF6b25HbG9iYWxfZmVhdHVyZV9kaXZcIn0sXCJ0ZWxsQUZyaWVuZEJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJ0ZWxsQUZyaWVuZEJveF9mZWF0dXJlX2RpdlwifSxcInNvbGRCeVRoaXJkUGFydHlcIjp7XCJkaXZUb1VwZGF0ZVwiOlwic29sZEJ5VGhpcmRQYXJ0eV9mZWF0dXJlX2RpdlwifSxcImVtd2FCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZW13YUJ1eUJveF9mZWF0dXJlX2RpdlwifSxcInByaW1lRXhjbHVzaXZlQnV5Ym94VXBzZWxsXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInNvbGRCeVRoaXJkUGFydHlSZWxvY2F0ZVwiOntcImRpdlRvVXBkYXRlXCI6XCJzb2xkQnlUaGlyZFBhcnR5UmVsb2NhdGVfZmVhdHVyZV9kaXZcIn0sXCJkZWFsc0J1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJkZWFsc0J1eUJveF9mZWF0dXJlX2RpdlwifSxcImJyb3dzZVwiOntcImRpdlRvVXBkYXRlXCI6XCJkcF9icm93c2VfY29udGFpbmVyX2RpdlwifSxcInVuYXZhaWxhYmxlTmV3QWNjb3JkaW9uUm93SGVhZGVyXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcImFkZE9uSXRlbVwiOntcImRpdlRvVXBkYXRlXCI6XCJhZGRPbkl0ZW1fZmVhdHVyZV9kaXZcIn0sXCJnb2xkYm94SlNTY3JpcHRcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZ29sZGJveEpTU2NyaXB0X2ZlYXR1cmVfZGl2XCJ9LFwibXVsdGlwbGVSZWNvbW1lbmRhdGlvbnNcIjp7XCJkaXZUb1VwZGF0ZVwiOlwibXVsdGlwbGVSZWNvbW1lbmRhdGlvbnNfZmVhdHVyZV9kaXZcIn0sXCJxdWFudGl0eUxheW91dEhpZ2hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicXVhbnRpdHlMYXlvdXRIaWdoX2ZlYXR1cmVfZGl2XCJ9LFwiYXZhaWxhYmlsaXR5SW5zaWRlQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcImF2YWlsYWJpbGl0eUluc2lkZUJ1eUJveF9mZWF0dXJlX2RpdlwifSxcInRmeFwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJ0cmFkZUluSW5zdGFudFNhdmluZ3NcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidHJhZGVJbkluc3RhbnRTYXZpbmdzX2ZlYXR1cmVfZGl2XCJ9LFwic29mdGxpbmVzVHdpc3RlclwiOntcImRpdlRvVXBkYXRlXCI6XCJzb2Z0bGluZXNUd2lzdGVyX2ZlYXR1cmVfZGl2XCJ9LFwiYnVzaW5lc3NPbmx5U2VsZWN0aW9uQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcImJ1c2luZXNzT25seVNlbGVjdGlvbkJ1eUJveF9mZWF0dXJlX2RpdlwifSxcImJ1bmRsZVYyXCI6e1wiZGl2VG9VcGRhdGVcIjpcImJ1bmRsZVYyX2ZlYXR1cmVfZGl2XCJ9LFwibXMzXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcImludml0ZVBsYXRmb3JtXCI6e1wiZGl2VG9VcGRhdGVcIjpcImludml0ZVBsYXRmb3JtX2ZlYXR1cmVfZGl2XCJ9LFwicHdCdXlCb3hBY2NvcmRpb25Sb3dIZWFkZXJcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwicXVhbnRpdHlMYXlvdXRMb3dcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicXVhbnRpdHlMYXlvdXRMb3dfZmVhdHVyZV9kaXZcIn0sXCJwcmVBZGRUb0NhcnRGcmFtZXdvcmtcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicHJlQWRkVG9DYXJ0RnJhbWV3b3JrX2ZlYXR1cmVfZGl2XCJ9LFwiYnlsaW5lSW5mb1wiOntcImRpdlRvVXBkYXRlXCI6XCJieWxpbmVJbmZvX2ZlYXR1cmVfZGl2XCJ9LFwiYWpheEJsb2NrQ29tcG9uZW50c1wiOntcImRpdlRvVXBkYXRlXCI6XCJhamF4QmxvY2tDb21wb25lbnRzX2ZlYXR1cmVfZGl2XCJ9LFwiYWRkVG9DYXJ0XCI6e1wiZGl2VG9VcGRhdGVcIjpcImFkZFRvQ2FydF9mZWF0dXJlX2RpdlwifSxcImFjQmFkZ2VcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYWNCYWRnZV9mZWF0dXJlX2RpdlwifSxcInZlbmRvclBvd2VyZWRDb3Vwb25cIjp7XCJkaXZUb1VwZGF0ZVwiOlwidmVuZG9yUG93ZXJlZENvdXBvbl9mZWF0dXJlX2RpdlwifSxcImRwRmFzdFRyYWNrSW5zaWRlQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcImRwRmFzdFRyYWNrSW5zaWRlQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwiZ2l2ZWF3YXlcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZ2l2ZWF3YXlfZmVhdHVyZV9kaXZcIn0sXCJnbG9iYWxTdG9yZUJhZGdlUG9wb3ZlclwiOntcImRpdlRvVXBkYXRlXCI6XCJnbG9iYWxTdG9yZUJhZGdlUG9wb3Zlcl9mZWF0dXJlX2RpdlwifSxcInByb2R1Y3RBbGVydFwiOntcImRpdlRvVXBkYXRlXCI6XCJwcm9kdWN0QWxlcnRfZmVhdHVyZV9kaXZcIn0sXCJhZGRyZXNzXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInZhbHVlUGlja1wiOntcImRpdlRvVXBkYXRlXCI6XCJ2YWx1ZVBpY2tfZmVhdHVyZV9kaXZcIn0sXCJpbnN0YWxsbWVudFBheW1lbnRcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiaW5zdGFsbG1lbnRQYXltZW50X2ZlYXR1cmVfZGl2XCJ9LFwicHJpbWVFeGNsdXNpdmVBY2NvcmRpb25Sb3dDb250ZW50XCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcIm1iYlwiOntcImRpdlRvVXBkYXRlXCI6XCJtYmJfZmVhdHVyZV9kaXZcIn0sXCJjbGlja1RvQ29udGFjdFwiOntcImRpdlRvVXBkYXRlXCI6XCJjbGlja1RvQ29udGFjdF9mZWF0dXJlX2RpdlwifSxcInByb21vdGlvbnNcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicHJvbW90aW9uc19mZWF0dXJlX2RpdlwifSxcInNoaXBzRnJvbVNvbGRCeUluc2lkZUJ1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJzaGlwc0Zyb21Tb2xkQnlJbnNpZGVCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJhc2dcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYXNnX2ZlYXR1cmVfZGl2XCJ9LFwidHdpc3RlclwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJpbnN0YW50T3JkZXJVcGRhdGVcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiaW5zdGFudE9yZGVyVXBkYXRlX2ZlYXR1cmVfZGl2XCJ9LFwiYXNrXCI6e1wiZGl2VG9VcGRhdGVcIjpcImFza19mZWF0dXJlX2RpdlwifSxcInVzZWRCdXlCb3hDb25kaXRpb25cIjp7XCJkaXZUb1VwZGF0ZVwiOlwidXNlZEJ1eUJveENvbmRpdGlvbl9mZWF0dXJlX2RpdlwifSxcInl1cmVrYUJ1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJ5dXJla2FCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJnaWZ0Q2FyZEhvbGlkYXlBdmFpbGFiaWxpdHlNZXNzYWdpbmdcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZ2lmdGNhcmQtaG9saWRheS1hdmFpbGFiaWxpdHktbWVzc2FnaW5nX2ZlYXR1cmVfZGl2XCJ9LFwidXNlZEJ1eUJveFNvbGRCeVwiOntcImRpdlRvVXBkYXRlXCI6XCJ1c2VkQnV5Qm94U29sZEJ5X2ZlYXR1cmVfZGl2XCJ9LFwiYWRkT25XaWRnZXRzXCI6e1wiZGl2VG9VcGRhdGVcIjpcImFkZE9uV2lkZ2V0c19mZWF0dXJlX2RpdlwifSxcImdmaXhcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiZGV0YWlsUGFnZUdpZnRpbmdcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZGV0YWlsUGFnZUdpZnRpbmdfZmVhdHVyZV9kaXZcIn0sXCJjc3BBY2NvcmRpb25Sb3dDb250ZW50XCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcImFuZG9uQ29yZFwiOntcImRpdlRvVXBkYXRlXCI6XCJhbmRvbkNvcmRfZmVhdHVyZV9kaXZcIn0sXCJzaGFyZUluZm9cIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiY3Jvc3NCb3JkZXJXaWRnZXRcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiY3Jvc3NCb3JkZXJXaWRnZXRfZmVhdHVyZV9kaXZcIn0sXCJhbWF6b25DdXN0b21CdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYW1hem9uQ3VzdG9tQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwicXVhbnRpdHlSZWxvY2F0ZVwiOntcImRpdlRvVXBkYXRlXCI6XCJxdWFudGl0eVJlbG9jYXRlX2ZlYXR1cmVfZGl2XCJ9LFwiZ2xvYmFsU3RvcmVJbmZvQnVsbGV0c1wiOntcImRpdlRvVXBkYXRlXCI6XCJnbG9iYWxTdG9yZUluZm9CdWxsZXRzX2ZlYXR1cmVfZGl2XCJ9LFwicHJpbWV4cFwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJHZW9ncmFwaGljYWxseVJlc3RyaWN0ZWRCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiR2VvZ3JhcGhpY2FsbHlSZXN0cmljdGVkQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwicmVjb21tZW5kYXRpb25zXCI6e1wiZGl2VG9VcGRhdGVcIjpcInJlY29tbWVuZGF0aW9uc19mZWF0dXJlX2RpdlwifSxcInNwb25zb3JlZFByb2R1Y3RzMlwiOntcImRpdlRvVXBkYXRlXCI6XCJzcG9uc29yZWRQcm9kdWN0czJfZmVhdHVyZV9kaXZcIn0sXCJnMnMyU2l6ZUNoYXJ0XCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcImJ1eU5vd1wiOntcImRpdlRvVXBkYXRlXCI6XCJidXlOb3dfZmVhdHVyZV9kaXZcIn0sXCJ1c3NcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidXNzX2ZlYXR1cmVfZGl2XCJ9LFwiaGVyb1F1aWNrUHJvbW9cIjp7XCJkaXZUb1VwZGF0ZVwiOlwiaGVyb1F1aWNrUHJvbW9fZmVhdHVyZV9kaXZcIn0sXCJsZWdhbFwiOntcImRpdlRvVXBkYXRlXCI6XCJsZWdhbF9mZWF0dXJlX2RpdlwifSxcImRpZ2l0YWxEYXNoTG93UHJvbWluZW5jZUFjY29yZGlvblwiOntcImRpdlRvVXBkYXRlXCI6XCJkaWdpdGFsRGFzaExvd1Byb21pbmVuY2VBY2NvcmRpb25fZmVhdHVyZV9kaXZcIn0sXCJjb21ib09mZmVyQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcImNvbWJvT2ZmZXJCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJuZXdBY2NvcmRpb25Sb3dIZWFkZXJcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwicHdCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicHdCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJhY2Nlc3NvcnlVcHNlbGxCdGZcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYWNjZXNzb3J5VXBzZWxsQnRmX2ZlYXR1cmVfZGl2XCJ9LFwicHJpY2VJbnNpZGVCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicHJpY2VJbnNpZGVCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJ1bmlmaWVkTG9jYXRpb25cIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiYWRkVG9XaXNobGlzdFwiOntcImRpdlRvVXBkYXRlXCI6XCJhZGRUb1dpc2hsaXN0X2ZlYXR1cmVfZGl2XCJ9LFwidXNlZEJ1eUJveEFkZFRvQ2FydFwiOntcImRpdlRvVXBkYXRlXCI6XCJ1c2VkQnV5Qm94QWRkVG9DYXJ0X2ZlYXR1cmVfZGl2XCJ9LFwiZnJlZVNoaXBwaW5nUHJpY2VCYWRnaW5nXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInNvY2lhbEZhYnJpY1wiOntcImRpdlRvVXBkYXRlXCI6XCJzb2NpYWxGYWJyaWNfZmVhdHVyZV9kaXZcIn0sXCJ1c3NJbml0XCI6e1wiZGl2VG9VcGRhdGVcIjpcInVzc0luaXRfZmVhdHVyZV9kaXZcIn0sXCJ1c2VkQnV5Qm94T25lQ2xpY2tcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidXNlZEJ1eUJveE9uZUNsaWNrX2ZlYXR1cmVfZGl2XCJ9LFwicHJvbWlzZUJhc2VkQmFkZ2VJbnNpZGVCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicHJvbWlzZUJhc2VkQmFkZ2VJbnNpZGVCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJ2b2x0YWdlQ29tcGxpYW5jZVwiOntcImRpdlRvVXBkYXRlXCI6XCJ2b2x0YWdlQ29tcGxpYW5jZV9mZWF0dXJlX2RpdlwifSxcImVkcEluZ3Jlc3NcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZWRwSW5ncmVzc19mZWF0dXJlX2RpdlwifSxcImdsb3dDb250ZXh0dWFsSW5ncmVzc1B0XCI6e1wiZGl2VG9VcGRhdGVcIjpcImdsb3dDb250ZXh0dWFsSW5ncmVzc1B0X2ZlYXR1cmVfZGl2XCJ9LFwicGFydGlhbFN0YXRlQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcInBhcnRpYWxTdGF0ZUJ1eUJveF9mZWF0dXJlX2RpdlwifSxcInByaW1lRXhjbHVzaXZlQWNjb3JkaW9uUm93SGVhZGVyXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcImhlYWRlclwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJzcG9uc29yZWRQcm9kdWN0c1wiOntcImRpdlRvVXBkYXRlXCI6XCJzcG9uc29yZWRQcm9kdWN0c19mZWF0dXJlX2RpdlwifSxcInNlcnZpY2VzSW50ZXJzdGl0aWFsXCI6e1wiZGl2VG9VcGRhdGVcIjpcInNlcnZpY2VzSW50ZXJzdGl0aWFsX2ZlYXR1cmVfZGl2XCJ9LFwiYnV5Ym94cHJpbWVcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwidXNlZEJ1eUJveFNoaXBwaW5nTWVzc2FnZVwiOntcImRpdlRvVXBkYXRlXCI6XCJ1c2VkQnV5Qm94U2hpcHBpbmdNZXNzYWdlX2ZlYXR1cmVfZGl2XCJ9LFwicHJpbWVFeGNsdXNpdmVCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicHJpbWVFeGNsdXNpdmVCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJwcm9taXNlQmFzZWRCYWRnZVwiOntcImRpdlRvVXBkYXRlXCI6XCJwcm9taXNlQmFzZWRCYWRnZV9mZWF0dXJlX2RpdlwifSxcInNpemVDaGFydFVybFwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJwcnN1YnN3aWRnZXRcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicHJzdWJzd2lkZ2V0X2ZlYXR1cmVfZGl2XCJ9LFwiYWxtTXVsdGlPZmZlckVncmVzc1wiOntcImRpdlRvVXBkYXRlXCI6XCJhbG1NdWx0aU9mZmVyRWdyZXNzX2ZlYXR1cmVfZGl2XCJ9LFwic2hpcHBpbmdNZXNzYWdlSW5zaWRlQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcInNoaXBwaW5nTWVzc2FnZUluc2lkZUJ1eUJveF9mZWF0dXJlX2RpdlwifSxcImFwdWJQcmltZUZpcnN0XCI6e1wiZGl2VG9VcGRhdGVcIjpcImFwdWJQcmltZUZpcnN0X2ZlYXR1cmVfZGl2XCJ9LFwicHdPbmJvYXJkaW5nSGludFwiOntcImRpdlRvVXBkYXRlXCI6XCJwd09uYm9hcmRpbmdIaW50X2ZlYXR1cmVfZGl2XCJ9LFwic25zQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcInNuc0J1eUJveF9mZWF0dXJlX2RpdlwifSxcInNvZnRsaW5lc1RlY2huaWNhbFNwZWNpZmljYXRpb25zTGlua1wiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJzaW1wbGVCdW5kbGVWMlwiOntcImRpdlRvVXBkYXRlXCI6XCJzaW1wbGVCdW5kbGVWMl9mZWF0dXJlX2RpdlwifSxcInRpdGxlXCI6e1wiZGl2VG9VcGRhdGVcIjpcInRpdGxlX2ZlYXR1cmVfZGl2XCJ9LFwiYjJiQWNjb3JkaW9uUm93SGVhZGVyXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInByb2R1Y3RPdmVydmlld1wiOntcImRpdlRvVXBkYXRlXCI6XCJwcm9kdWN0T3ZlcnZpZXdfZmVhdHVyZV9kaXZcIn0sXCJkZXRhaWxCdWxsZXRzXCI6e1wiZGl2VG9VcGRhdGVcIjpcImRldGFpbEJ1bGxldHNfZmVhdHVyZV9kaXZcIn0sXCJmdEN1c3RvbWVyQ29udGV4dFwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJwd0NvbnRyb2xsZXJcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicHdDb250cm9sbGVyX2ZlYXR1cmVfZGl2XCJ9LFwidGVjaG5pY2FsU3BlY2lmaWNhdGlvbnNcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidGVjaG5pY2FsU3BlY2lmaWNhdGlvbnNfZmVhdHVyZV9kaXZcIn0sXCJ1bmF2YWlsYWJsZU5ld0FjY29yZGlvblJvd0NvbnRlbnRcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwicHJvZHVjdEFkc0J1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJwcm9kdWN0QWRzQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwicHJvZ3Jlc3NCYXJcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicHJvZ3Jlc3NCYXJfZmVhdHVyZV9kaXZcIn0sXCJ6ZWl0Z2Vpc3RCYWRnZVwiOntcImRpdlRvVXBkYXRlXCI6XCJ6ZWl0Z2Vpc3RCYWRnZV9mZWF0dXJlX2RpdlwifSxcImFwbHVzM3BcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYXBsdXMzcF9mZWF0dXJlX2RpdlwifSxcInJlZGlyZWN0aW9uXCI6e1wiZGl2VG9VcGRhdGVcIjpcInJlZGlyZWN0aW9uX2ZlYXR1cmVfZGl2XCJ9LFwiYWRkT25NZXNzYWdlXCI6e1wiZGl2VG9VcGRhdGVcIjpcImFkZE9uTWVzc2FnZV9mZWF0dXJlX2RpdlwifSxcImNzcEFjY29yZGlvblJvd0hlYWRlclwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJ1c2VkQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcInVzZWRCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJxdWFudGl0eVwiOntcImRpdlRvVXBkYXRlXCI6XCJxdWFudGl0eV9mZWF0dXJlX2RpdlwifSxcImRpZ2l0YWxEYXNoSGlnaFByb21pbmVuY2VcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZGlnaXRhbERhc2hIaWdoUHJvbWluZW5jZV9mZWF0dXJlX2RpdlwifSxcImR5bmFtaWNJZnJhbWVcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZHluYW1pY0lmcmFtZV9mZWF0dXJlX2RpdlwifSxcImJ1eWJveGJhZGdlXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcIm5ld2VyVmVyc2lvblwiOntcImRpdlRvVXBkYXRlXCI6XCJuZXdlclZlcnNpb25fZmVhdHVyZV9kaXZcIn0sXCJhZGRUb1dpc2hsaXN0QWNjb3JkaW9uXCI6e1wiZGl2VG9VcGRhdGVcIjpcImFkZFRvV2lzaGxpc3RBY2NvcmRpb25fZmVhdHVyZV9kaXZcIn0sXCJvcmlnaW5hbFBhY2thZ2luZ01lc3NhZ2VJbnNpZGVCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwib3JpZ2luYWxQYWNrYWdpbmdNZXNzYWdlSW5zaWRlQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwiZGlnaXRhbEJ1eUJveExheW91dFwiOntcImRpdlRvVXBkYXRlXCI6XCJkaWdpdGFsQnV5Qm94TGF5b3V0X2ZlYXR1cmVfZGl2XCJ9LFwic2hvd09mZmVySW5mb09ubHlcIjp7XCJkaXZUb1VwZGF0ZVwiOlwic2hvd09mZmVySW5mb09ubHlfZmVhdHVyZV9kaXZcIn0sXCJhcGx1c1wiOntcImRpdlRvVXBkYXRlXCI6XCJhcGx1c19mZWF0dXJlX2RpdlwifSxcImhiYUxhYmVsXCI6e1wiZGl2VG9VcGRhdGVcIjpcImhiYUxhYmVsX2ZlYXR1cmVfZGl2XCJ9LFwiZGVhbE9mZmVyXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInJldmlld3MtaHJcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwicmVkZW1wdGlvblwiOntcImRpdlRvVXBkYXRlXCI6XCJyZWRlbXB0aW9uX2ZlYXR1cmVfZGl2XCJ9LFwiZGlnaXRhbERhc2hIaWdoUHJvbWluZW5jZUFjY29yZGlvblwiOntcImRpdlRvVXBkYXRlXCI6XCJkaWdpdGFsRGFzaEhpZ2hQcm9taW5lbmNlQWNjb3JkaW9uX2ZlYXR1cmVfZGl2XCJ9LFwicHJpbWVQcmljZUJhZGdpbmdcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiaW1wb3J0YW50SW5mb3JtYXRpb25cIjp7XCJkaXZUb1VwZGF0ZVwiOlwiaW1wb3J0YW50SW5mb3JtYXRpb25fZmVhdHVyZV9kaXZcIn0sXCJvdXRPZlN0b2NrQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcIm91dE9mU3RvY2tCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJITENYQ29tcGFyaXNvbldpZGdldFwiOntcImRpdlRvVXBkYXRlXCI6XCJITENYQ29tcGFyaXNvbldpZGdldF9mZWF0dXJlX2RpdlwifSxcImFwbHVzQnJhbmRTdG9yeVwiOntcImRpdlRvVXBkYXRlXCI6XCJhcGx1c0JyYW5kU3RvcnlfZmVhdHVyZV9kaXZcIn0sXCJ1c2VkQnV5Qm94QnV5Tm93XCI6e1wiZGl2VG9VcGRhdGVcIjpcInVzZWRCdXlCb3hCdXlOb3dfZmVhdHVyZV9kaXZcIn19LFwidHdpc3RlclwiOntcInBvaW50c0luc2lkZUJ1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJwb2ludHNJbnNpZGVCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJwcmltZUVhcmx5QWNjZXNzXCI6e1wiZGl2VG9VcGRhdGVcIjpcInByaW1lRWFybHlBY2Nlc3NfZmVhdHVyZV9kaXZcIn0sXCJjdXN0b21lckluZm9cIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwic2hpcHBpbmdNZXNzYWdlXCI6e1wiZGl2VG9VcGRhdGVcIjpcInNoaXBwaW5nTWVzc2FnZV9mZWF0dXJlX2RpdlwifSxcImlzc3VhbmNlUHJpY2VibG9ja0FtYWJvdFwiOntcImRpdlRvVXBkYXRlXCI6XCJpc3N1YW5jZVByaWNlYmxvY2tBbWFib3RfZmVhdHVyZV9kaXZcIn0sXCJjcHNpYVByb2R1Y3RTYWZldHlXYXJuaW5nXCI6e1wiZGl2VG9VcGRhdGVcIjpcImNwc2lhUHJvZHVjdFNhZmV0eVdhcm5pbmdfZmVhdHVyZV9kaXZcIn0sXCJiYm9wXCI6e1wiZGl2VG9VcGRhdGVcIjpcImJib3BfZmVhdHVyZV9kaXZcIn0sXCJkZXhcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiYWNjZXNzb3J5VXBzZWxsQW1hYm90XCI6e1wiZGl2VG9VcGRhdGVcIjpcImFjY2Vzc29yeVVwc2VsbEFtYWJvdF9mZWF0dXJlX2RpdlwifSxcInJlbnRBY2NvcmRpb25Sb3dIZWFkZXJcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiYW1zRGV0YWlsUmlnaHRcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYW1zRGV0YWlsUmlnaHRfZmVhdHVyZV9kaXZcIn0sXCJzb2Z0bGluZXNBdGZEZWNsdXR0ZXJcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiY2VyYmVydXNcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiY2VyYmVydXNfZmVhdHVyZV9kaXZcIn0sXCJzY2hlZHVsZWREZWxpdmVyeVwiOntcImRpdlRvVXBkYXRlXCI6XCJzY2hlZHVsZWREZWxpdmVyeV9mZWF0dXJlX2RpdlwifSxcInByb2R1Y3REZXNjcmlwdGlvblwiOntcImRpdlRvVXBkYXRlXCI6XCJkcF9wcm9kdWN0RGVzY3JpcHRpb25fY29udGFpbmVyX2RpdlwifSxcImRpZ2l0YWxEYXNoTG93UHJvbWluZW5jZVwiOntcImRpdlRvVXBkYXRlXCI6XCJkaWdpdGFsRGFzaExvd1Byb21pbmVuY2VfZmVhdHVyZV9kaXZcIn0sXCJiYmdcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYmJnX2ZlYXR1cmVfZGl2XCJ9LFwidW5xdWFsaWZpZWRCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidW5xdWFsaWZpZWRCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJiMmJBY2NvcmRpb25Sb3dDb250ZW50XCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInByaW1lRXhjbHVzaXZlQmFkZ2VcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicHJpbWVFeGNsdXNpdmVCYWRnZV9mZWF0dXJlX2RpdlwifSxcInR3aXN0ZXJEZXNjcmlwdGlvblwiOntcImRpdlRvVXBkYXRlXCI6XCJ0d2lzdGVyX2Rlc2NyaXB0aW9uX2RpdlwifSxcImVkcFBvcG92ZXJDb250ZW50XCI6e1wiZGl2VG9VcGRhdGVcIjpcImVkcFBvcG92ZXJDb250ZW50X2ZlYXR1cmVfZGl2XCJ9LFwidHJhZGVJbnN0YW50U2F2aW5nc1wiOntcImRpdlRvVXBkYXRlXCI6XCJ0cmFkZUluc3RhbnRTYXZpbmdzX2ZlYXR1cmVfZGl2XCJ9LFwibW9iYl9hdmFpbGFiaWxpdHlcIjp7XCJkaXZUb1VwZGF0ZVwiOlwibW9iYl9hdmFpbGFiaWxpdHlfZmVhdHVyZV9kaXZcIn0sXCJvbHBcIjp7XCJkaXZUb1VwZGF0ZVwiOlwib2xwX2ZlYXR1cmVfZGl2XCJ9LFwiYXZlcmFnZUN1c3RvbWVyUmV2aWV3c1wiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJmZWF0dXJlYnVsbGV0c1wiOntcImRpdlRvVXBkYXRlXCI6XCJmZWF0dXJlYnVsbGV0c19mZWF0dXJlX2RpdlwifSxcInB3QnV5Qm94QWNjb3JkaW9uUm93Q29udGVudFwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJhdmFpbEZyb21QQ1wiOntcImRpdlRvVXBkYXRlXCI6XCJhdmFpbEZyb21QQ19mZWF0dXJlX2RpdlwifSxcImFtYXpvbkdsb2JhbFwiOntcImRpdlRvVXBkYXRlXCI6XCJhbWF6b25HbG9iYWxfZmVhdHVyZV9kaXZcIn0sXCJzb2xkQnlUaGlyZFBhcnR5XCI6e1wiZGl2VG9VcGRhdGVcIjpcInNvbGRCeVRoaXJkUGFydHlfZmVhdHVyZV9kaXZcIn0sXCJwcmltZUV4Y2x1c2l2ZUJ1eWJveFVwc2VsbFwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJzb2xkQnlUaGlyZFBhcnR5UmVsb2NhdGVcIjp7XCJkaXZUb1VwZGF0ZVwiOlwic29sZEJ5VGhpcmRQYXJ0eVJlbG9jYXRlX2ZlYXR1cmVfZGl2XCJ9LFwiZGVhbHNCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZGVhbHNCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJnb2xkYm94SlNTY3JpcHRcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZ29sZGJveEpTU2NyaXB0X2ZlYXR1cmVfZGl2XCJ9LFwicXVhbnRpdHlMYXlvdXRIaWdoXCI6e1wiZGl2VG9VcGRhdGVcIjpcInF1YW50aXR5TGF5b3V0SGlnaF9mZWF0dXJlX2RpdlwifSxcInRmeFwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJhdmFpbGFiaWxpdHlcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYXZhaWxhYmlsaXR5X2ZlYXR1cmVfZGl2XCJ9LFwiYnVuZGxlVjJcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYnVuZGxlVjJfZmVhdHVyZV9kaXZcIn0sXCJidXNpbmVzc1ByaWNpbmdcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYnVzaW5lc3NQcmljaW5nX2ZlYXR1cmVfZGl2XCJ9LFwic21pbGVFbGlnaWJpbGl0eVwiOntcImRpdlRvVXBkYXRlXCI6XCJzbWlsZUVsaWdpYmlsaXR5X2ZlYXR1cmVfZGl2XCJ9LFwicXVhbnRpdHlMYXlvdXRMb3dcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicXVhbnRpdHlMYXlvdXRMb3dfZmVhdHVyZV9kaXZcIn0sXCJhamF4QmxvY2tDb21wb25lbnRzXCI6e1wiZGl2VG9VcGRhdGVcIjpcImFqYXhCbG9ja0NvbXBvbmVudHNfZmVhdHVyZV9kaXZcIn0sXCJkcEZhc3RUcmFja0luc2lkZUJ1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJkcEZhc3RUcmFja0luc2lkZUJ1eUJveF9mZWF0dXJlX2RpdlwifSxcImdpdmVhd2F5XCI6e1wiZGl2VG9VcGRhdGVcIjpcImdpdmVhd2F5X2ZlYXR1cmVfZGl2XCJ9LFwibW9yZUJ1eWluZ0Nob2ljZXNcIjp7XCJkaXZUb1VwZGF0ZVwiOlwibW9yZUJ1eWluZ0Nob2ljZXNfZmVhdHVyZV9kaXZcIn0sXCJnbG9iYWxTdG9yZUJhZGdlUG9wb3ZlclwiOntcImRpdlRvVXBkYXRlXCI6XCJnbG9iYWxTdG9yZUJhZGdlUG9wb3Zlcl9mZWF0dXJlX2RpdlwifSxcImFkZHJlc3NcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiaW5zdGFsbG1lbnRQYXltZW50XCI6e1wiZGl2VG9VcGRhdGVcIjpcImluc3RhbGxtZW50UGF5bWVudF9mZWF0dXJlX2RpdlwifSxcImNsaWNrVG9Db250YWN0XCI6e1wiZGl2VG9VcGRhdGVcIjpcImNsaWNrVG9Db250YWN0X2ZlYXR1cmVfZGl2XCJ9LFwic2hpcHNGcm9tU29sZEJ5SW5zaWRlQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcInNoaXBzRnJvbVNvbGRCeUluc2lkZUJ1eUJveF9mZWF0dXJlX2RpdlwifSxcImFzZ1wiOntcImRpdlRvVXBkYXRlXCI6XCJhc2dfZmVhdHVyZV9kaXZcIn0sXCJhc2tcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYXNrX2ZlYXR1cmVfZGl2XCJ9LFwiZ2lmdENhcmRIb2xpZGF5QXZhaWxhYmlsaXR5TWVzc2FnaW5nXCI6e1wiZGl2VG9VcGRhdGVcIjpcImdpZnRjYXJkLWhvbGlkYXktYXZhaWxhYmlsaXR5LW1lc3NhZ2luZ19mZWF0dXJlX2RpdlwifSxcInVzZWRCdXlCb3hTb2xkQnlcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidXNlZEJ1eUJveFNvbGRCeV9mZWF0dXJlX2RpdlwifSxcImdmaXhcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiYW5kb25Db3JkXCI6e1wiZGl2VG9VcGRhdGVcIjpcImFuZG9uQ29yZF9mZWF0dXJlX2RpdlwifSxcInNoYXJlSW5mb1wiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJjcm9zc0JvcmRlcldpZGdldFwiOntcImRpdlRvVXBkYXRlXCI6XCJjcm9zc0JvcmRlcldpZGdldF9mZWF0dXJlX2RpdlwifSxcImdsb2JhbFN0b3JlSW5mb0J1bGxldHNcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZ2xvYmFsU3RvcmVJbmZvQnVsbGV0c19mZWF0dXJlX2RpdlwifSxcInByaW1leHBcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwicmVjb21tZW5kYXRpb25zXCI6e1wiZGl2VG9VcGRhdGVcIjpcInJlY29tbWVuZGF0aW9uc19mZWF0dXJlX2RpdlwifSxcInNwb25zb3JlZFByb2R1Y3RzMlwiOntcImRpdlRvVXBkYXRlXCI6XCJzcG9uc29yZWRQcm9kdWN0czJfZmVhdHVyZV9kaXZcIn0sXCJob2xpZGF5RGVsaXZlcnlNZXNzYWdlXCI6e1wiZGl2VG9VcGRhdGVcIjpcImhvbGlkYXlEZWxpdmVyeU1lc3NhZ2VfZmVhdHVyZV9kaXZcIn0sXCJnMnMyU2l6ZUNoYXJ0XCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcImhlcm9RdWlja1Byb21vXCI6e1wiZGl2VG9VcGRhdGVcIjpcImhlcm9RdWlja1Byb21vX2ZlYXR1cmVfZGl2XCJ9LFwibGVnYWxcIjp7XCJkaXZUb1VwZGF0ZVwiOlwibGVnYWxfZmVhdHVyZV9kaXZcIn0sXCJkaWdpdGFsRGFzaExvd1Byb21pbmVuY2VBY2NvcmRpb25cIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZGlnaXRhbERhc2hMb3dQcm9taW5lbmNlQWNjb3JkaW9uX2ZlYXR1cmVfZGl2XCJ9LFwicHdCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicHdCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJhY2Nlc3NvcnlVcHNlbGxCdGZcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYWNjZXNzb3J5VXBzZWxsQnRmX2ZlYXR1cmVfZGl2XCJ9LFwidW5pZmllZExvY2F0aW9uXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcImFkZFRvV2lzaGxpc3RcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYWRkVG9XaXNobGlzdF9mZWF0dXJlX2RpdlwifSxcImZyZWVTaGlwcGluZ1ByaWNlQmFkZ2luZ1wiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJzb2NpYWxGYWJyaWNcIjp7XCJkaXZUb1VwZGF0ZVwiOlwic29jaWFsRmFicmljX2ZlYXR1cmVfZGl2XCJ9LFwic2hpcHNGcm9tU29sZEJ5XCI6e1wiZGl2VG9VcGRhdGVcIjpcInNoaXBzRnJvbVNvbGRCeV9mZWF0dXJlX2RpdlwifSxcInByb21pc2VCYXNlZEJhZGdlSW5zaWRlQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcInByb21pc2VCYXNlZEJhZGdlSW5zaWRlQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwidm9sdGFnZUNvbXBsaWFuY2VcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidm9sdGFnZUNvbXBsaWFuY2VfZmVhdHVyZV9kaXZcIn0sXCJlZHBJbmdyZXNzXCI6e1wiZGl2VG9VcGRhdGVcIjpcImVkcEluZ3Jlc3NfZmVhdHVyZV9kaXZcIn0sXCJnbG93Q29udGV4dHVhbEluZ3Jlc3NQdFwiOntcImRpdlRvVXBkYXRlXCI6XCJnbG93Q29udGV4dHVhbEluZ3Jlc3NQdF9mZWF0dXJlX2RpdlwifSxcImJ1eWJveHByaW1lXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInByb21pc2VCYXNlZEJhZGdlXCI6e1wiZGl2VG9VcGRhdGVcIjpcInByb21pc2VCYXNlZEJhZGdlX2ZlYXR1cmVfZGl2XCJ9LFwiYWxtTXVsdGlPZmZlckVncmVzc1wiOntcImRpdlRvVXBkYXRlXCI6XCJhbG1NdWx0aU9mZmVyRWdyZXNzX2ZlYXR1cmVfZGl2XCJ9LFwiYXB1YlByaW1lRmlyc3RcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYXB1YlByaW1lRmlyc3RfZmVhdHVyZV9kaXZcIn0sXCJwd09uYm9hcmRpbmdIaW50XCI6e1wiZGl2VG9VcGRhdGVcIjpcInB3T25ib2FyZGluZ0hpbnRfZmVhdHVyZV9kaXZcIn0sXCJzbnNCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwic25zQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwidGl0bGVcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidGl0bGVfZmVhdHVyZV9kaXZcIn0sXCJiMmJBY2NvcmRpb25Sb3dIZWFkZXJcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiZnRDdXN0b21lckNvbnRleHRcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiYWx0ZXJuYXRpdmVPZmZlckVsaWdpYmlsaXR5TWVzc2FnaW5nXCI6e1wiZGl2VG9VcGRhdGVcIjpcImFsdGVybmF0aXZlT2ZmZXJFbGlnaWJpbGl0eU1lc3NhZ2luZ19mZWF0dXJlX2RpdlwifSxcImNzcEFjY29yZGlvblJvd0hlYWRlclwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJ1c2VkQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcInVzZWRCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJidXlib3hiYWRnZVwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJpbWFnZUJsb2NrVmFyaWF0aW9uc1wiOntcImRpdlRvVXBkYXRlXCI6XCJpbWFnZUJsb2NrVmFyaWF0aW9uc19mZWF0dXJlX2RpdlwifSxcImRpZ2l0YWxCdXlCb3hMYXlvdXRcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZGlnaXRhbEJ1eUJveExheW91dF9mZWF0dXJlX2RpdlwifSxcImFwbHVzXCI6e1wiZGl2VG9VcGRhdGVcIjpcImFwbHVzX2ZlYXR1cmVfZGl2XCJ9LFwicmV2aWV3cy1oclwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJyZWRlbXB0aW9uXCI6e1wiZGl2VG9VcGRhdGVcIjpcInJlZGVtcHRpb25fZmVhdHVyZV9kaXZcIn0sXCJkaWdpdGFsRGFzaEhpZ2hQcm9taW5lbmNlQWNjb3JkaW9uXCI6e1wiZGl2VG9VcGRhdGVcIjpcImRpZ2l0YWxEYXNoSGlnaFByb21pbmVuY2VBY2NvcmRpb25fZmVhdHVyZV9kaXZcIn0sXCJpbXBvcnRhbnRJbmZvcm1hdGlvblwiOntcImRpdlRvVXBkYXRlXCI6XCJpbXBvcnRhbnRJbmZvcm1hdGlvbl9mZWF0dXJlX2RpdlwifSxcIm91dE9mU3RvY2tCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwib3V0T2ZTdG9ja0J1eUJveF9mZWF0dXJlX2RpdlwifSxcImFwbHVzQnJhbmRTdG9yeVwiOntcImRpdlRvVXBkYXRlXCI6XCJhcGx1c0JyYW5kU3RvcnlfZmVhdHVyZV9kaXZcIn0sXCJtb2JiX3NoaXBzRnJvbVNvbGRCeVwiOntcImRpdlRvVXBkYXRlXCI6XCJtb2JiX3NoaXBzRnJvbVNvbGRCeV9mZWF0dXJlX2RpdlwifSxcInVzZWRBY2NvcmRpb25Sb3dIZWFkZXJcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwicHJvZHVjdEFkc0ZlZWRiYWNrXCI6e1wiZGl2VG9VcGRhdGVcIjpcInByb2R1Y3QtYWRzLWZlZWRiYWNrX2ZlYXR1cmVfZGl2XCJ9LFwidHdpc3RlclV0aWxzXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInNtYXJ0Q3VzdG9tZXJMb2NhdGlvblwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJjb3Vwb25Db3VudFwiOntcImRpdlRvVXBkYXRlXCI6XCJjb3Vwb25Db3VudF9mZWF0dXJlX2RpdlwifSxcInR3aXN0ZXJEaW1lbnNpb25TbG90c1wiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJvbmVDbGlja1wiOntcImRpdlRvVXBkYXRlXCI6XCJvbmVDbGlja19mZWF0dXJlX2RpdlwifSxcInB3VGVlbk1lc3NhZ2luZ1wiOntcImRpdlRvVXBkYXRlXCI6XCJwd1RlZW5NZXNzYWdpbmdfZmVhdHVyZV9kaXZcIn0sXCJtb2JiX2FsdGVybmF0aXZlT2ZmZXJFbGlnaWJpbGl0eU1lc3NhZ2luZ1wiOntcImRpdlRvVXBkYXRlXCI6XCJtb2JiX2FsdGVybmF0aXZlT2ZmZXJFbGlnaWJpbGl0eU1lc3NhZ2luZ19mZWF0dXJlX2RpdlwifSxcInJlbnRBY2NvcmRpb25Sb3dDb250ZW50XCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcImx3Y2ZcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiYjJicmRCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYjJicmRCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJza3lDaXR5U29mdE1lcmdlXCI6e1wiZGl2VG9VcGRhdGVcIjpcInNreUNpdHlTb2Z0TWVyZ2VfZmVhdHVyZV9kaXZcIn0sXCJkZWZhdWx0U2hpcHBpbmdBZGRyZXNzXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcIm5vbnByaW1lcHJvZHVjdFwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJoaWdoVmFsdWVNZXNzYWdpbmdcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiaGlnaFZhbHVlTWVzc2FnaW5nX2ZlYXR1cmVfZGl2XCJ9LFwidGVsbEFGcmllbmRCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidGVsbEFGcmllbmRCb3hfZmVhdHVyZV9kaXZcIn0sXCJlbXdhQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcImVtd2FCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJicm93c2VcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZHBfYnJvd3NlX2NvbnRhaW5lcl9kaXZcIn0sXCJ1bmF2YWlsYWJsZU5ld0FjY29yZGlvblJvd0hlYWRlclwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJhZGRPbkl0ZW1cIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYWRkT25JdGVtX2ZlYXR1cmVfZGl2XCJ9LFwibXVsdGlwbGVSZWNvbW1lbmRhdGlvbnNcIjp7XCJkaXZUb1VwZGF0ZVwiOlwibXVsdGlwbGVSZWNvbW1lbmRhdGlvbnNfZmVhdHVyZV9kaXZcIn0sXCJjb21wYW55Q29tcGxpYW5jZVBvbGljaWVzXCI6e1wiZGl2VG9VcGRhdGVcIjpcImNvbXBhbnlDb21wbGlhbmNlUG9saWNpZXNfZmVhdHVyZV9kaXZcIn0sXCJhdmFpbGFiaWxpdHlJbnNpZGVCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYXZhaWxhYmlsaXR5SW5zaWRlQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwidHJhZGVJbkluc3RhbnRTYXZpbmdzXCI6e1wiZGl2VG9VcGRhdGVcIjpcInRyYWRlSW5JbnN0YW50U2F2aW5nc19mZWF0dXJlX2RpdlwifSxcInNvZnRsaW5lc1R3aXN0ZXJcIjp7XCJkaXZUb1VwZGF0ZVwiOlwic29mdGxpbmVzVHdpc3Rlcl9mZWF0dXJlX2RpdlwifSxcImJ1c2luZXNzT25seVNlbGVjdGlvbkJ1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJidXNpbmVzc09ubHlTZWxlY3Rpb25CdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJtczNcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiaW52aXRlUGxhdGZvcm1cIjp7XCJkaXZUb1VwZGF0ZVwiOlwiaW52aXRlUGxhdGZvcm1fZmVhdHVyZV9kaXZcIn0sXCJwd0J1eUJveEFjY29yZGlvblJvd0hlYWRlclwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJwcmVBZGRUb0NhcnRGcmFtZXdvcmtcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicHJlQWRkVG9DYXJ0RnJhbWV3b3JrX2ZlYXR1cmVfZGl2XCJ9LFwiYnlsaW5lSW5mb1wiOntcImRpdlRvVXBkYXRlXCI6XCJieWxpbmVJbmZvX2ZlYXR1cmVfZGl2XCJ9LFwiYWRkVG9DYXJ0XCI6e1wiZGl2VG9VcGRhdGVcIjpcImFkZFRvQ2FydF9mZWF0dXJlX2RpdlwifSxcImFjQmFkZ2VcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYWNCYWRnZV9mZWF0dXJlX2RpdlwifSxcInZlbmRvclBvd2VyZWRDb3Vwb25cIjp7XCJkaXZUb1VwZGF0ZVwiOlwidmVuZG9yUG93ZXJlZENvdXBvbl9mZWF0dXJlX2RpdlwifSxcInByb2R1Y3RBbGVydFwiOntcImRpdlRvVXBkYXRlXCI6XCJwcm9kdWN0QWxlcnRfZmVhdHVyZV9kaXZcIn0sXCJ2YWx1ZVBpY2tcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidmFsdWVQaWNrX2ZlYXR1cmVfZGl2XCJ9LFwicHJpbWVFeGNsdXNpdmVBY2NvcmRpb25Sb3dDb250ZW50XCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcIm1iYlwiOntcImRpdlRvVXBkYXRlXCI6XCJtYmJfZmVhdHVyZV9kaXZcIn0sXCJwcm9tb3Rpb25zXCI6e1wiZGl2VG9VcGRhdGVcIjpcInByb21vdGlvbnNfZmVhdHVyZV9kaXZcIn0sXCJ0d2lzdGVyXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcImluc3RhbnRPcmRlclVwZGF0ZVwiOntcImRpdlRvVXBkYXRlXCI6XCJpbnN0YW50T3JkZXJVcGRhdGVfZmVhdHVyZV9kaXZcIn0sXCJ1c2VkQnV5Qm94Q29uZGl0aW9uXCI6e1wiZGl2VG9VcGRhdGVcIjpcInVzZWRCdXlCb3hDb25kaXRpb25fZmVhdHVyZV9kaXZcIn0sXCJ5dXJla2FCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwieXVyZWthQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwiYWRkT25XaWRnZXRzXCI6e1wiZGl2VG9VcGRhdGVcIjpcImFkZE9uV2lkZ2V0c19mZWF0dXJlX2RpdlwifSxcImRldGFpbFBhZ2VHaWZ0aW5nXCI6e1wiZGl2VG9VcGRhdGVcIjpcImRldGFpbFBhZ2VHaWZ0aW5nX2ZlYXR1cmVfZGl2XCJ9LFwiY3NwQWNjb3JkaW9uUm93Q29udGVudFwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJhbWF6b25DdXN0b21CdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYW1hem9uQ3VzdG9tQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwicXVhbnRpdHlSZWxvY2F0ZVwiOntcImRpdlRvVXBkYXRlXCI6XCJxdWFudGl0eVJlbG9jYXRlX2ZlYXR1cmVfZGl2XCJ9LFwiR2VvZ3JhcGhpY2FsbHlSZXN0cmljdGVkQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcIkdlb2dyYXBoaWNhbGx5UmVzdHJpY3RlZEJ1eUJveF9mZWF0dXJlX2RpdlwifSxcImRwRmFzdFRyYWNrXCI6e1wiZGl2VG9VcGRhdGVcIjpcImRwRmFzdFRyYWNrX2ZlYXR1cmVfZGl2XCJ9LFwiYnV5Tm93XCI6e1wiZGl2VG9VcGRhdGVcIjpcImJ1eU5vd19mZWF0dXJlX2RpdlwifSxcInVzc1wiOntcImRpdlRvVXBkYXRlXCI6XCJ1c3NfZmVhdHVyZV9kaXZcIn0sXCJpbWFnZUJsb2NrXCI6e1wiZGl2VG9VcGRhdGVcIjpcImltYWdlQmxvY2tfZmVhdHVyZV9kaXZcIn0sXCJjb21ib09mZmVyQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcImNvbWJvT2ZmZXJCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJ1bmlmaWVkUHJpY2VcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidW5pZmllZFByaWNlX2ZlYXR1cmVfZGl2XCJ9LFwibmV3QWNjb3JkaW9uUm93SGVhZGVyXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInByaWNlSW5zaWRlQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcInByaWNlSW5zaWRlQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwidXNlZEJ1eUJveEFkZFRvQ2FydFwiOntcImRpdlRvVXBkYXRlXCI6XCJ1c2VkQnV5Qm94QWRkVG9DYXJ0X2ZlYXR1cmVfZGl2XCJ9LFwidXNzSW5pdFwiOntcImRpdlRvVXBkYXRlXCI6XCJ1c3NJbml0X2ZlYXR1cmVfZGl2XCJ9LFwidXNlZEJ1eUJveE9uZUNsaWNrXCI6e1wiZGl2VG9VcGRhdGVcIjpcInVzZWRCdXlCb3hPbmVDbGlja19mZWF0dXJlX2RpdlwifSxcInBtcHV4XCI6e1wiZGl2VG9VcGRhdGVcIjpcInBtcHV4X2ZlYXR1cmVfZGl2XCJ9LFwicGFydGlhbFN0YXRlQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcInBhcnRpYWxTdGF0ZUJ1eUJveF9mZWF0dXJlX2RpdlwifSxcInByaW1lRXhjbHVzaXZlQWNjb3JkaW9uUm93SGVhZGVyXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcImhlYWRlclwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJzcG9uc29yZWRQcm9kdWN0c1wiOntcImRpdlRvVXBkYXRlXCI6XCJzcG9uc29yZWRQcm9kdWN0c19mZWF0dXJlX2RpdlwifSxcInNlcnZpY2VzSW50ZXJzdGl0aWFsXCI6e1wiZGl2VG9VcGRhdGVcIjpcInNlcnZpY2VzSW50ZXJzdGl0aWFsX2ZlYXR1cmVfZGl2XCJ9LFwidXNlZEJ1eUJveFNoaXBwaW5nTWVzc2FnZVwiOntcImRpdlRvVXBkYXRlXCI6XCJ1c2VkQnV5Qm94U2hpcHBpbmdNZXNzYWdlX2ZlYXR1cmVfZGl2XCJ9LFwicHJpbWVFeGNsdXNpdmVCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicHJpbWVFeGNsdXNpdmVCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJzaXplQ2hhcnRVcmxcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwicHJzdWJzd2lkZ2V0XCI6e1wiZGl2VG9VcGRhdGVcIjpcInByc3Vic3dpZGdldF9mZWF0dXJlX2RpdlwifSxcInNoaXBwaW5nTWVzc2FnZUluc2lkZUJ1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJzaGlwcGluZ01lc3NhZ2VJbnNpZGVCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJhcHBsaWNhYmxlUHJvbW90aW9uTGlzdFwiOntcImRpdlRvVXBkYXRlXCI6XCJhcHBsaWNhYmxlUHJvbW90aW9uTGlzdF9mZWF0dXJlX2RpdlwifSxcInNvZnRsaW5lc1RlY2huaWNhbFNwZWNpZmljYXRpb25zTGlua1wiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJzaW1wbGVCdW5kbGVWMlwiOntcImRpdlRvVXBkYXRlXCI6XCJzaW1wbGVCdW5kbGVWMl9mZWF0dXJlX2RpdlwifSxcInByb2R1Y3RPdmVydmlld1wiOntcImRpdlRvVXBkYXRlXCI6XCJwcm9kdWN0T3ZlcnZpZXdfZmVhdHVyZV9kaXZcIn0sXCJkZXRhaWxCdWxsZXRzXCI6e1wiZGl2VG9VcGRhdGVcIjpcImRldGFpbEJ1bGxldHNfZmVhdHVyZV9kaXZcIn0sXCJwd0NvbnRyb2xsZXJcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicHdDb250cm9sbGVyX2ZlYXR1cmVfZGl2XCJ9LFwidGVjaG5pY2FsU3BlY2lmaWNhdGlvbnNcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidGVjaG5pY2FsU3BlY2lmaWNhdGlvbnNfZmVhdHVyZV9kaXZcIn0sXCJ1bmF2YWlsYWJsZU5ld0FjY29yZGlvblJvd0NvbnRlbnRcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwicHJvZHVjdEFkc0J1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJwcm9kdWN0QWRzQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwicHJvZ3Jlc3NCYXJcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicHJvZ3Jlc3NCYXJfZmVhdHVyZV9kaXZcIn0sXCJob2xpZGF5QXZhaWxhYmlsaXR5TWVzc2FnZVwiOntcImRpdlRvVXBkYXRlXCI6XCJob2xpZGF5QXZhaWxhYmlsaXR5TWVzc2FnZV9mZWF0dXJlX2RpdlwifSxcInplaXRnZWlzdEJhZGdlXCI6e1wiZGl2VG9VcGRhdGVcIjpcInplaXRnZWlzdEJhZGdlX2ZlYXR1cmVfZGl2XCJ9LFwiYXBsdXMzcFwiOntcImRpdlRvVXBkYXRlXCI6XCJhcGx1czNwX2ZlYXR1cmVfZGl2XCJ9LFwicmVkaXJlY3Rpb25cIjp7XCJkaXZUb1VwZGF0ZVwiOlwicmVkaXJlY3Rpb25fZmVhdHVyZV9kaXZcIn0sXCJhZGRPbk1lc3NhZ2VcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYWRkT25NZXNzYWdlX2ZlYXR1cmVfZGl2XCJ9LFwicXVhbnRpdHlcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicXVhbnRpdHlfZmVhdHVyZV9kaXZcIn0sXCJkaWdpdGFsRGFzaEhpZ2hQcm9taW5lbmNlXCI6e1wiZGl2VG9VcGRhdGVcIjpcImRpZ2l0YWxEYXNoSGlnaFByb21pbmVuY2VfZmVhdHVyZV9kaXZcIn0sXCJkeW5hbWljSWZyYW1lXCI6e1wiZGl2VG9VcGRhdGVcIjpcImR5bmFtaWNJZnJhbWVfZmVhdHVyZV9kaXZcIn0sXCJuZXdlclZlcnNpb25cIjp7XCJkaXZUb1VwZGF0ZVwiOlwibmV3ZXJWZXJzaW9uX2ZlYXR1cmVfZGl2XCJ9LFwiYWRkVG9XaXNobGlzdEFjY29yZGlvblwiOntcImRpdlRvVXBkYXRlXCI6XCJhZGRUb1dpc2hsaXN0QWNjb3JkaW9uX2ZlYXR1cmVfZGl2XCJ9LFwib3JpZ2luYWxQYWNrYWdpbmdNZXNzYWdlSW5zaWRlQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcIm9yaWdpbmFsUGFja2FnaW5nTWVzc2FnZUluc2lkZUJ1eUJveF9mZWF0dXJlX2RpdlwifSxcInNob3dPZmZlckluZm9Pbmx5XCI6e1wiZGl2VG9VcGRhdGVcIjpcInNob3dPZmZlckluZm9Pbmx5X2ZlYXR1cmVfZGl2XCJ9LFwiaGJhTGFiZWxcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiaGJhTGFiZWxfZmVhdHVyZV9kaXZcIn0sXCJkZWFsT2ZmZXJcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwicHJpbWVQcmljZUJhZGdpbmdcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiSExDWENvbXBhcmlzb25XaWRnZXRcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiSExDWENvbXBhcmlzb25XaWRnZXRfZmVhdHVyZV9kaXZcIn0sXCJ1c2VkQnV5Qm94QnV5Tm93XCI6e1wiZGl2VG9VcGRhdGVcIjpcInVzZWRCdXlCb3hCdXlOb3dfZmVhdHVyZV9kaXZcIn19LFwibG9jYXRpb25cIjp7XCJtb3JlQnV5aW5nQ2hvaWNlc1wiOntcImRpdlRvVXBkYXRlXCI6XCJtb3JlQnV5aW5nQ2hvaWNlc19mZWF0dXJlX2RpdlwifSxcImNvbXBhbnlDb21wbGlhbmNlUG9saWNpZXNcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiY29tcGFueUNvbXBsaWFuY2VQb2xpY2llc19mZWF0dXJlX2RpdlwifSxcImFwcGxpY2FibGVQcm9tb3Rpb25MaXN0XCI6e1wiZGl2VG9VcGRhdGVcIjpcImFwcGxpY2FibGVQcm9tb3Rpb25MaXN0X2ZlYXR1cmVfZGl2XCJ9LFwic2hpcHNGcm9tU29sZEJ5XCI6e1wiZGl2VG9VcGRhdGVcIjpcInNoaXBzRnJvbVNvbGRCeV9mZWF0dXJlX2RpdlwifSxcInBtcHV4XCI6e1wiZGl2VG9VcGRhdGVcIjpcInBtcHV4X2ZlYXR1cmVfZGl2XCJ9LFwiYXZhaWxhYmlsaXR5XCI6e1wiZGl2VG9VcGRhdGVcIjpcImF2YWlsYWJpbGl0eV9mZWF0dXJlX2RpdlwifSxcImlzc3VhbmNlUHJpY2VibG9ja0FtYWJvdFwiOntcImRpdlRvVXBkYXRlXCI6XCJpc3N1YW5jZVByaWNlYmxvY2tBbWFib3RfZmVhdHVyZV9kaXZcIn0sXCJob2xpZGF5RGVsaXZlcnlNZXNzYWdlXCI6e1wiZGl2VG9VcGRhdGVcIjpcImhvbGlkYXlEZWxpdmVyeU1lc3NhZ2VfZmVhdHVyZV9kaXZcIn0sXCJidXNpbmVzc1ByaWNpbmdcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYnVzaW5lc3NQcmljaW5nX2ZlYXR1cmVfZGl2XCJ9LFwiZHBGYXN0VHJhY2tcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZHBGYXN0VHJhY2tfZmVhdHVyZV9kaXZcIn0sXCJzbWlsZUVsaWdpYmlsaXR5XCI6e1wiZGl2VG9VcGRhdGVcIjpcInNtaWxlRWxpZ2liaWxpdHlfZmVhdHVyZV9kaXZcIn0sXCJvbHBcIjp7XCJkaXZUb1VwZGF0ZVwiOlwib2xwX2ZlYXR1cmVfZGl2XCJ9LFwiaG9saWRheUF2YWlsYWJpbGl0eU1lc3NhZ2VcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiaG9saWRheUF2YWlsYWJpbGl0eU1lc3NhZ2VfZmVhdHVyZV9kaXZcIn0sXCJhbHRlcm5hdGl2ZU9mZmVyRWxpZ2liaWxpdHlNZXNzYWdpbmdcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYWx0ZXJuYXRpdmVPZmZlckVsaWdpYmlsaXR5TWVzc2FnaW5nX2ZlYXR1cmVfZGl2XCJ9LFwidW5pZmllZFByaWNlXCI6e1wiZGl2VG9VcGRhdGVcIjpcInVuaWZpZWRQcmljZV9mZWF0dXJlX2RpdlwifX0sXCJ1cHNlbGxcIjp7XCJtb3JlQnV5aW5nQ2hvaWNlc1wiOntcImRpdlRvVXBkYXRlXCI6XCJtb3JlQnV5aW5nQ2hvaWNlc19mZWF0dXJlX2RpdlwifSxcImNvbXBhbnlDb21wbGlhbmNlUG9saWNpZXNcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiY29tcGFueUNvbXBsaWFuY2VQb2xpY2llc19mZWF0dXJlX2RpdlwifSxcImFwcGxpY2FibGVQcm9tb3Rpb25MaXN0XCI6e1wiZGl2VG9VcGRhdGVcIjpcImFwcGxpY2FibGVQcm9tb3Rpb25MaXN0X2ZlYXR1cmVfZGl2XCJ9LFwic2hpcHNGcm9tU29sZEJ5XCI6e1wiZGl2VG9VcGRhdGVcIjpcInNoaXBzRnJvbVNvbGRCeV9mZWF0dXJlX2RpdlwifSxcInBtcHV4XCI6e1wiZGl2VG9VcGRhdGVcIjpcInBtcHV4X2ZlYXR1cmVfZGl2XCJ9LFwiYXZhaWxhYmlsaXR5XCI6e1wiZGl2VG9VcGRhdGVcIjpcImF2YWlsYWJpbGl0eV9mZWF0dXJlX2RpdlwifSxcImlzc3VhbmNlUHJpY2VibG9ja0FtYWJvdFwiOntcImRpdlRvVXBkYXRlXCI6XCJpc3N1YW5jZVByaWNlYmxvY2tBbWFib3RfZmVhdHVyZV9kaXZcIn0sXCJob2xpZGF5RGVsaXZlcnlNZXNzYWdlXCI6e1wiZGl2VG9VcGRhdGVcIjpcImhvbGlkYXlEZWxpdmVyeU1lc3NhZ2VfZmVhdHVyZV9kaXZcIn0sXCJidXNpbmVzc1ByaWNpbmdcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYnVzaW5lc3NQcmljaW5nX2ZlYXR1cmVfZGl2XCJ9LFwiZHBGYXN0VHJhY2tcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZHBGYXN0VHJhY2tfZmVhdHVyZV9kaXZcIn0sXCJzbWlsZUVsaWdpYmlsaXR5XCI6e1wiZGl2VG9VcGRhdGVcIjpcInNtaWxlRWxpZ2liaWxpdHlfZmVhdHVyZV9kaXZcIn0sXCJob2xpZGF5QXZhaWxhYmlsaXR5TWVzc2FnZVwiOntcImRpdlRvVXBkYXRlXCI6XCJob2xpZGF5QXZhaWxhYmlsaXR5TWVzc2FnZV9mZWF0dXJlX2RpdlwifSxcImFsdGVybmF0aXZlT2ZmZXJFbGlnaWJpbGl0eU1lc3NhZ2luZ1wiOntcImRpdlRvVXBkYXRlXCI6XCJhbHRlcm5hdGl2ZU9mZmVyRWxpZ2liaWxpdHlNZXNzYWdpbmdfZmVhdHVyZV9kaXZcIn0sXCJ1bmlmaWVkUHJpY2VcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidW5pZmllZFByaWNlX2ZlYXR1cmVfZGl2XCJ9fSxcIm5ld2J1eWJveFwiOntcIm1vYmJfc2hpcHNGcm9tU29sZEJ5XCI6e1wiZGl2VG9VcGRhdGVcIjpcIm1vYmJfc2hpcHNGcm9tU29sZEJ5X2ZlYXR1cmVfZGl2XCJ9LFwicG9pbnRzSW5zaWRlQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcInBvaW50c0luc2lkZUJ1eUJveF9mZWF0dXJlX2RpdlwifSxcInVzZWRBY2NvcmRpb25Sb3dIZWFkZXJcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwicHJpbWVFYXJseUFjY2Vzc1wiOntcImRpdlRvVXBkYXRlXCI6XCJwcmltZUVhcmx5QWNjZXNzX2ZlYXR1cmVfZGl2XCJ9LFwicHJvZHVjdEFkc0ZlZWRiYWNrXCI6e1wiZGl2VG9VcGRhdGVcIjpcInByb2R1Y3QtYWRzLWZlZWRiYWNrX2ZlYXR1cmVfZGl2XCJ9LFwidHdpc3RlclV0aWxzXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInNtYXJ0Q3VzdG9tZXJMb2NhdGlvblwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJjb3Vwb25Db3VudFwiOntcImRpdlRvVXBkYXRlXCI6XCJjb3Vwb25Db3VudF9mZWF0dXJlX2RpdlwifSxcImN1c3RvbWVySW5mb1wiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJ0d2lzdGVyRGltZW5zaW9uU2xvdHNcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwic2hpcHBpbmdNZXNzYWdlXCI6e1wiZGl2VG9VcGRhdGVcIjpcInNoaXBwaW5nTWVzc2FnZV9mZWF0dXJlX2RpdlwifSxcIm9uZUNsaWNrXCI6e1wiZGl2VG9VcGRhdGVcIjpcIm9uZUNsaWNrX2ZlYXR1cmVfZGl2XCJ9LFwiY3BzaWFQcm9kdWN0U2FmZXR5V2FybmluZ1wiOntcImRpdlRvVXBkYXRlXCI6XCJjcHNpYVByb2R1Y3RTYWZldHlXYXJuaW5nX2ZlYXR1cmVfZGl2XCJ9LFwiYmJvcFwiOntcImRpdlRvVXBkYXRlXCI6XCJiYm9wX2ZlYXR1cmVfZGl2XCJ9LFwicHdUZWVuTWVzc2FnaW5nXCI6e1wiZGl2VG9VcGRhdGVcIjpcInB3VGVlbk1lc3NhZ2luZ19mZWF0dXJlX2RpdlwifSxcIm1vYmJfYWx0ZXJuYXRpdmVPZmZlckVsaWdpYmlsaXR5TWVzc2FnaW5nXCI6e1wiZGl2VG9VcGRhdGVcIjpcIm1vYmJfYWx0ZXJuYXRpdmVPZmZlckVsaWdpYmlsaXR5TWVzc2FnaW5nX2ZlYXR1cmVfZGl2XCJ9LFwiZGV4XCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcImFjY2Vzc29yeVVwc2VsbEFtYWJvdFwiOntcImRpdlRvVXBkYXRlXCI6XCJhY2Nlc3NvcnlVcHNlbGxBbWFib3RfZmVhdHVyZV9kaXZcIn0sXCJyZW50QWNjb3JkaW9uUm93SGVhZGVyXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcImFtc0RldGFpbFJpZ2h0XCI6e1wiZGl2VG9VcGRhdGVcIjpcImFtc0RldGFpbFJpZ2h0X2ZlYXR1cmVfZGl2XCJ9LFwic29mdGxpbmVzQXRmRGVjbHV0dGVyXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInJlbnRBY2NvcmRpb25Sb3dDb250ZW50XCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcImNlcmJlcnVzXCI6e1wiZGl2VG9VcGRhdGVcIjpcImNlcmJlcnVzX2ZlYXR1cmVfZGl2XCJ9LFwic2NoZWR1bGVkRGVsaXZlcnlcIjp7XCJkaXZUb1VwZGF0ZVwiOlwic2NoZWR1bGVkRGVsaXZlcnlfZmVhdHVyZV9kaXZcIn0sXCJsd2NmXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcImIyYnJkQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcImIyYnJkQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwic2t5Q2l0eVNvZnRNZXJnZVwiOntcImRpdlRvVXBkYXRlXCI6XCJza3lDaXR5U29mdE1lcmdlX2ZlYXR1cmVfZGl2XCJ9LFwicHJvZHVjdERlc2NyaXB0aW9uXCI6e1wiZGl2VG9VcGRhdGVcIjpcImRwX3Byb2R1Y3REZXNjcmlwdGlvbl9jb250YWluZXJfZGl2XCJ9LFwiZGlnaXRhbERhc2hMb3dQcm9taW5lbmNlXCI6e1wiZGl2VG9VcGRhdGVcIjpcImRpZ2l0YWxEYXNoTG93UHJvbWluZW5jZV9mZWF0dXJlX2RpdlwifSxcImRlZmF1bHRTaGlwcGluZ0FkZHJlc3NcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiYmJnXCI6e1wiZGl2VG9VcGRhdGVcIjpcImJiZ19mZWF0dXJlX2RpdlwifSxcInVucXVhbGlmaWVkQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcInVucXVhbGlmaWVkQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwiYjJiQWNjb3JkaW9uUm93Q29udGVudFwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJub25wcmltZXByb2R1Y3RcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwicHJpbWVFeGNsdXNpdmVCYWRnZVwiOntcImRpdlRvVXBkYXRlXCI6XCJwcmltZUV4Y2x1c2l2ZUJhZGdlX2ZlYXR1cmVfZGl2XCJ9LFwidHdpc3RlckRlc2NyaXB0aW9uXCI6e1wiZGl2VG9VcGRhdGVcIjpcInR3aXN0ZXJfZGVzY3JpcHRpb25fZGl2XCJ9LFwiZWRwUG9wb3ZlckNvbnRlbnRcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZWRwUG9wb3ZlckNvbnRlbnRfZmVhdHVyZV9kaXZcIn0sXCJoaWdoVmFsdWVNZXNzYWdpbmdcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiaGlnaFZhbHVlTWVzc2FnaW5nX2ZlYXR1cmVfZGl2XCJ9LFwidHJhZGVJbnN0YW50U2F2aW5nc1wiOntcImRpdlRvVXBkYXRlXCI6XCJ0cmFkZUluc3RhbnRTYXZpbmdzX2ZlYXR1cmVfZGl2XCJ9LFwibW9iYl9hdmFpbGFiaWxpdHlcIjp7XCJkaXZUb1VwZGF0ZVwiOlwibW9iYl9hdmFpbGFiaWxpdHlfZmVhdHVyZV9kaXZcIn0sXCJhdmVyYWdlQ3VzdG9tZXJSZXZpZXdzXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcImZlYXR1cmVidWxsZXRzXCI6e1wiZGl2VG9VcGRhdGVcIjpcImZlYXR1cmVidWxsZXRzX2ZlYXR1cmVfZGl2XCJ9LFwicHdCdXlCb3hBY2NvcmRpb25Sb3dDb250ZW50XCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcImF2YWlsRnJvbVBDXCI6e1wiZGl2VG9VcGRhdGVcIjpcImF2YWlsRnJvbVBDX2ZlYXR1cmVfZGl2XCJ9LFwiYW1hem9uR2xvYmFsXCI6e1wiZGl2VG9VcGRhdGVcIjpcImFtYXpvbkdsb2JhbF9mZWF0dXJlX2RpdlwifSxcInRlbGxBRnJpZW5kQm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcInRlbGxBRnJpZW5kQm94X2ZlYXR1cmVfZGl2XCJ9LFwic29sZEJ5VGhpcmRQYXJ0eVwiOntcImRpdlRvVXBkYXRlXCI6XCJzb2xkQnlUaGlyZFBhcnR5X2ZlYXR1cmVfZGl2XCJ9LFwiZW13YUJ1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJlbXdhQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwicHJpbWVFeGNsdXNpdmVCdXlib3hVcHNlbGxcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwic29sZEJ5VGhpcmRQYXJ0eVJlbG9jYXRlXCI6e1wiZGl2VG9VcGRhdGVcIjpcInNvbGRCeVRoaXJkUGFydHlSZWxvY2F0ZV9mZWF0dXJlX2RpdlwifSxcImRlYWxzQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcImRlYWxzQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwiYnJvd3NlXCI6e1wiZGl2VG9VcGRhdGVcIjpcImRwX2Jyb3dzZV9jb250YWluZXJfZGl2XCJ9LFwidW5hdmFpbGFibGVOZXdBY2NvcmRpb25Sb3dIZWFkZXJcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiYWRkT25JdGVtXCI6e1wiZGl2VG9VcGRhdGVcIjpcImFkZE9uSXRlbV9mZWF0dXJlX2RpdlwifSxcImdvbGRib3hKU1NjcmlwdFwiOntcImRpdlRvVXBkYXRlXCI6XCJnb2xkYm94SlNTY3JpcHRfZmVhdHVyZV9kaXZcIn0sXCJtdWx0aXBsZVJlY29tbWVuZGF0aW9uc1wiOntcImRpdlRvVXBkYXRlXCI6XCJtdWx0aXBsZVJlY29tbWVuZGF0aW9uc19mZWF0dXJlX2RpdlwifSxcInF1YW50aXR5TGF5b3V0SGlnaFwiOntcImRpdlRvVXBkYXRlXCI6XCJxdWFudGl0eUxheW91dEhpZ2hfZmVhdHVyZV9kaXZcIn0sXCJhdmFpbGFiaWxpdHlJbnNpZGVCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYXZhaWxhYmlsaXR5SW5zaWRlQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwidGZ4XCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInRyYWRlSW5JbnN0YW50U2F2aW5nc1wiOntcImRpdlRvVXBkYXRlXCI6XCJ0cmFkZUluSW5zdGFudFNhdmluZ3NfZmVhdHVyZV9kaXZcIn0sXCJzb2Z0bGluZXNUd2lzdGVyXCI6e1wiZGl2VG9VcGRhdGVcIjpcInNvZnRsaW5lc1R3aXN0ZXJfZmVhdHVyZV9kaXZcIn0sXCJidXNpbmVzc09ubHlTZWxlY3Rpb25CdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYnVzaW5lc3NPbmx5U2VsZWN0aW9uQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwiYnVuZGxlVjJcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYnVuZGxlVjJfZmVhdHVyZV9kaXZcIn0sXCJtczNcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiaW52aXRlUGxhdGZvcm1cIjp7XCJkaXZUb1VwZGF0ZVwiOlwiaW52aXRlUGxhdGZvcm1fZmVhdHVyZV9kaXZcIn0sXCJwd0J1eUJveEFjY29yZGlvblJvd0hlYWRlclwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJxdWFudGl0eUxheW91dExvd1wiOntcImRpdlRvVXBkYXRlXCI6XCJxdWFudGl0eUxheW91dExvd19mZWF0dXJlX2RpdlwifSxcInByZUFkZFRvQ2FydEZyYW1ld29ya1wiOntcImRpdlRvVXBkYXRlXCI6XCJwcmVBZGRUb0NhcnRGcmFtZXdvcmtfZmVhdHVyZV9kaXZcIn0sXCJieWxpbmVJbmZvXCI6e1wiZGl2VG9VcGRhdGVcIjpcImJ5bGluZUluZm9fZmVhdHVyZV9kaXZcIn0sXCJhamF4QmxvY2tDb21wb25lbnRzXCI6e1wiZGl2VG9VcGRhdGVcIjpcImFqYXhCbG9ja0NvbXBvbmVudHNfZmVhdHVyZV9kaXZcIn0sXCJhZGRUb0NhcnRcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYWRkVG9DYXJ0X2ZlYXR1cmVfZGl2XCJ9LFwiYWNCYWRnZVwiOntcImRpdlRvVXBkYXRlXCI6XCJhY0JhZGdlX2ZlYXR1cmVfZGl2XCJ9LFwidmVuZG9yUG93ZXJlZENvdXBvblwiOntcImRpdlRvVXBkYXRlXCI6XCJ2ZW5kb3JQb3dlcmVkQ291cG9uX2ZlYXR1cmVfZGl2XCJ9LFwiZHBGYXN0VHJhY2tJbnNpZGVCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZHBGYXN0VHJhY2tJbnNpZGVCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJnaXZlYXdheVwiOntcImRpdlRvVXBkYXRlXCI6XCJnaXZlYXdheV9mZWF0dXJlX2RpdlwifSxcImdsb2JhbFN0b3JlQmFkZ2VQb3BvdmVyXCI6e1wiZGl2VG9VcGRhdGVcIjpcImdsb2JhbFN0b3JlQmFkZ2VQb3BvdmVyX2ZlYXR1cmVfZGl2XCJ9LFwicHJvZHVjdEFsZXJ0XCI6e1wiZGl2VG9VcGRhdGVcIjpcInByb2R1Y3RBbGVydF9mZWF0dXJlX2RpdlwifSxcImFkZHJlc3NcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwidmFsdWVQaWNrXCI6e1wiZGl2VG9VcGRhdGVcIjpcInZhbHVlUGlja19mZWF0dXJlX2RpdlwifSxcImluc3RhbGxtZW50UGF5bWVudFwiOntcImRpdlRvVXBkYXRlXCI6XCJpbnN0YWxsbWVudFBheW1lbnRfZmVhdHVyZV9kaXZcIn0sXCJwcmltZUV4Y2x1c2l2ZUFjY29yZGlvblJvd0NvbnRlbnRcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwibWJiXCI6e1wiZGl2VG9VcGRhdGVcIjpcIm1iYl9mZWF0dXJlX2RpdlwifSxcImNsaWNrVG9Db250YWN0XCI6e1wiZGl2VG9VcGRhdGVcIjpcImNsaWNrVG9Db250YWN0X2ZlYXR1cmVfZGl2XCJ9LFwicHJvbW90aW9uc1wiOntcImRpdlRvVXBkYXRlXCI6XCJwcm9tb3Rpb25zX2ZlYXR1cmVfZGl2XCJ9LFwic2hpcHNGcm9tU29sZEJ5SW5zaWRlQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcInNoaXBzRnJvbVNvbGRCeUluc2lkZUJ1eUJveF9mZWF0dXJlX2RpdlwifSxcImFzZ1wiOntcImRpdlRvVXBkYXRlXCI6XCJhc2dfZmVhdHVyZV9kaXZcIn0sXCJ0d2lzdGVyXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcImluc3RhbnRPcmRlclVwZGF0ZVwiOntcImRpdlRvVXBkYXRlXCI6XCJpbnN0YW50T3JkZXJVcGRhdGVfZmVhdHVyZV9kaXZcIn0sXCJhc2tcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYXNrX2ZlYXR1cmVfZGl2XCJ9LFwidXNlZEJ1eUJveENvbmRpdGlvblwiOntcImRpdlRvVXBkYXRlXCI6XCJ1c2VkQnV5Qm94Q29uZGl0aW9uX2ZlYXR1cmVfZGl2XCJ9LFwieXVyZWthQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcInl1cmVrYUJ1eUJveF9mZWF0dXJlX2RpdlwifSxcImdpZnRDYXJkSG9saWRheUF2YWlsYWJpbGl0eU1lc3NhZ2luZ1wiOntcImRpdlRvVXBkYXRlXCI6XCJnaWZ0Y2FyZC1ob2xpZGF5LWF2YWlsYWJpbGl0eS1tZXNzYWdpbmdfZmVhdHVyZV9kaXZcIn0sXCJ1c2VkQnV5Qm94U29sZEJ5XCI6e1wiZGl2VG9VcGRhdGVcIjpcInVzZWRCdXlCb3hTb2xkQnlfZmVhdHVyZV9kaXZcIn0sXCJhZGRPbldpZGdldHNcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYWRkT25XaWRnZXRzX2ZlYXR1cmVfZGl2XCJ9LFwiZ2ZpeFwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJkZXRhaWxQYWdlR2lmdGluZ1wiOntcImRpdlRvVXBkYXRlXCI6XCJkZXRhaWxQYWdlR2lmdGluZ19mZWF0dXJlX2RpdlwifSxcImNzcEFjY29yZGlvblJvd0NvbnRlbnRcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiYW5kb25Db3JkXCI6e1wiZGl2VG9VcGRhdGVcIjpcImFuZG9uQ29yZF9mZWF0dXJlX2RpdlwifSxcInNoYXJlSW5mb1wiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJjcm9zc0JvcmRlcldpZGdldFwiOntcImRpdlRvVXBkYXRlXCI6XCJjcm9zc0JvcmRlcldpZGdldF9mZWF0dXJlX2RpdlwifSxcImFtYXpvbkN1c3RvbUJ1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJhbWF6b25DdXN0b21CdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJxdWFudGl0eVJlbG9jYXRlXCI6e1wiZGl2VG9VcGRhdGVcIjpcInF1YW50aXR5UmVsb2NhdGVfZmVhdHVyZV9kaXZcIn0sXCJnbG9iYWxTdG9yZUluZm9CdWxsZXRzXCI6e1wiZGl2VG9VcGRhdGVcIjpcImdsb2JhbFN0b3JlSW5mb0J1bGxldHNfZmVhdHVyZV9kaXZcIn0sXCJwcmltZXhwXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcIkdlb2dyYXBoaWNhbGx5UmVzdHJpY3RlZEJ1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJHZW9ncmFwaGljYWxseVJlc3RyaWN0ZWRCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJyZWNvbW1lbmRhdGlvbnNcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicmVjb21tZW5kYXRpb25zX2ZlYXR1cmVfZGl2XCJ9LFwic3BvbnNvcmVkUHJvZHVjdHMyXCI6e1wiZGl2VG9VcGRhdGVcIjpcInNwb25zb3JlZFByb2R1Y3RzMl9mZWF0dXJlX2RpdlwifSxcImcyczJTaXplQ2hhcnRcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiYnV5Tm93XCI6e1wiZGl2VG9VcGRhdGVcIjpcImJ1eU5vd19mZWF0dXJlX2RpdlwifSxcInVzc1wiOntcImRpdlRvVXBkYXRlXCI6XCJ1c3NfZmVhdHVyZV9kaXZcIn0sXCJoZXJvUXVpY2tQcm9tb1wiOntcImRpdlRvVXBkYXRlXCI6XCJoZXJvUXVpY2tQcm9tb19mZWF0dXJlX2RpdlwifSxcImxlZ2FsXCI6e1wiZGl2VG9VcGRhdGVcIjpcImxlZ2FsX2ZlYXR1cmVfZGl2XCJ9LFwiZGlnaXRhbERhc2hMb3dQcm9taW5lbmNlQWNjb3JkaW9uXCI6e1wiZGl2VG9VcGRhdGVcIjpcImRpZ2l0YWxEYXNoTG93UHJvbWluZW5jZUFjY29yZGlvbl9mZWF0dXJlX2RpdlwifSxcImNvbWJvT2ZmZXJCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiY29tYm9PZmZlckJ1eUJveF9mZWF0dXJlX2RpdlwifSxcIm5ld0FjY29yZGlvblJvd0hlYWRlclwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJwd0J1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJwd0J1eUJveF9mZWF0dXJlX2RpdlwifSxcImFjY2Vzc29yeVVwc2VsbEJ0ZlwiOntcImRpdlRvVXBkYXRlXCI6XCJhY2Nlc3NvcnlVcHNlbGxCdGZfZmVhdHVyZV9kaXZcIn0sXCJwcmljZUluc2lkZUJ1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJwcmljZUluc2lkZUJ1eUJveF9mZWF0dXJlX2RpdlwifSxcInVuaWZpZWRMb2NhdGlvblwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJhZGRUb1dpc2hsaXN0XCI6e1wiZGl2VG9VcGRhdGVcIjpcImFkZFRvV2lzaGxpc3RfZmVhdHVyZV9kaXZcIn0sXCJ1c2VkQnV5Qm94QWRkVG9DYXJ0XCI6e1wiZGl2VG9VcGRhdGVcIjpcInVzZWRCdXlCb3hBZGRUb0NhcnRfZmVhdHVyZV9kaXZcIn0sXCJmcmVlU2hpcHBpbmdQcmljZUJhZGdpbmdcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwic29jaWFsRmFicmljXCI6e1wiZGl2VG9VcGRhdGVcIjpcInNvY2lhbEZhYnJpY19mZWF0dXJlX2RpdlwifSxcInVzc0luaXRcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidXNzSW5pdF9mZWF0dXJlX2RpdlwifSxcInVzZWRCdXlCb3hPbmVDbGlja1wiOntcImRpdlRvVXBkYXRlXCI6XCJ1c2VkQnV5Qm94T25lQ2xpY2tfZmVhdHVyZV9kaXZcIn0sXCJwcm9taXNlQmFzZWRCYWRnZUluc2lkZUJ1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJwcm9taXNlQmFzZWRCYWRnZUluc2lkZUJ1eUJveF9mZWF0dXJlX2RpdlwifSxcInZvbHRhZ2VDb21wbGlhbmNlXCI6e1wiZGl2VG9VcGRhdGVcIjpcInZvbHRhZ2VDb21wbGlhbmNlX2ZlYXR1cmVfZGl2XCJ9LFwiZWRwSW5ncmVzc1wiOntcImRpdlRvVXBkYXRlXCI6XCJlZHBJbmdyZXNzX2ZlYXR1cmVfZGl2XCJ9LFwiZ2xvd0NvbnRleHR1YWxJbmdyZXNzUHRcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZ2xvd0NvbnRleHR1YWxJbmdyZXNzUHRfZmVhdHVyZV9kaXZcIn0sXCJwYXJ0aWFsU3RhdGVCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicGFydGlhbFN0YXRlQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwicHJpbWVFeGNsdXNpdmVBY2NvcmRpb25Sb3dIZWFkZXJcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwiaGVhZGVyXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInNwb25zb3JlZFByb2R1Y3RzXCI6e1wiZGl2VG9VcGRhdGVcIjpcInNwb25zb3JlZFByb2R1Y3RzX2ZlYXR1cmVfZGl2XCJ9LFwic2VydmljZXNJbnRlcnN0aXRpYWxcIjp7XCJkaXZUb1VwZGF0ZVwiOlwic2VydmljZXNJbnRlcnN0aXRpYWxfZmVhdHVyZV9kaXZcIn0sXCJidXlib3hwcmltZVwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJ1c2VkQnV5Qm94U2hpcHBpbmdNZXNzYWdlXCI6e1wiZGl2VG9VcGRhdGVcIjpcInVzZWRCdXlCb3hTaGlwcGluZ01lc3NhZ2VfZmVhdHVyZV9kaXZcIn0sXCJwcmltZUV4Y2x1c2l2ZUJ1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJwcmltZUV4Y2x1c2l2ZUJ1eUJveF9mZWF0dXJlX2RpdlwifSxcInByb21pc2VCYXNlZEJhZGdlXCI6e1wiZGl2VG9VcGRhdGVcIjpcInByb21pc2VCYXNlZEJhZGdlX2ZlYXR1cmVfZGl2XCJ9LFwic2l6ZUNoYXJ0VXJsXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInByc3Vic3dpZGdldFwiOntcImRpdlRvVXBkYXRlXCI6XCJwcnN1YnN3aWRnZXRfZmVhdHVyZV9kaXZcIn0sXCJhbG1NdWx0aU9mZmVyRWdyZXNzXCI6e1wiZGl2VG9VcGRhdGVcIjpcImFsbU11bHRpT2ZmZXJFZ3Jlc3NfZmVhdHVyZV9kaXZcIn0sXCJzaGlwcGluZ01lc3NhZ2VJbnNpZGVCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwic2hpcHBpbmdNZXNzYWdlSW5zaWRlQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwiYXB1YlByaW1lRmlyc3RcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYXB1YlByaW1lRmlyc3RfZmVhdHVyZV9kaXZcIn0sXCJwd09uYm9hcmRpbmdIaW50XCI6e1wiZGl2VG9VcGRhdGVcIjpcInB3T25ib2FyZGluZ0hpbnRfZmVhdHVyZV9kaXZcIn0sXCJzbnNCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwic25zQnV5Qm94X2ZlYXR1cmVfZGl2XCJ9LFwic29mdGxpbmVzVGVjaG5pY2FsU3BlY2lmaWNhdGlvbnNMaW5rXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInNpbXBsZUJ1bmRsZVYyXCI6e1wiZGl2VG9VcGRhdGVcIjpcInNpbXBsZUJ1bmRsZVYyX2ZlYXR1cmVfZGl2XCJ9LFwidGl0bGVcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidGl0bGVfZmVhdHVyZV9kaXZcIn0sXCJiMmJBY2NvcmRpb25Sb3dIZWFkZXJcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwicHJvZHVjdE92ZXJ2aWV3XCI6e1wiZGl2VG9VcGRhdGVcIjpcInByb2R1Y3RPdmVydmlld19mZWF0dXJlX2RpdlwifSxcImRldGFpbEJ1bGxldHNcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZGV0YWlsQnVsbGV0c19mZWF0dXJlX2RpdlwifSxcImZ0Q3VzdG9tZXJDb250ZXh0XCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInB3Q29udHJvbGxlclwiOntcImRpdlRvVXBkYXRlXCI6XCJwd0NvbnRyb2xsZXJfZmVhdHVyZV9kaXZcIn0sXCJ0ZWNobmljYWxTcGVjaWZpY2F0aW9uc1wiOntcImRpdlRvVXBkYXRlXCI6XCJ0ZWNobmljYWxTcGVjaWZpY2F0aW9uc19mZWF0dXJlX2RpdlwifSxcInVuYXZhaWxhYmxlTmV3QWNjb3JkaW9uUm93Q29udGVudFwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJwcm9kdWN0QWRzQnV5Qm94XCI6e1wiZGl2VG9VcGRhdGVcIjpcInByb2R1Y3RBZHNCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJwcm9ncmVzc0JhclwiOntcImRpdlRvVXBkYXRlXCI6XCJwcm9ncmVzc0Jhcl9mZWF0dXJlX2RpdlwifSxcInplaXRnZWlzdEJhZGdlXCI6e1wiZGl2VG9VcGRhdGVcIjpcInplaXRnZWlzdEJhZGdlX2ZlYXR1cmVfZGl2XCJ9LFwiYXBsdXMzcFwiOntcImRpdlRvVXBkYXRlXCI6XCJhcGx1czNwX2ZlYXR1cmVfZGl2XCJ9LFwicmVkaXJlY3Rpb25cIjp7XCJkaXZUb1VwZGF0ZVwiOlwicmVkaXJlY3Rpb25fZmVhdHVyZV9kaXZcIn0sXCJhZGRPbk1lc3NhZ2VcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYWRkT25NZXNzYWdlX2ZlYXR1cmVfZGl2XCJ9LFwiY3NwQWNjb3JkaW9uUm93SGVhZGVyXCI6e1wiZGl2VG9VcGRhdGVcIjpudWxsfSxcInVzZWRCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidXNlZEJ1eUJveF9mZWF0dXJlX2RpdlwifSxcInF1YW50aXR5XCI6e1wiZGl2VG9VcGRhdGVcIjpcInF1YW50aXR5X2ZlYXR1cmVfZGl2XCJ9LFwiZGlnaXRhbERhc2hIaWdoUHJvbWluZW5jZVwiOntcImRpdlRvVXBkYXRlXCI6XCJkaWdpdGFsRGFzaEhpZ2hQcm9taW5lbmNlX2ZlYXR1cmVfZGl2XCJ9LFwiZHluYW1pY0lmcmFtZVwiOntcImRpdlRvVXBkYXRlXCI6XCJkeW5hbWljSWZyYW1lX2ZlYXR1cmVfZGl2XCJ9LFwiYnV5Ym94YmFkZ2VcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwibmV3ZXJWZXJzaW9uXCI6e1wiZGl2VG9VcGRhdGVcIjpcIm5ld2VyVmVyc2lvbl9mZWF0dXJlX2RpdlwifSxcImFkZFRvV2lzaGxpc3RBY2NvcmRpb25cIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYWRkVG9XaXNobGlzdEFjY29yZGlvbl9mZWF0dXJlX2RpdlwifSxcIm9yaWdpbmFsUGFja2FnaW5nTWVzc2FnZUluc2lkZUJ1eUJveFwiOntcImRpdlRvVXBkYXRlXCI6XCJvcmlnaW5hbFBhY2thZ2luZ01lc3NhZ2VJbnNpZGVCdXlCb3hfZmVhdHVyZV9kaXZcIn0sXCJkaWdpdGFsQnV5Qm94TGF5b3V0XCI6e1wiZGl2VG9VcGRhdGVcIjpcImRpZ2l0YWxCdXlCb3hMYXlvdXRfZmVhdHVyZV9kaXZcIn0sXCJzaG93T2ZmZXJJbmZvT25seVwiOntcImRpdlRvVXBkYXRlXCI6XCJzaG93T2ZmZXJJbmZvT25seV9mZWF0dXJlX2RpdlwifSxcImFwbHVzXCI6e1wiZGl2VG9VcGRhdGVcIjpcImFwbHVzX2ZlYXR1cmVfZGl2XCJ9LFwiaGJhTGFiZWxcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiaGJhTGFiZWxfZmVhdHVyZV9kaXZcIn0sXCJkZWFsT2ZmZXJcIjp7XCJkaXZUb1VwZGF0ZVwiOm51bGx9LFwicmV2aWV3cy1oclwiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJyZWRlbXB0aW9uXCI6e1wiZGl2VG9VcGRhdGVcIjpcInJlZGVtcHRpb25fZmVhdHVyZV9kaXZcIn0sXCJkaWdpdGFsRGFzaEhpZ2hQcm9taW5lbmNlQWNjb3JkaW9uXCI6e1wiZGl2VG9VcGRhdGVcIjpcImRpZ2l0YWxEYXNoSGlnaFByb21pbmVuY2VBY2NvcmRpb25fZmVhdHVyZV9kaXZcIn0sXCJwcmltZVByaWNlQmFkZ2luZ1wiOntcImRpdlRvVXBkYXRlXCI6bnVsbH0sXCJpbXBvcnRhbnRJbmZvcm1hdGlvblwiOntcImRpdlRvVXBkYXRlXCI6XCJpbXBvcnRhbnRJbmZvcm1hdGlvbl9mZWF0dXJlX2RpdlwifSxcIm91dE9mU3RvY2tCdXlCb3hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwib3V0T2ZTdG9ja0J1eUJveF9mZWF0dXJlX2RpdlwifSxcIkhMQ1hDb21wYXJpc29uV2lkZ2V0XCI6e1wiZGl2VG9VcGRhdGVcIjpcIkhMQ1hDb21wYXJpc29uV2lkZ2V0X2ZlYXR1cmVfZGl2XCJ9LFwiYXBsdXNCcmFuZFN0b3J5XCI6e1wiZGl2VG9VcGRhdGVcIjpcImFwbHVzQnJhbmRTdG9yeV9mZWF0dXJlX2RpdlwifSxcInVzZWRCdXlCb3hCdXlOb3dcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidXNlZEJ1eUJveEJ1eU5vd19mZWF0dXJlX2RpdlwifX19O1xuICAgICAgICAgICAgcmV0dXJuIGRhdGFUb1JldHVybjtcbiAgICAgICAgfSk7XG4gICAgXHUwMDNDL3NjcmlwdD5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG5cblx1MDAzQyEtLSBNYXJrQUYgLS0+XG5cblxuXG5cblxuIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICBcblxuXG4gICAgXG4gICAgXG5cblxuXG4gICBcbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJhLXN0YXRlXCIgZGF0YS1hLXN0YXRlPVwieyZxdW90O2tleSZxdW90OzomcXVvdDttZXRyaWNzLXNjaGVtYSZxdW90O31cIj57XCJ3aWRnZXRTY2hlbWFcIjpcImRwOndpZGdldDpcIixcImRpbWVuc2lvblNjaGVtYVwiOlwiZHA6ZGltczpcIn1cdTAwM0Mvc2NyaXB0PlxuXG4gICAgXG5cblxuXG5cblxuXG4gXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiBcbiBcbiBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gIFxuICAgICAgICBcblxuICAgIFxuICAgIFxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cblxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG4gICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlAud2hlbignY2YnKS5leGVjdXRlKGZ1bmN0aW9uKCkgeyB1ZS5jb3VudCgnZHA6d2lkZ2V0OmRweFNpemU6ZHB4QlRGU2l6ZScsIDE0NCk7dWUuY291bnQoJ2RwOndpZGdldDpkcHhTaXplOmRweEFURlNpemUnLCAyMTIpO30pO1x1MDAzQy9zY3JpcHQ+XG4gICAgICAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0NkaXYgaWQ9XCJidW5kbGVWMl9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiYnVuZGxlVjJcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cbiAgICBcbiAgICBcblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcblxuXHUwMDNDIS0tcmJkLS0+XG5cblx1MDAzQ2RpdiBjbGFzcz1cImNlbHdpZGdldCBwZF9yZF93LVJJdk5LIHBmX3JkX3AtNDc5YjZhMjItNzBhZS00N2EwLTk3MDAtNzMxMDMzZjk2Y2U4IHBmX3JkX3ItNDc1RTM0SlFWOUZOUEhKOVNTVEQgcGRfcmRfci1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUgcGRfcmRfd2ctZ3NPYk9cIiBjZWxfd2lkZ2V0X2lkPVwiZGVza3RvcC1kcC1zaW1zX2ZidFwiPlxuXG5cblxuXG5cbiAgXG5cblxuIFxuXG4gXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDZGl2IGlkPVwic2ltcy1mYnRcIiBjbGFzcz1cInNpbWlsYXJpdGllcy13aWRnZXQgYnVja2V0XCI+XG4gICAgICAgIFx1MDAzQ2hyIGNsYXNzPVwiYS1kaXZpZGVyLW5vcm1hbCBidWNrZXREaXZpZGVyXCI+XHUwMDNDaDI+RnJlcXVlbnRseSBib3VnaHQgdG9nZXRoZXJcdTAwM0MvaDI+XG4gICAgICAgIFx1MDAzQ2RpdiBpZD1cInNpbXMtZmJ0LWNvbnRhaW5lclwiIGRhdGEtcDEzbi1mZWF0dXJlLW1ldGFkYXRhPVwieyZxdW90O2Jhc2VBc2luJnF1b3Q7OiZxdW90O0IwMUdLUUkzOTImcXVvdDssJnF1b3Q7aGFzX2RpZmZfYXZhaWwmcXVvdDs6JnF1b3Q7MCZxdW90OywmcXVvdDtoYXNfc2VsbGVyX2RpZmZlcmVuY2UmcXVvdDs6JnF1b3Q7MCZxdW90OywmcXVvdDtwZF9yZF93ZyZxdW90OzomcXVvdDtnc09iTyZxdW90OywmcXVvdDtwZF9yZF9yJnF1b3Q7OiZxdW90O2I0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNSZxdW90OywmcXVvdDtwZl9yZF9yJnF1b3Q7OiZxdW90OzQ3NUUzNEpRVjlGTlBISjlTU1REJnF1b3Q7LCZxdW90O3BmX3JkX3AmcXVvdDs6JnF1b3Q7NDc5YjZhMjItNzBhZS00N2EwLTk3MDAtNzMxMDMzZjk2Y2U4JnF1b3Q7LCZxdW90O3BkX3JkX3cmcXVvdDs6JnF1b3Q7Ukl2TksmcXVvdDt9XCIgZGF0YS1wMTNuLWZlYXR1cmUtbmFtZT1cInBkX2J4Z3lfMTk3XCIgZGF0YS1wMTNuLWdsb2JhbD1cInsmcXVvdDtjdXN0b21lcklkJnF1b3Q7OjAsJnF1b3Q7bWFya2V0cGxhY2UmcXVvdDs6JnF1b3Q7VVMmcXVvdDssJnF1b3Q7cmVxdWVzdElkJnF1b3Q7OiZxdW90OzQ3NUUzNEpRVjlGTlBISjlTU1REJnF1b3Q7LCZxdW90O21hcmtldHBsYWNlSWQmcXVvdDs6JnF1b3Q7QVRWUERLSUtYMERFUiZxdW90OywmcXVvdDtzZXNzaW9uJnF1b3Q7OiZxdW90OzE0NS04OTc1MzkwLTUwNjQxMTMmcXVvdDt9XCIgY2xhc3M9XCJhLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwic2ltcy1mYnQtY29udGVudFwiPlxuICAgICAgICAgICAgICAgIFx1MDAzQ2Zvcm0gaWQ9XCJzaW1zLWZidC1mb3JtXCIgbmFtZT1cIkJ1eVhHZXRZaGFuZGxlQnV5XCIgbWV0aG9kPVwicG9zdFwiIGFjdGlvbj1cIi9ncC9pdGVtLWRpc3BhdGNoL3JlZj1wZF9ieGd5XzE5N19idXR0b25fY3J0LzE0NS04OTc1MzkwLTUwNjQxMTM/aWU9VVRGOCZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9Ukl2TksmYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPTQ3OWI2YTIyLTcwYWUtNDdhMC05NzAwLTczMTAzM2Y5NmNlOCZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCIgYXV0b2NvbXBsZXRlPVwib2ZmXCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDaW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJzZXNzaW9uLWlkXCIgdmFsdWU9XCIxNDUtODk3NTM5MC01MDY0MTEzXCI+XHUwMDNDaW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJkaXNjb3ZlcmVkQXNpbnMuMVwiIHZhbHVlPVwiQjA3NUQzRldTM1wiPlx1MDAzQ2lucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwiZGlzY292ZXJlZEFzaW5zLjJcIiB2YWx1ZT1cIkIwN01ITDREV05cIj5cbiAgICAgICAgICAgICAgICBcdTAwM0NkaXY+XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQ3VsIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLW5vc3R5bGUgYS1ob3Jpem9udGFsIGEtc3BhY2luZy1iYXNlIGEtc3BhY2luZy10b3AtYmFzZSBzaW1zLWZidC1pbWFnZS1ib3hcIj5cbiAgICAgICAgXHUwMDNDbGkgY2xhc3M9XCJhLWFsaWduLWNlbnRlciBzaW1zLWZidC1pbWFnZS0xXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uXCI+XHUwMDNDaW1nIGFsdD1cIktlbXN0b25lIEVsZWdhbnQgUm9zZSBHb2xkL1NpbHZlciAyIFRvbmUgTXVsdGlsYXllciBEYW5nbGUgRWFycmluZ3MgQWNjZXNzb3J5IGZvciBXb21hbiwgMi40IEluY2hlc1wiIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXNneUdxWDI3TC5fQUNfVUwxMTVfLmpwZ1wiIGNsYXNzPVwic2ltcy1mYnQtaW1hZ2VcIj5cdTAwM0MvZGl2Plx1MDAzQy9zcGFuPlx1MDAzQy9saT5cdTAwM0NsaSBjbGFzcz1cImEtYWxpZ24tY2VudGVyIHNpbXMtZmJ0LXBsdXMtMlwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbSBhLXNpemUtbGFyZ2UgYS1jb2xvci10ZXJ0aWFyeVwiPitcdTAwM0Mvc3Bhbj5cdTAwM0MvbGk+XHUwMDNDbGkgY2xhc3M9XCJhLWFsaWduLWNlbnRlciBzaW1zLWZidC1pbWFnZS0yXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiBocmVmPVwiL0Jhc3Npb24tV29tZW5zLUNsYXNzaWMtRG91YmxlLUVhcnJpbmdzL2RwL0IwNzVEM0ZXUzMvcmVmPXBkX2J4Z3lfMTk3X2ltZ18yLzE0NS04OTc1MzkwLTUwNjQxMTM/X2VuY29kaW5nPVVURjgmYW1wO3BkX3JkX2k9QjA3NUQzRldTMyZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9Ukl2TksmYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPTQ3OWI2YTIyLTcwYWUtNDdhMC05NzAwLTczMTAzM2Y5NmNlOCZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cHNjPTEmYW1wO3JlZlJJRD00NzVFMzRKUVY5Rk5QSEo5U1NURFwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvblwiPlx1MDAzQ2ltZyBhbHQ9XCJTdGVybGluZyBTaWx2ZXIgRGFuZ2xlIEVhcnJpbmdzIGZvciBXb21lbiBHaXJscyBDbGFzc2ljIERvdWJsZSBMaW5lYXIgRWFycmluZ3NcIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjEyOCUyQnptQU1WTC5fQUNfVUwxMTVfLmpwZ1wiIGNsYXNzPVwic2ltcy1mYnQtaW1hZ2VcIj5cdTAwM0MvZGl2Plx1MDAzQy9hPlx1MDAzQy9zcGFuPlx1MDAzQy9saT5cdTAwM0NsaSBjbGFzcz1cImEtYWxpZ24tY2VudGVyIHNpbXMtZmJ0LXBsdXMtM1wiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbSBhLXNpemUtbGFyZ2UgYS1jb2xvci10ZXJ0aWFyeVwiPitcdTAwM0Mvc3Bhbj5cdTAwM0MvbGk+XHUwMDNDbGkgY2xhc3M9XCJhLWFsaWduLWNlbnRlciBzaW1zLWZidC1pbWFnZS0zXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiBocmVmPVwiL1NJTFZFUkFMLUVhcnJpbmdzLUxpZ2h0d2VpZ2h0LUZpbGlncmVlLVNwYXJrbGluZy9kcC9CMDdNSEw0RFdOL3JlZj1wZF9ieGd5XzE5N19pbWdfMy8xNDUtODk3NTM5MC01MDY0MTEzP19lbmNvZGluZz1VVEY4JmFtcDtwZF9yZF9pPUIwN01ITDREV04mYW1wO3BkX3JkX3I9YjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1JmFtcDtwZF9yZF93PVJJdk5LJmFtcDtwZF9yZF93Zz1nc09iTyZhbXA7cGZfcmRfcD00NzliNmEyMi03MGFlLTQ3YTAtOTcwMC03MzEwMzNmOTZjZTgmYW1wO3BmX3JkX3I9NDc1RTM0SlFWOUZOUEhKOVNTVEQmYW1wO3BzYz0xJmFtcDtyZWZSSUQ9NDc1RTM0SlFWOUZOUEhKOVNTVERcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb25cIj5cdTAwM0NpbWcgYWx0PVwiU0lMVkVSQUwgU2lsdmVyIEVhcnJpbmdzIGZvciB3b21lbiBDcnlzdGFsIERhbmdsZSBFYXJyaW5ncyBEcm9wIFBpZXJjZWQgRWFycmluZ3NcIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjE2WjJvWDFtdUwuX0FDX1VMMTE1Xy5qcGdcIiBjbGFzcz1cInNpbXMtZmJ0LWltYWdlXCI+XHUwMDNDL2Rpdj5cdTAwM0MvYT5cdTAwM0Mvc3Bhbj5cdTAwM0MvbGk+XG4gICAgICAgIFx1MDAzQy91bD5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwic2ltcy1mYnQtcHJpY2UtYm94XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJzaW1zLWZidC10b3RhbC1wcmljZVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXNlY29uZGFyeSBzaW1zLWZidC10b3RhbC1wcmljZS10ZXh0XCI+VG90YWwgcHJpY2U6IFx1MDAzQy9zcGFuPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtbWVkaXVtIGEtY29sb3ItcHJpY2Ugc2ltcy1mYnQtdG90YWwtcHJpY2UtdmFsdWVcIj5cdTAwM0NzcGFuIGNsYXNzPVwicDEzbi1zYy1wcmljZVwiPiQzNS41MFx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJzaW1zLWZidC1idXR0b25zXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1idXR0b24tc3RhY2sgYS1zcGFjaW5nLW1pbmlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24tcHJpbWFyeSBhLWJ1dHRvbi1zbWFsbCBzaW1zLWZidC1hZGQtdG8tY2FydFwiIGlkPVwiYS1hdXRvaWQtMTJcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24taW5uZXJcIj5cdTAwM0NpbnB1dCBuYW1lPVwic3VibWl0LmFkZFRvQ2FydFwiIGNsYXNzPVwiYS1idXR0b24taW5wdXRcIiB0eXBlPVwic3VibWl0XCIgYXJpYS1sYWJlbGxlZGJ5PVwiYS1hdXRvaWQtMTItYW5ub3VuY2VcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24tdGV4dFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGlkPVwiYS1hdXRvaWQtMTItYW5ub3VuY2VcIj5BZGQgYWxsIHRocmVlIHRvIENhcnRcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGlkPVwiZmJ0X2FkZF90b193aXNobGlzdFwiIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24tbm9ybWFsIGEtYnV0dG9uLXRodW1ibmFpbCBhLWJ1dHRvbi1iYXNlIGEtYnV0dG9uLXNtYWxsIHNpbXMtZmJ0LWFkZC10by13aXNobGlzdFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi1pbm5lclwiPlx1MDAzQ2lucHV0IG5hbWU9XCJzdWJtaXQuYWRkLXRvLXJlZ2lzdHJ5Lndpc2hsaXN0XCIgY2xhc3M9XCJhLWJ1dHRvbi1pbnB1dFwiIHR5cGU9XCJzdWJtaXRcIiBhcmlhLWxhYmVsbGVkYnk9XCJmYnRfYWRkX3RvX3dpc2hsaXN0LWFubm91bmNlXCI+XHUwMDNDc3BhbiBpZD1cImZidF9hZGRfdG9fd2lzaGxpc3QtYW5ub3VuY2VcIiBjbGFzcz1cImEtYnV0dG9uLXRleHQgYS10ZXh0LWNlbnRlclwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPkFkZCBhbGwgdGhyZWUgdG8gTGlzdFx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJhLXN0YXRlXCIgZGF0YS1hLXN0YXRlPVwieyZxdW90O2tleSZxdW90OzomcXVvdDtzaW1zLWZidCZxdW90O31cIj57XCJjdXJyZW5jeUNvbnZlcnNpb25SYXRpb1wiOjEsXCJhZGRUb0NhcnRUZXh0XCI6e1wiMVwiOlwiQWRkIHRvIENhcnRcIixcIjNcIjpcIkFkZCBhbGwgdGhyZWUgdG8gQ2FydFwiLFwiMlwiOlwiQWRkIGJvdGggdG8gQ2FydFwifSxcImFsbE9mZmVyTGlzdGluZ0lEc1wiOltcIkFJNEloVnlQYmsyZ1RaTjN1TlFvYWFaQU5Bc3lUcFUwejI2eWQ1QTY4U1YySVN1Y2hnWUpPd215c1N0UWNqMjJSajlqTVdIUmhNR2t1Y0VwM2xyMGljMiUyRmthZkdWVEE5eUxwNHF3SkR0MkhXOVpDYiUyRlZQWDV6emZoSGJ5NFolMkZ2VW51MDNWMkU1WjElMkJxbzRqME1DZjBwUU9OdWg3SFFtc1wiLFwiemlxeWFUYTh3ekc2WUl4bXdzNWtsWFRKWHNjemVENjhmYnlGVkROa0hEczEzT1A4NWhQJTJGMHlLOE5TVjMyalVCSXdLdXBVdFh3VEt4S0JFZ3pGUWNUaENTTU1tdjJzTU1KOFBzTlVXV01UcXBPOUFCeVE0cmtBWHlNWjZabkwlMkJEU3d3RXRWOGlXJTJGcm4yWVZnNEQyM0p2cXdLOCUyQklWclN3XCIsXCJNN1JCclg2OTR5N1hUNVJuMTFjUCUyRmJYYlZoTEF4VWxBZFNxMDljZnNJbkxnVnZqYVlUczR3TEpIdTZUOUJZVVFWZzNKcHB4TWE2QjlpU2FRUGlNWXEzMWtWQkZXcWdrT1hqbm1kV2lHNU9nMGFGZ1l5ZWp1Q2JsQ1lRNVkzdDlnNkpLckVXRiUyRkl2Z0N3aWhsOGJYazBXM2VPaGFvU0JZSFwiXSxcImN1cnJlbmN5U3ltYm9sXCI6XCJcXHUwMDNjc3BhbiBjbGFzcz0ncDEzbi1zYy1wcmljZScgPiRcXHUwMDNjc3BhbiBjbGFzcz1cXFwic2ltcy1mYnQtcHJpY2UtdmFsdWVcXFwiPlxcdTAwM2Mvc3Bhbj5cXHUwMDNjL3NwYW4+XCIsXCJjdXJyZW5jeUNvZGVcIjpcIlVTRFwiLFwic2hvdWxkVHJ1bmNhdGVDZW50c1wiOjAsXCJNQVBUZXh0XCI6XCJUbyBzZWUgb3VyIHByaWNlLCBhZGQgdGhlc2UgaXRlbXMgdG8geW91ciBjYXJ0LiBcXHUwMDNjYSBjbGFzcz1cXFwiYS1saW5rLW5vcm1hbCBzaW1zLWZidC1tYXAtZGV0YWlscy1saW5rXFxcIiB0YXJnZXQ9XFxcIkFtYXpvbkhlbHBcXFwiIHJlbD1cXFwibm9vcGVuZXJcXFwiIGhyZWY9XFxcIi9ncC9oZWxwL2N1c3RvbWVyL2Rpc3BsYXkuaHRtbC9yZWY9cGRfYnhneV8xOTdfbWFwLzE0NS04OTc1MzkwLTUwNjQxMTM/aWU9VVRGOCZub2RlSWQ9MjAwMzM5MTAwJnBkX3JkX3I9YjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1JnBkX3JkX3c9Ukl2TksmcGRfcmRfd2c9Z3NPYk8mcGZfcmRfcD00NzliNmEyMi03MGFlLTQ3YTAtOTcwMC03MzEwMzNmOTZjZTgmcGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZwb3AtdXA9MSZyZWZSSUQ9NDc1RTM0SlFWOUZOUEhKOVNTVERcXFwiPldoeSBkb24ndCB3ZSBzaG93IHRoZSBwcmljZT9cXHUwMDNjL2E+XCIsXCJzaGlwcGluZ0RldGFpbHNcIjp7XCIxMjNcIjpcInNhbWVcIixcIjIzXCI6XCJzYW1lXCIsXCIxM1wiOlwic2FtZVwiLFwiMTJcIjpcInNhbWVcIn0sXCJzaG91bGRVc2VDb21tYUZvckRlY2ltYWxcIjowLFwiaXRlbURldGFpbHNcIjp7XCJ6aXF5YVRhOHd6RzZZSXhtd3M1a2xYVEpYc2N6ZUQ2OGZieUZWRE5rSERzMTNPUDg1aFAlMkYweUs4TlNWMzJqVUJJd0t1cFV0WHdUS3hLQkVnekZRY1RoQ1NNTW12MnNNTUo4UHNOVVdXTVRxcE85QUJ5UTRya0FYeU1aNlpuTCUyQkRTd3dFdFY4aVclMkZybjJZVmc0RDIzSnZxd0s4JTJCSVZyU3dcIjp7XCJhc2luXCI6XCJCMDc1RDNGV1MzXCIsXCJpc1ByZW9yZGVyXCI6MCxcInByaWNlXCI6OC45OSxcImRvZXNNQVBQb2xpY3lBcHBseVwiOjB9LFwiQUk0SWhWeVBiazJnVFpOM3VOUW9hYVpBTkFzeVRwVTB6MjZ5ZDVBNjhTVjJJU3VjaGdZSk93bXlzU3RRY2oyMlJqOWpNV0hSaE1Ha3VjRXAzbHIwaWMyJTJGa2FmR1ZUQTl5THA0cXdKRHQySFc5WkNiJTJGVlBYNXp6ZmhIYnk0WiUyRnZVbnUwM1YyRTVaMSUyQnFvNGowTUNmMHBRT051aDdIUW1zXCI6e1wiYXNpblwiOlwiQjAxR0tRSTM5MlwiLFwiaXNQcmVvcmRlclwiOjAsXCJwcmljZVwiOjEyLjUyLFwiZG9lc01BUFBvbGljeUFwcGx5XCI6MH0sXCJNN1JCclg2OTR5N1hUNVJuMTFjUCUyRmJYYlZoTEF4VWxBZFNxMDljZnNJbkxnVnZqYVlUczR3TEpIdTZUOUJZVVFWZzNKcHB4TWE2QjlpU2FRUGlNWXEzMWtWQkZXcWdrT1hqbm1kV2lHNU9nMGFGZ1l5ZWp1Q2JsQ1lRNVkzdDlnNkpLckVXRiUyRkl2Z0N3aWhsOGJYazBXM2VPaGFvU0JZSFwiOntcImFzaW5cIjpcIkIwN01ITDREV05cIixcImlzUHJlb3JkZXJcIjowLFwicHJpY2VcIjoxMy45OSxcImRvZXNNQVBQb2xpY3lBcHBseVwiOjB9fSxcImFkZFRvV2lzaExpc3RUZXh0XCI6e1wiMVwiOlwiQWRkIHRvIExpc3RcIixcIjNcIjpcIkFkZCBhbGwgdGhyZWUgdG8gTGlzdFwiLFwiMlwiOlwiQWRkIGJvdGggdG8gTGlzdFwifSxcInByZU9yZGVyVGV4dFwiOm51bGwsXCJmYnRTdHJpbmdzXCI6bnVsbH1cdTAwM0Mvc2NyaXB0PlxuICAgICAgICAgICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwic2ltcy1mYnQtcm93c1wiPlx1MDAzQ2ZpZWxkc2V0IGNsYXNzPVwiZm9yU2NyZWVucmVhZGVyc1wiPlx1MDAzQ2xlZ2VuZD5cdTAwM0NzcGFuPkJ1eSB0aGUgc2VsZWN0ZWQgaXRlbXMgdG9nZXRoZXJcdTAwM0Mvc3Bhbj5cdTAwM0MvbGVnZW5kPlx1MDAzQ3VsIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLW5vc3R5bGUgYS12ZXJ0aWNhbFwiPlx1MDAzQ2xpIGRhdGEtcDEzbi1hc2luLW1ldGFkYXRhPVwieyZxdW90O3JlZiZxdW90OzomcXVvdDtwZF9ieGd5XzE5N18xXzEmcXVvdDssJnF1b3Q7cHJpY2UmcXVvdDs6MTIuNTIsJnF1b3Q7YXNpbiZxdW90OzomcXVvdDtCMDFHS1FJMzkyJnF1b3Q7fVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pbmkgcDEzbi1hc2luXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImZidC1jaGVja2JveC1jbGlja1wiIGRhdGEtZmJ0LWNoZWNrYm94LWNsaWNrPVwieyZxdW90O2l0ZW1OdW0mcXVvdDs6JnF1b3Q7MSZxdW90OywmcXVvdDtvZmZlckxpc3RpbmdJRCZxdW90OzomcXVvdDtBSTRJaFZ5UGJrMmdUWk4zdU5Rb2FhWkFOQXN5VHBVMHoyNnlkNUE2OFNWMklTdWNoZ1lKT3dteXNTdFFjajIyUmo5ak1XSFJoTUdrdWNFcDNscjBpYzIlMkZrYWZHVlRBOXlMcDRxd0pEdDJIVzlaQ2IlMkZWUFg1enpmaEhieTRaJTJGdlVudTAzVjJFNVoxJTJCcW80ajBNQ2YwcFFPTnVoN0hRbXMmcXVvdDssJnF1b3Q7YXNpbiZxdW90OzomcXVvdDtCMDFHS1FJMzkyJnF1b3Q7fVwiPlx1MDAzQ2RpdiBkYXRhLWEtaW5wdXQtbmFtZT1cIm9mZmVyaW5nSUQuMVwiIGNsYXNzPVwiYS1jaGVja2JveCBzaW1zLWZidC1jaGVja2JveFwiPlx1MDAzQ2xhYmVsPlx1MDAzQ2lucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJvZmZlcmluZ0lELjFcIiB2YWx1ZT1cIkFJNEloVnlQYmsyZ1RaTjN1TlFvYWFaQU5Bc3lUcFUwejI2eWQ1QTY4U1YySVN1Y2hnWUpPd215c1N0UWNqMjJSajlqTVdIUmhNR2t1Y0VwM2xyMGljMiUyRmthZkdWVEE5eUxwNHF3SkR0MkhXOVpDYiUyRlZQWDV6emZoSGJ5NFolMkZ2VW51MDNWMkU1WjElMkJxbzRqME1DZjBwUU9OdWg3SFFtc1wiIGNoZWNrZWQ9XCJcIiBzdHlsZT1cImRpc3BsYXk6IGlubGluZS1ibG9jaztcIj5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPlx1MDAzQy9pPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj5cdTAwM0NkaXYgY2xhc3M9XCJzaW1zLWZidC1jaGVja2JveC1sYWJlbFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJzaW1zLWZidC10aGlzLWl0ZW0gYS10ZXh0LWJvbGRcIj5UaGlzIGl0ZW06XHUwMDNDL3NwYW4+XHUwMDNDc3Bhbj5LZW1zdG9uZSBFbGVnYW50IFJvc2UgR29sZC9TaWx2ZXIgMiBUb25lIE11bHRpbGF5ZXIgRGFuZ2xlIEVhcnJpbmdzIEFjY2Vzc29yeSBmb3IgV29tYW4sIDIuNCBJbmNoZXNcdTAwM0Mvc3Bhbj4gXHUwMDNDc3BhbiBjbGFzcz1cImEtY29sb3ItcHJpY2VcIj5cdTAwM0NzcGFuIGNsYXNzPVwicDEzbi1zYy1wcmljZVwiPiQxMi41Mlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPiBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctbWljcm8gYS1zcGFjaW5nLXRvcC1taWNybyBhLXNpemUtc21hbGwgYS1jb2xvci1zZWNvbmRhcnkgc2ltcy1mYnQtc2VsbGVyLWluZm9cIj5cdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXN1Y2Nlc3NcIj5JbiBTdG9jay5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5IGEtdGV4dC1ub3JtYWxcIj5Tb2xkIGJ5IEtlbXN0b25lIGFuZCBzaGlwcyBmcm9tIEFtYXpvbiBGdWxmaWxsbWVudC5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5IGEtdGV4dC1ub3JtYWxcIj5GUkVFIFNoaXBwaW5nIG9uIG9yZGVycyBvdmVyIFx1MDAzQ3NwYW4gY2xhc3M9XCJwMTNuLXNjLXByaWNlXCI+JDI1XHUwMDNDL3NwYW4+LiBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzaW1zLWZidC1kZXRhaWxzLWhlbHAtbGluayBhLWRlY2xhcmF0aXZlXCIgdGFyZ2V0PVwiQW1hem9uSGVscFwiIHJlbD1cIm5vb3BlbmVyXCIgaHJlZj1cIi9ncC9oZWxwL2N1c3RvbWVyL2Rpc3BsYXkuaHRtbC9yZWY9cGRfYnhneV8xOTdfMV9zZGNfc2RjXzEvMTQ1LTg5NzUzOTAtNTA2NDExMz9pZT1VVEY4JmFtcDtub2RlSWQ9MjAxOTEwODcwJmFtcDtwZF9yZF9yPWI0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNSZhbXA7cGRfcmRfdz1SSXZOSyZhbXA7cGRfcmRfd2c9Z3NPYk8mYW1wO3BmX3JkX3A9NDc5YjZhMjItNzBhZS00N2EwLTk3MDAtNzMxMDMzZjk2Y2U4JmFtcDtwZl9yZF9yPTQ3NUUzNEpRVjlGTlBISjlTU1REJmFtcDtwb3AtdXA9MSZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+RGV0YWlsc1x1MDAzQy9hPlx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9zcGFuPlx1MDAzQy9sYWJlbD5cdTAwM0MvZGl2Plx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9saT5cdTAwM0NsaSBkYXRhLXAxM24tYXNpbi1tZXRhZGF0YT1cInsmcXVvdDtyZWYmcXVvdDs6JnF1b3Q7cGRfYnhneV8xOTdfMl8yJnF1b3Q7LCZxdW90O3ByaWNlJnF1b3Q7OjguOTksJnF1b3Q7YXNpbiZxdW90OzomcXVvdDtCMDc1RDNGV1MzJnF1b3Q7fVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pbmkgcDEzbi1hc2luXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImZidC1jaGVja2JveC1jbGlja1wiIGRhdGEtZmJ0LWNoZWNrYm94LWNsaWNrPVwieyZxdW90O2l0ZW1OdW0mcXVvdDs6JnF1b3Q7MiZxdW90OywmcXVvdDtvZmZlckxpc3RpbmdJRCZxdW90OzomcXVvdDt6aXF5YVRhOHd6RzZZSXhtd3M1a2xYVEpYc2N6ZUQ2OGZieUZWRE5rSERzMTNPUDg1aFAlMkYweUs4TlNWMzJqVUJJd0t1cFV0WHdUS3hLQkVnekZRY1RoQ1NNTW12MnNNTUo4UHNOVVdXTVRxcE85QUJ5UTRya0FYeU1aNlpuTCUyQkRTd3dFdFY4aVclMkZybjJZVmc0RDIzSnZxd0s4JTJCSVZyU3cmcXVvdDssJnF1b3Q7YXNpbiZxdW90OzomcXVvdDtCMDc1RDNGV1MzJnF1b3Q7fVwiPlx1MDAzQ2RpdiBkYXRhLWEtaW5wdXQtbmFtZT1cIm9mZmVyaW5nSUQuMlwiIGNsYXNzPVwiYS1jaGVja2JveCBzaW1zLWZidC1jaGVja2JveFwiPlx1MDAzQ2xhYmVsPlx1MDAzQ2lucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJvZmZlcmluZ0lELjJcIiB2YWx1ZT1cInppcXlhVGE4d3pHNllJeG13czVrbFhUSlhzY3plRDY4ZmJ5RlZETmtIRHMxM09QODVoUCUyRjB5SzhOU1YzMmpVQkl3S3VwVXRYd1RLeEtCRWd6RlFjVGhDU01NbXYyc01NSjhQc05VV1dNVHFwTzlBQnlRNHJrQVh5TVo2Wm5MJTJCRFN3d0V0VjhpVyUyRnJuMllWZzREMjNKdnF3SzglMkJJVnJTd1wiIGNoZWNrZWQ9XCJcIiBzdHlsZT1cImRpc3BsYXk6IGlubGluZS1ibG9jaztcIj5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPlx1MDAzQy9pPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj5cdTAwM0NkaXYgY2xhc3M9XCJzaW1zLWZidC1jaGVja2JveC1sYWJlbFwiPlx1MDAzQ2EgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9CYXNzaW9uLVdvbWVucy1DbGFzc2ljLURvdWJsZS1FYXJyaW5ncy9kcC9CMDc1RDNGV1MzL3JlZj1wZF9ieGd5XzE5N18yLzE0NS04OTc1MzkwLTUwNjQxMTM/X2VuY29kaW5nPVVURjgmYW1wO3BkX3JkX2k9QjA3NUQzRldTMyZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9Ukl2TksmYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPTQ3OWI2YTIyLTcwYWUtNDdhMC05NzAwLTczMTAzM2Y5NmNlOCZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cHNjPTEmYW1wO3JlZlJJRD00NzVFMzRKUVY5Rk5QSEo5U1NURFwiPlN0ZXJsaW5nIFNpbHZlciBEYW5nbGUgRWFycmluZ3MgZm9yIFdvbWVuIEdpcmxzIENsYXNzaWMgRG91YmxlIExpbmVhciBFYXJyaW5nc1x1MDAzQy9hPiBcdTAwM0NzcGFuIGNsYXNzPVwiYS1jb2xvci1wcmljZVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJwMTNuLXNjLXByaWNlXCI+JDguOTlcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj4gXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW1pY3JvIGEtc3BhY2luZy10b3AtbWljcm8gYS1zaXplLXNtYWxsIGEtY29sb3Itc2Vjb25kYXJ5IHNpbXMtZmJ0LXNlbGxlci1pbmZvXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1zdWNjZXNzXCI+SW4gU3RvY2suXHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXNlY29uZGFyeSBhLXRleHQtbm9ybWFsXCI+U29sZCBieSBMZXlhcm9uIGFuZCBzaGlwcyBmcm9tIEFtYXpvbiBGdWxmaWxsbWVudC5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5IGEtdGV4dC1ub3JtYWxcIj5GUkVFIFNoaXBwaW5nIG9uIG9yZGVycyBvdmVyIFx1MDAzQ3NwYW4gY2xhc3M9XCJwMTNuLXNjLXByaWNlXCI+JDI1XHUwMDNDL3NwYW4+LiBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzaW1zLWZidC1kZXRhaWxzLWhlbHAtbGluayBhLWRlY2xhcmF0aXZlXCIgdGFyZ2V0PVwiQW1hem9uSGVscFwiIHJlbD1cIm5vb3BlbmVyXCIgaHJlZj1cIi9ncC9oZWxwL2N1c3RvbWVyL2Rpc3BsYXkuaHRtbC9yZWY9cGRfYnhneV8xOTdfMl9zZGNfc2RjXzIvMTQ1LTg5NzUzOTAtNTA2NDExMz9pZT1VVEY4JmFtcDtub2RlSWQ9MjAxOTEwODcwJmFtcDtwZF9yZF9yPWI0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNSZhbXA7cGRfcmRfdz1SSXZOSyZhbXA7cGRfcmRfd2c9Z3NPYk8mYW1wO3BmX3JkX3A9NDc5YjZhMjItNzBhZS00N2EwLTk3MDAtNzMxMDMzZjk2Y2U4JmFtcDtwZl9yZF9yPTQ3NUUzNEpRVjlGTlBISjlTU1REJmFtcDtwb3AtdXA9MSZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+RGV0YWlsc1x1MDAzQy9hPlx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9zcGFuPlx1MDAzQy9sYWJlbD5cdTAwM0MvZGl2Plx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9saT5cdTAwM0NsaSBkYXRhLXAxM24tYXNpbi1tZXRhZGF0YT1cInsmcXVvdDtyZWYmcXVvdDs6JnF1b3Q7cGRfYnhneV8xOTdfM18zJnF1b3Q7LCZxdW90O3ByaWNlJnF1b3Q7OjEzLjk5LCZxdW90O2FzaW4mcXVvdDs6JnF1b3Q7QjA3TUhMNERXTiZxdW90O31cIiBjbGFzcz1cImEtc3BhY2luZy1taW5pIHAxM24tYXNpblwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJmYnQtY2hlY2tib3gtY2xpY2tcIiBkYXRhLWZidC1jaGVja2JveC1jbGljaz1cInsmcXVvdDtpdGVtTnVtJnF1b3Q7OiZxdW90OzMmcXVvdDssJnF1b3Q7b2ZmZXJMaXN0aW5nSUQmcXVvdDs6JnF1b3Q7TTdSQnJYNjk0eTdYVDVSbjExY1AlMkZiWGJWaExBeFVsQWRTcTA5Y2ZzSW5MZ1Z2amFZVHM0d0xKSHU2VDlCWVVRVmczSnBweE1hNkI5aVNhUVBpTVlxMzFrVkJGV3Fna09Yam5tZFdpRzVPZzBhRmdZeWVqdUNibENZUTVZM3Q5ZzZKS3JFV0YlMkZJdmdDd2lobDhiWGswVzNlT2hhb1NCWUgmcXVvdDssJnF1b3Q7YXNpbiZxdW90OzomcXVvdDtCMDdNSEw0RFdOJnF1b3Q7fVwiPlx1MDAzQ2RpdiBkYXRhLWEtaW5wdXQtbmFtZT1cIm9mZmVyaW5nSUQuM1wiIGNsYXNzPVwiYS1jaGVja2JveCBzaW1zLWZidC1jaGVja2JveFwiPlx1MDAzQ2xhYmVsPlx1MDAzQ2lucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJvZmZlcmluZ0lELjNcIiB2YWx1ZT1cIk03UkJyWDY5NHk3WFQ1Um4xMWNQJTJGYlhiVmhMQXhVbEFkU3EwOWNmc0luTGdWdmphWVRzNHdMSkh1NlQ5QllVUVZnM0pwcHhNYTZCOWlTYVFQaU1ZcTMxa1ZCRldxZ2tPWGpubWRXaUc1T2cwYUZnWXllanVDYmxDWVE1WTN0OWc2SktyRVdGJTJGSXZnQ3dpaGw4YlhrMFczZU9oYW9TQllIXCIgY2hlY2tlZD1cIlwiIHN0eWxlPVwiZGlzcGxheTogaW5saW5lLWJsb2NrO1wiPlx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+XHUwMDNDL2k+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPlx1MDAzQ2RpdiBjbGFzcz1cInNpbXMtZmJ0LWNoZWNrYm94LWxhYmVsXCI+XHUwMDNDYSBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtbGluay1ub3JtYWxcIiBocmVmPVwiL1NJTFZFUkFMLUVhcnJpbmdzLUxpZ2h0d2VpZ2h0LUZpbGlncmVlLVNwYXJrbGluZy9kcC9CMDdNSEw0RFdOL3JlZj1wZF9ieGd5XzE5N18zLzE0NS04OTc1MzkwLTUwNjQxMTM/X2VuY29kaW5nPVVURjgmYW1wO3BkX3JkX2k9QjA3TUhMNERXTiZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9Ukl2TksmYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPTQ3OWI2YTIyLTcwYWUtNDdhMC05NzAwLTczMTAzM2Y5NmNlOCZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cHNjPTEmYW1wO3JlZlJJRD00NzVFMzRKUVY5Rk5QSEo5U1NURFwiPlNJTFZFUkFMIFNpbHZlciBFYXJyaW5ncyBmb3Igd29tZW4gQ3J5c3RhbCBEYW5nbGUgRWFycmluZ3MgRHJvcCBQaWVyY2VkIEVhcnJpbmdzXHUwMDNDL2E+IFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNvbG9yLXByaWNlXCI+XHUwMDNDc3BhbiBjbGFzcz1cInAxM24tc2MtcHJpY2VcIj4kMTMuOTlcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj4gXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW1pY3JvIGEtc3BhY2luZy10b3AtbWljcm8gYS1zaXplLXNtYWxsIGEtY29sb3Itc2Vjb25kYXJ5IHNpbXMtZmJ0LXNlbGxlci1pbmZvXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1zdWNjZXNzXCI+SW4gU3RvY2suXHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXNlY29uZGFyeSBhLXRleHQtbm9ybWFsXCI+U29sZCBieSBTSUxWRVJBTCBhbmQgc2hpcHMgZnJvbSBBbWF6b24gRnVsZmlsbG1lbnQuXHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXNlY29uZGFyeSBhLXRleHQtbm9ybWFsXCI+RlJFRSBTaGlwcGluZyBvbiBvcmRlcnMgb3ZlciBcdTAwM0NzcGFuIGNsYXNzPVwicDEzbi1zYy1wcmljZVwiPiQyNVx1MDAzQy9zcGFuPi4gXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWwgc2ltcy1mYnQtZGV0YWlscy1oZWxwLWxpbmsgYS1kZWNsYXJhdGl2ZVwiIHRhcmdldD1cIkFtYXpvbkhlbHBcIiByZWw9XCJub29wZW5lclwiIGhyZWY9XCIvZ3AvaGVscC9jdXN0b21lci9kaXNwbGF5Lmh0bWwvcmVmPXBkX2J4Z3lfMTk3XzNfc2RjX3NkY18zLzE0NS04OTc1MzkwLTUwNjQxMTM/aWU9VVRGOCZhbXA7bm9kZUlkPTIwMTkxMDg3MCZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9Ukl2TksmYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPTQ3OWI2YTIyLTcwYWUtNDdhMC05NzAwLTczMTAzM2Y5NmNlOCZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cG9wLXVwPTEmYW1wO3JlZlJJRD00NzVFMzRKUVY5Rk5QSEo5U1NURFwiPkRldGFpbHNcdTAwM0MvYT5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0Mvc3Bhbj5cdTAwM0MvbGFiZWw+XHUwMDNDL2Rpdj5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0MvbGk+XHUwMDNDL3VsPlx1MDAzQy9maWVsZHNldD5cdTAwM0MvZGl2PlxuICAgICAgICAgICAgICAgIFx1MDAzQy9mb3JtPlxuICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICBcdTAwM0MvZGl2PlxuICAgIFxuXG5cblxuXG5cblxuXG5cdTAwM0MvZGl2PlxuXG5cblxuXG5cblx1MDAzQyEtLXJiZC0tPlxuXG5cdTAwM0NkaXYgY2xhc3M9XCJjZWx3aWRnZXQgcGRfcmRfdy1vUVZsbSBwZl9yZF9wLWVmNGRjOTkwLWE5Y2EtNDk0NS1hZTBiLWY4ZDU0OTE5OGVkNiBwZl9yZF9yLTQ3NUUzNEpRVjlGTlBISjlTU1REIHBkX3JkX3ItYjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1IHBkX3JkX3dnLWdzT2JPXCIgY2VsX3dpZGdldF9pZD1cImRlc2t0b3AtZHAtc2ltc192dHBcIj5cblxuXG5cblxuXG4gIFxuXG5cbiBcblxuIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgICAgICBcdTAwM0NociBjbGFzcz1cImEtZGl2aWRlci1ub3JtYWwgc2ltcy12dHAtaGVhZGluZ1wiPlxuICAgICAgICBcdTAwM0NkaXYgZGF0YS1zaW1pbGFyaXR5LXR5cGU9XCJkZXNrdG9wLWRwLXNpbXNfdnRwXCIgY2xhc3M9XCJhLXNlY3Rpb24gc2ltaWxhcml0aWVzLXdpZGdldFwiPlxuICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwidmlld190b19wdXJjaGFzZS1zaW1zLWZlYXR1cmVcIiBjbGFzcz1cImEtc2VjdGlvbiBidWNrZXRcIj5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgXHUwMDNDaDIgY2xhc3M9XCJhLXNpemUtbGFyZ2UgYS1zcGFjaW5nLWJhc2VcIj5XaGF0IG90aGVyIGl0ZW1zIGRvIGN1c3RvbWVycyBidXkgYWZ0ZXIgdmlld2luZyB0aGlzIGl0ZW0/XHUwMDNDL2gyPlxuICAgICAgICBcdTAwM0NkaXYgZGF0YS1wMTNuLWZlYXR1cmUtbWV0YWRhdGE9XCJ7JnF1b3Q7YmFzZUFzaW4mcXVvdDs6JnF1b3Q7QjAxR0tRSTM5MiZxdW90OywmcXVvdDtwZF9yZF93ZyZxdW90OzomcXVvdDtnc09iTyZxdW90OywmcXVvdDtwZF9yZF9yJnF1b3Q7OiZxdW90O2I0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNSZxdW90OywmcXVvdDtwZl9yZF9yJnF1b3Q7OiZxdW90OzQ3NUUzNEpRVjlGTlBISjlTU1REJnF1b3Q7LCZxdW90O3BmX3JkX3AmcXVvdDs6JnF1b3Q7ZWY0ZGM5OTAtYTljYS00OTQ1LWFlMGItZjhkNTQ5MTk4ZWQ2JnF1b3Q7LCZxdW90O3BkX3JkX3cmcXVvdDs6JnF1b3Q7b1FWbG0mcXVvdDt9XCIgZGF0YS1wMTNuLWZlYXR1cmUtbmFtZT1cInBkX2NwXzE5N1wiIGRhdGEtcDEzbi1nbG9iYWw9XCJ7JnF1b3Q7YXVpRGV2aWNlVHlwZSZxdW90OzomcXVvdDtkZXNrdG9wJnF1b3Q7LCZxdW90O21hcmtldHBsYWNlSWQmcXVvdDs6JnF1b3Q7QVRWUERLSUtYMERFUiZxdW90OywmcXVvdDtyZXF1ZXN0SWQmcXVvdDs6JnF1b3Q7NDc1RTM0SlFWOUZOUEhKOVNTVEQmcXVvdDssJnF1b3Q7bWFya2V0cGxhY2UmcXVvdDs6JnF1b3Q7VVMmcXVvdDssJnF1b3Q7Y3VzdG9tZXJJZCZxdW90OzowLCZxdW90O3Nlc3Npb24mcXVvdDs6JnF1b3Q7MTQ1LTg5NzUzOTAtNTA2NDExMyZxdW90O31cIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbWljcm8gdnRwLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgXG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBwMTNuLXNjLWxpc3QtY2VsbHMtY29udGFpbmVyXCI+XG4gICAgICAgICAgICBcdTAwM0N1bCBjbGFzcz1cImEtdW5vcmRlcmVkLWxpc3QgYS1ub3N0eWxlIGEtdmVydGljYWwgcDEzbi1zYy1saXN0LWNlbGxzXCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDbGkgZGF0YS1mbGluZy1jb250YWluZXI9XCJ0cnVlXCIgY2xhc3M9XCJhLXNwYWNpbmctbWVkaXVtIHAxM24tc2MtbGlzdC1pdGVtXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gICAgICAgIFx1MDAzQ2RpdiBkYXRhLXAxM24tYXNpbi1tZXRhZGF0YT1cInsmcXVvdDtyZWYmcXVvdDs6JnF1b3Q7cGRfY3BfMTk3XzEmcXVvdDssJnF1b3Q7YXNpbiZxdW90OzomcXVvdDtCMDdCSExYUVBGJnF1b3Q7fVwiIGNsYXNzPVwiYS1maXhlZC1sZWZ0LWdyaWQgcDEzbi1hc2luXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1maXhlZC1sZWZ0LWdyaWQtaW5uZXJcIiBzdHlsZT1cInBhZGRpbmctbGVmdDo4MnB4XCI+XG4gICAgICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLWZpeGVkLWxlZnQtZ3JpZC1jb2wgYS1jb2wtbGVmdFwiIHN0eWxlPVwid2lkdGg6ODJweDttYXJnaW4tbGVmdDotODJweDtmbG9hdDpsZWZ0O1wiPlx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9ERVNJTVRJT04tQ2xhc3NpYy1IeXBvYWxsZXJnZW5pYy1FYXJyaW5ncy1TdGVybGluZy9kcC9CMDdCSExYUVBGL3JlZj1wZF9jcF8xOTdfMS8xNDUtODk3NTM5MC01MDY0MTEzP19lbmNvZGluZz1VVEY4JmFtcDtwZF9yZF9pPUIwN0JITFhRUEYmYW1wO3BkX3JkX3I9YjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1JmFtcDtwZF9yZF93PW9RVmxtJmFtcDtwZF9yZF93Zz1nc09iTyZhbXA7cGZfcmRfcD1lZjRkYzk5MC1hOWNhLTQ5NDUtYWUwYi1mOGQ1NDkxOThlZDYmYW1wO3BmX3JkX3I9NDc1RTM0SlFWOUZOUEhKOVNTVEQmYW1wO3BzYz0xJmFtcDtyZWZSSUQ9NDc1RTM0SlFWOUZOUEhKOVNTVERcIj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDaW1nIGFsdD1cIkRFU0lNVElPTiAxOEsgR29sZCBQbGF0ZWQgQ2xhc3NpYyBUd2lzdCBXYXZlIFN0ZXJsaW5nIFNpbHZlciBQb3N0IERhbmdsZSBFYXJyaW5ncyBmb3IgV29tZW4gR2lybHNcIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjF2dUZXcjNPMkwuX0FDX1VMMTQwX1NSMTQwLDE0MF8uanBnXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2UgcDEzbi1zYy1keW5hbWljLWltYWdlXCIgaGVpZ2h0PVwiNzBcIiB3aWR0aD1cIjcwXCIgZGF0YS1hLWR5bmFtaWMtaW1hZ2U9XCJ7JnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxdnVGV3IzTzJMLl9BQ19VTDIxMF9TUjIxMCwyMTBfLmpwZyZxdW90OzpbMjEwLDIxMF0sJnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxdnVGV3IzTzJMLl9BQ19VTDcwX1NSNzAsNzBfLmpwZyZxdW90OzpbNzAsNzBdLCZxdW90O2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXZ1RldyM08yTC5fQUNfVUwxNDBfU1IxNDAsMTQwXy5qcGcmcXVvdDs6WzE0MCwxNDBdfVwiPlxuICAgICAgICAgICAgXHUwMDNDL2E+XHUwMDNDL2Rpdj5cbiAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtbGVmdC1ncmlkLWNvbCBhLWNvbC1yaWdodFwiIHN0eWxlPVwicGFkZGluZy1sZWZ0OjAlO2Zsb2F0OmxlZnQ7XCI+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XG4gICAgICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIGhyZWY9XCIvREVTSU1USU9OLUNsYXNzaWMtSHlwb2FsbGVyZ2VuaWMtRWFycmluZ3MtU3RlcmxpbmcvZHAvQjA3QkhMWFFQRi9yZWY9cGRfY3BfMTk3XzEvMTQ1LTg5NzUzOTAtNTA2NDExMz9fZW5jb2Rpbmc9VVRGOCZhbXA7cGRfcmRfaT1CMDdCSExYUVBGJmFtcDtwZF9yZF9yPWI0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNSZhbXA7cGRfcmRfdz1vUVZsbSZhbXA7cGRfcmRfd2c9Z3NPYk8mYW1wO3BmX3JkX3A9ZWY0ZGM5OTAtYTljYS00OTQ1LWFlMGItZjhkNTQ5MTk4ZWQ2JmFtcDtwZl9yZF9yPTQ3NUUzNEpRVjlGTlBISjlTU1REJmFtcDtwc2M9MSZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+XG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cInAxM24tc2MtdHJ1bmNhdGUgcDEzbi1zYy1saW5lLWNsYW1wLTFcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBkYXRhLXJvd3M9XCIxXCI+XG4gICAgICAgICAgICBERVNJTVRJT04gMThLIEdvbGQgUGxhdGVkIENsYXNzaWMgVHdpc3QgV2F2ZSBTdGVybGluZyBTaWx2ZXIgUG9zdCBEYW5nbGUgRWFycmluZ3MgZm9yIFdvbWVuIEdpcmxzXG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgXHUwMDNDL2E+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtaWNvbi1yb3cgYS1zcGFjaW5nLW5vbmVcIj5cbiAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGl0bGU9XCI0LjQgb3V0IG9mIDUgc3RhcnNcIiBocmVmPVwiL3Byb2R1Y3QtcmV2aWV3cy9CMDdCSExYUVBGL3JlZj1wZF9jcF8xOTdfY3JfMS8xNDUtODk3NTM5MC01MDY0MTEzP2llPVVURjgmYW1wO3BkX3JkX2k9QjA3QkhMWFFQRiZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9b1FWbG0mYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWVmNGRjOTkwLWE5Y2EtNDk0NS1hZTBiLWY4ZDU0OTE5OGVkNiZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3RhciBhLXN0YXItNC01XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj40LjQgb3V0IG9mIDUgc3RhcnNcdTAwM0Mvc3Bhbj5cdTAwM0MvaT5cbiAgICAgICAgICAgIFx1MDAzQy9hPlxuICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtc2l6ZS1zbWFsbCBhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9wcm9kdWN0LXJldmlld3MvQjA3QkhMWFFQRi9yZWY9cGRfY3BfMTk3X2NyXzEvMTQ1LTg5NzUzOTAtNTA2NDExMz9pZT1VVEY4JmFtcDtwZF9yZF9pPUIwN0JITFhRUEYmYW1wO3BkX3JkX3I9YjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1JmFtcDtwZF9yZF93PW9RVmxtJmFtcDtwZF9yZF93Zz1nc09iTyZhbXA7cGZfcmRfcD1lZjRkYzk5MC1hOWNhLTQ5NDUtYWUwYi1mOGQ1NDkxOThlZDYmYW1wO3BmX3JkX3I9NDc1RTM0SlFWOUZOUEhKOVNTVEQmYW1wO3JlZlJJRD00NzVFMzRKUVY5Rk5QSEo5U1NURFwiPjE3M1x1MDAzQy9hPlxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgIFxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL0RFU0lNVElPTi1DbGFzc2ljLUh5cG9hbGxlcmdlbmljLUVhcnJpbmdzLVN0ZXJsaW5nL2RwL0IwN0JITFhRUEYvcmVmPXBkX2NwXzE5N18xLzE0NS04OTc1MzkwLTUwNjQxMTM/X2VuY29kaW5nPVVURjgmYW1wO3BkX3JkX2k9QjA3QkhMWFFQRiZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9b1FWbG0mYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWVmNGRjOTkwLWE5Y2EtNDk0NS1hZTBiLWY4ZDU0OTE5OGVkNiZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cHNjPTEmYW1wO3JlZlJJRD00NzVFMzRKUVY5Rk5QSEo5U1NURFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXByaWNlXCI+XHUwMDNDc3BhbiBjbGFzcz1cInAxM24tc2MtcHJpY2VcIj4kMTIuOTlcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0MvYT4gICBcdTAwM0MvZGl2PlxuICAgIFxuICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0Mvc3Bhbj5cdTAwM0MvbGk+XHUwMDNDbGkgZGF0YS1mbGluZy1jb250YWluZXI9XCJ0cnVlXCIgY2xhc3M9XCJhLXNwYWNpbmctbWVkaXVtIHAxM24tc2MtbGlzdC1pdGVtXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gICAgICAgIFx1MDAzQ2RpdiBkYXRhLXAxM24tYXNpbi1tZXRhZGF0YT1cInsmcXVvdDtyZWYmcXVvdDs6JnF1b3Q7cGRfY3BfMTk3XzImcXVvdDssJnF1b3Q7YXNpbiZxdW90OzomcXVvdDtCMDczUlFMNjFCJnF1b3Q7fVwiIGNsYXNzPVwiYS1maXhlZC1sZWZ0LWdyaWQgcDEzbi1hc2luXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1maXhlZC1sZWZ0LWdyaWQtaW5uZXJcIiBzdHlsZT1cInBhZGRpbmctbGVmdDo4MnB4XCI+XG4gICAgICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLWZpeGVkLWxlZnQtZ3JpZC1jb2wgYS1jb2wtbGVmdFwiIHN0eWxlPVwid2lkdGg6ODJweDttYXJnaW4tbGVmdDotODJweDtmbG9hdDpsZWZ0O1wiPlx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9QbGF0ZWQtSW5maW5pdHktU3RlcmxpbmctU2lsdmVyLUVhcnJpbmdzL2RwL0IwNzNSUUw2MUIvcmVmPXBkX2NwXzE5N18yLzE0NS04OTc1MzkwLTUwNjQxMTM/X2VuY29kaW5nPVVURjgmYW1wO3BkX3JkX2k9QjA3M1JRTDYxQiZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9b1FWbG0mYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWVmNGRjOTkwLWE5Y2EtNDk0NS1hZTBiLWY4ZDU0OTE5OGVkNiZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cHNjPTEmYW1wO3JlZlJJRD00NzVFMzRKUVY5Rk5QSEo5U1NURFwiPlxuICAgICAgICAgICAgICAgICAgICBcdTAwM0NpbWcgYWx0PVwiMTRLIEdvbGQgUGxhdGVkIEluZmluaXR5IFN0ZXJsaW5nIFNpbHZlciBQb3N0IEhvb3AgRWFycmluZ3MgZm9yIFdvbWVuXCIgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxYUc0VVhvcDlMLl9BQ19VTDE0MF9TUjE0MCwxNDBfLmpwZ1wiIGNsYXNzPVwiYS1keW5hbWljLWltYWdlIHAxM24tc2MtZHluYW1pYy1pbWFnZVwiIGhlaWdodD1cIjcwXCIgd2lkdGg9XCI3MFwiIGRhdGEtYS1keW5hbWljLWltYWdlPVwieyZxdW90O2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MWFHNFVYb3A5TC5fQUNfVUwyMTBfU1IyMTAsMjEwXy5qcGcmcXVvdDs6WzIxMCwyMTBdLCZxdW90O2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MWFHNFVYb3A5TC5fQUNfVUw3MF9TUjcwLDcwXy5qcGcmcXVvdDs6WzcwLDcwXSwmcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFhRzRVWG9wOUwuX0FDX1VMMTQwX1NSMTQwLDE0MF8uanBnJnF1b3Q7OlsxNDAsMTQwXX1cIj5cbiAgICAgICAgICAgIFx1MDAzQy9hPlx1MDAzQy9kaXY+XG4gICAgICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLWZpeGVkLWxlZnQtZ3JpZC1jb2wgYS1jb2wtcmlnaHRcIiBzdHlsZT1cInBhZGRpbmctbGVmdDowJTtmbG9hdDpsZWZ0O1wiPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlxuICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiBocmVmPVwiL1BsYXRlZC1JbmZpbml0eS1TdGVybGluZy1TaWx2ZXItRWFycmluZ3MvZHAvQjA3M1JRTDYxQi9yZWY9cGRfY3BfMTk3XzIvMTQ1LTg5NzUzOTAtNTA2NDExMz9fZW5jb2Rpbmc9VVRGOCZhbXA7cGRfcmRfaT1CMDczUlFMNjFCJmFtcDtwZF9yZF9yPWI0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNSZhbXA7cGRfcmRfdz1vUVZsbSZhbXA7cGRfcmRfd2c9Z3NPYk8mYW1wO3BmX3JkX3A9ZWY0ZGM5OTAtYTljYS00OTQ1LWFlMGItZjhkNTQ5MTk4ZWQ2JmFtcDtwZl9yZF9yPTQ3NUUzNEpRVjlGTlBISjlTU1REJmFtcDtwc2M9MSZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+XG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cInAxM24tc2MtdHJ1bmNhdGUgcDEzbi1zYy1saW5lLWNsYW1wLTFcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBkYXRhLXJvd3M9XCIxXCI+XG4gICAgICAgICAgICAxNEsgR29sZCBQbGF0ZWQgSW5maW5pdHkgU3RlcmxpbmcgU2lsdmVyIFBvc3QgSG9vcCBFYXJyaW5ncyBmb3IgV29tZW5cbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICBcdTAwM0MvYT5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1pY29uLXJvdyBhLXNwYWNpbmctbm9uZVwiPlxuICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiB0aXRsZT1cIjQuNyBvdXQgb2YgNSBzdGFyc1wiIGhyZWY9XCIvcHJvZHVjdC1yZXZpZXdzL0IwNzNSUUw2MUIvcmVmPXBkX2NwXzE5N19jcl8yLzE0NS04OTc1MzkwLTUwNjQxMTM/aWU9VVRGOCZhbXA7cGRfcmRfaT1CMDczUlFMNjFCJmFtcDtwZF9yZF9yPWI0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNSZhbXA7cGRfcmRfdz1vUVZsbSZhbXA7cGRfcmRfd2c9Z3NPYk8mYW1wO3BmX3JkX3A9ZWY0ZGM5OTAtYTljYS00OTQ1LWFlMGItZjhkNTQ5MTk4ZWQ2JmFtcDtwZl9yZF9yPTQ3NUUzNEpRVjlGTlBISjlTU1REJmFtcDtyZWZSSUQ9NDc1RTM0SlFWOUZOUEhKOVNTVERcIj5cbiAgICAgICAgICAgICAgICBcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyIGEtc3Rhci00LTVcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPjQuNyBvdXQgb2YgNSBzdGFyc1x1MDAzQy9zcGFuPlx1MDAzQy9pPlxuICAgICAgICAgICAgXHUwMDNDL2E+XG4gICAgICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1zaXplLXNtYWxsIGEtbGluay1ub3JtYWxcIiBocmVmPVwiL3Byb2R1Y3QtcmV2aWV3cy9CMDczUlFMNjFCL3JlZj1wZF9jcF8xOTdfY3JfMi8xNDUtODk3NTM5MC01MDY0MTEzP2llPVVURjgmYW1wO3BkX3JkX2k9QjA3M1JRTDYxQiZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9b1FWbG0mYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWVmNGRjOTkwLWE5Y2EtNDk0NS1hZTBiLWY4ZDU0OTE5OGVkNiZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+NDQ2XHUwMDNDL2E+XG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgXG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWwgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvUGxhdGVkLUluZmluaXR5LVN0ZXJsaW5nLVNpbHZlci1FYXJyaW5ncy9kcC9CMDczUlFMNjFCL3JlZj1wZF9jcF8xOTdfMi8xNDUtODk3NTM5MC01MDY0MTEzP19lbmNvZGluZz1VVEY4JmFtcDtwZF9yZF9pPUIwNzNSUUw2MUImYW1wO3BkX3JkX3I9YjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1JmFtcDtwZF9yZF93PW9RVmxtJmFtcDtwZF9yZF93Zz1nc09iTyZhbXA7cGZfcmRfcD1lZjRkYzk5MC1hOWNhLTQ5NDUtYWUwYi1mOGQ1NDkxOThlZDYmYW1wO3BmX3JkX3I9NDc1RTM0SlFWOUZOUEhKOVNTVEQmYW1wO3BzYz0xJmFtcDtyZWZSSUQ9NDc1RTM0SlFWOUZOUEhKOVNTVERcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1wcmljZVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJwMTNuLXNjLXByaWNlXCI+JDE0Ljk1XHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XHUwMDNDL2E+ICAgXHUwMDNDL2Rpdj5cbiAgICBcbiAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDL3NwYW4+XHUwMDNDL2xpPlx1MDAzQ2xpIGRhdGEtZmxpbmctY29udGFpbmVyPVwidHJ1ZVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1lZGl1bSBwMTNuLXNjLWxpc3QtaXRlbVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICAgICAgICBcdTAwM0NkaXYgZGF0YS1wMTNuLWFzaW4tbWV0YWRhdGE9XCJ7JnF1b3Q7cmVmJnF1b3Q7OiZxdW90O3BkX2NwXzE5N18zJnF1b3Q7LCZxdW90O2FzaW4mcXVvdDs6JnF1b3Q7QjA3SjFWUjZaMiZxdW90O31cIiBjbGFzcz1cImEtZml4ZWQtbGVmdC1ncmlkIHAxM24tYXNpblwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtbGVmdC1ncmlkLWlubmVyXCIgc3R5bGU9XCJwYWRkaW5nLWxlZnQ6ODJweFwiPlxuICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1maXhlZC1sZWZ0LWdyaWQtY29sIGEtY29sLWxlZnRcIiBzdHlsZT1cIndpZHRoOjgycHg7bWFyZ2luLWxlZnQ6LTgycHg7ZmxvYXQ6bGVmdDtcIj5cdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIGhyZWY9XCIvTE9WRS1DTE9WRVItRWFycmluZ3MtRWxsaXB0aWNhbC1UZWFyZHJvcC9kcC9CMDdKMVZSNloyL3JlZj1wZF9jcF8xOTdfMy8xNDUtODk3NTM5MC01MDY0MTEzP19lbmNvZGluZz1VVEY4JmFtcDtwZF9yZF9pPUIwN0oxVlI2WjImYW1wO3BkX3JkX3I9YjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1JmFtcDtwZF9yZF93PW9RVmxtJmFtcDtwZF9yZF93Zz1nc09iTyZhbXA7cGZfcmRfcD1lZjRkYzk5MC1hOWNhLTQ5NDUtYWUwYi1mOGQ1NDkxOThlZDYmYW1wO3BmX3JkX3I9NDc1RTM0SlFWOUZOUEhKOVNTVEQmYW1wO3BzYz0xJmFtcDtyZWZSSUQ9NDc1RTM0SlFWOUZOUEhKOVNTVERcIj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDaW1nIGFsdD1cIkxPVkUmYW1wO0NMT1ZFUiBFYXJyaW5ncyBmb3IgV29tZW4gRGFuZ2xpbmcsIENyeXN0YWwgRHJvcCBEYW5nbGUgRWFycmluZ3MgRWxsaXB0aWNhbCBSaW5nIFRlYXJkcm9wIFdvbWVuIEdpcmxzIFdlZGRpbmcgR2lmdCBSb3NlIEdvbGRcIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNzF0dTZPWTdMV0wuX0FDX1VMMTQwX1NSMTQwLDE0MF8uanBnXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2UgcDEzbi1zYy1keW5hbWljLWltYWdlXCIgaGVpZ2h0PVwiNzBcIiB3aWR0aD1cIjcwXCIgZGF0YS1hLWR5bmFtaWMtaW1hZ2U9XCJ7JnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzcxdHU2T1k3TFdMLl9BQ19VTDIxMF9TUjIxMCwyMTBfLmpwZyZxdW90OzpbMjEwLDIxMF0sJnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzcxdHU2T1k3TFdMLl9BQ19VTDE0MF9TUjE0MCwxNDBfLmpwZyZxdW90OzpbMTQwLDE0MF0sJnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzcxdHU2T1k3TFdMLl9BQ19VTDcwX1NSNzAsNzBfLmpwZyZxdW90OzpbNzAsNzBdfVwiPlxuICAgICAgICAgICAgXHUwMDNDL2E+XHUwMDNDL2Rpdj5cbiAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtbGVmdC1ncmlkLWNvbCBhLWNvbC1yaWdodFwiIHN0eWxlPVwicGFkZGluZy1sZWZ0OjAlO2Zsb2F0OmxlZnQ7XCI+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XG4gICAgICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIGhyZWY9XCIvTE9WRS1DTE9WRVItRWFycmluZ3MtRWxsaXB0aWNhbC1UZWFyZHJvcC9kcC9CMDdKMVZSNloyL3JlZj1wZF9jcF8xOTdfMy8xNDUtODk3NTM5MC01MDY0MTEzP19lbmNvZGluZz1VVEY4JmFtcDtwZF9yZF9pPUIwN0oxVlI2WjImYW1wO3BkX3JkX3I9YjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1JmFtcDtwZF9yZF93PW9RVmxtJmFtcDtwZF9yZF93Zz1nc09iTyZhbXA7cGZfcmRfcD1lZjRkYzk5MC1hOWNhLTQ5NDUtYWUwYi1mOGQ1NDkxOThlZDYmYW1wO3BmX3JkX3I9NDc1RTM0SlFWOUZOUEhKOVNTVEQmYW1wO3BzYz0xJmFtcDtyZWZSSUQ9NDc1RTM0SlFWOUZOUEhKOVNTVERcIj5cbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwicDEzbi1zYy10cnVuY2F0ZSBwMTNuLXNjLWxpbmUtY2xhbXAtMVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGRhdGEtcm93cz1cIjFcIj5cbiAgICAgICAgICAgIExPVkUmYW1wO0NMT1ZFUiBFYXJyaW5ncyBmb3IgV29tZW4gRGFuZ2xpbmcsIENyeXN0YWwgRHJvcCBEYW5nbGUgRWFycmluZ3MgRWxsaXB0aWNhbCBSaW5nIFRlYXJkcm9wIFdvbWVuIEdpcmxzIFdlZGRpbmcgR2lmdCBSb3NlIEdvbGRcbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICBcdTAwM0MvYT5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1pY29uLXJvdyBhLXNwYWNpbmctbm9uZVwiPlxuICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiB0aXRsZT1cIjQuNyBvdXQgb2YgNSBzdGFyc1wiIGhyZWY9XCIvcHJvZHVjdC1yZXZpZXdzL0IwN0oxVlI2WjIvcmVmPXBkX2NwXzE5N19jcl8zLzE0NS04OTc1MzkwLTUwNjQxMTM/aWU9VVRGOCZhbXA7cGRfcmRfaT1CMDdKMVZSNloyJmFtcDtwZF9yZF9yPWI0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNSZhbXA7cGRfcmRfdz1vUVZsbSZhbXA7cGRfcmRfd2c9Z3NPYk8mYW1wO3BmX3JkX3A9ZWY0ZGM5OTAtYTljYS00OTQ1LWFlMGItZjhkNTQ5MTk4ZWQ2JmFtcDtwZl9yZF9yPTQ3NUUzNEpRVjlGTlBISjlTU1REJmFtcDtyZWZSSUQ9NDc1RTM0SlFWOUZOUEhKOVNTVERcIj5cbiAgICAgICAgICAgICAgICBcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyIGEtc3Rhci00LTVcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPjQuNyBvdXQgb2YgNSBzdGFyc1x1MDAzQy9zcGFuPlx1MDAzQy9pPlxuICAgICAgICAgICAgXHUwMDNDL2E+XG4gICAgICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1zaXplLXNtYWxsIGEtbGluay1ub3JtYWxcIiBocmVmPVwiL3Byb2R1Y3QtcmV2aWV3cy9CMDdKMVZSNloyL3JlZj1wZF9jcF8xOTdfY3JfMy8xNDUtODk3NTM5MC01MDY0MTEzP2llPVVURjgmYW1wO3BkX3JkX2k9QjA3SjFWUjZaMiZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9b1FWbG0mYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWVmNGRjOTkwLWE5Y2EtNDk0NS1hZTBiLWY4ZDU0OTE5OGVkNiZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+NDNcdTAwM0MvYT5cbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICBcbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj5cdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9MT1ZFLUNMT1ZFUi1FYXJyaW5ncy1FbGxpcHRpY2FsLVRlYXJkcm9wL2RwL0IwN0oxVlI2WjIvcmVmPXBkX2NwXzE5N18zLzE0NS04OTc1MzkwLTUwNjQxMTM/X2VuY29kaW5nPVVURjgmYW1wO3BkX3JkX2k9QjA3SjFWUjZaMiZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9b1FWbG0mYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWVmNGRjOTkwLWE5Y2EtNDk0NS1hZTBiLWY4ZDU0OTE5OGVkNiZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cHNjPTEmYW1wO3JlZlJJRD00NzVFMzRKUVY5Rk5QSEo5U1NURFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXByaWNlXCI+XHUwMDNDc3BhbiBjbGFzcz1cInAxM24tc2MtcHJpY2VcIj4kMjEuMDBcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0MvYT4gICBcdTAwM0MvZGl2PlxuICAgIFxuICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0Mvc3Bhbj5cdTAwM0MvbGk+XHUwMDNDbGkgZGF0YS1mbGluZy1jb250YWluZXI9XCJ0cnVlXCIgY2xhc3M9XCJhLXNwYWNpbmctbWVkaXVtIHAxM24tc2MtbGlzdC1pdGVtXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gICAgICAgIFx1MDAzQ2RpdiBkYXRhLXAxM24tYXNpbi1tZXRhZGF0YT1cInsmcXVvdDtyZWYmcXVvdDs6JnF1b3Q7cGRfY3BfMTk3XzQmcXVvdDssJnF1b3Q7YXNpbiZxdW90OzomcXVvdDtCMDFIWEZHTU44JnF1b3Q7fVwiIGNsYXNzPVwiYS1maXhlZC1sZWZ0LWdyaWQgcDEzbi1hc2luXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1maXhlZC1sZWZ0LWdyaWQtaW5uZXJcIiBzdHlsZT1cInBhZGRpbmctbGVmdDo4MnB4XCI+XG4gICAgICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLWZpeGVkLWxlZnQtZ3JpZC1jb2wgYS1jb2wtbGVmdFwiIHN0eWxlPVwid2lkdGg6ODJweDttYXJnaW4tbGVmdDotODJweDtmbG9hdDpsZWZ0O1wiPlx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9LZW1zdG9uZS1CcnVzaGVkLVBsYXRlZC1EYW5nbGUtRWFycmluZ3MvZHAvQjAxSFhGR01OOC9yZWY9cGRfY3BfMTk3XzQvMTQ1LTg5NzUzOTAtNTA2NDExMz9fZW5jb2Rpbmc9VVRGOCZhbXA7cGRfcmRfaT1CMDFIWEZHTU44JmFtcDtwZF9yZF9yPWI0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNSZhbXA7cGRfcmRfdz1vUVZsbSZhbXA7cGRfcmRfd2c9Z3NPYk8mYW1wO3BmX3JkX3A9ZWY0ZGM5OTAtYTljYS00OTQ1LWFlMGItZjhkNTQ5MTk4ZWQ2JmFtcDtwZl9yZF9yPTQ3NUUzNEpRVjlGTlBISjlTU1REJmFtcDtwc2M9MSZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQ2ltZyBhbHQ9XCJLZW1zdG9uZSBCcnVzaGVkIFNhdGluIFJvc2UgR29sZCBQbGF0ZWQgRHJvcCBEYW5nbGUgRWFycmluZ3MgQ2hhbmRlbGllciBFYXJyaW5ncyBmb3IgV29tZW5cIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFtWWN2c21QWkwuX0FDX1VMMTQwX1NSMTQwLDE0MF8uanBnXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2UgcDEzbi1zYy1keW5hbWljLWltYWdlXCIgaGVpZ2h0PVwiNzBcIiB3aWR0aD1cIjcwXCIgZGF0YS1hLWR5bmFtaWMtaW1hZ2U9XCJ7JnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxbVljdnNtUFpMLl9BQ19VTDE0MF9TUjE0MCwxNDBfLmpwZyZxdW90OzpbMTQwLDE0MF0sJnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxbVljdnNtUFpMLl9BQ19VTDcwX1NSNzAsNzBfLmpwZyZxdW90OzpbNzAsNzBdLCZxdW90O2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MW1ZY3ZzbVBaTC5fQUNfVUwyMTBfU1IyMTAsMjEwXy5qcGcmcXVvdDs6WzIxMCwyMTBdfVwiPlxuICAgICAgICAgICAgXHUwMDNDL2E+XHUwMDNDL2Rpdj5cbiAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtbGVmdC1ncmlkLWNvbCBhLWNvbC1yaWdodFwiIHN0eWxlPVwicGFkZGluZy1sZWZ0OjAlO2Zsb2F0OmxlZnQ7XCI+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XG4gICAgICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIGhyZWY9XCIvS2Vtc3RvbmUtQnJ1c2hlZC1QbGF0ZWQtRGFuZ2xlLUVhcnJpbmdzL2RwL0IwMUhYRkdNTjgvcmVmPXBkX2NwXzE5N180LzE0NS04OTc1MzkwLTUwNjQxMTM/X2VuY29kaW5nPVVURjgmYW1wO3BkX3JkX2k9QjAxSFhGR01OOCZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9b1FWbG0mYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWVmNGRjOTkwLWE5Y2EtNDk0NS1hZTBiLWY4ZDU0OTE5OGVkNiZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cHNjPTEmYW1wO3JlZlJJRD00NzVFMzRKUVY5Rk5QSEo5U1NURFwiPlxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJwMTNuLXNjLXRydW5jYXRlIHAxM24tc2MtbGluZS1jbGFtcC0xXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgZGF0YS1yb3dzPVwiMVwiPlxuICAgICAgICAgICAgS2Vtc3RvbmUgQnJ1c2hlZCBTYXRpbiBSb3NlIEdvbGQgUGxhdGVkIERyb3AgRGFuZ2xlIEVhcnJpbmdzIENoYW5kZWxpZXIgRWFycmluZ3MgZm9yIFdvbWVuXG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgXHUwMDNDL2E+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtaWNvbi1yb3cgYS1zcGFjaW5nLW5vbmVcIj5cbiAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGl0bGU9XCI0LjQgb3V0IG9mIDUgc3RhcnNcIiBocmVmPVwiL3Byb2R1Y3QtcmV2aWV3cy9CMDFIWEZHTU44L3JlZj1wZF9jcF8xOTdfY3JfNC8xNDUtODk3NTM5MC01MDY0MTEzP2llPVVURjgmYW1wO3BkX3JkX2k9QjAxSFhGR01OOCZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9b1FWbG0mYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWVmNGRjOTkwLWE5Y2EtNDk0NS1hZTBiLWY4ZDU0OTE5OGVkNiZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3RhciBhLXN0YXItNC01XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj40LjQgb3V0IG9mIDUgc3RhcnNcdTAwM0Mvc3Bhbj5cdTAwM0MvaT5cbiAgICAgICAgICAgIFx1MDAzQy9hPlxuICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtc2l6ZS1zbWFsbCBhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9wcm9kdWN0LXJldmlld3MvQjAxSFhGR01OOC9yZWY9cGRfY3BfMTk3X2NyXzQvMTQ1LTg5NzUzOTAtNTA2NDExMz9pZT1VVEY4JmFtcDtwZF9yZF9pPUIwMUhYRkdNTjgmYW1wO3BkX3JkX3I9YjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1JmFtcDtwZF9yZF93PW9RVmxtJmFtcDtwZF9yZF93Zz1nc09iTyZhbXA7cGZfcmRfcD1lZjRkYzk5MC1hOWNhLTQ5NDUtYWUwYi1mOGQ1NDkxOThlZDYmYW1wO3BmX3JkX3I9NDc1RTM0SlFWOUZOUEhKOVNTVEQmYW1wO3JlZlJJRD00NzVFMzRKUVY5Rk5QSEo5U1NURFwiPjQzXHUwMDNDL2E+XG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgXG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWwgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvS2Vtc3RvbmUtQnJ1c2hlZC1QbGF0ZWQtRGFuZ2xlLUVhcnJpbmdzL2RwL0IwMUhYRkdNTjgvcmVmPXBkX2NwXzE5N180LzE0NS04OTc1MzkwLTUwNjQxMTM/X2VuY29kaW5nPVVURjgmYW1wO3BkX3JkX2k9QjAxSFhGR01OOCZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9b1FWbG0mYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWVmNGRjOTkwLWE5Y2EtNDk0NS1hZTBiLWY4ZDU0OTE5OGVkNiZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cHNjPTEmYW1wO3JlZlJJRD00NzVFMzRKUVY5Rk5QSEo5U1NURFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXByaWNlXCI+XHUwMDNDc3BhbiBjbGFzcz1cInAxM24tc2MtcHJpY2VcIj4kMTQuOTlcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0MvYT4gICBcdTAwM0MvZGl2PlxuICAgIFxuICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0Mvc3Bhbj5cdTAwM0MvbGk+XG4gICAgICAgICAgICBcdTAwM0MvdWw+XG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgXG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgXG4gICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIHZ0cC1mb290ZXJcIj5cdTAwM0MvZGl2PlxuICAgIFxuXG5cblxuXG5cblxuXG5cdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuXG4gIFxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcblxuXG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgXG5cblxuICAgICAgICAgICAgXG5cblxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG4gICAgICAgICAgICBcblxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQyEtLXJiZC0tPlxuXG5cdTAwM0NkaXYgY2xhc3M9XCJjZWx3aWRnZXQgcGRfcmRfdy1KeFd2TCBwZl9yZF9wLTQ1YTcyNTg4LTgwZjctNDQxNC05ODUxLTc4NmY2YzE2ZDQyYiBwZF9yZF93Zy1nc09iTyBwZl9yZF9yLTQ3NUUzNEpRVjlGTlBISjlTU1REIHBkX3JkX3ItYjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1XCIgY2VsX3dpZGdldF9pZD1cImRlc2t0b3AtZHAtc2ltc19TcG9uc29yZWRQcm9kdWN0c1NpbXNEcERlc2t0b3BcIj5cdTAwM0NzdHlsZT4uc3BfbGFyZ2VfZm9ybWF0X3dpZGdldFRpdGxlX2FzaW5JbWFnZV9zcGFjaW5nIHsgICAgbWFyZ2luLWJvdHRvbTogNDBweDt9LnNwX2xhcmdlX2Zvcm1hdF9hc2luSW1hZ2VfcHJvZHVjdERlc2NyaXB0aW9uX3NwYWNpbmcgeyAgICBtYXJnaW4tYm90dG9tOiAzMHB4O30uc3BfbGFyZ2VfZm9ybWF0X2Nhcm91c2VsIHsgICAgaGVpZ2h0OiA0NjFweDt9LnNwX2xhcmdlX2Zvcm1hdF9vZmZlclZlcnRpY2FsIHsgICAgaGVpZ2h0OiAzNzVweDt9LnNwX2Jvb2tfY2Fyb3VzZWxfaGVhZGVyIHsgICAgbWFyZ2luLWJvdHRvbTogMTBweDt9LnNwX2JhZGdlX3NwYWNpbmdfYWJvdmVfaW1hZ2UgeyAgICBtYXJnaW4tdG9wOiAwcHg7ICAgIG1hcmdpbi1ib3R0b206IDRweDt9LnNwX2JhZGdlX3NwYWNpbmdfYmVsb3dfaW1hZ2UgeyAgICBtYXJnaW4tdG9wOiA2cHg7ICAgIG1hcmdpbi1ib3R0b206IDZweDt9LnNwX2ludmlzaWJsZV9iYWRnZSB7ICAgIHZpc2liaWxpdHk6IGhpZGRlbjt9LnNwX3ByaW1lX3dhcmRyb2JlX2JhZGdlIHsgICAgcG9zaXRpb246IHJlbGF0aXZlOyAgICB0b3A6IDJweDt9LnNwX3NvZnRsaW5lX2JyYW5kX2xpbmUgeyAgICBtYXJnaW4tdG9wOiAxNnB4OyAgICBmb250LXNpemU6IDE2cHg7ICAgIGNvbG9yOiAjNTU1NTU1OyAgICBtYXJnaW4tYm90dG9tOiAxMnB4OyAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7fS5zcF9zb2Z0bGluZV9vbmVsaW5lX3RpdGxlIHsgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgICAgb3ZlcmZsb3c6IGhpZGRlbjsgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7fS5zcF9zb2Z0bGluZV9sYXJnZV9pbWFnZV9jb250YWluZXIgeyAgICBwYWRkaW5nLXRvcDogMTMwJTsgICAgcG9zaXRpb246IHJlbGF0aXZlOyAgICBtYXJnaW4tYm90dG9tOiA0cHg7fS5zcF9zb2Z0bGluZV9sYXJnZV9pbWFnZV9mYWNlb3V0IHsgICAgcG9zaXRpb246IGFic29sdXRlOyAgICBtYXgtd2lkdGg6IDEwMCU7ICAgIG1heC1oZWlnaHQ6IDEwMCU7ICAgIG1hcmdpbjogYXV0bzsgICAgdG9wOiAwOyAgICBib3R0b206IDA7ICAgIGxlZnQ6IDA7ICAgIHJpZ2h0OiAwO31cdTAwM0Mvc3R5bGU+XHUwMDNDc3R5bGU+LnNwX2FtYXpvbl9jZXJ0aWZpZWRfdGV4dCB7ICAgIGZvbnQtc2l6ZTogMTNweDsgICAgY29sb3I6ICNDNDU1MDA7fS5zcF93b3Jrc193aXRoX2FsZXhhIHsgICAgZm9udC1zaXplOiAxM3B4OyAgICBjb2xvcjogIzExMTExMTt9XHUwMDNDL3N0eWxlPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJhLXN0YXRlXCIgZGF0YS1hLXN0YXRlPVwieyZxdW90O2tleSZxdW90OzomcXVvdDtTcFZpZXdhYmlsaXR5Q29uZmlnU3RhdGUmcXVvdDt9XCI+e1wiZWVsRW5kcG9pbnRcIjpcImh0dHBzOi8vdW5hZ2ktbmEuYW1hem9uLmNvbS8xL2V2ZW50cy9jb20uYW1hem9uLmVlbC5TcG9uc29yZWRQcm9kdWN0c0V2ZW50VHJhY2tpbmcucHJvZFwifVx1MDAzQy9zY3JpcHQ+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NociBjbGFzcz1cImEtZGl2aWRlci1ub3JtYWwgYnVja2V0RGl2aWRlclwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJzcF9kZXRhaWxcIiBkYXRhLWEtY2Fyb3VzZWwtb3B0aW9ucz1cInsmcXVvdDtpbml0aWFsU2VlbkFzaW5zJnF1b3Q7OlsmcXVvdDtCMDdQSkxCNkJNJnF1b3Q7LCZxdW90O0IwN0RLOFBMUEsmcXVvdDssJnF1b3Q7QjA3NUw5R1JZMSZxdW90OywmcXVvdDtCMDdXWDZWNFZCJnF1b3Q7LCZxdW90O0IwMEIzUkU3UTImcXVvdDssJnF1b3Q7QjA3VFhDOVpKUCZxdW90OywmcXVvdDtCMDA4VjA0RlBXJnF1b3Q7LCZxdW90O0IwN004ODdUNTMmcXVvdDssJnF1b3Q7QjA3NDgzM0M4QyZxdW90OywmcXVvdDtCMDdWN1pCVzczJnF1b3Q7XSwmcXVvdDtzZXRfc2l6ZSZxdW90Ozo5ODQsJnF1b3Q7bmFtZSZxdW90OzomcXVvdDtzcF9kZXRhaWxfY2Fyb3VzZWwmcXVvdDssJnF1b3Q7YXV0b19hZGp1c3RfaGVpZ2h0JnF1b3Q7OiZxdW90O3RydWUmcXVvdDssJnF1b3Q7Y2lyY3VsYXImcXVvdDs6ZmFsc2UsJnF1b3Q7YWpheCZxdW90Ozp7JnF1b3Q7ZmV0Y2hfZGVsYXkmcXVvdDs6JnF1b3Q7MCZxdW90OywmcXVvdDtwYXJhbXMmcXVvdDs6eyZxdW90O2NjJnF1b3Q7OjEwLCZxdW90O3dpZGdldExvY2FsZSZxdW90OzomcXVvdDtlbl9VUyZxdW90OywmcXVvdDt3TmFtZSZxdW90OzomcXVvdDtzcF9kZXRhaWwmcXVvdDssJnF1b3Q7aXNNdWx0aVBsYWNlbWVudFJlcXVlc3QmcXVvdDs6ZmFsc2UsJnF1b3Q7c3RhcnQmcXVvdDs6MTAsJnF1b3Q7QVNJTiZxdW90OzomcXVvdDtCMDFHS1FJMzkyJnF1b3Q7LCZxdW90O3BSSUQmcXVvdDs6JnF1b3Q7NDc1RTM0SlFWOUZOUEhKOVNTVEQmcXVvdDssJnF1b3Q7aXNGcmVzaCZxdW90OzowLCZxdW90O3AxM04mcXVvdDs6JnF1b3Q7JmFtcDtwZF9yZF93PUp4V3ZMJmFtcDtwZl9yZF9wPTQ1YTcyNTg4LTgwZjctNDQxNC05ODUxLTc4NmY2YzE2ZDQyYiZhbXA7cGRfcmRfd2c9Z3NPYk8mYW1wO3BmX3JkX3I9NDc1RTM0SlFWOUZOUEhKOVNTVEQmYW1wO3BkX3JkX3I9YjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1JnF1b3Q7fSwmcXVvdDt1cmwmcXVvdDs6JnF1b3Q7L2dwL25lbW8vc3BkL2hhbmRsZXJzL3NwZC1zaG92Lmh0bWwmcXVvdDt9fVwiIGRhdGEtcDEzbi1mZWF0dXJlLW1ldGFkYXRhPVwieyZxdW90O2Jhc2VBc2luJnF1b3Q7OiZxdW90O0IwMUdLUUkzOTImcXVvdDssJnF1b3Q7cGRfcmRfd2cmcXVvdDs6JnF1b3Q7Z3NPYk8mcXVvdDssJnF1b3Q7cGRfcmRfdyZxdW90OzomcXVvdDtKeFd2TCZxdW90OywmcXVvdDtwZF9yZF9yJnF1b3Q7OiZxdW90O2I0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNSZxdW90O31cIiBkYXRhLXAxM24tZmVhdHVyZS1uYW1lPVwic3BfZGV0YWlsXCIgZGF0YS1wMTNuLWdsb2JhbD1cInsmcXVvdDthdWlEZXZpY2VUeXBlJnF1b3Q7OiZxdW90O2Rlc2t0b3AmcXVvdDssJnF1b3Q7bWFya2V0cGxhY2VJZCZxdW90OzoyNTk2ODQ0MDA4OTE1MzIsJnF1b3Q7bWFya2V0cGxhY2UmcXVvdDs6JnF1b3Q7VVMmcXVvdDssJnF1b3Q7cmVxdWVzdElkJnF1b3Q7OiZxdW90OzQ3NUUzNEpRVjlGTlBISjlTU1REJnF1b3Q7LCZxdW90O3Nlc3Npb24mcXVvdDs6JnF1b3Q7MTQ1LTg5NzUzOTAtNTA2NDExMyZxdW90O31cIiBkYXRhLWEtZGlzcGxheS1zdHJhdGVneT1cInN3YXBcIiBkYXRhLWEtdHJhbnNpdGlvbi1zdHJhdGVneT1cInN3YXBcIiBkYXRhLWEtYWpheC1zdHJhdGVneT1cImNsaWNrc0N1c3RvbUFqYXhcIiBjbGFzcz1cImEtYmVnaW4gYS1jYXJvdXNlbC1jb250YWluZXIgYS1jYXJvdXNlbC1kaXNwbGF5LXN3YXAgYS1jYXJvdXNlbC10cmFuc2l0aW9uLXN3YXBcIj5cdTAwM0NpbnB1dCBhdXRvY29tcGxldGU9XCJvblwiIHR5cGU9XCJoaWRkZW5cIiBjbGFzcz1cImEtY2Fyb3VzZWwtZmlyc3R2aXNpYmxlaXRlbVwiPiAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtY2Fyb3VzZWwtaGVhZGVyLXJvdyBhLXNpemUtbGFyZ2UgcGFfY29tcG9uZW50VGl0bGVUZXN0XCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuOFwiPlx1MDAzQ2gyIGNsYXNzPVwiYS1jYXJvdXNlbC1oZWFkaW5nXCI+U3BvbnNvcmVkIHByb2R1Y3RzIHJlbGF0ZWQgdG8gdGhpcyBpdGVtXHUwMDNDL2gyPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuNCBhLXNwYW4tbGFzdCBhLXRleHQtcmlnaHRcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1jYXJvdXNlbC1wYWdpbmF0aW9uIGEtc2l6ZS1iYXNlXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtY2Fyb3VzZWwtcGFnZS1jb3VudFwiPlBhZ2UgXHUwMDNDc3BhbiBjbGFzcz1cImEtY2Fyb3VzZWwtcGFnZS1jdXJyZW50XCI+MVx1MDAzQy9zcGFuPiBvZiBcdTAwM0NzcGFuIGNsYXNzPVwiYS1jYXJvdXNlbC1wYWdlLW1heFwiPjFcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1jYXJvdXNlbC1yZXN0YXJ0LWNvbnRhaW5lclwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXRleHQtc2VwYXJhdG9yXCI+XHUwMDNDL3NwYW4+XHUwMDNDYSBjbGFzcz1cImEtY2Fyb3VzZWwtcmVzdGFydFwiIGhyZWY9XCIjXCI+U3RhcnQgb3Zlclx1MDAzQy9hPlx1MDAzQy9zcGFuPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNhcm91c2VsLWFjY2Vzc2liaWxpdHktcGFnZS1pbmZvIGEtb2Zmc2NyZWVuXCIgYXJpYS1saXZlPVwicG9saXRlXCI+UGFnZSAxIG9mIDFcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+ICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1jYXJvdXNlbC1jb250cm9scyBhLWNhcm91c2VsLXJvdyBhLWNhcm91c2VsLWhhcy1idXR0b25zXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1jYXJvdXNlbC1yb3ctaW5uZXJcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWNhcm91c2VsLWNvbCBhLWNhcm91c2VsLWxlZnRcIj5cdTAwM0NhIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24taW1hZ2UgYS1jYXJvdXNlbC1idXR0b24gYS1jYXJvdXNlbC1nb3RvLXByZXZwYWdlXCIgdGFiaW5kZXg9XCIwXCIgaHJlZj1cIiNcIiBpZD1cImEtYXV0b2lkLTEzXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uLWlubmVyXCI+XHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcHJldmlvdXNcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPlByZXZpb3VzIHBhZ2Ugb2YgcmVsYXRlZCBTcG9uc29yZWQgUHJvZHVjdHNcdTAwM0Mvc3Bhbj5cdTAwM0MvaT5cdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtY2Fyb3VzZWwtY29sIGEtY2Fyb3VzZWwtY2VudGVyXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1jYXJvdXNlbC12aWV3cG9ydFwiPlx1MDAzQ29sIGNsYXNzPVwiYS1jYXJvdXNlbFwiIHJvbGU9XCJsaXN0XCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NsaSBjbGFzcz1cImEtY2Fyb3VzZWwtY2FyZFwiIHN0eWxlPVwid2lkdGg6MTYwcHg7XCIgcm9sZT1cImxpc3RpdGVtXCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInNwX2RldGFpbF9CMDdQSkxCNkJNXCIgZGF0YS1hc2luPVwiQjA3UEpMQjZCTVwiIGRhdGEtcDEzbi1hc2luLW1ldGFkYXRhPVwieyZxdW90O3JlZiZxdW90OzomcXVvdDtzc3BhX2RrX2RldGFpbF8wJnF1b3Q7LCZxdW90O2FzaW4mcXVvdDs6JnF1b3Q7QjA3UEpMQjZCTSZxdW90O31cIiBkYXRhLXZpZXdwaXhlbHVybD1cIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTc1Nzg5Mjc5NjEzMTM1MDkmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsJmFtcDthZElkPTIwMDAxODY5NzAyNzg0MSZhbXA7YWRJbmRleD0wXCIgY2xhc3M9XCJhLXNlY3Rpb24gc3Bfb2ZmZXJWZXJ0aWNhbCBwMTNuLWFzaW5cIj4gICAgICAgICAgICAgICAgXHUwMDNDbm9zY3JpcHQ+ICAgICAgICBcdTAwM0NpbWcgYWx0PVwiXCIgc3JjPVwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZpZD03NTc4OTI3OTYxMzEzNTA5JndpZGdldE5hbWU9c3BfZGV0YWlsJmFkSWQ9MjAwMDE4Njk3MDI3ODQxJmV2ZW50VHlwZT0yJmFkSW5kZXg9MFwiPiAgICBcdTAwM0Mvbm9zY3JpcHQ+ICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHtmKHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJGaXJlYmlyZFNwUmVuZGVyaW5nXCIpKTt9KGZ1bmN0aW9uKFApIHsgICAgICAgIFAud2hlbignU3BvbnNvcmVkUHJvZHVjdHNWaWV3YWJpbGl0eScpLmV4ZWN1dGUoZnVuY3Rpb24oU1YpIHsgICAgICAgICAgICBTVi5sb2FkSW1hZ2VQaXhlbChcIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmaWQ9NzU3ODkyNzk2MTMxMzUwOSZ3aWRnZXROYW1lPXNwX2RldGFpbCZhZElkPTIwMDAxODY5NzAyNzg0MSZldmVudFR5cGU9MiZhZEluZGV4PTBcIik7ICAgICAgICB9KTsgICAgfSkpO1x1MDAzQy9zY3JpcHQ+ICAgICAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPihmdW5jdGlvbihmKSB7Zih3aW5kb3cuUC5fbmFtZXNwYWNlKFwiRmlyZWJpcmRTcFJlbmRlcmluZ1wiKSk7fShmdW5jdGlvbihQKSB7ICAgIFAud2hlbignQScsICdTcG9uc29yZWRQcm9kdWN0c1ZpZXdhYmlsaXR5JykuZXhlY3V0ZShmdW5jdGlvbihBLCBTVikgeyAgICAgICAgU1YucmVnaXN0ZXJWaWV3VHJhY2tpbmdFbGVtZW50KEEuJChcIiNzcF9kZXRhaWxfQjA3UEpMQjZCTVwiKSwgXCJzcF9kZXRhaWxcIik7ICAgIH0pO30pKTtcdTAwM0Mvc2NyaXB0PiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwicGFfZmVlZGJhY2tGb3JtX2NvbnRhaW5lcl9zcF9kZXRhaWxcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIj4gICAgXHUwMDNDZGl2IGNsYXNzPVwic3BfYWRJRFwiPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImEtbW9kYWxcIiBkYXRhLWEtbW9kYWw9XCJ7JnF1b3Q7Zm9vdGVyJnF1b3Q7OiZxdW90O1xcdTAwM2NkaXYgaWQ9J3Nwb25zb3JlZC1wcm9kdWN0cy1mZWVkYmFjay1mb290ZXInPiZxdW90OywmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzomcXVvdDtmYWxzZSZxdW90OywmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O3Nwb25zb3JlZC1wcm9kdWN0cy1mZWVkYmFjay1tb2RhbC1zcF9kZXRhaWwmcXVvdDssJnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7MzUwJnF1b3Q7LCZxdW90O2hlYWRlciZxdW90OzomcXVvdDtTaGFyZSB5b3VyIGZlZWRiYWNrJnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xhenlMb2FkL2hhbmRsZXIvc3AtZmVlZGJhY2staGFuZGxlci5odG1sP3BsPVhvZEZ5SGVFU1ZYWnV2WUFnN2hRZjBsMExuNUZjQiUyRm5JNVNLY1QzcUlQOVNZeSUyRmZKSU9VeFhvZmtOQWRNM2ZYJTJGZEszb1I1RnJqTXQlMEFhS0p3eW4yS2FJZ3hmQzJOQTh5elVRalpoM3dpZmltT0NCM0Q3dHFkNEVFcU1RTm1Ba1ljZkl5MUpSME53NXJhb0VQRXdOT1Jod0Q2JTBBSFdzMG5QZnA5NHVhWUQ3a1NKdnZBdUNvM1JJa1RGSjZIRVkyRnM4VWolMkZpRDd0cVRhTE5nJTJCVVhGQ3hRcDJxMUE3b0YlMkZyVjViVTNsSCUwQXlHb1BGT2tSS2kzQ05Ib2pmZmVjTHdzdlVyR0NRRHZ6TXplMDNsTVNYSU51THd0b2kyQzNuJTJGYmtWJTJCbE4lMkJiWnpmOFpZZmZ0VjBXWWwlMEFONWYwMkpMdjVVSzhteDVaTDIwTzdiRmolMkZadjdaNkM1N1lKU0xBd3pUMnVCNGFkYjglMkYyVWltbzlwTyUyQlloenBTck1CS09sTUI5b1JoJTBBTXI1cFJ0SHJMdUdTMmVkYm9sWWE4NTFaJTJGYWNtOFJxUnlLdyUyQnIxaUxqZWQxZG9XJTJCZGVWencwNVRUSU02VGRzUGw0SjBlUFRhUG00RCUwQWEzUkZBVWNXRGFTdFVHajZiVjNHcUcyeGhBSEpwY2MzJTJGVVowWTN2YnZZRSUyQnZ2TEFWNktUc0lDanVrM3hmaWVrdEp6aEV2ZnVzeTNlJTBBUnhQSDBwTDVwZlRiVnVTQ05aMnI5emhQdHMxNk1tdktJblJsWjVCNm9NeGJna0glMkIlMkJzWk82WkdTcEFsJTJCeTBMd3JpeU9HVmo2cmZrUCUwQU80M3IyVyUyQjMxVFY2ZHhEV1pIYlJSRGElMkZGeGVRMCUyQlZnJnF1b3Q7fVwiPiAgICAgICAgICAgIFx1MDAzQ2EgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIGNsYXNzPVwiYS1wb3BvdmVyLXRyaWdnZXIgYS1kZWNsYXJhdGl2ZVwiPkZlZWRiYWNrXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcG9wb3ZlclwiPlx1MDAzQy9pPlx1MDAzQy9hPiAgICAgICAgXHUwMDNDL3NwYW4+ICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIHRhcmdldD1cIl90b3BcIiByZWw9XCJub29wZW5lclwiIHRpdGxlPVwiQmFyemVsIExhYi1DcmVhdGVkIEFiYWxvbmUgUGVhcmwgJmFtcDsgMThLIFdoaXRlIEdvbGQgUGxhdGluZyBUcmVlIG9mIExpZmUgRGFuZ2xpbmcgRWFycmluZ3NcIiBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9zbHJlZGlyZWN0L3BpY2Fzc29SZWRpcmVjdC5odG1sL3JlZj1zc3BhX2RrX2RldGFpbF8wP2llPVVURjgmYW1wO2FkSWQ9QTAxMDU5NTAxWVFNWEpONDZLU0tPJmFtcDtxdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9NzU3ODkyNzk2MTMxMzUwOSZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwmYW1wO3VybD0lMkZkcCUyRkIwN1BKTEI2Qk0lMkZyZWYlM0Rzc3BhX2RrX2RldGFpbF8wJTNGcHNjJTNEMSUyNnBkX3JkX2klM0RCMDdQSkxCNkJNJTI2cGRfcmRfdyUzREp4V3ZMJTI2cGZfcmRfcCUzRDQ1YTcyNTg4LTgwZjctNDQxNC05ODUxLTc4NmY2YzE2ZDQyYiUyNnBkX3JkX3dnJTNEZ3NPYk8lMjZwZl9yZF9yJTNENDc1RTM0SlFWOUZOUEhKOVNTVEQlMjZwZF9yZF9yJTNEYjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1XCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDaW1nIGFsdD1cIkJhcnplbCBMYWItQ3JlYXRlZCBBYmFsb25lIFBlYXJsICZhbXA7IDE4SyBXaGl0ZSBHb2xkIFBsYXRpbmcgVHJlZSBvZiBMaWZlIERhbmdsaW5nIEVhcnJpbmdzXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFQaHFMS2hCWEwuX0FDX1NSMzIwLDMyMF8uanBnXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2VcIiBoZWlnaHQ9XCIxNjBcIiB3aWR0aD1cIjE2MFwiIGRhdGEtYS1keW5hbWljLWltYWdlPVwieyZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxUGhxTEtoQlhMLl9BQ19TUjE2MCwxNjBfLmpwZyZxdW90OzpbMTYwLDE2MF0sJnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFQaHFMS2hCWEwuX0FDX1NSNDgwLDQ4MF8uanBnJnF1b3Q7Ols0ODAsNDgwXSwmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MVBocUxLaEJYTC5fQUNfU1IzMjAsMzIwXy5qcGcmcXVvdDs6WzMyMCwzMjBdfVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGRhdGEtcm93cz1cIjRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cInNwb25zb3JlZC1wcm9kdWN0cy10cnVuY2F0b3ItdHJ1bmNhdGUgc3BvbnNvcmVkLXByb2R1Y3RzLXRydW5jYXRvci1saW5lLWNsYW1wLTRcIj4gICAgICAgICAgICBCYXJ6ZWwgTGFiLUNyZWF0ZWQgQWJhbG9uZSBQZWFybCAmYW1wOyAxOEsgV2hpdGUgR29sZCBQbGF0aW5nIFRyZWUgb2YgTGlmZSBEYW5nbGluZyBFYXIuLi5cdTAwM0MvZGl2PiAgICAgICAgICAgIFx1MDAzQy9hPiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPiAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWwgYWRSZXZpZXdMaW5rIGEtdGV4dC1ub3JtYWxcIiB0YXJnZXQ9XCJfdG9wXCIgcmVsPVwibm9vcGVuZXJcIiB0aXRsZT1cIkJhcnplbCBMYWItQ3JlYXRlZCBBYmFsb25lIFBlYXJsICZhbXA7IDE4SyBXaGl0ZSBHb2xkIFBsYXRpbmcgVHJlZSBvZiBMaWZlIERhbmdsaW5nIEVhcnJpbmdzXCIgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vZ3Avc2xyZWRpcmVjdC9waWNhc3NvUmVkaXJlY3QuaHRtbC9yZWY9c3NwYV9ka19kZXRhaWxfMD9pZT1VVEY4JmFtcDthZElkPUEwMTA1OTUwMVlRTVhKTjQ2S1NLTyZhbXA7cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTc1Nzg5Mjc5NjEzMTM1MDkmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsJmFtcDt1cmw9JTJGZHAlMkZCMDdQSkxCNkJNJTJGcmVmJTNEc3NwYV9ka19kZXRhaWxfMCUzRnBzYyUzRDElMjZwZF9yZF9pJTNEQjA3UEpMQjZCTSUyNnBkX3JkX3clM0RKeFd2TCUyNnBmX3JkX3AlM0Q0NWE3MjU4OC04MGY3LTQ0MTQtOTg1MS03ODZmNmMxNmQ0MmIlMjZwZF9yZF93ZyUzRGdzT2JPJTI2cGZfcmRfciUzRDQ3NUUzNEpRVjlGTlBISjlTU1REJTI2cGRfcmRfciUzRGI0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNSNjdXN0b21lclJldmlld3NcIj4gICAgICAgIFx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXIgYS1zdGFyLTVcIj5cdTAwM0MvaT4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNvbG9yLWxpbmtcIj4yXHUwMDNDL3NwYW4+ICAgICAgICBcdTAwM0MvYT4gICAgXHUwMDNDL2Rpdj4gICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1jb2xvci1wcmljZVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1jb2xvci1wcmljZVwiPiQxNC45OVx1MDAzQy9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gc3R5bGU9XCJwb3NpdGlvbjogcmVsYXRpdmU7IHRvcDogMnB4O1wiPiAgICAgICAgICAgICAgICBcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wcmltZSBhLWljb24tc21hbGxcIiByb2xlPVwiaW1nXCI+XHUwMDNDL2k+ICAgICAgICAgICAgXHUwMDNDL3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0MvbGk+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NsaSBjbGFzcz1cImEtY2Fyb3VzZWwtY2FyZFwiIHN0eWxlPVwid2lkdGg6MTYwcHg7XCIgcm9sZT1cImxpc3RpdGVtXCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInNwX2RldGFpbF9CMDdESzhQTFBLXCIgZGF0YS1hc2luPVwiQjA3REs4UExQS1wiIGRhdGEtcDEzbi1hc2luLW1ldGFkYXRhPVwieyZxdW90O3JlZiZxdW90OzomcXVvdDtzc3BhX2RrX2RldGFpbF8xJnF1b3Q7LCZxdW90O2FzaW4mcXVvdDs6JnF1b3Q7QjA3REs4UExQSyZxdW90O31cIiBkYXRhLXZpZXdwaXhlbHVybD1cIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTc1Nzg5Mjc5NjEzMTM1MDkmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsJmFtcDthZElkPTIwMDAxODg1OTM2OTU0MSZhbXA7YWRJbmRleD0xXCIgY2xhc3M9XCJhLXNlY3Rpb24gc3Bfb2ZmZXJWZXJ0aWNhbCBwMTNuLWFzaW5cIj4gICAgICAgICAgICAgICAgXHUwMDNDbm9zY3JpcHQ+ICAgICAgICBcdTAwM0NpbWcgYWx0PVwiXCIgc3JjPVwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZpZD03NTc4OTI3OTYxMzEzNTA5JndpZGdldE5hbWU9c3BfZGV0YWlsJmFkSWQ9MjAwMDE4ODU5MzY5NTQxJmV2ZW50VHlwZT0yJmFkSW5kZXg9MVwiPiAgICBcdTAwM0Mvbm9zY3JpcHQ+ICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHtmKHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJGaXJlYmlyZFNwUmVuZGVyaW5nXCIpKTt9KGZ1bmN0aW9uKFApIHsgICAgICAgIFAud2hlbignU3BvbnNvcmVkUHJvZHVjdHNWaWV3YWJpbGl0eScpLmV4ZWN1dGUoZnVuY3Rpb24oU1YpIHsgICAgICAgICAgICBTVi5sb2FkSW1hZ2VQaXhlbChcIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmaWQ9NzU3ODkyNzk2MTMxMzUwOSZ3aWRnZXROYW1lPXNwX2RldGFpbCZhZElkPTIwMDAxODg1OTM2OTU0MSZldmVudFR5cGU9MiZhZEluZGV4PTFcIik7ICAgICAgICB9KTsgICAgfSkpO1x1MDAzQy9zY3JpcHQ+ICAgICAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPihmdW5jdGlvbihmKSB7Zih3aW5kb3cuUC5fbmFtZXNwYWNlKFwiRmlyZWJpcmRTcFJlbmRlcmluZ1wiKSk7fShmdW5jdGlvbihQKSB7ICAgIFAud2hlbignQScsICdTcG9uc29yZWRQcm9kdWN0c1ZpZXdhYmlsaXR5JykuZXhlY3V0ZShmdW5jdGlvbihBLCBTVikgeyAgICAgICAgU1YucmVnaXN0ZXJWaWV3VHJhY2tpbmdFbGVtZW50KEEuJChcIiNzcF9kZXRhaWxfQjA3REs4UExQS1wiKSwgXCJzcF9kZXRhaWxcIik7ICAgIH0pO30pKTtcdTAwM0Mvc2NyaXB0PiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwicGFfZmVlZGJhY2tGb3JtX2NvbnRhaW5lcl9zcF9kZXRhaWxcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIj4gICAgXHUwMDNDZGl2IGNsYXNzPVwic3BfYWRJRFwiPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImEtbW9kYWxcIiBkYXRhLWEtbW9kYWw9XCJ7JnF1b3Q7Zm9vdGVyJnF1b3Q7OiZxdW90O1xcdTAwM2NkaXYgaWQ9J3Nwb25zb3JlZC1wcm9kdWN0cy1mZWVkYmFjay1mb290ZXInPiZxdW90OywmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzomcXVvdDtmYWxzZSZxdW90OywmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O3Nwb25zb3JlZC1wcm9kdWN0cy1mZWVkYmFjay1tb2RhbC1zcF9kZXRhaWwmcXVvdDssJnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7MzUwJnF1b3Q7LCZxdW90O2hlYWRlciZxdW90OzomcXVvdDtTaGFyZSB5b3VyIGZlZWRiYWNrJnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xhenlMb2FkL2hhbmRsZXIvc3AtZmVlZGJhY2staGFuZGxlci5odG1sP3BsPWtuRmJQJTJCJTJCNXMlMkJxc0x6SVo5Q2lrdm9XRiUyQlU2ak5yT1d2bVplJTJCcjglMkJsZ0lTaUdxY2ZiUVljTGlYOHRFSmNhRTVqcXU5QW5Sb2xBJTJCYyUwQURBR0tqbTU4JTJCeFFXY0Z2blVNVkolMkZTMCUyRkFVVngwcFFvWU5xdUxMY2l6diUyQllWVzU3SVZ5UlRrdWNGZEI1MzgwMjkzJTJGZ1AlMkYlMkZUNWJyZyUwQTRrbk9WdEthdktGdXdPYXlWVXVtRlhHaHlQaHhTSUlTTUUySk43OEVESER5VVIweDk5dEdxTlN6eVJCMXo5aHg0N1daV2oxY0JmbSUyQiUwQW1hTFVBZUtSSGRVN2VaVnVhcTVrSXMwaWRjWnZ3ZFdmaVZrV21RQzRPViUyRnhWbEJQRE05QmxUZUI5VXFaUHQzUWtCbWpKTTFUVXdsciUwQTNnUlNTeUlnMXFaNFZMQmlUZUJCZ0dDZzdXUEZpNjd5RjhYbHQzdmJ5SnRNcUQwb2ZZNVdYNHZFaFBKUUp2Zm5ocWRjb3h4ZWZUTVYlMEEzSlJSa05OaHAxVXhJMHEyRiUyRlREVDEySklkZm16OFFMTVdzMDNDNHU5djJWcG9iUkN6ZzdNMTN5eTdkUVJpUVdWQSUyQnFZbEJCRDdQSCUwQUJXQXhiZ0xqd2N6JTJGdCUyRkxmWmElMkJ2YXVCN3NQbkg3c0R0UE9RTVVCRlJrZk9laFdzSGlTN0wlMkJEeFVEMmQ4JTJCVjN3dTl4Tm5ybldkZ3BmJTBBbDNmdFIwUFFRZ0RkdEwyUHgxeW9oZDdoNVk2Q2s5b1FHQXU5d2daelpQNU4lMkZBNWZXRXROYVJ3UkFFemhZNkllT24lMkJrUWlidk82UjIlMEFBbkdiM0g2JTJCcDd5bWY3JTJGbWlHN1dCeTclMkJmS0p5VEtYdVZnZjA2cEhuZDRrJTNEJnF1b3Q7fVwiPiAgICAgICAgICAgIFx1MDAzQ2EgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIGNsYXNzPVwiYS1wb3BvdmVyLXRyaWdnZXIgYS1kZWNsYXJhdGl2ZVwiPkZlZWRiYWNrXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcG9wb3ZlclwiPlx1MDAzQy9pPlx1MDAzQy9hPiAgICAgICAgXHUwMDNDL3NwYW4+ICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIHRhcmdldD1cIl90b3BcIiByZWw9XCJub29wZW5lclwiIHRpdGxlPVwiV2hpdGUgR29sZCBmaWxpZ3JlZSBEYW5nbGUgRWFycmluZ3MgU3RlcmxpbmcgU2lsdmVyIFBvc3QgVHdpc3QgV2F2ZSBEcm9wIEVhcnJpbmdzIGZvciBXb21lblwiIGhyZWY9XCJodHRwczovL3d3dy5hbWF6b24uY29tL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXNzcGFfZGtfZGV0YWlsXzE/aWU9VVRGOCZhbXA7YWRJZD1BMDQ1NDgyOTFYWkRNNlIySkRETlAmYW1wO3F1YWxpZmllcj0xNTY5Nzk0MTg4JmFtcDtpZD03NTc4OTI3OTYxMzEzNTA5JmFtcDt3aWRnZXROYW1lPXNwX2RldGFpbCZhbXA7dXJsPSUyRmRwJTJGQjA3REs4UExQSyUyRnJlZiUzRHNzcGFfZGtfZGV0YWlsXzElM0Zwc2MlM0QxJTI2cGRfcmRfaSUzREIwN0RLOFBMUEslMjZwZF9yZF93JTNESnhXdkwlMjZwZl9yZF9wJTNENDVhNzI1ODgtODBmNy00NDE0LTk4NTEtNzg2ZjZjMTZkNDJiJTI2cGRfcmRfd2clM0Rnc09iTyUyNnBmX3JkX3IlM0Q0NzVFMzRKUVY5Rk5QSEo5U1NURCUyNnBkX3JkX3IlM0RiNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjVcIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NpbWcgYWx0PVwiV2hpdGUgR29sZCBmaWxpZ3JlZSBEYW5nbGUgRWFycmluZ3MgU3RlcmxpbmcgU2lsdmVyIFBvc3QgVHdpc3QgV2F2ZSBEcm9wIEVhcnJpbmdzIGZvciBXb21lblwiIHNyYz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxejdUdEFMaDlMLl9BQ19TUjMyMCwzMjBfLmpwZ1wiIGNsYXNzPVwiYS1keW5hbWljLWltYWdlXCIgaGVpZ2h0PVwiMTYwXCIgd2lkdGg9XCIxNjBcIiBkYXRhLWEtZHluYW1pYy1pbWFnZT1cInsmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MXo3VHRBTGg5TC5fQUNfU1I0ODAsNDgwXy5qcGcmcXVvdDs6WzQ4MCw0ODBdLCZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxejdUdEFMaDlMLl9BQ19TUjE2MCwxNjBfLmpwZyZxdW90OzpbMTYwLDE2MF0sJnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDF6N1R0QUxoOUwuX0FDX1NSMzIwLDMyMF8uanBnJnF1b3Q7OlszMjAsMzIwXX1cIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBkYXRhLXJvd3M9XCI0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgY2xhc3M9XCJzcG9uc29yZWQtcHJvZHVjdHMtdHJ1bmNhdG9yLXRydW5jYXRlIHNwb25zb3JlZC1wcm9kdWN0cy10cnVuY2F0b3ItbGluZS1jbGFtcC00XCI+ICAgICAgICAgICAgV2hpdGUgR29sZCBmaWxpZ3JlZSBEYW5nbGUgRWFycmluZ3MgU3RlcmxpbmcgU2lsdmVyIFBvc3QgVHdpc3QgV2F2ZSBEcm9wIEVhcnJpbmdzIGYuLi5cdTAwM0MvZGl2PiAgICAgICAgICAgIFx1MDAzQy9hPiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPiAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWwgYWRSZXZpZXdMaW5rIGEtdGV4dC1ub3JtYWxcIiB0YXJnZXQ9XCJfdG9wXCIgcmVsPVwibm9vcGVuZXJcIiB0aXRsZT1cIldoaXRlIEdvbGQgZmlsaWdyZWUgRGFuZ2xlIEVhcnJpbmdzIFN0ZXJsaW5nIFNpbHZlciBQb3N0IFR3aXN0IFdhdmUgRHJvcCBFYXJyaW5ncyBmb3IgV29tZW5cIiBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9zbHJlZGlyZWN0L3BpY2Fzc29SZWRpcmVjdC5odG1sL3JlZj1zc3BhX2RrX2RldGFpbF8xP2llPVVURjgmYW1wO2FkSWQ9QTA0NTQ4MjkxWFpETTZSMkpERE5QJmFtcDtxdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9NzU3ODkyNzk2MTMxMzUwOSZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwmYW1wO3VybD0lMkZkcCUyRkIwN0RLOFBMUEslMkZyZWYlM0Rzc3BhX2RrX2RldGFpbF8xJTNGcHNjJTNEMSUyNnBkX3JkX2klM0RCMDdESzhQTFBLJTI2cGRfcmRfdyUzREp4V3ZMJTI2cGZfcmRfcCUzRDQ1YTcyNTg4LTgwZjctNDQxNC05ODUxLTc4NmY2YzE2ZDQyYiUyNnBkX3JkX3dnJTNEZ3NPYk8lMjZwZl9yZF9yJTNENDc1RTM0SlFWOUZOUEhKOVNTVEQlMjZwZF9yZF9yJTNEYjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1I2N1c3RvbWVyUmV2aWV3c1wiPiAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3RhciBhLXN0YXItNC01XCI+XHUwMDNDL2k+ICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1jb2xvci1saW5rXCI+MTczXHUwMDNDL3NwYW4+ICAgICAgICBcdTAwM0MvYT4gICAgXHUwMDNDL2Rpdj4gICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1jb2xvci1wcmljZVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1jb2xvci1wcmljZVwiPiQxMi45OVx1MDAzQy9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gc3R5bGU9XCJwb3NpdGlvbjogcmVsYXRpdmU7IHRvcDogMnB4O1wiPiAgICAgICAgICAgICAgICBcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wcmltZSBhLWljb24tc21hbGxcIiByb2xlPVwiaW1nXCI+XHUwMDNDL2k+ICAgICAgICAgICAgXHUwMDNDL3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0MvbGk+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NsaSBjbGFzcz1cImEtY2Fyb3VzZWwtY2FyZFwiIHN0eWxlPVwid2lkdGg6MTYwcHg7XCIgcm9sZT1cImxpc3RpdGVtXCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInNwX2RldGFpbF9CMDc1TDlHUlkxXCIgZGF0YS1hc2luPVwiQjA3NUw5R1JZMVwiIGRhdGEtcDEzbi1hc2luLW1ldGFkYXRhPVwieyZxdW90O3JlZiZxdW90OzomcXVvdDtzc3BhX2RrX2RldGFpbF8yJnF1b3Q7LCZxdW90O2FzaW4mcXVvdDs6JnF1b3Q7QjA3NUw5R1JZMSZxdW90O31cIiBkYXRhLXZpZXdwaXhlbHVybD1cIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTc1Nzg5Mjc5NjEzMTM1MDkmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsJmFtcDthZElkPTIwMDAxNDE4Mjg5ODcxMSZhbXA7YWRJbmRleD0yXCIgY2xhc3M9XCJhLXNlY3Rpb24gc3Bfb2ZmZXJWZXJ0aWNhbCBwMTNuLWFzaW5cIj4gICAgICAgICAgICAgICAgXHUwMDNDbm9zY3JpcHQ+ICAgICAgICBcdTAwM0NpbWcgYWx0PVwiXCIgc3JjPVwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZpZD03NTc4OTI3OTYxMzEzNTA5JndpZGdldE5hbWU9c3BfZGV0YWlsJmFkSWQ9MjAwMDE0MTgyODk4NzExJmV2ZW50VHlwZT0yJmFkSW5kZXg9MlwiPiAgICBcdTAwM0Mvbm9zY3JpcHQ+ICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHtmKHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJGaXJlYmlyZFNwUmVuZGVyaW5nXCIpKTt9KGZ1bmN0aW9uKFApIHsgICAgICAgIFAud2hlbignU3BvbnNvcmVkUHJvZHVjdHNWaWV3YWJpbGl0eScpLmV4ZWN1dGUoZnVuY3Rpb24oU1YpIHsgICAgICAgICAgICBTVi5sb2FkSW1hZ2VQaXhlbChcIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmaWQ9NzU3ODkyNzk2MTMxMzUwOSZ3aWRnZXROYW1lPXNwX2RldGFpbCZhZElkPTIwMDAxNDE4Mjg5ODcxMSZldmVudFR5cGU9MiZhZEluZGV4PTJcIik7ICAgICAgICB9KTsgICAgfSkpO1x1MDAzQy9zY3JpcHQ+ICAgICAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPihmdW5jdGlvbihmKSB7Zih3aW5kb3cuUC5fbmFtZXNwYWNlKFwiRmlyZWJpcmRTcFJlbmRlcmluZ1wiKSk7fShmdW5jdGlvbihQKSB7ICAgIFAud2hlbignQScsICdTcG9uc29yZWRQcm9kdWN0c1ZpZXdhYmlsaXR5JykuZXhlY3V0ZShmdW5jdGlvbihBLCBTVikgeyAgICAgICAgU1YucmVnaXN0ZXJWaWV3VHJhY2tpbmdFbGVtZW50KEEuJChcIiNzcF9kZXRhaWxfQjA3NUw5R1JZMVwiKSwgXCJzcF9kZXRhaWxcIik7ICAgIH0pO30pKTtcdTAwM0Mvc2NyaXB0PiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwicGFfZmVlZGJhY2tGb3JtX2NvbnRhaW5lcl9zcF9kZXRhaWxcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIj4gICAgXHUwMDNDZGl2IGNsYXNzPVwic3BfYWRJRFwiPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImEtbW9kYWxcIiBkYXRhLWEtbW9kYWw9XCJ7JnF1b3Q7Zm9vdGVyJnF1b3Q7OiZxdW90O1xcdTAwM2NkaXYgaWQ9J3Nwb25zb3JlZC1wcm9kdWN0cy1mZWVkYmFjay1mb290ZXInPiZxdW90OywmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzomcXVvdDtmYWxzZSZxdW90OywmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O3Nwb25zb3JlZC1wcm9kdWN0cy1mZWVkYmFjay1tb2RhbC1zcF9kZXRhaWwmcXVvdDssJnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7MzUwJnF1b3Q7LCZxdW90O2hlYWRlciZxdW90OzomcXVvdDtTaGFyZSB5b3VyIGZlZWRiYWNrJnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xhenlMb2FkL2hhbmRsZXIvc3AtZmVlZGJhY2staGFuZGxlci5odG1sP3BsPUFIbDB3aFdsM1h4QzIzQmVZcnB5VG1MT0FBSjMxbDZjMDhZWnRZdXBwayUyRk5xNzYzNWVmJTJCT3QlMkZvNTZqVWoydTZjTEpOMlpiS2ZFS3MlMEFHMSUyRkJsRFBEc0NEYkRTOW96Z0dPV3RxVkVCUk9jZk1EQjJUQndZd2lKSGc1MEtsT01OOTl5ZnowcUYwaWRFWUhCaERYd2tmazlFdWslMEFRa0FYcSUyRnd0SyUyQjBsbU5NNmlHcDdCOXFwdU5UaHlBTXNpd3BDTHZaWEt1N3hLY3RBdSUyQlRTNzhEWWZOOGUyMmhsQXNHTUNaRmd0ODVTJTBBcVFoVlZlSHQwZUpoN0lVRmpaMVJBeHVza3RQcmQlMkJ3S01hSnViTzNLazBlMWklMkZ2aHM0bTYyQnh6WU1CNGVJVWEybXlpJTJGUkF5SjVGNiUwQWw3Z1VZWlhIU2tpcDBkb2NzVkJMNDlUV2R4YllpcWpPZE5ISkg2JTJCdzdjUUxIamh3T0hXMXNlcmxOSWxNaUpyRDJDQ2JYSXNpWjZJTSUwQUV5Tk91S3hqY0ZseUZPWE9UNGhiMVJ2SGJrNVlBN2RWaGphVUtRJTJGYVJXZXNyZGNtQzBwSkRDTnR5Z1BDOXlweElCdG1lUmlJNjNSWSUwQURhVFNGbCUyRjdMbG55Y1BvZkJPd0VEZ2hOMFkyQWMyJTJCSXhVNm9QN1BpVm1vJTJCcVFGN2FwaVBOb2w1b2tPY2xtJTJCQm5rbXE2NkZmTSUyQkZQJTBBRkJBYiUyRkw1JTJGUiUyQkd3QVRueGhvMkFQZWdpUUI4TTQlMkZUJTJCZWFYQm5PQnVKbDRyTmNpajdLNDMzOGxZMVJyNXNwYUI0YlFyYU1VTlRwVmImcXVvdDt9XCI+ICAgICAgICAgICAgXHUwMDNDYSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgY2xhc3M9XCJhLXBvcG92ZXItdHJpZ2dlciBhLWRlY2xhcmF0aXZlXCI+RmVlZGJhY2tcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wb3BvdmVyXCI+XHUwMDNDL2k+XHUwMDNDL2E+ICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGFyZ2V0PVwiX3RvcFwiIHJlbD1cIm5vb3BlbmVyXCIgdGl0bGU9XCJSb3NlIEdvbGQgT3ZlciBTdGVybGluZyBTaWx2ZXIgRmlsaWdyZWUgVGVhciBEcm9wIEVhcnJpbmdzXCIgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vZ3Avc2xyZWRpcmVjdC9waWNhc3NvUmVkaXJlY3QuaHRtbC9yZWY9c3NwYV9ka19kZXRhaWxfMj9pZT1VVEY4JmFtcDthZElkPUEwMDQ0OTkzSTBSRVRPUlFKSFpXJmFtcDtxdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9NzU3ODkyNzk2MTMxMzUwOSZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwmYW1wO3VybD0lMkZkcCUyRkIwNzVMOUdSWTElMkZyZWYlM0Rzc3BhX2RrX2RldGFpbF8yJTNGcHNjJTNEMSUyNnBkX3JkX2klM0RCMDc1TDlHUlkxJTI2cGRfcmRfdyUzREp4V3ZMJTI2cGZfcmRfcCUzRDQ1YTcyNTg4LTgwZjctNDQxNC05ODUxLTc4NmY2YzE2ZDQyYiUyNnBkX3JkX3dnJTNEZ3NPYk8lMjZwZl9yZF9yJTNENDc1RTM0SlFWOUZOUEhKOVNTVEQlMjZwZF9yZF9yJTNEYjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1XCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDaW1nIGFsdD1cIlJvc2UgR29sZCBPdmVyIFN0ZXJsaW5nIFNpbHZlciBGaWxpZ3JlZSBUZWFyIERyb3AgRWFycmluZ3NcIiBzcmM9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MWtvNHpaVUpOTC5fQUNfU1IzMjAsMzIwXy5qcGdcIiBjbGFzcz1cImEtZHluYW1pYy1pbWFnZVwiIGhlaWdodD1cIjE2MFwiIHdpZHRoPVwiMTYwXCIgZGF0YS1hLWR5bmFtaWMtaW1hZ2U9XCJ7JnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFrbzR6WlVKTkwuX0FDX1NSMzIwLDMyMF8uanBnJnF1b3Q7OlszMjAsMzIwXSwmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MWtvNHpaVUpOTC5fQUNfU1I0ODAsNDgwXy5qcGcmcXVvdDs6WzQ4MCw0ODBdLCZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxa280elpVSk5MLl9BQ19TUjE2MCwxNjBfLmpwZyZxdW90OzpbMTYwLDE2MF19XCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NkaXYgZGF0YS1yb3dzPVwiNFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGNsYXNzPVwic3BvbnNvcmVkLXByb2R1Y3RzLXRydW5jYXRvci10cnVuY2F0ZSBzcG9uc29yZWQtcHJvZHVjdHMtdHJ1bmNhdG9yLWxpbmUtY2xhbXAtNFwiPiAgICAgICAgICAgIFJvc2UgR29sZCBPdmVyIFN0ZXJsaW5nIFNpbHZlciBGaWxpZ3JlZSBUZWFyIERyb3AgRWFycmluZ3NcdTAwM0MvZGl2PiAgICAgICAgICAgIFx1MDAzQy9hPiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPiAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWwgYWRSZXZpZXdMaW5rIGEtdGV4dC1ub3JtYWxcIiB0YXJnZXQ9XCJfdG9wXCIgcmVsPVwibm9vcGVuZXJcIiB0aXRsZT1cIlJvc2UgR29sZCBPdmVyIFN0ZXJsaW5nIFNpbHZlciBGaWxpZ3JlZSBUZWFyIERyb3AgRWFycmluZ3NcIiBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9zbHJlZGlyZWN0L3BpY2Fzc29SZWRpcmVjdC5odG1sL3JlZj1zc3BhX2RrX2RldGFpbF8yP2llPVVURjgmYW1wO2FkSWQ9QTAwNDQ5OTNJMFJFVE9SUUpIWlcmYW1wO3F1YWxpZmllcj0xNTY5Nzk0MTg4JmFtcDtpZD03NTc4OTI3OTYxMzEzNTA5JmFtcDt3aWRnZXROYW1lPXNwX2RldGFpbCZhbXA7dXJsPSUyRmRwJTJGQjA3NUw5R1JZMSUyRnJlZiUzRHNzcGFfZGtfZGV0YWlsXzIlM0Zwc2MlM0QxJTI2cGRfcmRfaSUzREIwNzVMOUdSWTElMjZwZF9yZF93JTNESnhXdkwlMjZwZl9yZF9wJTNENDVhNzI1ODgtODBmNy00NDE0LTk4NTEtNzg2ZjZjMTZkNDJiJTI2cGRfcmRfd2clM0Rnc09iTyUyNnBmX3JkX3IlM0Q0NzVFMzRKUVY5Rk5QSEo5U1NURCUyNnBkX3JkX3IlM0RiNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUjY3VzdG9tZXJSZXZpZXdzXCI+ICAgICAgICBcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyIGEtc3Rhci00LTVcIj5cdTAwM0MvaT4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNvbG9yLWxpbmtcIj4xLDQ3Mlx1MDAzQy9zcGFuPiAgICAgICAgXHUwMDNDL2E+ICAgIFx1MDAzQy9kaXY+ICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtY29sb3ItcHJpY2VcIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtY29sb3ItcHJpY2VcIj4kMTkuMDBcdTAwM0Mvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIHN0eWxlPVwicG9zaXRpb246IHJlbGF0aXZlOyB0b3A6IDJweDtcIj4gICAgICAgICAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcHJpbWUgYS1pY29uLXNtYWxsXCIgcm9sZT1cImltZ1wiPlx1MDAzQy9pPiAgICAgICAgICAgIFx1MDAzQy9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0MvZGl2PiAgICBcdTAwM0NkaXY+ICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1zZWNvbmRhcnlcIj5UcnkgaXQgZnJlZSB3aXRoIFx1MDAzQ2I+UHJpbWUgV2FyZHJvYmVcdTAwM0MvYj5cdTAwM0Mvc3Bhbj4gICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2xpIGNsYXNzPVwiYS1jYXJvdXNlbC1jYXJkXCIgc3R5bGU9XCJ3aWR0aDoxNjBweDtcIiByb2xlPVwibGlzdGl0ZW1cIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwic3BfZGV0YWlsX0IwN1dYNlY0VkJcIiBkYXRhLWFzaW49XCJCMDdXWDZWNFZCXCIgZGF0YS1wMTNuLWFzaW4tbWV0YWRhdGE9XCJ7JnF1b3Q7cmVmJnF1b3Q7OiZxdW90O3NzcGFfZGtfZGV0YWlsXzMmcXVvdDssJnF1b3Q7YXNpbiZxdW90OzomcXVvdDtCMDdXWDZWNFZCJnF1b3Q7fVwiIGRhdGEtdmlld3BpeGVsdXJsPVwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9NzU3ODkyNzk2MTMxMzUwOSZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwmYW1wO2FkSWQ9MjAwMDE5MDg4ODYyNjExJmFtcDthZEluZGV4PTNcIiBjbGFzcz1cImEtc2VjdGlvbiBzcF9vZmZlclZlcnRpY2FsIHAxM24tYXNpblwiPiAgICAgICAgICAgICAgICBcdTAwM0Nub3NjcmlwdD4gICAgICAgIFx1MDAzQ2ltZyBhbHQ9XCJcIiBzcmM9XCIvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xvZ2dpbmcvbG9nLWFjdGlvbi5odG1sP3F1YWxpZmllcj0xNTY5Nzk0MTg4JmlkPTc1Nzg5Mjc5NjEzMTM1MDkmd2lkZ2V0TmFtZT1zcF9kZXRhaWwmYWRJZD0yMDAwMTkwODg4NjI2MTEmZXZlbnRUeXBlPTImYWRJbmRleD0zXCI+ICAgIFx1MDAzQy9ub3NjcmlwdD4gICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj4oZnVuY3Rpb24oZikge2Yod2luZG93LlAuX25hbWVzcGFjZShcIkZpcmViaXJkU3BSZW5kZXJpbmdcIikpO30oZnVuY3Rpb24oUCkgeyAgICAgICAgUC53aGVuKCdTcG9uc29yZWRQcm9kdWN0c1ZpZXdhYmlsaXR5JykuZXhlY3V0ZShmdW5jdGlvbihTVikgeyAgICAgICAgICAgIFNWLmxvYWRJbWFnZVBpeGVsKFwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZpZD03NTc4OTI3OTYxMzEzNTA5JndpZGdldE5hbWU9c3BfZGV0YWlsJmFkSWQ9MjAwMDE5MDg4ODYyNjExJmV2ZW50VHlwZT0yJmFkSW5kZXg9M1wiKTsgICAgICAgIH0pOyAgICB9KSk7XHUwMDNDL3NjcmlwdD4gICAgICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHtmKHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJGaXJlYmlyZFNwUmVuZGVyaW5nXCIpKTt9KGZ1bmN0aW9uKFApIHsgICAgUC53aGVuKCdBJywgJ1Nwb25zb3JlZFByb2R1Y3RzVmlld2FiaWxpdHknKS5leGVjdXRlKGZ1bmN0aW9uKEEsIFNWKSB7ICAgICAgICBTVi5yZWdpc3RlclZpZXdUcmFja2luZ0VsZW1lbnQoQS4kKFwiI3NwX2RldGFpbF9CMDdXWDZWNFZCXCIpLCBcInNwX2RldGFpbFwiKTsgICAgfSk7fSkpO1x1MDAzQy9zY3JpcHQ+ICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJwYV9mZWVkYmFja0Zvcm1fY29udGFpbmVyX3NwX2RldGFpbFwiIHN0eWxlPVwiZGlzcGxheTpub25lO1wiPiAgICBcdTAwM0NkaXYgY2xhc3M9XCJzcF9hZElEXCI+ICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYS1tb2RhbFwiIGRhdGEtYS1tb2RhbD1cInsmcXVvdDtmb290ZXImcXVvdDs6JnF1b3Q7XFx1MDAzY2RpdiBpZD0nc3BvbnNvcmVkLXByb2R1Y3RzLWZlZWRiYWNrLWZvb3Rlcic+JnF1b3Q7LCZxdW90O2Nsb3NlQnV0dG9uJnF1b3Q7OiZxdW90O2ZhbHNlJnF1b3Q7LCZxdW90O25hbWUmcXVvdDs6JnF1b3Q7c3BvbnNvcmVkLXByb2R1Y3RzLWZlZWRiYWNrLW1vZGFsLXNwX2RldGFpbCZxdW90OywmcXVvdDt3aWR0aCZxdW90OzomcXVvdDszNTAmcXVvdDssJnF1b3Q7aGVhZGVyJnF1b3Q7OiZxdW90O1NoYXJlIHlvdXIgZmVlZGJhY2smcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbGF6eUxvYWQvaGFuZGxlci9zcC1mZWVkYmFjay1oYW5kbGVyLmh0bWw/cGw9QWx6VXBpWTRZOEp3eFc5MUgwMVZNZVBadTNkT0J6WFc3dW9ESjVsQXAyMGFVQXZ2V3h4ZDIlMkZiQTZrUDdpdUhVWDE1WFMwN0J6djVoJTBBajAlMkZuNTAlMkZTMFlKaVdtdU9GaWtVV2FXalUzR1V5Q0NIVjdJR3ZqOVZYJTJGeXBzJTJGY3ZBeTRHUTRDYlVMUnpVblZPdW00aFpJUDJZMkQ2JTBBTiUyQiUyRlo1YndKRVF1QWF5dURsVGthbU1ZOVFFS01vRWlLRWVEQzJoQ2Y0NUY3T1lnenYwcSUyRnRIN09lc1lRdXZLYzhOV1ROWG9wdXg5WSUwQXFUUSUyQmN2TmthRmw5dUxPaHpYeWN5dlhHcTQ4NkpYMVcwRDkyY0c0VUlDQkFCZSUyQk9YRFQyWXJwYWIyWm1KQkNEWllZMnVZRk1IcDYlMkYlMEElMkYwRlYyWGdDNWl2OHlEYXFNbEQzcVBMbHElMkZ1ZmtFcyUyQkJ4TGNSekUyJTJCcU16c1cyY3hkVGhLYVlwd2tIY0kweHRETzBGOHJyQW5RWTYlMEE0ZXBZbVdvWlp2JTJGdUduQXNYSWRxcXBxMUZMd1JxeSUyRjBpUjRmemFOaGJoZXlDVHpoZCUyRldTdjh2cTYlMkJnT2hUOVRPclh4TWglMkZ4OHNLNiUwQThxamxsZHI4VnhGVDBWQiUyRmdsUTdKT1Z0WXV1OG9YS2NpWUVEalBTdE9Scmc3YnJMVThFbG5TWExIb0kyYUElMkZzOFprQThucVl4SXRPJTBBejdpMGx4NFFoZyUyQlMlMkZmOUpwNnI4UmFhMlRRcVVwaHI0MDdGbHdabXRFJTJCS2VCTWxwMGxxc0tVTHpjb1pnV3AyVUppaFF6RkVmblVpNCUwQVVRdDlYRDhhblJpZkJ5ZnFwNU9IanZ0SGN3VjdOWkhTMlFTdEZ1MkVkTkElM0QmcXVvdDt9XCI+ICAgICAgICAgICAgXHUwMDNDYSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgY2xhc3M9XCJhLXBvcG92ZXItdHJpZ2dlciBhLWRlY2xhcmF0aXZlXCI+RmVlZGJhY2tcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wb3BvdmVyXCI+XHUwMDNDL2k+XHUwMDNDL2E+ICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGFyZ2V0PVwiX3RvcFwiIHJlbD1cIm5vb3BlbmVyXCIgdGl0bGU9XCJDTEFTU1laSU5UIFJhaW5ib3cgRHJvcCBFYXJyaW5ncyBGb3IgV29tZW4gd2l0aCBDaXJjbGUsIEdvbGQgR2VvbWV0cmljIFJvdW5kIFdvbWVuIEZhc2hpb24gSmV3ZWxyeSBEYW5nbGluZyBDb2xvcmZ1bCBSaGluZXN0b25lIERyb3BzXCIgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vZ3Avc2xyZWRpcmVjdC9waWNhc3NvUmVkaXJlY3QuaHRtbC9yZWY9c3NwYV9ka19kZXRhaWxfMz9pZT1VVEY4JmFtcDthZElkPUEwMzAxNDgxM0ZIUU5IVEJZQUI5VyZhbXA7cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTc1Nzg5Mjc5NjEzMTM1MDkmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsJmFtcDt1cmw9JTJGZHAlMkZCMDdXWDZWNFZCJTJGcmVmJTNEc3NwYV9ka19kZXRhaWxfMyUzRnBzYyUzRDElMjZwZF9yZF9pJTNEQjA3V1g2VjRWQiUyNnBkX3JkX3clM0RKeFd2TCUyNnBmX3JkX3AlM0Q0NWE3MjU4OC04MGY3LTQ0MTQtOTg1MS03ODZmNmMxNmQ0MmIlMjZwZF9yZF93ZyUzRGdzT2JPJTI2cGZfcmRfciUzRDQ3NUUzNEpRVjlGTlBISjlTU1REJTI2cGRfcmRfciUzRGI0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2ltZyBhbHQ9XCJDTEFTU1laSU5UIFJhaW5ib3cgRHJvcCBFYXJyaW5ncyBGb3IgV29tZW4gd2l0aCBDaXJjbGUsIEdvbGQgR2VvbWV0cmljIFJvdW5kIFdvbWVuIEZhc2hpb24gSmV3ZWxyeSBEYW5nbGluZyBDb2xvcmZ1bCBSaGluZXN0b25lIERyb3BzXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDE4ajk1UUtQckwuX0FDX1NSMzIwLDMyMF8uanBnXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2VcIiBoZWlnaHQ9XCIxNjBcIiB3aWR0aD1cIjE2MFwiIGRhdGEtYS1keW5hbWljLWltYWdlPVwieyZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxOGo5NVFLUHJMLl9BQ19TUjQ4MCw0ODBfLmpwZyZxdW90OzpbNDgwLDQ4MF0sJnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDE4ajk1UUtQckwuX0FDX1NSMzIwLDMyMF8uanBnJnF1b3Q7OlszMjAsMzIwXSwmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MThqOTVRS1ByTC5fQUNfU1IxNjAsMTYwXy5qcGcmcXVvdDs6WzE2MCwxNjBdfVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGRhdGEtcm93cz1cIjRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cInNwb25zb3JlZC1wcm9kdWN0cy10cnVuY2F0b3ItdHJ1bmNhdGUgc3BvbnNvcmVkLXByb2R1Y3RzLXRydW5jYXRvci1saW5lLWNsYW1wLTRcIj4gICAgICAgICAgICBDTEFTU1laSU5UIFJhaW5ib3cgRHJvcCBFYXJyaW5ncyBGb3IgV29tZW4gd2l0aCBDaXJjbGUsIEdvbGQgR2VvbWV0cmljIFJvdW5kIFdvbWVuIC4uLlx1MDAzQy9kaXY+ICAgICAgICAgICAgXHUwMDNDL2E+ICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtY29sb3ItcHJpY2VcIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtY29sb3ItcHJpY2VcIj4kOS45OVx1MDAzQy9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gc3R5bGU9XCJwb3NpdGlvbjogcmVsYXRpdmU7IHRvcDogMnB4O1wiPiAgICAgICAgICAgICAgICBcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wcmltZSBhLWljb24tc21hbGxcIiByb2xlPVwiaW1nXCI+XHUwMDNDL2k+ICAgICAgICAgICAgXHUwMDNDL3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0MvbGk+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NsaSBjbGFzcz1cImEtY2Fyb3VzZWwtY2FyZFwiIHN0eWxlPVwid2lkdGg6MTYwcHg7XCIgcm9sZT1cImxpc3RpdGVtXCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInNwX2RldGFpbF9CMDBCM1JFN1EyXCIgZGF0YS1hc2luPVwiQjAwQjNSRTdRMlwiIGRhdGEtcDEzbi1hc2luLW1ldGFkYXRhPVwieyZxdW90O3JlZiZxdW90OzomcXVvdDtzc3BhX2RrX2RldGFpbF80JnF1b3Q7LCZxdW90O2FzaW4mcXVvdDs6JnF1b3Q7QjAwQjNSRTdRMiZxdW90O31cIiBkYXRhLXZpZXdwaXhlbHVybD1cIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTc1Nzg5Mjc5NjEzMTM1MDkmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsJmFtcDthZElkPTIwMDAxNDE2Njc3NTAxMSZhbXA7YWRJbmRleD00XCIgY2xhc3M9XCJhLXNlY3Rpb24gc3Bfb2ZmZXJWZXJ0aWNhbCBwMTNuLWFzaW5cIj4gICAgICAgICAgICAgICAgXHUwMDNDbm9zY3JpcHQ+ICAgICAgICBcdTAwM0NpbWcgYWx0PVwiXCIgc3JjPVwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZpZD03NTc4OTI3OTYxMzEzNTA5JndpZGdldE5hbWU9c3BfZGV0YWlsJmFkSWQ9MjAwMDE0MTY2Nzc1MDExJmV2ZW50VHlwZT0yJmFkSW5kZXg9NFwiPiAgICBcdTAwM0Mvbm9zY3JpcHQ+ICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHtmKHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJGaXJlYmlyZFNwUmVuZGVyaW5nXCIpKTt9KGZ1bmN0aW9uKFApIHsgICAgICAgIFAud2hlbignU3BvbnNvcmVkUHJvZHVjdHNWaWV3YWJpbGl0eScpLmV4ZWN1dGUoZnVuY3Rpb24oU1YpIHsgICAgICAgICAgICBTVi5sb2FkSW1hZ2VQaXhlbChcIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmaWQ9NzU3ODkyNzk2MTMxMzUwOSZ3aWRnZXROYW1lPXNwX2RldGFpbCZhZElkPTIwMDAxNDE2Njc3NTAxMSZldmVudFR5cGU9MiZhZEluZGV4PTRcIik7ICAgICAgICB9KTsgICAgfSkpO1x1MDAzQy9zY3JpcHQ+ICAgICAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPihmdW5jdGlvbihmKSB7Zih3aW5kb3cuUC5fbmFtZXNwYWNlKFwiRmlyZWJpcmRTcFJlbmRlcmluZ1wiKSk7fShmdW5jdGlvbihQKSB7ICAgIFAud2hlbignQScsICdTcG9uc29yZWRQcm9kdWN0c1ZpZXdhYmlsaXR5JykuZXhlY3V0ZShmdW5jdGlvbihBLCBTVikgeyAgICAgICAgU1YucmVnaXN0ZXJWaWV3VHJhY2tpbmdFbGVtZW50KEEuJChcIiNzcF9kZXRhaWxfQjAwQjNSRTdRMlwiKSwgXCJzcF9kZXRhaWxcIik7ICAgIH0pO30pKTtcdTAwM0Mvc2NyaXB0PiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwicGFfZmVlZGJhY2tGb3JtX2NvbnRhaW5lcl9zcF9kZXRhaWxcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIj4gICAgXHUwMDNDZGl2IGNsYXNzPVwic3BfYWRJRFwiPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImEtbW9kYWxcIiBkYXRhLWEtbW9kYWw9XCJ7JnF1b3Q7Zm9vdGVyJnF1b3Q7OiZxdW90O1xcdTAwM2NkaXYgaWQ9J3Nwb25zb3JlZC1wcm9kdWN0cy1mZWVkYmFjay1mb290ZXInPiZxdW90OywmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzomcXVvdDtmYWxzZSZxdW90OywmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O3Nwb25zb3JlZC1wcm9kdWN0cy1mZWVkYmFjay1tb2RhbC1zcF9kZXRhaWwmcXVvdDssJnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7MzUwJnF1b3Q7LCZxdW90O2hlYWRlciZxdW90OzomcXVvdDtTaGFyZSB5b3VyIGZlZWRiYWNrJnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xhenlMb2FkL2hhbmRsZXIvc3AtZmVlZGJhY2staGFuZGxlci5odG1sP3BsPXA3bE53S2QxZno2ck9mc2lNaXBzTTN5aFFuWlVESDNrSHYlMkZJTHVFUUdvOGNRZnhCaHh6WG5adXNDT0s5YVczaDlxOFNhZ1FMYUhwZSUwQSUyRjBsWm5SZGd2eXBkOHpJNlRVNXgxNUxJaVMlMkJWaHUyU3ZGeUhKcklWRGZZV2g3SE5jUFVjSjlNRlNKayUyRnc2JTJGQjhwVVhjdVREMnJXbSUwQW8weldRYTRiQXhvdU5FJTJCUXdIT0dJellNVW5XVlR6ZXV4R0tiRmlHYXNzcyUyQnM3anlZTnBwaXE5ZUVNNTI4d1VDJTJCM3JLJTJCdGJQRTBkVyUwQWFNVGNqdHdSaDFvYjFzMm5HUUtNTjh2U0lFbVg3VTNYcVkxcGxKcUhMTUlEeFYxVUM1d1JlckxUd3N3WVBPOXBDZlNyMjNnU1dKJTJGQiUwQXFZRmVGUVRHa2ZlZFlXVGhlcFVjOUd4T3ZvUiUyQk5uUUR3a3oxTkQ4OWRMWXJuYWJobHdsWmdSZEtkdW5qdmY0aU9LUE5iR25yUCUyQlAlMkYlMEFTQ3JqN2tPU2RHM1haWW5MV2lkZHFyTjVSRHRGY1VuWE9TUDd3MFFnUG9PR3l6RkJVblhYaWdCV3BmdnlGc28lMkZOSyUyQnJad1kzSUZjcyUwQWUzcUVCRzlKNHJSZ0wzbFhqOEYlMkJqamxtUTVDU0NGbmszUkwzTHY4a000NmN3RzJMQ0ZmRXB0JTJCOUVON0dkN0IlMkY4Zlo0ak9aQ01ueXUlMEFpNnBjUDQ2aWRTZzM3SW02Yk1PM29DbU1QcUFtRU1EJTJGQnpNYzJvNGFRT1NFcUJTeFRTVWNJNzRadTNIekFtJTJGbHBCS2phTWg3NnltRSZxdW90O31cIj4gICAgICAgICAgICBcdTAwM0NhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiBjbGFzcz1cImEtcG9wb3Zlci10cmlnZ2VyIGEtZGVjbGFyYXRpdmVcIj5GZWVkYmFja1x1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXBvcG92ZXJcIj5cdTAwM0MvaT5cdTAwM0MvYT4gICAgICAgIFx1MDAzQy9zcGFuPiAgICBcdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiB0YXJnZXQ9XCJfdG9wXCIgcmVsPVwibm9vcGVuZXJcIiB0aXRsZT1cIlJvc2UgR29sZCBQbGF0ZWQgU3RlcmxpbmcgU2lsdmVyIEFuZ2VsIFdpbmcgRHJvcCBFYXJyaW5nc1wiIGhyZWY9XCJodHRwczovL3d3dy5hbWF6b24uY29tL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXNzcGFfZGtfZGV0YWlsXzQ/aWU9VVRGOCZhbXA7YWRJZD1BMDY3NzgxOTFJV1NNTjRFQk5DSU4mYW1wO3F1YWxpZmllcj0xNTY5Nzk0MTg4JmFtcDtpZD03NTc4OTI3OTYxMzEzNTA5JmFtcDt3aWRnZXROYW1lPXNwX2RldGFpbCZhbXA7dXJsPSUyRmRwJTJGQjAwQjNSRTdRMiUyRnJlZiUzRHNzcGFfZGtfZGV0YWlsXzQlM0Zwc2MlM0QxJTI2cGRfcmRfaSUzREIwMEIzUkU3UTIlMjZwZF9yZF93JTNESnhXdkwlMjZwZl9yZF9wJTNENDVhNzI1ODgtODBmNy00NDE0LTk4NTEtNzg2ZjZjMTZkNDJiJTI2cGRfcmRfd2clM0Rnc09iTyUyNnBmX3JkX3IlM0Q0NzVFMzRKUVY5Rk5QSEo5U1NURCUyNnBkX3JkX3IlM0RiNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjVcIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NpbWcgYWx0PVwiUm9zZSBHb2xkIFBsYXRlZCBTdGVybGluZyBTaWx2ZXIgQW5nZWwgV2luZyBEcm9wIEVhcnJpbmdzXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFWbi1nbVY2NUwuX0FDX1NSMzIwLDMyMF8uanBnXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2VcIiBoZWlnaHQ9XCIxNjBcIiB3aWR0aD1cIjE2MFwiIGRhdGEtYS1keW5hbWljLWltYWdlPVwieyZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxVm4tZ21WNjVMLl9BQ19TUjQ4MCw0ODBfLmpwZyZxdW90OzpbNDgwLDQ4MF0sJnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFWbi1nbVY2NUwuX0FDX1NSMzIwLDMyMF8uanBnJnF1b3Q7OlszMjAsMzIwXSwmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MVZuLWdtVjY1TC5fQUNfU1IxNjAsMTYwXy5qcGcmcXVvdDs6WzE2MCwxNjBdfVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGRhdGEtcm93cz1cIjRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cInNwb25zb3JlZC1wcm9kdWN0cy10cnVuY2F0b3ItdHJ1bmNhdGUgc3BvbnNvcmVkLXByb2R1Y3RzLXRydW5jYXRvci1saW5lLWNsYW1wLTRcIj4gICAgICAgICAgICBSb3NlIEdvbGQgUGxhdGVkIFN0ZXJsaW5nIFNpbHZlciBBbmdlbCBXaW5nIERyb3AgRWFycmluZ3NcdTAwM0MvZGl2PiAgICAgICAgICAgIFx1MDAzQy9hPiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPiAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWwgYWRSZXZpZXdMaW5rIGEtdGV4dC1ub3JtYWxcIiB0YXJnZXQ9XCJfdG9wXCIgcmVsPVwibm9vcGVuZXJcIiB0aXRsZT1cIlJvc2UgR29sZCBQbGF0ZWQgU3RlcmxpbmcgU2lsdmVyIEFuZ2VsIFdpbmcgRHJvcCBFYXJyaW5nc1wiIGhyZWY9XCJodHRwczovL3d3dy5hbWF6b24uY29tL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXNzcGFfZGtfZGV0YWlsXzQ/aWU9VVRGOCZhbXA7YWRJZD1BMDY3NzgxOTFJV1NNTjRFQk5DSU4mYW1wO3F1YWxpZmllcj0xNTY5Nzk0MTg4JmFtcDtpZD03NTc4OTI3OTYxMzEzNTA5JmFtcDt3aWRnZXROYW1lPXNwX2RldGFpbCZhbXA7dXJsPSUyRmRwJTJGQjAwQjNSRTdRMiUyRnJlZiUzRHNzcGFfZGtfZGV0YWlsXzQlM0Zwc2MlM0QxJTI2cGRfcmRfaSUzREIwMEIzUkU3UTIlMjZwZF9yZF93JTNESnhXdkwlMjZwZl9yZF9wJTNENDVhNzI1ODgtODBmNy00NDE0LTk4NTEtNzg2ZjZjMTZkNDJiJTI2cGRfcmRfd2clM0Rnc09iTyUyNnBmX3JkX3IlM0Q0NzVFMzRKUVY5Rk5QSEo5U1NURCUyNnBkX3JkX3IlM0RiNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUjY3VzdG9tZXJSZXZpZXdzXCI+ICAgICAgICBcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyIGEtc3Rhci00LTVcIj5cdTAwM0MvaT4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNvbG9yLWxpbmtcIj42MDJcdTAwM0Mvc3Bhbj4gICAgICAgIFx1MDAzQy9hPiAgICBcdTAwM0MvZGl2PiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLWNvbG9yLXByaWNlXCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNvbG9yLXByaWNlXCI+JDguMTlcdTAwM0Mvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIHN0eWxlPVwicG9zaXRpb246IHJlbGF0aXZlOyB0b3A6IDJweDtcIj4gICAgICAgICAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcHJpbWUgYS1pY29uLXNtYWxsXCIgcm9sZT1cImltZ1wiPlx1MDAzQy9pPiAgICAgICAgICAgIFx1MDAzQy9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0MvZGl2Plx1MDAzQy9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2xpPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDbGkgY2xhc3M9XCJhLWNhcm91c2VsLWNhcmRcIiBzdHlsZT1cIndpZHRoOjE2MHB4O1wiIHJvbGU9XCJsaXN0aXRlbVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJzcF9kZXRhaWxfQjA3VFhDOVpKUFwiIGRhdGEtYXNpbj1cIkIwN1RYQzlaSlBcIiBkYXRhLXAxM24tYXNpbi1tZXRhZGF0YT1cInsmcXVvdDtyZWYmcXVvdDs6JnF1b3Q7c3NwYV9ka19kZXRhaWxfNSZxdW90OywmcXVvdDthc2luJnF1b3Q7OiZxdW90O0IwN1RYQzlaSlAmcXVvdDt9XCIgZGF0YS12aWV3cGl4ZWx1cmw9XCIvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xvZ2dpbmcvbG9nLWFjdGlvbi5odG1sP3F1YWxpZmllcj0xNTY5Nzk0MTg4JmFtcDtpZD03NTc4OTI3OTYxMzEzNTA5JmFtcDt3aWRnZXROYW1lPXNwX2RldGFpbCZhbXA7YWRJZD0yMDAwMTY4MDUwMjIzMTEmYW1wO2FkSW5kZXg9NVwiIGNsYXNzPVwiYS1zZWN0aW9uIHNwX29mZmVyVmVydGljYWwgcDEzbi1hc2luXCI+ICAgICAgICAgICAgICAgIFx1MDAzQ25vc2NyaXB0PiAgICAgICAgXHUwMDNDaW1nIGFsdD1cIlwiIHNyYz1cIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmaWQ9NzU3ODkyNzk2MTMxMzUwOSZ3aWRnZXROYW1lPXNwX2RldGFpbCZhZElkPTIwMDAxNjgwNTAyMjMxMSZldmVudFR5cGU9MiZhZEluZGV4PTVcIj4gICAgXHUwMDNDL25vc2NyaXB0PiAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPihmdW5jdGlvbihmKSB7Zih3aW5kb3cuUC5fbmFtZXNwYWNlKFwiRmlyZWJpcmRTcFJlbmRlcmluZ1wiKSk7fShmdW5jdGlvbihQKSB7ICAgICAgICBQLndoZW4oJ1Nwb25zb3JlZFByb2R1Y3RzVmlld2FiaWxpdHknKS5leGVjdXRlKGZ1bmN0aW9uKFNWKSB7ICAgICAgICAgICAgU1YubG9hZEltYWdlUGl4ZWwoXCIvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xvZ2dpbmcvbG9nLWFjdGlvbi5odG1sP3F1YWxpZmllcj0xNTY5Nzk0MTg4JmlkPTc1Nzg5Mjc5NjEzMTM1MDkmd2lkZ2V0TmFtZT1zcF9kZXRhaWwmYWRJZD0yMDAwMTY4MDUwMjIzMTEmZXZlbnRUeXBlPTImYWRJbmRleD01XCIpOyAgICAgICAgfSk7ICAgIH0pKTtcdTAwM0Mvc2NyaXB0PiAgICAgICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj4oZnVuY3Rpb24oZikge2Yod2luZG93LlAuX25hbWVzcGFjZShcIkZpcmViaXJkU3BSZW5kZXJpbmdcIikpO30oZnVuY3Rpb24oUCkgeyAgICBQLndoZW4oJ0EnLCAnU3BvbnNvcmVkUHJvZHVjdHNWaWV3YWJpbGl0eScpLmV4ZWN1dGUoZnVuY3Rpb24oQSwgU1YpIHsgICAgICAgIFNWLnJlZ2lzdGVyVmlld1RyYWNraW5nRWxlbWVudChBLiQoXCIjc3BfZGV0YWlsX0IwN1RYQzlaSlBcIiksIFwic3BfZGV0YWlsXCIpOyAgICB9KTt9KSk7XHUwMDNDL3NjcmlwdD4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cInBhX2ZlZWRiYWNrRm9ybV9jb250YWluZXJfc3BfZGV0YWlsXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCI+ICAgIFx1MDAzQ2RpdiBjbGFzcz1cInNwX2FkSURcIj4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLW1vZGFsXCIgZGF0YS1hLW1vZGFsPVwieyZxdW90O2Zvb3RlciZxdW90OzomcXVvdDtcXHUwMDNjZGl2IGlkPSdzcG9uc29yZWQtcHJvZHVjdHMtZmVlZGJhY2stZm9vdGVyJz4mcXVvdDssJnF1b3Q7Y2xvc2VCdXR0b24mcXVvdDs6JnF1b3Q7ZmFsc2UmcXVvdDssJnF1b3Q7bmFtZSZxdW90OzomcXVvdDtzcG9uc29yZWQtcHJvZHVjdHMtZmVlZGJhY2stbW9kYWwtc3BfZGV0YWlsJnF1b3Q7LCZxdW90O3dpZHRoJnF1b3Q7OiZxdW90OzM1MCZxdW90OywmcXVvdDtoZWFkZXImcXVvdDs6JnF1b3Q7U2hhcmUgeW91ciBmZWVkYmFjayZxdW90OywmcXVvdDt1cmwmcXVvdDs6JnF1b3Q7L2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sYXp5TG9hZC9oYW5kbGVyL3NwLWZlZWRiYWNrLWhhbmRsZXIuaHRtbD9wbD15Nm9BcXJUa204OWxtUmZFV3hQR2EwbTFHR2VUdksxRGFrdzZzdFhNTEI5eW1CU212T2lYY2dTVzhHdjFVU1UweHNUcmZpMnV0VjVIJTBBJTJCbHBFUU5IcEs0SGFtN0dmNXNxWnJUTlJJYVNDZzdMdndPOHhBMUMzOXlOb0hOd2dQemd5d08zT01sMnZmTTdPSk5KSmtXeW5hTWxMJTBBa0U5QjRSUW5FaWJtd0swMHliZFlZczF0JTJCbFA0cEk1UTA4VldsTDVRcWhtamk4THByRk8wOTJkazRNbngyNlRNaXE0TDFCdXllWkV2JTBBWVQzeGJ4Mk1qVkxoNjVxWEQ2ZCUyQjhlTWVCUUMycENIck4wQUp2OEVwRmo3d3JGVnpUazM0MjVaYjdrODVHR1hFVmJVSnJOV0UlMkJPczMlMEFqZzNRN2U3ajBLemtzdHJMRkdvWlVDWDlFMVZXcjElMkZnM24lMkZ3Q1RJSVo5SnVZY1VNUDVXVlJMRXQlMkZDUCUyQnljaW8ycUVYTmM4SWRIY2MlMEFDVnl2WVFpc1Q2MG02Rkp2QzBQMEdDVnc4ZGJuUW9pVmFiQklQY0klMkZvZDQlMkI4QUtDQks4QiUyQjdiQzlzSm15dFFseUdzMmVQZGYwb2FQJTBBbUglMkJFTTNVNmJHbG1hUVAwUDREJTJGSnA1JTJCaTU0SmpNN3pSSjNNSmJpS25kbSUyRkEyclhkQ1hFb1FTRU1tc1JMWDBnNFpFdkkxTUlkaHllJTBBOGZmOGVUVWhnZU5lOG11UktaUlZ3alc5cTRHSVp4TnRSc1FuS21oczFjamFUY2pSMFZlSURSTmJ5OUsyWnhVaEtYNks1RmRmRnd2TyUwQWpCVGM0a05kMUlpS1RFd01oSlpLdWlLdVRoWGhIc2RTYU83WjZ5TmNlZFklM0QmcXVvdDt9XCI+ICAgICAgICAgICAgXHUwMDNDYSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgY2xhc3M9XCJhLXBvcG92ZXItdHJpZ2dlciBhLWRlY2xhcmF0aXZlXCI+RmVlZGJhY2tcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wb3BvdmVyXCI+XHUwMDNDL2k+XHUwMDNDL2E+ICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGFyZ2V0PVwiX3RvcFwiIHJlbD1cIm5vb3BlbmVyXCIgdGl0bGU9XCIwLjEwIENhcmF0IChjdHR3KSBSb3VuZCBXaGl0ZSBEaWFtb25kIExhZGllcyBTdGFycyBEYW5nbGluZyBEcm9wIEVhcnJpbmdzIDEvMTAgQ1QsIDEwSyBXaGl0ZSBHb2xkXCIgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vZ3Avc2xyZWRpcmVjdC9waWNhc3NvUmVkaXJlY3QuaHRtbC9yZWY9c3NwYV9ka19kZXRhaWxfNT9pZT1VVEY4JmFtcDthZElkPUEwNzYzMjYyM1E2UUs4OTYwTTlYUiZhbXA7cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTc1Nzg5Mjc5NjEzMTM1MDkmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsJmFtcDt1cmw9JTJGZHAlMkZCMDdUWEM5WkpQJTJGcmVmJTNEc3NwYV9ka19kZXRhaWxfNSUzRnBzYyUzRDElMjZwZF9yZF9pJTNEQjA3VFhDOVpKUCUyNnBkX3JkX3clM0RKeFd2TCUyNnBmX3JkX3AlM0Q0NWE3MjU4OC04MGY3LTQ0MTQtOTg1MS03ODZmNmMxNmQ0MmIlMjZwZF9yZF93ZyUzRGdzT2JPJTI2cGZfcmRfciUzRDQ3NUUzNEpRVjlGTlBISjlTU1REJTI2cGRfcmRfciUzRGI0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2ltZyBhbHQ9XCIwLjEwIENhcmF0IChjdHR3KSBSb3VuZCBXaGl0ZSBEaWFtb25kIExhZGllcyBTdGFycyBEYW5nbGluZyBEcm9wIEVhcnJpbmdzIDEvMTAgQ1QsIDEwSyBXaGl0ZSBHb2xkXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFvaTI0WXYtLUwuX0FDX1NSMzIwLDMyMF8uanBnXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2VcIiBoZWlnaHQ9XCIxNjBcIiB3aWR0aD1cIjE2MFwiIGRhdGEtYS1keW5hbWljLWltYWdlPVwieyZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxb2kyNFl2LS1MLl9BQ19TUjE2MCwxNjBfLmpwZyZxdW90OzpbMTYwLDE2MF0sJnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFvaTI0WXYtLUwuX0FDX1NSNDgwLDQ4MF8uanBnJnF1b3Q7Ols0ODAsNDgwXSwmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MW9pMjRZdi0tTC5fQUNfU1IzMjAsMzIwXy5qcGcmcXVvdDs6WzMyMCwzMjBdfVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGRhdGEtcm93cz1cIjRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cInNwb25zb3JlZC1wcm9kdWN0cy10cnVuY2F0b3ItdHJ1bmNhdGUgc3BvbnNvcmVkLXByb2R1Y3RzLXRydW5jYXRvci1saW5lLWNsYW1wLTRcIj4gICAgICAgICAgICAwLjEwIENhcmF0IChjdHR3KSBSb3VuZCBXaGl0ZSBEaWFtb25kIExhZGllcyBTdGFycyBEYW5nbGluZyBEcm9wIEVhcnJpbmdzIDEvMTAgQ1QsIC4uLlx1MDAzQy9kaXY+ICAgICAgICAgICAgXHUwMDNDL2E+ICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtY29sb3ItcHJpY2VcIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtY29sb3ItcHJpY2VcIj4kMjUwLjkwXHUwMDNDL3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBzdHlsZT1cInBvc2l0aW9uOiByZWxhdGl2ZTsgdG9wOiAycHg7XCI+ICAgICAgICAgICAgICAgIFx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXByaW1lIGEtaWNvbi1zbWFsbFwiIHJvbGU9XCJpbWdcIj5cdTAwM0MvaT4gICAgICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2xpIGNsYXNzPVwiYS1jYXJvdXNlbC1jYXJkXCIgc3R5bGU9XCJ3aWR0aDoxNjBweDtcIiByb2xlPVwibGlzdGl0ZW1cIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwic3BfZGV0YWlsX0IwMDhWMDRGUFdcIiBkYXRhLWFzaW49XCJCMDA4VjA0RlBXXCIgZGF0YS1wMTNuLWFzaW4tbWV0YWRhdGE9XCJ7JnF1b3Q7cmVmJnF1b3Q7OiZxdW90O3NzcGFfZGtfZGV0YWlsXzYmcXVvdDssJnF1b3Q7YXNpbiZxdW90OzomcXVvdDtCMDA4VjA0RlBXJnF1b3Q7fVwiIGRhdGEtdmlld3BpeGVsdXJsPVwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9NzU3ODkyNzk2MTMxMzUwOSZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwmYW1wO2FkSWQ9MjAwMDA5Njk1MDcxNDQxJmFtcDthZEluZGV4PTZcIiBjbGFzcz1cImEtc2VjdGlvbiBzcF9vZmZlclZlcnRpY2FsIHAxM24tYXNpblwiPiAgICAgICAgICAgICAgICBcdTAwM0Nub3NjcmlwdD4gICAgICAgIFx1MDAzQ2ltZyBhbHQ9XCJcIiBzcmM9XCIvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xvZ2dpbmcvbG9nLWFjdGlvbi5odG1sP3F1YWxpZmllcj0xNTY5Nzk0MTg4JmlkPTc1Nzg5Mjc5NjEzMTM1MDkmd2lkZ2V0TmFtZT1zcF9kZXRhaWwmYWRJZD0yMDAwMDk2OTUwNzE0NDEmZXZlbnRUeXBlPTImYWRJbmRleD02XCI+ICAgIFx1MDAzQy9ub3NjcmlwdD4gICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj4oZnVuY3Rpb24oZikge2Yod2luZG93LlAuX25hbWVzcGFjZShcIkZpcmViaXJkU3BSZW5kZXJpbmdcIikpO30oZnVuY3Rpb24oUCkgeyAgICAgICAgUC53aGVuKCdTcG9uc29yZWRQcm9kdWN0c1ZpZXdhYmlsaXR5JykuZXhlY3V0ZShmdW5jdGlvbihTVikgeyAgICAgICAgICAgIFNWLmxvYWRJbWFnZVBpeGVsKFwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZpZD03NTc4OTI3OTYxMzEzNTA5JndpZGdldE5hbWU9c3BfZGV0YWlsJmFkSWQ9MjAwMDA5Njk1MDcxNDQxJmV2ZW50VHlwZT0yJmFkSW5kZXg9NlwiKTsgICAgICAgIH0pOyAgICB9KSk7XHUwMDNDL3NjcmlwdD4gICAgICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHtmKHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJGaXJlYmlyZFNwUmVuZGVyaW5nXCIpKTt9KGZ1bmN0aW9uKFApIHsgICAgUC53aGVuKCdBJywgJ1Nwb25zb3JlZFByb2R1Y3RzVmlld2FiaWxpdHknKS5leGVjdXRlKGZ1bmN0aW9uKEEsIFNWKSB7ICAgICAgICBTVi5yZWdpc3RlclZpZXdUcmFja2luZ0VsZW1lbnQoQS4kKFwiI3NwX2RldGFpbF9CMDA4VjA0RlBXXCIpLCBcInNwX2RldGFpbFwiKTsgICAgfSk7fSkpO1x1MDAzQy9zY3JpcHQ+ICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJwYV9mZWVkYmFja0Zvcm1fY29udGFpbmVyX3NwX2RldGFpbFwiIHN0eWxlPVwiZGlzcGxheTpub25lO1wiPiAgICBcdTAwM0NkaXYgY2xhc3M9XCJzcF9hZElEXCI+ICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYS1tb2RhbFwiIGRhdGEtYS1tb2RhbD1cInsmcXVvdDtmb290ZXImcXVvdDs6JnF1b3Q7XFx1MDAzY2RpdiBpZD0nc3BvbnNvcmVkLXByb2R1Y3RzLWZlZWRiYWNrLWZvb3Rlcic+JnF1b3Q7LCZxdW90O2Nsb3NlQnV0dG9uJnF1b3Q7OiZxdW90O2ZhbHNlJnF1b3Q7LCZxdW90O25hbWUmcXVvdDs6JnF1b3Q7c3BvbnNvcmVkLXByb2R1Y3RzLWZlZWRiYWNrLW1vZGFsLXNwX2RldGFpbCZxdW90OywmcXVvdDt3aWR0aCZxdW90OzomcXVvdDszNTAmcXVvdDssJnF1b3Q7aGVhZGVyJnF1b3Q7OiZxdW90O1NoYXJlIHlvdXIgZmVlZGJhY2smcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbGF6eUxvYWQvaGFuZGxlci9zcC1mZWVkYmFjay1oYW5kbGVyLmh0bWw/cGw9UFFXUVU0WmRKaGNjdWx6b05sTUslMkJBTTN6a3dGaTY2a0FvVm9CWnRNRTZTJTJCUTdYSG9KeXJ1a08lMkZyeVBoZ0NMJTJCVDl6b0Z4NzJXS25QJTBBWVdKaE96bllqdm5OMkxoUjY3WW9UWWhhNVVEQkNEQ1pVR09GNkZobVpBejhvbk5oYk9NSnFYeEhVcUxYQyUyRkNURkMxZFZad3hmRjFqJTBBOHVidFNNdXcySWtlcnFBU0RzUFVBaGI4OVBaMG9Ed21JTCUyQjNVb0hWa0VzaXpEVTYlMkJHcXNJVjd6MzZMNTdvbGs1Z1JZS1BVNWlxQVglMEE0c3olMkY1RlpCWFpza1dLNWtVVFBjOGFtaE84dkR6cDM3MVRzdFpucnM1cG54OG1KdzZrYnNWZHViWXRDZHhEc0dCd3hBVnNYTSUyRjZNaSUwQW1hSkg5YnpTMjlHdGolMkZvaVF2aHRxWDN6SzM0RmxCOUVSenplTkFuMVNQJTJCc0slMkJWQURmZFo4aW5TMzJMMlk5clRkVmxUTmdqNmdXaXUlMEFMdDZxdFJoNGVVSDNDenUlMkZoQnlzakdPM1h4OVZidWZ1SGVhejUlMkJsTjJQcE4yRWZ1OGs5UHZhRmE0RkNGeDB0eHN3WXFSbEpnJTJCUzZ6JTBBczM3cVNKMjJVaTJxM3RqTDc0eEpNNkhnRmJlRER3MXFEaWVzdGF5cWFzbVBmOE44YlFxdEZKeE9ISldvd0cwS2dCRTYyRFRvdWl6bSUwQUJKUjFhS3ppYTY3YXRUMmljSUtIZTUlMkIlMkZFenQ1eTc3SFVzSjl3JTJGJTJGanhzRVJhWkVlM2gzeHhiZWd1cEJJZ0s4ZkJGVFZLNDZBUiUyQkN1JTBBc3JWTUtmTDdFd3I2ajQlMkZKNyUyQmxnYVZSQWt4VjdiY1p4c2pkcWFtTUtOaU0lM0QmcXVvdDt9XCI+ICAgICAgICAgICAgXHUwMDNDYSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgY2xhc3M9XCJhLXBvcG92ZXItdHJpZ2dlciBhLWRlY2xhcmF0aXZlXCI+RmVlZGJhY2tcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wb3BvdmVyXCI+XHUwMDNDL2k+XHUwMDNDL2E+ICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGFyZ2V0PVwiX3RvcFwiIHJlbD1cIm5vb3BlbmVyXCIgdGl0bGU9XCJUSEUgUEVBUkwgU09VUkNFIDE0SyBHb2xkIDktMTBtbSBCYXJvcXVlIEJsYWNrIFRhaGl0aWFuIEN1bHR1cmVkIFBlYXJsIERyb3AgRGFuZ2xpbmcgVGluY3VwIEVhcnJpbmdzIGZvciBXb21lblwiIGhyZWY9XCJodHRwczovL3d3dy5hbWF6b24uY29tL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXNzcGFfZGtfZGV0YWlsXzY/aWU9VVRGOCZhbXA7YWRJZD1BMDAzNTM1OTI0RDVQOEdRU0lONkUmYW1wO3F1YWxpZmllcj0xNTY5Nzk0MTg4JmFtcDtpZD03NTc4OTI3OTYxMzEzNTA5JmFtcDt3aWRnZXROYW1lPXNwX2RldGFpbCZhbXA7dXJsPSUyRmRwJTJGQjAwOFYwNEZQVyUyRnJlZiUzRHNzcGFfZGtfZGV0YWlsXzYlM0Zwc2MlM0QxJTI2cGRfcmRfaSUzREIwMDhWMDRGUFclMjZwZF9yZF93JTNESnhXdkwlMjZwZl9yZF9wJTNENDVhNzI1ODgtODBmNy00NDE0LTk4NTEtNzg2ZjZjMTZkNDJiJTI2cGRfcmRfd2clM0Rnc09iTyUyNnBmX3JkX3IlM0Q0NzVFMzRKUVY5Rk5QSEo5U1NURCUyNnBkX3JkX3IlM0RiNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjVcIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NpbWcgYWx0PVwiVEhFIFBFQVJMIFNPVVJDRSAxNEsgR29sZCA5LTEwbW0gQmFyb3F1ZSBCbGFjayBUYWhpdGlhbiBDdWx0dXJlZCBQZWFybCBEcm9wIERhbmdsaW5nIFRpbmN1cCBFYXJyaW5ncyBmb3IgV29tZW5cIiBzcmM9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MTJFT1ZqRXp5TC5fQUNfU1IzMjAsMzIwXy5qcGdcIiBjbGFzcz1cImEtZHluYW1pYy1pbWFnZVwiIGhlaWdodD1cIjE2MFwiIHdpZHRoPVwiMTYwXCIgZGF0YS1hLWR5bmFtaWMtaW1hZ2U9XCJ7JnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDEyRU9WakV6eUwuX0FDX1NSMzIwLDMyMF8uanBnJnF1b3Q7OlszMjAsMzIwXSwmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MTJFT1ZqRXp5TC5fQUNfU1IxNjAsMTYwXy5qcGcmcXVvdDs6WzE2MCwxNjBdLCZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxMkVPVmpFenlMLl9BQ19TUjQ4MCw0ODBfLmpwZyZxdW90OzpbNDgwLDQ4MF19XCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NkaXYgZGF0YS1yb3dzPVwiNFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGNsYXNzPVwic3BvbnNvcmVkLXByb2R1Y3RzLXRydW5jYXRvci10cnVuY2F0ZSBzcG9uc29yZWQtcHJvZHVjdHMtdHJ1bmNhdG9yLWxpbmUtY2xhbXAtNFwiPiAgICAgICAgICAgIFRIRSBQRUFSTCBTT1VSQ0UgMTRLIEdvbGQgOS0xMG1tIEJhcm9xdWUgQmxhY2sgVGFoaXRpYW4gQ3VsdHVyZWQgUGVhcmwgRHJvcCBEYW5nbGluLi4uXHUwMDNDL2Rpdj4gICAgICAgICAgICBcdTAwM0MvYT4gICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj4gICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsIGFkUmV2aWV3TGluayBhLXRleHQtbm9ybWFsXCIgdGFyZ2V0PVwiX3RvcFwiIHJlbD1cIm5vb3BlbmVyXCIgdGl0bGU9XCJUSEUgUEVBUkwgU09VUkNFIDE0SyBHb2xkIDktMTBtbSBCYXJvcXVlIEJsYWNrIFRhaGl0aWFuIEN1bHR1cmVkIFBlYXJsIERyb3AgRGFuZ2xpbmcgVGluY3VwIEVhcnJpbmdzIGZvciBXb21lblwiIGhyZWY9XCJodHRwczovL3d3dy5hbWF6b24uY29tL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXNzcGFfZGtfZGV0YWlsXzY/aWU9VVRGOCZhbXA7YWRJZD1BMDAzNTM1OTI0RDVQOEdRU0lONkUmYW1wO3F1YWxpZmllcj0xNTY5Nzk0MTg4JmFtcDtpZD03NTc4OTI3OTYxMzEzNTA5JmFtcDt3aWRnZXROYW1lPXNwX2RldGFpbCZhbXA7dXJsPSUyRmRwJTJGQjAwOFYwNEZQVyUyRnJlZiUzRHNzcGFfZGtfZGV0YWlsXzYlM0Zwc2MlM0QxJTI2cGRfcmRfaSUzREIwMDhWMDRGUFclMjZwZF9yZF93JTNESnhXdkwlMjZwZl9yZF9wJTNENDVhNzI1ODgtODBmNy00NDE0LTk4NTEtNzg2ZjZjMTZkNDJiJTI2cGRfcmRfd2clM0Rnc09iTyUyNnBmX3JkX3IlM0Q0NzVFMzRKUVY5Rk5QSEo5U1NURCUyNnBkX3JkX3IlM0RiNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUjY3VzdG9tZXJSZXZpZXdzXCI+ICAgICAgICBcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyIGEtc3Rhci00XCI+XHUwMDNDL2k+ICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1jb2xvci1saW5rXCI+NVx1MDAzQy9zcGFuPiAgICAgICAgXHUwMDNDL2E+ICAgIFx1MDAzQy9kaXY+ICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtY29sb3ItcHJpY2VcIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtY29sb3ItcHJpY2VcIj4kMTU5LjAwXHUwMDNDL3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBzdHlsZT1cInBvc2l0aW9uOiByZWxhdGl2ZTsgdG9wOiAycHg7XCI+ICAgICAgICAgICAgICAgIFx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXByaW1lIGEtaWNvbi1zbWFsbFwiIHJvbGU9XCJpbWdcIj5cdTAwM0MvaT4gICAgICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2xpIGNsYXNzPVwiYS1jYXJvdXNlbC1jYXJkXCIgc3R5bGU9XCJ3aWR0aDoxNjBweDtcIiByb2xlPVwibGlzdGl0ZW1cIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwic3BfZGV0YWlsX0IwN004ODdUNTNcIiBkYXRhLWFzaW49XCJCMDdNODg3VDUzXCIgZGF0YS1wMTNuLWFzaW4tbWV0YWRhdGE9XCJ7JnF1b3Q7cmVmJnF1b3Q7OiZxdW90O3NzcGFfZGtfZGV0YWlsXzcmcXVvdDssJnF1b3Q7YXNpbiZxdW90OzomcXVvdDtCMDdNODg3VDUzJnF1b3Q7fVwiIGRhdGEtdmlld3BpeGVsdXJsPVwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9NzU3ODkyNzk2MTMxMzUwOSZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwmYW1wO2FkSWQ9MjAwMDE0MjU5ODk3OTgxJmFtcDthZEluZGV4PTdcIiBjbGFzcz1cImEtc2VjdGlvbiBzcF9vZmZlclZlcnRpY2FsIHAxM24tYXNpblwiPiAgICAgICAgICAgICAgICBcdTAwM0Nub3NjcmlwdD4gICAgICAgIFx1MDAzQ2ltZyBhbHQ9XCJcIiBzcmM9XCIvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xvZ2dpbmcvbG9nLWFjdGlvbi5odG1sP3F1YWxpZmllcj0xNTY5Nzk0MTg4JmlkPTc1Nzg5Mjc5NjEzMTM1MDkmd2lkZ2V0TmFtZT1zcF9kZXRhaWwmYWRJZD0yMDAwMTQyNTk4OTc5ODEmZXZlbnRUeXBlPTImYWRJbmRleD03XCI+ICAgIFx1MDAzQy9ub3NjcmlwdD4gICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj4oZnVuY3Rpb24oZikge2Yod2luZG93LlAuX25hbWVzcGFjZShcIkZpcmViaXJkU3BSZW5kZXJpbmdcIikpO30oZnVuY3Rpb24oUCkgeyAgICAgICAgUC53aGVuKCdTcG9uc29yZWRQcm9kdWN0c1ZpZXdhYmlsaXR5JykuZXhlY3V0ZShmdW5jdGlvbihTVikgeyAgICAgICAgICAgIFNWLmxvYWRJbWFnZVBpeGVsKFwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZpZD03NTc4OTI3OTYxMzEzNTA5JndpZGdldE5hbWU9c3BfZGV0YWlsJmFkSWQ9MjAwMDE0MjU5ODk3OTgxJmV2ZW50VHlwZT0yJmFkSW5kZXg9N1wiKTsgICAgICAgIH0pOyAgICB9KSk7XHUwMDNDL3NjcmlwdD4gICAgICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHtmKHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJGaXJlYmlyZFNwUmVuZGVyaW5nXCIpKTt9KGZ1bmN0aW9uKFApIHsgICAgUC53aGVuKCdBJywgJ1Nwb25zb3JlZFByb2R1Y3RzVmlld2FiaWxpdHknKS5leGVjdXRlKGZ1bmN0aW9uKEEsIFNWKSB7ICAgICAgICBTVi5yZWdpc3RlclZpZXdUcmFja2luZ0VsZW1lbnQoQS4kKFwiI3NwX2RldGFpbF9CMDdNODg3VDUzXCIpLCBcInNwX2RldGFpbFwiKTsgICAgfSk7fSkpO1x1MDAzQy9zY3JpcHQ+ICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJwYV9mZWVkYmFja0Zvcm1fY29udGFpbmVyX3NwX2RldGFpbFwiIHN0eWxlPVwiZGlzcGxheTpub25lO1wiPiAgICBcdTAwM0NkaXYgY2xhc3M9XCJzcF9hZElEXCI+ICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYS1tb2RhbFwiIGRhdGEtYS1tb2RhbD1cInsmcXVvdDtmb290ZXImcXVvdDs6JnF1b3Q7XFx1MDAzY2RpdiBpZD0nc3BvbnNvcmVkLXByb2R1Y3RzLWZlZWRiYWNrLWZvb3Rlcic+JnF1b3Q7LCZxdW90O2Nsb3NlQnV0dG9uJnF1b3Q7OiZxdW90O2ZhbHNlJnF1b3Q7LCZxdW90O25hbWUmcXVvdDs6JnF1b3Q7c3BvbnNvcmVkLXByb2R1Y3RzLWZlZWRiYWNrLW1vZGFsLXNwX2RldGFpbCZxdW90OywmcXVvdDt3aWR0aCZxdW90OzomcXVvdDszNTAmcXVvdDssJnF1b3Q7aGVhZGVyJnF1b3Q7OiZxdW90O1NoYXJlIHlvdXIgZmVlZGJhY2smcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbGF6eUxvYWQvaGFuZGxlci9zcC1mZWVkYmFjay1oYW5kbGVyLmh0bWw/cGw9NnVxMjF1NzVaUXV4WHljeElqS2hkdHpWSmdjM0pSeGdrJTJCd1NkeWY0NnBRUnhRYU82dHUxUXMlMkYycGRhWDQlMkJYeElrQzNzYXVHbjVpZCUwQWEzTEtUQkM3R3JZaFhuWU95WVVqWEVKZSUyRiUyQnZMQiUyRjRVYTFydDgza3BaY014VUV5ajh6Z3BJVVpmb2tPU09mcHUzRnQyWUx1TXhLNWklMEFIWnl6a0dLYTdXU0dZYVRWcUk5cDFmVXhnNVNzV1RhZUlQYkxFSnBFT0QxcHVnbkhrVU84T3ZJMXpUVTRXUUwwZW1Ja3Bta2RnUWt4JTBBQW5jNkJzSGVMeXlFUFVxWktyJTJCVm8zNWlFZWJUJTJGWUdGZ2NRd0FRYjE5V3lIdVJZVyUyRmJqOTZnTUtyWE1UUVhpazhCQmF2TUhsWjRPSSUwQW5RR0lrVnBYeU5BY2pFTGFUMXlhTmlnMXFlbSUyQlY3T040WVFOMzdzUFdiJTJCOVpkU3I2T29Bcm9td2dNZGMzTmhsN0dMcm1VZXFwNDJVJTBBV2JLJTJGVUFwSFQ0MVpjJTJGJTJCYnB6MnU1VHU3V25TaWdWbmJxRk5jNXh2WHhrd2ZnS1hpZiUyRnBwU0JvVDZvSFdjbEpBaDhuazF3d21mS25QJTBBNkZvdTE2UVB5cUZMZFZkTGZGNkUlMkZoM3RhOXhvWnJDejNsQkxOZUdCZG9WNVlsVyUyRmFnd1lsY1l3M3A1JTJCYSUyQkljRGU4RVdZS0h2c0oyJTBBdlpzV0dwSnhRVDdLRWgwZGRIcmx3b1AxaGxSTHZGUkFnaFFKJTJGWFhKbFJnMFBCZlBmS0lFcXElMkJQODR6eSUyQmh4OTlVdTVabjUwSDlnJTJGJTBBdUl3YlpiUW5ZakxJSnFSMDBjSVE2RU1TSmUwQzFrckglMkJiQU93U0xvOEVtelNKanRDNmFUeWxDV01VT0NNN2h4JnF1b3Q7fVwiPiAgICAgICAgICAgIFx1MDAzQ2EgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIGNsYXNzPVwiYS1wb3BvdmVyLXRyaWdnZXIgYS1kZWNsYXJhdGl2ZVwiPkZlZWRiYWNrXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcG9wb3ZlclwiPlx1MDAzQy9pPlx1MDAzQy9hPiAgICAgICAgXHUwMDNDL3NwYW4+ICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIHRhcmdldD1cIl90b3BcIiByZWw9XCJub29wZW5lclwiIHRpdGxlPVwiSmF2ZW55IEZhc2hpb24gSmV3ZWxyeSBEYW5nbGluZyBTYXBwaGlyZSBCbHVlIENaIEN1YmljIFppcmNvbmlhIFdlZGRpbmcgQnJpZGFsIEVhcnJpbmdzIEZvciBXb21lbiAoU2FwcGhpcmUpXCIgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vZ3Avc2xyZWRpcmVjdC9waWNhc3NvUmVkaXJlY3QuaHRtbC9yZWY9c3NwYV9ka19kZXRhaWxfNz9pZT1VVEY4JmFtcDthZElkPUEwOTk5NjQ0SlBRWlpENUNRRDJCJmFtcDtxdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9NzU3ODkyNzk2MTMxMzUwOSZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwmYW1wO3VybD0lMkZkcCUyRkIwN004ODdUNTMlMkZyZWYlM0Rzc3BhX2RrX2RldGFpbF83JTNGcHNjJTNEMSUyNnBkX3JkX2klM0RCMDdNODg3VDUzJTI2cGRfcmRfdyUzREp4V3ZMJTI2cGZfcmRfcCUzRDQ1YTcyNTg4LTgwZjctNDQxNC05ODUxLTc4NmY2YzE2ZDQyYiUyNnBkX3JkX3dnJTNEZ3NPYk8lMjZwZl9yZF9yJTNENDc1RTM0SlFWOUZOUEhKOVNTVEQlMjZwZF9yZF9yJTNEYjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1XCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDaW1nIGFsdD1cIkphdmVueSBGYXNoaW9uIEpld2VscnkgRGFuZ2xpbmcgU2FwcGhpcmUgQmx1ZSBDWiBDdWJpYyBaaXJjb25pYSBXZWRkaW5nIEJyaWRhbCBFYXJyaW5ncyBGb3IgV29tZW4gKFNhcHBoaXJlKVwiIHNyYz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxLWozS1d4VFJMLl9BQ19TUjMyMCwzMjBfLmpwZ1wiIGNsYXNzPVwiYS1keW5hbWljLWltYWdlXCIgaGVpZ2h0PVwiMTYwXCIgd2lkdGg9XCIxNjBcIiBkYXRhLWEtZHluYW1pYy1pbWFnZT1cInsmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MS1qM0tXeFRSTC5fQUNfU1IxNjAsMTYwXy5qcGcmcXVvdDs6WzE2MCwxNjBdLCZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxLWozS1d4VFJMLl9BQ19TUjQ4MCw0ODBfLmpwZyZxdW90OzpbNDgwLDQ4MF0sJnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDEtajNLV3hUUkwuX0FDX1NSMzIwLDMyMF8uanBnJnF1b3Q7OlszMjAsMzIwXX1cIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBkYXRhLXJvd3M9XCI0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgY2xhc3M9XCJzcG9uc29yZWQtcHJvZHVjdHMtdHJ1bmNhdG9yLXRydW5jYXRlIHNwb25zb3JlZC1wcm9kdWN0cy10cnVuY2F0b3ItbGluZS1jbGFtcC00XCI+ICAgICAgICAgICAgSmF2ZW55IEZhc2hpb24gSmV3ZWxyeSBEYW5nbGluZyBTYXBwaGlyZSBCbHVlIENaIEN1YmljIFppcmNvbmlhIFdlZGRpbmcgQnJpZGFsIEVhcnIuLi5cdTAwM0MvZGl2PiAgICAgICAgICAgIFx1MDAzQy9hPiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLWNvbG9yLXByaWNlXCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNvbG9yLXByaWNlXCI+JDEzLjI3XHUwMDNDL3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBzdHlsZT1cInBvc2l0aW9uOiByZWxhdGl2ZTsgdG9wOiAycHg7XCI+ICAgICAgICAgICAgICAgIFx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXByaW1lIGEtaWNvbi1zbWFsbFwiIHJvbGU9XCJpbWdcIj5cdTAwM0MvaT4gICAgICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2xpIGNsYXNzPVwiYS1jYXJvdXNlbC1jYXJkXCIgc3R5bGU9XCJ3aWR0aDoxNjBweDtcIiByb2xlPVwibGlzdGl0ZW1cIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwic3BfZGV0YWlsX0IwNzQ4MzNDOENcIiBkYXRhLWFzaW49XCJCMDc0ODMzQzhDXCIgZGF0YS1wMTNuLWFzaW4tbWV0YWRhdGE9XCJ7JnF1b3Q7cmVmJnF1b3Q7OiZxdW90O3NzcGFfZGtfZGV0YWlsXzgmcXVvdDssJnF1b3Q7YXNpbiZxdW90OzomcXVvdDtCMDc0ODMzQzhDJnF1b3Q7fVwiIGRhdGEtdmlld3BpeGVsdXJsPVwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9NzU3ODkyNzk2MTMxMzUwOSZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwmYW1wO2FkSWQ9MjAwMDEwNjk5NzAwMzUxJmFtcDthZEluZGV4PThcIiBjbGFzcz1cImEtc2VjdGlvbiBzcF9vZmZlclZlcnRpY2FsIHAxM24tYXNpblwiPiAgICAgICAgICAgICAgICBcdTAwM0Nub3NjcmlwdD4gICAgICAgIFx1MDAzQ2ltZyBhbHQ9XCJcIiBzcmM9XCIvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xvZ2dpbmcvbG9nLWFjdGlvbi5odG1sP3F1YWxpZmllcj0xNTY5Nzk0MTg4JmlkPTc1Nzg5Mjc5NjEzMTM1MDkmd2lkZ2V0TmFtZT1zcF9kZXRhaWwmYWRJZD0yMDAwMTA2OTk3MDAzNTEmZXZlbnRUeXBlPTImYWRJbmRleD04XCI+ICAgIFx1MDAzQy9ub3NjcmlwdD4gICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj4oZnVuY3Rpb24oZikge2Yod2luZG93LlAuX25hbWVzcGFjZShcIkZpcmViaXJkU3BSZW5kZXJpbmdcIikpO30oZnVuY3Rpb24oUCkgeyAgICAgICAgUC53aGVuKCdTcG9uc29yZWRQcm9kdWN0c1ZpZXdhYmlsaXR5JykuZXhlY3V0ZShmdW5jdGlvbihTVikgeyAgICAgICAgICAgIFNWLmxvYWRJbWFnZVBpeGVsKFwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZpZD03NTc4OTI3OTYxMzEzNTA5JndpZGdldE5hbWU9c3BfZGV0YWlsJmFkSWQ9MjAwMDEwNjk5NzAwMzUxJmV2ZW50VHlwZT0yJmFkSW5kZXg9OFwiKTsgICAgICAgIH0pOyAgICB9KSk7XHUwMDNDL3NjcmlwdD4gICAgICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHtmKHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJGaXJlYmlyZFNwUmVuZGVyaW5nXCIpKTt9KGZ1bmN0aW9uKFApIHsgICAgUC53aGVuKCdBJywgJ1Nwb25zb3JlZFByb2R1Y3RzVmlld2FiaWxpdHknKS5leGVjdXRlKGZ1bmN0aW9uKEEsIFNWKSB7ICAgICAgICBTVi5yZWdpc3RlclZpZXdUcmFja2luZ0VsZW1lbnQoQS4kKFwiI3NwX2RldGFpbF9CMDc0ODMzQzhDXCIpLCBcInNwX2RldGFpbFwiKTsgICAgfSk7fSkpO1x1MDAzQy9zY3JpcHQ+ICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJwYV9mZWVkYmFja0Zvcm1fY29udGFpbmVyX3NwX2RldGFpbFwiIHN0eWxlPVwiZGlzcGxheTpub25lO1wiPiAgICBcdTAwM0NkaXYgY2xhc3M9XCJzcF9hZElEXCI+ICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYS1tb2RhbFwiIGRhdGEtYS1tb2RhbD1cInsmcXVvdDtmb290ZXImcXVvdDs6JnF1b3Q7XFx1MDAzY2RpdiBpZD0nc3BvbnNvcmVkLXByb2R1Y3RzLWZlZWRiYWNrLWZvb3Rlcic+JnF1b3Q7LCZxdW90O2Nsb3NlQnV0dG9uJnF1b3Q7OiZxdW90O2ZhbHNlJnF1b3Q7LCZxdW90O25hbWUmcXVvdDs6JnF1b3Q7c3BvbnNvcmVkLXByb2R1Y3RzLWZlZWRiYWNrLW1vZGFsLXNwX2RldGFpbCZxdW90OywmcXVvdDt3aWR0aCZxdW90OzomcXVvdDszNTAmcXVvdDssJnF1b3Q7aGVhZGVyJnF1b3Q7OiZxdW90O1NoYXJlIHlvdXIgZmVlZGJhY2smcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbGF6eUxvYWQvaGFuZGxlci9zcC1mZWVkYmFjay1oYW5kbGVyLmh0bWw/cGw9dEtyWk5qdyUyRnFZQnZnNDlSQXEyREpPR3pLSHNZWlMlMkZFbW43TVAlMkJZYzFJNCUyQmdHT2RpT2lQYlhubFYwJTJCMDUyYmxOVFFCNnJldDV4UUElMEFtb3FXS0xYcXNyQkIlMkIwemVNMWNOSldMRzgyanpCYjNsdG12SXdGaDJ4UjliRGtSTmVpNVlmYWVxa2Y3MzB0Q09TREJUY2YlMkZrbyUyQkUxJTBBUGRUaldUcmRFZjVOdkU4cXNFaGtpVjhhRE10USUyQmIwRWUxenBvY2I1aTdqS2lDTzFGcVpQOFNzTiUyQjFtbzkwbCUyQjVVUEwwTFVTNmNRMCUwQWFPdlJIZE54UWw1Wm5FQ1RabHp2JTJCZSUyRnJrTVhHd2RpTzVObkEzU04xJTJGa05laFdpMTNMc2xETzBxZTlnMGtiblRFUnN5MmZYbHRDOEwlMEF3M1Z0ZGxHUU5qUU5ZRXJ6QkM3TGNwWWFMY3RXR1NNaWhWaGt5SEUxQ0lhUk5BRWtzcWZrcEVkc2ZXcnpJRCUyQkNTVjA0cjJJU3N1V1klMEFoaXQxV3lNUVIzdU8zcHJ4MXVFWXA1TlVoRkpQM01sNFhUWHc1ZUp1R1JCTmV2b2Z4emJRZFYlMkJ3cHRqJTJGTG1FOHdYc1U1ZU9QeEdqNyUwQWpvVkdKOGIyMERNaHUyWEJaVjBhSEtXeWd2YWUlMkZYY0pQTml0eWRMN3dDcnZWaW1MbXZUS3hIZGtsTXFpN3AxcW4lMkJaMzJ1RkFmRUttJTBBUTdvVTNhVUpBJTJCclZFN0pNQXYlMkJyRjZ2RGhBemFqMmNQOHROd3I0MnZId1p6aVp2SVhSb1JBVHFlcyUyQiUyQjltWEh0WkZnUjVvUVFTNkw3JTBBbnJha2NIcmFqS0FBcWg5JTJGUmpXUWNjNGIyTDNRa0pYQSZxdW90O31cIj4gICAgICAgICAgICBcdTAwM0NhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiBjbGFzcz1cImEtcG9wb3Zlci10cmlnZ2VyIGEtZGVjbGFyYXRpdmVcIj5GZWVkYmFja1x1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXBvcG92ZXJcIj5cdTAwM0MvaT5cdTAwM0MvYT4gICAgICAgIFx1MDAzQy9zcGFuPiAgICBcdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiB0YXJnZXQ9XCJfdG9wXCIgcmVsPVwibm9vcGVuZXJcIiB0aXRsZT1cIlJvc2UgR29sZCBGbGFzaGVkIFN0ZXJsaW5nIFNpbHZlciBUZWFyZHJvcCBGaWxpZ3JlZSBQb2xpc2hlZCBEYW5nbGUgRWFycmluZ3NcIiBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9zbHJlZGlyZWN0L3BpY2Fzc29SZWRpcmVjdC5odG1sL3JlZj1zc3BhX2RrX2RldGFpbF84P2llPVVURjgmYW1wO2FkSWQ9QTAxNTYyOTYzOE9XSjlVVjZVOFVOJmFtcDtxdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9NzU3ODkyNzk2MTMxMzUwOSZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwmYW1wO3VybD0lMkZkcCUyRkIwNzQ4MzNDOEMlMkZyZWYlM0Rzc3BhX2RrX2RldGFpbF84JTNGcHNjJTNEMSUyNnBkX3JkX2klM0RCMDc0ODMzQzhDJTI2cGRfcmRfdyUzREp4V3ZMJTI2cGZfcmRfcCUzRDQ1YTcyNTg4LTgwZjctNDQxNC05ODUxLTc4NmY2YzE2ZDQyYiUyNnBkX3JkX3dnJTNEZ3NPYk8lMjZwZl9yZF9yJTNENDc1RTM0SlFWOUZOUEhKOVNTVEQlMjZwZF9yZF9yJTNEYjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1XCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDaW1nIGFsdD1cIlJvc2UgR29sZCBGbGFzaGVkIFN0ZXJsaW5nIFNpbHZlciBUZWFyZHJvcCBGaWxpZ3JlZSBQb2xpc2hlZCBEYW5nbGUgRWFycmluZ3NcIiBzcmM9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MXk0WkZ2bjJkTC5fQUNfU1IzMjAsMzIwXy5qcGdcIiBjbGFzcz1cImEtZHluYW1pYy1pbWFnZVwiIGhlaWdodD1cIjE2MFwiIHdpZHRoPVwiMTYwXCIgZGF0YS1hLWR5bmFtaWMtaW1hZ2U9XCJ7JnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDF5NFpGdm4yZEwuX0FDX1NSNDgwLDQ4MF8uanBnJnF1b3Q7Ols0ODAsNDgwXSwmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MXk0WkZ2bjJkTC5fQUNfU1IxNjAsMTYwXy5qcGcmcXVvdDs6WzE2MCwxNjBdLCZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxeTRaRnZuMmRMLl9BQ19TUjMyMCwzMjBfLmpwZyZxdW90OzpbMzIwLDMyMF19XCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NkaXYgZGF0YS1yb3dzPVwiNFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGNsYXNzPVwic3BvbnNvcmVkLXByb2R1Y3RzLXRydW5jYXRvci10cnVuY2F0ZSBzcG9uc29yZWQtcHJvZHVjdHMtdHJ1bmNhdG9yLWxpbmUtY2xhbXAtNFwiPiAgICAgICAgICAgIFJvc2UgR29sZCBGbGFzaGVkIFN0ZXJsaW5nIFNpbHZlciBUZWFyZHJvcCBGaWxpZ3JlZSBQb2xpc2hlZCBEYW5nbGUgRWFycmluZ3NcdTAwM0MvZGl2PiAgICAgICAgICAgIFx1MDAzQy9hPiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPiAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWwgYWRSZXZpZXdMaW5rIGEtdGV4dC1ub3JtYWxcIiB0YXJnZXQ9XCJfdG9wXCIgcmVsPVwibm9vcGVuZXJcIiB0aXRsZT1cIlJvc2UgR29sZCBGbGFzaGVkIFN0ZXJsaW5nIFNpbHZlciBUZWFyZHJvcCBGaWxpZ3JlZSBQb2xpc2hlZCBEYW5nbGUgRWFycmluZ3NcIiBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9zbHJlZGlyZWN0L3BpY2Fzc29SZWRpcmVjdC5odG1sL3JlZj1zc3BhX2RrX2RldGFpbF84P2llPVVURjgmYW1wO2FkSWQ9QTAxNTYyOTYzOE9XSjlVVjZVOFVOJmFtcDtxdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9NzU3ODkyNzk2MTMxMzUwOSZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwmYW1wO3VybD0lMkZkcCUyRkIwNzQ4MzNDOEMlMkZyZWYlM0Rzc3BhX2RrX2RldGFpbF84JTNGcHNjJTNEMSUyNnBkX3JkX2klM0RCMDc0ODMzQzhDJTI2cGRfcmRfdyUzREp4V3ZMJTI2cGZfcmRfcCUzRDQ1YTcyNTg4LTgwZjctNDQxNC05ODUxLTc4NmY2YzE2ZDQyYiUyNnBkX3JkX3dnJTNEZ3NPYk8lMjZwZl9yZF9yJTNENDc1RTM0SlFWOUZOUEhKOVNTVEQlMjZwZF9yZF9yJTNEYjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1I2N1c3RvbWVyUmV2aWV3c1wiPiAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3RhciBhLXN0YXItNFwiPlx1MDAzQy9pPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtY29sb3ItbGlua1wiPjE1XHUwMDNDL3NwYW4+ICAgICAgICBcdTAwM0MvYT4gICAgXHUwMDNDL2Rpdj4gICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1jb2xvci1wcmljZVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1jb2xvci1wcmljZVwiPiQxMS45OVx1MDAzQy9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gc3R5bGU9XCJwb3NpdGlvbjogcmVsYXRpdmU7IHRvcDogMnB4O1wiPiAgICAgICAgICAgICAgICBcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wcmltZSBhLWljb24tc21hbGxcIiByb2xlPVwiaW1nXCI+XHUwMDNDL2k+ICAgICAgICAgICAgXHUwMDNDL3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0MvbGk+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NsaSBjbGFzcz1cImEtY2Fyb3VzZWwtY2FyZFwiIHN0eWxlPVwid2lkdGg6MTYwcHg7XCIgcm9sZT1cImxpc3RpdGVtXCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInNwX2RldGFpbF9CMDdWN1pCVzczXCIgZGF0YS1hc2luPVwiQjA3VjdaQlc3M1wiIGRhdGEtcDEzbi1hc2luLW1ldGFkYXRhPVwieyZxdW90O3JlZiZxdW90OzomcXVvdDtzc3BhX2RrX2RldGFpbF85JnF1b3Q7LCZxdW90O2FzaW4mcXVvdDs6JnF1b3Q7QjA3VjdaQlc3MyZxdW90O31cIiBkYXRhLXZpZXdwaXhlbHVybD1cIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTc1Nzg5Mjc5NjEzMTM1MDkmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsJmFtcDthZElkPTIwMDAxNjk3NTg2NjUyMSZhbXA7YWRJbmRleD05XCIgY2xhc3M9XCJhLXNlY3Rpb24gc3Bfb2ZmZXJWZXJ0aWNhbCBwMTNuLWFzaW5cIj4gICAgICAgICAgICAgICAgXHUwMDNDbm9zY3JpcHQ+ICAgICAgICBcdTAwM0NpbWcgYWx0PVwiXCIgc3JjPVwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZpZD03NTc4OTI3OTYxMzEzNTA5JndpZGdldE5hbWU9c3BfZGV0YWlsJmFkSWQ9MjAwMDE2OTc1ODY2NTIxJmV2ZW50VHlwZT0yJmFkSW5kZXg9OVwiPiAgICBcdTAwM0Mvbm9zY3JpcHQ+ICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHtmKHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJGaXJlYmlyZFNwUmVuZGVyaW5nXCIpKTt9KGZ1bmN0aW9uKFApIHsgICAgICAgIFAud2hlbignU3BvbnNvcmVkUHJvZHVjdHNWaWV3YWJpbGl0eScpLmV4ZWN1dGUoZnVuY3Rpb24oU1YpIHsgICAgICAgICAgICBTVi5sb2FkSW1hZ2VQaXhlbChcIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmaWQ9NzU3ODkyNzk2MTMxMzUwOSZ3aWRnZXROYW1lPXNwX2RldGFpbCZhZElkPTIwMDAxNjk3NTg2NjUyMSZldmVudFR5cGU9MiZhZEluZGV4PTlcIik7ICAgICAgICB9KTsgICAgfSkpO1x1MDAzQy9zY3JpcHQ+ICAgICAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPihmdW5jdGlvbihmKSB7Zih3aW5kb3cuUC5fbmFtZXNwYWNlKFwiRmlyZWJpcmRTcFJlbmRlcmluZ1wiKSk7fShmdW5jdGlvbihQKSB7ICAgIFAud2hlbignQScsICdTcG9uc29yZWRQcm9kdWN0c1ZpZXdhYmlsaXR5JykuZXhlY3V0ZShmdW5jdGlvbihBLCBTVikgeyAgICAgICAgU1YucmVnaXN0ZXJWaWV3VHJhY2tpbmdFbGVtZW50KEEuJChcIiNzcF9kZXRhaWxfQjA3VjdaQlc3M1wiKSwgXCJzcF9kZXRhaWxcIik7ICAgIH0pO30pKTtcdTAwM0Mvc2NyaXB0PiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwicGFfZmVlZGJhY2tGb3JtX2NvbnRhaW5lcl9zcF9kZXRhaWxcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIj4gICAgXHUwMDNDZGl2IGNsYXNzPVwic3BfYWRJRFwiPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImEtbW9kYWxcIiBkYXRhLWEtbW9kYWw9XCJ7JnF1b3Q7Zm9vdGVyJnF1b3Q7OiZxdW90O1xcdTAwM2NkaXYgaWQ9J3Nwb25zb3JlZC1wcm9kdWN0cy1mZWVkYmFjay1mb290ZXInPiZxdW90OywmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzomcXVvdDtmYWxzZSZxdW90OywmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O3Nwb25zb3JlZC1wcm9kdWN0cy1mZWVkYmFjay1tb2RhbC1zcF9kZXRhaWwmcXVvdDssJnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7MzUwJnF1b3Q7LCZxdW90O2hlYWRlciZxdW90OzomcXVvdDtTaGFyZSB5b3VyIGZlZWRiYWNrJnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xhenlMb2FkL2hhbmRsZXIvc3AtZmVlZGJhY2staGFuZGxlci5odG1sP3BsPXJrNk4xNk5UOVVIWGxVenVITzNodFFlUmhrYndzdDE3MW5JMjJkWjVPRG16eDlKVE8lMkY3bWx6VjhEYWhmS1phVXhrWCUyQjZZTXU5cFpNJTBBcFJLc05TQUdaV0FEdVglMkJtbU1VSmYlMkZ1bThxckVrc2RCNlhaSSUyRnlXclJ3NW5KNjIya2lOZ2x0ZklxaVlBUW9WVkhMVXZ6WWolMkZWUnYwJTBBRG5VQjdiTjRNZGVTYnpvdjlJenU1aVJJMGpNRUJheUJJQ29ZMXM1VzdXYk9McVNnampRVmxVSGJVM1pWUVliaE9EZ2hTYlpBZFdGViUwQWx6MW1TOExBNFpTYkZFQ1M4QlduZTNzRlF6M0hFeUVFYmM3cXN1dWgyYU1VYzcxdk9mQ2M5JTJGNWRadWJURzFBaXZqSTdjcGcyaGJiNCUwQUdva2U5MSUyQjR6ZmxjWm1TeUkyaG9GOERBcU1xRE1yVjhtcSUyQnZTJTJGc2tnS2hjajRxMGhiQWZteVpsOFBEWlM3ZjlvJTJGSCUyRjhRbkx3eHdHJTBBUWNiRDJPRTVIVUFBcDBTMjJrTmZ0eHBsejdIUE80NlNXaGNYa2NXbTUxS0FlZFNXY0dlQUIxWXNhUVh1T1dzeUhIcE1VcEpKJTJGTmxIJTBBU0pnWlZGWGJsamVyWFZ4SjE0TEY1eldKajU0ZkdneDg2b0dwSUR2M1BXSDF1dEpJTGF4c3pnUzN2czJUNUV0Y1laUTZqUTlYZFlhTyUwQWpBc2FnbWVWSWR6Rmw5dWdQOXJCUWp3SmlRbTBqcCUyQkpXclNWNm52cFVraWJ5eHUyZFpUdE1FbjZSU0FVSmYxSmFRTmlLbDNxSEhmeSUwQVMzem12VFhOcyUyRlZtNURYaXg3RjVaRCUyQllPZThGT0Q3ZFVMSzRDTlFwNE40JTNEJnF1b3Q7fVwiPiAgICAgICAgICAgIFx1MDAzQ2EgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIGNsYXNzPVwiYS1wb3BvdmVyLXRyaWdnZXIgYS1kZWNsYXJhdGl2ZVwiPkZlZWRiYWNrXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcG9wb3ZlclwiPlx1MDAzQy9pPlx1MDAzQy9hPiAgICAgICAgXHUwMDNDL3NwYW4+ICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIHRhcmdldD1cIl90b3BcIiByZWw9XCJub29wZW5lclwiIHRpdGxlPVwiSmFuZSBFeXJlIEJvaG8gRGFuZ2xlIENyeXN0YWwgR2xhc3MgQmVhZGVkIEVhcnJpbmdzIGZvciBXb21lbiBFdGhuaWMgSGFuZG1hZGUgUm91bmRlZCBFYXJyaW5ncyAoQmxhY2sgJmFtcDsgR29sZClcIiBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9zbHJlZGlyZWN0L3BpY2Fzc29SZWRpcmVjdC5odG1sL3JlZj1zc3BhX2RrX2RldGFpbF85P2llPVVURjgmYW1wO2FkSWQ9QTA2Nzg2MjExOUxVOUtYVzVTSFpIJmFtcDtxdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9NzU3ODkyNzk2MTMxMzUwOSZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwmYW1wO3VybD0lMkZkcCUyRkIwN1Y3WkJXNzMlMkZyZWYlM0Rzc3BhX2RrX2RldGFpbF85JTNGcHNjJTNEMSUyNnBkX3JkX2klM0RCMDdWN1pCVzczJTI2cGRfcmRfdyUzREp4V3ZMJTI2cGZfcmRfcCUzRDQ1YTcyNTg4LTgwZjctNDQxNC05ODUxLTc4NmY2YzE2ZDQyYiUyNnBkX3JkX3dnJTNEZ3NPYk8lMjZwZl9yZF9yJTNENDc1RTM0SlFWOUZOUEhKOVNTVEQlMjZwZF9yZF9yJTNEYjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1XCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDaW1nIGFsdD1cIkphbmUgRXlyZSBCb2hvIERhbmdsZSBDcnlzdGFsIEdsYXNzIEJlYWRlZCBFYXJyaW5ncyBmb3IgV29tZW4gRXRobmljIEhhbmRtYWRlIFJvdW5kZWQgRWFycmluZ3MgKEJsYWNrICZhbXA7IEdvbGQpXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDF6V0pvNDV3TEwuX0FDX1NSMzIwLDMyMF8uanBnXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2VcIiBoZWlnaHQ9XCIxNjBcIiB3aWR0aD1cIjE2MFwiIGRhdGEtYS1keW5hbWljLWltYWdlPVwieyZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxeldKbzQ1d0xMLl9BQ19TUjMyMCwzMjBfLmpwZyZxdW90OzpbMzIwLDMyMF0sJnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDF6V0pvNDV3TEwuX0FDX1NSNDgwLDQ4MF8uanBnJnF1b3Q7Ols0ODAsNDgwXSwmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MXpXSm80NXdMTC5fQUNfU1IxNjAsMTYwXy5qcGcmcXVvdDs6WzE2MCwxNjBdfVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGRhdGEtcm93cz1cIjRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cInNwb25zb3JlZC1wcm9kdWN0cy10cnVuY2F0b3ItdHJ1bmNhdGUgc3BvbnNvcmVkLXByb2R1Y3RzLXRydW5jYXRvci1saW5lLWNsYW1wLTRcIj4gICAgICAgICAgICBKYW5lIEV5cmUgQm9obyBEYW5nbGUgQ3J5c3RhbCBHbGFzcyBCZWFkZWQgRWFycmluZ3MgZm9yIFdvbWVuIEV0aG5pYyBIYW5kbWFkZSBSb3VuZC4uLlx1MDAzQy9kaXY+ICAgICAgICAgICAgXHUwMDNDL2E+ICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+ICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBhZFJldmlld0xpbmsgYS10ZXh0LW5vcm1hbFwiIHRhcmdldD1cIl90b3BcIiByZWw9XCJub29wZW5lclwiIHRpdGxlPVwiSmFuZSBFeXJlIEJvaG8gRGFuZ2xlIENyeXN0YWwgR2xhc3MgQmVhZGVkIEVhcnJpbmdzIGZvciBXb21lbiBFdGhuaWMgSGFuZG1hZGUgUm91bmRlZCBFYXJyaW5ncyAoQmxhY2sgJmFtcDsgR29sZClcIiBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9zbHJlZGlyZWN0L3BpY2Fzc29SZWRpcmVjdC5odG1sL3JlZj1zc3BhX2RrX2RldGFpbF85P2llPVVURjgmYW1wO2FkSWQ9QTA2Nzg2MjExOUxVOUtYVzVTSFpIJmFtcDtxdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9NzU3ODkyNzk2MTMxMzUwOSZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwmYW1wO3VybD0lMkZkcCUyRkIwN1Y3WkJXNzMlMkZyZWYlM0Rzc3BhX2RrX2RldGFpbF85JTNGcHNjJTNEMSUyNnBkX3JkX2klM0RCMDdWN1pCVzczJTI2cGRfcmRfdyUzREp4V3ZMJTI2cGZfcmRfcCUzRDQ1YTcyNTg4LTgwZjctNDQxNC05ODUxLTc4NmY2YzE2ZDQyYiUyNnBkX3JkX3dnJTNEZ3NPYk8lMjZwZl9yZF9yJTNENDc1RTM0SlFWOUZOUEhKOVNTVEQlMjZwZF9yZF9yJTNEYjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1I2N1c3RvbWVyUmV2aWV3c1wiPiAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3RhciBhLXN0YXItNVwiPlx1MDAzQy9pPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtY29sb3ItbGlua1wiPjE1XHUwMDNDL3NwYW4+ICAgICAgICBcdTAwM0MvYT4gICAgXHUwMDNDL2Rpdj4gICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1jb2xvci1wcmljZVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1jb2xvci1wcmljZVwiPiQxNy45OVx1MDAzQy9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gc3R5bGU9XCJwb3NpdGlvbjogcmVsYXRpdmU7IHRvcDogMnB4O1wiPiAgICAgICAgICAgICAgICBcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wcmltZSBhLWljb24tc21hbGxcIiByb2xlPVwiaW1nXCI+XHUwMDNDL2k+ICAgICAgICAgICAgXHUwMDNDL3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0MvbGk+ICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL29sPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLWNhcm91c2VsLWNvbCBhLWNhcm91c2VsLXJpZ2h0XCI+XHUwMDNDYSBjbGFzcz1cImEtYnV0dG9uIGEtYnV0dG9uLWltYWdlIGEtY2Fyb3VzZWwtYnV0dG9uIGEtY2Fyb3VzZWwtZ290by1uZXh0cGFnZVwiIHRhYmluZGV4PVwiMFwiIGhyZWY9XCIjXCIgaWQ9XCJhLWF1dG9pZC0xNFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi1pbm5lclwiPlx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLW5leHRcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPk5leHQgcGFnZSBvZiByZWxhdGVkIFNwb25zb3JlZCBQcm9kdWN0c1x1MDAzQy9zcGFuPlx1MDAzQy9pPlx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2PiAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cIlNQLUFkLUZlZWRiYWNrXCI+ICAgICAgICAgICAgICAgICBcdTAwM0NhIGlkPVwic3BfZGV0YWlsX2ZlZWRiYWNrTWVzc2FnZVwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBkeW5hbWljU1BGTFwiIGhyZWY9XCIjc3BfZGV0YWlsX2ZlZWRiYWNrRm9ybVwiPkFkIGZlZWRiYWNrXHUwMDNDL2E+ICAgICAgICAgICAgXHUwMDNDL2Rpdj4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWVuZCBhb2staGlkZGVuXCI+XHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj4gICAgICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHtmKHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJGaXJlYmlyZFNwUmVuZGVyaW5nXCIpKTt9KGZ1bmN0aW9uKFApIHsgICBQLndoZW4oJ0EnLCAnYS1jYXJvdXNlbC1mcmFtZXdvcmsnLCAnQW1hem9uQ2xpY2tzJykuZXhlY3V0ZShmdW5jdGlvbiAoQSwgQ0YsIEFDKSB7ICAgICBDRi5nZXRDYXJvdXNlbChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwX2RldGFpbFwiKSk7ICAgICBBQy5yZWdpc3RlckZlZWRiYWNrRXZlbnRzKFwic3BfZGV0YWlsX2Nhcm91c2VsXCIsIFwic3BfZGV0YWlsX2ZlZWRiYWNrTWVzc2FnZVwiLCBcIkFkIGZlZWRiYWNrXCIsIFwiSGlkZSBmZWVkYmFja1wiLCBcInBhX2ZlZWRiYWNrRm9ybV9jb250YWluZXJfc3BfZGV0YWlsXCIpOyAgIH0pOyAgICAgICAgICAgICAgIFAud2hlbignQScsICdTUEhBVCcpLmV4ZWN1dGUoZnVuY3Rpb24oQSwgU1BIQVQpIHsgICAgIHZhciBjb250YWluZXJTZWxlY3RvciA9IFwiI3NwX2RldGFpbCBkaXZcIjsgICAgIHZhciBlbGVtZW50c0FsbG93ZWRUb0JlSGlkZGVuID0gWydzY3JpcHQnLCAnZGl2LnNwX2FkSUQnLCAnZGl2LnBhX2ZlZWRiYWNrRm9ybV9jb250YWluZXJfc3BfZGV0YWlsJywgJ3NwYW4uYS1kZWNsYXJhdGl2ZScsICdzcGFuLmFvay1oaWRkZW4nLCAnaW5wdXRbdHlwZT1oaWRkZW5dJywgJ25vc2NyaXB0J107ICAgICB2YXIgY3NtQ291bnRlck1ldHJpY05hbWUgPSAnc3BfZGV0YWlsLmFkYic7ICAgICB2YXIgaGFkSW1wYWN0ID0gU1BIQVQuY2hlY2tGb3JIaWRkZW5FbGVtZW50cyhjb250YWluZXJTZWxlY3RvciwgZWxlbWVudHNBbGxvd2VkVG9CZUhpZGRlbiwgY3NtQ291bnRlck1ldHJpY05hbWUpOyAgICAgQS5zdGF0ZShcInNwX2RldGFpbFwiLCB7IGFkQmxvY2tlckhhZEltcGFjdDogaGFkSW1wYWN0fSk7ICAgfSk7ICAgICAgICAgICBQLndoZW4oJ1Nwb25zb3JlZFByb2R1Y3RzVmlld2FiaWxpdHknKS5leGVjdXRlKGZ1bmN0aW9uKFNWKSB7ICAgICBTVi5yZWdpc3RlckF1aUV2ZW50cyhbJ3JlYWR5JywgJ3Njcm9sbCcsICdyZXNpemUnLCAnb3JpZW50YXRpb25jaGFuZ2UnXSk7ICAgfSk7fSkpO1x1MDAzQy9zY3JpcHQ+XHUwMDNDL2Rpdj5cblxuXG5cbiAgICBcblxuXG4gIFxuXG5cbiAgXG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0NkaXYgaWQ9XCJkcC1vdXQtb2Ytc3RvY2stM3BzbFwiPlxuXG5cblxuXG5cblxuXG5cdTAwM0MvZGl2PlxuXG5cblxuXHUwMDNDZGl2IGNsYXNzPVwiYnV5aW5nXCIgaWQ9XCJwcm9tb0dyaWRcIj5cblxuXG5cblxuXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj4oZnVuY3Rpb24oZikge3ZhciBfbnA9KHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJBc2tBdWlBc3NldHNcIikpO2lmKF9ucC5ndWFyZEZhdGFsKXtfbnAuZ3VhcmRGYXRhbChmKShfbnApO31lbHNle2YoX25wKTt9fShmdW5jdGlvbihQKSB7XG4gIGlmICh0eXBlb2YgUCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBQLndoZW4oJ2Fza0Rlc2t0b3BEZXRhaWxQYWdlU2VhcmNoV2lkZ2V0JykuZXhlY3V0ZShmdW5jdGlvbihkZXNrdG9wRGV0YWlsUGFnZVNlYXJjaFdpZGdldCkge1xuICAgICAgZGVza3RvcERldGFpbFBhZ2VTZWFyY2hXaWRnZXQuc2V0dXAoKTtcbiAgICB9KTtcbiAgfVxufSkpO1x1MDAzQy9zY3JpcHQ+XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0Nub3NjcmlwdD5cbiAgXHUwMDNDc3R5bGU+XG4gICAgLmFza0RldGFpbFBhZ2VTZWFyY2hXaWRnZXRTZWN0aW9uIHsgZGlzcGxheTpub25lOyB9XG4gIFx1MDAzQy9zdHlsZT5cblx1MDAzQy9ub3NjcmlwdD5cblxuXHUwMDNDZGl2IGNlbF93aWRnZXRfaWQ9XCJhc2stc3dkcC1kZXNrdG9wXCIgY2xhc3M9XCJjZWx3aWRnZXRcIj5cbiAgXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGFza0RldGFpbFBhZ2VTZWFyY2hXaWRnZXRTZWN0aW9uXCI+XG4gICAgXHUwMDNDaHIgY2xhc3M9XCJhLXNwYWNpbmctZXh0cmEtbGFyZ2UgYS1kaXZpZGVyLW5vcm1hbFwiPlxuXG4gICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1leHRyYS1sYXJnZVwiPlxuICAgICAgXHUwMDNDaDIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj5cbiAgICAgICAgSGF2ZSBhIHF1ZXN0aW9uP1xuICAgICAgXHUwMDNDL2gyPlxuICAgICAgXHUwMDNDcCBjbGFzcz1cImEtc3BhY2luZy1zbWFsbCBhLXNpemUtc21hbGwgYS1jb2xvci1zZWNvbmRhcnlcIj5cbiAgICAgICAgRmluZCBhbnN3ZXJzIGluIHByb2R1Y3QgaW5mbywgUSZhbXA7QXMsIHJldmlld3NcbiAgICAgIFx1MDAzQy9wPlxuXG4gICAgICBcblxuICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGFza0RQU2VhcmNoVmlld0NvbnRlbnRcIj5cbiAgICAgICAgXG4gICAgICAgIFx1MDAzQ2Zvcm0gbWV0aG9kPVwicG9zdFwiIGFjdGlvbj1cIi9hc2svcXVlc3Rpb25zL2FzaW4vQjAxR0tRSTM5Mi9jcmVhdGVcIiBjbGFzcz1cImFza0RQU2VhcmNoRm9ybVwiPlxuICAgICAgICAgIFx1MDAzQ2lucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwiYXNrUXVlc3Rpb25Tb3VyY2VcIiB2YWx1ZT1cIkRFU0tUT1BfRFBfU0VBUkNIXCI+XG4gICAgICAgICAgXHUwMDNDaW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJhc2tFcnJvclVybFwiIHZhbHVlPVwiL2Fzay9xdWVzdGlvbnMvYXNpbi9CMDFHS1FJMzkyLyNBc2tcIj5cbiAgICAgICAgICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cImFza0FzaW5cIiB2YWx1ZT1cIkIwMUdLUUkzOTJcIiBjbGFzcz1cImFza0FzaW5cIj5cbiAgICAgICAgICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cImFza1F1ZXN0aW9uU291cmNlUGFnZVwiIHZhbHVlPVwiQUxMX1FVRVNUSU9OU19QQUdFXCI+XG4gICAgICAgICAgXHUwMDNDaW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJsaXZlU2VhcmNoU2Vzc2lvbklkXCIgY2xhc3M9XCJhc2tMaXZlU2VhcmNoU2Vzc2lvbklkXCI+XG4gICAgICAgICAgXHUwMDNDaW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJsaXZlU2VhcmNoUGFnZUxvYWRJZFwiIGNsYXNzPVwiYXNrTGl2ZVNlYXJjaFBhZ2VMb2FkSWRcIj5cbiAgICAgICAgICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cInNlYXJjaFNvdXJjZVwiIHZhbHVlPVwiREVUQUlMX1BBR0VfU0VBUkNIX1NPVVJDRVwiPlxuICAgICAgICAgIFx1MDAzQ2lucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwidHlwZWFoZWFkU2VhcmNoU291cmNlXCIgdmFsdWU9XCJUWVBFQUhFQURfU1dEUF9TT1VSQ0VcIj5cbiAgICAgICAgICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cIm9yaWdpbmFsU2VhcmNoU291cmNlXCIgdmFsdWU9XCJERVRBSUxfUEFHRV9TRUFSQ0hfU09VUkNFXCI+XG4gICAgICAgICAgXHUwMDNDaW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJmb2xsb3d1cFNlYXJjaFNvdXJjZVwiIHZhbHVlPVwiRk9MTE9XVVBfUVVFU1RJT05fU0VBUkNIX1NPVVJDRVwiPlxuICAgICAgICAgIFx1MDAzQ2lucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwiX190b2tlbl9cIiB2YWx1ZT1cIk5tZHhGT09QNzZPajJCc2tXdUVOZUVCczVPVnpNajNEXCI+XG4gICAgICAgICAgXG4gICAgICAgICAgXG4gICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImFzay1kcHNlYXJjaC1kZXNrdG9wLWlucHV0LWNsaWNrXCIgZGF0YS1hc2stZHBzZWFyY2gtZGVza3RvcC1pbnB1dC1jbGljaz1cInsmcXVvdDtzZWFyY2hCdXR0b24mcXVvdDs6ZmFsc2V9XCI+XG4gICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYXNrLWRwc2VhcmNoLWRlc2t0b3AtaW5wdXQtZm9jdXNpblwiIGRhdGEtYXNrLWRwc2VhcmNoLWRlc2t0b3AtaW5wdXQtZm9jdXNpbj1cInsmcXVvdDtzZWFyY2hCdXR0b24mcXVvdDs6ZmFsc2V9XCI+XG4gICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhc2stZHBzZWFyY2gtZGVza3RvcC1pbnB1dC1jaGFuZ2VcIiBkYXRhLWFzay1kcHNlYXJjaC1kZXNrdG9wLWlucHV0LWNoYW5nZT1cInsmcXVvdDtzZWFyY2hCdXR0b24mcXVvdDs6ZmFsc2V9XCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImFzay1kcHNlYXJjaC1kZXNrdG9wLWlucHV0LWtleXVwXCIgZGF0YS1hc2stZHBzZWFyY2gtZGVza3RvcC1pbnB1dC1rZXl1cD1cInsmcXVvdDtzZWFyY2hCdXR0b24mcXVvdDs6ZmFsc2V9XCI+XG4gICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYXNrLWRldGFpbC1wYWdlLXNlYXJjaC1wcmVmZXRjaC1jbGlja1wiIGRhdGEtYXNrLWRldGFpbC1wYWdlLXNlYXJjaC1wcmVmZXRjaC1jbGljaz1cInsmcXVvdDthc2luJnF1b3Q7OiZxdW90O0IwMUdLUUkzOTImcXVvdDssJnF1b3Q7bGFuZ3VhZ2UmcXVvdDs6JnF1b3Q7ZW5fVVMmcXVvdDt9XCI+XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhc2stcHJldmVudC1lbnRlci1rZXlcIiBkYXRhLWFzay1wcmV2ZW50LWVudGVyLWtleT1cInt9XCI+XG4gICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGRhdGEtYXV0b2NvbXBsZXRlLXNlYXJjaC1yZXN1bHRzLWJyaWVmPVwiU2VhcmNoIHJlc3VsdHMgZm9yICMjcXVlcnkjI1wiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1iYXNlIGFza0F1dG9jb21wbGV0ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImFza1N3ZHBTZWFyY2hJbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ2RpdiBjbGFzcz1cImEtaW5wdXQtdGV4dC1hZGRvbi1ncm91cC13cmFwcGVyXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1pbnB1dC10ZXh0LWFkZG9uLWdyb3VwIGFza1NlYXJjaElucHV0SW5ncmVzc1wiPlxuICBcdTAwM0NkaXYgY2xhc3M9XCJhLXNlYXJjaCBhLXNwYW4xMlwiPlx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXNlYXJjaFwiPlx1MDAzQy9pPlx1MDAzQ2lucHV0IHR5cGU9XCJzZWFyY2hcIiBtYXhsZW5ndGg9XCIxNTBcIiBhdXRvY29tcGxldGU9XCJvZmZcIiBwbGFjZWhvbGRlcj1cIlR5cGUgeW91ciBxdWVzdGlvbiBvciBrZXl3b3JkXCIgY2xhc3M9XCJhLWlucHV0LXRleHQgYS1zcGFuMTIgYXNrRFBTZWFyY2hUZXh0SW5wdXQgYXNrRFBTZWFyY2hQb3N0VGV4dElucHV0XCI+XHUwMDNDL2Rpdj5cbiAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImFzay1sb2ctY2xpY2stY3NtXCIgZGF0YS1hc2stbG9nLWNsaWNrLWNzbT1cInsmcXVvdDttZXRyaWNOYW1lJnF1b3Q7OiZxdW90O2Fzay1zZWFyY2gtaW5ncmVzcy1jbGVhci1idXR0b24tY2xpY2smcXVvdDt9XCI+XG4gICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2xvc2UgYXNrRGlzcGxheUNsZWFyU2VhcmNoIGFza0hpZGRlblwiIHJvbGU9XCJpbWdcIj5cdTAwM0MvaT5cbiAgXHUwMDNDL3NwYW4+XG5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgICAgICAgICAgIFx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgIFx1MDAzQ2lucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwiYXNrTGFuZ3VhZ2VcIiB2YWx1ZT1cImVuX1VTXCI+XG4gICAgICAgICAgICAgXG4gICAgICAgICAgXG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXRleHQtY2VudGVyIGFza0RQU2VhcmNoU2VhcmNoSW5kaWNhdG9yIGFvay1oaWRkZW5cIj5cbiAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1zcGlubmVyIGEtc3Bpbm5lci1tZWRpdW1cIj5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGFza0RQU2VhcmNoUmVzdWx0c1ZpZXdhYmxlQ29udGVudCBhb2staGlkZGVuXCI+XG4gICAgICAgICAgXG4gICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGFza0RQU2VhcmNoRmFpbHVyZU1lc3NhZ2VcIj5cbiAgICAgICAgICAgIFRoZXJlIHdhcyBhIHByb2JsZW0gY29tcGxldGluZyB5b3VyIHJlcXVlc3QuIFBsZWFzZSB0cnkgeW91ciBzZWFyY2ggYWdhaW4gbGF0ZXIuXG4gICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLWJhc2UgYXNrU2VhcmNoVGFiSGVhZGVyc1wiPlxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImFzay1kcHNlYXJjaC1kZXNrdG9wLWdvLXRvLXRhYlwiIGRhdGEtYXNrLWRwc2VhcmNoLWRlc2t0b3AtZ28tdG8tdGFiPVwieyZxdW90O2luZGV4JnF1b3Q7OjB9XCI+XG4gICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhc2stbG9nLWNsaWNrLWNzbVwiIGRhdGEtYXNrLWxvZy1jbGljay1jc209XCJ7JnF1b3Q7bWV0cmljTmFtZSZxdW90OzomcXVvdDthc2stZGV0YWlscGFnZS1zZWFyY2gtZGVza3RvcC1hbGxyZXN1bHRzLXRhYi1jbGljayZxdW90O31cIj5cbiAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYXNrU2VhcmNoUmVzdWx0c0hlYWRlciBhc2tTZWFyY2hSZXN1bHRzSGVhZGVyQWN0aXZlXCI+XG4gICAgICAgICAgICAgICAgICBBbGxcbiAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhc2stZHBzZWFyY2gtZGVza3RvcC1nby10by10YWJcIiBkYXRhLWFzay1kcHNlYXJjaC1kZXNrdG9wLWdvLXRvLXRhYj1cInsmcXVvdDtpbmRleCZxdW90OzoxfVwiPlxuICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYXNrLWxvZy1jbGljay1jc21cIiBkYXRhLWFzay1sb2ctY2xpY2stY3NtPVwieyZxdW90O21ldHJpY05hbWUmcXVvdDs6JnF1b3Q7YXNrLWRldGFpbHBhZ2Utc2VhcmNoLWRlc2t0b3AtcHJvZHVjdGluZm8tdGFiLWNsaWNrJnF1b3Q7fVwiPlxuICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhc2tTZWFyY2hSZXN1bHRzSGVhZGVyXCI+XG4gICAgICAgICAgICAgICAgICBQcm9kdWN0IEluZm9ybWF0aW9uXG4gICAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgICAgICAgICAgIFx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYXNrLWRwc2VhcmNoLWRlc2t0b3AtZ28tdG8tdGFiXCIgZGF0YS1hc2stZHBzZWFyY2gtZGVza3RvcC1nby10by10YWI9XCJ7JnF1b3Q7aW5kZXgmcXVvdDs6Mn1cIj5cbiAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImFzay1sb2ctY2xpY2stY3NtXCIgZGF0YS1hc2stbG9nLWNsaWNrLWNzbT1cInsmcXVvdDttZXRyaWNOYW1lJnF1b3Q7OiZxdW90O2Fzay1kZXRhaWxwYWdlLXNlYXJjaC1kZXNrdG9wLXFuYXMtdGFiLWNsaWNrJnF1b3Q7fVwiPlxuICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhc2tTZWFyY2hSZXN1bHRzSGVhZGVyXCI+XG4gICAgICAgICAgICAgICAgICBDdXN0b21lciBRJmFtcDtBJ3NcbiAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhc2stZHBzZWFyY2gtZGVza3RvcC1nby10by10YWJcIiBkYXRhLWFzay1kcHNlYXJjaC1kZXNrdG9wLWdvLXRvLXRhYj1cInsmcXVvdDtpbmRleCZxdW90OzozfVwiPlxuICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYXNrLWxvZy1jbGljay1jc21cIiBkYXRhLWFzay1sb2ctY2xpY2stY3NtPVwieyZxdW90O21ldHJpY05hbWUmcXVvdDs6JnF1b3Q7YXNrLWRldGFpbHBhZ2Utc2VhcmNoLWRlc2t0b3AtcmV2aWV3cy10YWItY2xpY2smcXVvdDt9XCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImFza1NlYXJjaFJlc3VsdHNIZWFkZXJcIj5cbiAgICAgICAgICAgICAgICAgIEN1c3RvbWVyIFJldmlld3NcbiAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgIFx1MDAzQ2hyIGNsYXNzPVwiYS1kaXZpZGVyLW5vcm1hbFwiPlxuICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGFza1NlYXJjaFJlc3VsdHNDb250YWluZXJcIj5cdTAwM0MvZGl2PlxuICAgICAgICAgIFxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0MvZm9ybT5cbiAgICAgICAgXG4gICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDZGl2IGNsYXNzPVwiYS1wb3BvdmVyLXByZWxvYWRcIiBpZD1cImEtcG9wb3Zlci1hc2stZHBzZWFyY2gtcG9zdC1xdWVzdGlvbi1tb2RhbFwiPlxuICBcdTAwM0Nmb3JtIG1ldGhvZD1cInBvc3RcIiBhY3Rpb249XCIvYXNrL3F1ZXN0aW9ucy9hc2luL0IwMUdLUUkzOTIvY3JlYXRlXCIgY2xhc3M9XCJhc2tEUFNlYXJjaE1vZGFsRm9ybSBhLXNwYWNpbmctbm9uZVwiPlxuICAgIFx1MDAzQ2lucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwiYXNrUXVlc3Rpb25Tb3VyY2VcIiB2YWx1ZT1cIkRFU0tUT1BfRFBfU0VBUkNIXCI+XG4gICAgXHUwMDNDaW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJhc2tFcnJvclVybFwiIHZhbHVlPVwiL2Fzay9xdWVzdGlvbnMvYXNpbi9CMDFHS1FJMzkyLyNBc2tcIj5cbiAgICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cImFza0FzaW5cIiB2YWx1ZT1cIkIwMUdLUUkzOTJcIiBjbGFzcz1cImFza0FzaW5cIj5cbiAgICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cImFza1F1ZXN0aW9uU291cmNlUGFnZVwiIHZhbHVlPVwiQUxMX1FVRVNUSU9OU19QQUdFXCI+XG4gICAgXHUwMDNDaW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJsaXZlU2VhcmNoU2Vzc2lvbklkXCIgY2xhc3M9XCJhc2tMaXZlU2VhcmNoU2Vzc2lvbklkXCI+XG4gICAgXHUwMDNDaW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJsaXZlU2VhcmNoUGFnZUxvYWRJZFwiIGNsYXNzPVwiYXNrTGl2ZVNlYXJjaFBhZ2VMb2FkSWRcIj5cbiAgICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cInNlYXJjaFNvdXJjZVwiIHZhbHVlPVwiREVUQUlMX1BBR0VfU0VBUkNIX1NPVVJDRVwiPlxuICAgIFx1MDAzQ2lucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwidHlwZWFoZWFkU2VhcmNoU291cmNlXCIgdmFsdWU9XCJUWVBFQUhFQURfU1dEUF9TT1VSQ0VcIj5cbiAgICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cIm9yaWdpbmFsU2VhcmNoU291cmNlXCIgdmFsdWU9XCJERVRBSUxfUEFHRV9TRUFSQ0hfU09VUkNFXCI+XG4gICAgXHUwMDNDaW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJmb2xsb3d1cFNlYXJjaFNvdXJjZVwiIHZhbHVlPVwiRk9MTE9XVVBfUVVFU1RJT05fU0VBUkNIX1NPVVJDRVwiPlxuICAgIFxuICAgICAgXHUwMDNDaW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJhc2tMYW5ndWFnZVwiIHZhbHVlPVwiZW5fVVNcIj5cbiAgICBcbiAgICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cIl9fdG9rZW5fXCIgdmFsdWU9XCJObWR4Rk9PUDc2T2oyQnNrV3VFTmVFQnM1T1Z6TWozRFwiPlxuICAgIFx1MDAzQ2xhYmVsIGNsYXNzPVwiYS1mb3JtLWxhYmVsXCI+UG9zdCB5b3VyIHF1ZXN0aW9uXHUwMDNDL2xhYmVsPlxuICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtaW5wdXQtdGV4dC13cmFwcGVyIGEtc3BhY2luZy10b3AtbWljcm8gYXNrRFBTZWFyY2hQb3N0VGV4dElucHV0XCI+XHUwMDNDdGV4dGFyZWEgbWF4bGVuZ3RoPVwiMTUwXCIgcGxhY2Vob2xkZXI9XCJQbGVhc2UgZW50ZXIgYSBxdWVzdGlvbi5cIiBuYW1lPVwiYXNrUXVlc3Rpb25UZXh0XCI+XHUwMDNDL3RleHRhcmVhPlx1MDAzQy9kaXY+XG4gIFx1MDAzQy9mb3JtPlxuICBcdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYXNrRFBTZWFyY2hRdWVzdGlvbkVycm9yQ29udGFpbmVyXCI+XG4gICAgXHUwMDNDcCBjbGFzcz1cImEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3AtYmFzZSBhLWNvbG9yLWVycm9yIGFza0Vycm9yIGFza0JhZFF1ZXN0aW9uRXJyb3JcIj5cbiAgICAgIFBsZWFzZSBtYWtlIHN1cmUgdGhhdCB5b3UgYXJlIHBvc3RpbmcgaW4gdGhlIGZvcm0gb2YgYSBxdWVzdGlvbi5cbiAgICBcdTAwM0MvcD5cbiAgICBcdTAwM0NwIGNsYXNzPVwiYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1iYXNlIGEtY29sb3ItZXJyb3IgYXNrRXJyb3IgYXNrRW1wdHlRdWVzdGlvbkVycm9yXCI+XG4gICAgICBQbGVhc2UgZW50ZXIgYSBxdWVzdGlvbi5cbiAgICBcdTAwM0MvcD5cbiAgXHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XG5cbiAgICAgICAgXG4gICAgICBcdTAwM0MvZGl2PlxuICAgIFx1MDAzQy9kaXY+XG4gIFx1MDAzQy9kaXY+XG5cdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuXG5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICBcblxuXG4gICAgICAgICAgICBcblxuXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cbiAgICAgICAgICAgIFxuXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0NkaXYgaWQ9XCJhcGx1c0JyYW5kU3RvcnlfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cImFwbHVzQnJhbmRTdG9yeVwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gIFxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcblxuXG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgXG5cblxuICAgICAgICAgICAgXG5cblxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG4gICAgICAgICAgICBcblxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cblxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDZGl2IGlkPVwiYXBsdXMzcF9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiYXBsdXMzcFwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgXG4gICAgXG4gICAgXG5cblxuXG5cbiAgICBcblxuICAgIFx1MDAzQ2RpdiBpZD1cImFwbHVzXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLWV4dHJhLWxhcmdlIGJ1Y2tldFwiPlxuICAgICAgICBcdTAwM0NociBub3NoYWRlPVwidHJ1ZVwiIHNpemU9XCIxXCIgY2xhc3M9XCJidWNrZXREaXZpZGVyXCI+XG4gICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDaDI+UHJvZHVjdCBEZXNjcmlwdGlvblx1MDAzQy9oMj5cbiAgICAgICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcblxuXG5cbiAgICBcblxuXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuXG5cblx1MDAzQ2RpdiBjbGFzcz1cImFwbHVzLXYyIGRlc2t0b3AgY2Vsd2lkZ2V0IHdlYmxhYlJ0bFwiIGNlbF93aWRnZXRfaWQ9XCJhcGx1c1wiPlxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFx1MDAzQ3N0eWxlIHR5cGU9XCJ0ZXh0L2Nzc1wiPlxuICAgIC5hcGx1cy12MiB7XG4gICAgICBkaXNwbGF5OnRhYmxlO1xuICAgICAgbWFyZ2luLWxlZnQ6YXV0bztcbiAgICAgIG1hcmdpbi1yaWdodDphdXRvO1xuICAgICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICAgICAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcbiAgICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gICAgfVxuICAgIC5hcGx1cy12MiAuYXBsdXMtbW9kdWxlLXdyYXBwZXIge3RleHQtYWxpZ246bGVmdDsgZGlzcGxheTppbmxpbmUtYmxvY2s7fVxuICAgIC5hcGx1cy12Mi53ZWJsYWJSdGwgLmFwbHVzLW1vZHVsZS13cmFwcGVyIHt0ZXh0LWFsaWduOmluaGVyaXQ7IGRpc3BsYXk6aW5saW5lLWJsb2NrO31cbiAgICAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZS5tb2R1bGUtMSxcbiAgICAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZS5tb2R1bGUtMixcbiAgICAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZS5tb2R1bGUtMyxcbiAgICAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZS5tb2R1bGUtNCxcbiAgICAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZS5tb2R1bGUtNixcbiAgICAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZS5tb2R1bGUtNyxcbiAgICAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZS5tb2R1bGUtOCxcbiAgICAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZS5tb2R1bGUtOSxcbiAgICAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZS5tb2R1bGUtMTAsXG4gICAgLmFwbHVzLXYyIC5hcGx1cy1tb2R1bGUubW9kdWxlLTExLFxuICAgIC5hcGx1cy12MiAuYXBsdXMtbW9kdWxlLm1vZHVsZS0xMntwYWRkaW5nLWJvdHRvbToxMnB4OyBtYXJnaW4tYm90dG9tOjEycHg7fVxuICAgIC5hcGx1cy12MiAuYXBsdXMtbW9kdWxlOmxhc3QtY2hpbGR7Ym9yZGVyLWJvdHRvbTpub25lfVxuICAgIC5hcGx1cy12MiAuYXBsdXMtbW9kdWxlIHttaW4td2lkdGg6OTc5cHg7fVxuXG4gICAgLyogYXBsdXMgY3NzIG5lZWRlZCB0byBvdmVycmlkZSBhdWkgb24gdGhlIGRldGFpbCBwYWdlICovXG4gICAgLmFwbHVzLXYyIC5hcGx1cy1tb2R1bGUgdGFibGUuYXBsdXMtY2hhcnQuYS1ib3JkZXJlZC5hLXZlcnRpY2FsLXN0cmlwZXMge2JvcmRlcjpub25lO31cbiAgICAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZSB0YWJsZS5hcGx1cy1jaGFydC5hLWJvcmRlcmVkLmEtdmVydGljYWwtc3RyaXBlcyB0ZCB7YmFja2dyb3VuZDpub25lO31cbiAgICAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZSB0YWJsZS5hcGx1cy1jaGFydC5hLWJvcmRlcmVkLmEtdmVydGljYWwtc3RyaXBlcyB0ZC5zZWxlY3RlZCB7YmFja2dyb3VuZC1jb2xvcjojZmZkO31cbiAgICAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZSB0YWJsZS5hcGx1cy1jaGFydC5hLWJvcmRlcmVkLmEtdmVydGljYWwtc3RyaXBlcyB0ZDpmaXJzdC1jaGlsZCB7YmFja2dyb3VuZDojZjdmN2Y3OyBmb250LXdlaWdodDpib2xkO31cbiAgICAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZSB0YWJsZS5hcGx1cy1jaGFydC5hLWJvcmRlcmVkLmEtdmVydGljYWwtc3RyaXBlcyB0ciB0aCB7YmFja2dyb3VuZDpub25lOyBib3JkZXItcmlnaHQ6bm9uZTt9XG4gICAgLmFwbHVzLXYyIC5hcGx1cy1tb2R1bGUgdGFibGUuYXBsdXMtY2hhcnQuYS1ib3JkZXJlZCB0ciB0ZCwuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZSB0YWJsZS5hcGx1cy1jaGFydC5hLWJvcmRlcmVkIHRyIHRoIHtib3JkZXItYm90dG9tOjFweCBkb3R0ZWQgIzk5OTt9XG5cbiAgICAvKiBBKyBUZW1wbGF0ZSAtIEdlbmVyYWwgTW9kdWxlIENTUyAqL1xuICAgIC5hcGx1cy12MiAuYXBtLXRvcCB7aGVpZ2h0OjEwMCU7IHZlcnRpY2FsLWFsaWduOnRvcDt9XG4gICAgaHRtbFtkaXI9J3J0bCddIC5hcGx1cy12Mi53ZWJsYWJSdGwgLmFwbS10b3Age3BhZGRpbmctbGVmdDogMHB4OyBwYWRkaW5nLXJpZ2h0OiAzcHh9XG4gICAgLmFwbHVzLXYyIC5hcG0tY2VudGVyIHtoZWlnaHQ6MTAwJTsgdmVydGljYWwtYWxpZ246bWlkZGxlOyB0ZXh0LWFsaWduOmNlbnRlcjt9XG4gICAgLmFwbHVzLXYyIC5hcG0tcm93IHt3aWR0aDoxMDAlOyBkaXNwbGF5OmlubGluZS1ibG9jazt9XG4gICAgLmFwbHVzLXYyIC5hcG0td3JhcCB7d2lkdGg6MTAwJTt9XG4gICAgLmFwbHVzLXYyIC5hcG0tZml4ZWQtd2lkdGgge3dpZHRoOjk2OXB4O31cbiAgICAuYXBsdXMtdjIgLmFwbS1zcGFjaW5nIHtmbG9hdDpsZWZ0OyB6b29tOjE7fVxuICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIud2VibGFiUnRsIC5hcG0tc3BhY2luZyB7ZmxvYXQ6IHJpZ2h0O31cbiAgICAuYXBsdXMtdjIgLmFwbS1mbG9hdGxlZnQge2Zsb2F0OmxlZnQ7fVxuICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIud2VibGFiUnRsIC5hcG0tZmxvYXRsZWZ0IHtmbG9hdDpyaWdodDt9XG4gICAgLmFwbHVzLXYyIC5hcG0tZmxvYXRyaWdodCB7ZmxvYXQ6cmlnaHQ7fVxuICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIud2VibGFiUnRsIC5hcG0tZmxvYXRyaWdodCB7ZmxvYXQ6bGVmdDt9XG4gICAgLmFwbHVzLXYyIC5hcG0tZmxvYXRub25lIHtmbG9hdDpub25lO31cbiAgICAuYXBsdXMtdjIgLmFwbS1zcGFjaW5nIGltZyB7Ym9yZGVyOm5vbmU7fVxuICAgIC5hcGx1cy12MiAuYXBtLWxlZnRpbWFnZSB7ZmxvYXQ6bGVmdDsgZGlzcGxheTpibG9jazsgbWFyZ2luLXJpZ2h0OjIwcHg7IG1hcmdpbi1ib3R0b206MTBweDt3aWR0aDogMzAwcHg7fVxuICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIud2VibGFiUnRsIC5hcG0tbGVmdGltYWdlIHtmbG9hdDogcmlnaHQ7IG1hcmdpbi1yaWdodDogMHB4OyBtYXJnaW4tbGVmdDoyMHB4O31cbiAgICAuYXBsdXMtdjIgLmFwbS1jZW50ZXJpbWFnZSB7dGV4dC1hbGlnbjogY2VudGVyOyB3aWR0aDozMDBweDsgZGlzcGxheTpibG9jazsgbWFyZ2luLWJvdHRvbToxMHB4O31cbiAgICAuYXBsdXMtdjIgLmFwbS1jZW50ZXJ0aGlyZGNvbCB7bWluLXdpZHRoOjM1OXB4OyBkaXNwbGF5OmJsb2NrfVxuICAgIC5hcGx1cy12MiAuYXBtLWNlbnRlcnRoaXJkY29sIHVsLFxuICAgIC5hcGx1cy12MiAuYXBtLWNlbnRlcnRoaXJkY29sIG9sIHttYXJnaW4tbGVmdDogMzM0cHg7fVxuICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIud2VibGFiUnRsIC5hcG0tY2VudGVydGhpcmRjb2wgdWwsXG4gICAgaHRtbFtkaXI9J3J0bCddIC5hcGx1cy12Mi53ZWJsYWJSdGwgLmFwbS1jZW50ZXJ0aGlyZGNvbCBvbCB7bWFyZ2luLWxlZnQ6IDBweDsgbWFyZ2luLXJpZ2h0OiAzMzRweDt9XG4gICAgLmFwbHVzLXYyIC5hcG0tcmlnaHR0aGlyZGNvbCB7ZmxvYXQ6cmlnaHQ7IHdpZHRoOjIzMHB4OyBwYWRkaW5nLWxlZnQ6MzBweDsgbWFyZ2luLWxlZnQ6MzBweDsgYm9yZGVyLWxlZnQ6MXB4IHNvbGlkICNkZGRkZGQ7fVxuICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIud2VibGFiUnRsIC5hcG0tcmlnaHR0aGlyZGNvbCB7ZmxvYXQ6IGxlZnQ7IHBhZGRpbmctbGVmdDogMHB4OyBwYWRkaW5nLXJpZ2h0OjMwcHg7IG1hcmdpbi1sZWZ0OjBweDsgbWFyZ2luLXJpZ2h0OjMwcHg7IGJvcmRlci1sZWZ0OjBweDsgYm9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjZGRkZGRkO31cbiAgICAuYXBsdXMtdjIgLmFwbS1sZWZ0dHdvdGhpcmRzd3JhcCB7d2lkdGg6NzA5cHg7IGRpc3BsYXk6YmxvY2s7fVxuICAgIC5hcGx1cy12MiAuYXBtLWxlZnRoYWxmY29sIHt3aWR0aDo0ODBweDsgcGFkZGluZy1yaWdodDozMHB4OyBkaXNwbGF5OmJsb2NrOyBmbG9hdDpsZWZ0O31cbiAgICBodG1sW2Rpcj0ncnRsJ10gLmFwbHVzLXYyLndlYmxhYlJ0bCAuYXBtLWxlZnRoYWxmY29sIHtwYWRkaW5nLWxlZnQ6MzBweDsgZmxvYXQ6cmlnaHQ7fVxuICAgIC5hcGx1cy12MiAuYXBtLXJpZ2h0aGFsZmNvbCB7d2lkdGg6NDgwcHg7IGRpc3BsYXk6YmxvY2s7IGZsb2F0OmxlZnQ7fVxuICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIud2VibGFiUnRsIC5hcG0tcmlnaHRoYWxmY29sIHtmbG9hdDpyaWdodDt9XG4gICAgLmFwbHVzLXYyIC5hcG0tZXZlbnRoaXJkY29sIHt3aWR0aDozMDBweDsgZGlzcGxheTpibG9jazt9XG4gICAgLmFwbHVzLXYyIC5hcG0tZXZlbnRoaXJkY29sLXRhYmxlIHtib3JkZXItc3BhY2luZzogMHB4IDBweDsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTt9XG4gICAgLmFwbHVzLXYyIC5hcG0tZXZlbnRoaXJkY29sLXRhYmxlIHRyIHRkIHt2ZXJ0aWNhbC1hbGlnbjogdG9wO31cbiAgICAuYXBsdXMtdjIgLmFwbS1mb3VydGhjb2wge3dpZHRoOjIyMHB4OyBmbG9hdDpsZWZ0O31cbiAgICBodG1sW2Rpcj0ncnRsJ10gLmFwbHVzLXYyLndlYmxhYlJ0bCAuYXBtLWZvdXJ0aGNvbCB7ZmxvYXQ6cmlnaHQ7fVxuICAgIC5hcGx1cy12MiAuYXBtLWZvdXJ0aGNvbCAuYXBtLWZvdXJ0aGNvbC1pbWFnZSB7cG9zaXRpb246cmVsYXRpdmU7fVxuICAgIC5hcGx1cy12MiAuYXBtLWZvdXJ0aGNvbCBpbWcge2Rpc3BsYXk6YmxvY2s7IG1hcmdpbjowIGF1dG87fVxuICAgIC5hcGx1cy12MiAuYXBtLWZvdXJ0aGNvbC10YWJsZSB7Ym9yZGVyLXNwYWNpbmc6IDBweCAwcHg7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7fVxuICAgIC5hcGx1cy12MiAuYXBtLWZvdXJ0aGNvbC10YWJsZSB0ciB0ZCB7dmVydGljYWwtYWxpZ246IHRvcDt9XG4gICAgLmFwbHVzLXYyIC5hcG0tbGlzdGJveCB7d2lkdGg6MTAwJTt9XG4gICAgLmFwbHVzLXYyIC5hcG0taWNvbmhlYWRlciB7ZmxvYXQ6bGVmdDsgcGFkZGluZy1sZWZ0OjEwcHg7fVxuICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIud2VibGFiUnRsIC5hcG0taWNvbmhlYWRlciB7ZmxvYXQ6cmlnaHQ7IHBhZGRpbmctbGVmdDowcHg7IHBhZGRpbmctcmlnaHQ6IDEwcHh9XG4gICAgLmFwbHVzLXYyIC5hcG0tc3BhY2luZyB1bDpsYXN0LWNoaWxkLC5hcGx1cy12MiBvbDpsYXN0LWNoaWxkIHttYXJnaW4tYm90dG9tOjAgIWltcG9ydGFudDt9XG4gICAgLmFwbHVzLXYyIC5hcG0tc3BhY2luZyB1bCwuYXBsdXMtdjIgb2wge3BhZGRpbmc6MCAhaW1wb3J0YW50O31cbiAgICAuYXBsdXMtdjIgLmFwbS1zcGFjaW5nIHVsIHttYXJnaW46MCAwIDE4cHggMThweCAhaW1wb3J0YW50OyBjb2xvcjojYWFhYWFhO31cbiAgICBodG1sW2Rpcj0ncnRsJ10gLmFwbHVzLXYyLndlYmxhYlJ0bCAuYXBtLXNwYWNpbmcgdWwge21hcmdpbjowIDE4cHggMThweCAwICFpbXBvcnRhbnQ7fVxuXG4gICAgLmFwbHVzLXYyIC5hcG0tc3BhY2luZyB1bCBsaSwuYXBsdXMtdjIgb2wgbGkge3dvcmQtd3JhcDpicmVhay13b3JkOyBtYXJnaW46MCAhaW1wb3J0YW50O31cbiAgICAuYXBsdXMtdjIgLmFwbS1zcGFjaW5nIHVsIGxpIHttYXJnaW46MCAhaW1wb3J0YW50O31cbiAgICAuYXBsdXMtdjIgLmFwbS1zcGFjaW5nIHVsIC5hLWxpc3QtaXRlbSwuYXBsdXMtdjIgb2wgLmEtbGlzdC1pdGVtIHtjb2xvcjojMzMzMzMzO31cblxuICAgIC8qIEErIFRlbXBsYXRlIC0gTW9kdWxlIDEgU2VwY2lmaWMgQ1NTICovXG4gICAgLmFwbHVzLXYyIC5hbXAtY2VudGVydGhpcmRjb2wtbGlzdGJveCB7ZGlzcGxheTppbmxpbmUtYmxvY2s7IHdpZHRoOjM1OXB4O31cblxuICAgIC8qIEErIFRlbXBsYXRlIC0gTW9kdWxlIDIvMyBTcGVjaWZpYyBDU1MgKi9cbiAgICAuYXBsdXMtdjIgLmFwbS1zaWRlbW9kdWxlIHt0ZXh0LWFsaWduOmxlZnQ7IG1hcmdpbjowIGF1dG87IHdpZHRoOjk3MHB4OyBwYWRkaW5nOjA7IGJhY2tncm91bmQtY29sb3I6I2ZmZmZmZjsgcG9zaXRpb246cmVsYXRpdmU7fVxuICAgIC5hcGx1cy12Mi53ZWJsYWJSdGwgLmFwbS1zaWRlbW9kdWxlIHt0ZXh0LWFsaWduOmluaGVyaXQ7fVxuICAgIC5hcGx1cy12MiAuYXBtLXNpZGVtb2R1bGUtdGV4dHJpZ2h0IHt3aWR0aDo0NzBweDsgcG9zaXRpb246cmVsYXRpdmU7IGRpc3BsYXk6dGFibGUtY2VsbDsgdmVydGljYWwtYWxpZ246bWlkZGxlOyBwYWRkaW5nLWxlZnQ6NDBweDsgaGVpZ2h0OjMwMHB4OyBtYXgtaGVpZ2h0OjMwMHB4O31cbiAgICBodG1sW2Rpcj0ncnRsJ10gLmFwbHVzLXYyLndlYmxhYlJ0bCAuYXBtLXNpZGVtb2R1bGUtdGV4dHJpZ2h0IHtwYWRkaW5nLWxlZnQ6MHB4OyBwYWRkaW5nLXJpZ2h0OiA0MHB4O31cbiAgICAuYXBsdXMtdjIgLmFwbS1zaWRlbW9kdWxlLXRleHRsZWZ0IHt3aWR0aDo2MzBweDsgcG9zaXRpb246cmVsYXRpdmU7IGRpc3BsYXk6dGFibGUtY2VsbDsgdmVydGljYWwtYWxpZ246bWlkZGxlOyBwYWRkaW5nLWxlZnQ6MjAwcHg7IGhlaWdodDozMDBweDsgbWF4LWhlaWdodDozMDBweDt9XG4gICAgaHRtbFtkaXI9J3J0bCddIC5hcGx1cy12Mi53ZWJsYWJSdGwgLmFwbS1zaWRlbW9kdWxlLXRleHRsZWZ0IHtwYWRkaW5nLWxlZnQ6MHB4OyBwYWRkaW5nLXJpZ2h0OjIwMHB4O31cbiAgICAuYXBsdXMtdjIgLmFwbS1zaWRlbW9kdWxlLWltYWdlbGVmdCB7cG9zaXRpb246cmVsYXRpdmU7IGZsb2F0OmxlZnQ7IGRpc3BsYXk6YmxvY2s7fVxuICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIud2VibGFiUnRsIC5hcG0tc2lkZW1vZHVsZS1pbWFnZWxlZnQge2Zsb2F0OnJpZ2h0O31cbiAgICAuYXBsdXMtdjIgLmFwbS1zaWRlbW9kdWxlLWltYWdlcmlnaHQge3Bvc2l0aW9uOnJlbGF0aXZlOyBmbG9hdDpyaWdodDsgZGlzcGxheTpibG9jazt9XG4gICAgaHRtbFtkaXI9J3J0bCddIC5hcGx1cy12Mi53ZWJsYWJSdGwgLmFwbS1zaWRlbW9kdWxlLWltYWdlcmlnaHQge2Zsb2F0OmxlZnQ7fVxuXG4gICAgLyogQSsgVGVtcGxhdGUgLSBNb2R1bGUgNCBTcGVjaWZpYyBDU1MgKi9cbiAgICAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZS5tb2R1bGUtNCB0aCB7cGFkZGluZzogMHB4OyBwYWRkaW5nLXJpZ2h0OjMwcHg7IHdpZHRoOjIyMHB4O31cbiAgICBodG1sW2Rpcj0ncnRsJ10gLmFwbHVzLXYyLndlYmxhYlJ0bCAuYXBsdXMtbW9kdWxlLm1vZHVsZS00IHRoIHtwYWRkaW5nLWxlZnQ6IDMwcHg7IHBhZGRpbmctcmlnaHQ6IDBweDt9XG4gICAgLmFwbHVzLXYyIC5hcGx1cy1tb2R1bGUubW9kdWxlLTQgdGg6bGFzdC1vZi10eXBlIHtwYWRkaW5nLXJpZ2h0OjBweDt9XG4gICAgaHRtbFtkaXI9J3J0bCddIC5hcGx1cy12Mi53ZWJsYWJSdGwgLmFwbHVzLW1vZHVsZS5tb2R1bGUtNCB0aDpsYXN0LW9mLXR5cGUge3BhZGRpbmctbGVmdDogMHB4fVxuXG4gICAgLyogQSsgVGVtcGxhdGUgLSBNb2R1bGUgNSBTcGVjaWZpYyBDU1MgKi9cbiAgICAuYXBsdXMtdjIgLmFwbS10YWJsZW1vZHVsZSB7dGV4dC1hbGlnbjpsZWZ0OyBtYXJnaW46MCBhdXRvOyB3aWR0aDo5NzBweDt9XG4gICAgLmFwbHVzLXYyIHRhYmxlLmFwbS10YWJsZW1vZHVsZS10YWJsZSB7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RkZGRkZDsgd2lkdGg6IDk3MHB4OyBsZWZ0OjQlO3RhYmxlLWxheW91dDogZml4ZWR9XG4gICAgLmFwbHVzLXYyIHRoLmFwbS10YWJsZW1vZHVsZS1rZXloZWFkIHtib3JkZXItdG9wOjFweCBzb2xpZCAjZGRkZGRkOyBwYWRkaW5nOjhweCAxNHB4IDZweCAhaW1wb3J0YW50OyBiYWNrZ3JvdW5kLWNvbG9yOiNmN2Y3Zjc7IGZvbnQtd2VpZ2h0Om5vcm1hbDsgY29sb3I6IzYyNjI2MjsgZmxvYXQ6bm9uZSAhaW1wb3J0YW50OyBtYXJnaW4tcmlnaHQ6MDsgdGV4dC1hbGlnbjpjZW50ZXI7IHdpZHRoOjEwNnB4O31cbiAgICAuYXBsdXMtdjIgdHIuYXBtLXRhYmxlbW9kdWxlLWtleXZhbHVlIHRkIHtwYWRkaW5nLXRvcDo4cHggIWltcG9ydGFudDsgcGFkZGluZy1sZWZ0OjE0cHg7IHBhZGRpbmctYm90dG9tOjhweDsgYm9yZGVyLXRvcDoxcHggc29saWQgI2RkZGRkZDsgYm9yZGVyLWJvdHRvbToxcHggc29saWQgI2RkZGRkZDsgdGV4dC1hbGlnbjpjZW50ZXI7d2lkdGg6aW5oZXJpdCFpbXBvcnRhbnR9XG4gICAgLmFwbHVzLXYyIC5hcG0tdGFibGVtb2R1bGUtdmFsdWVjZWxsLnNlbGVjdGVkIHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY1ZWM7fVxuICAgIC5hcGx1cy12MiAuYXBtLXRhYmxlbW9kdWxlLXZhbHVlY2VsbCBzcGFuIHt3b3JkLXdyYXA6YnJlYWstd29yZDt9XG4gICAgLmFwbHVzLXYyIC5hcG0tdGFibGVtb2R1bGUta2V5aGVhZCB7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjZGRkZGRkO31cbiAgICAuYXBsdXMtdjIgLmFwbS10YWJsZW1vZHVsZS1ibGFua2tleWhlYWQge2JvcmRlcjowICFpbXBvcnRhbnQ7IHdpZHRoOjE4JTt9XG4gICAgLmFwbHVzLXYyIC5hcG0tdGFibGVtb2R1bGUtaW1hZ2Uge2JhY2tncm91bmQtY29sb3I6I0ZGRkZGRjsgcGFkZGluZzowICFpbXBvcnRhbnQ7IHRleHQtYWxpZ246Y2VudGVyOyBvdmVyZmxvdzpoaWRkZW47IHZlcnRpY2FsLWFsaWduOmJvdHRvbTt9XG4gICAgLmFwbHVzLXYyIC5hcG0tdGFibGVtb2R1bGUtaW1hZ2Vyb3dzID4gdGQgPiBpbWcge21heC13aWR0aDpub25lICFpbXBvcnRhbnQ7fVxuICAgIC5hcGx1cy12MiB0YWJsZS5hcG0tdGFibGVtb2R1bGUtdGFibGUge21hcmdpbi1ib3R0b206IDZweCFpbXBvcnRhbnQ7fVxuICAgIC5hcGx1cy12MiB0YWJsZS5hcG0tdGFibGVtb2R1bGUtdGFibGUgdGgge3BhZGRpbmctYm90dG9tOjhweDsgdGV4dC1hbGlnbjpjZW50ZXI7fVxuICAgIC5hcGx1cy12MiAuYXBtLWNoZWNrZWQge3RleHQtYWxpZ246Y2VudGVyO31cblxuICAgIC8qIEErIFRlbXBsYXRlIC0gTW9kdWxlIDYgU3BlY2lmaWMgQ1NTICovXG4gICAgLmFwbHVzLXYyIC5hcG0taG92ZXJtb2R1bGUge3RleHQtYWxpZ246bGVmdDsgbWFyZ2luOjAgYXV0bzsgd2lkdGg6OTcwcHg7IHBhZGRpbmc6IDA7IGJhY2tncm91bmQtY29sb3I6I2ZmZmZmZjsgaGVpZ2h0OjMwMHB4OyBwb3NpdGlvbjpyZWxhdGl2ZTt9XG4gICAgLmFwbHVzLXYyLndlYmxhYlJ0bCAuYXBtLWhvdmVybW9kdWxlIHt0ZXh0LWFsaWduOmluaGVyaXQ7fVxuICAgIC5hcGx1cy12MiAuYXBtLWhvdmVybW9kdWxlLXNsaWRlcyB7YmFja2dyb3VuZC1jb2xvcjojZmZmZmZmOyB3aWR0aDo5NzBweDsgaGVpZ2h0OjMwMHB4O31cbiAgICAuYXBsdXMtdjIgLmFwbS1ob3Zlcm1vZHVsZS1zbGlkZXMtaW5uZXIge21hcmdpbi1sZWZ0OjM0NXB4OyBwb3NpdGlvbjphYnNvbHV0ZTsgei1pbmRleDoyNTt9XG4gICAgaHRtbFtkaXI9J3J0bCddIC5hcGx1cy12Mi53ZWJsYWJSdGwgLmFwbS1ob3Zlcm1vZHVsZS1zbGlkZXMtaW5uZXIge21hcmdpbi1sZWZ0OjBweDsgbWFyZ2luLXJpZ2h0OjM0NXB4O31cbiAgICAuYXBsdXMtdjIgLmFwbS1ob3Zlcm1vZHVsZS1zbGlkZWNvbnRyb2wge3Bvc2l0aW9uOmFic29sdXRlOyB0b3A6MTgwcHg7IGxlZnQ6MzQ1cHg7IHotaW5kZXg6MzA7fVxuICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIud2VibGFiUnRsIC5hcG0taG92ZXJtb2R1bGUtc2xpZGVjb250cm9sIHtsZWZ0OiAwcHg7IHJpZ2h0OjM0NXB4O31cblxuICAgIC5hcGx1cy12MiAuYXBtLWhvdmVybW9kdWxlLXNtYWxsaW1hZ2Uge3dpZHRoOjgwcHg7IGhlaWdodDo4MHB4OyBjdXJzb3I6cG9pbnRlcjsgZmxvYXQ6bGVmdDsgbWFyZ2luLXJpZ2h0OjM1cHg7IHBhZGRpbmc6MDt9XG4gICAgaHRtbFtkaXI9J3J0bCddIC5hcGx1cy12Mi53ZWJsYWJSdGwgLmFwbS1ob3Zlcm1vZHVsZS1zbWFsbGltYWdlIHtmbG9hdDpyaWdodDsgbWFyZ2luLXJpZ2h0OjBweCBtYXJnaW4tbGVmdDozNXB4O31cbiAgICAuYXBsdXMtdjIgLmFwbS1ob3Zlcm1vZHVsZS1zbWFsbGltYWdlLWJnIHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZmZmY7IHdpZHRoOjEwMHB4OyBoZWlnaHQ6ODBweDt9XG4gICAgLmFwbHVzLXYyIC5hcG0taG92ZXJtb2R1bGUtc21hbGxpbWFnZS1sYXN0IHttYXJnaW4tcmlnaHQ6MCAhaW1wb3J0YW50O31cbiAgICBodG1sW2Rpcj0ncnRsJ10gLmFwbHVzLXYyLndlYmxhYlJ0bCAuYXBtLWhvdmVybW9kdWxlLXNtYWxsaW1hZ2UtbGFzdCB7bWFyZ2luLWxlZnQ6MCAhaW1wb3J0YW50O31cbiAgICAuYXBsdXMtdjIgLmFwbS1ob3Zlcm1vZHVsZS1zbWFsbGltYWdlIGEge3RleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTsgZm9udC1zaXplOjExcHg7IGZvbnQtd2VpZ2h0OmJvbGQ7IGNvbG9yOjMzMzMzMyAhaW1wb3J0YW50O31cbiAgICAuYXBsdXMtdjIgLmFwbS1ob3Zlcm1vZHVsZS1zbWFsbGltYWdlIGE6aG92ZXIge3RleHQtZGVjb3JhdGlvbjpub25lOyBjb2xvcjojMzMzMzMzICFpbXBvcnRhbnQ7fVxuICAgIC5hcGx1cy12MiAuYXBtLWhvdmVybW9kdWxlLXNtYWxsaW1hZ2UgaW1nIHtib3JkZXI6MXB4IHNvbGlkICM4ODg4ODg7fVxuICAgIC5hcGx1cy12MiAuYXBtLWhvdmVybW9kdWxlLW9wYWNpdHltb2RvbiBhIHtjb2xvcjo4ODg4ODggIWltcG9ydGFudDt9XG4gICAgLmFwbHVzLXYyIC5hcG0taG92ZXJtb2R1bGUtb3BhY2l0eW1vZG9uOmhvdmVyIHtvcGFjaXR5OjEgIWltcG9ydGFudDsgZmlsdGVyOmFscGhhKG9wYWNpdHk9MTAwKSAhaW1wb3J0YW50O31cbiAgICAuYXBsdXMtdjIgLmFwbS1ob3Zlcm1vZHVsZS1vcGFjaXR5bW9kb24gaW1nIHtvcGFjaXR5OjAuMzsgZmlsdGVyOmFscGhhKG9wYWNpdHk9MzApO31cbiAgICAuYXBsdXMtdjIgLmFwbS1ob3Zlcm1vZHVsZS1pbWFnZSB7cG9zaXRpb246YWJzb2x1dGU7IGxlZnQ6MDsgei1pbmRleDogMTt9XG4gICAgaHRtbFtkaXI9J3J0bCddIC5hcGx1cy12Mi53ZWJsYWJSdGwgLmFwbS1ob3Zlcm1vZHVsZS1pbWFnZSB7cmlnaHQ6MDt9XG5cbiAgICAvKiBBKyBUZW1wbGF0ZSAtIE1vZHVsZSA5IFNwZWNpZmljIENTUyAqL1xuICAgIC5hcGx1cy12MiAuYXBsdXMtbW9kdWxlLm1vZHVsZS05IHRoLmFwbS1jZW50ZXIge3BhZGRpbmc6IDAgMzVweCAwIDA7IHdpZHRoOjMwMHB4O31cbiAgICBodG1sW2Rpcj0ncnRsJ10gLmFwbHVzLXYyLndlYmxhYlJ0bCAuYXBsdXMtbW9kdWxlLm1vZHVsZS05IHRoLmFwbS1jZW50ZXIge3BhZGRpbmc6IDAgMCAwIDM1cHg7IHdpZHRoOjMwMHB4O31cbiAgICAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZS5tb2R1bGUtOSB0aC5hcG0tY2VudGVyOmxhc3Qtb2YtdHlwZSB7cGFkZGluZzowcHg7fVxuXG4gICAgLypBKyBUZW1wbGF0ZSAtIE1vZHVsZSAxMSBTcGVjaWZpYyBDU1MgKi9cbiAgICAuYXBsdXMtdjIgLmFwbS1oZXJvbW9kdWxlLXRleHRyaWdodCB7ZmxvYXQ6cmlnaHQ7IHJpZ2h0OjUwcHg7IG1hcmdpbi10b3A6MTAwcHg7IHBhZGRpbmc6MTVweDsgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoc3RhcnRDb2xvcnN0cj0jQkJCQkJCLGVuZENvbG9yc3RyPSNGRkZGRkYpOyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwwLDApOyBiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC43KTtjb2xvcjp3aGl0ZTsgd2lkdGg6MjUwcHg7fVxuICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIud2VibGFiUnRsIC5hcG0taGVyb21vZHVsZS10ZXh0cmlnaHQge2Zsb2F0OmxlZnQ7IGxlZnQ6IDUwcHg7IHJpZ2h0OiBhdXRvfVxuICAgIC5hcGx1cy12MiAuYXBtLWhlcm9tb2R1bGUtdGV4dHJpZ2h0IGgzLFxuICAgIC5hcGx1cy12MiAuYXBtLWhlcm9tb2R1bGUtdGV4dHJpZ2h0IHVsLFxuICAgIC5hcGx1cy12MiAuYXBtLWhlcm9tb2R1bGUtdGV4dHJpZ2h0IG9sLFxuICAgIC5hcGx1cy12MiAuYXBtLWhlcm9tb2R1bGUtdGV4dHJpZ2h0IHVsIC5hLWxpc3QtaXRlbSxcbiAgICAuYXBsdXMtdjIgLmFwbS1oZXJvbW9kdWxlLXRleHRyaWdodCBvbCAuYS1saXN0LWl0ZW0ge2NvbG9yOndoaXRlfVxuICAgIC5hcGx1cy12MiAubW9kdWxlLTEyIC50ZXh0cmlnaHQge2Zsb2F0OnJpZ2h0OyByaWdodDo1MHB4OyBtYXJnaW4tdG9wOjEwMHB4OyBwYWRkaW5nOjE1cHg7IGNvbG9yOmJsYWNrOyB3aWR0aDoyNTBweDsgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoc3RhcnRDb2xvcnN0cj0jQkJCQkJCLGVuZENvbG9yc3RyPSNGRkZGRkYpOyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LDI1NSwyNTUpOyBiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMC43KTt9XG4gICAgaHRtbFtkaXI9J3J0bCddIC5hcGx1cy12Mi53ZWJsYWJSdGwgLm1vZHVsZS0xMiAudGV4dHJpZ2h0IHtmbG9hdDpsZWZ0OyBsZWZ0OiA1MHB4OyByaWdodDogYXV0b31cblxuICAgIC8qIG1vZHVsZSAxMS8xMiAqL1xuICAgIC5hcGx1cy12MiAubW9kdWxlLTEyIC5hcG0taGVyby1pbWFnZSwuYXBsdXMtdjIgLm1vZHVsZS0xMSAuYXBtLWhlcm8taW1hZ2V7ZmxvYXQ6bm9uZX1cbiAgICAuYXBsdXMtdjIgLm1vZHVsZS0xMiAuYXBtLWhlcm8taW1hZ2UgaW1nLC5hcGx1cy12MiAubW9kdWxlLTExIC5hcG0taGVyby1pbWFnZSBpbWd7cG9zaXRpb246YWJzb2x1dGV9XG4gICAgLmFwbHVzLXYyIC5tb2R1bGUtMTIgLmFwbS1oZXJvLXRleHQsLmFwbHVzLXYyIC5tb2R1bGUtMTEgLmFwbS1oZXJvLXRleHR7cG9zaXRpb246cmVsYXRpdmV9XG4gICAgLmFwbHVzLXYyIC5tb2R1bGUtMTEgLmFwbHVzLW1vZHVsZS1jb250ZW50LC5hcGx1cy12MiAubW9kdWxlLTEyIC5hcGx1cy1tb2R1bGUtY29udGVudHttaW4taGVpZ2h0OjMwMHB4fVxuXG4gICAgLyogbW9kdWxlIDEzIHRleHQgKi9cbiAgICAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZS0xMyB7XG4gICAgICAgIHBhZGRpbmc6IDQwcHg7XG4gICAgICAgIG1heC13aWR0aDogOTc5cHg7XG4gICAgfVxuICAgLmFwbHVzLXYyIC5hcGx1cy1tb2R1bGUtMTMgLmFwbHVzLTEzLWhlYWRpbmctdGV4dCB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgIH1cbiAgICAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZS0xMyBwIHtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG4gICAgfVxuICAgIC5hcGx1cy12Mi53ZWJsYWJSdGwgLmFwbHVzLW1vZHVsZS0xMyBwIHtcbiAgICAgICAgdGV4dC1hbGlnbjogaW5oZXJpdDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAgICAgLyogTWFpbiBNZWRpYSBRdWVyaWVzICovXG4gICAgICAgIC5hcGx1cy12MiAuYWNzLXV4LXdyYXBmaXgge3dpZHRoOjEwMCU7fVxuICAgICAgICAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZS13cmFwcGVyIHt3aWR0aDoxMDAlO31cbiAgICAgICAgLmFwbHVzLXYyIC5hcG0tbGVmdGltYWdlIHtmbG9hdDpub25lO31cblxuICAgICAgICBodG1sW2Rpcj0ncnRsJ10gLmFwbHVzLXYyIC5hY3MtdXgtd3JhcGZpeCB7d2lkdGg6MTAwJTt9XG4gICAgICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIgLmFwbHVzLW1vZHVsZS13cmFwcGVyIHt3aWR0aDoxMDAlO31cbiAgICAgICAgaHRtbFtkaXI9J3J0bCddIC5hcGx1cy12MiAuYXBtLWxlZnRpbWFnZSB7ZmxvYXQ6bm9uZTt9XG5cbiAgICAgICAgLmFwbHVzLXYyIC5hcG0tY2VudGVydGhpcmRjb2wgdWwsXG4gICAgICAgIC5hcGx1cy12MiAuYXBtLWNlbnRlcnRoaXJkY29sIG9sIHttYXJnaW4tbGVmdDogMTRweDt9XG4gICAgICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIud2VibGFiUnRsIC5hcG0tY2VudGVydGhpcmRjb2wgdWwsXG4gICAgICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIud2VibGFiUnRsIC5hcG0tY2VudGVydGhpcmRjb2wgb2wge21hcmdpbi1sZWZ0OiAwcHg7IG1hcmdpbi1yaWdodDogMTRweDt9XG5cbiAgICAgICAgLyogTW9kdWxlMSBNZWRpYSBRdWVyaWVzICovXG4gICAgICAgIC5hcGx1cy12MiAuYXBtLWxlZnR0d290aGlyZHN3cmFwIHtmbG9hdDpub25lOyB3aWR0aDoxMDAlOyBtYXJnaW46MDt9XG4gICAgICAgIC5hcGx1cy12MiAuYXBtLWxlZnRpbWFnZSBwIHtkaXNwbGF5Om5vbmU7fVxuICAgICAgICAuYXBsdXMtdjIgLmFwbS1jZW50ZXJ0aGlyZGNvbCB7ZmxvYXQ6bm9uZTsgd2lkdGg6MTAwJTt9XG4gICAgICAgIC5hcGx1cy12MiAuYXBtLWxpc3Rib3gge3dpZHRoOjEwMCU7fVxuICAgICAgICAuYXBsdXMtdjIgLmFwbS1yaWdodHRoaXJkY29sIHtmbG9hdDpub25lOyB3aWR0aDoxMDAlOyBib3JkZXItbGVmdDpub25lOyBwYWRkaW5nOjA7IG1hcmdpbjowOyBtYXJnaW4tYm90dG9tOjIwcHg7fVxuICAgICAgICAuYXBsdXMtdjIgLmFwbS1yaWdodHRoaXJkY29sLWlubmVyIGltZyB7ZGlzcGxheTpibG9jazsgbWFyZ2luOmF1dG87fVxuXG4gICAgICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIgLmFwbS1sZWZ0dHdvdGhpcmRzd3JhcCB7ZmxvYXQ6bm9uZTsgd2lkdGg6MTAwJTsgbWFyZ2luOjA7fVxuICAgICAgICBodG1sW2Rpcj0ncnRsJ10gLmFwbHVzLXYyIC5hcG0tbGVmdGltYWdlIHAge2Rpc3BsYXk6bm9uZTt9XG4gICAgICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIgLmFwbS1jZW50ZXJ0aGlyZGNvbCB7ZmxvYXQ6bm9uZTsgd2lkdGg6MTAwJTt9XG4gICAgICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIgLmFwbS1saXN0Ym94IHt3aWR0aDoxMDAlO31cbiAgICAgICAgaHRtbFtkaXI9J3J0bCddIC5hcGx1cy12MiAuYXBtLXJpZ2h0dGhpcmRjb2wge2Zsb2F0Om5vbmU7IHdpZHRoOjEwMCU7IGJvcmRlci1sZWZ0Om5vbmU7IHBhZGRpbmc6MDsgbWFyZ2luOjA7IG1hcmdpbi1ib3R0b206MjBweDt9XG4gICAgICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIgLmFwbS1yaWdodHRoaXJkY29sLWlubmVyIGltZyB7ZGlzcGxheTpibG9jazsgbWFyZ2luOmF1dG87fVxuXG4gICAgICAgIC8qIE1vZHVsZTIvMyBNZWRpYSBRdWVyaWVzICovXG4gICAgICAgIC5hcGx1cy12MiAuYXBtLXNpZGVtb2R1bGUge3dpZHRoOjEwMCU7IGhlaWdodDphdXRvO31cbiAgICAgICAgLmFwbHVzLXYyIC5hcG0tc2lkZW1vZHVsZS1pbWFnZWxlZnQge3dpZHRoOjEwMCU7IHBvc2l0aW9uOnJlbGF0aXZlOyBkaXNwbGF5OmJsb2NrOyBtYXJnaW4tYm90dG9tOjE1cHg7fVxuICAgICAgICAuYXBsdXMtdjIgLmFwbS1zaWRlbW9kdWxlLWltYWdlbGVmdCBpbWcge2Rpc3BsYXk6YmxvY2s7IG1hcmdpbjowIGF1dG87fVxuICAgICAgICAuYXBsdXMtdjIgLmFwbS1zaWRlbW9kdWxlLWltYWdlcmlnaHQge3dpZHRoOjEwMCU7IHBvc2l0aW9uOnJlbGF0aXZlOyBkaXNwbGF5OmJsb2NrOyBtYXJnaW4tYm90dG9tOjE1cHg7fVxuICAgICAgICAuYXBsdXMtdjIgLmFwbS1zaWRlbW9kdWxlLWltYWdlcmlnaHQgaW1nIHtkaXNwbGF5OmJsb2NrOyBtYXJnaW46MCBhdXRvO31cbiAgICAgICAgLmFwbHVzLXYyIC5hcG0tc2lkZW1vZHVsZSAuYS1zcGFjaW5nLW1lZGl1bSB7bWFyZ2luLWJvdHRvbTozMHB4ICFpbXBvcnRhbnQ7fVxuXG4gICAgICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIud2VibGFiUnRsIC5hcG0tc2lkZW1vZHVsZSB7d2lkdGg6MTAwJTsgaGVpZ2h0OmF1dG87fVxuICAgICAgICBodG1sW2Rpcj0ncnRsJ10gLmFwbHVzLXYyLndlYmxhYlJ0bCAuYXBtLXNpZGVtb2R1bGUtaW1hZ2VsZWZ0IHt3aWR0aDoxMDAlOyBwb3NpdGlvbjpyZWxhdGl2ZTsgZGlzcGxheTpibG9jazsgbWFyZ2luLWJvdHRvbToxNXB4O31cbiAgICAgICAgaHRtbFtkaXI9J3J0bCddIC5hcGx1cy12Mi53ZWJsYWJSdGwgLmFwbS1zaWRlbW9kdWxlLWltYWdlbGVmdCBpbWcge2Rpc3BsYXk6YmxvY2s7IG1hcmdpbjowIGF1dG87fVxuICAgICAgICBodG1sW2Rpcj0ncnRsJ10gLmFwbHVzLXYyLndlYmxhYlJ0bCAuYXBtLXNpZGVtb2R1bGUtaW1hZ2VyaWdodCB7d2lkdGg6MTAwJTsgcG9zaXRpb246cmVsYXRpdmU7IGRpc3BsYXk6YmxvY2s7IG1hcmdpbi1ib3R0b206MTVweDt9XG4gICAgICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIud2VibGFiUnRsIC5hcG0tc2lkZW1vZHVsZS1pbWFnZXJpZ2h0IGltZyB7ZGlzcGxheTpibG9jazsgbWFyZ2luOjAgYXV0bzt9XG4gICAgICAgIGh0bWxbZGlyPSdydGwnXSAuYXBsdXMtdjIud2VibGFiUnRsIC5hcG0tc2lkZW1vZHVsZSAuYS1zcGFjaW5nLW1lZGl1bSB7bWFyZ2luLWJvdHRvbTozMHB4ICFpbXBvcnRhbnQ7fVxuXG4gICAgICAgIC8qIE1vZHVsZTQgTWVkaWEgUXVlcmllcyAqL1xuICAgICAgICAuYXBsdXMtdjIgLmFwbS1mb3VydGhjb2wge21hcmdpbjowOyBwYWRkaW5nLWJvdHRvbToyM3B4OyB3aWR0aDoxMDAlOyBmbG9hdDpub25lO31cbiAgICAgICAgLmFwbHVzLXYyIC5hcG0tZm91cnRoY29sIC5hcG0tZm91cnRoY29sLWltYWdlIHtoZWlnaHQ6aW5oZXJpdDt9XG5cbiAgICAgICAgaHRtbFtkaXI9J3J0bCddIC5hcGx1cy12Mi53ZWJsYWJSdGwgLmFwbS1mb3VydGhjb2wge21hcmdpbjowOyBwYWRkaW5nLWJvdHRvbToyM3B4OyB3aWR0aDoxMDAlOyBmbG9hdDpub25lO31cbiAgICAgICAgaHRtbFtkaXI9J3J0bCddIC5hcGx1cy12Mi53ZWJsYWJSdGwgLmFwbS1mb3VydGhjb2wgLmFwbS1mb3VydGhjb2wtaW1hZ2Uge2hlaWdodDppbmhlcml0O31cblxuICAgICAgICAvKiBNb2R1bGU1IE1lZGlhIFF1ZXJpZXMgKi9cbiAgICAgICAgLmFwbHVzLXYyIHRhYmxlLmFwbS10YWJsZW1vZHVsZS10YWJsZSB7d2lkdGg6MTAwJTt9XG4gICAgICAgIC5hcGx1cy12MiAuYXBtLXRhYmxlbW9kdWxlLXZhbHVlY2VsbCB7d2lkdGg6YXV0bzt9XG5cbiAgICAgICAgaHRtbFtkaXI9J3J0bCddIC5hcGx1cy12MiB0YWJsZS5hcG0tdGFibGVtb2R1bGUtdGFibGUge3dpZHRoOjEwMCU7fVxuICAgICAgICBodG1sW2Rpcj0ncnRsJ10gLmFwbHVzLXYyIC5hcG0tdGFibGVtb2R1bGUtdmFsdWVjZWxsIHt3aWR0aDphdXRvO31cbiAgICB9XG5cbiAgICAvKiBhdWkgaGFjayAqL1xuICAgIC5hcGx1cy12MiAqIHstbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7LXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O2JveC1zaXppbmc6IGJvcmRlci1ib3g7fVxuICAgIC5hcGx1cy12MiAuYS1ib3ggbXAtY2VudGVydGhpcmRjb2wtbGlzdGJveGVyIHstd2Via2l0LWJvcmRlci1yYWRpdXM6IDRweDstbW96LWJvcmRlci1yYWRpdXM6IDRweDtib3JkZXItcmFkaXVzOiA0cHg7cG9zaXRpb246IHJlbGF0aXZlO3BhZGRpbmc6IDE0cHggMThweDt9XG4gICAgLmFwbHVzLXYyIC5hLWJveCB7ZGlzcGxheTogYmxvY2s7LXdlYmtpdC1ib3JkZXItcmFkaXVzOiA0cHg7LW1vei1ib3JkZXItcmFkaXVzOiA0cHg7Ym9yZGVyLXJhZGl1czogNHB4O2JvcmRlcjogMXB4ICNkZGQgc29saWQ7YmFja2dyb3VuZC1jb2xvcjogd2hpdGU7fVxuICAgIC5hcGx1cy12MiAuYS1jb2xvci1hbHRlcm5hdGUtYmFja2dyb3VuZCB7YmFja2dyb3VuZC1jb2xvcjogI2YzZjNmMyFpbXBvcnRhbnQ7fVxuICAgIC5hcGx1cy12MiAuYS1jb2xvci1zZWNvbmRhcnkge2NvbG9yOiAjODg4IWltcG9ydGFudDt9XG4gICAgLmFwbHVzLXYyIC5hLXNlY3Rpb24ge21hcmdpbi1ib3R0b206IDEycHg7fVxuICAgIC5hcGx1cy12MiAuYS1zaXplLWJhc2Uge2ZvbnQtc2l6ZTogMTNweCFpbXBvcnRhbnQ7bGluZS1oZWlnaHQ6IDE5cHghaW1wb3J0YW50O31cbiAgICAuYXBsdXMtdjIgLmEtc3BhY2luZy1iYXNlLCAuYXBsdXMtdjIgLmEtd3MgLmEtd3Mtc3BhY2luZy1iYXNlIHttYXJnaW4tYm90dG9tOiAxNHB4IWltcG9ydGFudDt9XG4gICAgLmFwbHVzLXYyIC5hLXNwYWNpbmctbGFyZ2UsIC5hcGx1cy12MiAuYS13cyAuYS13cy1zcGFjaW5nLWxhcmdlIHttYXJnaW4tYm90dG9tOiAyMnB4IWltcG9ydGFudDt9XG4gICAgLmFwbHVzLXYyIC5hLXNwYWNpbmctbWluaSwgLmFwbHVzLXYyIC5hLXdzIC5hLXdzLXNwYWNpbmctbWluaSB7bWFyZ2luLWJvdHRvbTogNnB4IWltcG9ydGFudDt9XG4gICAgLmFwbHVzLXYyIC5hLXNwYWNpbmctc21hbGwsIC5hcGx1cy12MiAuYS13cyAuYS13cy1zcGFjaW5nLXNtYWxsIHttYXJnaW4tYm90dG9tOiAxMHB4IWltcG9ydGFudDt9XG4gICAgLmFwbHVzLXYyIGEsIC5hcGx1cy12MiBhOnZpc2l0ZWQsIC5hcGx1cy12MiBhOmFjdGl2ZSwgLmFwbHVzLXYyIGE6bGluayB7dGV4dC1kZWNvcmF0aW9uOiBub25lO2NvbG9yOiAjMDA2NmMwO31cbiAgICAuYXBsdXMtdjIgYTpob3ZlciB7dGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7Y3Vyc29yOiBwb2ludGVyO2NvbG9yOiAjZTQ3OTExO31cbiAgICAuYXBsdXMtdjIgaDEsIC5hcGx1cy12MiBoMiwgLmFwbHVzLXYyIGgzLCAuYXBsdXMtdjIgaDQge2ZvbnQtZmFtaWx5OiBBcmlhbCxzYW5zLXNlcmlmO3RleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7cGFkZGluZy1ib3R0b206IDRweDt9XG4gICAgLmFwbHVzLXYyLndlYmxhYlJ0bCBoMSwgLmFwbHVzLXYyLndlYmxhYlJ0bCBoMiwgLmFwbHVzLXYyLndlYmxhYlJ0bCBoMywgLmFwbHVzLXYyLndlYmxhYlJ0bCBoNCB7Zm9udC1mYW1pbHk6IGluaGVyaXQ7fVxuICAgIC5hcGx1cy12MiBoMSwgLmFwbHVzLXYyIGgyLCAuYXBsdXMtdjIgaDMsIC5hcGx1cy12MiBoNCwgLmFwbHVzLXYyIGg1LCAuYXBsdXMtdjIgaDYge3BhZGRpbmc6IDA7bWFyZ2luOiAwO31cbiAgICAuYXBsdXMtdjIgaDN7Zm9udC13ZWlnaHQ6IGJvbGQ7Zm9udC1zaXplOiAxN3B4O2xpbmUtaGVpZ2h0OiAxLjI1NTt9XG4gICAgLmFwbHVzLXYyIGg0IHtmb250LXdlaWdodDogbm9ybWFsO2ZvbnQtc2l6ZTogMTdweDtsaW5lLWhlaWdodDogMS4yNTU7fVxuICAgIC5hcGx1cy12MiBoNSB7Zm9udC13ZWlnaHQ6IGJvbGQ7Zm9udC1zaXplOiAxM3B4O2xpbmUtaGVpZ2h0OiAxOXB4O31cbiAgICAuYXBsdXMtdjIgaW1nIHt2ZXJ0aWNhbC1hbGlnbjogdG9wO21heC13aWR0aDogMTAwJTt9XG4gICAgLmFwbHVzLXYyIHAge3BhZGRpbmc6IDA7bWFyZ2luOiAwIDAgMTRweCAwO31cbiAgICAuYXBsdXMtdjIgdWwgbGkge2xpc3Qtc3R5bGU6IGRpc2M7fVxuICAgIC5hcGx1cy12MiB1bCB7bWFyZ2luOiAwIDAgMThweCAxOHB4O2NvbG9yOiAjYWFhO31cbiAgICAuYXBsdXMtdjIgdWwsIC5hcGx1cy12MiBvbCB7cGFkZGluZzogMDt9XG4gICAgLmFwbHVzLXYyIHVsOmxhc3QtY2hpbGQsIC5hcGx1cy12MiBvbDpsYXN0LWNoaWxkIHttYXJnaW4tYm90dG9tOiAwIWltcG9ydGFudDt9XG4gICAgLmFwbHVzLXYyIC5yZWFkLW1vcmUtYXJyb3ctcGxhY2Vob2xkZXIge3RleHQtYWxpZ246IHJpZ2h0OyBjdXJzb3I6IHBvaW50ZXI7IGRpc3BsYXk6bm9uZTt9XG5cblx1MDAzQy9zdHlsZT5cblxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFx1MDAzQ3N0eWxlIHR5cGU9XCJ0ZXh0L2Nzc1wiPlxuLmFwbHVzLXYyIC5sYXVuY2hwYWQtbW9kdWxlIHsgbWF4LXdpZHRoOiAxMDAwcHg7IG1hcmdpbi1sZWZ0OiBhdXRvOyBtYXJnaW4tcmlnaHQ6IGF1dG87IHBhZGRpbmctdG9wOiAxNXB4OyBwYWRkaW5nLWJvdHRvbTogMTVweDsgfVxuLmFwbHVzLXYyIC5sYXVuY2hwYWQtdGV4dC1jb250YWluZXIgeyBtYXJnaW4tbGVmdDogYXV0bzsgbWFyZ2luLXJpZ2h0OiBhdXRvOyB0ZXh0LWFsaWduOiBqdXN0aWZ5OyAtbW96LXRleHQtYWxpZ24tbGFzdDogY2VudGVyOyB0ZXh0LWFsaWduLWxhc3Q6IGNlbnRlcjsgfVxuLmFwbHVzLXYyIC5sYXVuY2hwYWQtdGV4dC1jZW50ZXIgeyB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbi5hcGx1cy12MiAubGF1bmNocGFkLXRleHQtbGVmdC1qdXN0aWZ5IHsgdGV4dC1hbGlnbjoganVzdGlmeTsgLW1vei10ZXh0LWFsaWduLWxhc3Q6IGxlZnQ7IHRleHQtYWxpZ24tbGFzdDogbGVmdDsgfVxuLmFwbHVzLXYyIC5sYXVuY2hwYWQtdmlkZW8tY29udGFpbmVyIHsgd2lkdGg6IDEwMCU7IH1cbi5hcGx1cy12MiAubGF1bmNocGFkLW1vZHVsZS12aWRlbyAuYXBsdXNBaXJ5VmlkZW9QbGF5ZXIgeyBtYXJnaW4tbGVmdDogYXV0bzsgbWFyZ2luLXJpZ2h0OiBhdXRvOyBwYWRkaW5nLWJvdHRvbTogMjVweDsgfVxuLmFwbHVzLXYyIC5sYXVuY2hwYWQtbW9kdWxlLXRocmVlLXN0YWNrIC5sYXVuY2hwYWQtbW9kdWxlLXN0YWNrYWJsZS1jb2x1bW4geyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHdpZHRoOiAzMiU7IHZlcnRpY2FsLWFsaWduOiB0b3A7IHBhZGRpbmctbGVmdDogMTBweDsgcGFkZGluZy1yaWdodDogMTBweDsgfVxuLmFwbHVzLXYyIC5sYXVuY2hwYWQtbW9kdWxlLXRocmVlLXN0YWNrIC5sYXVuY2hwYWQtbW9kdWxlLXRocmVlLXN0YWNrLWNvbnRhaW5lciB7IGRpc3BsYXk6IHRhYmxlOyB0ZXh0LWFsaWduOiBjZW50ZXI7IG1hcmdpbi1sZWZ0OiBhdXRvOyBtYXJnaW4tcmlnaHQ6IGF1dG87IH1cbi5hcGx1cy12MiAubGF1bmNocGFkLW1vZHVsZS10aHJlZS1zdGFjayAubGF1bmNocGFkLW1vZHVsZS10aHJlZS1zdGFjay1jb250YWluZXIgaW1nIHsgbWF4LXdpZHRoOiBub25lOyB9XG4uYXBsdXMtdjIgLmxhdW5jaHBhZC1tb2R1bGUtdGhyZWUtc3RhY2sgLmxhdW5jaHBhZC1tb2R1bGUtdGhyZWUtc3RhY2stYmxvY2sgeyBtYXJnaW4tYm90dG9tOiAxNHB4OyB9XG4uYXBsdXMtdjIgLmxhdW5jaHBhZC1tb2R1bGUtdGhyZWUtc3RhY2sgLmxhdW5jaHBhZC1tb2R1bGUtdGhyZWUtc3RhY2stZGV0YWlsIHsgZGlzcGxheTogdGFibGUtY2FwdGlvbjsgY2FwdGlvbi1zaWRlOiBib3R0b207IH1cbi5hcGx1cy12MiAubGF1bmNocGFkLWNvbHVtbi1jb250YWluZXIgeyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4uYXBsdXMtdjIgLmxhdW5jaHBhZC1jb2x1bW4taW1hZ2UtY29udGFpbmVyIHsgd2lkdGg6IDM0LjUlOyB9XG4uYXBsdXMtdjIgLmxhdW5jaHBhZC1jb2x1bW4tdGV4dC1jb250YWluZXIgeyB3aWR0aDogNjQuNSU7IHBhZGRpbmc6IDAgMTUwcHg7IH1cbi5hcGx1cy12MiAubGF1bmNocGFkLW1vZHVsZS1sZWZ0LWltYWdlIC5sYXVuY2hwYWQtY29sdW1uLXRleHQtY29udGFpbmVyIHsgcGFkZGluZy1yaWdodDogMDsgfVxuLmFwbHVzLXYyIC5sYXVuY2hwYWQtbW9kdWxlLXJpZ2h0LWltYWdlIC5sYXVuY2hwYWQtY29sdW1uLXRleHQtY29udGFpbmVyIHsgcGFkZGluZy1sZWZ0OiAwOyB9XG4uYXBsdXMtdjIgLmxhdW5jaHBhZC1hYm91dC10aGUtc3RhcnR1cCBoNSB7IGZvbnQtd2VpZ2h0OiBub3JtYWw7IGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuLmFwbHVzLXYyIC5sYXVuY2hwYWQtZmFxIGgyIHsgY29sb3I6ICNmZmE1MDA7IH1cbi5hcGx1cy12MiAubGF1bmNocGFkLW1vZHVsZS1wZXJzb24tYmxvY2sgeyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9XG5cdTAwM0Mvc3R5bGU+XG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDc3R5bGUgdHlwZT1cInRleHQvY3NzXCI+XG4uYXBsdXMtdjIge1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbn1cbi5hcGx1cy12MiAuYXBsdXMtM3AtZml4ZWQtd2lkdGgge1xuICAgIHdpZHRoOiA5NzBweDtcbn1cblx1MDAzQy9zdHlsZT5cblxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFx1MDAzQ3NjcmlwdD5cbiAgICAgICAgaWYoUCkge1xuICAgICAgICAgICAgUC53aGVuKFwiYS1leHBhbmRlclwiKS5leGVjdXRlKGZ1bmN0aW9uIChleHBhbmRlcikge1xuICAgICAgICAgICAgICAgIGV4cGFuZGVyLmluaXRpYWxpemVFeHBhbmRlcnMoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgXHUwMDNDL3NjcmlwdD5cbiAgICBcblxuICAgIFxuICAgICAgICBcblxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcblxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJjZWx3aWRnZXQgYXBsdXMtbW9kdWxlIGxhdW5jaHBhZC1jb21wYW55LWxvZ29cIiBjZWxfd2lkZ2V0X2lkPVwiYXBsdXMtbGF1bmNocGFkLWNvbXBhbnktbG9nb1wiPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtdGV4dC1jZW50ZXIgbGF1bmNocGFkLW1vZHVsZSBsYXVuY2hwYWQtbW9kdWxlLWNvbXBhbnktbG9nb1wiPlxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gXG4gXG4gXG4gXG5cblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICBcblxuXG5cbiAgICBcblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICBcblxuXG4gICAgXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIFx1MDAzQ2ltZyBhbHQ9XCIxXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL1MvYXBsdXMtc2VsbGVyLWNvbnRlbnQtaW1hZ2VzLXVzLWVhc3QtMS9BVFZQREtJS1gwREVSL0EyUjhOV0FBMEUyMUtELzFiZGU1MDMyLTcwNjItNDZjZS05ZjQ1LTJmN2VjNjcyZmNhNS5fQ1IwLDAsNjAwLDE4MF9QVDBfU1g2MDBfXy5qcGdcIj5cbiAgICBcblxuXG5cdTAwM0MvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImNlbHdpZGdldCBhcGx1cy1tb2R1bGUgbGF1bmNocGFkLWJyYW5kLWRlc2NyaXB0aW9uLWxlZnRcIiBjZWxfd2lkZ2V0X2lkPVwiYXBsdXMtbGF1bmNocGFkLWJyYW5kLWRlc2NyaXB0aW9uLWxlZnRcIj5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctdG9wLW1pbmkgbGF1bmNocGFkLW1vZHVsZSBsYXVuY2hwYWQtbW9kdWxlLWJyYW5kLWRlc2NyaXB0aW9uLWxlZnRcIj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gbGF1bmNocGFkLXRleHQtbGVmdC1qdXN0aWZ5XCI+XG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgICBcbiAgICBcbiAgICAgIFxuIFxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIFx1MDAzQ3A+XG4gICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS10ZXh0LWJvbGRcIj5LZW1zdG9uZSBKZXdlbHJ5XHUwMDNDL3NwYW4+XG4gICAgICAgIFx1MDAzQy9wPlxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFx1MDAzQ3A+XG4gICAgICAgICAgICBLZW1zdG9uZSBpcyBkZWRpY2F0ZWQgdG8gcHJvdmlkZSBmcmllbmRseSBzZXJ2aWNlIGFsb25nIHdpdGggaGlnaCBxdWFsaXR5IGpld2VscmllcyBhdCB0aGUgbW9zdCByZWFzb25hYmxlIHByaWNlcy4gV2hldGhlciB5b3UgYXJlIGxvb2tpbmcgZm9yIGEgc3BlY2lhbCBnaWZ0IGZvciBhIGxvdmVkIG9uZSBvciBhIGJlYXV0aWZ1bCBwaWVjZSB0aGF0IGNvbXBsZW1lbnRzIHlvdXIgcGVyc29uYWwgc3R5bGUsIHdlIHdhbnQgYW5kIHN0cml2ZSB0byBiZSB5b3VyIHBlcnNvbmFsIG9uZSBzdG9wIHNob3AgamV3ZWxlciBmb3IgYWxsIG9mIHlvdXIgamV3ZWxyeSBuZWVkcy5cbiAgICAgICAgXHUwMDNDL3A+XG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXHUwMDNDcD5cbiAgICAgICAgICAgIFx1MDAzQy9wPlx1MDAzQ3VsIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLXZlcnRpY2FsXCI+XHUwMDNDbGk+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+UHJvdmlkaW5nIGpld2Vscnkgd2hpY2ggbWFkZSBvZiBzaWx2ZXIgcGxhdGVkIGFsbG95LCByb3NlIGdvbGQgcGxhdGVkIGFsbG95LCBnb2xkIHBsYXRlZCBhbGxveSwgY3JlYXRlZCBnZW1zdG9uZSwgc2ltdWxhdGVkIHBlYXJsLCBzZWEgc2hlbGwsIGxlYXRoZXIsIG9wYWwsIG9ueXgsIGN1YmljIHppcmNvbmlhIGFuZCBzbyBvbi4gXHUwMDNDL3NwYW4+XHUwMDNDL2xpPlx1MDAzQ2xpPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlByb3ZpZGluZyB3b21lbnMgZWFycmluZ3MsIG5lY2tsYWNlcywgYnJhY2VsZXRzLCBicm9vY2hlcywgYW5rbGV0cyByaW5ncyBhbmQgamV3ZWxyeSBzZXRzXHUwMDNDL3NwYW4+XHUwMDNDL2xpPlx1MDAzQ2xpPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlByb3ZpZGluZyBtZW5zIGN1ZmZsaW5rcywgdGllIGNsaXBzIGFuZCByaW5nc1x1MDAzQy9zcGFuPlx1MDAzQy9saT5cdTAwM0MvdWw+XG4gICAgICAgIFx1MDAzQ3A+XHUwMDNDL3A+XG4gICAgXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiY2Vsd2lkZ2V0IGFwbHVzLW1vZHVsZSAzcC1tb2R1bGUtYlwiIGNlbF93aWRnZXRfaWQ9XCJhcGx1cy0zcC1tb2R1bGUtYlwiPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXHUwMDNDZGl2IGNsYXNzPVwiYXBsdXMtM3AtZml4ZWQtd2lkdGhcIj5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICAgXG4gXG4gICAgIFxuICAgIFxuXG4gICAgXG5cblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICBcblxuXG5cblxuXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuIFxuIFxuIFxuIFxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgXG5cblxuXG4gICAgXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgXG5cblxuICAgIFxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICBcdTAwM0NpbWcgYWx0PVwiMVwiIHNyYz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9TL2FwbHVzLW1lZGlhL3NjLzcxNWQ1M2ZmLTViNTMtNDg3OS04YTg5LWE5NzE4YzYwYzBjZS5fX0NSMCwwLDk3MCw2MDBfUFQwX1NYOTcwX1YxX19fLmpwZ1wiIGNsYXNzPVwiYS1zcGFjaW5nLWJhc2VcIj5cbiAgICBcblxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgIFxuIFxuICAgICBcbiAgICBcblxuICAgIFxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgXG5cblxuXG5cblxuXG4gICAgXHUwMDNDaDMgY2xhc3M9XCJhLXNwYWNpbmctbWluaVwiPlxuICAgICAgICBUd28gVG9uZSBSb3NlIEdvbGQgU2lsdmVyIE11bHRpbGF5ZXIgRGFuZ2xlIEVhcnJpbmdzIFxuICAgIFx1MDAzQy9oMz5cblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgICBcbiAgICBcblxuIFxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIFx1MDAzQ3AgY2xhc3M9XCJhLXNwYWNpbmctYmFzZVwiPlxuICAgICAgICAgICAgUm9zZSBHb2xkIFBsYXRlZCBNdWx0aWxheWVyIERhbmdsZSBFYXJyaW5ncywgdGhlIHNpbXBsZSBidXQgZmFkZGlzaCBhY2Nlc3Nvcnkgd29ya3Mgd2l0aCBkYWlseSBkcmVzcywgcGVyZmVjdCBmb3IgY2FzdWFsIG9jY2FzaW9uLlxuICAgICAgICBcdTAwM0MvcD5cbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcdTAwM0NwIGNsYXNzPVwiYS1zcGFjaW5nLWJhc2VcIj5cbiAgICAgICAgICAgIFx1MDAzQy9wPlx1MDAzQ3VsIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLXZlcnRpY2FsXCI+XHUwMDNDbGk+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+SGlnaC1xdWFsaXR5IEFsbG95OiBNYWRlIG9mIHJvc2UgZ29sZCBhbmQgc2lsdmVyIHBsYXRlZCBhbGxveSwgZHVyYWJsZSBhbmQgbG9uZyBsYXN0aW5nOyBcdTAwM0Mvc3Bhbj5cdTAwM0MvbGk+XHUwMDNDbGk+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+MzYwwrAgR3JpbmRpbmcgYW5kIFBvbGlzaGluZzogSHlwb2FsbGVyZ2VuaWMgYW5kIHN1aXRhYmxlIGZvciBzZW5zaXRpdmUgc2tpbjsgXHUwMDNDL3NwYW4+XHUwMDNDL2xpPlx1MDAzQ2xpPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlRvcCBNZXRhbCBFbGVjdHJvcGxhdGluZyBUZWNobmlxdWU6IENvbG9yZmFzdCwgcmVzaXN0IHRoZSBjb2xvciBvZiBtYXRlcmlhbHMgdG8gZmFkaW5nIG9yIHJ1bm5pbmcgd2l0aCB0aGUgcHJvcGVyIHVzYWdlIGFuZCBwcm90ZWN0aW9uLlx1MDAzQy9zcGFuPlx1MDAzQy9saT5cdTAwM0MvdWw+XG4gICAgICAgIFx1MDAzQ3A+XHUwMDNDL3A+XG4gICAgXG5cblxuXG5cdTAwM0MvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiY2Vsd2lkZ2V0IGFwbHVzLW1vZHVsZSBtb2R1bGUtOVwiIGNlbF93aWRnZXRfaWQ9XCJhcGx1cy1tb2R1bGUtOVwiPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NkaXYgYXJpYS1saXZlPVwicG9saXRlXCIgZGF0YS1hLWV4cGFuZGVyLW5hbWU9XCJhcGx1cy1tb2R1bGUtZXhwYW5kZXJcIiBkYXRhLWEtZXhwYW5kZXItY29sbGFwc2VkLWhlaWdodD1cIjcwMFwiIGNsYXNzPVwiYS1leHBhbmRlci1jb2xsYXBzZWQtaGVpZ2h0IGEtcm93IGEtZXhwYW5kZXItY29udGFpbmVyIGEtZXhwYW5kZXItcGFydGlhbC1jb2xsYXBzZS1jb250YWluZXJcIiBzdHlsZT1cIm1heC1oZWlnaHQ6NzAwcHg7IF9oZWlnaHQ6NzAwcHhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NkaXYgYXJpYS1leHBhbmRlZD1cImZhbHNlXCIgY2xhc3M9XCJhLWV4cGFuZGVyLWNvbnRlbnQgYS1leHBhbmRlci1wYXJ0aWFsLWNvbGxhcHNlLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblx1MDAzQ2RpdiBjbGFzcz1cImFwbHVzLW1vZHVsZS13cmFwcGVyXCI+XG4gICAgXHUwMDNDZGl2IGNsYXNzPVwiYXBtLXNwYWNpbmdcIj5cbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgIFxuIFxuICAgICBcbiAgICBcblxuICAgIFxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgXG5cblxuXG5cblxuXG5cbiAgICAgICAgXHUwMDNDdGFibGUgY2xhc3M9XCJhcG0tZml4ZWQtd2lkdGggYS1zaXplLWJhc2UgYXBtLWV2ZW50aGlyZGNvbC10YWJsZVwiPlxuICAgICAgICAgICAgXHUwMDNDdGJvZHk+XHUwMDNDdHI+XG4gICAgICAgICAgICAgICAgXHUwMDNDdGggY2xhc3M9XCJhcG0tY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImFwbS1ldmVudGhpcmRjb2wgYXBtLWZsb2F0bGVmdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDcD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuIFxuIFxuIFxuIFxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgXG5cblxuXG4gICAgXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgXG5cblxuICAgIFxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICBcdTAwM0NpbWcgYWx0PVwiMVwiIHNyYz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9TL2FwbHVzLXNlbGxlci1jb250ZW50LWltYWdlcy11cy1lYXN0LTEvQVRWUERLSUtYMERFUi9BMlI4TldBQTBFMjFLRC9lMDg3OWNiMC00ZTBkLTRhMjktYTQwNC0zZDZmNmU5NGRmNmIuX0NSMCwwLDEwMDAsMTAwMF9QVDBfU1gzMDBfXy5qcGdcIiBjbGFzcz1cImEtc3BhY2luZy1taW5pXCI+XG4gICAgXG5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2JyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgXG5cblxuXG5cblxuICAgIFxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0MvcD5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICAgICAgICBcdTAwM0MvdGg+XG4gICAgICAgICAgICAgICAgXHUwMDNDdGggY2xhc3M9XCJhcG0tY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImFwbS1ldmVudGhpcmRjb2wgYXBtLWZsb2F0bGVmdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDcD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuIFxuIFxuIFxuIFxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgXG5cblxuXG4gICAgXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgXG5cblxuICAgIFxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICBcdTAwM0NpbWcgYWx0PVwiMVwiIHNyYz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9TL2FwbHVzLXNlbGxlci1jb250ZW50LWltYWdlcy11cy1lYXN0LTEvQVRWUERLSUtYMERFUi9BMlI4TldBQTBFMjFLRC9hNTliYjYzZi0zY2JjLTQxOWItOWI1NC00MWM0NTdmNzMxZDUuX0NSMCwwLDEwMDAsMTAwMF9QVDBfU1gzMDBfXy5qcGdcIiBjbGFzcz1cImEtc3BhY2luZy1taW5pXCI+XG4gICAgXG5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2JyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgXG5cblxuXG5cblxuICAgIFxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0MvcD5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICAgICAgICBcdTAwM0MvdGg+XG4gICAgICAgICAgICAgICAgXHUwMDNDdGggY2xhc3M9XCJhcG0tY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImFwbS1ldmVudGhpcmRjb2wgYXBtLWZsb2F0bGVmdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDcD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuIFxuIFxuIFxuIFxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgXG5cblxuXG4gICAgXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgXG5cblxuICAgIFxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICBcdTAwM0NpbWcgYWx0PVwiMVwiIHNyYz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9TL2FwbHVzLXNlbGxlci1jb250ZW50LWltYWdlcy11cy1lYXN0LTEvQVRWUERLSUtYMERFUi9BMlI4TldBQTBFMjFLRC9kOTgyMzNmYy05NzVjLTRhZGMtYTc4Mi1iNGYyNjc0ZjY3ZWUuX0NSMCwwLDMwMCwzMDBfUFQwX1NYMzAwX18uanBnXCIgY2xhc3M9XCJhLXNwYWNpbmctbWluaVwiPlxuICAgIFxuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Nicj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgIFxuXG5cblxuXG5cbiAgICBcblxuICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL3A+XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgICAgICAgICAgXHUwMDNDL3RoPlxuICAgICAgICAgICAgXHUwMDNDL3RyPlxuICAgICAgICAgICAgXHUwMDNDdHI+XG4gICAgICAgICAgICAgICAgXHUwMDNDdGQgY2xhc3M9XCJhcG0tdG9wXCI+XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImFwbS1ldmVudGhpcmRjb2wgYXBtLWZsb2F0bGVmdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgIFxuIFxuICAgICBcbiAgICBcblxuICAgIFxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgXG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICAgXG4gICAgXG4gICAgICBcbiBcblxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgIFxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICBcdTAwM0NwPlxuICAgICAgICAgICAgXHUwMDNDL3A+XHUwMDNDdWwgY2xhc3M9XCJhLXVub3JkZXJlZC1saXN0IGEtdmVydGljYWxcIj5cdTAwM0NsaT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5EZXNpZ246IENvbnNpc3Rpbmcgb2YgbXVsdGlsYXllciB0ZWFyZHJvcCBzaGFwZWQgbG9vcHMsIGlycmVzaXN0aWJsZSBjaGFybWluZyBqZXdlbHJ5XHUwMDNDL3NwYW4+XHUwMDNDL2xpPlx1MDAzQ2xpPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlN0eWxlOiBDYW4gYmUgd29ybiBpbiB0d28gZGlmZmVyZW50IHN0eWxlOiB3aXRoIHRoZSBiaWdnZXIgc2lkZSBvZiB0aGUgd2F0ZXJkcm9wIGJlbG93IG9yIHRoZSB0aGUgc21hbGxlciBzaWRlIGJlbG93Llx1MDAzQy9zcGFuPlx1MDAzQy9saT5cdTAwM0MvdWw+XG4gICAgICAgIFx1MDAzQ3A+XHUwMDNDL3A+XG4gICAgXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgICAgICAgICAgXHUwMDNDL3RkPlxuICAgICAgICAgICAgICAgIFx1MDAzQ3RkIGNsYXNzPVwiYXBtLXRvcFwiPlxuICAgICAgICAgICAgICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhcG0tZXZlbnRoaXJkY29sIGFwbS1mbG9hdGxlZnRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgICBcbiBcbiAgICAgXG4gICAgXG5cbiAgICBcblxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgIFxuXG5cblxuXG5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgIFxuICAgIFxuICAgICAgXG4gXG5cblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICBcblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXHUwMDNDcD5cbiAgICAgICAgICAgIFx1MDAzQy9wPlx1MDAzQ3VsIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLXZlcnRpY2FsXCI+XHUwMDNDbGk+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+U2l6ZTogIFNwZWNpZmljYXRpb246IDAuOTJcIiB4IDIuNDBcIiBhcHByb3guIE5ldCBXZWlnaHQ6IDcuNWcgLyAwLjI2b3ouIChhbGwgdGhlIGRhdGFzIGNvbWUgZnJvbSBtYW51YWwgbWVhc3VyZW1lbnQpIFx1MDAzQy9zcGFuPlx1MDAzQy9saT5cdTAwM0NsaT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5CYWNrIEZpbmRpbmc6IEZpc2hob29rLCBlYXN5IGFuZCBjb252ZW5pZW50IHRvIHdlYXIsIG9ubHkgZm9yIHBpZXJjZWQgZWFycztcdTAwM0Mvc3Bhbj5cdTAwM0MvbGk+XHUwMDNDL3VsPlxuICAgICAgICBcdTAwM0NwPlx1MDAzQy9wPlxuICAgIFxuXG5cblxuICAgICAgICAgICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICAgICAgICAgIFx1MDAzQy90ZD5cbiAgICAgICAgICAgICAgICBcdTAwM0N0ZCBjbGFzcz1cImFwbS10b3BcIj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYXBtLWV2ZW50aGlyZGNvbCBhcG0tZmxvYXRsZWZ0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICAgXG4gXG4gICAgIFxuICAgIFxuXG4gICAgXG5cblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICBcblxuXG5cblxuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgICBcbiAgICBcbiAgICAgIFxuIFxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIFx1MDAzQ3A+XG4gICAgICAgICAgICBcdTAwM0MvcD5cdTAwM0N1bCBjbGFzcz1cImEtdW5vcmRlcmVkLWxpc3QgYS12ZXJ0aWNhbFwiPlx1MDAzQ2xpPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPklkZWEgR2lmdCBDaG9pY2U6IFdpdGggZ2lmdCBib3gsIHBlcmZlY3QgZ2lmdCBmb3IgZnJpZW5kcywgbG92ZXIgYW5kIGZhbWlseSBtZW1iZXJzO1x1MDAzQy9zcGFuPlx1MDAzQy9saT5cdTAwM0NsaT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5TdWl0YWJsZSBTaXR1YXRpb246IFN0eWxpc2ggYW5kIGZhZGRpc2ggamV3ZWxyeSwgd29ya3Mgd2l0aCBkYWlseSBkcmVzcywgc3VpdGFibGUgZm9yIGNhc3VhbCBvY2Nhc2lvbnMuXHUwMDNDL3NwYW4+XHUwMDNDL2xpPlx1MDAzQy91bD5cbiAgICAgICAgXHUwMDNDcD5cdTAwM0MvcD5cbiAgICBcblxuXG5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICAgICAgICBcdTAwM0MvdGQ+XG4gICAgICAgICAgICBcdTAwM0MvdHI+XG4gICAgICAgIFx1MDAzQy90Ym9keT5cdTAwM0MvdGFibGU+XG4gICAgXHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XG5cdTAwM0NkaXYgc3R5bGU9XCJjbGVhcjpib3RoXCI+XHUwMDNDL2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1leHBhbmRlci1oZWFkZXIgYS1leHBhbmRlci1wYXJ0aWFsLWNvbGxhcHNlLWhlYWRlciBhLXRleHQtbGVmdFwiIHN0eWxlPVwib3BhY2l0eTogMDsgZGlzcGxheTogbm9uZTtcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWV4cGFuZGVyLWNvbnRlbnQtZmFkZVwiPlx1MDAzQy9kaXY+XHUwMDNDYSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgZGF0YS1hY3Rpb249XCJhLWV4cGFuZGVyLXRvZ2dsZVwiIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYS1leHBhbmRlci10b2dnbGU9XCJ7JnF1b3Q7YWxsb3dMaW5rRGVmYXVsdCZxdW90Ozp0cnVlLCAmcXVvdDtleHBhbmRfcHJvbXB0JnF1b3Q7OiZxdW90O1JlYWQgbW9yZSZxdW90OywgJnF1b3Q7Y29sbGFwc2VfcHJvbXB0JnF1b3Q7OiZxdW90O1JlYWQgbGVzcyZxdW90O31cIj5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1leHRlbmRlci1leHBhbmRcIj5cdTAwM0MvaT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1leHBhbmRlci1wcm9tcHRcIj5SZWFkIG1vcmVcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0MvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgXG4gICAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuXG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImNlbHdpZGdldCBhcGx1cy1tb2R1bGUgM3AtbW9kdWxlLWJcIiBjZWxfd2lkZ2V0X2lkPVwiYXBsdXMtM3AtbW9kdWxlLWJcIj5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblx1MDAzQ2RpdiBjbGFzcz1cImFwbHVzLTNwLWZpeGVkLXdpZHRoXCI+XG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgIFxuIFxuICAgICBcbiAgICBcblxuICAgIFxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgXG5cblxuXG5cblxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiBcbiBcbiBcbiBcblxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgIFxuXG5cblxuICAgIFxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgIFxuXG5cbiAgICBcblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXHUwMDNDaW1nIGFsdD1cIjFcIiBzcmM9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvUy9hcGx1cy1tZWRpYS9zYy8xZmFmNzhiMC1kYTdjLTRkMTItYjZkMS01NWVjYjhmMzY2NTAuX19DUjAsMCw5NzAsNjAwX1BUMF9TWDk3MF9WMV9fXy5qcGdcIiBjbGFzcz1cImEtc3BhY2luZy1iYXNlXCI+XG4gICAgXG5cblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgICBcbiBcbiAgICAgXG4gICAgXG5cbiAgICBcblxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgIFxuXG5cblxuXG5cblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgICBcbiAgICBcblxuIFxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG5cblxuXG5cdTAwM0MvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICBcblx1MDAzQy9kaXY+XG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuICBcblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cblxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ2RpdiBpZD1cImxlZ2FsX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJsZWdhbFwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cbiAgXG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuXG5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICBcblxuXG4gICAgICAgICAgICBcblxuXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cbiAgICAgICAgICAgIFxuXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuICAgICAgICBcblxuXG5cblxuXHUwMDNDZGl2IGlkPVwiZGVzY3JpcHRpb25BbmREZXRhaWxzXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLWV4dHJhLWxhcmdlXCI+XG4gICAgICBcdTAwM0NkaXYgaWQ9XCJkZXRhaWxCdWxsZXRzXCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJkZXRhaWxCdWxsZXRzXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcdCAgICBcbiAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cdTAwM0NkaXYgaWQ9XCJkZXRhaWxCdWxsZXRzV3JhcHBlcl9mZWF0dXJlX2RpdlwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiZGV0YWlsQnVsbGV0c1wiIGRhdGEtdGVtcGxhdGUtbmFtZT1cImRldGFpbEJ1bGxldHNcIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBmZWF0dXJlXCI+XG4gICAgXHUwMDNDZGl2IGlkPVwiZGV0YWlsQnVsbGV0c19mZWF0dXJlX2RpdlwiPlxuICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cbiAgICBcdTAwM0N1bCBjbGFzcz1cImEtdW5vcmRlcmVkLWxpc3QgYS1ub3N0eWxlIGEtdmVydGljYWwgYS1zcGFjaW5nLW5vbmVcIj5cbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcdTAwM0NsaT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtdGV4dC1ib2xkXCI+UHJvZHVjdCBEaW1lbnNpb25zOlxuICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3Bhbj41IHggNSB4IDAuNyBpbmNoZXNcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+XHUwMDNDL2xpPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDbGk+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLXRleHQtYm9sZFwiPlNoaXBwaW5nIFdlaWdodDpcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4+MC4zMiBvdW5jZXMgKFx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vZ3AvaGVscC9zZWxsZXIvc2hpcHBpbmcuaHRtbC9yZWY9ZHBfcGRfc2hpcHBpbmc/X2VuY29kaW5nPVVURjgmYW1wO3NlbGxlcj1BVFZQREtJS1gwREVSJmFtcDthc2luPUIwMUdLUUkzOTJcIj5WaWV3IHNoaXBwaW5nIHJhdGVzIGFuZCBwb2xpY2llc1x1MDAzQy9hPilcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+XHUwMDNDL2xpPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDbGk+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLXRleHQtYm9sZFwiPkFTSU46XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuPkIwMUdLUUkzOTJcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+XHUwMDNDL2xpPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDbGk+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+XHUwMDNDL2xpPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDbGk+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLXRleHQtYm9sZFwiPkl0ZW0gbW9kZWwgbnVtYmVyOlxuICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3Bhbj45MDcyMDAwOFx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cdTAwM0MvbGk+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcdTAwM0NsaT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtdGV4dC1ib2xkXCI+RGF0ZSBmaXJzdCBsaXN0ZWQgb24gQW1hem9uOlxuICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3Bhbj5KdW5lIDEsIDIwMTZcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+XHUwMDNDL2xpPlxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXHUwMDNDL3VsPlxuXG5cbiAgICAgICAgXG4gICAgXHUwMDNDL2Rpdj5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDc3R5bGUgdHlwZT1cInRleHQvY3NzXCI+XG4uemdfaHJzcl9pdGVtIHtsaXN0LXN0eWxlIDogbm9uZX07XG5cdTAwM0Mvc3R5bGU+XG5cdTAwM0NsaSBpZD1cIlNhbGVzUmFua1wiIHN0eWxlPVwibGlzdC1zdHlsZSA6IG5vbmVcIj5cblx1MDAzQ2I+QW1hem9uIEJlc3QgU2VsbGVycyBSYW5rOlx1MDAzQy9iPiAjNzQsMDMxIGluIENsb3RoaW5nLCBTaG9lcyAmYW1wOyBKZXdlbHJ5IChcdTAwM0NhIGhyZWY9XCIvZ3AvYmVzdHNlbGxlcnMvZmFzaGlvbi9yZWY9cGRfemdfdHNfZmFzaGlvblwiPlNlZSBUb3AgMTAwIGluIENsb3RoaW5nLCBTaG9lcyAmYW1wOyBKZXdlbHJ5XHUwMDNDL2E+KSBcdTAwM0NzdHlsZSB0eXBlPVwidGV4dC9jc3NcIj4uemdfaHJzciB7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgbGlzdC1zdHlsZS10eXBlOiBub25lOyB9LnpnX2hyc3JfaXRlbSB7IG1hcmdpbjogMCAwIDAgMTBweDsgfS56Z19ocnNyX3JhbmsgeyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHdpZHRoOiA4MHB4OyB0ZXh0LWFsaWduOiByaWdodDsgfVx1MDAzQy9zdHlsZT5cdTAwM0N1bCBjbGFzcz1cInpnX2hyc3JcIj4gICAgXHUwMDNDbGkgY2xhc3M9XCJ6Z19ocnNyX2l0ZW1cIj4gICAgXHUwMDNDc3BhbiBjbGFzcz1cInpnX2hyc3JfcmFua1wiPiM0ODdcdTAwM0Mvc3Bhbj4gICAgXHUwMDNDc3BhbiBjbGFzcz1cInpnX2hyc3JfbGFkZGVyXCI+aW4mbmJzcDtcdTAwM0NhIGhyZWY9XCIvZ3AvYmVzdHNlbGxlcnMvZmFzaGlvbi83NDU0OTIyMDExL3JlZj1wZF96Z19ocnNyX2Zhc2hpb25cIj5Xb21lbidzIERyb3AgJmFtcDsgRGFuZ2xlIEVhcnJpbmdzXHUwMDNDL2E+XHUwMDNDL3NwYW4+ICAgIFx1MDAzQy9saT4gICAgXHUwMDNDbGkgY2xhc3M9XCJ6Z19ocnNyX2l0ZW1cIj4gICAgXHUwMDNDc3BhbiBjbGFzcz1cInpnX2hyc3JfcmFua1wiPiM2MzI3XHUwMDNDL3NwYW4+ICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJ6Z19ocnNyX2xhZGRlclwiPmluJm5ic3A7XHUwMDNDYSBocmVmPVwiL2dwL2Jlc3RzZWxsZXJzL2Zhc2hpb24vNzE0NzQ0MjAxMS9yZWY9cGRfemdfaHJzcl9mYXNoaW9uXCI+R2lybHMnIEZhc2hpb25cdTAwM0MvYT5cdTAwM0Mvc3Bhbj4gICAgXHUwMDNDL2xpPlx1MDAzQy91bD5cblx1MDAzQy9saT5cblxuICAgIFxuICAgIFx1MDAzQ3VsIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLW5vc3R5bGUgYS12ZXJ0aWNhbCBhLXNwYWNpbmctbm9uZVwiPlxuICAgICAgICBcbiAgICAgICAgICAgIFx1MDAzQ2xpPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLXRleHQtYm9sZFwiPlxuICAgICAgICAgICAgICAgICAgICBBdmVyYWdlIEN1c3RvbWVyIFJldmlldzpcbiAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgICAgICBcblxuXG5cblxuXHUwMDNDc3R5bGUgdHlwZT1cInRleHQvY3NzXCI+XG4gICAgLyogXG4gICAgKiBGaXggZm9yIFVEUC0xMDYxLiBBdmVyYWdlIGN1c3RvbWVyIHJldmlld3MgaGFzIGEgc21hbGwgZXh0cmEgbGluZSBvbiBob3ZlciBcbiAgICAqIGh0dHBzOi8vb21uaS1ncm9rLmFtYXpvbi5jb20veHJlZi9zcmMvYXBwZ3JvdXAvd2Vic2l0ZVRlbXBsYXRlcy9yZXRhaWwvU29mdGxpbmVzRGV0YWlsUGFnZUFzc2V0cy91ZHAtaW50bC1sb2NrL3NyYy9sZWdhY3kuY3NzP2luZGV4TmFtZT1XZWJzaXRlVGVtcGxhdGVzIzQwXG4gICAgKi9cbiAgICAubm9VbmRlcmxpbmUgYTpob3ZlciB7IFxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IFxuICAgIH1cblx1MDAzQy9zdHlsZT5cblxuXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cdFx0XG5cdFx0XG5cdFx0XG5cdFx0XG5cdFx0ICAgICAgICBcblx0XHRcblx0XHRcblx0XHRcblx0XHRcblx0XHRcblx0XHRcblx0XHRcblx0XHQgICAgICAgIFxuICAgICAgICBcblxuICAgICAgICBcdTAwM0NkaXYgaWQ9XCJkZXRhaWxCdWxsZXRzX2F2ZXJhZ2VDdXN0b21lclJldmlld3NcIiBjbGFzcz1cImEtc3BhY2luZy1ub25lXCIgZGF0YS1hc2luPVwiQjAxR0tRSTM5MlwiIGRhdGEtcmVmPVwiZHB4X2Fjcl9wb3BfXCI+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gIFxuICBcbiAgXG4gICAgXG4gIFxuXG5cblxuXG5cbiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImFjclN0YXJzTGluay1jbGljay1tZXRyaWNzXCIgZGF0YS1hY3JzdGFyc2xpbmstY2xpY2stbWV0cmljcz1cInt9XCI+XG4gICAgICAgICAgICBcblxuXG5cblxuXG4gICAgXHUwMDNDc3BhbiBpZD1cImFjclBvcG92ZXJcIiBjbGFzcz1cInJldmlld0NvdW50VGV4dExpbmtlZEhpc3RvZ3JhbSBub1VuZGVybGluZVwiIHRpdGxlPVwiNC40IG91dCBvZiA1IHN0YXJzXCI+XG4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLXBvcG92ZXJcIiBkYXRhLWEtcG9wb3Zlcj1cInsmcXVvdDttYXgtd2lkdGgmcXVvdDs6JnF1b3Q7NzAwJnF1b3Q7LCZxdW90O2Nsb3NlQnV0dG9uJnF1b3Q7OiZxdW90O2ZhbHNlJnF1b3Q7LCZxdW90O3Bvc2l0aW9uJnF1b3Q7OiZxdW90O3RyaWdnZXJCb3R0b20mcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9ncC9jdXN0b21lci1yZXZpZXdzL3dpZGdldHMvYXZlcmFnZS1jdXN0b21lci1yZXZpZXcvcG9wb3Zlci9yZWY9ZHB4X2Fjcl9wb3BfP2NvbnRleHRJZD1kcHgmYW1wO2FzaW49QjAxR0tRSTM5MiZxdW90O31cIj5cbiAgICAgICAgICAgIFx1MDAzQ2EgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIGNsYXNzPVwiYS1wb3BvdmVyLXRyaWdnZXIgYS1kZWNsYXJhdGl2ZVwiPlxuICAgICAgICAgICAgICAgIFxuXG5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyIGEtc3Rhci00LTVcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPjQuNCBvdXQgb2YgNSBzdGFyc1x1MDAzQy9zcGFuPlx1MDAzQy9pPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcG9wb3ZlclwiPlx1MDAzQy9pPlx1MDAzQy9hPlxuICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtbGV0dGVyLXNwYWNlXCI+XHUwMDNDL3NwYW4+XG4gICAgXHUwMDNDL3NwYW4+XG5cblxuICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtbGV0dGVyLXNwYWNlXCI+XHUwMDNDL3NwYW4+XG4gICAgICAgIFxuICAgICAgICBcblxuICAgICAgICBcblxuICAgICAgICBcblxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImFjckxpbmstY2xpY2stbWV0cmljc1wiIGRhdGEtYWNybGluay1jbGljay1tZXRyaWNzPVwie31cIj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDYSBpZD1cImFjckN1c3RvbWVyUmV2aWV3TGlua1wiIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIGhyZWY9XCIjY3VzdG9tZXJSZXZpZXdzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGlkPVwiYWNyQ3VzdG9tZXJSZXZpZXdUZXh0XCIgY2xhc3M9XCJhLXNpemUtYmFzZVwiPjEyMSBjdXN0b21lciByZXZpZXdzXHUwMDNDL3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQy9hPlxuICAgICAgICAgICAgICAgIFx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cbiAgICAgICAgICAgICAgICAgICAgUC53aGVuKCdBJywgJ3JlYWR5JykuZXhlY3V0ZShmdW5jdGlvbihBKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBBLmRlY2xhcmF0aXZlKCdhY3JMaW5rLWNsaWNrLW1ldHJpY3MnLCAnY2xpY2snLCB7IFwiYWxsb3dMaW5rRGVmYXVsdFwiIDogdHJ1ZSB9LCBmdW5jdGlvbihldmVudCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYod2luZG93LnVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVlLmNvdW50KFwiYWNyTGlua0NsaWNrQ291bnRcIiwgKHVlLmNvdW50KFwiYWNyTGlua0NsaWNrQ291bnRcIikgfHwgMCkgKyAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgXHUwMDNDL3NjcmlwdD5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG4gICAgICAgICAgICBQLndoZW4oJ0EnLCAnY2YnKS5leGVjdXRlKGZ1bmN0aW9uKEEpIHtcbiAgICAgICAgICAgICAgICBBLmRlY2xhcmF0aXZlKCdhY3JTdGFyc0xpbmstY2xpY2stbWV0cmljcycsICdjbGljaycsIHsgXCJhbGxvd0xpbmtEZWZhdWx0XCIgOiB0cnVlIH0sICBmdW5jdGlvbihldmVudCl7XG4gICAgICAgICAgICAgICAgICAgIGlmKHdpbmRvdy51ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdWUuY291bnQoXCJhY3JTdGFyc0xpbmtXaXRoUG9wb3ZlckNsaWNrQ291bnRcIiwgKHVlLmNvdW50KFwiYWNyU3RhcnNMaW5rV2l0aFBvcG92ZXJDbGlja0NvdW50XCIpIHx8IDApICsgMSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBcdTAwM0Mvc2NyaXB0PlxuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgIFxuXG5cbiAgICAgICAgICAgIFx1MDAzQy9zcGFuPlx1MDAzQy9saT5cbiAgICAgICAgXG4gICAgXHUwMDNDL3VsPlxuICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XG4gICAgICAgIFxuICAgICAgICAgICAgXG5cblxuXG5cbiAgICAgICAgXG4gICAgXHUwMDNDL2Rpdj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlxuICAgICAgICBcbiAgICAgICAgICAgIFxuXG5cblxuXG5cbiBcdFxuIFx0XHRcbiBcdFx0XG4gXHRcdFx0XG4gICAgICAgIFxuICAgICBcbiAgICAgSWYgeW91IGFyZSBhIHNlbGxlciBmb3IgdGhpcyBwcm9kdWN0LCB3b3VsZCB5b3UgbGlrZSB0byBcdTAwM0NiPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vc2VsbGVyY2VudHJhbC5hbWF6b24uY29tL2N1L2NvbnRhY3QtdXM/Y2F0ZWdvcnlJZD0zMDAwMiZhbXA7dHlwZUlkPTMwMDA1XCI+c3VnZ2VzdCB1cGRhdGVzIHRocm91Z2ggc2VsbGVyIHN1cHBvcnRcdTAwM0MvYT5cdTAwM0MvYj4/XG5cblxuICAgICAgICBcbiAgICBcdTAwM0MvZGl2PlxuXHUwMDNDL2Rpdj5cblxuICAgIFx0ICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG4gICAgICBcdTAwM0NkaXYgaWQ9XCJjcHNpYVByb2R1Y3RTYWZldHlXYXJuaW5nX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJjcHNpYVByb2R1Y3RTYWZldHlXYXJuaW5nXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXHUwMDNDL2Rpdj5cblxuICAgICAgICBcblxuICAgICAgICBcblxuICBcblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cblxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0NkaXYgaWQ9XCJmZWF0dXJlYnVsbGV0c2J0ZlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiZmVhdHVyZWJ1bGxldHNidGZcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFx0ICAgIFxuICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cbiAgICBcdCAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG5cbiAgICAgIFxuXG4gICAgXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0NsaW5rIHJlbD1cInN0eWxlc2hlZXRcIiBocmVmPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzUxU0IrblpOdURMLmNzcz9BVUlDbGllbnRzL1ZTRVJlbGF0ZWRWaWRlb3NDbGllbnRBc3NldHNcIj5cdTAwM0NsaW5rIHJlbD1cInN0eWxlc2hlZXRcIiBocmVmPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzUxTmZMdERTOW1MLl9SQ3wxMXRqTzk1ZHZOTC5jc3MsMDFraSswR3lVM0wuY3NzXy5jc3M/QVVJQ2xpZW50cy9CcmlsYVwiPlx1MDAzQ2RpdiBpZD1cInZzZS1yZWxhdGVkLXZpZGVvc1wiIGNsYXNzPVwiYS1zZWN0aW9uXCI+XHUwMDNDZGl2IGlkPVwidnNlLXJlbC12aWRlb3MtY2Fyb3VzZWxcIiBkYXRhLWEtY2Fyb3VzZWwtb3B0aW9ucz1cInsmcXVvdDttaW5pbXVtX2d1dHRlcl93aWR0aCZxdW90Ozo1LCZxdW90O3Nob3dfcGFydGlhbF9uZXh0JnF1b3Q7OmZhbHNlLCZxdW90O25hbWUmcXVvdDs6JnF1b3Q7dnNlLXJlbC12aWRlb3MtY2Fyb3VzZWwmcXVvdDssJnF1b3Q7Zmlyc3RfaXRlbV9mbHVzaF9sZWZ0JnF1b3Q7OmZhbHNlfVwiIGNsYXNzPVwiYS1iZWdpbiBhLWNhcm91c2VsLWNvbnRhaW5lciBhLWNhcm91c2VsLWRpc3BsYXktc3RyZXRjaHlHb29kbmVzcyBhLWNhcm91c2VsLXRyYW5zaXRpb24tc2xpZGUgdnNlLXJlbGF0ZWQtdmlkZW9zLWNvbnRhaW5lciB2c2UtYXBwbHktcGxheS1pY29uIHZzZS1ydnMtdjJcIj5cdTAwM0NpbnB1dCBhdXRvY29tcGxldGU9XCJvblwiIHR5cGU9XCJoaWRkZW5cIiBjbGFzcz1cImEtY2Fyb3VzZWwtZmlyc3R2aXNpYmxlaXRlbVwiPlx1MDAzQ2RpdiBkYXRhLWVsZW1lbnQtaWQ9XCJjYXJvdXNlbC1oZWFkZXJcIiBjbGFzcz1cImEtcm93IGEtY2Fyb3VzZWwtaGVhZGVyLXJvdyBhLXNpemUtbGFyZ2UgYS10ZXh0LW5vcm1hbCB2c2UtcnZzLXYyLWNhcm91c2VsLWhlYWRlclwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtY29sdW1uIGEtc3BhbjhcIj5cdTAwM0NoMiBjbGFzcz1cImEtY2Fyb3VzZWwtaGVhZGluZ1wiPlZpZGVvc1x1MDAzQy9oMj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtY29sdW1uIGEtc3BhbjQgYS1zcGFuLWxhc3QgYS10ZXh0LXJpZ2h0XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtY2Fyb3VzZWwtcGFnaW5hdGlvbiBhLXNpemUtYmFzZVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNhcm91c2VsLXBhZ2UtY291bnRcIj5QYWdlIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNhcm91c2VsLXBhZ2UtY3VycmVudFwiPjFcdTAwM0Mvc3Bhbj4gb2YgXHUwMDNDc3BhbiBjbGFzcz1cImEtY2Fyb3VzZWwtcGFnZS1tYXhcIj4xXHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XHUwMDNDc3BhbiBjbGFzcz1cImEtY2Fyb3VzZWwtcmVzdGFydC1jb250YWluZXJcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS10ZXh0LXNlcGFyYXRvclwiPlx1MDAzQy9zcGFuPlx1MDAzQ2EgY2xhc3M9XCJhLWNhcm91c2VsLXJlc3RhcnRcIiBocmVmPVwiI1wiPlN0YXJ0IE92ZXJcdTAwM0MvYT5cdTAwM0Mvc3Bhbj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1jYXJvdXNlbC1hY2Nlc3NpYmlsaXR5LXBhZ2UtaW5mbyBhLW9mZnNjcmVlblwiIGFyaWEtbGl2ZT1cInBvbGl0ZVwiPlBhZ2UgMSBvZiAxXHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtY2Fyb3VzZWwtY29udHJvbHMgYS1jYXJvdXNlbC1yb3cgYS1jYXJvdXNlbC1oYXMtYnV0dG9uc1wiPlx1MDAzQ2RpdiBjbGFzcz1cImEtY2Fyb3VzZWwtcm93LWlubmVyXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1jYXJvdXNlbC1jb2wgYS1jYXJvdXNlbC1sZWZ0XCI+XHUwMDNDYSBjbGFzcz1cImEtYnV0dG9uIGEtYnV0dG9uLWltYWdlIGEtY2Fyb3VzZWwtYnV0dG9uIGEtY2Fyb3VzZWwtZ290by1wcmV2cGFnZVwiIHRhYmluZGV4PVwiMFwiIGhyZWY9XCIjXCIgaWQ9XCJhLWF1dG9pZC0xNVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi1pbm5lclwiPlx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXByZXZpb3VzXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj5QcmV2aW91cyBwYWdlXHUwMDNDL3NwYW4+XHUwMDNDL2k+XHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLWNhcm91c2VsLWNvbCBhLWNhcm91c2VsLWNlbnRlclwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtY2Fyb3VzZWwtdmlld3BvcnRcIj5cdTAwM0NvbCBjbGFzcz1cImEtY2Fyb3VzZWxcIiByb2xlPVwibGlzdFwiPlx1MDAzQ2xpIGNsYXNzPVwiYS1jYXJvdXNlbC1jYXJkIHZzZS12aWRlby1jYXJkXCIgc3R5bGU9XCIgd2lkdGg6MjQwcHg7IFwiIHJvbGU9XCJsaXN0aXRlbVwiIGFyaWEtc2V0c2l6ZT1cIjFcIiBhcmlhLXBvc2luc2V0PVwiMVwiPlx1MDAzQ2RpdiBkYXRhLWFzaW49XCI0NTQyYjY0ZTE5OWU0YWUwYTBjMGVlOWVmMTMzMTI2NFwiIGRhdGEtZHVyYXRpb249XCIwOjE5XCIgZGF0YS1lbGVtZW50LWlkPVwidmlkZW8tY2Fyb3VzZWwtaXRlbVwiIGRhdGEtZW5hYmxlLWFzc29jaWF0ZS10YWc9XCJmYWxzZVwiIGRhdGEtb3NwLXByb2R1Y3Q9XCJcIiBkYXRhLXByb2R1Y3QtYXNpbj1cIkIwMUdLUUkzOTJcIiBkYXRhLXJlZmVyZW5jZS10aXRsZT1cIlwiIGRhdGEtcmVmZXJlbmNlLXVybD1cIlwiIGRhdGEtcmVsYXRlZC1wcm9kdWN0cz1cIkIwMUdLUUkzOTJcIiBkYXRhLXNwb25zb3JlZD1cImZhbHNlXCIgZGF0YS10aXRsZT1cIkVsZWdhbnQgVHdvIFRvbmUgVGVhcmRyb3AgRGFuZ2xlIEVhcnJpbmdzXCIgZGF0YS12ZW5kb3ItY29kZT1cIlo3QVg0XCIgZGF0YS12ZW5kb3ItbmFtZT1cIlNlbGxlciBWaWRlb3NcIiBkYXRhLXZlbmRvci10cmFja2luZy1pZD1cIlwiIGRhdGEtdmlkZW8tcmVmLWlkPVwiXCIgZGF0YS12aWRlby11cmw9XCJodHRwczovL2QxeTZqcmJ6b3RueWpnLmNsb3VkZnJvbnQubmV0L1o3QVg0LzQ1NDJiNjRlMTk5ZTRhZTBhMGMwZWU5ZWYxMzMxMjY0L1YxMS8yYmEwZjRlYTZmNzM0YmNhODYzZjY4YTBhZjI5Y2M0My9TaG9ydEZvcm0tR2VuZXJpYy00ODBwLTE2LTktMTQwOTE3MzA4OTc5My1ycGNiZTUubXA0P0V4cGlyZXM9MTU3MDM5ODMwOCZhbXA7U2lnbmF0dXJlPVJTc2lVT1RSTjJnflpxeFoxaUxLVzlidFNjVGh0UXBhN0pqSnVSY3ZyaHZaTi1TYlV2NG1tT1RvNnZqVDE2R0ZkSy0wUWIzak0yT0FubC15c0hhcVJEbjRUSS05ZlhkT2I3WEktdXJUbWdnc29YZXR4TU01UEtOc3RBS3hudC1Ga2ZmLU90aVYtNGRCSkxlfm1TTGxvYkdrOTQzTVR+YmFhYmtoQzU3WUlyRV8mYW1wO0tleS1QYWlyLUlkPUFQS0FKNjJYV0taMzVFT1ZPNFhBXCIgY2xhc3M9XCJhLXNlY3Rpb24gdnNlLXZpZGVvLWl0ZW1cIj5cdTAwM0NoNCBkYXRhLWVsZW1lbnQtaWQ9XCJzZWdtZW50LXRpdGxlLTFcIiBjbGFzcz1cInZzZS12Yy1oZWFkZXIgUlZTX0cxIGZpcnN0LWl0ZW1cIj5WaWRlb3MgZm9yIHRoaXMgcHJvZHVjdFx1MDAzQy9oND5cdTAwM0NhIGRhdGEtcmVkaXJlY3QtdXJsPVwiL3ZkcC80NTQyYjY0ZTE5OWU0YWUwYTBjMGVlOWVmMTMzMTI2NFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCB2c2UtY2Fyb3VzZWwtaXRlbSB2c2UtY2Fyb3VzZWwtaXRlbS1ob3ZlcmluZ1wiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3ZkcC80NTQyYjY0ZTE5OWU0YWUwYTBjMGVlOWVmMTMzMTI2ND9yZWY9ZHBfdnNlX3J2YzBcIj5cdTAwM0NkaXYgY2xhc3M9XCJ2c2UtdmlkZW8taW1hZ2UgXCIgZGF0YS1pbWc9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvOTFjVSt1VzFrOUwucG5nX1NSMjQwLDEzNV9CRzAsMCwwXy5wbmdcIiBpZD1cIlwiIGRhdGEtZWxlbWVudC1pZD1cInZpZGVvLXRodW1ibmFpbFwiPlx1MDAzQ2ltZyBhbHQ9XCJcIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEveC1sb2NhbGUvY29tbW9uL2dyZXktcGl4ZWwuZ2lmXCIgY2xhc3M9XCJhLWxhenktbG9hZGVkXCIgaGVpZ2h0PVwiMTM1cHhcIiB3aWR0aD1cIjI0MHB4XCIgZGF0YS1hLWhpcmVzPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzkxY1UrdVcxazlMLnBuZ19TUjI0MCwxMzVfQkcwLDAsMF8ucG5nXCIgZGF0YS1zcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvOTFjVSt1VzFrOUwucG5nX1NSMjQwLDEzNV9CRzAsMCwwXy5wbmdcIj5cdTAwM0Nub3NjcmlwdD5cdTAwM0NpbWcgYWx0PVwiXCIgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzkxY1UrdVcxazlMLnBuZ19TUjI0MCwxMzVfQkcwLDAsMF8ucG5nXCIgaGVpZ2h0PVwiMTM1cHhcIiB3aWR0aD1cIjI0MHB4XCI+XHUwMDNDL25vc2NyaXB0Plx1MDAzQ3AgZGF0YS1lbGVtZW50LWlkPVwidmlkZW8tZHVyYXRpb25cIiBjbGFzcz1cInZzZS12aWRlby1kdXJhdGlvbiB2c2Utbm8tbWFyZ2luXCI+IDA6MTkgXHUwMDNDL3A+XHUwMDNDcCBkYXRhLWVsZW1lbnQtaWQ9XCJ2c2UtY2FyZC1ob3Zlci10ZXh0XCIgY2xhc3M9XCJhLXNpemUtYmFzZSB2c2UtaG92ZXItc2VjdGlvblwiPiBDbGljayB0byBwbGF5IHZpZGVvIFx1MDAzQy9wPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwidnNlLXZpZGVvLWNvbnRlbnRcIj5cdTAwM0NkaXYgY2xhc3M9XCJ2c2UtdmlkZW8tdGl0bGVcIj5cdTAwM0NoNCBkYXRhLWVsZW1lbnQtaWQ9XCJ2aWRlby10aXRsZVwiIGNsYXNzPVwidnNlLXZpZGVvLXRpdGxlLXRleHRcIj4gRWxlZ2FudCBUd28gVG9uZSBUZWFyZHJvcCBEYW5nbGUgRWFycmluZ3MgXHUwMDNDL2g0Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwidnNlLXZpZGVvLWxhYmVsc1wiPlx1MDAzQ3NwYW4gZGF0YS1lbGVtZW50LWlkPVwidmlkZW8tdmVuZG9yLW5hbWVcIiBjbGFzcz1cInZzZS12aWRlby12ZW5kb3JuYW1lXCI+U2VsbGVyIFZpZGVvc1x1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvYT5cdTAwM0MvZGl2Plx1MDAzQy9saT5cdTAwM0Mvb2w+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtY2Fyb3VzZWwtY29sIGEtY2Fyb3VzZWwtcmlnaHRcIj5cdTAwM0NhIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24taW1hZ2UgYS1jYXJvdXNlbC1idXR0b24gYS1jYXJvdXNlbC1nb3RvLW5leHRwYWdlXCIgdGFiaW5kZXg9XCIwXCIgaHJlZj1cIiNcIiBpZD1cImEtYXV0b2lkLTE2XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uLWlubmVyXCI+XHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tbmV4dFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWljb24tYWx0XCI+TmV4dCBwYWdlXHUwMDNDL3NwYW4+XHUwMDNDL2k+XHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDc3BhbiBjbGFzcz1cInZzZS1pYi1kaXZpZGVyLWhlYWRlci1zdHJpbmcgYW9rLWhpZGRlblwiPlx1MDAzQy9zcGFuPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbiBhLXNwYWNpbmctdG9wLWJhc2UgYS1idXR0b24tYmFzZSB2c2UtdXBsb2FkLWxpbmstYnV0dG9uXCIgaWQ9XCJhLWF1dG9pZC0xN1wiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi1pbm5lclwiPlx1MDAzQ2EgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvY3JlYXRvcmh1Yi92aWRlby91cGxvYWQ/cHJvZHVjdEFTSU49QjAxR0tRSTM5MiZhbXA7cmVmZXJyaW5nVVJMPVpIQXZRakF4UjB0UlNUTTVNZyUzRCUzRCZhbXA7cmVmPVJWU1dcIiB0aXRsZT1cIlVHQyB1cGxvYWQgbGlua1wiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGNsYXNzPVwiYS1idXR0b24tdGV4dFwiIHJvbGU9XCJidXR0b25cIiBpZD1cImEtYXV0b2lkLTE3LWFubm91bmNlXCI+VXBsb2FkIHlvdXIgdmlkZW9cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1uZXh0IHZzZS11cGxvYWQtbGluay1idXR0b24taWNvblwiIHJvbGU9XCJpbWdcIj5cdTAwM0MvaT5cdTAwM0MvYT5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1lbmQgYW9rLWhpZGRlblwiPlx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDaW1nIGFsdD1cIlwiIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS92c2UvRGlzY292ZXJ5L3ZzZV9wbGF5X2ljb25fMngucG5nXCIgY2xhc3M9XCJhb2staGlkZGVuXCI+XHUwMDNDc2NyaXB0IHR5cGU9XCJhLXN0YXRlXCIgZGF0YS1hLXN0YXRlPVwieyZxdW90O2tleSZxdW90OzomcXVvdDt2c2UtZHAtcnYtY29uZmlnJnF1b3Q7fVwiPntcInNob3dNb2JpbGVCaWdDYXJkXCI6ZmFsc2UsXCJpc1ByZXZlbnREZWZhdWx0XCI6dHJ1ZSxcInJlZlRhZ1ByZWZpeFwiOlwiZHBfdnNlX3J2Y1wiLFwiYXV0b3BsYXlUcmlnZ2VyZWRcIjpmYWxzZSxcImlzVmVydGljYWxTY3JvbGxcIjpmYWxzZSxcInNob3dBZFBsYWNlbWVudFwiOmZhbHNlLFwiY2Fyb3VzZWxOYW1lXCI6XCJ2c2UtcmVsLXZpZGVvcy1jYXJvdXNlbFwiLFwic2hvd1JlbGF0ZWRQcm9kdWN0c1wiOnRydWUsXCJzaG93VmlkZW9Db3VudHNcIjpmYWxzZSxcImF1dG9wbGF5XCI6ZmFsc2UsXCJoYXNTdGlja3lIZWFkZXJzXCI6ZmFsc2UsXCJzaG93VmlkZW9Wb3Rlc1wiOmZhbHNlfVx1MDAzQy9zY3JpcHQ+XHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImEtbW9kYWxcIiBkYXRhLWEtbW9kYWw9XCJ7JnF1b3Q7cGFkZGluZyZxdW90OzomcXVvdDtub25lJnF1b3Q7LCZxdW90O2hpZGVIZWFkZXImcXVvdDs6dHJ1ZSwmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzpmYWxzZSwmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O3ZzZS1kcC1saWdodGJveC1iYmEyYjE0NS01MzI5LTQ1YTctODMwMi04ZjE0NTRjZjIzY2UmcXVvdDssJnF1b3Q7cG9wb3ZlckxhYmVsJnF1b3Q7OiZxdW90O3ZzZS1kcC1saWdodGJveC1iYmEyYjE0NS01MzI5LTQ1YTctODMwMi04ZjE0NTRjZjIzY2UmcXVvdDt9XCIgaWQ9XCJ2c2UtZHAtbGlnaHRib3gtYmJhMmIxNDUtNTMyOS00NWE3LTgzMDItOGYxNDU0Y2YyM2NlcG9wb3Zlci10cmlnZ2VyXCI+XHUwMDNDL3NwYW4+XHUwMDNDZGl2IGNsYXNzPVwiYS1wb3BvdmVyLXByZWxvYWRcIiBpZD1cImEtcG9wb3Zlci12c2UtZHAtbGlnaHRib3gtYmJhMmIxNDUtNTMyOS00NWE3LTgzMDItOGYxNDU0Y2YyM2NlXCI+XHUwMDNDYnV0dG9uIGRhdGEtYWN0aW9uPVwiYS1wb3BvdmVyLWNsb3NlXCIgY2xhc3M9XCIgYS1idXR0b24tY2xvc2UgYS1kZWNsYXJhdGl2ZSBhLWJ1dHRvbi10b3AtcmlnaHQgdnNlLWNsb3NlLWJ1dHRvblwiIGFyaWEtbGFiZWw9XCJDbG9zZVwiPlx1MDAzQ2kgY2xhc3M9XCJhLWljb24gdnNlLWljb24tY2xvc2VcIj5cdTAwM0MvaT5cdTAwM0MvYnV0dG9uPlx1MDAzQ2RpdiBpZD1cInZzZS1kcC1saWdodGJveC1iYmEyYjE0NS01MzI5LTQ1YTctODMwMi04ZjE0NTRjZjIzY2Utd3JhcHBlclwiIGRhdGEtY3NzLWNsYXNzPVwiIHZzZS1sYi1zaG93LXJlbGF0ZWQtcHJvZHVjdHMgdnNlLXJ2cy12MiB2c2Utbm8tY2Fyb3VzZWwgdnNlLXNoYXJlLXdpZGdldCB2c2UtdmVydGljYWwtbGlnaHRib3hcIiBkYXRhLWVsZW1lbnQtaWQ9XCJydi1wb3BvdmVyLWNvbnRhaW5lclwiIGNsYXNzPVwiYS1zZWN0aW9uXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIHZzZS1sYi1jb250YWluZXJcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gdnNlLWxpZ2h0Ym94LXRhYlwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtYmFzZVwiPlZpZGVvXHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLWZpeGVkLXJpZ2h0LWdyaWRcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWZpeGVkLXJpZ2h0LWdyaWQtaW5uZXJcIiBzdHlsZT1cInBhZGRpbmctcmlnaHQ6MHB4XCI+XHUwMDNDZGl2IGRhdGEtZWxlbWVudC1pZD1cInZpZGVvLWNvbnRlbnQtcGFuZWxcIiBjbGFzcz1cImEtZml4ZWQtcmlnaHQtZ3JpZC1jb2wgdnNlLWxiLWxlZnQgYS1jb2wtbGVmdFwiIHN0eWxlPVwicGFkZGluZy1yaWdodDowJTtmbG9hdDpsZWZ0O1wiPlx1MDAzQ2RpdiBjbGFzcz1cInZzZS1maXhlZExheW91dFwiPlx1MDAzQ2RpdiBjbGFzcz1cInZzZS1saWdodGJveC1wbGF5ZXItY29udGFpbmVyXCI+XHUwMDNDZGl2IGlkPVwidnNlLWRwLWxpZ2h0Ym94LWJiYTJiMTQ1LTUzMjktNDVhNy04MzAyLThmMTQ1NGNmMjNjZS1hd2FwbGF5ZXJcIiBjbGFzcz1cInZzZS1saWdodGJveC1wbGF5ZXJcIj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBpZD1cInZzZS1kcC1saWdodGJveC1iYmEyYjE0NS01MzI5LTQ1YTctODMwMi04ZjE0NTRjZjIzY2UtZmVlZGJhY2stY29udGFpbmVyXCIgY2xhc3M9XCJhLXNlY3Rpb24gdnNlLWZiLXRyaWdnZXJcIj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gdnNlLXZpZGVvLWFjdGlvbi1zdHJpcFwiPlx1MDAzQ2RpdiBjbGFzcz1cInZzZS1oZWxwZnVsLXZvdGVzXCI+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJ2c2Utc29jaWFsU2hhcmUtdHJpZ2dlciB2c2UtcnZzLXNoYXJlLXZpZGVvLWNvbnRhaW5lclwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLXBvcG92ZXJcIiBkYXRhLWEtcG9wb3Zlcj1cInsmcXVvdDtwYWRkaW5nJnF1b3Q7OiZxdW90O25vbmUmcXVvdDssJnF1b3Q7Y2xvc2VCdXR0b24mcXVvdDs6ZmFsc2UsJnF1b3Q7Y2xvc2VCdXR0b25MYWJlbCZxdW90OzomcXVvdDt2c2UtZHAtbGlnaHRib3gtYmJhMmIxNDUtNTMyOS00NWE3LTgzMDItOGYxNDU0Y2YyM2NlLXNvY2lhbHNoYXJlLWNsb3NlJnF1b3Q7LCZxdW90O2FjdGl2YXRlJnF1b3Q7OiZxdW90O29uY2xpY2smcXVvdDssJnF1b3Q7bmFtZSZxdW90OzomcXVvdDt2c2UtZHAtbGlnaHRib3gtYmJhMmIxNDUtNTMyOS00NWE3LTgzMDItOGYxNDU0Y2YyM2NlLXNvY2lhbHNoYXJlLXBvcG92ZXImcXVvdDssJnF1b3Q7cG9zaXRpb24mcXVvdDs6JnF1b3Q7dHJpZ2dlclRvcCZxdW90OywmcXVvdDtwb3BvdmVyTGFiZWwmcXVvdDs6JnF1b3Q7dnNlLWRwLWxpZ2h0Ym94LWJiYTJiMTQ1LTUzMjktNDVhNy04MzAyLThmMTQ1NGNmMjNjZS1zb2NpYWxzaGFyZS1wb3BvdmVyLWxhYmVsJnF1b3Q7fVwiIGlkPVwidnNlLWRwLWxpZ2h0Ym94LWJiYTJiMTQ1LTUzMjktNDVhNy04MzAyLThmMTQ1NGNmMjNjZS1zb2NpYWxzaGFyZS10cmlnZ2VyXCI+XHUwMDNDaSBjbGFzcz1cInZzZS1zaGFyZS1pY29uXCIgZGF0YS1lbGVtZW50LWlkPVwidnNlLXNoYXJlLWljb25cIj5cdTAwM0MvaT5cdTAwM0Mvc3Bhbj5cdTAwM0NzY3JpcHQgdHlwZT1cImEtc3RhdGVcIiBkYXRhLWEtc3RhdGU9XCJ7JnF1b3Q7a2V5JnF1b3Q7OiZxdW90O3ZzZS1ydnAtc29jaWFsLXNoYXJlJnF1b3Q7fVwiPntcImltYWdlXCI6XCJpbWFnZV91cmxcIixcInNoYXJlQnV0dG9uXCI6XCJTSEFSRVwiLFwiY2xpZW50UHJlZml4XCI6XCJcIixcImRlc2NyaXB0aW9uXCI6XCJ2aWRlb19kZXNjcmlwdGlvblwiLFwiaWRcIjpcInZzZS1kcC1saWdodGJveC1iYmEyYjE0NS01MzI5LTQ1YTctODMwMi04ZjE0NTRjZjIzY2Utc29jaWFsc2hhcmVcIixcInRpdGxlXCI6XCJ2aWRlb190aXRsZVwiLFwicGFnZUxldmVsRGF0YVwiOntcImRldmljZVR5cGVSZWZcIjpcImR0XCIsXCJjbGllbnRSZWZcIjpcImxiXCJ9LFwic2hhcmVXaXRoRnJpZW5kc1Byb21wdFwiOlwiU2hhcmUgdGhpcyB2aWRlbyB3aXRoIGZyaWVuZHNcIixcInVybFwiOlwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9wcm9kdWN0L0IwMUdLUUkzOTJcIn1cdTAwM0Mvc2NyaXB0Plx1MDAzQ2RpdiBjbGFzcz1cImEtcG9wb3Zlci1wcmVsb2FkXCIgaWQ9XCJhLXBvcG92ZXItdnNlLWRwLWxpZ2h0Ym94LWJiYTJiMTQ1LTUzMjktNDVhNy04MzAyLThmMTQ1NGNmMjNjZS1zb2NpYWxzaGFyZS1wb3BvdmVyXCI+XHUwMDNDZGl2IGlkPVwidnNlLWRwLWxpZ2h0Ym94LWJiYTJiMTQ1LTUzMjktNDVhNy04MzAyLThmMTQ1NGNmMjNjZS1zb2NpYWxzaGFyZS1wb3BvdmVyXCIgY2xhc3M9XCJhLXNlY3Rpb24gdnNlLXNvY2lhbHNoYXJlIHZzZS1zcy1wb3BvdmVyXCI+XHUwMDNDZGl2IGlkPVwidnNlLWRwLWxpZ2h0Ym94LWJiYTJiMTQ1LTUzMjktNDVhNy04MzAyLThmMTQ1NGNmMjNjZS1zb2NpYWxzaGFyZS1lbWFpbFwiIGNsYXNzPVwidnNlLXNvY2lhbC1pY29uXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cInZzZS1ydnAtc3dmLXNoYXJlLW5ldHdvcmtcIiBkYXRhLXZzZS1ydnAtc3dmLXNoYXJlLW5ldHdvcms9XCJ7JnF1b3Q7cGFnZVN0YXRlSWQmcXVvdDs6JnF1b3Q7dnNlLXJ2cC1zb2NpYWwtc2hhcmUmcXVvdDssJnF1b3Q7bmV0d29yayZxdW90OzomcXVvdDtlbWFpbCZxdW90O31cIiBpZD1cInZzZS1zaGFyZS1lbWFpbFwiPlx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXNoYXJlLWVtYWlsIHZzZS1zb2NpYWxzaGFyZS1pY29uc1wiIHJvbGU9XCJpbWdcIj5cdTAwM0MvaT5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBpZD1cInZzZS1kcC1saWdodGJveC1iYmEyYjE0NS01MzI5LTQ1YTctODMwMi04ZjE0NTRjZjIzY2Utc29jaWFsc2hhcmUtZmFjZWJvb2tcIiBjbGFzcz1cInZzZS1zb2NpYWwtaWNvblwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJ2c2UtcnZwLXN3Zi1zaGFyZS1uZXR3b3JrXCIgZGF0YS12c2UtcnZwLXN3Zi1zaGFyZS1uZXR3b3JrPVwieyZxdW90O3BhZ2VTdGF0ZUlkJnF1b3Q7OiZxdW90O3ZzZS1ydnAtc29jaWFsLXNoYXJlJnF1b3Q7LCZxdW90O25ldHdvcmsmcXVvdDs6JnF1b3Q7ZmFjZWJvb2smcXVvdDt9XCIgaWQ9XCJ2c2Utc2hhcmUtZmFjZWJvb2tcIj5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zaGFyZS1mYWNlYm9vayB2c2Utc29jaWFsc2hhcmUtaWNvbnNcIiByb2xlPVwiaW1nXCI+XHUwMDNDL2k+XHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgaWQ9XCJ2c2UtZHAtbGlnaHRib3gtYmJhMmIxNDUtNTMyOS00NWE3LTgzMDItOGYxNDU0Y2YyM2NlLXNvY2lhbHNoYXJlLXR3aXR0ZXJcIiBjbGFzcz1cInZzZS1zb2NpYWwtaWNvblwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJ2c2UtcnZwLXN3Zi1zaGFyZS1uZXR3b3JrXCIgZGF0YS12c2UtcnZwLXN3Zi1zaGFyZS1uZXR3b3JrPVwieyZxdW90O3BhZ2VTdGF0ZUlkJnF1b3Q7OiZxdW90O3ZzZS1ydnAtc29jaWFsLXNoYXJlJnF1b3Q7LCZxdW90O25ldHdvcmsmcXVvdDs6JnF1b3Q7dHdpdHRlciZxdW90O31cIiBpZD1cInZzZS1zaGFyZS10d2l0dGVyXCI+XHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tc2hhcmUtdHdpdHRlciB2c2Utc29jaWFsc2hhcmUtaWNvbnNcIiByb2xlPVwiaW1nXCI+XHUwMDNDL2k+XHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgaWQ9XCJ2c2UtZHAtbGlnaHRib3gtYmJhMmIxNDUtNTMyOS00NWE3LTgzMDItOGYxNDU0Y2YyM2NlLXNvY2lhbHNoYXJlLXBpbnRlcmVzdFwiIGNsYXNzPVwidnNlLXNvY2lhbC1pY29uXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cInZzZS1ydnAtc3dmLXNoYXJlLW5ldHdvcmtcIiBkYXRhLXZzZS1ydnAtc3dmLXNoYXJlLW5ldHdvcms9XCJ7JnF1b3Q7cGFnZVN0YXRlSWQmcXVvdDs6JnF1b3Q7dnNlLXJ2cC1zb2NpYWwtc2hhcmUmcXVvdDssJnF1b3Q7bmV0d29yayZxdW90OzomcXVvdDtwaW50ZXJlc3QmcXVvdDt9XCIgaWQ9XCJ2c2Utc2hhcmUtcGludGVyZXN0XCI+XHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tc2hhcmUtcGludGVyZXN0IHZzZS1zb2NpYWxzaGFyZS1pY29uc1wiIHJvbGU9XCJpbWdcIj5cdTAwM0MvaT5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIHZzZS1sYi12aWRlby1tZXRhZGF0YVwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiB2c2UtdGFibGUgdnNlLXZpZGVvLXRpdGxlIGEtc2l6ZS1tZWRpdW1cIj5cdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gdnNlLXRjLWxlZnQgdmlkZW8tdGl0bGUtY29udGFpbmVyLWxlZnRcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gdmlkZW8tdGl0bGUtZWxsaXBzaXMtd3JhcHBlclwiPlx1MDAzQ3NwYW4gZGF0YS1lbGVtZW50LWlkPVwicnYtY29udGVudC10aXRsZS1wcmVmaXhcIiBjbGFzcz1cImEtc2l6ZS1tZWRpdW0gdnNlLWNvbnRlbnQtdGl0bGUtcHJlZml4XCI+XHUwMDNDL3NwYW4+XHUwMDNDc3BhbiBkYXRhLWVsZW1lbnQtaWQ9XCJydi1jb250ZW50LXRpdGxlXCIgY2xhc3M9XCJ2c2UtY29udGVudC10aXRsZVwiPlx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gdnNlLXRjLXJpZ2h0IHZpZGVvLXRpdGxlLWNvbnRhaW5lci1yaWdodCBhLXNpemUtbWluaVwiPlx1MDAzQ2EgaWQ9XCJ2c2UtY3VzdG9tZXItcmV2aWV3LWxpbmtcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgdnNlLWN1c3RvbWVyLXJldmlldy1jb250YWluZXJcIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lclwiIGhyZWY9XCIjXCI+XHUwMDNDL2E+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBkYXRhLWVsZW1lbnQtaWQ9XCJydi1jb250ZW50LXByb3ZpZGVyXCIgY2xhc3M9XCJhLXNlY3Rpb24gdnNlLXZpZGVvLWF1dGhvciB2c2Utbm8tbWFyZ2luIGEtc2l6ZS1taW5pXCI+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJ2c2UtdmlkZW8taW5mb1wiPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgaWQ9XCJ2c2UtcmVsYXRlZC1wcm9kdWN0cy1uYXJyb3dcIiBjbGFzcz1cImEtc2VjdGlvbiB2c2UtcmVsYXRlZC1wcm9kdWN0cy1uYXJyb3dcIj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1maXhlZC1yaWdodC1ncmlkLWNvbCB2c2UtbGItcmlnaHQgYS1jb2wtcmlnaHRcIiBzdHlsZT1cIndpZHRoOjBweDttYXJnaW4tcmlnaHQ6LTBweDtmbG9hdDpsZWZ0O1wiPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBpZD1cInZzZS1yZWxhdGVkLXByb2R1Y3RzLWNhY2hlLWhpZGRlblwiIGNsYXNzPVwiYS1zZWN0aW9uIGFvay1oaWRkZW5cIj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ3NjcmlwdCB0eXBlPVwiYS1zdGF0ZVwiIGRhdGEtYS1zdGF0ZT1cInsmcXVvdDtrZXkmcXVvdDs6JnF1b3Q7dnNlLWRwLXZsLWNvbmZpZyZxdW90O31cIj57XCJkaXNwbGF5QWN0aXZlVmlkZW9EZXRhaWxzXCI6ZmFsc2UsXCJwcm9kdWN0Q2Fyb3VzZWxJZFwiOlwiaXZQcm9kdWN0Q2Fyb3VzZWwtMDljN2UyOWMtNWJlOS00NWFkLTlmNzEtYzY4M2U4MjIwM2U0XCIsXCJmbGF0RmVlZGJhY2tQYWdlQ29udGV4dFwiOntcIm1hcmtldHBsYWNlSURcIjpcIkFUVlBES0lLWDBERVJcIixcInJlcXVlc3RJZFwiOlwiNDc1RTM0SlFWOUZOUEhKOVNTVERcIixcImN1c3RvbWVySWRcIjpcIjBcIixcInBhZ2VcIjpcIkRldGFpbFBhZ2VcIixcInBsYWNlbWVudFwiOlwiUlZQXCIsXCJsb2NhbGVcIjpcImVuX1VTXCJ9LFwic2hvd1JlbGF0ZWRQcm9kdWN0c1wiOnRydWUsXCJwb3BvdmVyTmFtZVwiOlwidnNlLWRwLWxpZ2h0Ym94LWJiYTJiMTQ1LTUzMjktNDVhNy04MzAyLThmMTQ1NGNmMjNjZVwiLFwicmVjb3JkUHJvZHVjdE1ldHJpY3NcIjpmYWxzZSxcInVzZVZlcnRpY2FsTGF5b3V0XCI6dHJ1ZSxcInNvY2lhbFNoYXJlQWN0aW9uTmFtZVwiOlwiYS1wb3BvdmVyXCIsXCJzaG93U2VnbWVudHNcIjp0cnVlLFwiaXNNb2JpbGVcIjpmYWxzZSxcInBsYXllckNvbmZpZ1wiOntcInJlcXVlc3RNZXRhZGF0YVwiOntcIm1hcmtldHBsYWNlSWRcIjpcIkFUVlBES0lLWDBERVJcIixcImNsaWVudElkXCI6XCJWU0UtVVNcIixcIm1ldGhvZFwiOlwiZGVza3RvcF93ZWIuRGV0YWlsLnZzZV9sYlwiLFwicmVxdWVzdElkXCI6XCI0NzVFMzRKUVY5Rk5QSEo5U1NURFwiLFwicGFnZUFzaW5cIjpcIkIwMUdLUUkzOTJcIixcInNlc3Npb25JZFwiOlwiMTQ1LTg5NzUzOTAtNTA2NDExM1wifSxcImluaXRpYWxWaWRlb1wiOlwiXCIsXCJ1c2VCdXlCb3hcIjpmYWxzZSxcInBlcnNpc3RDb250cm9sc0R1cmluZ0FkVVhcIjpmYWxzZSxcInN1c2hpTWV0cmljc0NvbmZpZ1wiOntcImlzUm9ib3RcIjpmYWxzZSxcImNsaWVudElkXCI6XCJWU0UtVVNcIixcInZpZGVvQXNpbkxpc3RcIjpcIlwiLFwid2VibGFiSWRzXCI6XCJWU0VfQlJJTEFfVFdJVENIXzE2MjQ5MzpDLFZTRV9TVVNISV9NRVRSSUNTXzE4NTQ5MzpUMSxWU0VfUlZQX0FTU09DSUFURV9UQUdfMTkwNzg2OlQxLEFNQVpPTkxJVkVfVlNFX0lOVEVHUkFUSU9OXzE4ODkyNzpDLFZTRV9HQVRFX0lOVkFMSURfUkVRVUVTVF9JTlZFU1RJR0FUSU9OXzE5ODg5NzpDLFZTRV9CUklMQV9IRUFSVEJFQVRfMjAwNDkzOlQxLFZTRV9WQUxVRV9PRl9WSURFT1NfUlZTXzIwMDMyODpDLFZTRV9WQUxVRV9PRl9WSURFT1NfMjAxNDM5OkMsVlNFX0RJU1RSSUJVVElPTl9ITFNfVklERU9TXzIyMTcwMzpUMVwiLFwiZXZlbnRTb3VyY2VcIjpcIlBsYXllclwiLFwic2Vzc2lvbklkXCI6XCIxNDUtODk3NTM5MC01MDY0MTEzXCIsXCJyZWZNYXJrZXJzXCI6XCJcIixcInBsYWNlbWVudENvbnRleHRcIjpcImRlc2t0b3Bfd2ViLkRldGFpbC52c2VfbGJcIixcIm1hcmtldHBsYWNlSWRcIjpcIkFUVlBES0lLWDBERVJcIixcImlzSW50ZXJuYWxcIjpmYWxzZSxcImVuZHBvaW50XCI6XCJodHRwczovL3VuYWdpLW5hLmFtYXpvbi5jb20vMS9ldmVudHMvY29tLmFtYXpvbi5lZWwudnNlLm1ldHJpY3MucHJvZC5ldmVudHMudGVzdFwiLFwicmVxdWVzdElkXCI6XCI0NzVFMzRKUVY5Rk5QSEo5U1NURFwiLFwicGFnZUFzaW5cIjpcIkIwMUdLUUkzOTJcIixcImN1c3RvbWVySWRcIjpcIjBcIixcInNlc3Npb25UeXBlXCI6MX0sXCJ1c2VDYXJvdXNlbFwiOmZhbHNlLFwiYWlyeVZlcnNpb25cIjpcIlZpZGVvSlNcIixcInZpZGVvQWRzXCI6e1wibWluQ3JlYXRpdmVEdXJhdGlvbkZvclNraXBPZmZzZXRcIjoyMCxcImtleVZhbHVlUGFpcnNcIjp7fSxcInByb2ZpbGVcIjpcImFtem5fbGl2ZV9icm93c2VyXCIsXCJzZXJ2ZXJVcmxcIjpcImh0dHBzOi8vdi5hbWF6b24tYWRzeXN0ZW0uY29tL3ZhL2Z3L2dldEFkc1wiLFwibmV0d29ya0lkXCI6XCIzNzU2MDBcIixcImlzRW5naW5lRW5hYmxlZFwiOnRydWUsXCJzZWN0aW9uSWRcIjpcImF2b2QuYW1hem9uY29tLnNob3J0cy5vdGhlci5saWdodGJveFwiLFwic2tpcE9mZnNldFwiOjV9LFwiZGlzYWJsZWRWaWV3SWRzXCI6W1wicmVwbGF5SGludFwiXSxcImxhbmd1YWdlUHJlZmVyZW5jZVN0cmluZ3NcIjp7XCJza2lwQWRcIjpcIlNraXAgYWRcIixcImxlYXJuTW9yZVwiOlwiTGVhcm4gbW9yZVwiLFwic2tpcEluXCI6XCJTa2lwIGluIFwiLFwiYWRMYWJlbFwiOlwiQWR2ZXJ0aXNlbWVudFwifSxcImN1c3RvbWVySWRcIjpcIjBcIixcInR3aXRjaENvcmVcIjpmYWxzZSxcImNvbnRhaW5lcklkXCI6XCJ2c2UtZHAtbGlnaHRib3gtYmJhMmIxNDUtNTMyOS00NWE3LTgzMDItOGYxNDU0Y2YyM2NlLWF3YXBsYXllclwifSxcIm1TaG9wXCI6ZmFsc2UsXCJzb2NpYWxTaGFyZUlkXCI6XCJ2c2UtZHAtbGlnaHRib3gtYmJhMmIxNDUtNTMyOS00NWE3LTgzMDItOGYxNDU0Y2YyM2NlLXNvY2lhbHNoYXJlXCIsXCJwb3BvdmVyVHJpZ2dlcklkXCI6XCJ2c2UtZHAtbGlnaHRib3gtYmJhMmIxNDUtNTMyOS00NWE3LTgzMDItOGYxNDU0Y2YyM2NlcG9wb3Zlci10cmlnZ2VyXCIsXCJkaXNwbGF5Q2Fyb3VzZWxcIjpmYWxzZSxcInJlbGF0ZWRQcm9kdWN0c0NvbXBvbmVudENvbmZpZ1wiOntcImZlYXR1cmVzXCI6e1wiZmVhdHVyZXNcIjp7XCJjc3NDbGFzc1wiOlwidnNlLXJlbGF0ZWQtcHJvZHVjdC1jb250YWluZXIgdnNlLWhpZGUtcHJvZHVjdC1jYXJvdXNlbFwiLFwiZGlzcGxheVN0cmF0ZWd5XCI6XCJ2c2UtcnBcIixcImV4cGxpY2l0bHlFbWl0UGFnZVN0YXRlXCI6XCJ0cnVlXCIsXCJjb250ZXh0XCI6XCJkcF92c2VfcnBjXCIsXCJwYWdlc3RhdGVcIjpcImRwX3ZzZV9ycGNcIn19LFwiYXVpQXNzZXRzXCI6W1wiUHJvZHVjdENhcm91c2VsXCJdLFwiaWRcIjpcImRpdi1yZWxhdGVkcHJvZHVjdHNcIixcImJpbmRlclwiOlwicmVsYXRlZHByb2R1Y3RzXCIsXCJ0eXBlXCI6XCJyZWxhdGVkcHJvZHVjdHNcIn0sXCJyZWxhdGVkUHJvZHVjdHNQYWdlQ29udGV4dFwiOntcIm1hcmtldHBsYWNlSURcIjpcIkFUVlBES0lLWDBERVJcIixcInJlcXVlc3RJZFwiOlwiNDc1RTM0SlFWOUZOUEhKOVNTVERcIixcImN1c3RvbWVySWRcIjpcIjBcIixcInBhZ2VcIjpcIkRldGFpbFBhZ2VcIixcInBsYWNlbWVudFwiOlwiUlZQXCIsXCJsb2NhbGVcIjpcImVuX1VTXCIsXCJkZXZpY2VcIjpcIkRlc2t0b3BcIn0sXCJhdXRvcGxheVwiOmZhbHNlLFwic2hvd1Byb2R1Y3RDYXJvdXNlbFwiOmZhbHNlLFwiZmxhdEZlZWRiYWNrQ29tcG9uZW50Q29uZmlnXCI6e1wiZmVhdHVyZXNcIjp7XCJmZWF0dXJlc1wiOntcImVuZHBvaW50XCI6XCJodHRwczovL3VuYWdpLW5hLmFtYXpvbi5jb20vMS9ldmVudHMvY29tLmFtYXpvbi5lZWwudnNlLmN1cmF0aW9uLmNvbnRlbnRhbmFseXNpc3dvcmtmbG93LmZlZWRiYWNrLnByb2QubmV4dXNcIixcImluZnJpbmdlbWVudFVybFwiOlwiL2dwL2hlbHAvcmVwb3J0cy9pbmZyaW5nZW1lbnRcIixcInBhZ2VTdGF0ZVwiOlwidnNlX2xiX2ZiXCIsXCJjb250ZXh0XCI6XCJ2c2VfbGJfZmJcIixcInJlZnRhZ3ByZWZpeFwiOlwidnNlX2xiX2ZiXCJ9fSxcImlkXCI6XCJkaXYtZmVlZGJhY2tcIixcImJpbmRlclwiOlwiZmVlZGJhY2tcIixcInR5cGVcIjpcImZlZWRiYWNrXCJ9LFwiY3VzdG9tZXJSZXZpZXdcIjpcIkN1c3RvbWVyIFJldmlld1wiLFwicGFnZUFzaW5cIjpcIkIwMUdLUUkzOTJcIixcInVzZVNlY29uZGFyeVZpZXdcIjpmYWxzZSxcImZlYXRQcm9kdWN0c1VybFwiOlwiaHR0cHM6Ly91bmFnaS1uYS5hbWF6b24uY29tLzEvZXZlbnRzL2NvbS5hbWF6b24uZWVsLnZzZS5tZXRyaWNzLnByb2QubW9uZXRpemF0aW9uXCIsXCJzaG93U2hhcmVXaWRnZXRcIjp0cnVlLFwic2hvd1ZpZGVvVm90ZXNcIjpmYWxzZX1cdTAwM0Mvc2NyaXB0Plx1MDAzQ2RpdiBpZD1cInZzZS1zcGlubmVyXCIgY2xhc3M9XCJhLXNwaW5uZXItd3JhcHBlciBhb2staGlkZGVuXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtc3Bpbm5lciBhLXNwaW5uZXItbWVkaXVtXCI+XHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0NzY3JpcHQgdHlwZT1cImEtc3RhdGVcIiBkYXRhLWEtc3RhdGU9XCJ7JnF1b3Q7a2V5JnF1b3Q7OiZxdW90O3ZzZS1kcC1ydnMtc3VzaGltZXRyaWNzY29uZmlnJnF1b3Q7fVwiPntcImlzUm9ib3RcIjpmYWxzZSxcImNsaWVudElkXCI6XCJcIixcInZpZGVvQXNpbkxpc3RcIjpcIlwiLFwid2VibGFiSWRzXCI6XCJWU0VfQlJJTEFfVFdJVENIXzE2MjQ5MzpDLFZTRV9TVVNISV9NRVRSSUNTXzE4NTQ5MzpUMSxWU0VfUlZQX0FTU09DSUFURV9UQUdfMTkwNzg2OlQxLEFNQVpPTkxJVkVfVlNFX0lOVEVHUkFUSU9OXzE4ODkyNzpDLFZTRV9HQVRFX0lOVkFMSURfUkVRVUVTVF9JTlZFU1RJR0FUSU9OXzE5ODg5NzpDLFZTRV9CUklMQV9IRUFSVEJFQVRfMjAwNDkzOlQxLFZTRV9WQUxVRV9PRl9WSURFT1NfUlZTXzIwMDMyODpDLFZTRV9WQUxVRV9PRl9WSURFT1NfMjAxNDM5OkMsVlNFX0RJU1RSSUJVVElPTl9ITFNfVklERU9TXzIyMTcwMzpUMVwiLFwiZXZlbnRTb3VyY2VcIjpcIlJWU0Nhcm91c2VsXCIsXCJzZXNzaW9uSWRcIjpcIjE0NS04OTc1MzkwLTUwNjQxMTNcIixcInJlZk1hcmtlcnNcIjpcIlwiLFwicGxhY2VtZW50Q29udGV4dFwiOlwiZGVza3RvcF93ZWIuRGV0YWlsLnZzZV9sYlwiLFwibWFya2V0cGxhY2VJZFwiOlwiQVRWUERLSUtYMERFUlwiLFwiaXNJbnRlcm5hbFwiOmZhbHNlLFwiZW5kcG9pbnRcIjpcImh0dHBzOi8vdW5hZ2ktbmEuYW1hem9uLmNvbS8xL2V2ZW50cy9jb20uYW1hem9uLmVlbC52c2UubWV0cmljcy5wcm9kLmV2ZW50cy50ZXN0XCIsXCJyZXF1ZXN0SWRcIjpcIjQ3NUUzNEpRVjlGTlBISjlTU1REXCIsXCJwYWdlQXNpblwiOlwiQjAxR0tRSTM5MlwiLFwiY3VzdG9tZXJJZFwiOlwiMFwiLFwic2Vzc2lvblR5cGVcIjoxfVx1MDAzQy9zY3JpcHQ+XHUwMDNDL2Rpdj5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPihmdW5jdGlvbihmKSB7dmFyIF9ucD0od2luZG93LlAuX25hbWVzcGFjZShcInZzZS1yZWxhdGVkLXZpZGVvLXNob3J0c1wiKSk7aWYoX25wLmd1YXJkRmF0YWwpe19ucC5ndWFyZEZhdGFsKGYpKF9ucCk7fWVsc2V7ZihfbnApO319KGZ1bmN0aW9uKFApIHtcbiAgICAgIFxuXG5cblxuXG5cblxudHJ5IHtcbiAgICB2YXIgcnZwU3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICB2YXIgaXNNZXRyaWNSZWNvcmRlZCA9IGZhbHNlO1xuICAgIHZhciBfbWV0cmljVmlld0xvYWRlZCA9ICd2c2U6Y3NtOnZzZS1yZWwtdmlkZW9zLWNhcm91c2VsOmludmlldzpub3Rsb2FkZWQ6Y291bnQnO1xuICAgIHZhciBfbWV0cmljVGltZVRvTG9hZGVkID0gJ3ZzZTpjc206dnNlLXJlbC12aWRlb3MtY2Fyb3VzZWw6aW52aWV3OmxvYWRlZDp0aW1lJztcbiAgICB2YXIgX21ldHJpY1RpbWVUb05vdExvYWRlZCA9ICd2c2U6Y3NtOnZzZS1yZWwtdmlkZW9zLWNhcm91c2VsOmludmlldzpub3Rsb2FkZWQ6dGltZSc7XG4gICAgdmFyIF9tZXRyaWNUaW1lVG9WaWV3ID0gJ3ZzZTpjc206dnNlLXJlbC12aWRlb3MtY2Fyb3VzZWw6aW52aWV3OnRpbWUnO1xuICAgIHZhciBfdW5pdmVyc2FsU3VzaGlFbmRwb2ludCA9IFwiaHR0cHM6Ly91bmFnaS1uYS5hbWF6b24uY29tLzEvZXZlbnRzL2NvbS5hbWF6b24uZWVsLnZzZS5tZXRyaWNzLnByb2QuZXZlbnRzLnRlc3RcIjtcblxuICAgIFAud2hlbignQScsICdyZWFkeScpLmV4ZWN1dGUoZnVuY3Rpb24oQSkge1xuICAgICAgICBmdW5jdGlvbiBfaXNTY3JvbGxlZEludG9WaWV3IChlbCkge1xuICAgICAgICAgICAgdmFyICRlbGVtID0gQS4kKGVsKTtcbiAgICAgICAgICAgIC8vVXNlZCBzcGVjaWZpYyBwcm9wZXJ0eSBiZWNhdXNlIEEuJCgpIHJldHVybnMgYW4gb2JqZWN0IHdpdGggcHJvcGVydGllc1xuICAgICAgICAgICAgaWYgKCgkZWxlbS5vZmZzZXQoKSAhPT0gbnVsbCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgJHdpbmRvdyA9IEEuJCh3aW5kb3cpO1xuICAgICAgICAgICAgICAgIHZhciBzY3JlZW5WaWV3VG9wID0gJHdpbmRvdy5zY3JvbGxUb3AoKTtcbiAgICAgICAgICAgICAgICB2YXIgc2NyZWVuVmlld0JvdHRvbSA9IHNjcmVlblZpZXdUb3AgKyAkd2luZG93LmhlaWdodCgpO1xuICAgICAgICAgICAgICAgIHZhciBlbGVtVG9wID0gJGVsZW0ub2Zmc2V0KCkudG9wO1xuICAgICAgICAgICAgICAgIHZhciBlbGVtQm90dG9tID0gZWxlbVRvcCArICRlbGVtLmhlaWdodCgpO1xuICAgICAgICAgICAgICAgIHJldHVybiAgKChlbGVtQm90dG9tIFx1MDAzQz0gc2NyZWVuVmlld0JvdHRvbSkgJiYgKGVsZW1Ub3AgPj0gc2NyZWVuVmlld1RvcCkpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgdmFyIG1ha2VTdXNoaVBheWxvYWRCdWlsZGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGJ1aWxkZXIgPSBmdW5jdGlvbiAobWV0cmljRGF0YSkge1xuICAgICAgICAgICAgICAgIG1ldHJpY0RhdGEuZXZlbnRJZCA9IChNYXRoLnJhbmRvbSgpICogMTAwMDAwMDAwMDAwMDAwMDAwMDApLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgbWV0cmljRGF0YS5ldmVudFNvdXJjZSA9IFwiUlZTQ2Fyb3VzZWxcIjtcbiAgICAgICAgICAgICAgICBtZXRyaWNEYXRhLnJlcXVlc3RJZCA9IFwiNDc1RTM0SlFWOUZOUEhKOVNTVERcIjtcbiAgICAgICAgICAgICAgICBtZXRyaWNEYXRhLnNlc3Npb25JZCA9IFwiMTQ1LTg5NzUzOTAtNTA2NDExM1wiO1xuICAgICAgICAgICAgICAgIG1ldHJpY0RhdGEuc2Vzc2lvblR5cGUgPSAxOyAvLyBEdW1teSB2YWx1ZSBmb3IgbG9hZCB0ZXN0XG4gICAgICAgICAgICAgICAgbWV0cmljRGF0YS5jdXN0b21lcklkID0gXCIwXCI7XG5cbiAgICAgICAgICAgICAgICBtZXRyaWNEYXRhLnBsYWNlbWVudENvbnRleHQgPSBcImRlc2t0b3Bfd2ViLkRldGFpbC52c2VfbGJcIjtcbiAgICAgICAgICAgICAgICBtZXRyaWNEYXRhLnRpdGxlU2Vzc2lvbklkID0gMDtcbiAgICAgICAgICAgICAgICBtZXRyaWNEYXRhLnZpZGVvQXNpbiA9IDA7XG4gICAgICAgICAgICAgICAgbWV0cmljRGF0YS5wYWdlQXNpbiA9IFwiQjAxR0tRSTM5MlwiO1xuICAgICAgICAgICAgICAgIG1ldHJpY0RhdGEudXNlckFnZW50RGF0YSA9IG5hdmlnYXRvci51c2VyQWdlbnQ7XG4gICAgICAgICAgICAgICAgbWV0cmljRGF0YS5tYXJrZXRwbGFjZUlkID0gXCJBVFZQREtJS1gwREVSXCI7XG5cbiAgICAgICAgICAgICAgICBtZXRyaWNEYXRhLnJlZk1hcmtlcnMgPSBcIlwiO1xuICAgICAgICAgICAgICAgIG1ldHJpY0RhdGEud2VibGFiSWRzID0gXCJWU0VfQlJJTEFfVFdJVENIXzE2MjQ5MzpDLFZTRV9TVVNISV9NRVRSSUNTXzE4NTQ5MzpUMSxWU0VfUlZQX0FTU09DSUFURV9UQUdfMTkwNzg2OlQxLEFNQVpPTkxJVkVfVlNFX0lOVEVHUkFUSU9OXzE4ODkyNzpDLFZTRV9HQVRFX0lOVkFMSURfUkVRVUVTVF9JTlZFU1RJR0FUSU9OXzE5ODg5NzpDLFZTRV9CUklMQV9IRUFSVEJFQVRfMjAwNDkzOlQxLFZTRV9WQUxVRV9PRl9WSURFT1NfUlZTXzIwMDMyODpDLFZTRV9WQUxVRV9PRl9WSURFT1NfMjAxNDM5OkMsVlNFX0RJU1RSSUJVVElPTl9ITFNfVklERU9TXzIyMTcwMzpUMVwiO1xuICAgICAgICAgICAgICAgIG1ldHJpY0RhdGEuaXNJbnRlcm5hbCA9IFwiZmFsc2VcIjtcbiAgICAgICAgICAgICAgICBtZXRyaWNEYXRhLmlzUm9ib3QgPSBcImZhbHNlXCI7XG5cbiAgICAgICAgICAgICAgICBtZXRyaWNEYXRhLnRpbWVzdGFtcCA9IG5ldyBEYXRlKCk7XG5cbiAgICAgICAgICAgICAgICB2YXIgcmVxdWVzdFBheWxvYWQgPSB7XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50czogW3tcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IG1ldHJpY0RhdGFcbiAgICAgICAgICAgICAgICAgICAgfV1cbiAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3RQYXlsb2FkO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiBidWlsZGVyO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGVtaXRTdXNoaU1ldHJpYyA9IGZ1bmN0aW9uIChtZXRyaWNQYXlsb2FkLCBtZXRyaWNFbmRwb2ludCwgcmV0cnlDb3VudCkge1xuICAgICAgICAgICAgdmFyIHJldHJ5TGltaXQgPSAzO1xuICAgICAgICAgICAgcmV0cnlDb3VudCA9IHJldHJ5Q291bnQgfHwgMDtcbiAgICAgICAgICAgIGlmIChyZXRyeUNvdW50ID49IHJldHJ5TGltaXQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8qXG4gICAgICAgICAgICAgIHJlbW92ZSAnXFwnIGJlaW5nIGFkZGVkIGFmdGVyIHN0cmluZ2lmeVxuICAgICAgICAgICAgICBlLmcuIHBheWxvYWQgPT4ge1wianNvbl9wYXlsb2FkXCI6e1wiaXNNc2hvcFwiOmZhbHNlLFwidGl0bGVcIjpcInNvbWUgdGVzdCB0aXRsZSB3aXRoIFwicXVvdGVcIlwifX1cbiAgICAgICAgICAgICAgSlNPTi5zdHJpbmdpZnkocGF5bG9hZCkgPT4ge1wianNvbl9wYXlsb2FkXCI6e1wiaXNNc2hvcFwiOmZhbHNlLFwidGl0bGVcIjpcInNvbWUgdGVzdCB0aXRsZSB3aXRoIFxcXCJxdW90ZVxcXCJcIn19XG4gICAgICAgICAgICAqL1xuICAgICAgICAgICAgdmFyIHN1c2hpUGF5bG9hZCA9IEpTT04uc3RyaW5naWZ5KG1ldHJpY1BheWxvYWQpLnJlcGxhY2UoL1xcXFxcXFxcL2csIFwiXCIpO1xuICAgICAgICAgICAgdmFyIG9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgcGFyYW1zOiBzdXNoaVBheWxvYWQsXG4gICAgICAgICAgICAgICAgcGFyYW1zRm9ybWF0OiAnanNvbicsXG4gICAgICAgICAgICAgICAgY29udGVudFR5cGU6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04JyxcbiAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3JIYW5kbGVyXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAvKlxuICAgICAgICAgICAgICBub3RlZCBpbiBodHRwczovL3NhZ2UuYW1hem9uLmNvbS9wb3N0cy80NjgwNDYsIGlPUyB+MTEgYW5kIHVwLCBpT1MgaXMgbm8gbG9uZ2VyXG4gICAgICAgICAgICAgIGdyYW50aW5nIGFwcHMgY2VydGFpbiBwZXJtaXNzaW9ucyBieSBkZWZhdWx0LCBzbyBzZW5kQmVhY29uIGlzIHJlc3RyaWN0ZWQgZXZlblxuICAgICAgICAgICAgICB0aG91Z2ggaXQgaXMgc3VwcG9ydGVkXG4gICAgICAgICAgICAqL1xuICAgICAgICAgICAgdmFyIGlzSXBob25lID0gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaChuZXcgUmVnRXhwKCdpUGhvbmUnLCAnaScpKTtcbiAgICAgICAgICAgIHZhciBpc01zaG9wID0gZmFsc2U7XG4gICAgICAgICAgICBQLm5vdygnbWFzaCcpLmV4ZWN1dGUoJ3ZzZS1kZXRlY3QtbXNob3AnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBpc01zaG9wID0gdHJ1ZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdmFyIGlzSXBob25lTXNob3AgPSAoaXNJcGhvbmUgIT09IG51bGwpICYmIGlzTXNob3A7XG5cbiAgICAgICAgICAgIGlmIChuYXZpZ2F0b3IgJiYgbmF2aWdhdG9yLnNlbmRCZWFjb24gJiYgIWlzSXBob25lTXNob3ApIHtcbiAgICAgICAgICAgICAgICBuYXZpZ2F0b3Iuc2VuZEJlYWNvbihtZXRyaWNFbmRwb2ludCwgc3VzaGlQYXlsb2FkKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgQS5wb3N0KG1ldHJpY0VuZHBvaW50LCBvcHRpb25zKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHZhciBlcnJvckhhbmRsZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgZW1pdFN1c2hpTWV0cmljKHN1c2hpUGF5bG9hZCwgbWV0cmljRW5kcG9pbnQsICsrcmV0cnlDb3VudCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHZzZUNzbVdpZGdldExvYWRlZE1ldHJpY3MgKCkge1xuICAgICAgICAgICAgdmFyIGpxdWVyeUVsZW1JZCA9IFwiI3ZzZS1yZWwtdmlkZW9zLWNhcm91c2VsXCI7XG4gICAgICAgICAgICB2YXIgc2hvdWxkVXNlU3VzaGkgPSBfdW5pdmVyc2FsU3VzaGlFbmRwb2ludCAhPT0gXCJcIjtcbiAgICAgICAgICAgIGlmIChpc01ldHJpY1JlY29yZGVkKSB7XG4gICAgICAgICAgICAgICAgQS5vZmYoJ3Njcm9sbCcsIHZzZUNzbVdpZGdldExvYWRlZE1ldHJpY3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYoIWlzTWV0cmljUmVjb3JkZWQgJiYgX2lzU2Nyb2xsZWRJbnRvVmlldyhBLiQoanF1ZXJ5RWxlbUlkKSkpIHtcbiAgICAgICAgICAgICAgICB2YXIgYnVpbGRTdXNoaVBheWxvYWQ7XG4gICAgICAgICAgICAgICAgYnVpbGRTdXNoaVBheWxvYWQgPSBtYWtlU3VzaGlQYXlsb2FkQnVpbGRlcigpO1xuICAgICAgICAgICAgICAgIHZhciB1ZSA9IHdpbmRvdy51ZSB8fCAnJ1xuICAgICAgICAgICAgICAgIGlmICh1ZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgd2lkZ2V0SW5WaWV3VGltZSA9IEEubm93KCkgLSBydnBTdGFydFRpbWU7XG4gICAgICAgICAgICAgICAgICAgIGlmICghQS4kKCcjdnNlLXNwaW5uZXInKS5oYXNDbGFzcygnYW9rLWhpZGRlbicpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1ZS5jb3VudChfbWV0cmljVmlld0xvYWRlZCwgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB1ZS5jb3VudChfbWV0cmljVGltZVRvTm90TG9hZGVkLCB3aWRnZXRJblZpZXdUaW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzaG91bGRVc2VTdXNoaSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYXlsb2FkID0gYnVpbGRTdXNoaVBheWxvYWQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudE5hbWU6IFwicnZzLndpZGdldFZpZXdlZE5vdExvYWRlZENvdW50XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cmluZ1BheWxvYWQ6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludFBheWxvYWQ6IDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbWl0U3VzaGlNZXRyaWMocGF5bG9hZCwgX3VuaXZlcnNhbFN1c2hpRW5kcG9pbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBheWxvYWQgPSBidWlsZFN1c2hpUGF5bG9hZCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50TmFtZTogXCJydnMud2lkZ2V0Vmlld2VkTm90TG9hZGVkRHVyYXRpb25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyaW5nUGF5bG9hZDogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW50UGF5bG9hZDogd2lkZ2V0SW5WaWV3VGltZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVtaXRTdXNoaU1ldHJpYyhwYXlsb2FkLCBfdW5pdmVyc2FsU3VzaGlFbmRwb2ludCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1ZS5jb3VudChfbWV0cmljVmlld0xvYWRlZCwgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB1ZS5jb3VudChfbWV0cmljVGltZVRvTG9hZGVkLCB3aWRnZXRJblZpZXdUaW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzaG91bGRVc2VTdXNoaSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYXlsb2FkID0gYnVpbGRTdXNoaVBheWxvYWQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudE5hbWU6IFwicnZzLndpZGdldFZpZXdlZEFuZExvYWRlZENvdW50XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cmluZ1BheWxvYWQ6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludFBheWxvYWQ6IDBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbWl0U3VzaGlNZXRyaWMocGF5bG9hZCwgX3VuaXZlcnNhbFN1c2hpRW5kcG9pbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBheWxvYWQgPSBidWlsZFN1c2hpUGF5bG9hZCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50TmFtZTogXCJydnMud2lkZ2V0Vmlld2VkQW5kTG9hZGVkRHVyYXRpb25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyaW5nUGF5bG9hZDogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW50UGF5bG9hZDogd2lkZ2V0SW5WaWV3VGltZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVtaXRTdXNoaU1ldHJpYyhwYXlsb2FkLCBfdW5pdmVyc2FsU3VzaGlFbmRwb2ludCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdWUuY291bnQoX21ldHJpY1RpbWVUb1ZpZXcsIHdpZGdldEluVmlld1RpbWUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoc2hvdWxkVXNlU3VzaGkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYXlsb2FkID0gYnVpbGRTdXNoaVBheWxvYWQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50TmFtZTogXCJydnMucGFnZUxvYWRUb1dpZGdldFZpZXdlZER1cmF0aW9uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyaW5nUGF5bG9hZDogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnRQYXlsb2FkOiB3aWRnZXRJblZpZXdUaW1lXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVtaXRTdXNoaU1ldHJpYyhwYXlsb2FkLCBfdW5pdmVyc2FsU3VzaGlFbmRwb2ludCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaXNNZXRyaWNSZWNvcmRlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgQS5vbignc2Nyb2xsJywgdnNlQ3NtV2lkZ2V0TG9hZGVkTWV0cmljcyk7XG4gICAgfSk7XG59IGNhdGNoIChleGNlcHRpb24pIHtcbiAgICBpZiAod2luZG93LnVlTG9nRXJyb3IpIHtcbiAgICAgICAgdmFyIGFkZGl0aW9uYWxJbmZvID1cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBsb2dMZXZlbDogJ1dBUk5JTkcnLFxuICAgICAgICAgICAgICAgIGF0dHJpYnV0aW9uOiAndnNlLWNsaWVudC1tZXRyaWNzJyxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnRmFpbGVkIHRvIGluaXRpYWxpemUgY2xpZW50IHNpZGUgbWV0cmljcydcbiAgICAgICAgICAgIH07XG4gICAgICAgIHdpbmRvdy51ZUxvZ0Vycm9yKGV4Y2VwdGlvbiwgYWRkaXRpb25hbEluZm8pO1xuICAgIH1cbn1cblxuXG4gICAgICBcbiAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgUC53aGVuKCdBJywnYS1jYXJvdXNlbC1mcmFtZXdvcmsnLCAnYS1tb2RhbCcsICdhLWRyb3Bkb3duJywgJ2EtYnV0dG9uJywgJzNwLXByb21pc2UnLCAnVlNFLVJWUy1jbGllbnQnLCAncmVhZHknKVxuICAgICAgICAgIC5leGVjdXRlKGZ1bmN0aW9uKEEsIGNmLCBtb2RhbCwgZGQsIGIsIHByb21pc2UsIHZzZUNsaWVudCkge1xuICAgICAgICAgICAgdnNlQ2xpZW50LmluaXRpYWxpemVDbGllbnQoQSwgY2YsIG1vZGFsLCBkZCwgYiwgcHJvbWlzZSwgbnVsbCwgcnZwU3RhcnRUaW1lKTtcbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgXG4gICAgfSkpO1x1MDAzQy9zY3JpcHQ+XHUwMDNDc2NyaXB0PlxuICAod2luZG93LkFtYXpvblVJUGFnZUpTID8gQW1hem9uVUlQYWdlSlMgOiBQKS5sb2FkLmpzKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjErUjBPeGFTREwuanM/QVVJQ2xpZW50cy9WU0VSZWxhdGVkVmlkZW9zQ2xpZW50QXNzZXRzJyk7XG4gICh3aW5kb3cuQW1hem9uVUlQYWdlSlMgPyBBbWF6b25VSVBhZ2VKUyA6IFApLmxvYWQuanMoJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS8wMUluWWxNaGc0TC5fUkN8MDF4NGdpVHkrdUwuanMsNDExaWQxMFl5VkwuanMsMDFyOUxwVDZwYkwuanMsNDFvUFJBMmd4WkwuanMsMTF5QXFxWHpLWkwuanMsODFoVURBd0tNQkwuanMsNjFlQlFHVUg4OUwuanMsMDFoU2dlYTRpVkwuanMsMDE2TnNoQ2JlUEwuanMsMDFOK1RKRE00Z0wuanNfLmpzP0FVSUNsaWVudHMvQnJpbGEnKTtcblx1MDAzQy9zY3JpcHQ+XG5cblxuXG5cblxuICBcblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cblxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0NkaXYgaWQ9XCJpbXBvcnRhbnRJbmZvcm1hdGlvbl9mZWF0dXJlX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiaW1wb3J0YW50SW5mb3JtYXRpb25cIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG4gICAgXG5cblxuXG5cblxuICBcblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cblxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcblxuXG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgXG5cblxuICAgICAgICAgICAgXG5cblxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG4gICAgICAgICAgICBcblxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ2RpdiBpZD1cInRlY2huaWNhbFNwZWNpZmljYXRpb25zX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJ0ZWNobmljYWxTcGVjaWZpY2F0aW9uc1wiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtZGl2aWRlciBhLWRpdmlkZXItc2VjdGlvblwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtZGl2aWRlci1pbm5lclwiPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDaDI+UHJvZHVjdCBzcGVjaWZpY2F0aW9uc1x1MDAzQy9oMj5cbiAgICAgICAgXG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbWljcm9cIj5cbiAgICAgICAgICAgIFxuXG5cblxuICAgIFxuICAgICAgIFxuICAgIFxuXG5cbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlxuICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuNiBhLXNwYWNpbmctYmFzZSBhLXdzLXNwYW42XCI+XG4gICAgICAgICAgICAgICAgXG5cblxuXG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFx1MDAzQ2g1IGNsYXNzPVwiYS1zcGFjaW5nLXNtYWxsIGEtc3BhY2luZy10b3Atc21hbGxcIj5KZXdlbHJ5IEluZm9ybWF0aW9uXHUwMDNDL2g1PlxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQ3RhYmxlIGlkPVwidGVjaG5pY2FsU3BlY2lmaWNhdGlvbnNfc2VjdGlvbl8xXCIgY2xhc3M9XCJhLWtleXZhbHVlIGEtc3BhY2luZy1taW5pXCI+XG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcdTAwM0N0Ym9keT5cdTAwM0N0cj5cbiAgICAgICAgICAgICAgICBcdTAwM0N0aCBjbGFzcz1cImEtc3BhbjUgYS1zaXplLWJhc2VcIj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgQnJhbmQsIFNlbGxlciwgb3IgQ29sbGVjdGlvbiBOYW1lXG4gICAgXG5cblxuXG4gICAgICAgICAgICAgICAgXHUwMDNDL3RoPlxuICAgICAgICAgICAgICAgIFx1MDAzQ3RkIGNsYXNzPVwiYS1zcGFuNyBhLXNpemUtYmFzZVwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICBLZW1zdG9uZVxuICAgIFxuXG5cblxuICAgICAgICAgICAgICAgIFx1MDAzQy90ZD5cbiAgICAgICAgICAgIFx1MDAzQy90cj5cbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDdHI+XG4gICAgICAgICAgICAgICAgXHUwMDNDdGggY2xhc3M9XCJhLXNwYW41IGEtc2l6ZS1iYXNlXCI+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG4gICAgXG4gICAgICAgIFxuXG4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLXBvcG92ZXJcIiBkYXRhLWEtcG9wb3Zlcj1cInsmcXVvdDtjYWNoZSZxdW90OzomcXVvdDt0cnVlJnF1b3Q7LCZxdW90O25hbWUmcXVvdDs6JnF1b3Q7TWV0YWwgc3RhbXAmcXVvdDssJnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7NTAwJnF1b3Q7LCZxdW90O2hlYWRlciZxdW90OzomcXVvdDtNZXRhbCBzdGFtcCZxdW90OywmcXVvdDtwb3NpdGlvbiZxdW90OzomcXVvdDt0cmlnZ2VyUmlnaHQmcXVvdDssJnF1b3Q7c2Nyb2xsYWJsZSZxdW90OzomcXVvdDt0cnVlJnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvZ3AvcHJvZHVjdC9hamF4LWhhbmRsZXJzL3RlY2gtc3BlYy1wb3BvdmVyLWNvbnRlbnRzLmh0bWwvcmVmPWRwX3NvZnRfdGVjaF9zcGVjP2tleUxvb2tVcD1qZXdlbHJ5X2hlbHBfYXR0ci1uYW1lX21ldGFsX3N0YW1wJnF1b3Q7fVwiPlxuICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWwgYS1wb3BvdmVyLXRyaWdnZXJcIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lclwiIGhyZWY9XCIvZ3AvcHJvZHVjdC9hamF4LWhhbmRsZXJzL3RlY2gtc3BlYy1wb3BvdmVyLWNvbnRlbnRzLmh0bWwvcmVmPWRwX3NvZnRfdGVjaF9zcGVjP2tleUxvb2tVcD0vZ3AvcHJvZHVjdC9hamF4LWhhbmRsZXJzL3RlY2gtc3BlYy1wb3BvdmVyLWNvbnRlbnRzLmh0bWwvcmVmPWRwX3NvZnRfdGVjaF9zcGVjP2tleUxvb2tVcD1qZXdlbHJ5X2hlbHBfYXR0ci1uYW1lX21ldGFsX3N0YW1wXCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBzdHlsZT1cIndoaXRlLXNwYWNlOiBub3dyYXBcIj5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBzdHlsZT1cIndoaXRlLXNwYWNlOiBub3JtYWxcIj5NZXRhbCBzdGFtcFx1MDAzQy9zcGFuPu+7v1x1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXBvcG92ZXJcIiByb2xlPVwiaW1nXCI+XHUwMDNDL2k+XG4gICAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgICAgICAgICBcdTAwM0MvYT5cbiAgICAgICAgXHUwMDNDL3NwYW4+XG4gICAgXG4gICAgXG5cblxuXG4gICAgICAgICAgICAgICAgXHUwMDNDL3RoPlxuICAgICAgICAgICAgICAgIFx1MDAzQ3RkIGNsYXNzPVwiYS1zcGFuNyBhLXNpemUtYmFzZVwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICBOb3Qgc3RhbXBlZFxuICAgIFxuXG5cblxuICAgICAgICAgICAgICAgIFx1MDAzQy90ZD5cbiAgICAgICAgICAgIFx1MDAzQy90cj5cbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDdHI+XG4gICAgICAgICAgICAgICAgXHUwMDNDdGggY2xhc3M9XCJhLXNwYW41IGEtc2l6ZS1iYXNlXCI+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG4gICAgXG4gICAgICAgIFxuXG4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLXBvcG92ZXJcIiBkYXRhLWEtcG9wb3Zlcj1cInsmcXVvdDtjYWNoZSZxdW90OzomcXVvdDt0cnVlJnF1b3Q7LCZxdW90O25hbWUmcXVvdDs6JnF1b3Q7TWV0YWwmcXVvdDssJnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7NTAwJnF1b3Q7LCZxdW90O2hlYWRlciZxdW90OzomcXVvdDtNZXRhbCZxdW90OywmcXVvdDtwb3NpdGlvbiZxdW90OzomcXVvdDt0cmlnZ2VyUmlnaHQmcXVvdDssJnF1b3Q7c2Nyb2xsYWJsZSZxdW90OzomcXVvdDt0cnVlJnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvZ3AvcHJvZHVjdC9hamF4LWhhbmRsZXJzL3RlY2gtc3BlYy1wb3BvdmVyLWNvbnRlbnRzLmh0bWwvcmVmPWRwX3NvZnRfdGVjaF9zcGVjP2tleUxvb2tVcD1qZXdlbHJ5X2hlbHBfYXR0ci1uYW1lX21ldGFsX3R5cGUmcXVvdDt9XCI+XG4gICAgICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBhLXBvcG92ZXItdHJpZ2dlclwiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCIgaHJlZj1cIi9ncC9wcm9kdWN0L2FqYXgtaGFuZGxlcnMvdGVjaC1zcGVjLXBvcG92ZXItY29udGVudHMuaHRtbC9yZWY9ZHBfc29mdF90ZWNoX3NwZWM/a2V5TG9va1VwPS9ncC9wcm9kdWN0L2FqYXgtaGFuZGxlcnMvdGVjaC1zcGVjLXBvcG92ZXItY29udGVudHMuaHRtbC9yZWY9ZHBfc29mdF90ZWNoX3NwZWM/a2V5TG9va1VwPWpld2VscnlfaGVscF9hdHRyLW5hbWVfbWV0YWxfdHlwZVwiPlxuICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gc3R5bGU9XCJ3aGl0ZS1zcGFjZTogbm93cmFwXCI+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gc3R5bGU9XCJ3aGl0ZS1zcGFjZTogbm9ybWFsXCI+TWV0YWxcdTAwM0Mvc3Bhbj7vu79cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wb3BvdmVyXCIgcm9sZT1cImltZ1wiPlx1MDAzQy9pPlxuICAgICAgICAgICAgICAgIFx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgXHUwMDNDL2E+XG4gICAgICAgIFx1MDAzQy9zcGFuPlxuICAgIFxuICAgIFxuXG5cblxuICAgICAgICAgICAgICAgIFx1MDAzQy90aD5cbiAgICAgICAgICAgICAgICBcdTAwM0N0ZCBjbGFzcz1cImEtc3BhbjcgYS1zaXplLWJhc2VcIj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgcm9zZS1nb2xkLXBsYXRlZC1iYXNlXG4gICAgXG5cblxuXG4gICAgICAgICAgICAgICAgXHUwMDNDL3RkPlxuICAgICAgICAgICAgXHUwMDNDL3RyPlxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcdTAwM0N0cj5cbiAgICAgICAgICAgICAgICBcdTAwM0N0aCBjbGFzcz1cImEtc3BhbjUgYS1zaXplLWJhc2VcIj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgTWF0ZXJpYWxcbiAgICBcblxuXG5cbiAgICAgICAgICAgICAgICBcdTAwM0MvdGg+XG4gICAgICAgICAgICAgICAgXHUwMDNDdGQgY2xhc3M9XCJhLXNwYW43IGEtc2l6ZS1iYXNlXCI+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIE5BXG4gICAgXG5cblxuXG4gICAgICAgICAgICAgICAgXHUwMDNDL3RkPlxuICAgICAgICAgICAgXHUwMDNDL3RyPlxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcdTAwM0N0cj5cbiAgICAgICAgICAgICAgICBcdTAwM0N0aCBjbGFzcz1cImEtc3BhbjUgYS1zaXplLWJhc2VcIj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgR2VtIFR5cGVcbiAgICBcblxuXG5cbiAgICAgICAgICAgICAgICBcdTAwM0MvdGg+XG4gICAgICAgICAgICAgICAgXHUwMDNDdGQgY2xhc3M9XCJhLXNwYW43IGEtc2l6ZS1iYXNlXCI+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIE5BXG4gICAgXG5cblxuXG4gICAgICAgICAgICAgICAgXHUwMDNDL3RkPlxuICAgICAgICAgICAgXHUwMDNDL3RyPlxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcdTAwM0N0cj5cbiAgICAgICAgICAgICAgICBcdTAwM0N0aCBjbGFzcz1cImEtc3BhbjUgYS1zaXplLWJhc2VcIj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgSXRlbSBMZW5ndGhcbiAgICBcblxuXG5cbiAgICAgICAgICAgICAgICBcdTAwM0MvdGg+XG4gICAgICAgICAgICAgICAgXHUwMDNDdGQgY2xhc3M9XCJhLXNwYW43IGEtc2l6ZS1iYXNlXCI+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIDUgaW5jaGVzXG4gICAgXG5cblxuXG4gICAgICAgICAgICAgICAgXHUwMDNDL3RkPlxuICAgICAgICAgICAgXHUwMDNDL3RyPlxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcdTAwM0N0cj5cbiAgICAgICAgICAgICAgICBcdTAwM0N0aCBjbGFzcz1cImEtc3BhbjUgYS1zaXplLWJhc2VcIj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgSGVpZ2h0XG4gICAgXG5cblxuXG4gICAgICAgICAgICAgICAgXHUwMDNDL3RoPlxuICAgICAgICAgICAgICAgIFx1MDAzQ3RkIGNsYXNzPVwiYS1zcGFuNyBhLXNpemUtYmFzZVwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICAxLjU3IGluY2hlc1xuICAgIFxuXG5cblxuICAgICAgICAgICAgICAgIFx1MDAzQy90ZD5cbiAgICAgICAgICAgIFx1MDAzQy90cj5cbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDdHI+XG4gICAgICAgICAgICAgICAgXHUwMDNDdGggY2xhc3M9XCJhLXNwYW41IGEtc2l6ZS1iYXNlXCI+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIFdpZHRoXG4gICAgXG5cblxuXG4gICAgICAgICAgICAgICAgXHUwMDNDL3RoPlxuICAgICAgICAgICAgICAgIFx1MDAzQ3RkIGNsYXNzPVwiYS1zcGFuNyBhLXNpemUtYmFzZVwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICAyLjc2IGluY2hlc1xuICAgIFxuXG5cblxuICAgICAgICAgICAgICAgIFx1MDAzQy90ZD5cbiAgICAgICAgICAgIFx1MDAzQy90cj5cbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDdHI+XG4gICAgICAgICAgICAgICAgXHUwMDNDdGggY2xhc3M9XCJhLXNwYW41IGEtc2l6ZS1iYXNlXCI+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIExlbmd0aFxuICAgIFxuXG5cblxuICAgICAgICAgICAgICAgIFx1MDAzQy90aD5cbiAgICAgICAgICAgICAgICBcdTAwM0N0ZCBjbGFzcz1cImEtc3BhbjcgYS1zaXplLWJhc2VcIj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgMy4xNSBpbmNoZXNcbiAgICBcblxuXG5cbiAgICAgICAgICAgICAgICBcdTAwM0MvdGQ+XG4gICAgICAgICAgICBcdTAwM0MvdHI+XG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFx1MDAzQ3RyPlxuICAgICAgICAgICAgICAgIFx1MDAzQ3RoIGNsYXNzPVwiYS1zcGFuNSBhLXNpemUtYmFzZVwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICBCYWNrIGZpbmRpbmdcbiAgICBcblxuXG5cbiAgICAgICAgICAgICAgICBcdTAwM0MvdGg+XG4gICAgICAgICAgICAgICAgXHUwMDNDdGQgY2xhc3M9XCJhLXNwYW43IGEtc2l6ZS1iYXNlXCI+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIEZpc2hob29rXG4gICAgXG5cblxuXG4gICAgICAgICAgICAgICAgXHUwMDNDL3RkPlxuICAgICAgICAgICAgXHUwMDNDL3RyPlxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcdTAwM0N0cj5cbiAgICAgICAgICAgICAgICBcdTAwM0N0aCBjbGFzcz1cImEtc3BhbjUgYS1zaXplLWJhc2VcIj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cbiAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImEtcG9wb3ZlclwiIGRhdGEtYS1wb3BvdmVyPVwieyZxdW90O2NhY2hlJnF1b3Q7OiZxdW90O3RydWUmcXVvdDssJnF1b3Q7bmFtZSZxdW90OzomcXVvdDtSZXNpemFibGUmcXVvdDssJnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7NTAwJnF1b3Q7LCZxdW90O2hlYWRlciZxdW90OzomcXVvdDtSZXNpemFibGUmcXVvdDssJnF1b3Q7cG9zaXRpb24mcXVvdDs6JnF1b3Q7dHJpZ2dlclJpZ2h0JnF1b3Q7LCZxdW90O3Njcm9sbGFibGUmcXVvdDs6JnF1b3Q7dHJ1ZSZxdW90OywmcXVvdDt1cmwmcXVvdDs6JnF1b3Q7L2dwL3Byb2R1Y3QvYWpheC1oYW5kbGVycy90ZWNoLXNwZWMtcG9wb3Zlci1jb250ZW50cy5odG1sL3JlZj1kcF9zb2Z0X3RlY2hfc3BlYz9rZXlMb29rVXA9amV3ZWxyeV9oZWxwX2F0dHItbmFtZV9pc19yZXNpemFibGUmcXVvdDt9XCI+XG4gICAgICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBhLXBvcG92ZXItdHJpZ2dlclwiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCIgaHJlZj1cIi9ncC9wcm9kdWN0L2FqYXgtaGFuZGxlcnMvdGVjaC1zcGVjLXBvcG92ZXItY29udGVudHMuaHRtbC9yZWY9ZHBfc29mdF90ZWNoX3NwZWM/a2V5TG9va1VwPS9ncC9wcm9kdWN0L2FqYXgtaGFuZGxlcnMvdGVjaC1zcGVjLXBvcG92ZXItY29udGVudHMuaHRtbC9yZWY9ZHBfc29mdF90ZWNoX3NwZWM/a2V5TG9va1VwPWpld2VscnlfaGVscF9hdHRyLW5hbWVfaXNfcmVzaXphYmxlXCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBzdHlsZT1cIndoaXRlLXNwYWNlOiBub3dyYXBcIj5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBzdHlsZT1cIndoaXRlLXNwYWNlOiBub3JtYWxcIj5SZXNpemFibGVcdTAwM0Mvc3Bhbj7vu79cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wb3BvdmVyXCIgcm9sZT1cImltZ1wiPlx1MDAzQy9pPlxuICAgICAgICAgICAgICAgIFx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgXHUwMDNDL2E+XG4gICAgICAgIFx1MDAzQy9zcGFuPlxuICAgIFxuICAgIFxuXG5cblxuICAgICAgICAgICAgICAgIFx1MDAzQy90aD5cbiAgICAgICAgICAgICAgICBcdTAwM0N0ZCBjbGFzcz1cImEtc3BhbjcgYS1zaXplLWJhc2VcIj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgTm9cbiAgICBcblxuXG5cbiAgICAgICAgICAgICAgICBcdTAwM0MvdGQ+XG4gICAgICAgICAgICBcdTAwM0MvdHI+XG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFx1MDAzQ3RyPlxuICAgICAgICAgICAgICAgIFx1MDAzQ3RoIGNsYXNzPVwiYS1zcGFuNSBhLXNpemUtYmFzZVwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICBNb2RlbCBudW1iZXJcbiAgICBcblxuXG5cbiAgICAgICAgICAgICAgICBcdTAwM0MvdGg+XG4gICAgICAgICAgICAgICAgXHUwMDNDdGQgY2xhc3M9XCJhLXNwYW43IGEtc2l6ZS1iYXNlXCI+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIDkwNzIwMDA4XG4gICAgXG5cblxuXG4gICAgICAgICAgICAgICAgXHUwMDNDL3RkPlxuICAgICAgICAgICAgXHUwMDNDL3RyPlxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgIFx1MDAzQy90Ym9keT5cdTAwM0MvdGFibGU+XG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcblxuICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtY29sdW1uIGEtc3BhbjYgYS1zcGFjaW5nLWJhc2UgYS13cy1zcGFuNiBhLXNwYW4tbGFzdCBhLXdzLXNwYW4tbGFzdFwiPlxuICAgICAgICAgICAgICAgIFxuXG5cblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcdTAwM0NoNSBjbGFzcz1cImEtc3BhY2luZy1zbWFsbCBhLXNwYWNpbmctdG9wLXNtYWxsXCI+R2VtIFR5cGUgSW5mb3JtYXRpb25cdTAwM0MvaDU+XG4gICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQ3RhYmxlIGlkPVwidGVjaG5pY2FsU3BlY2lmaWNhdGlvbnNfc2VjdGlvbl8yXCIgY2xhc3M9XCJhLWtleXZhbHVlIGEtc3BhY2luZy1taW5pXCI+XG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcdTAwM0N0Ym9keT5cdTAwM0N0cj5cbiAgICAgICAgICAgICAgICBcdTAwM0N0aCBjbGFzcz1cImEtc3BhbjUgYS1zaXplLWJhc2VcIj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgU3RvbmUgQ3JlYXRpb24gTWV0aG9kXG4gICAgXG5cblxuXG4gICAgICAgICAgICAgICAgXHUwMDNDL3RoPlxuICAgICAgICAgICAgICAgIFx1MDAzQ3RkIGNsYXNzPVwiYS1zcGFuNyBhLXNpemUtYmFzZVwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICBTaW11bGF0ZWRcbiAgICBcblxuXG5cbiAgICAgICAgICAgICAgICBcdTAwM0MvdGQ+XG4gICAgICAgICAgICBcdTAwM0MvdHI+XG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgXHUwMDNDL3Rib2R5Plx1MDAzQy90YWJsZT5cblxuXG5cbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG5cbiAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj4oZnVuY3Rpb24oZikge3ZhciBfbnA9KHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJTb2Z0bGluZXNSZXNwb25zaXZlVGVtcGxhdGVKYXZhXCIpKTtpZihfbnAuZ3VhcmRGYXRhbCl7X25wLmd1YXJkRmF0YWwoZikoX25wKTt9ZWxzZXtmKF9ucCk7fX0oZnVuY3Rpb24oUCkge1xuUC53aGVuKFwialF1ZXJ5XCIsIFwiY2ZcIikuZXhlY3V0ZShmdW5jdGlvbiAoJCkge1xuICAgIHZhciB0ZWNoU3BlY3NGZWF0dXJlRGl2ID0gJChcIiN0ZWNobmljYWxTcGVjaWZpY2F0aW9uc19mZWF0dXJlX2RpdlwiKTtcbiAgICB2YXIgcm93c1RvQmVDb2xsYXBzZWQgPSAkKFwiLnRhYmxlUm93VG9CZUNvbGxhcHNlZFwiKTtcbiAgICB2YXIgZXhwYW5kZXJzID0gJChcIiN0ZWNoU3BlY3NFeHBhbmRlclRvcCwgI3RlY2hTcGVjc0V4cGFuZGVyQm90dG9tXCIpO1xuICAgIHZhciBleHBhbmRlZCA9IGZhbHNlO1xuICAgIHZhciBpc1RhYmxldCA9IGV4cGFuZGVycy5oYXNDbGFzcyhcInRhYmxldFwiKTtcblxuICAgIFxuICAgIGZ1bmN0aW9uIGVuc3VyZVRlY2hTcGVjc1Zpc2liaWxpdHkoZXhwYW5kZWRIZWlnaHQpIHtcbiAgICAgICAgdmFyIGNvbGxhcHNlZEhlaWdodCA9IHRlY2hTcGVjc0ZlYXR1cmVEaXYuaGVpZ2h0KCk7XG4gICAgICAgIHZhciBvZmZzZXRUb3AgPSB0ZWNoU3BlY3NGZWF0dXJlRGl2Lm9mZnNldCgpLnRvcDtcbiAgICAgICAgdmFyIGRvY3VtZW50U2Nyb2xsVG9wID0gJChkb2N1bWVudCkuc2Nyb2xsVG9wKCk7XG4gICAgICAgIHZhciB2aWV3cG9ydE9mZnNldCA9IG9mZnNldFRvcCAtIGRvY3VtZW50U2Nyb2xsVG9wO1xuXG4gICAgICAgIGlmKHZpZXdwb3J0T2Zmc2V0IFx1MDAzQyAwKSB7XG4gICAgICAgIFxuICAgICAgICAgICAgdmFyIHNjcm9sbERpc3QgPSBjb2xsYXBzZWRIZWlnaHQgLSBleHBhbmRlZEhlaWdodDtcblxuICAgICAgICAgICAgaWYoc2Nyb2xsRGlzdCBcdTAwM0Mgdmlld3BvcnRPZmZzZXQpIHtcbiAgICAgICAgICAgICAgICBzY3JvbGxEaXN0ID0gdmlld3BvcnRPZmZzZXQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICQoZG9jdW1lbnQpLnNjcm9sbFRvcChkb2N1bWVudFNjcm9sbFRvcCArIHNjcm9sbERpc3QpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaGFuZGxlRXhwYW5kZXJFdmVudChldmVudCkge1xuICAgICAgICBleHBhbmRlZCA9ICFleHBhbmRlZDtcblxuICAgICAgICBpZihleHBhbmRlZCkge1xuICAgICAgICAgICAgZXhwYW5kZXJzLnJlbW92ZUNsYXNzKFwidGVjaFNwZWNzQ29sbGFwc2VkXCIpO1xuICAgICAgICAgICAgZXhwYW5kZXJzLmFkZENsYXNzKFwidGVjaFNwZWNzRXhwYW5kZWRcIik7XG4gICAgICAgICAgICByb3dzVG9CZUNvbGxhcHNlZC5yZW1vdmVDbGFzcyhcInRhYmxlUm93Q29sbGFwc2VkXCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIGV4cGFuZGVkSGVpZ2h0ID0gdGVjaFNwZWNzRmVhdHVyZURpdi5oZWlnaHQoKTtcblxuICAgICAgICAgICAgZXhwYW5kZXJzLmFkZENsYXNzKFwidGVjaFNwZWNzQ29sbGFwc2VkXCIpO1xuICAgICAgICAgICAgZXhwYW5kZXJzLnJlbW92ZUNsYXNzKFwidGVjaFNwZWNzRXhwYW5kZWRcIik7XG4gICAgICAgICAgICByb3dzVG9CZUNvbGxhcHNlZC5hZGRDbGFzcyhcInRhYmxlUm93Q29sbGFwc2VkXCIpO1xuXG4gICAgICAgICAgICBlbnN1cmVUZWNoU3BlY3NWaXNpYmlsaXR5KGV4cGFuZGVkSGVpZ2h0KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmKGlzVGFibGV0KSB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYoaXNUYWJsZXQpIHtcbiAgICAgICAgZXhwYW5kZXJzLmJpbmQoJ3RvdWNoc3RhcnQnLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgJChldmVudC5jdXJyZW50VGFyZ2V0KS5hZGRDbGFzcygndG91Y2hpbmcnKTtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH0pO1xuICAgICAgICBleHBhbmRlcnMuYmluZCgndG91Y2hlbmQgdG91Y2hjYW5jZWwnLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgJChldmVudC5jdXJyZW50VGFyZ2V0KS5yZW1vdmVDbGFzcygndG91Y2hpbmcnKTtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGV4cGFuZGVycy5iaW5kKCd0b3VjaGVuZCcsIGhhbmRsZUV4cGFuZGVyRXZlbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGV4cGFuZGVycy5iaW5kKCdjbGljaycsIGhhbmRsZUV4cGFuZGVyRXZlbnQpO1xuICAgIH1cblxufSk7XG59KSk7XHUwMDNDL3NjcmlwdD5cblxuXG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG4gIFxuXG5cblxuXG5cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcblxuXG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgXG5cblxuICAgICAgICAgICAgXG5cblxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG4gICAgICAgICAgICBcblxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ2RpdiBpZD1cIkhMQ1hDb21wYXJpc29uV2lkZ2V0X2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJITENYQ29tcGFyaXNvbldpZGdldFwiPlxuICAgICAgICAgXG4gICAgIFxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcdFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuICBcblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cblxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cblxuXG5cblxuXHUwMDNDZGl2IGlkPVwic3BvbnNvcmVkUHJvZHVjdHMyX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJzcG9uc29yZWRQcm9kdWN0czJcIj5cbiAgICAgICAgIFxuICAgICBcblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXHRcblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgICAgICBcdTAwM0NzdHlsZT4uc3BfbGFyZ2VfZm9ybWF0X3dpZGdldFRpdGxlX2FzaW5JbWFnZV9zcGFjaW5nIHsgICAgbWFyZ2luLWJvdHRvbTogNDBweDt9LnNwX2xhcmdlX2Zvcm1hdF9hc2luSW1hZ2VfcHJvZHVjdERlc2NyaXB0aW9uX3NwYWNpbmcgeyAgICBtYXJnaW4tYm90dG9tOiAzMHB4O30uc3BfbGFyZ2VfZm9ybWF0X2Nhcm91c2VsIHsgICAgaGVpZ2h0OiA0NjFweDt9LnNwX2xhcmdlX2Zvcm1hdF9vZmZlclZlcnRpY2FsIHsgICAgaGVpZ2h0OiAzNzVweDt9LnNwX2Jvb2tfY2Fyb3VzZWxfaGVhZGVyIHsgICAgbWFyZ2luLWJvdHRvbTogMTBweDt9LnNwX2JhZGdlX3NwYWNpbmdfYWJvdmVfaW1hZ2UgeyAgICBtYXJnaW4tdG9wOiAwcHg7ICAgIG1hcmdpbi1ib3R0b206IDRweDt9LnNwX2JhZGdlX3NwYWNpbmdfYmVsb3dfaW1hZ2UgeyAgICBtYXJnaW4tdG9wOiA2cHg7ICAgIG1hcmdpbi1ib3R0b206IDZweDt9LnNwX2ludmlzaWJsZV9iYWRnZSB7ICAgIHZpc2liaWxpdHk6IGhpZGRlbjt9LnNwX3ByaW1lX3dhcmRyb2JlX2JhZGdlIHsgICAgcG9zaXRpb246IHJlbGF0aXZlOyAgICB0b3A6IDJweDt9LnNwX3NvZnRsaW5lX2JyYW5kX2xpbmUgeyAgICBtYXJnaW4tdG9wOiAxNnB4OyAgICBmb250LXNpemU6IDE2cHg7ICAgIGNvbG9yOiAjNTU1NTU1OyAgICBtYXJnaW4tYm90dG9tOiAxMnB4OyAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7fS5zcF9zb2Z0bGluZV9vbmVsaW5lX3RpdGxlIHsgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgICAgb3ZlcmZsb3c6IGhpZGRlbjsgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7fS5zcF9zb2Z0bGluZV9sYXJnZV9pbWFnZV9jb250YWluZXIgeyAgICBwYWRkaW5nLXRvcDogMTMwJTsgICAgcG9zaXRpb246IHJlbGF0aXZlOyAgICBtYXJnaW4tYm90dG9tOiA0cHg7fS5zcF9zb2Z0bGluZV9sYXJnZV9pbWFnZV9mYWNlb3V0IHsgICAgcG9zaXRpb246IGFic29sdXRlOyAgICBtYXgtd2lkdGg6IDEwMCU7ICAgIG1heC1oZWlnaHQ6IDEwMCU7ICAgIG1hcmdpbjogYXV0bzsgICAgdG9wOiAwOyAgICBib3R0b206IDA7ICAgIGxlZnQ6IDA7ICAgIHJpZ2h0OiAwO31cdTAwM0Mvc3R5bGU+XHUwMDNDc3R5bGU+LnNwX2FtYXpvbl9jZXJ0aWZpZWRfdGV4dCB7ICAgIGZvbnQtc2l6ZTogMTNweDsgICAgY29sb3I6ICNDNDU1MDA7fS5zcF93b3Jrc193aXRoX2FsZXhhIHsgICAgZm9udC1zaXplOiAxM3B4OyAgICBjb2xvcjogIzExMTExMTt9XHUwMDNDL3N0eWxlPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzY3JpcHQgdHlwZT1cImEtc3RhdGVcIiBkYXRhLWEtc3RhdGU9XCJ7JnF1b3Q7a2V5JnF1b3Q7OiZxdW90O1NwVmlld2FiaWxpdHlDb25maWdTdGF0ZSZxdW90O31cIj57XCJlZWxFbmRwb2ludFwiOlwiaHR0cHM6Ly91bmFnaS1uYS5hbWF6b24uY29tLzEvZXZlbnRzL2NvbS5hbWF6b24uZWVsLlNwb25zb3JlZFByb2R1Y3RzRXZlbnRUcmFja2luZy5wcm9kXCJ9XHUwMDNDL3NjcmlwdD4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2hyIGNsYXNzPVwiYS1kaXZpZGVyLW5vcm1hbCBidWNrZXREaXZpZGVyXCI+ICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInNwX2RldGFpbDJcIiBkYXRhLWEtY2Fyb3VzZWwtb3B0aW9ucz1cInsmcXVvdDtpbml0aWFsU2VlbkFzaW5zJnF1b3Q7OlsmcXVvdDtCMDdSRlE5NTgzJnF1b3Q7LCZxdW90O0IwN1ZaRktMUjMmcXVvdDssJnF1b3Q7QjA3VzUzQk01RiZxdW90OywmcXVvdDtCMDdSMTVWOVA5JnF1b3Q7LCZxdW90O0IwMUY4Rk1OR1UmcXVvdDssJnF1b3Q7QjA3REs4UExQSyZxdW90OywmcXVvdDtCMDdWMzNaTVREJnF1b3Q7LCZxdW90O0IwNzU4MkoxU0cmcXVvdDssJnF1b3Q7QjA3VjdaQlc3MyZxdW90OywmcXVvdDtCMDFIWEZHRkdXJnF1b3Q7XSwmcXVvdDtzZXRfc2l6ZSZxdW90Ozo1OTcsJnF1b3Q7bmFtZSZxdW90OzomcXVvdDtzcF9kZXRhaWwyX2Nhcm91c2VsJnF1b3Q7LCZxdW90O2F1dG9fYWRqdXN0X2hlaWdodCZxdW90OzomcXVvdDt0cnVlJnF1b3Q7LCZxdW90O2NpcmN1bGFyJnF1b3Q7OmZhbHNlLCZxdW90O2FqYXgmcXVvdDs6eyZxdW90O2ZldGNoX2RlbGF5JnF1b3Q7OiZxdW90OzAmcXVvdDssJnF1b3Q7cGFyYW1zJnF1b3Q7OnsmcXVvdDtjYyZxdW90OzoxMCwmcXVvdDt3aWRnZXRMb2NhbGUmcXVvdDs6JnF1b3Q7ZW5fVVMmcXVvdDssJnF1b3Q7d05hbWUmcXVvdDs6JnF1b3Q7c3BfZGV0YWlsMiZxdW90OywmcXVvdDtyZWZlcnJpbmdTZWFyY2hFbmdpbmUmcXVvdDs6JnF1b3Q7QW1hem9uJnF1b3Q7LCZxdW90O2lzTXVsdGlQbGFjZW1lbnRSZXF1ZXN0JnF1b3Q7OmZhbHNlLCZxdW90O3N0YXJ0JnF1b3Q7OjEwLCZxdW90O0FTSU4mcXVvdDs6JnF1b3Q7QjAxR0tRSTM5MiZxdW90OywmcXVvdDtwUklEJnF1b3Q7OiZxdW90OzQ3NUUzNEpRVjlGTlBISjlTU1REJnF1b3Q7LCZxdW90O2lzRnJlc2gmcXVvdDs6MH0sJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9ncC9uZW1vL3NwZC9oYW5kbGVycy9zcGQtc2hvdi5odG1sJnF1b3Q7fX1cIiBkYXRhLWEtZGlzcGxheS1zdHJhdGVneT1cInN3YXBcIiBkYXRhLWEtdHJhbnNpdGlvbi1zdHJhdGVneT1cInN3YXBcIiBkYXRhLWEtYWpheC1zdHJhdGVneT1cImNsaWNrc0N1c3RvbUFqYXhcIiBjbGFzcz1cImEtYmVnaW4gYS1jYXJvdXNlbC1jb250YWluZXIgYS1jYXJvdXNlbC1kaXNwbGF5LXN3YXAgYS1jYXJvdXNlbC10cmFuc2l0aW9uLXN3YXBcIj5cdTAwM0NpbnB1dCBhdXRvY29tcGxldGU9XCJvblwiIHR5cGU9XCJoaWRkZW5cIiBjbGFzcz1cImEtY2Fyb3VzZWwtZmlyc3R2aXNpYmxlaXRlbVwiPiAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtY2Fyb3VzZWwtaGVhZGVyLXJvdyBhLXNpemUtbGFyZ2UgcGFfY29tcG9uZW50VGl0bGVUZXN0XCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuOFwiPlx1MDAzQ2gyIGNsYXNzPVwiYS1jYXJvdXNlbC1oZWFkaW5nXCI+U3BvbnNvcmVkIHByb2R1Y3RzIHJlbGF0ZWQgdG8gdGhpcyBpdGVtXHUwMDNDL2gyPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuNCBhLXNwYW4tbGFzdCBhLXRleHQtcmlnaHRcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1jYXJvdXNlbC1wYWdpbmF0aW9uIGEtc2l6ZS1iYXNlXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtY2Fyb3VzZWwtcGFnZS1jb3VudFwiPlBhZ2UgXHUwMDNDc3BhbiBjbGFzcz1cImEtY2Fyb3VzZWwtcGFnZS1jdXJyZW50XCI+MVx1MDAzQy9zcGFuPiBvZiBcdTAwM0NzcGFuIGNsYXNzPVwiYS1jYXJvdXNlbC1wYWdlLW1heFwiPjFcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1jYXJvdXNlbC1yZXN0YXJ0LWNvbnRhaW5lclwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXRleHQtc2VwYXJhdG9yXCI+XHUwMDNDL3NwYW4+XHUwMDNDYSBjbGFzcz1cImEtY2Fyb3VzZWwtcmVzdGFydFwiIGhyZWY9XCIjXCI+U3RhcnQgb3Zlclx1MDAzQy9hPlx1MDAzQy9zcGFuPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNhcm91c2VsLWFjY2Vzc2liaWxpdHktcGFnZS1pbmZvIGEtb2Zmc2NyZWVuXCIgYXJpYS1saXZlPVwicG9saXRlXCI+UGFnZSAxIG9mIDFcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+ICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1jYXJvdXNlbC1jb250cm9scyBhLWNhcm91c2VsLXJvdyBhLWNhcm91c2VsLWhhcy1idXR0b25zXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1jYXJvdXNlbC1yb3ctaW5uZXJcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWNhcm91c2VsLWNvbCBhLWNhcm91c2VsLWxlZnRcIj5cdTAwM0NhIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24taW1hZ2UgYS1jYXJvdXNlbC1idXR0b24gYS1jYXJvdXNlbC1nb3RvLXByZXZwYWdlXCIgdGFiaW5kZXg9XCIwXCIgaHJlZj1cIiNcIiBpZD1cImEtYXV0b2lkLTE4XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uLWlubmVyXCI+XHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcHJldmlvdXNcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPlByZXZpb3VzIHBhZ2Ugb2YgcmVsYXRlZCBTcG9uc29yZWQgUHJvZHVjdHNcdTAwM0Mvc3Bhbj5cdTAwM0MvaT5cdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtY2Fyb3VzZWwtY29sIGEtY2Fyb3VzZWwtY2VudGVyXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1jYXJvdXNlbC12aWV3cG9ydFwiPlx1MDAzQ29sIGNsYXNzPVwiYS1jYXJvdXNlbFwiIHJvbGU9XCJsaXN0XCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NsaSBjbGFzcz1cImEtY2Fyb3VzZWwtY2FyZFwiIHN0eWxlPVwid2lkdGg6MTYwcHg7XCIgcm9sZT1cImxpc3RpdGVtXCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInNwX2RldGFpbDJfQjA3UkZROTU4M1wiIGRhdGEtYXNpbj1cIkIwN1JGUTk1ODNcIiBkYXRhLXAxM24tYXNpbi1tZXRhZGF0YT1cInsmcXVvdDtyZWYmcXVvdDs6JnF1b3Q7c3NwYV9ka19kZXRhaWxfMCZxdW90OywmcXVvdDthc2luJnF1b3Q7OiZxdW90O0IwN1JGUTk1ODMmcXVvdDt9XCIgZGF0YS12aWV3cGl4ZWx1cmw9XCIvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xvZ2dpbmcvbG9nLWFjdGlvbi5odG1sP3F1YWxpZmllcj0xNTY5Nzk0MTg4JmFtcDtpZD0zNTg2MTE3MTQ1MTkyNzUwJmFtcDt3aWRnZXROYW1lPXNwX2RldGFpbDImYW1wO2FkSWQ9MjAwMDEyMjgxMjY5MzcxJmFtcDthZEluZGV4PTBcIiBjbGFzcz1cImEtc2VjdGlvbiBzcF9vZmZlclZlcnRpY2FsXCI+ICAgICAgICAgICAgICAgIFx1MDAzQ25vc2NyaXB0PiAgICAgICAgXHUwMDNDaW1nIGFsdD1cIlwiIHNyYz1cIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmaWQ9MzU4NjExNzE0NTE5Mjc1MCZ3aWRnZXROYW1lPXNwX2RldGFpbDImYWRJZD0yMDAwMTIyODEyNjkzNzEmZXZlbnRUeXBlPTImYWRJbmRleD0wXCI+ICAgIFx1MDAzQy9ub3NjcmlwdD4gICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj4oZnVuY3Rpb24oZikge2Yod2luZG93LlAuX25hbWVzcGFjZShcIkZpcmViaXJkU3BSZW5kZXJpbmdcIikpO30oZnVuY3Rpb24oUCkgeyAgICAgICAgUC53aGVuKCdTcG9uc29yZWRQcm9kdWN0c1ZpZXdhYmlsaXR5JykuZXhlY3V0ZShmdW5jdGlvbihTVikgeyAgICAgICAgICAgIFNWLmxvYWRJbWFnZVBpeGVsKFwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZpZD0zNTg2MTE3MTQ1MTkyNzUwJndpZGdldE5hbWU9c3BfZGV0YWlsMiZhZElkPTIwMDAxMjI4MTI2OTM3MSZldmVudFR5cGU9MiZhZEluZGV4PTBcIik7ICAgICAgICB9KTsgICAgfSkpO1x1MDAzQy9zY3JpcHQ+ICAgICAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPihmdW5jdGlvbihmKSB7Zih3aW5kb3cuUC5fbmFtZXNwYWNlKFwiRmlyZWJpcmRTcFJlbmRlcmluZ1wiKSk7fShmdW5jdGlvbihQKSB7ICAgIFAud2hlbignQScsICdTcG9uc29yZWRQcm9kdWN0c1ZpZXdhYmlsaXR5JykuZXhlY3V0ZShmdW5jdGlvbihBLCBTVikgeyAgICAgICAgU1YucmVnaXN0ZXJWaWV3VHJhY2tpbmdFbGVtZW50KEEuJChcIiNzcF9kZXRhaWwyX0IwN1JGUTk1ODNcIiksIFwic3BfZGV0YWlsMlwiKTsgICAgfSk7fSkpO1x1MDAzQy9zY3JpcHQ+ICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJwYV9mZWVkYmFja0Zvcm1fY29udGFpbmVyX3NwX2RldGFpbDJcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIj4gICAgXHUwMDNDZGl2IGNsYXNzPVwic3BfYWRJRFwiPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImEtbW9kYWxcIiBkYXRhLWEtbW9kYWw9XCJ7JnF1b3Q7Zm9vdGVyJnF1b3Q7OiZxdW90O1xcdTAwM2NkaXYgaWQ9J3Nwb25zb3JlZC1wcm9kdWN0cy1mZWVkYmFjay1mb290ZXInPiZxdW90OywmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzomcXVvdDtmYWxzZSZxdW90OywmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O3Nwb25zb3JlZC1wcm9kdWN0cy1mZWVkYmFjay1tb2RhbC1zcF9kZXRhaWwyJnF1b3Q7LCZxdW90O3dpZHRoJnF1b3Q7OiZxdW90OzM1MCZxdW90OywmcXVvdDtoZWFkZXImcXVvdDs6JnF1b3Q7U2hhcmUgeW91ciBmZWVkYmFjayZxdW90OywmcXVvdDt1cmwmcXVvdDs6JnF1b3Q7L2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sYXp5TG9hZC9oYW5kbGVyL3NwLWZlZWRiYWNrLWhhbmRsZXIuaHRtbD9wbD1qUUZnZ0U2QmRZdUElMkJxUFl0MjRPZldMc3ZSa2FYU0pJRzNrTGNidGRpYklSVWdZU00xYTRmYjRnZkNaNHRsUzh1Y2IwSGhOYWNrWWMlMEE1emVFQVFFeG9pcEFSdUdDQVE5ZHdNa1BaakViOGk4N0hxcUNFU212bkI2TlBjQWJhVUh3aTZhVHowclpkSzZON1VNU0wxR09VYVFIJTBBRSUyRjI4M2JUTnVxaWNqdTlwS1VZSFVQU1NRaVpnd05Zbjc4aHpaSFJmdnVQcmNpYXNQRmZhY09xb3ZiTSUyRkNGUkxRazdacE9WTlRVUnYlMEExVjJNaTZxNTF4QkRrb21TY2VFWk1jaUNvMzJkZFVKSlpmY25qVHJUJTJCUWJIJTJGY3B5NXdPMnU3NGdNJTJCYmg0NzJXJTJGZjZDeTdCeTZScmclMEFGelBobFBXSHkyQ1JZSklacENSdkNiZFhBYjFMcjR1N25OTTl2S0UxZmklMkJDaUcwbGdIc2VKUXRlTzJtOEpwOWdFaEJ2cGY4NmlyT24lMEE0JTJGaEhkb2xZOWR2MDhoeVdJN3lUdyUyRmxlcE02UUZxanZybEd3anNTQWR5eTd5VGZZS3pSZmMlMkZYM3Zsb2tDYVZ6c2hibkh4S1Nxd2IwJTBBQUdwJTJCb0w3RnR6NXp0VFZjYlgzWmFrekFKJTJCQ3kwOWJQeExkbHRCODQ5ZHROMzJjRkxPbFNLMVMydmF3RXVwVDJpSGUwNHBnWHdEdUElMEF4eXYlMkZkOFlDJTJCaFMyJTJGbjJseUZhM3V2QjJtOW0lMkJZQkJ4REl4S3FHeU9jVXh4bmxrcDN6cnVlRnM0TTdnMll2VTVJNzlMdkxCUjBqMWUlMEFiU1BBZW5udXBHT2VXdnVpT3ROWVg5SlpVdDY4cWNTOWZrdHlKWlEwWnNRJTNEJnF1b3Q7fVwiPiAgICAgICAgICAgIFx1MDAzQ2EgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIGNsYXNzPVwiYS1wb3BvdmVyLXRyaWdnZXIgYS1kZWNsYXJhdGl2ZVwiPkZlZWRiYWNrXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcG9wb3ZlclwiPlx1MDAzQy9pPlx1MDAzQy9hPiAgICAgICAgXHUwMDNDL3NwYW4+ICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIHRhcmdldD1cIl90b3BcIiByZWw9XCJub29wZW5lclwiIHRpdGxlPVwiU1VOTllPVVRIIDggUGFpcnMgVmludGFnZSBTdGF0ZW1lbnQgRHJvcCBEYW5nbGUgRWFycmluZ3MgQm9oZW1pYW4gTmF0aW9uYWwgU3R5bGUgSG9sbG93IFdhdGVyIERyb3AgSGVhcnQgU2hhcGVkIEFsbG95IExvbmcgQm9obyBEYW5nbGUgRWFycmluZ3MgZm9yIFdvbWVuIEdpcmxzXCIgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vZ3Avc2xyZWRpcmVjdC9waWNhc3NvUmVkaXJlY3QuaHRtbC9yZWY9c3NwYV9ka19kZXRhaWxfMD9pZT1VVEY4JmFtcDthZElkPUExMDAzNzI3SlNaRE41WjZTNkgwJmFtcDtxdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9MzU4NjExNzE0NTE5Mjc1MCZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwyJmFtcDt1cmw9JTJGZHAlMkZCMDdSRlE5NTgzJTJGcmVmJTNEc3NwYV9ka19kZXRhaWxfMCUzRnBzYyUzRDFcIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NpbWcgYWx0PVwiU1VOTllPVVRIIDggUGFpcnMgVmludGFnZSBTdGF0ZW1lbnQgRHJvcCBEYW5nbGUgRWFycmluZ3MgQm9oZW1pYW4gTmF0aW9uYWwgU3R5bGUgSG9sbG93IFdhdGVyIERyb3AgSGVhcnQgU2hhcGVkIEFsbG95IExvbmcgQm9obyBEYW5nbGUgRWFycmluZ3MgZm9yIFdvbWVuIEdpcmxzXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFDeXNhRmRtbEwuX0FDX1NSMzIwLDMyMF8uanBnXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2VcIiBoZWlnaHQ9XCIxNjBcIiB3aWR0aD1cIjE2MFwiIGRhdGEtYS1keW5hbWljLWltYWdlPVwieyZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzYxQ3lzYUZkbWxMLl9BQ19TUjQ4MCw0ODBfLmpwZyZxdW90OzpbNDgwLDQ4MF0sJnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFDeXNhRmRtbEwuX0FDX1NSMTYwLDE2MF8uanBnJnF1b3Q7OlsxNjAsMTYwXSwmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS82MUN5c2FGZG1sTC5fQUNfU1IzMjAsMzIwXy5qcGcmcXVvdDs6WzMyMCwzMjBdfVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGRhdGEtcm93cz1cIjRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cInNwb25zb3JlZC1wcm9kdWN0cy10cnVuY2F0b3ItdHJ1bmNhdGUgc3BvbnNvcmVkLXByb2R1Y3RzLXRydW5jYXRvci1saW5lLWNsYW1wLTRcIj4gICAgICAgICAgICBTVU5OWU9VVEggOCBQYWlycyBWaW50YWdlIFN0YXRlbWVudCBEcm9wIERhbmdsZSBFYXJyaW5ncyBCb2hlbWlhbiBOYXRpb25hbCBTdHlsZSBIby4uLlx1MDAzQy9kaXY+ICAgICAgICAgICAgXHUwMDNDL2E+ICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+ICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBhZFJldmlld0xpbmsgYS10ZXh0LW5vcm1hbFwiIHRhcmdldD1cIl90b3BcIiByZWw9XCJub29wZW5lclwiIHRpdGxlPVwiU1VOTllPVVRIIDggUGFpcnMgVmludGFnZSBTdGF0ZW1lbnQgRHJvcCBEYW5nbGUgRWFycmluZ3MgQm9oZW1pYW4gTmF0aW9uYWwgU3R5bGUgSG9sbG93IFdhdGVyIERyb3AgSGVhcnQgU2hhcGVkIEFsbG95IExvbmcgQm9obyBEYW5nbGUgRWFycmluZ3MgZm9yIFdvbWVuIEdpcmxzXCIgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vZ3Avc2xyZWRpcmVjdC9waWNhc3NvUmVkaXJlY3QuaHRtbC9yZWY9c3NwYV9ka19kZXRhaWxfMD9pZT1VVEY4JmFtcDthZElkPUExMDAzNzI3SlNaRE41WjZTNkgwJmFtcDtxdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9MzU4NjExNzE0NTE5Mjc1MCZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwyJmFtcDt1cmw9JTJGZHAlMkZCMDdSRlE5NTgzJTJGcmVmJTNEc3NwYV9ka19kZXRhaWxfMCUzRnBzYyUzRDEjY3VzdG9tZXJSZXZpZXdzXCI+ICAgICAgICBcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyIGEtc3Rhci00LTVcIj5cdTAwM0MvaT4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNvbG9yLWxpbmtcIj4xNzVcdTAwM0Mvc3Bhbj4gICAgICAgIFx1MDAzQy9hPiAgICBcdTAwM0MvZGl2PiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLWNvbG9yLXByaWNlXCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNvbG9yLXByaWNlXCI+JDEyLjk5XHUwMDNDL3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBzdHlsZT1cInBvc2l0aW9uOiByZWxhdGl2ZTsgdG9wOiAycHg7XCI+ICAgICAgICAgICAgICAgIFx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXByaW1lIGEtaWNvbi1zbWFsbFwiIHJvbGU9XCJpbWdcIj5cdTAwM0MvaT4gICAgICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2xpIGNsYXNzPVwiYS1jYXJvdXNlbC1jYXJkXCIgc3R5bGU9XCJ3aWR0aDoxNjBweDtcIiByb2xlPVwibGlzdGl0ZW1cIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwic3BfZGV0YWlsMl9CMDdWWkZLTFIzXCIgZGF0YS1hc2luPVwiQjA3VlpGS0xSM1wiIGRhdGEtcDEzbi1hc2luLW1ldGFkYXRhPVwieyZxdW90O3JlZiZxdW90OzomcXVvdDtzc3BhX2RrX2RldGFpbF8xJnF1b3Q7LCZxdW90O2FzaW4mcXVvdDs6JnF1b3Q7QjA3VlpGS0xSMyZxdW90O31cIiBkYXRhLXZpZXdwaXhlbHVybD1cIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTM1ODYxMTcxNDUxOTI3NTAmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsMiZhbXA7YWRJZD0yMDAwMTU2NjU2MTU1NzEmYW1wO2FkSW5kZXg9MVwiIGNsYXNzPVwiYS1zZWN0aW9uIHNwX29mZmVyVmVydGljYWxcIj4gICAgICAgICAgICAgICAgXHUwMDNDbm9zY3JpcHQ+ICAgICAgICBcdTAwM0NpbWcgYWx0PVwiXCIgc3JjPVwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZpZD0zNTg2MTE3MTQ1MTkyNzUwJndpZGdldE5hbWU9c3BfZGV0YWlsMiZhZElkPTIwMDAxNTY2NTYxNTU3MSZldmVudFR5cGU9MiZhZEluZGV4PTFcIj4gICAgXHUwMDNDL25vc2NyaXB0PiAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPihmdW5jdGlvbihmKSB7Zih3aW5kb3cuUC5fbmFtZXNwYWNlKFwiRmlyZWJpcmRTcFJlbmRlcmluZ1wiKSk7fShmdW5jdGlvbihQKSB7ICAgICAgICBQLndoZW4oJ1Nwb25zb3JlZFByb2R1Y3RzVmlld2FiaWxpdHknKS5leGVjdXRlKGZ1bmN0aW9uKFNWKSB7ICAgICAgICAgICAgU1YubG9hZEltYWdlUGl4ZWwoXCIvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xvZ2dpbmcvbG9nLWFjdGlvbi5odG1sP3F1YWxpZmllcj0xNTY5Nzk0MTg4JmlkPTM1ODYxMTcxNDUxOTI3NTAmd2lkZ2V0TmFtZT1zcF9kZXRhaWwyJmFkSWQ9MjAwMDE1NjY1NjE1NTcxJmV2ZW50VHlwZT0yJmFkSW5kZXg9MVwiKTsgICAgICAgIH0pOyAgICB9KSk7XHUwMDNDL3NjcmlwdD4gICAgICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHtmKHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJGaXJlYmlyZFNwUmVuZGVyaW5nXCIpKTt9KGZ1bmN0aW9uKFApIHsgICAgUC53aGVuKCdBJywgJ1Nwb25zb3JlZFByb2R1Y3RzVmlld2FiaWxpdHknKS5leGVjdXRlKGZ1bmN0aW9uKEEsIFNWKSB7ICAgICAgICBTVi5yZWdpc3RlclZpZXdUcmFja2luZ0VsZW1lbnQoQS4kKFwiI3NwX2RldGFpbDJfQjA3VlpGS0xSM1wiKSwgXCJzcF9kZXRhaWwyXCIpOyAgICB9KTt9KSk7XHUwMDNDL3NjcmlwdD4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cInBhX2ZlZWRiYWNrRm9ybV9jb250YWluZXJfc3BfZGV0YWlsMlwiIHN0eWxlPVwiZGlzcGxheTpub25lO1wiPiAgICBcdTAwM0NkaXYgY2xhc3M9XCJzcF9hZElEXCI+ICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYS1tb2RhbFwiIGRhdGEtYS1tb2RhbD1cInsmcXVvdDtmb290ZXImcXVvdDs6JnF1b3Q7XFx1MDAzY2RpdiBpZD0nc3BvbnNvcmVkLXByb2R1Y3RzLWZlZWRiYWNrLWZvb3Rlcic+JnF1b3Q7LCZxdW90O2Nsb3NlQnV0dG9uJnF1b3Q7OiZxdW90O2ZhbHNlJnF1b3Q7LCZxdW90O25hbWUmcXVvdDs6JnF1b3Q7c3BvbnNvcmVkLXByb2R1Y3RzLWZlZWRiYWNrLW1vZGFsLXNwX2RldGFpbDImcXVvdDssJnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7MzUwJnF1b3Q7LCZxdW90O2hlYWRlciZxdW90OzomcXVvdDtTaGFyZSB5b3VyIGZlZWRiYWNrJnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xhenlMb2FkL2hhbmRsZXIvc3AtZmVlZGJhY2staGFuZGxlci5odG1sP3BsPUwlMkI1cGhOeTNWJTJCSE81eWQlMkZZVWFsMEY5d01HdGJOOHNvRXFIQXEzbkQyYWpHOWI2TW1Fa2EyZGxJdXVmU29EQlpOcHQlMkZvNEp6cE1CWSUwQVRWTmFTTHUlMkZNN2Ryc2Nhamo3U3JXaVd2SDM3QlBRVlpaTzlUSmJiRUpROXNMUFJkRkhDWExTMFdqalBBclNNZ3lhaUdSTTE2VUtUcSUwQXNNd0dGR25ScVB4RjAzS3RTbFFkaEZPcU9QYzZKR0xwcVRKQkpzcE9uaU9hJTJGYXNLVEpvMXZub2QlMkZFVnplMnB0SjVmM2N3MWJuQWFCJTBBYmc5bTRFcW12RE9FY0t4UmVGbFkxUWdPdGY0eGo1WHR3QTRwSFB4eCUyQng3bWFmVmo2dnZZcmF2enhiTmdqMjk0VTlDYXoyZ2tVZ291JTBBa2MzN0pwb0M5R1pqVCUyRnVobTNKSGdibExUcXFrViUyQk9pZTJRNVM4eDVkS0ZWYzhBSVZQYW16YjJ1QVZhSFVEbWdEV1JjcUEzcSUyRlQ4ayUwQW9EUmNZdlpPcjROTmd3Z2Z3em42YWlrUGlrR1J0Z056V1IxQ1IzTXRRRm9vYUQ5VDhKQnh5cnJ5Qno2aExCMTRKVXdWUzA3TVg0Y3IlMEFUS0xZVFcxMGNxMFE5NzZLaUhsT1hxeFU2RVNya2FBSEpmYm45TFdvM1d6dDRsMWIzVkxYJTJCQlB5cERVSjBGaVpSTWtJSk01azgzJTJGcSUwQWtYSklwaHhZJTJCYmxnOHhpR2hyJTJGT0ZtdXFsRXF4eUp2TlFxc0toc0xsU0N2WHlzeWF5dlg4ZU9xa041M1ZVMlo2YXk1MjglMkZ6MVRVcGElMEFvN2Fub3JDQ29wTWRiWGtFV3RqJTJGb1BoaGh6JTJCVzhGd0k3U3RoU2doN0J4SSUzRCZxdW90O31cIj4gICAgICAgICAgICBcdTAwM0NhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiBjbGFzcz1cImEtcG9wb3Zlci10cmlnZ2VyIGEtZGVjbGFyYXRpdmVcIj5GZWVkYmFja1x1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXBvcG92ZXJcIj5cdTAwM0MvaT5cdTAwM0MvYT4gICAgICAgIFx1MDAzQy9zcGFuPiAgICBcdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiB0YXJnZXQ9XCJfdG9wXCIgcmVsPVwibm9vcGVuZXJcIiB0aXRsZT1cIktpbmltb3JlIHJhdHRhbiBkcm9wIGVhcnJpbmdzIGJvaGVtaWFuIHdvdmVuIG5hdHVyYWwgYnJvd24gaGFuZG1hZGUgamV3ZWxyeVwiIGhyZWY9XCJodHRwczovL3d3dy5hbWF6b24uY29tL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXNzcGFfZGtfZGV0YWlsXzE/aWU9VVRGOCZhbXA7YWRJZD1BMDA5MDM2NTNIOFlISVRNQkU5NFMmYW1wO3F1YWxpZmllcj0xNTY5Nzk0MTg4JmFtcDtpZD0zNTg2MTE3MTQ1MTkyNzUwJmFtcDt3aWRnZXROYW1lPXNwX2RldGFpbDImYW1wO3VybD0lMkZkcCUyRkIwN1ZaRktMUjMlMkZyZWYlM0Rzc3BhX2RrX2RldGFpbF8xJTNGcHNjJTNEMVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2ltZyBhbHQ9XCJLaW5pbW9yZSByYXR0YW4gZHJvcCBlYXJyaW5ncyBib2hlbWlhbiB3b3ZlbiBuYXR1cmFsIGJyb3duIGhhbmRtYWRlIGpld2VscnlcIiBzcmM9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MVZpQkxkaXpETC5fQUNfU1IzMjAsMzIwXy5qcGdcIiBjbGFzcz1cImEtZHluYW1pYy1pbWFnZVwiIGhlaWdodD1cIjE2MFwiIHdpZHRoPVwiMTYwXCIgZGF0YS1hLWR5bmFtaWMtaW1hZ2U9XCJ7JnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFWaUJMZGl6REwuX0FDX1NSNDgwLDQ4MF8uanBnJnF1b3Q7Ols0ODAsNDgwXSwmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MVZpQkxkaXpETC5fQUNfU1IzMjAsMzIwXy5qcGcmcXVvdDs6WzMyMCwzMjBdLCZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxVmlCTGRpekRMLl9BQ19TUjE2MCwxNjBfLmpwZyZxdW90OzpbMTYwLDE2MF19XCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NkaXYgZGF0YS1yb3dzPVwiNFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGNsYXNzPVwic3BvbnNvcmVkLXByb2R1Y3RzLXRydW5jYXRvci10cnVuY2F0ZSBzcG9uc29yZWQtcHJvZHVjdHMtdHJ1bmNhdG9yLWxpbmUtY2xhbXAtNFwiPiAgICAgICAgICAgIEtpbmltb3JlIHJhdHRhbiBkcm9wIGVhcnJpbmdzIGJvaGVtaWFuIHdvdmVuIG5hdHVyYWwgYnJvd24gaGFuZG1hZGUgamV3ZWxyeVx1MDAzQy9kaXY+ICAgICAgICAgICAgXHUwMDNDL2E+ICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+ICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBhZFJldmlld0xpbmsgYS10ZXh0LW5vcm1hbFwiIHRhcmdldD1cIl90b3BcIiByZWw9XCJub29wZW5lclwiIHRpdGxlPVwiS2luaW1vcmUgcmF0dGFuIGRyb3AgZWFycmluZ3MgYm9oZW1pYW4gd292ZW4gbmF0dXJhbCBicm93biBoYW5kbWFkZSBqZXdlbHJ5XCIgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vZ3Avc2xyZWRpcmVjdC9waWNhc3NvUmVkaXJlY3QuaHRtbC9yZWY9c3NwYV9ka19kZXRhaWxfMT9pZT1VVEY4JmFtcDthZElkPUEwMDkwMzY1M0g4WUhJVE1CRTk0UyZhbXA7cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTM1ODYxMTcxNDUxOTI3NTAmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsMiZhbXA7dXJsPSUyRmRwJTJGQjA3VlpGS0xSMyUyRnJlZiUzRHNzcGFfZGtfZGV0YWlsXzElM0Zwc2MlM0QxI2N1c3RvbWVyUmV2aWV3c1wiPiAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3RhciBhLXN0YXItNVwiPlx1MDAzQy9pPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtY29sb3ItbGlua1wiPjFcdTAwM0Mvc3Bhbj4gICAgICAgIFx1MDAzQy9hPiAgICBcdTAwM0MvZGl2PiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLWNvbG9yLXByaWNlXCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNvbG9yLXByaWNlXCI+JDEwLjk5XHUwMDNDL3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBzdHlsZT1cInBvc2l0aW9uOiByZWxhdGl2ZTsgdG9wOiAycHg7XCI+ICAgICAgICAgICAgICAgIFx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXByaW1lIGEtaWNvbi1zbWFsbFwiIHJvbGU9XCJpbWdcIj5cdTAwM0MvaT4gICAgICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2xpIGNsYXNzPVwiYS1jYXJvdXNlbC1jYXJkXCIgc3R5bGU9XCJ3aWR0aDoxNjBweDtcIiByb2xlPVwibGlzdGl0ZW1cIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwic3BfZGV0YWlsMl9CMDdXNTNCTTVGXCIgZGF0YS1hc2luPVwiQjA3VzUzQk01RlwiIGRhdGEtcDEzbi1hc2luLW1ldGFkYXRhPVwieyZxdW90O3JlZiZxdW90OzomcXVvdDtzc3BhX2RrX2RldGFpbF8yJnF1b3Q7LCZxdW90O2FzaW4mcXVvdDs6JnF1b3Q7QjA3VzUzQk01RiZxdW90O31cIiBkYXRhLXZpZXdwaXhlbHVybD1cIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTM1ODYxMTcxNDUxOTI3NTAmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsMiZhbXA7YWRJZD0yMDAwMTU5NDgzMzk1NzEmYW1wO2FkSW5kZXg9MlwiIGNsYXNzPVwiYS1zZWN0aW9uIHNwX29mZmVyVmVydGljYWxcIj4gICAgICAgICAgICAgICAgXHUwMDNDbm9zY3JpcHQ+ICAgICAgICBcdTAwM0NpbWcgYWx0PVwiXCIgc3JjPVwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZpZD0zNTg2MTE3MTQ1MTkyNzUwJndpZGdldE5hbWU9c3BfZGV0YWlsMiZhZElkPTIwMDAxNTk0ODMzOTU3MSZldmVudFR5cGU9MiZhZEluZGV4PTJcIj4gICAgXHUwMDNDL25vc2NyaXB0PiAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPihmdW5jdGlvbihmKSB7Zih3aW5kb3cuUC5fbmFtZXNwYWNlKFwiRmlyZWJpcmRTcFJlbmRlcmluZ1wiKSk7fShmdW5jdGlvbihQKSB7ICAgICAgICBQLndoZW4oJ1Nwb25zb3JlZFByb2R1Y3RzVmlld2FiaWxpdHknKS5leGVjdXRlKGZ1bmN0aW9uKFNWKSB7ICAgICAgICAgICAgU1YubG9hZEltYWdlUGl4ZWwoXCIvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xvZ2dpbmcvbG9nLWFjdGlvbi5odG1sP3F1YWxpZmllcj0xNTY5Nzk0MTg4JmlkPTM1ODYxMTcxNDUxOTI3NTAmd2lkZ2V0TmFtZT1zcF9kZXRhaWwyJmFkSWQ9MjAwMDE1OTQ4MzM5NTcxJmV2ZW50VHlwZT0yJmFkSW5kZXg9MlwiKTsgICAgICAgIH0pOyAgICB9KSk7XHUwMDNDL3NjcmlwdD4gICAgICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHtmKHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJGaXJlYmlyZFNwUmVuZGVyaW5nXCIpKTt9KGZ1bmN0aW9uKFApIHsgICAgUC53aGVuKCdBJywgJ1Nwb25zb3JlZFByb2R1Y3RzVmlld2FiaWxpdHknKS5leGVjdXRlKGZ1bmN0aW9uKEEsIFNWKSB7ICAgICAgICBTVi5yZWdpc3RlclZpZXdUcmFja2luZ0VsZW1lbnQoQS4kKFwiI3NwX2RldGFpbDJfQjA3VzUzQk01RlwiKSwgXCJzcF9kZXRhaWwyXCIpOyAgICB9KTt9KSk7XHUwMDNDL3NjcmlwdD4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cInBhX2ZlZWRiYWNrRm9ybV9jb250YWluZXJfc3BfZGV0YWlsMlwiIHN0eWxlPVwiZGlzcGxheTpub25lO1wiPiAgICBcdTAwM0NkaXYgY2xhc3M9XCJzcF9hZElEXCI+ICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYS1tb2RhbFwiIGRhdGEtYS1tb2RhbD1cInsmcXVvdDtmb290ZXImcXVvdDs6JnF1b3Q7XFx1MDAzY2RpdiBpZD0nc3BvbnNvcmVkLXByb2R1Y3RzLWZlZWRiYWNrLWZvb3Rlcic+JnF1b3Q7LCZxdW90O2Nsb3NlQnV0dG9uJnF1b3Q7OiZxdW90O2ZhbHNlJnF1b3Q7LCZxdW90O25hbWUmcXVvdDs6JnF1b3Q7c3BvbnNvcmVkLXByb2R1Y3RzLWZlZWRiYWNrLW1vZGFsLXNwX2RldGFpbDImcXVvdDssJnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7MzUwJnF1b3Q7LCZxdW90O2hlYWRlciZxdW90OzomcXVvdDtTaGFyZSB5b3VyIGZlZWRiYWNrJnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xhenlMb2FkL2hhbmRsZXIvc3AtZmVlZGJhY2staGFuZGxlci5odG1sP3BsPU9rd2VudkN3dGZydWo2N1lNWVloQlZ2eUEzUXFNQnElMkJia2JtQXhtZE5PQ3N2N0lGR0VIcEhFRlRaM2prdVhHQkx1UFhFT3pubzBHYyUwQTBlZ0hWaWVVcDdRYWdWdmlNTiUyRmtsJTJCOVJRM3dHN1N2b1E4RSUyRnJwSXhCYUdZUHpJN3A5Q1JlVmxndHpaQmdqcjhDaDZVTFQlMkYlMkJDTURoJTBBcEU4MGwlMkI2Q3BwVE9TTHVFUkJpJTJCcHNzVUR2QzZzOXh2VXA4dGNQdFFFSkVndWtoUk1GTCUyRk5EbnlzVyUyRjM0OEh5S0F3YU8lMkZvNWtleXglMEE2JTJGWU1SNkY0SjlhUlhvUnhjdCUyQmpZM2I4bkZvdnd3N2RwSFMwcnhzUUpyeUh0c3BhZEMwbjhLVHJFVUttUWFNTldmM1Z4T05mODZORiUwQVQ2dDl2Wng0JTJCd0FSMGs2bThIWmJVR29KQTl3JTJGSk0lMkZ5ejIza2tJQVBPcGtZb256TnltQTJITTFHVFhnQkZXOU56bmVIZSUyRjcxdGdoTiUwQXlLczhHS2Q0SEJyWlglMkJOMUFpNlFsaG1YZlpNZldocGxPSDluRiUyQmVyMENtb0NWRTVBdUZCaDh6cDRvOUhIUmczcUpIOUlWdTJyV01BJTBBcUd2VHNNcmU5cDFQdXhoZGdZUXgwT0MlMkZKazNRbVJjYWtxNUJ3blBjRmZUN2xPNklqanhXd1RmZEtYOTlvNlJhQUtpY1dSa0Vwakl0JTBBYVpxOEJ6UzhJR0R5bjE5UXRIJTJGYlVVd3ZHOG9pd0dYUENPbzBFR2JUaXdUVG5adUpEelRhS0FNY2xxT1pzV1ViUEZMNFBJZUxhN2FEJTBBYVlLRlJpaUp3dDFqc0xDWWk5STZHc3B1cFFLQzlpcml0clFCZER6NHp2OCUzRCZxdW90O31cIj4gICAgICAgICAgICBcdTAwM0NhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiBjbGFzcz1cImEtcG9wb3Zlci10cmlnZ2VyIGEtZGVjbGFyYXRpdmVcIj5GZWVkYmFja1x1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXBvcG92ZXJcIj5cdTAwM0MvaT5cdTAwM0MvYT4gICAgICAgIFx1MDAzQy9zcGFuPiAgICBcdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiB0YXJnZXQ9XCJfdG9wXCIgcmVsPVwibm9vcGVuZXJcIiB0aXRsZT1cIktpbmltb3JlIFdvdmVuIFJhdHRhbiBFYXJyaW5ncyBIYW5kbWFkZSBTdHJhdyBFYXJyaW5ncyBMaWdodHdlaWdodCBCb2hlbWlhbiBHZW9tZXRyaWMgU3RhdGVtZW50IERyb3AgRWFycmluZ3MgZm9yIFdvbWVuIEdpcmxzZSBKZXdlbHJ5XCIgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vZ3Avc2xyZWRpcmVjdC9waWNhc3NvUmVkaXJlY3QuaHRtbC9yZWY9c3NwYV9ka19kZXRhaWxfMj9pZT1VVEY4JmFtcDthZElkPUEwNzM5NzA3MlZDNURPTkM4WFJBSSZhbXA7cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTM1ODYxMTcxNDUxOTI3NTAmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsMiZhbXA7dXJsPSUyRmRwJTJGQjA3VzUzQk01RiUyRnJlZiUzRHNzcGFfZGtfZGV0YWlsXzIlM0Zwc2MlM0QxXCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDaW1nIGFsdD1cIktpbmltb3JlIFdvdmVuIFJhdHRhbiBFYXJyaW5ncyBIYW5kbWFkZSBTdHJhdyBFYXJyaW5ncyBMaWdodHdlaWdodCBCb2hlbWlhbiBHZW9tZXRyaWMgU3RhdGVtZW50IERyb3AgRWFycmluZ3MgZm9yIFdvbWVuIEdpcmxzZSBKZXdlbHJ5XCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFOMlFOWjNXREwuX0FDX1NSMzIwLDMyMF8uanBnXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2VcIiBoZWlnaHQ9XCIxNjBcIiB3aWR0aD1cIjE2MFwiIGRhdGEtYS1keW5hbWljLWltYWdlPVwieyZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxTjJRTlozV0RMLl9BQ19TUjMyMCwzMjBfLmpwZyZxdW90OzpbMzIwLDMyMF0sJnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFOMlFOWjNXREwuX0FDX1NSNDgwLDQ4MF8uanBnJnF1b3Q7Ols0ODAsNDgwXSwmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MU4yUU5aM1dETC5fQUNfU1IxNjAsMTYwXy5qcGcmcXVvdDs6WzE2MCwxNjBdfVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGRhdGEtcm93cz1cIjRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cInNwb25zb3JlZC1wcm9kdWN0cy10cnVuY2F0b3ItdHJ1bmNhdGUgc3BvbnNvcmVkLXByb2R1Y3RzLXRydW5jYXRvci1saW5lLWNsYW1wLTRcIj4gICAgICAgICAgICBLaW5pbW9yZSBXb3ZlbiBSYXR0YW4gRWFycmluZ3MgSGFuZG1hZGUgU3RyYXcgRWFycmluZ3MgTGlnaHR3ZWlnaHQgQm9oZW1pYW4gR2VvbWV0ci4uLlx1MDAzQy9kaXY+ICAgICAgICAgICAgXHUwMDNDL2E+ICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtY29sb3ItcHJpY2VcIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtY29sb3ItcHJpY2VcIj4kNi45OVx1MDAzQy9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gc3R5bGU9XCJwb3NpdGlvbjogcmVsYXRpdmU7IHRvcDogMnB4O1wiPiAgICAgICAgICAgICAgICBcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wcmltZSBhLWljb24tc21hbGxcIiByb2xlPVwiaW1nXCI+XHUwMDNDL2k+ICAgICAgICAgICAgXHUwMDNDL3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0MvbGk+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NsaSBjbGFzcz1cImEtY2Fyb3VzZWwtY2FyZFwiIHN0eWxlPVwid2lkdGg6MTYwcHg7XCIgcm9sZT1cImxpc3RpdGVtXCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInNwX2RldGFpbDJfQjA3UjE1VjlQOVwiIGRhdGEtYXNpbj1cIkIwN1IxNVY5UDlcIiBkYXRhLXAxM24tYXNpbi1tZXRhZGF0YT1cInsmcXVvdDtyZWYmcXVvdDs6JnF1b3Q7c3NwYV9ka19kZXRhaWxfMyZxdW90OywmcXVvdDthc2luJnF1b3Q7OiZxdW90O0IwN1IxNVY5UDkmcXVvdDt9XCIgZGF0YS12aWV3cGl4ZWx1cmw9XCIvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xvZ2dpbmcvbG9nLWFjdGlvbi5odG1sP3F1YWxpZmllcj0xNTY5Nzk0MTg4JmFtcDtpZD0zNTg2MTE3MTQ1MTkyNzUwJmFtcDt3aWRnZXROYW1lPXNwX2RldGFpbDImYW1wO2FkSWQ9MjAwMDE1NDk2MDQ1OTMxJmFtcDthZEluZGV4PTNcIiBjbGFzcz1cImEtc2VjdGlvbiBzcF9vZmZlclZlcnRpY2FsXCI+ICAgICAgICAgICAgICAgIFx1MDAzQ25vc2NyaXB0PiAgICAgICAgXHUwMDNDaW1nIGFsdD1cIlwiIHNyYz1cIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmaWQ9MzU4NjExNzE0NTE5Mjc1MCZ3aWRnZXROYW1lPXNwX2RldGFpbDImYWRJZD0yMDAwMTU0OTYwNDU5MzEmZXZlbnRUeXBlPTImYWRJbmRleD0zXCI+ICAgIFx1MDAzQy9ub3NjcmlwdD4gICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj4oZnVuY3Rpb24oZikge2Yod2luZG93LlAuX25hbWVzcGFjZShcIkZpcmViaXJkU3BSZW5kZXJpbmdcIikpO30oZnVuY3Rpb24oUCkgeyAgICAgICAgUC53aGVuKCdTcG9uc29yZWRQcm9kdWN0c1ZpZXdhYmlsaXR5JykuZXhlY3V0ZShmdW5jdGlvbihTVikgeyAgICAgICAgICAgIFNWLmxvYWRJbWFnZVBpeGVsKFwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZpZD0zNTg2MTE3MTQ1MTkyNzUwJndpZGdldE5hbWU9c3BfZGV0YWlsMiZhZElkPTIwMDAxNTQ5NjA0NTkzMSZldmVudFR5cGU9MiZhZEluZGV4PTNcIik7ICAgICAgICB9KTsgICAgfSkpO1x1MDAzQy9zY3JpcHQ+ICAgICAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPihmdW5jdGlvbihmKSB7Zih3aW5kb3cuUC5fbmFtZXNwYWNlKFwiRmlyZWJpcmRTcFJlbmRlcmluZ1wiKSk7fShmdW5jdGlvbihQKSB7ICAgIFAud2hlbignQScsICdTcG9uc29yZWRQcm9kdWN0c1ZpZXdhYmlsaXR5JykuZXhlY3V0ZShmdW5jdGlvbihBLCBTVikgeyAgICAgICAgU1YucmVnaXN0ZXJWaWV3VHJhY2tpbmdFbGVtZW50KEEuJChcIiNzcF9kZXRhaWwyX0IwN1IxNVY5UDlcIiksIFwic3BfZGV0YWlsMlwiKTsgICAgfSk7fSkpO1x1MDAzQy9zY3JpcHQ+ICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJwYV9mZWVkYmFja0Zvcm1fY29udGFpbmVyX3NwX2RldGFpbDJcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIj4gICAgXHUwMDNDZGl2IGNsYXNzPVwic3BfYWRJRFwiPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImEtbW9kYWxcIiBkYXRhLWEtbW9kYWw9XCJ7JnF1b3Q7Zm9vdGVyJnF1b3Q7OiZxdW90O1xcdTAwM2NkaXYgaWQ9J3Nwb25zb3JlZC1wcm9kdWN0cy1mZWVkYmFjay1mb290ZXInPiZxdW90OywmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzomcXVvdDtmYWxzZSZxdW90OywmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O3Nwb25zb3JlZC1wcm9kdWN0cy1mZWVkYmFjay1tb2RhbC1zcF9kZXRhaWwyJnF1b3Q7LCZxdW90O3dpZHRoJnF1b3Q7OiZxdW90OzM1MCZxdW90OywmcXVvdDtoZWFkZXImcXVvdDs6JnF1b3Q7U2hhcmUgeW91ciBmZWVkYmFjayZxdW90OywmcXVvdDt1cmwmcXVvdDs6JnF1b3Q7L2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sYXp5TG9hZC9oYW5kbGVyL3NwLWZlZWRiYWNrLWhhbmRsZXIuaHRtbD9wbD1MbWdicEpCQllrdXdYeDdCUUVhS0dtZTVGbHNZTkc4OGxwbElJWUp0MjZUSGpUOVFtQnQwZ2VrJTJGQWZpcUlMek9ubEkwUGR0dGZ5MHIlMEF4WFJ0cHQ0MU5oWTZGZmtiMFN0MHFMMmwzOElRbnBoa1I2YkgyJTJCalFVZU1BZyUyQmdtcCUyQmVMU2N2SlRvSHVhNU5mZmJlTHhHNWRheWtmJTBBY1VSTWNFVkxqYmdvUVd2cjVJS1ZadlU5cWdoNXQxak9SQzIlMkYxclBEaGlJY2JIZXVNbGtOdSUyRmZ5ODhnOWVyRDcxWHhLOEdQYSUyRjVLWCUwQVVJbXdrMGJNUm9JaCUyRiUyQlRsZ2ZHZDBNMWR1YXc4TkVPbFlaSHZlc0RyMEg5b3Y3b2RGWm9yUkhQekw3T2xnNUlwVXolMkZ1ckVDcXJMRGMlMEFqc0lycFlwTlE4Yk5nVnVDdEgwdmZaVlRWUHYlMkJOSGdxVXFBZk9QMlZqbzkyQlUxSkNNQmlUTmhlcENJR2E0OHgzQ0RieTAzRmxzejElMEE5WWRYOEE0c2ZTOEZqQ2Q5TUg5Z21wMmxJNDhwNjElMkZkVGNzWGZwYlJPZDBqYko2T2twUjJ2Ulo3RGQ1MVNUOXBkNzJsc3hjTTVibE0lMEF5ZkFsSSUyRmVvT002a3ZPJTJGQUtNbE81WkM5eHBZJTJGWHpvNU1QeDZqVXpPOWNWWWdUMTZLc2RmcVhQalpSWFZBMzRzMTV5ZmJ5dWpuNVAlMkIlMEF0Rm5kYXdCUnEzcGdUWnRrZVY2MUIxS3c3aGIlMkIwaWZnWnpFbjlBYnl0JTJGU0tDN0oxWkNYMU5vbXc0c3JHYzk3JTJCQUZ0YlNmSkJZbzNQJTBBVHFkbkRBMSUyRk5QSXJwSmc0WnRMZGxldXFjeFBTQUtPWmklMkZ3ckxkREw4eXclM0QmcXVvdDt9XCI+ICAgICAgICAgICAgXHUwMDNDYSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgY2xhc3M9XCJhLXBvcG92ZXItdHJpZ2dlciBhLWRlY2xhcmF0aXZlXCI+RmVlZGJhY2tcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wb3BvdmVyXCI+XHUwMDNDL2k+XHUwMDNDL2E+ICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGFyZ2V0PVwiX3RvcFwiIHJlbD1cIm5vb3BlbmVyXCIgdGl0bGU9XCJNYXJ0aW5lIFdlc3RlciBMZXZlcmJhY2sgRHJvcCBTcXVhcmUgRWFycmluZ3MgQ2hlY2tlcmJvYXJkIEN1dCBDcnlzdGFsIEdlbXN0b25lIERhbmdsZXMgRWFycmluZ3MgSmV3ZWxyeSBmb3IgV29tZW5cIiBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9zbHJlZGlyZWN0L3BpY2Fzc29SZWRpcmVjdC5odG1sL3JlZj1zc3BhX2RrX2RldGFpbF8zP2llPVVURjgmYW1wO2FkSWQ9QTA5MTU1NzYxVktVTUxXWTI1TzdVJmFtcDtxdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9MzU4NjExNzE0NTE5Mjc1MCZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwyJmFtcDt1cmw9JTJGZHAlMkZCMDdSMTVWOVA5JTJGcmVmJTNEc3NwYV9ka19kZXRhaWxfMyUzRnBzYyUzRDFcIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NpbWcgYWx0PVwiTWFydGluZSBXZXN0ZXIgTGV2ZXJiYWNrIERyb3AgU3F1YXJlIEVhcnJpbmdzIENoZWNrZXJib2FyZCBDdXQgQ3J5c3RhbCBHZW1zdG9uZSBEYW5nbGVzIEVhcnJpbmdzIEpld2VscnkgZm9yIFdvbWVuXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFvWCtOcmRUMEwuX0FDX1NSMzIwLDMyMF8uanBnXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2VcIiBoZWlnaHQ9XCIxNjBcIiB3aWR0aD1cIjE2MFwiIGRhdGEtYS1keW5hbWljLWltYWdlPVwieyZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxb1grTnJkVDBMLl9BQ19TUjMyMCwzMjBfLmpwZyZxdW90OzpbMzIwLDMyMF0sJnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFvWCtOcmRUMEwuX0FDX1NSMTYwLDE2MF8uanBnJnF1b3Q7OlsxNjAsMTYwXSwmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MW9YK05yZFQwTC5fQUNfU1I0ODAsNDgwXy5qcGcmcXVvdDs6WzQ4MCw0ODBdfVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGRhdGEtcm93cz1cIjRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cInNwb25zb3JlZC1wcm9kdWN0cy10cnVuY2F0b3ItdHJ1bmNhdGUgc3BvbnNvcmVkLXByb2R1Y3RzLXRydW5jYXRvci1saW5lLWNsYW1wLTRcIj4gICAgICAgICAgICBNYXJ0aW5lIFdlc3RlciBMZXZlcmJhY2sgRHJvcCBTcXVhcmUgRWFycmluZ3MgQ2hlY2tlcmJvYXJkIEN1dCBDcnlzdGFsIEdlbXN0b25lIERhbi4uLlx1MDAzQy9kaXY+ICAgICAgICAgICAgXHUwMDNDL2E+ICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+ICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBhZFJldmlld0xpbmsgYS10ZXh0LW5vcm1hbFwiIHRhcmdldD1cIl90b3BcIiByZWw9XCJub29wZW5lclwiIHRpdGxlPVwiTWFydGluZSBXZXN0ZXIgTGV2ZXJiYWNrIERyb3AgU3F1YXJlIEVhcnJpbmdzIENoZWNrZXJib2FyZCBDdXQgQ3J5c3RhbCBHZW1zdG9uZSBEYW5nbGVzIEVhcnJpbmdzIEpld2VscnkgZm9yIFdvbWVuXCIgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vZ3Avc2xyZWRpcmVjdC9waWNhc3NvUmVkaXJlY3QuaHRtbC9yZWY9c3NwYV9ka19kZXRhaWxfMz9pZT1VVEY4JmFtcDthZElkPUEwOTE1NTc2MVZLVU1MV1kyNU83VSZhbXA7cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTM1ODYxMTcxNDUxOTI3NTAmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsMiZhbXA7dXJsPSUyRmRwJTJGQjA3UjE1VjlQOSUyRnJlZiUzRHNzcGFfZGtfZGV0YWlsXzMlM0Zwc2MlM0QxI2N1c3RvbWVyUmV2aWV3c1wiPiAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3RhciBhLXN0YXItNVwiPlx1MDAzQy9pPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtY29sb3ItbGlua1wiPjE2XHUwMDNDL3NwYW4+ICAgICAgICBcdTAwM0MvYT4gICAgXHUwMDNDL2Rpdj4gICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1jb2xvci1wcmljZVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1jb2xvci1wcmljZVwiPiQxOC45OVx1MDAzQy9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gc3R5bGU9XCJwb3NpdGlvbjogcmVsYXRpdmU7IHRvcDogMnB4O1wiPiAgICAgICAgICAgICAgICBcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wcmltZSBhLWljb24tc21hbGxcIiByb2xlPVwiaW1nXCI+XHUwMDNDL2k+ICAgICAgICAgICAgXHUwMDNDL3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0MvbGk+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NsaSBjbGFzcz1cImEtY2Fyb3VzZWwtY2FyZFwiIHN0eWxlPVwid2lkdGg6MTYwcHg7XCIgcm9sZT1cImxpc3RpdGVtXCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInNwX2RldGFpbDJfQjAxRjhGTU5HVVwiIGRhdGEtYXNpbj1cIkIwMUY4Rk1OR1VcIiBkYXRhLXAxM24tYXNpbi1tZXRhZGF0YT1cInsmcXVvdDtyZWYmcXVvdDs6JnF1b3Q7c3NwYV9ka19kZXRhaWxfNCZxdW90OywmcXVvdDthc2luJnF1b3Q7OiZxdW90O0IwMUY4Rk1OR1UmcXVvdDt9XCIgZGF0YS12aWV3cGl4ZWx1cmw9XCIvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xvZ2dpbmcvbG9nLWFjdGlvbi5odG1sP3F1YWxpZmllcj0xNTY5Nzk0MTg4JmFtcDtpZD0zNTg2MTE3MTQ1MTkyNzUwJmFtcDt3aWRnZXROYW1lPXNwX2RldGFpbDImYW1wO2FkSWQ9MjAwMDA2MzQ5MDEzMjMxJmFtcDthZEluZGV4PTRcIiBjbGFzcz1cImEtc2VjdGlvbiBzcF9vZmZlclZlcnRpY2FsXCI+ICAgICAgICAgICAgICAgIFx1MDAzQ25vc2NyaXB0PiAgICAgICAgXHUwMDNDaW1nIGFsdD1cIlwiIHNyYz1cIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmaWQ9MzU4NjExNzE0NTE5Mjc1MCZ3aWRnZXROYW1lPXNwX2RldGFpbDImYWRJZD0yMDAwMDYzNDkwMTMyMzEmZXZlbnRUeXBlPTImYWRJbmRleD00XCI+ICAgIFx1MDAzQy9ub3NjcmlwdD4gICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj4oZnVuY3Rpb24oZikge2Yod2luZG93LlAuX25hbWVzcGFjZShcIkZpcmViaXJkU3BSZW5kZXJpbmdcIikpO30oZnVuY3Rpb24oUCkgeyAgICAgICAgUC53aGVuKCdTcG9uc29yZWRQcm9kdWN0c1ZpZXdhYmlsaXR5JykuZXhlY3V0ZShmdW5jdGlvbihTVikgeyAgICAgICAgICAgIFNWLmxvYWRJbWFnZVBpeGVsKFwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZpZD0zNTg2MTE3MTQ1MTkyNzUwJndpZGdldE5hbWU9c3BfZGV0YWlsMiZhZElkPTIwMDAwNjM0OTAxMzIzMSZldmVudFR5cGU9MiZhZEluZGV4PTRcIik7ICAgICAgICB9KTsgICAgfSkpO1x1MDAzQy9zY3JpcHQ+ICAgICAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPihmdW5jdGlvbihmKSB7Zih3aW5kb3cuUC5fbmFtZXNwYWNlKFwiRmlyZWJpcmRTcFJlbmRlcmluZ1wiKSk7fShmdW5jdGlvbihQKSB7ICAgIFAud2hlbignQScsICdTcG9uc29yZWRQcm9kdWN0c1ZpZXdhYmlsaXR5JykuZXhlY3V0ZShmdW5jdGlvbihBLCBTVikgeyAgICAgICAgU1YucmVnaXN0ZXJWaWV3VHJhY2tpbmdFbGVtZW50KEEuJChcIiNzcF9kZXRhaWwyX0IwMUY4Rk1OR1VcIiksIFwic3BfZGV0YWlsMlwiKTsgICAgfSk7fSkpO1x1MDAzQy9zY3JpcHQ+ICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJwYV9mZWVkYmFja0Zvcm1fY29udGFpbmVyX3NwX2RldGFpbDJcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIj4gICAgXHUwMDNDZGl2IGNsYXNzPVwic3BfYWRJRFwiPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImEtbW9kYWxcIiBkYXRhLWEtbW9kYWw9XCJ7JnF1b3Q7Zm9vdGVyJnF1b3Q7OiZxdW90O1xcdTAwM2NkaXYgaWQ9J3Nwb25zb3JlZC1wcm9kdWN0cy1mZWVkYmFjay1mb290ZXInPiZxdW90OywmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzomcXVvdDtmYWxzZSZxdW90OywmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O3Nwb25zb3JlZC1wcm9kdWN0cy1mZWVkYmFjay1tb2RhbC1zcF9kZXRhaWwyJnF1b3Q7LCZxdW90O3dpZHRoJnF1b3Q7OiZxdW90OzM1MCZxdW90OywmcXVvdDtoZWFkZXImcXVvdDs6JnF1b3Q7U2hhcmUgeW91ciBmZWVkYmFjayZxdW90OywmcXVvdDt1cmwmcXVvdDs6JnF1b3Q7L2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sYXp5TG9hZC9oYW5kbGVyL3NwLWZlZWRiYWNrLWhhbmRsZXIuaHRtbD9wbD0ySWU1TzhtOXRaQ1NHTkRlVUFZRW5IODZNYVhqdDUwYW1RS09wdnp2b0lId254cE1TU1JiJTJGajBtY2IyRGFYVU5INHMlMkZkZnlwdUNkRyUwQW5zT2xlY3JXd2ZZODVaY21paWpFQ0p5b1oxcEphMlFIOTJhamxueGp0Q2hqWXZwbzM0ZlhwZDhUbDhBdXphOFdDd0RNMGVRUmJHUiUyRiUwQTQlMkY2S0YlMkZnU3hsSjFoaFlWWlRXd20zJTJCeXBHSlBnRmp4b25zWGp5dExjaXRYMzVVcmwlMkJDd1dUMyUyQnZDM2oxVXZscVQ3WFpiMk5TRGF5JTBBZmRVdzJua3IlMkZ2OER2OEpYOEJPWFJSRThKVGM4SVJQUnpvbHd4NFZoWm1NUHBWdnBhJTJGOXFsSlh0SFoza2s2dWtpanQ2eXRTZzBsTnMlMEFHaWZzdHhLQ0lkUjF6RFJmTzZRZnpRZDAlMkZqQSUyQjRCOUIyVTQzJTJGZ2IlMkJzanBXYkFTMXk1R3dSemtKR2gzR2RsJTJCTGpYc1lGOTY1THE3eSUwQXREVFRoYUxkdSUyQkh1NUQ2OTRuVzRqdFBXZUIzNVp0QW9WNWR0TktkS256TCUyRmFEeExKQSUyRmdpaGVEWEI4YmxhVyUyQmQ2bGklMkZGNzVGcXYlMkYlMEFBOXRRcCUyQkZXcktqWjZLTmJwdGJGRnI1dGxORkFFbnN2TEtUWUdLQTdxVFpWZmZ4WTdnSWdvb0REb1Q0T2swMCUyQnlxZ2gxdldHZWlQbyUwQWp6V0lRWHFVY01ITXFkbm85RUNKV05aRFc4cERsRmx0OVYyM1NZUzFIZEgwd0djOUtvViUyQmlTczc3VHowbE0lMkZWdzlVQjFhT1IyTU5nJTBBcjNCVFhQUlBIYzZyYlRCM2VFciUyRmY5dDVBRFRJTENWMHR0MlQ3OHN3c05ybiUyQmx5cXVZbVolMkZBJTNEJTNEJnF1b3Q7fVwiPiAgICAgICAgICAgIFx1MDAzQ2EgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIGNsYXNzPVwiYS1wb3BvdmVyLXRyaWdnZXIgYS1kZWNsYXJhdGl2ZVwiPkZlZWRiYWNrXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcG9wb3ZlclwiPlx1MDAzQy9pPlx1MDAzQy9hPiAgICAgICAgXHUwMDNDL3NwYW4+ICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIHRhcmdldD1cIl90b3BcIiByZWw9XCJub29wZW5lclwiIHRpdGxlPVwiS2Vtc3RvbmUgQ29sb3JmdWwgQ3ViaWMgWmlyY29uaWEgTGV2ZXJiYWNrIERhbmdsZSBFYXJyaW5ncyBSb3NlIEdvbGQgUGxhdGVkIEpld2VscnkgZm9yIFdvbWVuXCIgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vZ3Avc2xyZWRpcmVjdC9waWNhc3NvUmVkaXJlY3QuaHRtbC9yZWY9c3NwYV9ka19kZXRhaWxfND9pZT1VVEY4JmFtcDthZElkPUEwNDc0NTM5MVM1WVZTVkdJMVpMUiZhbXA7cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTM1ODYxMTcxNDUxOTI3NTAmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsMiZhbXA7dXJsPSUyRmRwJTJGQjAxRjhGTU5HVSUyRnJlZiUzRHNzcGFfZGtfZGV0YWlsXzQlM0Zwc2MlM0QxXCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDaW1nIGFsdD1cIktlbXN0b25lIENvbG9yZnVsIEN1YmljIFppcmNvbmlhIExldmVyYmFjayBEYW5nbGUgRWFycmluZ3MgUm9zZSBHb2xkIFBsYXRlZCBKZXdlbHJ5IGZvciBXb21lblwiIHNyYz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxV3h5SDhtcDVMLl9BQ19TUjMyMCwzMjBfLmpwZ1wiIGNsYXNzPVwiYS1keW5hbWljLWltYWdlXCIgaGVpZ2h0PVwiMTYwXCIgd2lkdGg9XCIxNjBcIiBkYXRhLWEtZHluYW1pYy1pbWFnZT1cInsmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MVd4eUg4bXA1TC5fQUNfU1IzMjAsMzIwXy5qcGcmcXVvdDs6WzMyMCwzMjBdLCZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxV3h5SDhtcDVMLl9BQ19TUjQ4MCw0ODBfLmpwZyZxdW90OzpbNDgwLDQ4MF0sJnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFXeHlIOG1wNUwuX0FDX1NSMTYwLDE2MF8uanBnJnF1b3Q7OlsxNjAsMTYwXX1cIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBkYXRhLXJvd3M9XCI0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgY2xhc3M9XCJzcG9uc29yZWQtcHJvZHVjdHMtdHJ1bmNhdG9yLXRydW5jYXRlIHNwb25zb3JlZC1wcm9kdWN0cy10cnVuY2F0b3ItbGluZS1jbGFtcC00XCI+ICAgICAgICAgICAgS2Vtc3RvbmUgQ29sb3JmdWwgQ3ViaWMgWmlyY29uaWEgTGV2ZXJiYWNrIERhbmdsZSBFYXJyaW5ncyBSb3NlIEdvbGQgUGxhdGVkIEpld2VscnkuLi5cdTAwM0MvZGl2PiAgICAgICAgICAgIFx1MDAzQy9hPiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPiAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWwgYWRSZXZpZXdMaW5rIGEtdGV4dC1ub3JtYWxcIiB0YXJnZXQ9XCJfdG9wXCIgcmVsPVwibm9vcGVuZXJcIiB0aXRsZT1cIktlbXN0b25lIENvbG9yZnVsIEN1YmljIFppcmNvbmlhIExldmVyYmFjayBEYW5nbGUgRWFycmluZ3MgUm9zZSBHb2xkIFBsYXRlZCBKZXdlbHJ5IGZvciBXb21lblwiIGhyZWY9XCJodHRwczovL3d3dy5hbWF6b24uY29tL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXNzcGFfZGtfZGV0YWlsXzQ/aWU9VVRGOCZhbXA7YWRJZD1BMDQ3NDUzOTFTNVlWU1ZHSTFaTFImYW1wO3F1YWxpZmllcj0xNTY5Nzk0MTg4JmFtcDtpZD0zNTg2MTE3MTQ1MTkyNzUwJmFtcDt3aWRnZXROYW1lPXNwX2RldGFpbDImYW1wO3VybD0lMkZkcCUyRkIwMUY4Rk1OR1UlMkZyZWYlM0Rzc3BhX2RrX2RldGFpbF80JTNGcHNjJTNEMSNjdXN0b21lclJldmlld3NcIj4gICAgICAgIFx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXIgYS1zdGFyLTQtNVwiPlx1MDAzQy9pPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtY29sb3ItbGlua1wiPjUxXHUwMDNDL3NwYW4+ICAgICAgICBcdTAwM0MvYT4gICAgXHUwMDNDL2Rpdj4gICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1jb2xvci1wcmljZVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1jb2xvci1wcmljZVwiPiQyNC45OVx1MDAzQy9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gc3R5bGU9XCJwb3NpdGlvbjogcmVsYXRpdmU7IHRvcDogMnB4O1wiPiAgICAgICAgICAgICAgICBcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wcmltZSBhLWljb24tc21hbGxcIiByb2xlPVwiaW1nXCI+XHUwMDNDL2k+ICAgICAgICAgICAgXHUwMDNDL3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0MvbGk+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NsaSBjbGFzcz1cImEtY2Fyb3VzZWwtY2FyZFwiIHN0eWxlPVwid2lkdGg6MTYwcHg7XCIgcm9sZT1cImxpc3RpdGVtXCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cInNwX2RldGFpbDJfQjA3REs4UExQS1wiIGRhdGEtYXNpbj1cIkIwN0RLOFBMUEtcIiBkYXRhLXAxM24tYXNpbi1tZXRhZGF0YT1cInsmcXVvdDtyZWYmcXVvdDs6JnF1b3Q7c3NwYV9ka19kZXRhaWxfNSZxdW90OywmcXVvdDthc2luJnF1b3Q7OiZxdW90O0IwN0RLOFBMUEsmcXVvdDt9XCIgZGF0YS12aWV3cGl4ZWx1cmw9XCIvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xvZ2dpbmcvbG9nLWFjdGlvbi5odG1sP3F1YWxpZmllcj0xNTY5Nzk0MTg4JmFtcDtpZD0zNTg2MTE3MTQ1MTkyNzUwJmFtcDt3aWRnZXROYW1lPXNwX2RldGFpbDImYW1wO2FkSWQ9MjAwMDE4ODU5MzY5NTQxJmFtcDthZEluZGV4PTVcIiBjbGFzcz1cImEtc2VjdGlvbiBzcF9vZmZlclZlcnRpY2FsXCI+ICAgICAgICAgICAgICAgIFx1MDAzQ25vc2NyaXB0PiAgICAgICAgXHUwMDNDaW1nIGFsdD1cIlwiIHNyYz1cIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmaWQ9MzU4NjExNzE0NTE5Mjc1MCZ3aWRnZXROYW1lPXNwX2RldGFpbDImYWRJZD0yMDAwMTg4NTkzNjk1NDEmZXZlbnRUeXBlPTImYWRJbmRleD01XCI+ICAgIFx1MDAzQy9ub3NjcmlwdD4gICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj4oZnVuY3Rpb24oZikge2Yod2luZG93LlAuX25hbWVzcGFjZShcIkZpcmViaXJkU3BSZW5kZXJpbmdcIikpO30oZnVuY3Rpb24oUCkgeyAgICAgICAgUC53aGVuKCdTcG9uc29yZWRQcm9kdWN0c1ZpZXdhYmlsaXR5JykuZXhlY3V0ZShmdW5jdGlvbihTVikgeyAgICAgICAgICAgIFNWLmxvYWRJbWFnZVBpeGVsKFwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZpZD0zNTg2MTE3MTQ1MTkyNzUwJndpZGdldE5hbWU9c3BfZGV0YWlsMiZhZElkPTIwMDAxODg1OTM2OTU0MSZldmVudFR5cGU9MiZhZEluZGV4PTVcIik7ICAgICAgICB9KTsgICAgfSkpO1x1MDAzQy9zY3JpcHQ+ICAgICAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPihmdW5jdGlvbihmKSB7Zih3aW5kb3cuUC5fbmFtZXNwYWNlKFwiRmlyZWJpcmRTcFJlbmRlcmluZ1wiKSk7fShmdW5jdGlvbihQKSB7ICAgIFAud2hlbignQScsICdTcG9uc29yZWRQcm9kdWN0c1ZpZXdhYmlsaXR5JykuZXhlY3V0ZShmdW5jdGlvbihBLCBTVikgeyAgICAgICAgU1YucmVnaXN0ZXJWaWV3VHJhY2tpbmdFbGVtZW50KEEuJChcIiNzcF9kZXRhaWwyX0IwN0RLOFBMUEtcIiksIFwic3BfZGV0YWlsMlwiKTsgICAgfSk7fSkpO1x1MDAzQy9zY3JpcHQ+ICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJwYV9mZWVkYmFja0Zvcm1fY29udGFpbmVyX3NwX2RldGFpbDJcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIj4gICAgXHUwMDNDZGl2IGNsYXNzPVwic3BfYWRJRFwiPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImEtbW9kYWxcIiBkYXRhLWEtbW9kYWw9XCJ7JnF1b3Q7Zm9vdGVyJnF1b3Q7OiZxdW90O1xcdTAwM2NkaXYgaWQ9J3Nwb25zb3JlZC1wcm9kdWN0cy1mZWVkYmFjay1mb290ZXInPiZxdW90OywmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzomcXVvdDtmYWxzZSZxdW90OywmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O3Nwb25zb3JlZC1wcm9kdWN0cy1mZWVkYmFjay1tb2RhbC1zcF9kZXRhaWwyJnF1b3Q7LCZxdW90O3dpZHRoJnF1b3Q7OiZxdW90OzM1MCZxdW90OywmcXVvdDtoZWFkZXImcXVvdDs6JnF1b3Q7U2hhcmUgeW91ciBmZWVkYmFjayZxdW90OywmcXVvdDt1cmwmcXVvdDs6JnF1b3Q7L2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sYXp5TG9hZC9oYW5kbGVyL3NwLWZlZWRiYWNrLWhhbmRsZXIuaHRtbD9wbD1tNTFkUlk1dlZDJTJCT1B0RDlHTjhzTTFxUVFOQkQ0OXlod3hWQzJWWnlXcEVRS3VMRCUyRmJ6a0R3T1lBYmtFNUVKcm5ONms3eVEzd2dFViUwQUFtMDNRVGhwMzJ6emRUUloxUGxnNEE0TTVjazRlS3dyajl4bTJmWVA1bUtXUlpoaUc4WG14U0xDc1ZJRlVHRHFKb1BCRkV4M01ucEslMEE1Wjc0NWtEYTd1ZXlZem52Mmw2dHpqWVdNT2MwYyUyQkVsQVF1cktKWTF2R0tvTDFWJTJGMXlraTFGVzhHVmpKM3hkN010TFlDMnU2UERhQSUwQUtVVUdXaVR2OE1WWXY5UjVqUDNEUnEzZlVYbUIlMkJyQUM5YVo5WWQyQVFSc3p5QXhTbkFTNWhGMk9ncG9QTWwzbHF3a3NyREJxUEpJJTJGJTBBNnU0eks1Tm9NZUc3QWFwMHBzcHA3bERxenM3bHpvNExucjFkeDNtVjRxVHpyMmpvSHhHakE5ckN1amhHNXU1THdSNWl3Nm1jJTJCTSUyRkwlMEFMeGRzclFZSWw2ZENnSllkSXdhUnQ0RmclMkZkaVN5bkF3VHRNWUs0bzVXVFdxMGlaYm9GTlIzaWE5cXBDbmp6NGIyTUpXdkFGdUN1cTAlMEFuSlYxck9ia1hWcmhFZk41bUZLbjhpdW5MblhIZnlUV21iRHQzaHNhaFpzb3BFRDVKVHdEcUQ0RGpsUmpHRWZWcUVlM0ttdTZrZGY3JTBBZ2x2MWlvVCUyQnA2QmtXZEEzWmF4YkZuWmNPdFNheHF3OFEyc3F0ckJXdTglMkZCdyUyRlNkTiUyQlg0TURvb2ZvSGxKVUw4TkptQ2hTdDB3MlJQJTBBUENSQSUyRnNSZG9EcWhTQUQzWHhCejV5NzVFV2ozM3hkaFNpOHMxb3V2UTlRJTNEJnF1b3Q7fVwiPiAgICAgICAgICAgIFx1MDAzQ2EgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIGNsYXNzPVwiYS1wb3BvdmVyLXRyaWdnZXIgYS1kZWNsYXJhdGl2ZVwiPkZlZWRiYWNrXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcG9wb3ZlclwiPlx1MDAzQy9pPlx1MDAzQy9hPiAgICAgICAgXHUwMDNDL3NwYW4+ICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIHRhcmdldD1cIl90b3BcIiByZWw9XCJub29wZW5lclwiIHRpdGxlPVwiV2hpdGUgR29sZCBmaWxpZ3JlZSBEYW5nbGUgRWFycmluZ3MgU3RlcmxpbmcgU2lsdmVyIFBvc3QgVHdpc3QgV2F2ZSBEcm9wIEVhcnJpbmdzIGZvciBXb21lblwiIGhyZWY9XCJodHRwczovL3d3dy5hbWF6b24uY29tL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXNzcGFfZGtfZGV0YWlsXzU/aWU9VVRGOCZhbXA7YWRJZD1BMDQ1NDgyOTFYWkRNNlIySkRETlAmYW1wO3F1YWxpZmllcj0xNTY5Nzk0MTg4JmFtcDtpZD0zNTg2MTE3MTQ1MTkyNzUwJmFtcDt3aWRnZXROYW1lPXNwX2RldGFpbDImYW1wO3VybD0lMkZkcCUyRkIwN0RLOFBMUEslMkZyZWYlM0Rzc3BhX2RrX2RldGFpbF81JTNGcHNjJTNEMVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2ltZyBhbHQ9XCJXaGl0ZSBHb2xkIGZpbGlncmVlIERhbmdsZSBFYXJyaW5ncyBTdGVybGluZyBTaWx2ZXIgUG9zdCBUd2lzdCBXYXZlIERyb3AgRWFycmluZ3MgZm9yIFdvbWVuXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDF6N1R0QUxoOUwuX0FDX1NSMzIwLDMyMF8uanBnXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2VcIiBoZWlnaHQ9XCIxNjBcIiB3aWR0aD1cIjE2MFwiIGRhdGEtYS1keW5hbWljLWltYWdlPVwieyZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxejdUdEFMaDlMLl9BQ19TUjQ4MCw0ODBfLmpwZyZxdW90OzpbNDgwLDQ4MF0sJnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDF6N1R0QUxoOUwuX0FDX1NSMTYwLDE2MF8uanBnJnF1b3Q7OlsxNjAsMTYwXSwmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MXo3VHRBTGg5TC5fQUNfU1IzMjAsMzIwXy5qcGcmcXVvdDs6WzMyMCwzMjBdfVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGRhdGEtcm93cz1cIjRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cInNwb25zb3JlZC1wcm9kdWN0cy10cnVuY2F0b3ItdHJ1bmNhdGUgc3BvbnNvcmVkLXByb2R1Y3RzLXRydW5jYXRvci1saW5lLWNsYW1wLTRcIj4gICAgICAgICAgICBXaGl0ZSBHb2xkIGZpbGlncmVlIERhbmdsZSBFYXJyaW5ncyBTdGVybGluZyBTaWx2ZXIgUG9zdCBUd2lzdCBXYXZlIERyb3AgRWFycmluZ3MgZi4uLlx1MDAzQy9kaXY+ICAgICAgICAgICAgXHUwMDNDL2E+ICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+ICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBhZFJldmlld0xpbmsgYS10ZXh0LW5vcm1hbFwiIHRhcmdldD1cIl90b3BcIiByZWw9XCJub29wZW5lclwiIHRpdGxlPVwiV2hpdGUgR29sZCBmaWxpZ3JlZSBEYW5nbGUgRWFycmluZ3MgU3RlcmxpbmcgU2lsdmVyIFBvc3QgVHdpc3QgV2F2ZSBEcm9wIEVhcnJpbmdzIGZvciBXb21lblwiIGhyZWY9XCJodHRwczovL3d3dy5hbWF6b24uY29tL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXNzcGFfZGtfZGV0YWlsXzU/aWU9VVRGOCZhbXA7YWRJZD1BMDQ1NDgyOTFYWkRNNlIySkRETlAmYW1wO3F1YWxpZmllcj0xNTY5Nzk0MTg4JmFtcDtpZD0zNTg2MTE3MTQ1MTkyNzUwJmFtcDt3aWRnZXROYW1lPXNwX2RldGFpbDImYW1wO3VybD0lMkZkcCUyRkIwN0RLOFBMUEslMkZyZWYlM0Rzc3BhX2RrX2RldGFpbF81JTNGcHNjJTNEMSNjdXN0b21lclJldmlld3NcIj4gICAgICAgIFx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXIgYS1zdGFyLTQtNVwiPlx1MDAzQy9pPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtY29sb3ItbGlua1wiPjE3M1x1MDAzQy9zcGFuPiAgICAgICAgXHUwMDNDL2E+ICAgIFx1MDAzQy9kaXY+ICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtY29sb3ItcHJpY2VcIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtY29sb3ItcHJpY2VcIj4kMTIuOTlcdTAwM0Mvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIHN0eWxlPVwicG9zaXRpb246IHJlbGF0aXZlOyB0b3A6IDJweDtcIj4gICAgICAgICAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcHJpbWUgYS1pY29uLXNtYWxsXCIgcm9sZT1cImltZ1wiPlx1MDAzQy9pPiAgICAgICAgICAgIFx1MDAzQy9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0MvZGl2Plx1MDAzQy9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2xpPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDbGkgY2xhc3M9XCJhLWNhcm91c2VsLWNhcmRcIiBzdHlsZT1cIndpZHRoOjE2MHB4O1wiIHJvbGU9XCJsaXN0aXRlbVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJzcF9kZXRhaWwyX0IwN1YzM1pNVERcIiBkYXRhLWFzaW49XCJCMDdWMzNaTVREXCIgZGF0YS1wMTNuLWFzaW4tbWV0YWRhdGE9XCJ7JnF1b3Q7cmVmJnF1b3Q7OiZxdW90O3NzcGFfZGtfZGV0YWlsXzYmcXVvdDssJnF1b3Q7YXNpbiZxdW90OzomcXVvdDtCMDdWMzNaTVREJnF1b3Q7fVwiIGRhdGEtdmlld3BpeGVsdXJsPVwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9MzU4NjExNzE0NTE5Mjc1MCZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwyJmFtcDthZElkPTIwMDAxNTM0Mzg2NDQyMSZhbXA7YWRJbmRleD02XCIgY2xhc3M9XCJhLXNlY3Rpb24gc3Bfb2ZmZXJWZXJ0aWNhbFwiPiAgICAgICAgICAgICAgICBcdTAwM0Nub3NjcmlwdD4gICAgICAgIFx1MDAzQ2ltZyBhbHQ9XCJcIiBzcmM9XCIvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xvZ2dpbmcvbG9nLWFjdGlvbi5odG1sP3F1YWxpZmllcj0xNTY5Nzk0MTg4JmlkPTM1ODYxMTcxNDUxOTI3NTAmd2lkZ2V0TmFtZT1zcF9kZXRhaWwyJmFkSWQ9MjAwMDE1MzQzODY0NDIxJmV2ZW50VHlwZT0yJmFkSW5kZXg9NlwiPiAgICBcdTAwM0Mvbm9zY3JpcHQ+ICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHtmKHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJGaXJlYmlyZFNwUmVuZGVyaW5nXCIpKTt9KGZ1bmN0aW9uKFApIHsgICAgICAgIFAud2hlbignU3BvbnNvcmVkUHJvZHVjdHNWaWV3YWJpbGl0eScpLmV4ZWN1dGUoZnVuY3Rpb24oU1YpIHsgICAgICAgICAgICBTVi5sb2FkSW1hZ2VQaXhlbChcIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmaWQ9MzU4NjExNzE0NTE5Mjc1MCZ3aWRnZXROYW1lPXNwX2RldGFpbDImYWRJZD0yMDAwMTUzNDM4NjQ0MjEmZXZlbnRUeXBlPTImYWRJbmRleD02XCIpOyAgICAgICAgfSk7ICAgIH0pKTtcdTAwM0Mvc2NyaXB0PiAgICAgICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj4oZnVuY3Rpb24oZikge2Yod2luZG93LlAuX25hbWVzcGFjZShcIkZpcmViaXJkU3BSZW5kZXJpbmdcIikpO30oZnVuY3Rpb24oUCkgeyAgICBQLndoZW4oJ0EnLCAnU3BvbnNvcmVkUHJvZHVjdHNWaWV3YWJpbGl0eScpLmV4ZWN1dGUoZnVuY3Rpb24oQSwgU1YpIHsgICAgICAgIFNWLnJlZ2lzdGVyVmlld1RyYWNraW5nRWxlbWVudChBLiQoXCIjc3BfZGV0YWlsMl9CMDdWMzNaTVREXCIpLCBcInNwX2RldGFpbDJcIik7ICAgIH0pO30pKTtcdTAwM0Mvc2NyaXB0PiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwicGFfZmVlZGJhY2tGb3JtX2NvbnRhaW5lcl9zcF9kZXRhaWwyXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCI+ICAgIFx1MDAzQ2RpdiBjbGFzcz1cInNwX2FkSURcIj4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLW1vZGFsXCIgZGF0YS1hLW1vZGFsPVwieyZxdW90O2Zvb3RlciZxdW90OzomcXVvdDtcXHUwMDNjZGl2IGlkPSdzcG9uc29yZWQtcHJvZHVjdHMtZmVlZGJhY2stZm9vdGVyJz4mcXVvdDssJnF1b3Q7Y2xvc2VCdXR0b24mcXVvdDs6JnF1b3Q7ZmFsc2UmcXVvdDssJnF1b3Q7bmFtZSZxdW90OzomcXVvdDtzcG9uc29yZWQtcHJvZHVjdHMtZmVlZGJhY2stbW9kYWwtc3BfZGV0YWlsMiZxdW90OywmcXVvdDt3aWR0aCZxdW90OzomcXVvdDszNTAmcXVvdDssJnF1b3Q7aGVhZGVyJnF1b3Q7OiZxdW90O1NoYXJlIHlvdXIgZmVlZGJhY2smcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbGF6eUxvYWQvaGFuZGxlci9zcC1mZWVkYmFjay1oYW5kbGVyLmh0bWw/cGw9a0hEemY3Vm9oODJ1MTAyN2VLOUIydGdubUtwSkxPQWZOZzJqS1BwVE9MMnRkaCUyQmdUanBGSkdNTkVpNTRGJTJGeUF5JTJGdkl0MEJyZXhSaCUwQTVvc2pJQ3I2dEcwWU5GMzQxajBYdVhtUWFwMnJQTXpWc1BJZmRWZzBWczclMkJGV0Z1JTJGZ3FKY2UwUmhpQXBRTEJaODRPWnRYUzBDNVFHJTBBY0puOVFBYlVpek03WGZnekVIU1FsYzd0Rk9sY2pDME83Q0Z5RlFZMDRZMUdydzJzTHFyeHNqSnRVV0VPd2NDUUFJJTJCcThMcDBmeHRQJTBBcm9HWkFsclVDb0s4TGpNNm00bHIlMkJiQjZlZ1hvVnVZR1QyUXRycGxMYW1Bb25ZSHNvWUJYNFJrMXhTeHJTb2REbFZZNlNFaDA4RDFWJTBBOFNYWGFkUzdTenZVdmk5TnNQc0JzUSUyQk90QlJXeVFqYzhKVVVzWGd6N2lWd3dUWkhMJTJCS2JHTEEwMTNtYlk5NEtibXdraGJESHEyJTJCZSUwQW0zODJGZXZ5YzNHSEc3NUs4N0VRZjB1WFlMNUhjdTRuN0F5RmFienVoT3NiSFU2dm5DeXJvanhaaGhuJTJCTzRIRiUyQlJTMjZ3ZjJwbTh2JTBBcW9BTlhtN0RteEdFUHJTZTBxY3A1aER4ZUJQb3NuVVRvdmVQRVRJR2Q1SnA0ZHJDODZCbTdHNE5FclQzSWElMkZSbGpPQmVicU5TNUJDJTBBdWNXOWxRTjRYRE5YTU50ZTZ3T0g0cU5GNmslMkY4aWVvdmxFNklIemVQWmx5M3VQbFglMkY5MWlRSnNZUVhobDd2c01PNHZ6WnRwanROcXklMEFQY3Y4MThyYkNUMkQlMkJ3aURiNSUyQlNFN2xhYXNreFNMeGQmcXVvdDt9XCI+ICAgICAgICAgICAgXHUwMDNDYSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgY2xhc3M9XCJhLXBvcG92ZXItdHJpZ2dlciBhLWRlY2xhcmF0aXZlXCI+RmVlZGJhY2tcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wb3BvdmVyXCI+XHUwMDNDL2k+XHUwMDNDL2E+ICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGFyZ2V0PVwiX3RvcFwiIHJlbD1cIm5vb3BlbmVyXCIgdGl0bGU9XCIxMiBQYWlycyBCb2hlbWlhIE1ldGFsIEVhcnJpbmdzIFNldCBWaW50YWdlIFN0YXRlbWVudCBEcm9wIEVhcnJpbmdzIEZhdXggUGVhcmwgRGFuZ2xlIEVhcnJpbmdzIGZvciBXb21lbiBHaXJscywgR29sZCBhbmQgU2lsdmVyIChTdHlsZSBTZXQgMSlcIiBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9zbHJlZGlyZWN0L3BpY2Fzc29SZWRpcmVjdC5odG1sL3JlZj1zc3BhX2RrX2RldGFpbF82P2llPVVURjgmYW1wO2FkSWQ9QTAyMzY2MDgxRFlJSVdYMTNUOTRaJmFtcDtxdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9MzU4NjExNzE0NTE5Mjc1MCZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwyJmFtcDt1cmw9JTJGZHAlMkZCMDdWMzNaTVREJTJGcmVmJTNEc3NwYV9ka19kZXRhaWxfNiUzRnBzYyUzRDFcIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NpbWcgYWx0PVwiMTIgUGFpcnMgQm9oZW1pYSBNZXRhbCBFYXJyaW5ncyBTZXQgVmludGFnZSBTdGF0ZW1lbnQgRHJvcCBFYXJyaW5ncyBGYXV4IFBlYXJsIERhbmdsZSBFYXJyaW5ncyBmb3IgV29tZW4gR2lybHMsIEdvbGQgYW5kIFNpbHZlciAoU3R5bGUgU2V0IDEpXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFqbElTZFJSdkwuX0FDX1NSMzIwLDMyMF8uanBnXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2VcIiBoZWlnaHQ9XCIxNjBcIiB3aWR0aD1cIjE2MFwiIGRhdGEtYS1keW5hbWljLWltYWdlPVwieyZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxamxJU2RSUnZMLl9BQ19TUjE2MCwxNjBfLmpwZyZxdW90OzpbMTYwLDE2MF0sJnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFqbElTZFJSdkwuX0FDX1NSNDgwLDQ4MF8uanBnJnF1b3Q7Ols0ODAsNDgwXSwmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MWpsSVNkUlJ2TC5fQUNfU1IzMjAsMzIwXy5qcGcmcXVvdDs6WzMyMCwzMjBdfVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGRhdGEtcm93cz1cIjRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cInNwb25zb3JlZC1wcm9kdWN0cy10cnVuY2F0b3ItdHJ1bmNhdGUgc3BvbnNvcmVkLXByb2R1Y3RzLXRydW5jYXRvci1saW5lLWNsYW1wLTRcIj4gICAgICAgICAgICAxMiBQYWlycyBCb2hlbWlhIE1ldGFsIEVhcnJpbmdzIFNldCBWaW50YWdlIFN0YXRlbWVudCBEcm9wIEVhcnJpbmdzIEZhdXggUGVhcmwgRGFuZy4uLlx1MDAzQy9kaXY+ICAgICAgICAgICAgXHUwMDNDL2E+ICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+ICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBhZFJldmlld0xpbmsgYS10ZXh0LW5vcm1hbFwiIHRhcmdldD1cIl90b3BcIiByZWw9XCJub29wZW5lclwiIHRpdGxlPVwiMTIgUGFpcnMgQm9oZW1pYSBNZXRhbCBFYXJyaW5ncyBTZXQgVmludGFnZSBTdGF0ZW1lbnQgRHJvcCBFYXJyaW5ncyBGYXV4IFBlYXJsIERhbmdsZSBFYXJyaW5ncyBmb3IgV29tZW4gR2lybHMsIEdvbGQgYW5kIFNpbHZlciAoU3R5bGUgU2V0IDEpXCIgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vZ3Avc2xyZWRpcmVjdC9waWNhc3NvUmVkaXJlY3QuaHRtbC9yZWY9c3NwYV9ka19kZXRhaWxfNj9pZT1VVEY4JmFtcDthZElkPUEwMjM2NjA4MURZSUlXWDEzVDk0WiZhbXA7cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTM1ODYxMTcxNDUxOTI3NTAmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsMiZhbXA7dXJsPSUyRmRwJTJGQjA3VjMzWk1URCUyRnJlZiUzRHNzcGFfZGtfZGV0YWlsXzYlM0Zwc2MlM0QxI2N1c3RvbWVyUmV2aWV3c1wiPiAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3RhciBhLXN0YXItNFwiPlx1MDAzQy9pPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtY29sb3ItbGlua1wiPjhcdTAwM0Mvc3Bhbj4gICAgICAgIFx1MDAzQy9hPiAgICBcdTAwM0MvZGl2PiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLWNvbG9yLXByaWNlXCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNvbG9yLXByaWNlXCI+JDEyLjU5XHUwMDNDL3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBzdHlsZT1cInBvc2l0aW9uOiByZWxhdGl2ZTsgdG9wOiAycHg7XCI+ICAgICAgICAgICAgICAgIFx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXByaW1lIGEtaWNvbi1zbWFsbFwiIHJvbGU9XCJpbWdcIj5cdTAwM0MvaT4gICAgICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2xpIGNsYXNzPVwiYS1jYXJvdXNlbC1jYXJkXCIgc3R5bGU9XCJ3aWR0aDoxNjBweDtcIiByb2xlPVwibGlzdGl0ZW1cIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwic3BfZGV0YWlsMl9CMDc1ODJKMVNHXCIgZGF0YS1hc2luPVwiQjA3NTgySjFTR1wiIGRhdGEtcDEzbi1hc2luLW1ldGFkYXRhPVwieyZxdW90O3JlZiZxdW90OzomcXVvdDtzc3BhX2RrX2RldGFpbF83JnF1b3Q7LCZxdW90O2FzaW4mcXVvdDs6JnF1b3Q7QjA3NTgySjFTRyZxdW90O31cIiBkYXRhLXZpZXdwaXhlbHVybD1cIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTM1ODYxMTcxNDUxOTI3NTAmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsMiZhbXA7YWRJZD0yMDAwMDQ5NzI3MDA3NTEmYW1wO2FkSW5kZXg9N1wiIGNsYXNzPVwiYS1zZWN0aW9uIHNwX29mZmVyVmVydGljYWxcIj4gICAgICAgICAgICAgICAgXHUwMDNDbm9zY3JpcHQ+ICAgICAgICBcdTAwM0NpbWcgYWx0PVwiXCIgc3JjPVwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZpZD0zNTg2MTE3MTQ1MTkyNzUwJndpZGdldE5hbWU9c3BfZGV0YWlsMiZhZElkPTIwMDAwNDk3MjcwMDc1MSZldmVudFR5cGU9MiZhZEluZGV4PTdcIj4gICAgXHUwMDNDL25vc2NyaXB0PiAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPihmdW5jdGlvbihmKSB7Zih3aW5kb3cuUC5fbmFtZXNwYWNlKFwiRmlyZWJpcmRTcFJlbmRlcmluZ1wiKSk7fShmdW5jdGlvbihQKSB7ICAgICAgICBQLndoZW4oJ1Nwb25zb3JlZFByb2R1Y3RzVmlld2FiaWxpdHknKS5leGVjdXRlKGZ1bmN0aW9uKFNWKSB7ICAgICAgICAgICAgU1YubG9hZEltYWdlUGl4ZWwoXCIvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xvZ2dpbmcvbG9nLWFjdGlvbi5odG1sP3F1YWxpZmllcj0xNTY5Nzk0MTg4JmlkPTM1ODYxMTcxNDUxOTI3NTAmd2lkZ2V0TmFtZT1zcF9kZXRhaWwyJmFkSWQ9MjAwMDA0OTcyNzAwNzUxJmV2ZW50VHlwZT0yJmFkSW5kZXg9N1wiKTsgICAgICAgIH0pOyAgICB9KSk7XHUwMDNDL3NjcmlwdD4gICAgICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHtmKHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJGaXJlYmlyZFNwUmVuZGVyaW5nXCIpKTt9KGZ1bmN0aW9uKFApIHsgICAgUC53aGVuKCdBJywgJ1Nwb25zb3JlZFByb2R1Y3RzVmlld2FiaWxpdHknKS5leGVjdXRlKGZ1bmN0aW9uKEEsIFNWKSB7ICAgICAgICBTVi5yZWdpc3RlclZpZXdUcmFja2luZ0VsZW1lbnQoQS4kKFwiI3NwX2RldGFpbDJfQjA3NTgySjFTR1wiKSwgXCJzcF9kZXRhaWwyXCIpOyAgICB9KTt9KSk7XHUwMDNDL3NjcmlwdD4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cInBhX2ZlZWRiYWNrRm9ybV9jb250YWluZXJfc3BfZGV0YWlsMlwiIHN0eWxlPVwiZGlzcGxheTpub25lO1wiPiAgICBcdTAwM0NkaXYgY2xhc3M9XCJzcF9hZElEXCI+ICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYS1tb2RhbFwiIGRhdGEtYS1tb2RhbD1cInsmcXVvdDtmb290ZXImcXVvdDs6JnF1b3Q7XFx1MDAzY2RpdiBpZD0nc3BvbnNvcmVkLXByb2R1Y3RzLWZlZWRiYWNrLWZvb3Rlcic+JnF1b3Q7LCZxdW90O2Nsb3NlQnV0dG9uJnF1b3Q7OiZxdW90O2ZhbHNlJnF1b3Q7LCZxdW90O25hbWUmcXVvdDs6JnF1b3Q7c3BvbnNvcmVkLXByb2R1Y3RzLWZlZWRiYWNrLW1vZGFsLXNwX2RldGFpbDImcXVvdDssJnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7MzUwJnF1b3Q7LCZxdW90O2hlYWRlciZxdW90OzomcXVvdDtTaGFyZSB5b3VyIGZlZWRiYWNrJnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xhenlMb2FkL2hhbmRsZXIvc3AtZmVlZGJhY2staGFuZGxlci5odG1sP3BsPXZ2M1ltdnVUUm1EdjhXR3k2JTJCS29EUDd4N2lYa1RDRDlGVXpGTm5ndVZOQzE4OEpyc0ZBbHNEUk9ha0tGNVdvUEI5SiUyQlVqbXFNWFBQJTBBcVBkWHpvN2R5NnptTEhjV01MNUdQUUZmYUV6aSUyQjROVlVGMHZ6V1BxRHdSOWwlMkYyJTJCMm4xSnA3MlpkeiUyRkN6TTRXbEJ0bDh3NGFSMGQyJTBBMCUyRkZHWlVPSGtzZEYzU0ZJZ2dlRllkenZrcWhKSkZCUXBnM3FzNEpHZWJzbmFZVklKMSUyQlFONnNGZ0JVZ3RFanhWSE1GOXk4NDNlN0clMEFKdHVsQUElMkZRNDNCM1klMkZEbkU2MEdEZjRIcWx3SGVtZWs4aWhpWjlqUVVXelRVSVBOalIxR2dNNGRxTUlXVG56ZThMZ3A1JTJGbnFkU1FEJTBBSFQxTXJFUkJJcGdNeWFiU1hTMnJRQ0ZTQVdaRlpvZnpibVJITUQxZmYxTEtwd0s4JTJGTzYwbFdYMCUyQlpBb2VscWVHVjVEWVBPRXV0ZEElMEF2eWd6NEVnUlpMTGJWb095dyUyRnFQRXRZUmI3WFhQcnJHWmh2ZEFNR0JaMTFtRzZvTWV0JTJGRFolMkJ5b0VXRjkzYSUyQmFFMyUyQlNpRE90VFNKcyUwQTY5SjZmeVRSUmJFSUZCSnlwNlRVRGpnV0dnc256YmNnMjJpMXprWSUyQmVMSnByMXV3OU5ndUFIUUZGR3hOWkpSWWRKQ1dUVUdLYkludyUwQXh6a0tKS2RyZWdGNWdUTnAzUWQ1UzQlMkZNVzZhZElQbUg2ZTlPRkU5SlFZc1hEVnVRT0pxbmZ6UXdZWlljTkRXZjdtRHVXZnI4WG5GRCUwQVhUV3ZFd0RnRjFrRkIzcGZIUXZJeVFucXhNYU52VUhqZTZpM2hkdkZGdzglM0QmcXVvdDt9XCI+ICAgICAgICAgICAgXHUwMDNDYSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgY2xhc3M9XCJhLXBvcG92ZXItdHJpZ2dlciBhLWRlY2xhcmF0aXZlXCI+RmVlZGJhY2tcdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wb3BvdmVyXCI+XHUwMDNDL2k+XHUwMDNDL2E+ICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGFyZ2V0PVwiX3RvcFwiIHJlbD1cIm5vb3BlbmVyXCIgdGl0bGU9XCJYWlAgV29tYW4gU3RlcmxpbmcgU2lsdmVyIFBsYXRlZCBEYW5nbGUgRWFycmluZ3MgU3RhdGVtZW50IFBvc3QgRmxvd2VyIERlc2lnbiBXb21lbiBEcm9wIEVhcnJpbmdzIEpld2VscnkgKFNpbHZlcilcIiBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9zbHJlZGlyZWN0L3BpY2Fzc29SZWRpcmVjdC5odG1sL3JlZj1zc3BhX2RrX2RldGFpbF83P2llPVVURjgmYW1wO2FkSWQ9QTA5MDQyMjAxNlNYUzUwTDRMTERaJmFtcDtxdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9MzU4NjExNzE0NTE5Mjc1MCZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwyJmFtcDt1cmw9JTJGZHAlMkZCMDc1ODJKMVNHJTJGcmVmJTNEc3NwYV9ka19kZXRhaWxfNyUzRnBzYyUzRDFcIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NpbWcgYWx0PVwiWFpQIFdvbWFuIFN0ZXJsaW5nIFNpbHZlciBQbGF0ZWQgRGFuZ2xlIEVhcnJpbmdzIFN0YXRlbWVudCBQb3N0IEZsb3dlciBEZXNpZ24gV29tZW4gRHJvcCBFYXJyaW5ncyBKZXdlbHJ5IChTaWx2ZXIpXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTF5MDc1Z0l0OUwuX0FDX1NSMzIwLDMyMF8uanBnXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2VcIiBoZWlnaHQ9XCIxNjBcIiB3aWR0aD1cIjE2MFwiIGRhdGEtYS1keW5hbWljLWltYWdlPVwieyZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxeTA3NWdJdDlMLl9BQ19TUjMyMCwzMjBfLmpwZyZxdW90OzpbMzIwLDMyMF0sJnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTF5MDc1Z0l0OUwuX0FDX1NSMTYwLDE2MF8uanBnJnF1b3Q7OlsxNjAsMTYwXSwmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MXkwNzVnSXQ5TC5fQUNfU1I0ODAsNDgwXy5qcGcmcXVvdDs6WzQ4MCw0ODBdfVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGRhdGEtcm93cz1cIjRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cInNwb25zb3JlZC1wcm9kdWN0cy10cnVuY2F0b3ItdHJ1bmNhdGUgc3BvbnNvcmVkLXByb2R1Y3RzLXRydW5jYXRvci1saW5lLWNsYW1wLTRcIj4gICAgICAgICAgICBYWlAgV29tYW4gU3RlcmxpbmcgU2lsdmVyIFBsYXRlZCBEYW5nbGUgRWFycmluZ3MgU3RhdGVtZW50IFBvc3QgRmxvd2VyIERlc2lnbiBXb21lbi4uLlx1MDAzQy9kaXY+ICAgICAgICAgICAgXHUwMDNDL2E+ICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+ICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBhZFJldmlld0xpbmsgYS10ZXh0LW5vcm1hbFwiIHRhcmdldD1cIl90b3BcIiByZWw9XCJub29wZW5lclwiIHRpdGxlPVwiWFpQIFdvbWFuIFN0ZXJsaW5nIFNpbHZlciBQbGF0ZWQgRGFuZ2xlIEVhcnJpbmdzIFN0YXRlbWVudCBQb3N0IEZsb3dlciBEZXNpZ24gV29tZW4gRHJvcCBFYXJyaW5ncyBKZXdlbHJ5IChTaWx2ZXIpXCIgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vZ3Avc2xyZWRpcmVjdC9waWNhc3NvUmVkaXJlY3QuaHRtbC9yZWY9c3NwYV9ka19kZXRhaWxfNz9pZT1VVEY4JmFtcDthZElkPUEwOTA0MjIwMTZTWFM1MEw0TExEWiZhbXA7cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTM1ODYxMTcxNDUxOTI3NTAmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsMiZhbXA7dXJsPSUyRmRwJTJGQjA3NTgySjFTRyUyRnJlZiUzRHNzcGFfZGtfZGV0YWlsXzclM0Zwc2MlM0QxI2N1c3RvbWVyUmV2aWV3c1wiPiAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3RhciBhLXN0YXItNC01XCI+XHUwMDNDL2k+ICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1jb2xvci1saW5rXCI+NjZcdTAwM0Mvc3Bhbj4gICAgICAgIFx1MDAzQy9hPiAgICBcdTAwM0MvZGl2PiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLWNvbG9yLXByaWNlXCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNvbG9yLXByaWNlXCI+JDEyLjk5XHUwMDNDL3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBzdHlsZT1cInBvc2l0aW9uOiByZWxhdGl2ZTsgdG9wOiAycHg7XCI+ICAgICAgICAgICAgICAgIFx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXByaW1lIGEtaWNvbi1zbWFsbFwiIHJvbGU9XCJpbWdcIj5cdTAwM0MvaT4gICAgICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2xpIGNsYXNzPVwiYS1jYXJvdXNlbC1jYXJkXCIgc3R5bGU9XCJ3aWR0aDoxNjBweDtcIiByb2xlPVwibGlzdGl0ZW1cIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGlkPVwic3BfZGV0YWlsMl9CMDdWN1pCVzczXCIgZGF0YS1hc2luPVwiQjA3VjdaQlc3M1wiIGRhdGEtcDEzbi1hc2luLW1ldGFkYXRhPVwieyZxdW90O3JlZiZxdW90OzomcXVvdDtzc3BhX2RrX2RldGFpbF84JnF1b3Q7LCZxdW90O2FzaW4mcXVvdDs6JnF1b3Q7QjA3VjdaQlc3MyZxdW90O31cIiBkYXRhLXZpZXdwaXhlbHVybD1cIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTM1ODYxMTcxNDUxOTI3NTAmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsMiZhbXA7YWRJZD0yMDAwMTY5NzU4NjY1MjEmYW1wO2FkSW5kZXg9OFwiIGNsYXNzPVwiYS1zZWN0aW9uIHNwX29mZmVyVmVydGljYWxcIj4gICAgICAgICAgICAgICAgXHUwMDNDbm9zY3JpcHQ+ICAgICAgICBcdTAwM0NpbWcgYWx0PVwiXCIgc3JjPVwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZpZD0zNTg2MTE3MTQ1MTkyNzUwJndpZGdldE5hbWU9c3BfZGV0YWlsMiZhZElkPTIwMDAxNjk3NTg2NjUyMSZldmVudFR5cGU9MiZhZEluZGV4PThcIj4gICAgXHUwMDNDL25vc2NyaXB0PiAgICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPihmdW5jdGlvbihmKSB7Zih3aW5kb3cuUC5fbmFtZXNwYWNlKFwiRmlyZWJpcmRTcFJlbmRlcmluZ1wiKSk7fShmdW5jdGlvbihQKSB7ICAgICAgICBQLndoZW4oJ1Nwb25zb3JlZFByb2R1Y3RzVmlld2FiaWxpdHknKS5leGVjdXRlKGZ1bmN0aW9uKFNWKSB7ICAgICAgICAgICAgU1YubG9hZEltYWdlUGl4ZWwoXCIvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xvZ2dpbmcvbG9nLWFjdGlvbi5odG1sP3F1YWxpZmllcj0xNTY5Nzk0MTg4JmlkPTM1ODYxMTcxNDUxOTI3NTAmd2lkZ2V0TmFtZT1zcF9kZXRhaWwyJmFkSWQ9MjAwMDE2OTc1ODY2NTIxJmV2ZW50VHlwZT0yJmFkSW5kZXg9OFwiKTsgICAgICAgIH0pOyAgICB9KSk7XHUwMDNDL3NjcmlwdD4gICAgICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHtmKHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJGaXJlYmlyZFNwUmVuZGVyaW5nXCIpKTt9KGZ1bmN0aW9uKFApIHsgICAgUC53aGVuKCdBJywgJ1Nwb25zb3JlZFByb2R1Y3RzVmlld2FiaWxpdHknKS5leGVjdXRlKGZ1bmN0aW9uKEEsIFNWKSB7ICAgICAgICBTVi5yZWdpc3RlclZpZXdUcmFja2luZ0VsZW1lbnQoQS4kKFwiI3NwX2RldGFpbDJfQjA3VjdaQlc3M1wiKSwgXCJzcF9kZXRhaWwyXCIpOyAgICB9KTt9KSk7XHUwMDNDL3NjcmlwdD4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cInBhX2ZlZWRiYWNrRm9ybV9jb250YWluZXJfc3BfZGV0YWlsMlwiIHN0eWxlPVwiZGlzcGxheTpub25lO1wiPiAgICBcdTAwM0NkaXYgY2xhc3M9XCJzcF9hZElEXCI+ICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYS1tb2RhbFwiIGRhdGEtYS1tb2RhbD1cInsmcXVvdDtmb290ZXImcXVvdDs6JnF1b3Q7XFx1MDAzY2RpdiBpZD0nc3BvbnNvcmVkLXByb2R1Y3RzLWZlZWRiYWNrLWZvb3Rlcic+JnF1b3Q7LCZxdW90O2Nsb3NlQnV0dG9uJnF1b3Q7OiZxdW90O2ZhbHNlJnF1b3Q7LCZxdW90O25hbWUmcXVvdDs6JnF1b3Q7c3BvbnNvcmVkLXByb2R1Y3RzLWZlZWRiYWNrLW1vZGFsLXNwX2RldGFpbDImcXVvdDssJnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7MzUwJnF1b3Q7LCZxdW90O2hlYWRlciZxdW90OzomcXVvdDtTaGFyZSB5b3VyIGZlZWRiYWNrJnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xhenlMb2FkL2hhbmRsZXIvc3AtZmVlZGJhY2staGFuZGxlci5odG1sP3BsPWtmOWFYYyUyRmh3S0E4c3hsVFExN2pQJTJGRmtTcDBvNXJBblNJT1glMkZmSSUyQko0SlM2YzdrWkklMkZGSTBvaWZNMUdqSjh0UnN5V2lCTGE5a3JHJTBBNVZFRUxhbXdnZ01hQjZ1bERKc3dlQyUyRk91ejdpZDFmaW1aT2c4N0laQTBQQmZkMnZMYnhYTlk1a3IzSUFaSEVnbVclMkIwb2ZMMEFkODElMEFJeXFiNjlPVDI4OE1ISiUyRmZaRm5vbXJ1YzJFalpjQjYzVGhpSzk5MFlHTlR2SjRSQ25qNWZXbEdidEV0S2dEakpsdTk0VVVrZEhtMzAlMEFDZUR3ZjloVUxnUmNJd1V0OGpHUXd6TUVidXYzWnBNQThJOE55NFozWU1oaUpIRUJvRkNRSlJHbFhLcHk2TyUyRnJJakhCZGNVVFhpd1ElMEFMYXh2eGtKdDg5WXIwQ0VYdDBxQSUyQjI5TE1wS0R3ZG90ZXZZSiUyRlRMZ0JqMm5qT3RUbWNQRjIlMkZTcURWMlN3TSUyRjZEZnpDYXFINjhFJTJGUyUwQWw5c0lGQ1F6cDh0THo4WGtrdjd1UlJVMDZLcG9OM0N1b0dpMm8zeXVnZVZyUVBCcXY3Z3pjU0RPbkl0aGVlTkwlMkJ6RTRNN2M1d0UxNCUwQWo1OUwySDBaRzM5N1hPNFNnR2dCWTFqYjlEOWxSaFhINGpBSTBwNVUyMmZaeGxtVzNVRVhMOUh6Z0lRUWVDM3lZVDVFT1czTmNaQkYlMEEyOXclMkJ4OHFad1ROY2lwZlduOXFzMzlsRFBMVDAycVdRcG4xQzlYaFJWJTJCT21CM3RCV29PZCUyRkF6UUlMdHNYWDdaZ29ZdzhaREp5OCUyRmolMEFxNHRnR1NOdjF0bU80QzA1UVpQN0lLWHhGWVZRVGNtMjNXSUdINzByT3RBJTNEJnF1b3Q7fVwiPiAgICAgICAgICAgIFx1MDAzQ2EgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIGNsYXNzPVwiYS1wb3BvdmVyLXRyaWdnZXIgYS1kZWNsYXJhdGl2ZVwiPkZlZWRiYWNrXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcG9wb3ZlclwiPlx1MDAzQy9pPlx1MDAzQy9hPiAgICAgICAgXHUwMDNDL3NwYW4+ICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIHRhcmdldD1cIl90b3BcIiByZWw9XCJub29wZW5lclwiIHRpdGxlPVwiSmFuZSBFeXJlIEJvaG8gRGFuZ2xlIENyeXN0YWwgR2xhc3MgQmVhZGVkIEVhcnJpbmdzIGZvciBXb21lbiBFdGhuaWMgSGFuZG1hZGUgUm91bmRlZCBFYXJyaW5ncyAoQmxhY2sgJmFtcDsgR29sZClcIiBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9zbHJlZGlyZWN0L3BpY2Fzc29SZWRpcmVjdC5odG1sL3JlZj1zc3BhX2RrX2RldGFpbF84P2llPVVURjgmYW1wO2FkSWQ9QTA2Nzg2MjExOUxVOUtYVzVTSFpIJmFtcDtxdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9MzU4NjExNzE0NTE5Mjc1MCZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwyJmFtcDt1cmw9JTJGZHAlMkZCMDdWN1pCVzczJTJGcmVmJTNEc3NwYV9ka19kZXRhaWxfOCUzRnBzYyUzRDFcIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NpbWcgYWx0PVwiSmFuZSBFeXJlIEJvaG8gRGFuZ2xlIENyeXN0YWwgR2xhc3MgQmVhZGVkIEVhcnJpbmdzIGZvciBXb21lbiBFdGhuaWMgSGFuZG1hZGUgUm91bmRlZCBFYXJyaW5ncyAoQmxhY2sgJmFtcDsgR29sZClcIiBzcmM9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MXpXSm80NXdMTC5fQUNfU1IzMjAsMzIwXy5qcGdcIiBjbGFzcz1cImEtZHluYW1pYy1pbWFnZVwiIGhlaWdodD1cIjE2MFwiIHdpZHRoPVwiMTYwXCIgZGF0YS1hLWR5bmFtaWMtaW1hZ2U9XCJ7JnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDF6V0pvNDV3TEwuX0FDX1NSMzIwLDMyMF8uanBnJnF1b3Q7OlszMjAsMzIwXSwmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MXpXSm80NXdMTC5fQUNfU1I0ODAsNDgwXy5qcGcmcXVvdDs6WzQ4MCw0ODBdLCZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxeldKbzQ1d0xMLl9BQ19TUjE2MCwxNjBfLmpwZyZxdW90OzpbMTYwLDE2MF19XCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NkaXYgZGF0YS1yb3dzPVwiNFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGNsYXNzPVwic3BvbnNvcmVkLXByb2R1Y3RzLXRydW5jYXRvci10cnVuY2F0ZSBzcG9uc29yZWQtcHJvZHVjdHMtdHJ1bmNhdG9yLWxpbmUtY2xhbXAtNFwiPiAgICAgICAgICAgIEphbmUgRXlyZSBCb2hvIERhbmdsZSBDcnlzdGFsIEdsYXNzIEJlYWRlZCBFYXJyaW5ncyBmb3IgV29tZW4gRXRobmljIEhhbmRtYWRlIFJvdW5kLi4uXHUwMDNDL2Rpdj4gICAgICAgICAgICBcdTAwM0MvYT4gICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj4gICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsIGFkUmV2aWV3TGluayBhLXRleHQtbm9ybWFsXCIgdGFyZ2V0PVwiX3RvcFwiIHJlbD1cIm5vb3BlbmVyXCIgdGl0bGU9XCJKYW5lIEV5cmUgQm9obyBEYW5nbGUgQ3J5c3RhbCBHbGFzcyBCZWFkZWQgRWFycmluZ3MgZm9yIFdvbWVuIEV0aG5pYyBIYW5kbWFkZSBSb3VuZGVkIEVhcnJpbmdzIChCbGFjayAmYW1wOyBHb2xkKVwiIGhyZWY9XCJodHRwczovL3d3dy5hbWF6b24uY29tL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXNzcGFfZGtfZGV0YWlsXzg/aWU9VVRGOCZhbXA7YWRJZD1BMDY3ODYyMTE5TFU5S1hXNVNIWkgmYW1wO3F1YWxpZmllcj0xNTY5Nzk0MTg4JmFtcDtpZD0zNTg2MTE3MTQ1MTkyNzUwJmFtcDt3aWRnZXROYW1lPXNwX2RldGFpbDImYW1wO3VybD0lMkZkcCUyRkIwN1Y3WkJXNzMlMkZyZWYlM0Rzc3BhX2RrX2RldGFpbF84JTNGcHNjJTNEMSNjdXN0b21lclJldmlld3NcIj4gICAgICAgIFx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXIgYS1zdGFyLTVcIj5cdTAwM0MvaT4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNvbG9yLWxpbmtcIj4xNVx1MDAzQy9zcGFuPiAgICAgICAgXHUwMDNDL2E+ICAgIFx1MDAzQy9kaXY+ICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtY29sb3ItcHJpY2VcIj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtY29sb3ItcHJpY2VcIj4kMTcuOTlcdTAwM0Mvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIHN0eWxlPVwicG9zaXRpb246IHJlbGF0aXZlOyB0b3A6IDJweDtcIj4gICAgICAgICAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcHJpbWUgYS1pY29uLXNtYWxsXCIgcm9sZT1cImltZ1wiPlx1MDAzQy9pPiAgICAgICAgICAgIFx1MDAzQy9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0MvZGl2Plx1MDAzQy9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2xpPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDbGkgY2xhc3M9XCJhLWNhcm91c2VsLWNhcmRcIiBzdHlsZT1cIndpZHRoOjE2MHB4O1wiIHJvbGU9XCJsaXN0aXRlbVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NkaXYgaWQ9XCJzcF9kZXRhaWwyX0IwMUhYRkdGR1dcIiBkYXRhLWFzaW49XCJCMDFIWEZHRkdXXCIgZGF0YS1wMTNuLWFzaW4tbWV0YWRhdGE9XCJ7JnF1b3Q7cmVmJnF1b3Q7OiZxdW90O3NzcGFfZGtfZGV0YWlsXzkmcXVvdDssJnF1b3Q7YXNpbiZxdW90OzomcXVvdDtCMDFIWEZHRkdXJnF1b3Q7fVwiIGRhdGEtdmlld3BpeGVsdXJsPVwiL2dwL3Nwb25zb3JlZC1wcm9kdWN0cy9sb2dnaW5nL2xvZy1hY3Rpb24uaHRtbD9xdWFsaWZpZXI9MTU2OTc5NDE4OCZhbXA7aWQ9MzU4NjExNzE0NTE5Mjc1MCZhbXA7d2lkZ2V0TmFtZT1zcF9kZXRhaWwyJmFtcDthZElkPTIwMDAxNzc2NjI5ODgzMSZhbXA7YWRJbmRleD05XCIgY2xhc3M9XCJhLXNlY3Rpb24gc3Bfb2ZmZXJWZXJ0aWNhbFwiPiAgICAgICAgICAgICAgICBcdTAwM0Nub3NjcmlwdD4gICAgICAgIFx1MDAzQ2ltZyBhbHQ9XCJcIiBzcmM9XCIvZ3Avc3BvbnNvcmVkLXByb2R1Y3RzL2xvZ2dpbmcvbG9nLWFjdGlvbi5odG1sP3F1YWxpZmllcj0xNTY5Nzk0MTg4JmlkPTM1ODYxMTcxNDUxOTI3NTAmd2lkZ2V0TmFtZT1zcF9kZXRhaWwyJmFkSWQ9MjAwMDE3NzY2Mjk4ODMxJmV2ZW50VHlwZT0yJmFkSW5kZXg9OVwiPiAgICBcdTAwM0Mvbm9zY3JpcHQ+ICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHtmKHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJGaXJlYmlyZFNwUmVuZGVyaW5nXCIpKTt9KGZ1bmN0aW9uKFApIHsgICAgICAgIFAud2hlbignU3BvbnNvcmVkUHJvZHVjdHNWaWV3YWJpbGl0eScpLmV4ZWN1dGUoZnVuY3Rpb24oU1YpIHsgICAgICAgICAgICBTVi5sb2FkSW1hZ2VQaXhlbChcIi9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbG9nZ2luZy9sb2ctYWN0aW9uLmh0bWw/cXVhbGlmaWVyPTE1Njk3OTQxODgmaWQ9MzU4NjExNzE0NTE5Mjc1MCZ3aWRnZXROYW1lPXNwX2RldGFpbDImYWRJZD0yMDAwMTc3NjYyOTg4MzEmZXZlbnRUeXBlPTImYWRJbmRleD05XCIpOyAgICAgICAgfSk7ICAgIH0pKTtcdTAwM0Mvc2NyaXB0PiAgICAgICAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj4oZnVuY3Rpb24oZikge2Yod2luZG93LlAuX25hbWVzcGFjZShcIkZpcmViaXJkU3BSZW5kZXJpbmdcIikpO30oZnVuY3Rpb24oUCkgeyAgICBQLndoZW4oJ0EnLCAnU3BvbnNvcmVkUHJvZHVjdHNWaWV3YWJpbGl0eScpLmV4ZWN1dGUoZnVuY3Rpb24oQSwgU1YpIHsgICAgICAgIFNWLnJlZ2lzdGVyVmlld1RyYWNraW5nRWxlbWVudChBLiQoXCIjc3BfZGV0YWlsMl9CMDFIWEZHRkdXXCIpLCBcInNwX2RldGFpbDJcIik7ICAgIH0pO30pKTtcdTAwM0Mvc2NyaXB0PiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwicGFfZmVlZGJhY2tGb3JtX2NvbnRhaW5lcl9zcF9kZXRhaWwyXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCI+ICAgIFx1MDAzQ2RpdiBjbGFzcz1cInNwX2FkSURcIj4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLW1vZGFsXCIgZGF0YS1hLW1vZGFsPVwieyZxdW90O2Zvb3RlciZxdW90OzomcXVvdDtcXHUwMDNjZGl2IGlkPSdzcG9uc29yZWQtcHJvZHVjdHMtZmVlZGJhY2stZm9vdGVyJz4mcXVvdDssJnF1b3Q7Y2xvc2VCdXR0b24mcXVvdDs6JnF1b3Q7ZmFsc2UmcXVvdDssJnF1b3Q7bmFtZSZxdW90OzomcXVvdDtzcG9uc29yZWQtcHJvZHVjdHMtZmVlZGJhY2stbW9kYWwtc3BfZGV0YWlsMiZxdW90OywmcXVvdDt3aWR0aCZxdW90OzomcXVvdDszNTAmcXVvdDssJnF1b3Q7aGVhZGVyJnF1b3Q7OiZxdW90O1NoYXJlIHlvdXIgZmVlZGJhY2smcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9ncC9zcG9uc29yZWQtcHJvZHVjdHMvbGF6eUxvYWQvaGFuZGxlci9zcC1mZWVkYmFjay1oYW5kbGVyLmh0bWw/cGw9ODJFQUZHMEY2SlI5Y1lHakdJZFBUQmQ4eEo1WFdoczNxek4lMkY1NCUyQmUwbXl0Q3NUZnhvUjMyeGNTbFVjVDBDM3lhd3JDZGYydFVYNXolMEExSHB1dHQlMkZDUFdhJTJCOVduU1RadiUyQllUbm1SNG1nWEhEMDZUOXduVUNjdXJhZEFaMVQ0b0FTJTJGSUpYNDVKQzQ0OTlSQ1FuclhHZCUyRmlieiUwQXQ3WVlvdzV3UFpiVUppRCUyQjhWZXliSkN2eDdqNCUyQiUyQiUyQmltTlpDcm5JUG1la1E1bVFjcnJzU1ZHRmwxUnFPMjJubVB0VXJDcUdDdmo4cyUwQUJIZlRQZ242QXFrOGVaWmQlMkJhUXdubmxTRTZaMW1FVGclMkY4JTJCN3l1d2NlZyUyRnBHbVNSbyUyQlBEd281JTJCdUJoT2Nsb0ttckpyd3RJM0l3U00lMEF6RkxNQnAlMkJZdEpJVEdFJTJCZGVhZ0hOVWwxJTJCanFHYjQ5bmNTcHZ5SG00OGFycEV0RVdpaiUyRklSajdGUWYwMG1BRUZUckxTMXdmR0syc0glMEFHSmoxM3BFQzRIN0RRQU1wTzY0QjV6YU5MTUthM2pJVW44N1MlMkZROUxmZzNoWlZQQlhhQmc1RkdydmI1ZWRjVnhHMkxaMkxEN3ZwQXQlMEFYOCUyQm9oUGxIWiUyQjM5JTJCdDZBdUt6QTVIbDBqUjF3Z3FkaCUyRnJKWGpjZiUyRmtMbDBEVjdKeEVkdmsyOERTa200ZjJvTU9DckRJJTJCeCUyRlR5N0wlMEFtVVZsUTgydk40VFVjJTJGVThqZXUyQzA2ZWNIZkNmMEJvZDNZUjRMJTJGRk8wMkpKQUE5Z2VkbXFrTFlIeU1RTFlySXlwMkxkeiUyQjN2UFY3JTBBZHJRMHAlMkJweXZuNzJ2Y0tEY21pT21ubDVaNWNtTWpZJTJCJnF1b3Q7fVwiPiAgICAgICAgICAgIFx1MDAzQ2EgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIGNsYXNzPVwiYS1wb3BvdmVyLXRyaWdnZXIgYS1kZWNsYXJhdGl2ZVwiPkZlZWRiYWNrXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcG9wb3ZlclwiPlx1MDAzQy9pPlx1MDAzQy9hPiAgICAgICAgXHUwMDNDL3NwYW4+ICAgIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIHRhcmdldD1cIl90b3BcIiByZWw9XCJub29wZW5lclwiIHRpdGxlPVwiS2Vtc3RvbmUgUm9zZSBHb2xkIENhdCdzIEV5ZSBTdG9uZSBDaGFuZGVsaWVyIERhbmdsZSBFYXJyaW5ncyBKZXdlbHJ5IGZvciBMb3ZlclwiIGhyZWY9XCJodHRwczovL3d3dy5hbWF6b24uY29tL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXNzcGFfZGtfZGV0YWlsXzk/aWU9VVRGOCZhbXA7YWRJZD1BMTAxNjExNDJWRzhaUVhSNEtKN1UmYW1wO3F1YWxpZmllcj0xNTY5Nzk0MTg4JmFtcDtpZD0zNTg2MTE3MTQ1MTkyNzUwJmFtcDt3aWRnZXROYW1lPXNwX2RldGFpbDImYW1wO3VybD0lMkZkcCUyRkIwMUhYRkdGR1clMkZyZWYlM0Rzc3BhX2RrX2RldGFpbF85JTNGcHNjJTNEMVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2ltZyBhbHQ9XCJLZW1zdG9uZSBSb3NlIEdvbGQgQ2F0J3MgRXllIFN0b25lIENoYW5kZWxpZXIgRGFuZ2xlIEVhcnJpbmdzIEpld2VscnkgZm9yIExvdmVyXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFOMi1iV3BkSUwuX0FDX1NSMzIwLDMyMF8uanBnXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2VcIiBoZWlnaHQ9XCIxNjBcIiB3aWR0aD1cIjE2MFwiIGRhdGEtYS1keW5hbWljLWltYWdlPVwieyZxdW90O2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxTjItYldwZElMLl9BQ19TUjE2MCwxNjBfLmpwZyZxdW90OzpbMTYwLDE2MF0sJnF1b3Q7aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFOMi1iV3BkSUwuX0FDX1NSMzIwLDMyMF8uanBnJnF1b3Q7OlszMjAsMzIwXSwmcXVvdDtodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MU4yLWJXcGRJTC5fQUNfU1I0ODAsNDgwXy5qcGcmcXVvdDs6WzQ4MCw0ODBdfVwiPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGRhdGEtcm93cz1cIjRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cInNwb25zb3JlZC1wcm9kdWN0cy10cnVuY2F0b3ItdHJ1bmNhdGUgc3BvbnNvcmVkLXByb2R1Y3RzLXRydW5jYXRvci1saW5lLWNsYW1wLTRcIj4gICAgICAgICAgICBLZW1zdG9uZSBSb3NlIEdvbGQgQ2F0J3MgRXllIFN0b25lIENoYW5kZWxpZXIgRGFuZ2xlIEVhcnJpbmdzIEpld2VscnkgZm9yIExvdmVyXHUwMDNDL2Rpdj4gICAgICAgICAgICBcdTAwM0MvYT4gICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj4gICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsIGFkUmV2aWV3TGluayBhLXRleHQtbm9ybWFsXCIgdGFyZ2V0PVwiX3RvcFwiIHJlbD1cIm5vb3BlbmVyXCIgdGl0bGU9XCJLZW1zdG9uZSBSb3NlIEdvbGQgQ2F0J3MgRXllIFN0b25lIENoYW5kZWxpZXIgRGFuZ2xlIEVhcnJpbmdzIEpld2VscnkgZm9yIExvdmVyXCIgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vZ3Avc2xyZWRpcmVjdC9waWNhc3NvUmVkaXJlY3QuaHRtbC9yZWY9c3NwYV9ka19kZXRhaWxfOT9pZT1VVEY4JmFtcDthZElkPUExMDE2MTE0MlZHOFpRWFI0S0o3VSZhbXA7cXVhbGlmaWVyPTE1Njk3OTQxODgmYW1wO2lkPTM1ODYxMTcxNDUxOTI3NTAmYW1wO3dpZGdldE5hbWU9c3BfZGV0YWlsMiZhbXA7dXJsPSUyRmRwJTJGQjAxSFhGR0ZHVyUyRnJlZiUzRHNzcGFfZGtfZGV0YWlsXzklM0Zwc2MlM0QxI2N1c3RvbWVyUmV2aWV3c1wiPiAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3RhciBhLXN0YXItNC01XCI+XHUwMDNDL2k+ICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1jb2xvci1saW5rXCI+MjRcdTAwM0Mvc3Bhbj4gICAgICAgIFx1MDAzQy9hPiAgICBcdTAwM0MvZGl2PiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLWNvbG9yLXByaWNlXCI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNvbG9yLXByaWNlXCI+JDE4LjQ2XHUwMDNDL3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBzdHlsZT1cInBvc2l0aW9uOiByZWxhdGl2ZTsgdG9wOiAycHg7XCI+ICAgICAgICAgICAgICAgIFx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXByaW1lIGEtaWNvbi1zbWFsbFwiIHJvbGU9XCJpbWdcIj5cdTAwM0MvaT4gICAgICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9saT4gICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvb2w+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtY2Fyb3VzZWwtY29sIGEtY2Fyb3VzZWwtcmlnaHRcIj5cdTAwM0NhIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24taW1hZ2UgYS1jYXJvdXNlbC1idXR0b24gYS1jYXJvdXNlbC1nb3RvLW5leHRwYWdlXCIgdGFiaW5kZXg9XCIwXCIgaHJlZj1cIiNcIiBpZD1cImEtYXV0b2lkLTE5XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uLWlubmVyXCI+XHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tbmV4dFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWljb24tYWx0XCI+TmV4dCBwYWdlIG9mIHJlbGF0ZWQgU3BvbnNvcmVkIFByb2R1Y3RzXHUwMDNDL3NwYW4+XHUwMDNDL2k+XHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+ICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiU1AtQWQtRmVlZGJhY2tcIj4gICAgICAgICAgICAgICAgIFx1MDAzQ2EgaWQ9XCJzcF9kZXRhaWwyX2ZlZWRiYWNrTWVzc2FnZVwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBkeW5hbWljU1BGTFwiIGhyZWY9XCIjc3BfZGV0YWlsMl9mZWVkYmFja0Zvcm1cIj5BZCBmZWVkYmFja1x1MDAzQy9hPiAgICAgICAgICAgIFx1MDAzQy9kaXY+ICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1lbmQgYW9rLWhpZGRlblwiPlx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+ICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHtmKHdpbmRvdy5QLl9uYW1lc3BhY2UoXCJGaXJlYmlyZFNwUmVuZGVyaW5nXCIpKTt9KGZ1bmN0aW9uKFApIHsgICBQLndoZW4oJ0EnLCAnYS1jYXJvdXNlbC1mcmFtZXdvcmsnLCAnQW1hem9uQ2xpY2tzJykuZXhlY3V0ZShmdW5jdGlvbiAoQSwgQ0YsIEFDKSB7ICAgICBDRi5nZXRDYXJvdXNlbChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwX2RldGFpbDJcIikpOyAgICAgQUMucmVnaXN0ZXJGZWVkYmFja0V2ZW50cyhcInNwX2RldGFpbDJfY2Fyb3VzZWxcIiwgXCJzcF9kZXRhaWwyX2ZlZWRiYWNrTWVzc2FnZVwiLCBcIkFkIGZlZWRiYWNrXCIsIFwiSGlkZSBmZWVkYmFja1wiLCBcInBhX2ZlZWRiYWNrRm9ybV9jb250YWluZXJfc3BfZGV0YWlsMlwiKTsgICB9KTsgICAgICAgICAgICAgICBQLndoZW4oJ0EnLCAnU1BIQVQnKS5leGVjdXRlKGZ1bmN0aW9uKEEsIFNQSEFUKSB7ICAgICB2YXIgY29udGFpbmVyU2VsZWN0b3IgPSBcIiNzcF9kZXRhaWwyIGRpdlwiOyAgICAgdmFyIGVsZW1lbnRzQWxsb3dlZFRvQmVIaWRkZW4gPSBbJ3NjcmlwdCcsICdkaXYuc3BfYWRJRCcsICdkaXYucGFfZmVlZGJhY2tGb3JtX2NvbnRhaW5lcl9zcF9kZXRhaWwyJywgJ3NwYW4uYS1kZWNsYXJhdGl2ZScsICdzcGFuLmFvay1oaWRkZW4nLCAnaW5wdXRbdHlwZT1oaWRkZW5dJywgJ25vc2NyaXB0J107ICAgICB2YXIgY3NtQ291bnRlck1ldHJpY05hbWUgPSAnc3BfZGV0YWlsMi5hZGInOyAgICAgdmFyIGhhZEltcGFjdCA9IFNQSEFULmNoZWNrRm9ySGlkZGVuRWxlbWVudHMoY29udGFpbmVyU2VsZWN0b3IsIGVsZW1lbnRzQWxsb3dlZFRvQmVIaWRkZW4sIGNzbUNvdW50ZXJNZXRyaWNOYW1lKTsgICAgIEEuc3RhdGUoXCJzcF9kZXRhaWwyXCIsIHsgYWRCbG9ja2VySGFkSW1wYWN0OiBoYWRJbXBhY3R9KTsgICB9KTsgICAgICAgICAgIFAud2hlbignU3BvbnNvcmVkUHJvZHVjdHNWaWV3YWJpbGl0eScpLmV4ZWN1dGUoZnVuY3Rpb24oU1YpIHsgICAgIFNWLnJlZ2lzdGVyQXVpRXZlbnRzKFsncmVhZHknLCAnc2Nyb2xsJywgJ3Jlc2l6ZScsICdvcmllbnRhdGlvbmNoYW5nZSddKTsgICB9KTt9KSk7XHUwMDNDL3NjcmlwdD5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0NzY3JpcHQ+aWYgKHR5cGVvZiB1ZXQgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIHVlcyA9PT0gJ2Z1bmN0aW9uJykge3ZhciBzY29wZSA9ICdEZXRhaWxfZHAtYWRzLWNlbnRlci1wcm9tb19EZXNrdG9wJzt2YXIgcGxhY2VtZW50SWQgPSAnMzJmYzYyN2UtYjUwOS00ODlhLTkzZTAtZjI1ODlhYjAwODI2Jzt1ZXMoJ3diJywgJ2FkcGxhY2VtZW50czonICsgc2NvcGUucmVwbGFjZSgvXFxfL2csICc6JyksIHt3YjoxfSk7IHVldCgnYmInLCAnYWRwbGFjZW1lbnRzOicgKyBzY29wZS5yZXBsYWNlKC9cXF8vZywgJzonKSwge3diOjF9KTsgaWYgKHBsYWNlbWVudElkKSB7dWVzKCd3YicsICdhZHBsYWNlbWVudHM6JyArIHBsYWNlbWVudElkLCB7d2I6MX0pO3VldCgnYmInLCAnYWRwbGFjZW1lbnRzOicgKyBwbGFjZW1lbnRJZCwge3diOjF9KTt9fVx1MDAzQy9zY3JpcHQ+XHUwMDNDaHIgc2l6ZT1cIjFcIiBub3NoYWRlPVwibm9zaGFkZVwiIGNsYXNzPVwiYS1kaXZpZGVyLW5vcm1hbFwiPlx1MDAzQ2RpdiBpZD1cImFwZV9EZXRhaWxfZHAtYWRzLWNlbnRlci1wcm9tb19EZXNrdG9wX3BsYWNlbWVudFwiIGNsYXNzPVwiY29waWxvdC1zZWN1cmUtZGlzcGxheSBjZWx3aWRnZXQgIHRleHQveC1kYWN4LXNhZmVmcmFtZVwiIGNlbF93aWRnZXRfaWQ9XCJhZHBsYWNlbWVudHM6RGV0YWlsOmRwLWFkcy1jZW50ZXItcHJvbW86RGVza3RvcFwiIGRhdGEtY2FtcGFpZ249XCI2NTI5XCIgc3R5bGU9XCJkaXNwbGF5OiBub25lOyBtYXJnaW46IGF1dG87IGxpbmUtaGVpZ2h0OiAwOyB3aWR0aDogOTcwcHg7XCIgZGF0YS1hZC1kZXRhaWxzPVwieyZxdW90O3Nsb3QmcXVvdDsgOiZxdW90O0RldGFpbF9kcC1hZHMtY2VudGVyLXByb21vX0Rlc2t0b3AmcXVvdDssJnF1b3Q7c2xvdE5hbWUmcXVvdDsgOiZxdW90O2RwLWFkcy1jZW50ZXItcHJvbW8mcXVvdDssJnF1b3Q7c3JjJnF1b3Q7IDogJnF1b3Q7aHR0cHM6Ly9hYXgtdXMtZWFzdC5hbWF6b24tYWRzeXN0ZW0uY29tL2UveHNwL2dldEFkP3NyYz01MDAmYW1wO3Nsb3Q9ZHAtYWRzLWNlbnRlci1wcm9tbyZhbXA7cmlkPTAxMDE1NDdjMGU2YTNlYjE5YTY2NjU1OWI4ZmI0ZDhmMGRmYmY3MWQwYWNiYjA4ZTNiOWMxMzVkMTU0YzU4MjJhZWU4JnF1b3Q7LCZxdW90O2FkU2VydmVyJnF1b3Q7IDomcXVvdDtjcyZxdW90OywmcXVvdDtjYW1wYWlnbklkJnF1b3Q7IDogICZxdW90OzY1MjkmcXVvdDssJnF1b3Q7YXJpZCZxdW90OyA6JnF1b3Q7MDRjZmEzZDZiZTYzNDVjZjk1ZGNiY2QzOWM3YzM1YTAmcXVvdDssJnF1b3Q7cGxhY2VtZW50SWQmcXVvdDs6ICZxdW90OzMyZmM2MjdlLWI1MDktNDg5YS05M2UwLWYyNTg5YWIwMDgyNiZxdW90OywmcXVvdDtzaXplJnF1b3Q7IDp7JnF1b3Q7d2lkdGgmcXVvdDs6ICZxdW90Ozk3MHB4JnF1b3Q7LCZxdW90O2hlaWdodCZxdW90OyA6ICZxdW90OzI1MHB4JnF1b3Q7fSwmcXVvdDthbGxvd2VkU2l6ZXMmcXVvdDsgOltdLCZxdW90O2FsbG93ZWREb21haW5zJnF1b3Q7IDogIFsmcXVvdDtnLWVjeC5pbWFnZXMtYW1hem9uLmNvbSZxdW90O10sJnF1b3Q7YWFuUGFyYW1zJnF1b3Q7IDogICAmcXVvdDtzaXRlJTNEYW1hem9uLnVzJTNCcHQlM0REZXRhaWwlM0JzbG90JTNEZHAtYWRzLWNlbnRlci1wcm9tbyUzQnBpZCUzREIwMUdLUUkzOTIlM0JhcmlkJTNEMDRjZmEzZDZiZTYzNDVjZjk1ZGNiY2QzOWM3YzM1YTAmcXVvdDssJnF1b3Q7bG9hZEFmdGVyJnF1b3Q7IDogICAmcXVvdDtjcml0aWNhbEZlYXR1cmUmcXVvdDssJnF1b3Q7ZXh0cmFEZWxheSZxdW90OyA6ICAwLCZxdW90O2lmcmFtZUV4dHJhU3R5bGUmcXVvdDs6ICZxdW90OyZxdW90OywmcXVvdDtpZnJhbWVDbGFzcyZxdW90OzogICZxdW90OyZxdW90OywmcXVvdDthZFBpeGVscyZxdW90OzogW10sJnF1b3Q7YWRQaXhlbERlbGF5JnF1b3Q7OiAmcXVvdDswJnF1b3Q7LCZxdW90O2FheEluc3RyUGl4ZWxVcmwmcXVvdDs6ICZxdW90OyZxdW90OywmcXVvdDtzZXJ2ZXJTaWRlRmV0Y2hBZCZxdW90OzogJnF1b3Q7ZmFsc2UmcXVvdDssJnF1b3Q7ZW5hYmxlQWRCbG9ja2VyRGV0ZWN0b3ImcXVvdDs6IGZhbHNlLCZxdW90O2Rpc2FibGVSZXNpemVGdW5jJnF1b3Q7OiB0cnVlLCZxdW90O2ZhbGxiYWNrU3RhdGljQWRJbWdVcmwmcXVvdDs6ICZxdW90OyZxdW90OywmcXVvdDtmYWxsYmFja1N0YXRpY0FkQ2xpY2tVcmwmcXVvdDs6ICZxdW90OyZxdW90OywmcXVvdDtmYWxsYmFja1N0YXRpY0FkRXh0cmFTdHlsZSZxdW90OzogJnF1b3Q7JnF1b3Q7LCZxdW90O2FkRmVlZGJhY2tJbmZvJnF1b3Q7OiB7JnF1b3Q7ZW5kUG9pbnQmcXVvdDs6ICZxdW90Oy9ncC9hcS1mZWVkYmFjay9sYXp5TG9hZC9oYW5kbGVyL2FmLWxpbmstaGFuZGxlci5odG1sJnF1b3Q7LCZxdW90O2Jvb2xGZWVkYmFjayZxdW90OzogdHJ1ZSwmcXVvdDtzbHVnVGV4dCZxdW90OzogJnF1b3Q7QWR2ZXJ0aXNlbWVudCZxdW90O30sJnF1b3Q7YWRQbGFjZW1lbnRNZXRhRGF0YSZxdW90OzogeyZxdW90O3BhZ2VVcmwmcXVvdDs6ICZxdW90O2FIUjBjSE02THk5M2QzY3VZVzFoZW05dUxtTnZiUzluY0M5d2NtOWtkV04wTDBJd01VZExVVWt6T1RJL1pIQlNaWEYxWlhOMFNXUTlORGMxUlRNMFNsRldPVVpPVUVoS09WTlRWRVFtVjBSSFBXcGxkMlZzY25sZlpHbHpjR3hoZVY5dmJsOTNaV0p6YVhSbEppcGxiblJ5YVdWektqMHdKaXBXWlhKemFXOXVLajB4Smc9PSZxdW90OywmcXVvdDthZEVsZW1lbnRJZCZxdW90OzogJnF1b3Q7YXBlX0RldGFpbF9kcC1hZHMtY2VudGVyLXByb21vX0Rlc2t0b3BfcGxhY2VtZW50JnF1b3Q7LCZxdW90O3BhZ2VUeXBlJnF1b3Q7OiAmcXVvdDtEZXRhaWwmcXVvdDssJnF1b3Q7c2xvdE5hbWUmcXVvdDs6ICZxdW90O2RwLWFkcy1jZW50ZXItcHJvbW8mcXVvdDt9LCZxdW90O2FkQ3JlYXRpdmVNZXRhRGF0YSZxdW90OzogeyZxdW90O2FkTmV0d29yayZxdW90OzogJnF1b3Q7Y3MmcXVvdDt9LCZxdW90O2FkdmVydGlzZW1lbnRTdHlsZSZxdW90OzogeyZxdW90O3Bvc2l0aW9uJnF1b3Q7OiAmcXVvdDthYnNvbHV0ZSZxdW90OywmcXVvdDt0b3AmcXVvdDs6ICZxdW90OzJweCZxdW90OywmcXVvdDtyaWdodCZxdW90OzogJnF1b3Q7MHB4JnF1b3Q7LCZxdW90O2Rpc3BsYXkmcXVvdDs6ICZxdW90O2lubGluZS1ibG9jayZxdW90OywmcXVvdDtmb250JnF1b3Q7OiAmcXVvdDtub3JtYWwgMTFweCBBcmlhbCZxdW90OywmcXVvdDtjb2xvciZxdW90OzogJnF1b3Q7Z3JleSZxdW90O30sJnF1b3Q7ZmVlZGJhY2tEaXZTdHlsZSZxdW90OzogeyAmcXVvdDtwb3NpdGlvbiZxdW90OzogJnF1b3Q7cmVsYXRpdmUmcXVvdDssICZxdW90O2hlaWdodCZxdW90OzogJnF1b3Q7MThweCZxdW90O30sJnF1b3Q7dmlld2FiaWxpdHlTdGFuZGFyZHMmcXVvdDs6IFt7JnF1b3Q7cCZxdW90OzogMCwgJnF1b3Q7dCZxdW90OzogMCwgJnF1b3Q7ZGVmJnF1b3Q7OiAmcXVvdDthbXpuJnF1b3Q7fSwgeyZxdW90O3AmcXVvdDs6IDMwLCAmcXVvdDt0JnF1b3Q7OiAxLCAmcXVvdDtkZWYmcXVvdDs6ICZxdW90O2lhYiZxdW90O30sIHsmcXVvdDtwJnF1b3Q7OiAxMDAsICZxdW90O3QmcXVvdDs6IDEsICZxdW90O2RlZiZxdW90OzogJnF1b3Q7Z3JvdXBtJnF1b3Q7fV0sJnF1b3Q7YWpheFdlYmxhYlRyaWdnZXJJZCZxdW90OzogJnF1b3Q7JnF1b3Q7LCZxdW90O2FicFN0YXR1cyZxdW90OzogJnF1b3Q7LTEmcXVvdDssJnF1b3Q7YWJwQWNjZXB0YWJsZSZxdW90OzogJnF1b3Q7dHJ1ZSZxdW90OywmcXVvdDtwcm9ncmFtSWRzVG9Db2xsYXBzZSZxdW90OzogW10sJnF1b3Q7REFzZlVybCZxdW90OzomcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvYXBlL3NmL2Rlc2t0b3AvREFzZi0xLjUwLjIyOGY5OGMuX1Y0NTE5NTA5MTBfLmpzJnF1b3Q7fVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGRhdGEtYXJpZD1cIjA0Y2ZhM2Q2YmU2MzQ1Y2Y5NWRjYmNkMzljN2MzNWEwXCI+XHUwMDNDaWZyYW1lIG5hbWU9XCJ7JnF1b3Q7c2xvdCZxdW90OzomcXVvdDtEZXRhaWxfZHAtYWRzLWNlbnRlci1wcm9tb19EZXNrdG9wJnF1b3Q7LCZxdW90O3Nsb3ROYW1lJnF1b3Q7OiZxdW90O2RwLWFkcy1jZW50ZXItcHJvbW8mcXVvdDssJnF1b3Q7c3JjJnF1b3Q7OiZxdW90O2h0dHBzOi8vYWF4LXVzLWVhc3QuYW1hem9uLWFkc3lzdGVtLmNvbS9lL3hzcC9nZXRBZD9zcmM9NTAwJmFtcDtzbG90PWRwLWFkcy1jZW50ZXItcHJvbW8mYW1wO3JpZD0wMTAxNTQ3YzBlNmEzZWIxOWE2NjY1NTliOGZiNGQ4ZjBkZmJmNzFkMGFjYmIwOGUzYjljMTM1ZDE1NGM1ODIyYWVlOCZxdW90OywmcXVvdDthZFNlcnZlciZxdW90OzomcXVvdDtjcyZxdW90OywmcXVvdDtjYW1wYWlnbklkJnF1b3Q7OiZxdW90OzY1MjkmcXVvdDssJnF1b3Q7YXJpZCZxdW90OzomcXVvdDswNGNmYTNkNmJlNjM0NWNmOTVkY2JjZDM5YzdjMzVhMCZxdW90OywmcXVvdDtwbGFjZW1lbnRJZCZxdW90OzomcXVvdDszMmZjNjI3ZS1iNTA5LTQ4OWEtOTNlMC1mMjU4OWFiMDA4MjYmcXVvdDssJnF1b3Q7c2l6ZSZxdW90Ozp7JnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7OTcwcHgmcXVvdDssJnF1b3Q7aGVpZ2h0JnF1b3Q7OiZxdW90OzI1MHB4JnF1b3Q7fSwmcXVvdDthbGxvd2VkU2l6ZXMmcXVvdDs6W3smcXVvdDt3aWR0aCZxdW90OzomcXVvdDs5NzBweCZxdW90OywmcXVvdDtoZWlnaHQmcXVvdDs6JnF1b3Q7MjUwcHgmcXVvdDt9XSwmcXVvdDthbGxvd2VkRG9tYWlucyZxdW90OzpbJnF1b3Q7Zy1lY3guaW1hZ2VzLWFtYXpvbi5jb20mcXVvdDssJnF1b3Q7ZDNsM2xraW56M2Y1NnQuY2xvdWRmcm9udC5uZXQmcXVvdDssJnF1b3Q7Zy1lY3guaW1hZ2VzLWFtYXpvbi5jb20mcXVvdDssJnF1b3Q7ei1lY3guaW1hZ2VzLWFtYXpvbi5jb20mcXVvdDssJnF1b3Q7aW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbSZxdW90OywmcXVvdDtnLWVjNC5pbWFnZXMtYW1hem9uLmNvbSZxdW90OywmcXVvdDtpbWFnZXMtY24uc3NsLWltYWdlcy1hbWF6b24uY29tJnF1b3Q7XSwmcXVvdDthYW5QYXJhbXMmcXVvdDs6JnF1b3Q7c2l0ZSUzRGFtYXpvbi51cyUzQnB0JTNERGV0YWlsJTNCc2xvdCUzRGRwLWFkcy1jZW50ZXItcHJvbW8lM0JwaWQlM0RCMDFHS1FJMzkyJTNCYXJpZCUzRDA0Y2ZhM2Q2YmU2MzQ1Y2Y5NWRjYmNkMzljN2MzNWEwJnF1b3Q7LCZxdW90O2xvYWRBZnRlciZxdW90OzomcXVvdDtjcml0aWNhbEZlYXR1cmUmcXVvdDssJnF1b3Q7ZXh0cmFEZWxheSZxdW90OzowLCZxdW90O2lmcmFtZUV4dHJhU3R5bGUmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O2lmcmFtZUNsYXNzJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDthZFBpeGVscyZxdW90OzpbXSwmcXVvdDthZFBpeGVsRGVsYXkmcXVvdDs6JnF1b3Q7MCZxdW90OywmcXVvdDthYXhJbnN0clBpeGVsVXJsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDtzZXJ2ZXJTaWRlRmV0Y2hBZCZxdW90OzomcXVvdDtmYWxzZSZxdW90OywmcXVvdDtlbmFibGVBZEJsb2NrZXJEZXRlY3RvciZxdW90OzpmYWxzZSwmcXVvdDtkaXNhYmxlUmVzaXplRnVuYyZxdW90Ozp0cnVlLCZxdW90O2ZhbGxiYWNrU3RhdGljQWRJbWdVcmwmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O2ZhbGxiYWNrU3RhdGljQWRDbGlja1VybCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7ZmFsbGJhY2tTdGF0aWNBZEV4dHJhU3R5bGUmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O2FkRmVlZGJhY2tJbmZvJnF1b3Q7OnsmcXVvdDtlbmRQb2ludCZxdW90OzomcXVvdDsvZ3AvYXEtZmVlZGJhY2svbGF6eUxvYWQvaGFuZGxlci9hZi1saW5rLWhhbmRsZXIuaHRtbCZxdW90OywmcXVvdDtib29sRmVlZGJhY2smcXVvdDs6dHJ1ZSwmcXVvdDtzbHVnVGV4dCZxdW90OzomcXVvdDtBZHZlcnRpc2VtZW50JnF1b3Q7fSwmcXVvdDthZFBsYWNlbWVudE1ldGFEYXRhJnF1b3Q7OnsmcXVvdDtwYWdlVXJsJnF1b3Q7OiZxdW90O2FIUjBjSE02THk5M2QzY3VZVzFoZW05dUxtTnZiUzluY0M5d2NtOWtkV04wTDBJd01VZExVVWt6T1RJL1pIQlNaWEYxWlhOMFNXUTlORGMxUlRNMFNsRldPVVpPVUVoS09WTlRWRVFtVjBSSFBXcGxkMlZzY25sZlpHbHpjR3hoZVY5dmJsOTNaV0p6YVhSbEppcGxiblJ5YVdWektqMHdKaXBXWlhKemFXOXVLajB4Smc9PSZxdW90OywmcXVvdDthZEVsZW1lbnRJZCZxdW90OzomcXVvdDthcGVfRGV0YWlsX2RwLWFkcy1jZW50ZXItcHJvbW9fRGVza3RvcF9wbGFjZW1lbnQmcXVvdDssJnF1b3Q7cGFnZVR5cGUmcXVvdDs6JnF1b3Q7RGV0YWlsJnF1b3Q7LCZxdW90O3Nsb3ROYW1lJnF1b3Q7OiZxdW90O2RwLWFkcy1jZW50ZXItcHJvbW8mcXVvdDt9LCZxdW90O2FkQ3JlYXRpdmVNZXRhRGF0YSZxdW90Ozp7JnF1b3Q7YWROZXR3b3JrJnF1b3Q7OiZxdW90O2NzJnF1b3Q7fSwmcXVvdDthZHZlcnRpc2VtZW50U3R5bGUmcXVvdDs6eyZxdW90O3Bvc2l0aW9uJnF1b3Q7OiZxdW90O2Fic29sdXRlJnF1b3Q7LCZxdW90O3RvcCZxdW90OzomcXVvdDsycHgmcXVvdDssJnF1b3Q7cmlnaHQmcXVvdDs6JnF1b3Q7MHB4JnF1b3Q7LCZxdW90O2Rpc3BsYXkmcXVvdDs6JnF1b3Q7aW5saW5lLWJsb2NrJnF1b3Q7LCZxdW90O2ZvbnQmcXVvdDs6JnF1b3Q7bm9ybWFsIDExcHggQXJpYWwmcXVvdDssJnF1b3Q7Y29sb3ImcXVvdDs6JnF1b3Q7Z3JleSZxdW90O30sJnF1b3Q7ZmVlZGJhY2tEaXZTdHlsZSZxdW90Ozp7JnF1b3Q7cG9zaXRpb24mcXVvdDs6JnF1b3Q7cmVsYXRpdmUmcXVvdDssJnF1b3Q7aGVpZ2h0JnF1b3Q7OiZxdW90OzE4cHgmcXVvdDt9LCZxdW90O3ZpZXdhYmlsaXR5U3RhbmRhcmRzJnF1b3Q7Olt7JnF1b3Q7cCZxdW90OzowLCZxdW90O3QmcXVvdDs6MCwmcXVvdDtkZWYmcXVvdDs6JnF1b3Q7YW16biZxdW90O30seyZxdW90O3AmcXVvdDs6MzAsJnF1b3Q7dCZxdW90OzoxLCZxdW90O2RlZiZxdW90OzomcXVvdDtpYWImcXVvdDt9LHsmcXVvdDtwJnF1b3Q7OjEwMCwmcXVvdDt0JnF1b3Q7OjEsJnF1b3Q7ZGVmJnF1b3Q7OiZxdW90O2dyb3VwbSZxdW90O31dLCZxdW90O2FqYXhXZWJsYWJUcmlnZ2VySWQmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O2FicFN0YXR1cyZxdW90OzomcXVvdDstMSZxdW90OywmcXVvdDthYnBBY2NlcHRhYmxlJnF1b3Q7OiZxdW90O3RydWUmcXVvdDssJnF1b3Q7cHJvZ3JhbUlkc1RvQ29sbGFwc2UmcXVvdDs6W10sJnF1b3Q7REFzZlVybCZxdW90OzomcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvYXBlL3NmL2Rlc2t0b3AvREFzZi0xLjUwLjIyOGY5OGMuX1Y0NTE5NTA5MTBfLmpzJnF1b3Q7LCZxdW90O2hvc3REb21haW4mcXVvdDs6JnF1b3Q7aHR0cHM6Ly93d3cuYW1hem9uLmNvbSZxdW90OywmcXVvdDtxdWVyeVBhcmFtcyZxdW90Ozp7fSwmcXVvdDthUGFnZVN0YXJ0JnF1b3Q7OjE1Njk3OTQ0NTg5MTMsJnF1b3Q7YWRTdGFydFRpbWUmcXVvdDs6MTU2OTc5NDQ2MDE2NywmcXVvdDtzYWZlRnJhbWVTcmMmcXVvdDs6JnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2FwZS9zZi93aGl0ZWxpc3RlZC9kZXNrdG9wL3NmLTEuNTAuMjI4Zjk4Yy5fVjQ1MTk1MDkwOF8uaHRtbCZxdW90O31cIiBpZD1cImFwZV9EZXRhaWxfZHAtYWRzLWNlbnRlci1wcm9tb19EZXNrdG9wX2lmcmFtZVwiIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9hcGUvc2Yvd2hpdGVsaXN0ZWQvZGVza3RvcC9zZi0xLjUwLjIyOGY5OGMuX1Y0NTE5NTA5MDhfLmh0bWxcIiBoZWlnaHQ9XCIyNTBweFwiIHdpZHRoPVwiOTcwcHhcIiBjbGFzcz1cIlwiIGZyYW1lYm9yZGVyPVwiMFwiIG1hcmdpbmhlaWdodD1cIjBcIiBtYXJnaW53aWR0aD1cIjBcIiBzY3JvbGxpbmc9XCJub1wiIGFsbG93dHJhbnNwYXJlbmN5PVwidHJ1ZVwiIGFsbG93ZnVsbHNjcmVlbj1cIlwiIG1vemFsbG93ZnVsbHNjcmVlbj1cIlwiIHdlYmtpdGFsbG93ZnVsbHNjcmVlbj1cIlwiIGRhdGEtYXJpZD1cIjA0Y2ZhM2Q2YmU2MzQ1Y2Y5NWRjYmNkMzljN2MzNWEwXCIgc2FuZGJveD1cImFsbG93LXNjcmlwdHMgYWxsb3ctdG9wLW5hdmlnYXRpb24gYWxsb3ctcG9wdXBzIGFsbG93LXBvcHVwcy10by1lc2NhcGUtc2FuZGJveCBhbGxvdy1zYW1lLW9yaWdpblwiIHN0eWxlPVwiXCI+XHUwMDNDL2lmcmFtZT5cdTAwM0MvZGl2Plx1MDAzQ3NjcmlwdD4oZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGQsZSl7aWYod2luZG93LmFkZEV2ZW50TGlzdGVuZXIpe3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKGQsZSxmYWxzZSk7fWVsc2V7aWYod2luZG93LmF0dGFjaEV2ZW50KXt3aW5kb3cuYXR0YWNoRXZlbnQoXCJvblwiK2QsZSk7fX19ZnVuY3Rpb24gYyhkLGUpe2lmKHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKXt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihkLGUsZmFsc2UpO31lbHNle2lmKHdpbmRvdy5kZXRhY2hFdmVudCl7d2luZG93LmRldGFjaEV2ZW50KFwib25cIitkLGUpO319fXZhciBiPWZ1bmN0aW9uKCl7KGZ1bmN0aW9uKCl7KGZ1bmN0aW9uKGosbSl7ai5zZkxvZ0Vycm9ycz1qLnNmTG9nRXJyb3JzfHxmYWxzZTt2YXIgbz1vfHxmdW5jdGlvbihzLHIpe3I9cnx8bmV3IEVycm9yKHMpO2lmKGoudWUmJnR5cGVvZiB1ZS5jb3VudD09XCJmdW5jdGlvblwiKXt1ZS5jb3VudChcImFkcGxhY2VtZW50czpzYWZlRnJhbWVFcnJvclwiLDEpO31pZighai5zZkxvZ0Vycm9ycyl7cmV0dXJuO31pZihqLnVlTG9nRXJyb3Ipe2oudWVMb2dFcnJvcihyLHtsb2dMZXZlbDpcIkVSUk9SXCIsYXR0cmlidXRpb246XCJBUEUtc2FmZWZyYW1lXCIsbWVzc2FnZTpzK1wiIFwifSk7fWVsc2V7aWYodHlwZW9mIGNvbnNvbGUhPT1cInVuZGVmaW5lZFwiJiZjb25zb2xlLmVycm9yKXtjb25zb2xlLmVycm9yKHMscik7fX19O2ouYWFuUGFyYW1zPWouYWFuUGFyYW1zfHx7fTtqLmFhblBhcmFtc1tcImRwLWFkcy1jZW50ZXItcHJvbW9cIl09XCJzaXRlPWFtYXpvbi51cztwdD1EZXRhaWw7c2xvdD1kcC1hZHMtY2VudGVyLXByb21vO3BpZD1CMDFHS1FJMzkyO2FyaWQ9MDRjZmEzZDZiZTYzNDVjZjk1ZGNiY2QzOWM3YzM1YTBcIjtqW1wiZHAtYWRzLWNlbnRlci1wcm9tb1wiXT17fTtqW1wiZHAtYWRzLWNlbnRlci1wcm9tb1wiXS5hZFN0YXJ0VGltZT0obmV3IERhdGUoKSkuZ2V0VGltZSgpO2Z1bmN0aW9uIGQoKXtyZXR1cm4gai5pbm5lckhlaWdodHx8bS5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0O31mdW5jdGlvbiBnKCl7cmV0dXJuIGouaW5uZXJXaWR0aHx8bS5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGg7fWZ1bmN0aW9uIGUodCxyLHMpe2lmKHQ+MCl7cmV0dXJuKHM+dCk7fWVsc2V7cmV0dXJuKHI+MCk7fX12YXIgZj1mdW5jdGlvbigpe3JldHVybihEYXRlLm5vdz9EYXRlLm5vdygpOm5ldyBEYXRlKCkuZ2V0VGltZSgpKTt9O3Rocm90dGxlPWZ1bmN0aW9uKHMsdSx5KXt2YXIgcix3LHo7dmFyIHg9bnVsbDt2YXIgdj0wO2lmKCF5KXt5PXt9O312YXIgdD1mdW5jdGlvbigpe3Y9eS5sZWFkaW5nPT09ZmFsc2U/MDpmKCk7eD1udWxsO3o9cy5hcHBseShyLHcpO2lmKCF4KXtyPXc9bnVsbDt9fTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgQj1mKCk7aWYoIXYmJnkubGVhZGluZz09PWZhbHNlKXt2PUI7fXZhciBBPXUtKEItdik7cj10aGlzO3c9YXJndW1lbnRzO2lmKEFcdTAwM0M9MHx8QT51KXtpZih4KXtjbGVhclRpbWVvdXQoeCk7eD1udWxsO312PUI7ej1zLmFwcGx5KHIsdyk7aWYoIXgpe3I9dz1udWxsO319ZWxzZXtpZigheCYmeS50cmFpbGluZyE9PWZhbHNlKXt4PXNldFRpbWVvdXQodCxBKTt9fXJldHVybiB6O307fTtmdW5jdGlvbiBsKHUsdyx2LHIpe3RyeXt2YXIgdD1tLmdldEVsZW1lbnRCeUlkKHUpLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO2lmKGUodC50b3AsdC5ib3R0b20sZCgpKSYmZSh0LmxlZnQsdC5yaWdodCxnKCkpKXtpZih0eXBlb2YgdWV0PT1cImZ1bmN0aW9uXCIpe3VldChcImJiXCIsXCJhZHBsYWNlbWVudHM6dmlld2FibGVsYXRlbmN5OlwiK3cse3diOjF9KTtpZih2KXt1ZXQoXCJiYlwiLFwiYWRwbGFjZW1lbnRzOnZpZXdhYmxlbGF0ZW5jeTpcIit2LHt3YjoxfSk7fX1pZih0eXBlb2YgdWV4PT1cImZ1bmN0aW9uXCImJmoudWUmJnR5cGVvZiB1ZS5jb3VudD09XCJmdW5jdGlvblwiKXtpZihqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW3JdLmxvYWRlZCl7dWV4KFwibGRcIixcImFkcGxhY2VtZW50czp2aWV3YWJsZWxhdGVuY3k6XCIrdyx7d2I6MX0pO2lmKHYpe3VleChcImxkXCIsXCJhZHBsYWNlbWVudHM6dmlld2FibGVsYXRlbmN5OlwiK3Yse3diOjF9KTt9dWUuY291bnQoXCJhZHBsYWNlbWVudHM6aHRtbHZpZXdlZDpsb2FkZWQ6XCIrdywxKTtpZih2KXt1ZS5jb3VudChcImFkcGxhY2VtZW50czpodG1sdmlld2VkOmxvYWRlZDpcIit2LDEpO319dWUuY291bnQoXCJhZHBsYWNlbWVudHM6aHRtbHZpZXdlZDpcIit3LDEpO2lmKHYpe3VlLmNvdW50KFwiYWRwbGFjZW1lbnRzOmh0bWx2aWV3ZWQ6XCIrdiwxKTt9fWouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbcl0udmlld2VkPXRydWU7aWYoai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tyXS50cmFja2VyKXtjKFwic2Nyb2xsXCIsai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tyXS50cmFja2VyKTtjKFwicmVzaXplXCIsai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tyXS50cmFja2VyKTt9fX1jYXRjaChzKXtqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW3JdLnZhbGlkPWZhbHNlO319dHJ5e2ouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnM9ai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc3x8e307dmFyIHE9XCJhcGVfRGV0YWlsX2RwLWFkcy1jZW50ZXItcHJvbW9fRGVza3RvcF9wbGFjZW1lbnRcIjt2YXIgcD1cIkRldGFpbF9kcC1hZHMtY2VudGVyLXByb21vX0Rlc2t0b3BcIi5yZXBsYWNlKC9cXF8vZyxcIjpcIik7dmFyIGg9XCIzMmZjNjI3ZS1iNTA5LTQ4OWEtOTNlMC1mMjU4OWFiMDA4MjZcIjt2YXIgaT1cIjA0Y2ZhM2Q2YmU2MzQ1Y2Y5NWRjYmNkMzljN2MzNWEwXCI7ai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tpXT1qLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW2ldfHx7fTtqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW2ldLnZhbGlkPXRydWU7bChxLHAsaCxpKTtpZihqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW2ldLnZhbGlkJiYhai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tpXS52aWV3ZWQpe2ouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbaV0udHJhY2tlcj10aHJvdHRsZShmdW5jdGlvbigpe2wocSxwLGgsaSk7fSwyMCk7YShcInNjcm9sbFwiLGouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbaV0udHJhY2tlcik7YShcInJlc2l6ZVwiLGouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbaV0udHJhY2tlcik7fX1jYXRjaChrKXtpZihqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzJiZqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW1wiMDRjZmEzZDZiZTYzNDVjZjk1ZGNiY2QzOWM3YzM1YTBcIl0pe2ouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbXCIwNGNmYTNkNmJlNjM0NWNmOTVkY2JjZDM5YzdjMzVhMFwiXS52YWxpZD1mYWxzZTt9byhcIkVycm9yIGluaXRpYWxpemluZyB2aWV3YWJsZSBsYXRlbmN5IGluc3RydW1lbnRhdGlvblwiLGspO310cnl7aWYoai5EQXNmKXtqLkRBc2YubG9hZEFkcygpO31lbHNle3ZhciBuPW0uY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtuLnR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIjtuLmFzeW5jPXRydWU7bi5jaGFyc2V0PVwidXRmLThcIjtuLnNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9hcGUvc2YvZGVza3RvcC9EQXNmLTEuNTAuMjI4Zjk4Yy5fVjQ1MTk1MDkxMF8uanM/Y3NtX2F0dHJpYnV0aW9uPUFQRS1TYWZlRnJhbWVcIjtuLm9uZXJyb3I9ZnVuY3Rpb24oKXtvKFwiRXJyb3IgbG9hZGluZyBTYWZlRnJhbWUgbGlicmFyeVwiKTt9O24uc2V0QXR0cmlidXRlKFwiY3Jvc3NvcmlnaW5cIixcImFub255bW91c1wiKTsobS5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF18fG0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJib2R5XCIpWzBdKS5hcHBlbmRDaGlsZChuKTt9fWNhdGNoKGspe28oXCJFcnJvciBhcHBlbmRpbmcgREFzZiBsaWJyYXJ5XCIsayk7fX0od2luZG93LGRvY3VtZW50KSk7fSkoKTt9O2IoKTt9KSgpO1x1MDAzQy9zY3JpcHQ+XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDc3R5bGU+XG4vKiEgalF1ZXJ5IFVJIC0gdjEuMTAuMyAtIDIwMTMtMDUtMDNcbiogaHR0cDovL2pxdWVyeXVpLmNvbVxuKiBJbmNsdWRlczoganF1ZXJ5LnVpLmNvcmUuY3NzLCBqcXVlcnkudWkuYWNjb3JkaW9uLmNzcywganF1ZXJ5LnVpLmF1dG9jb21wbGV0ZS5jc3MsIGpxdWVyeS51aS5idXR0b24uY3NzLCBqcXVlcnkudWkuZGF0ZXBpY2tlci5jc3MsIGpxdWVyeS51aS5kaWFsb2cuY3NzLCBqcXVlcnkudWkubWVudS5jc3MsIGpxdWVyeS51aS5wcm9ncmVzc2Jhci5jc3MsIGpxdWVyeS51aS5yZXNpemFibGUuY3NzLCBqcXVlcnkudWkuc2VsZWN0YWJsZS5jc3MsIGpxdWVyeS51aS5zbGlkZXIuY3NzLCBqcXVlcnkudWkuc3Bpbm5lci5jc3MsIGpxdWVyeS51aS50YWJzLmNzcywganF1ZXJ5LnVpLnRvb2x0aXAuY3NzXG4qIFRvIHZpZXcgYW5kIG1vZGlmeSB0aGlzIHRoZW1lLCB2aXNpdCBodHRwOi8vanF1ZXJ5dWkuY29tL3RoZW1lcm9sbGVyLz9mZkRlZmF1bHQ9VHJlYnVjaGV0JTIwTVMlMkNUYWhvbWElMkNWZXJkYW5hJTJDQXJpYWwlMkNzYW5zLXNlcmlmJmZ3RGVmYXVsdD1ib2xkJmZzRGVmYXVsdD0xLjFlbSZjb3JuZXJSYWRpdXM9NHB4JmJnQ29sb3JIZWFkZXI9ZjZhODI4JmJnVGV4dHVyZUhlYWRlcj1nbG9zc193YXZlJmJnSW1nT3BhY2l0eUhlYWRlcj0zNSZib3JkZXJDb2xvckhlYWRlcj1lNzhmMDgmZmNIZWFkZXI9ZmZmZmZmJmljb25Db2xvckhlYWRlcj1mZmZmZmYmYmdDb2xvckNvbnRlbnQ9ZWVlZWVlJmJnVGV4dHVyZUNvbnRlbnQ9aGlnaGxpZ2h0X3NvZnQmYmdJbWdPcGFjaXR5Q29udGVudD0xMDAmYm9yZGVyQ29sb3JDb250ZW50PWRkZGRkZCZmY0NvbnRlbnQ9MzMzMzMzJmljb25Db2xvckNvbnRlbnQ9MjIyMjIyJmJnQ29sb3JEZWZhdWx0PWY2ZjZmNiZiZ1RleHR1cmVEZWZhdWx0PWdsYXNzJmJnSW1nT3BhY2l0eURlZmF1bHQ9MTAwJmJvcmRlckNvbG9yRGVmYXVsdD1jY2NjY2MmZmNEZWZhdWx0PTFjOTRjNCZpY29uQ29sb3JEZWZhdWx0PWVmOGMwOCZiZ0NvbG9ySG92ZXI9ZmRmNWNlJmJnVGV4dHVyZUhvdmVyPWdsYXNzJmJnSW1nT3BhY2l0eUhvdmVyPTEwMCZib3JkZXJDb2xvckhvdmVyPWZiY2IwOSZmY0hvdmVyPWM3NzQwNSZpY29uQ29sb3JIb3Zlcj1lZjhjMDgmYmdDb2xvckFjdGl2ZT1mZmZmZmYmYmdUZXh0dXJlQWN0aXZlPWdsYXNzJmJnSW1nT3BhY2l0eUFjdGl2ZT02NSZib3JkZXJDb2xvckFjdGl2ZT1mYmQ4NTAmZmNBY3RpdmU9ZWI4ZjAwJmljb25Db2xvckFjdGl2ZT1lZjhjMDgmYmdDb2xvckhpZ2hsaWdodD1mZmU0NWMmYmdUZXh0dXJlSGlnaGxpZ2h0PWhpZ2hsaWdodF9zb2Z0JmJnSW1nT3BhY2l0eUhpZ2hsaWdodD03NSZib3JkZXJDb2xvckhpZ2hsaWdodD1mZWQyMmYmZmNIaWdobGlnaHQ9MzYzNjM2Jmljb25Db2xvckhpZ2hsaWdodD0yMjhlZjEmYmdDb2xvckVycm9yPWI4MTkwMCZiZ1RleHR1cmVFcnJvcj1kaWFnb25hbHNfdGhpY2smYmdJbWdPcGFjaXR5RXJyb3I9MTgmYm9yZGVyQ29sb3JFcnJvcj1jZDBhMGEmZmNFcnJvcj1mZmZmZmYmaWNvbkNvbG9yRXJyb3I9ZmZkMjdhJmJnQ29sb3JPdmVybGF5PTY2NjY2NiZiZ1RleHR1cmVPdmVybGF5PWRpYWdvbmFsc190aGljayZiZ0ltZ09wYWNpdHlPdmVybGF5PTIwJm9wYWNpdHlPdmVybGF5PTUwJmJnQ29sb3JTaGFkb3c9MDAwMDAwJmJnVGV4dHVyZVNoYWRvdz1mbGF0JmJnSW1nT3BhY2l0eVNoYWRvdz0xMCZvcGFjaXR5U2hhZG93PTIwJnRoaWNrbmVzc1NoYWRvdz01cHgmb2Zmc2V0VG9wU2hhZG93PS01cHgmb2Zmc2V0TGVmdFNoYWRvdz0tNXB4JmNvcm5lclJhZGl1c1NoYWRvdz01cHhcbiogQ29weXJpZ2h0IDIwMTMgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycyBMaWNlbnNlZCBNSVQgKi8uYXNrLWF1dG9jb21wbGV0ZXtwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6MDtsZWZ0OjA7Y3Vyc29yOmRlZmF1bHR9LmFzay1hdXRvY29tcGxldGUtbWVudXtsaXN0LXN0eWxlOm5vbmU7cGFkZGluZzowO21hcmdpbjowO2Rpc3BsYXk6YmxvY2s7b3V0bGluZTowO2JvcmRlci1yYWRpdXM6LjNyZW07cG9zaXRpb246cmVsYXRpdmV9LmFzay1hdXRvY29tcGxldGUtbWVudSAuYXNrLWF1dG9jb21wbGV0ZS1tZW51LWl0ZW17bWFyZ2luOjA7cGFkZGluZzowO3dpZHRoOjEwMCU7bGlzdC1zdHlsZTpub25lfS5hc2stYXV0b2NvbXBsZXRlLW1lbnUgLmFzay1hdXRvY29tcGxldGUtbWVudS1pdGVtIGF7dGV4dC1kZWNvcmF0aW9uOm5vbmU7ZGlzcGxheTpibG9jaztwYWRkaW5nOjFweCAxMHB4O2xpbmUtaGVpZ2h0OjI7bWluLWhlaWdodDowO2ZvbnQtd2VpZ2h0OjQwMH0uYXNrLWF1dG9jb21wbGV0ZS1tZW51IC5hc2stYXV0b2NvbXBsZXRlLW1lbnUtaXRlbSBhLmFzay1hdXRvY29tcGxldGUtc3RhdGUtYWN0aXZlLC5hc2stYXV0b2NvbXBsZXRlLW1lbnUgLmFzay1hdXRvY29tcGxldGUtbWVudS1pdGVtIGEuYXNrLWF1dG9jb21wbGV0ZS1zdGF0ZS1mb2N1c3tmb250LXdlaWdodDo0MDA7bWFyZ2luOjA7YmFja2dyb3VuZDojZWVlfS5hc2stYXV0b2NvbXBsZXRlLW1lbnUtaXRlbS1maXJzdHtwYWRkaW5nLXRvcDoxMHB4IWltcG9ydGFudH0uYXNrLWF1dG9jb21wbGV0ZS1tZW51LWl0ZW0tbGFzdHtwYWRkaW5nLWJvdHRvbToxMHB4IWltcG9ydGFudH0uYXNrLWF1dG9jb21wbGV0ZS1tZW51IC5hc2stc3RhdGUtZGlzYWJsZWR7Zm9udC13ZWlnaHQ6NDAwO2xpbmUtaGVpZ2h0OjEuNX0uYXNrLWF1dG9jb21wbGV0ZS1tZW51IC5hc2stc3RhdGUtZGlzYWJsZWQgYXtjdXJzb3I6ZGVmYXVsdH0uYXNrLWF1dG9jb21wbGV0ZS13aWRnZXR7Zm9udC1mYW1pbHk6J0FtYXpvbiBFbWJlcic7Zm9udC1zaXplOjEuMWVtfS5hc2stYXV0b2NvbXBsZXRlLXdpZGdldCAuYXNrLWF1dG9jb21wbGV0ZS13aWRnZXR7Zm9udC1zaXplOjFlbX0uYXNrLWF1dG9jb21wbGV0ZS13aWRnZXQgaW5wdXQsLmFzay1hdXRvY29tcGxldGUtd2lkZ2V0IHNlbGVjdCwuYXNrLWF1dG9jb21wbGV0ZS13aWRnZXQtY29udGVudHtib3JkZXI6MXB4IHNvbGlkICNkZGQ7Y29sb3I6IzMzM30uYXNrLWF1dG9jb21wbGV0ZS13aWRnZXQtY29udGVudCBhe2NvbG9yOiMzMzN9LmFzay1hdXRvY29tcGxldGUtc3RhdGUtYWN0aXZlIGF7Y29sb3I6I2ViOGYwMDt0ZXh0LWRlY29yYXRpb246bm9uZX1cbi5hc2tQYWdlIC5hc2tXcmFwVGV4dHt3b3JkLXdyYXA6YnJlYWstd29yZH0uYXNrSGlkZGVue2Rpc3BsYXk6bm9uZX1hLmFzay1idGYtc2VhcmNoLWxpbmsgc3Bhbntwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6LTNweH0uYXNrTGFuZ3VhZ2VGaWx0ZXJMYWJlbHtwYWRkaW5nLXJpZ2h0OjZweH0uYS1pY29uLXNlYXJjaC5hc2stYnRmLXNlYXJjaC1idXR0b24taWNvbiwuYS1pY29uLXNlYXJjaC5hc2stc3dkcC1zZWFyY2gtYnV0dG9uLWljb257dmVydGljYWwtYWxpZ246bWlkZGxlfS5hc2tTZWFyY2hJbnB1dEluZ3Jlc3N7cG9zaXRpb246cmVsYXRpdmV9LmFza1BhZ2UgLmEtbGluay1ub3JtYWx7ZGlzcGxheTppbmxpbmUtYmxvY2t9LmFza0Zvcm1MYWJlbHtwYWRkaW5nLWxlZnQ6MCFpbXBvcnRhbnR9LmFza0Zvcm1MYWJlbCBsYWJlbC5hLW5hdGl2ZS1kcm9wZG93bntkaXJlY3Rpb246bHRyfS5hc2tUcmFuc2xhdGlvbkZvb3RlclNlcGFyYXRvciwuYXNrVHJhbnNsYXRpb25Gb290ZXJUZXh0e3BhZGRpbmctcmlnaHQ6NXB4fS5hc2tCdGZTZWFyY2hSZXN1bHRzQ29udGFpbmVyIC5hc2tCdGZTZWFyY2hSZXN1bHRzIC5tYXRjaGVzLC5hc2tEUFNlYXJjaFByaW1hcnlWaWV3Q29udGVudCAubWF0Y2hlcywuYXNrRFBTZWFyY2hTZWNvbmRhcnlWaWV3Q29udGVudCAuYXNrU2VhcmNoUmVzdWx0cyAubWF0Y2hlcywuYXNrTGl2ZVNlYXJjaFJlc3VsdHMgLm1hdGNoZXMsLmFza1NlYXJjaFJlc3VsdHNDb250YWluZXIgLmFza1NlYXJjaFJlc3VsdHMgLm1hdGNoZXN7Zm9udC13ZWlnaHQ6NzAwO2JhY2tncm91bmQtY29sb3I6I2ZmY2M3Zn0uYXNrTGl2ZVNlYXJjaEZhaWx1cmVNZXNzYWdlLC5hc2tMaXZlU2VhcmNoTG9hZGluZywuYXNrTGl2ZVNlYXJjaFN1Y2Nlc3NmdWxNZXNzYWdle2Rpc3BsYXk6bm9uZX0uYXNrRXhwYW5kZXJDb250YWluZXIgLmFza0xvbmdUZXh0e2Rpc3BsYXk6bm9uZX0uYXNrRXhwYW5kZXJDb250YWluZXIgLmFza1Nob3J0VGV4dHtkaXNwbGF5OmlubGluZX0uYXNrRXhwYW5kZXJDb250YWluZXIgLmFza1NlZUxlc3MsLmFza0V4cGFuZGVyQ29udGFpbmVyIC5hc2tTZWVNb3Jle3RleHQtZGVjb3JhdGlvbjpub25lfS5hc2tFeHBhbmRlckNvbnRhaW5lci5hc2tFeHBhbmRlckV4cGFuZGVkIC5hc2tMb25nVGV4dHtkaXNwbGF5OmlubGluZX0uYXNrRXhwYW5kZXJDb250YWluZXIuYXNrRXhwYW5kZXJFeHBhbmRlZCAuYXNrU2hvcnRUZXh0e2Rpc3BsYXk6bm9uZX0uYXNrQXV0aG9yQmFkZ2V7Ym9yZGVyLXRvcDoxcHggZGFzaGVkICNBOUE5QTk7Ym9yZGVyLWJvdHRvbToxcHggZGFzaGVkICNBOUE5QTk7Zm9udC1zaXplOjlweDt0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7Y29sb3I6IzAwNEI5MTtsZXR0ZXItc3BhY2luZzouNXB4O3BhZGRpbmc6MnB4O2ZvbnQtd2VpZ2h0OjcwMDt3aGl0ZS1zcGFjZTpub3dyYXB9YS5hc2tBdXRob3JCYWRnZTpsaW5re3RleHQtZGVjb3JhdGlvbjpub25lfS5hc2tOZXdBdXRob3JCYWRnZXtwYWRkaW5nLWxlZnQ6MnB4O2NvbG9yOnB1cnBsZTt3aGl0ZS1zcGFjZTpub3dyYXB9YS5hc2tOZXdBdXRob3JCYWRnZTphY3RpdmUsYS5hc2tOZXdBdXRob3JCYWRnZTpsaW5rLGEuYXNrTmV3QXV0aG9yQmFkZ2U6dmlzaXRlZHt0ZXh0LWRlY29yYXRpb246bm9uZTtjb2xvcjpwdXJwbGV9LmFza0VudGh1c2lhc3RCYWRnZXtjb2xvcjojNTM4MDAwfS5hc2tBbnN3ZXJNb3JlUXVlc3Rpb25zUG9zdEFuc3dlckZvcm1TZWN0aW9ue3Bvc2l0aW9uOnJlbGF0aXZlfS5hc2tBbnN3ZXJNb3JlUXVlc3Rpb25zQ29uZmlybWF0aW9ue2Rpc3BsYXk6bm9uZTtsZWZ0OjUwJTt0b3A6NTAlO21heC13aWR0aDo1MCU7cG9zaXRpb246YWJzb2x1dGU7Y29sb3I6I0ZGRjtwYWRkaW5nOjEwcHg7Ym9yZGVyLWNvbG9yOiM2Qzc3Nzg7YmFja2dyb3VuZC1jb2xvcjojNkM3Nzc4O2JvcmRlci1zdHlsZTpzb2xpZDtib3JkZXItcmFkaXVzOjZweDt6LWluZGV4OjI7dHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLC01MCUpfS5hc2tIdWRkbGVzVW5pbml0aWFsaXplZExpbmt7ZGlzcGxheTpub25lIWltcG9ydGFudDt2aXNpYmlsaXR5OmhpZGRlbiFpbXBvcnRhbnR9LmFzay1wcm9maWxlLWF2YXRhci1zbWFsbCAuYS1wcm9maWxlLWF2YXRhci13cmFwcGVye3BhZGRpbmctcmlnaHQ6NnB4IWltcG9ydGFudDt3aWR0aDozMHB4IWltcG9ydGFudH0uYXNrLXByb2ZpbGUtYXZhdGFyLXNtYWxsIC5hLXByb2ZpbGUtYXZhdGFyLXdyYXBwZXIgLmEtcHJvZmlsZS1hdmF0YXJ7aGVpZ2h0OjI0cHghaW1wb3J0YW50O3dpZHRoOjI0cHghaW1wb3J0YW50fS5hc2stcHJvZmlsZS1hdmF0YXItbGFyZ2UgLmEtcHJvZmlsZS1hdmF0YXItd3JhcHBlcntwYWRkaW5nLXJpZ2h0OjZweCFpbXBvcnRhbnQ7d2lkdGg6MzZweCFpbXBvcnRhbnR9LmFzay1wcm9maWxlLWF2YXRhci1sYXJnZSAuYS1wcm9maWxlLWF2YXRhci13cmFwcGVyIC5hLXByb2ZpbGUtYXZhdGFye2hlaWdodDozMHB4IWltcG9ydGFudDt3aWR0aDozMHB4IWltcG9ydGFudH0uYXNrLXByb2ZpbGUtYXZhdGFyLW5vbmUgLmEtcHJvZmlsZS1hdmF0YXItd3JhcHBlcntkaXNwbGF5Om5vbmV9LmFzay1wcm9maWxlLWF2YXRhci1ub25lW2RhdGEtYS10eXBlPWVudGh1c2lhc3RdIC5hLXByb2ZpbGUtYXZhdGFyOmFmdGVye2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnR9LmFza1F1ZXN0aW9uRXhhbXBsZXN7cGFkZGluZzowIDAgNDBweCA2MHB4fS5hc2tUeXBpY2FsRXhhbXBsZXN7Y29sb3I6IzMzMztsaW5lLWhlaWdodDoxOXB4O2ZvbnQtc2l6ZToxM3B4O2Rpc3BsYXk6YmxvY2t9LmFza0V4YW1wbGVRdWVzdGlvbntjb2xvcjojNjY2O3BhZGRpbmctdG9wOjVweH0uYXNrUXVlc3Rpb25Gb3JtIC5iYWRRdWVzdGlvbiwuYXNrUXVlc3Rpb25Gb3JtIC5lbXB0eVF1ZXN0aW9ue2Rpc3BsYXk6bm9uZX0uYXNrUXVlc3Rpb25Gb3JtLmhhc0JhZFF1ZXN0aW9uIC5iYWRRdWVzdGlvbiwuYXNrUXVlc3Rpb25Gb3JtLmhhc0VtcHR5UXVlc3Rpb24gLmVtcHR5UXVlc3Rpb257ZGlzcGxheTppbmxpbmU7Y29sb3I6Izk5MEQwM30uYXNrRGV0YWlsUGFnZVNlYXJjaFN1Ym1pdFF1ZXN0aW9uQnV0dG9ue21hcmdpbi1sZWZ0OjE0cHh9I2Fzay1idGYtY29udGFpbmVye2ZvbnQtZmFtaWx5OlwiQW1hem9uIEVtYmVyXCIsVmVyZGFuYSxBcmlhbCxIZWx2ZXRpY2Esc2Fucy1zZXJpZn0uYXNrSW5saW5lV2lkZ2V0e3dvcmQtd3JhcDpicmVhay13b3JkfS5hc2tXaWRnZXRRdWVzdGlvbnN7bWF4LXdpZHRoOjEwMDBweH0uYXNrQnRmU2VhcmNoVmlld0NvbnRlbnR7bWF4LXdpZHRoOjEwMDBweDt3b3JkLXdyYXA6YnJlYWstd29yZDtvdmVyZmxvdzpoaWRkZW59LmFza0J0ZlNlYXJjaFJlc3VsdHNIZWFkZXJ7Y3Vyc29yOnBvaW50ZXI7ZGlzcGxheTppbmxpbmUtYmxvY2s7cGFkZGluZzoyMHB4O3BhZGRpbmctYm90dG9tOjhweDtwYWRkaW5nLXRvcDoxNHB4fS5hc2tCdGZTZWFyY2hSZXN1bHRzSGVhZGVyQWN0aXZle2ZvbnQtd2VpZ2h0OjcwMDtib3JkZXItYm90dG9tOjNweCBzb2xpZCAjZmZhNzAwfS5hc2tCdGZTZWFyY2hGYWlsdXJlTWVzc2FnZSwuYXNrQnRmU2VhcmNoUXVlc3Rpb25FcnJvckNvbnRhaW5lciAuYXNrRXJyb3IsLmFza0J0ZlNlYXJjaFJlc3VsdHM6bm90KC5hc2tCdGZTZWFyY2hSZXN1bHRzQWN0aXZlKSwuYXNrQnRmU2VhcmNoU2VhcmNoSW5kaWNhdG9yLC5hc2tCdGZTZWFyY2hUYWJIZWFkZXJze2Rpc3BsYXk6bm9uZX0uYXNrQnRmU2VhcmNoUXVlc3Rpb25FcnJvckNvbnRhaW5lcnttYXJnaW4tYm90dG9tOjB9LmFza0J0ZkRlc2t0b3BTZWVBbGxRdWVzdGlvbnNCdXR0b257bWFyZ2luLWxlZnQ6MTc1cHh9LmEtaWNvbi1zZWFyY2guYXNrLWJ0Zi1zZWFyY2gtYnV0dG9uLWljb257bWFyZ2luLWxlZnQ6NDBweDttYXJnaW4tcmlnaHQ6NXB4fS5hc2stYnRmLXNlYXJjaC1idXR0b24tcGxhY2Vob2xkZXJ7bWFyZ2luLXJpZ2h0OjQwcHh9LmFza0lubGluZVdpZGdldCAudm90ZXtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNkZGQ7dGV4dC1hbGlnbjpjZW50ZXI7Y29sb3I6IzAwMDtwYWRkaW5nOjA7bWFyZ2luOjA7d2lkdGg6NjVweH0uYXNrSW5saW5lV2lkZ2V0IC52b3RlIC5sYWJlbHt0ZXh0LWFsaWduOmNlbnRlcjtkaXNwbGF5OmJsb2NrfS5hc2tJbmxpbmVXaWRnZXQgLnZvdGUgZm9ybXttYXJnaW4tYm90dG9tOjAhaW1wb3J0YW50fS5hc2tJbmxpbmVXaWRnZXQgLnZvdGUgbGl7bGlzdC1zdHlsZTpub25lO3BhZGRpbmc6bm9uZTttYXJnaW46bm9uZTt0ZXh0LWluZGVudDpub25lfS5hc2tJbmxpbmVXaWRnZXQgLnZvdGUgLnVwIGlucHV0W3R5cGU9c3VibWl0XXt2ZXJ0aWNhbC1hbGlnbjp0b3B9LmFza0lubGluZVdpZGdldCAudm90ZSBpbnB1dFt0eXBlPXN1Ym1pdF17LXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6MTAwJTstbW96LWJhY2tncm91bmQtc2l6ZToxMDAlOy1vLWJhY2tncm91bmQtc2l6ZToxMDAlO2JhY2tncm91bmQtc2l6ZToxMDAlO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDt0ZXh0LWluZGVudDotOTk5OWVtO2ZvbnQtc2l6ZToxcHg7Ym9yZGVyOm5vbmU7d2lkdGg6MjBweDtoZWlnaHQ6MTZweDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LmFza0lubGluZVdpZGdldCAudm90ZSBpbnB1dFt0eXBlPXN1Ym1pdF06ZGlzYWJsZWR7b3BhY2l0eTouNDtjdXJzb3I6ZGVmYXVsdH0uYXNrSW5saW5lV2lkZ2V0IC52b3RlIC5sYWJlbFtkYXRhLWNvdW50XSAub25le2Rpc3BsYXk6bm9uZX0uYXNrSW5saW5lV2lkZ2V0IC52b3RlIC5sYWJlbFtkYXRhLWNvdW50XSAubW9yZXtkaXNwbGF5OmlubGluZX0uYXNrSW5saW5lV2lkZ2V0IC52b3RlIC5sYWJlbFtkYXRhLWNvdW50PScxJ10gLm9uZXtkaXNwbGF5OmlubGluZX0uYXNrSW5saW5lV2lkZ2V0IC52b3RlIC5sYWJlbFtkYXRhLWNvdW50PScxJ10gLm1vcmV7ZGlzcGxheTpub25lfS5jZFF1ZXN0aW9uQW5zd2VySGVhZGVye2ZvbnQtc2l6ZToyMXB4O2ZvbnQtd2VpZ2h0OjcwMDtjb2xvcjojMzMzIWltcG9ydGFudDtwYWRkaW5nLWJvdHRvbTo0cHg7bGluZS1oZWlnaHQ6MS4zfS5jZFF1ZXN0aW9uQW5zd2VyQnVja2V0e2hlaWdodDo1MDdweH0uY2RRdWVzdGlvbkFuc3dlckJ1Y2tldCAucm91bmRlZC1zdGFuZGFyZCwuY3VzdG9tZXJGb3J1bXNCdWNrZXQgLnJvdW5kZWQtc3RhbmRhcmR7LW1vei1ib3JkZXItcmFkaXVzOjRweDstd2Via2l0LWJvcmRlci1yYWRpdXM6NHB4O2JvcmRlci1yYWRpdXM6NHB4fS5jZFF1ZXN0aW9uQW5zd2VyQnVja2V0IC5kYm9hcmRzLWJ0biwuY3VzdG9tZXJGb3J1bXNCdWNrZXQgLmRib2FyZHMtYnRue2NvbG9yOiMwMDA7Zm9udC13ZWlnaHQ6NzAwO3RleHQtZGVjb3JhdGlvbjpub25lO3RleHQtYWxpZ246Y2VudGVyO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3ZlcnRpY2FsLWFsaWduOnRvcDt6b29tOjE7Ym9yZGVyLXN0eWxlOnNvbGlkO2JvcmRlci13aWR0aDoxcHg7LW1vei1ib3gtc2hhZG93Omluc2V0IDAgLTJweCAycHggcmdiYSgwLDAsMCwuMTIpOy13ZWJraXQtYm94LXNoYWRvdzppbnNldCAwIC0ycHggMnB4IHJnYmEoMCwwLDAsLjEyKTtib3gtc2hhZG93Omluc2V0IDAgLTJweCAycHggcmdiYSgwLDAsMCwuMTIpO2N1cnNvcjpwb2ludGVyO21hcmdpbjowO3BhZGRpbmc6MDtvdXRsaW5lOjA7LXdlYmtpdC10b3VjaC1jYWxsb3V0Om5vbmU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1raHRtbC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTstby11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmV9LmNkUXVlc3Rpb25BbnN3ZXJCdWNrZXQgLmJ0bi1wcmltLC5jdXN0b21lckZvcnVtc0J1Y2tldCAuYnRuLXByaW17YmFja2dyb3VuZDojZTRlMWRiO2JhY2tncm91bmQ6LW1vei1saW5lYXItZ3JhZGllbnQodG9wLCNmYmNkNWUsI2ZhYzIzNywjZjdiNDJhKTtiYWNrZ3JvdW5kOi13ZWJraXQtZ3JhZGllbnQobGluZWFyLDAgMCwwIDEwMCUsZnJvbSgjZmJjZDVlKSx0bygjZjdiNDJhKSk7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsI2ZiY2Q1ZSwjZmFjMjM3LCNmN2I0MmEpO2JhY2tncm91bmQ6LW8tbGluZWFyLWdyYWRpZW50KHRvcCwjZmJjZDVlLCNmN2I0MmEpO2JhY2tncm91bmQ6LW1zLWxpbmVhci1ncmFkaWVudCh0b3AsI2ZiY2Q1ZSwjZjdiNDJhKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCh0b3AsI2ZiY2Q1ZSwjZjdiNDJhKTtmaWx0ZXI6cHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9JyNmYmNkNWUnLCBlbmRDb2xvcnN0cj0nI2Y3YjQyYScpO2JvcmRlci1jb2xvcjojZjdiNDJhO3RleHQtc2hhZG93OiNGRkREOEMgMCAxcHggMH0uY2RRdWVzdGlvbkFuc3dlckJ1Y2tldCAuZGJvYXJkcy1idG4gc3BhbiwuY3VzdG9tZXJGb3J1bXNCdWNrZXQgLmRib2FyZHMtYnRuIHNwYW57Y29sb3I6IzAwMDtkaXNwbGF5OmJsb2NrfS5jZFF1ZXN0aW9uQW5zd2VyQnVja2V0IC5kYm9hcmRzLWJ0biAuYnRuLXNtYWxsLC5jdXN0b21lckZvcnVtc0J1Y2tldCAuZGJvYXJkcy1idG4gLmJ0bi1zbWFsbHtmb250LXNpemU6MTJweDtmb250LXdlaWdodDo3MDA7bGluZS1oZWlnaHQ6MTZweDtwYWRkaW5nOjFweCA2cHggMnB4IDZweH0uY2RRdWVzdGlvbkFuc3dlckJ1Y2tldCAuZGJvYXJkcy1idG4gaW5wdXQuYnRuLXNtYWxsLC5jdXN0b21lckZvcnVtc0J1Y2tldCAuZGJvYXJkcy1idG4gaW5wdXQuYnRuLXNtYWxse2ZvbnQtc2l6ZToxMnB4O2ZvbnQtd2VpZ2h0OjcwMDtsaW5lLWhlaWdodDoxMnB4O3BhZGRpbmc6MXB4IDZweCAycHggNnB4O3BhZGRpbmc6M3B4IDZweCAzcHggNnB4XFw5fS5jZFF1ZXN0aW9uQW5zd2VyQnVja2V0IHNwYW4uZGJvYXJkcy1idG4gaW5wdXQsLmN1c3RvbWVyRm9ydW1zQnVja2V0IHNwYW4uZGJvYXJkcy1idG4gaW5wdXR7ZGlzcGxheTpibG9jaztjdXJzb3I6cG9pbnRlcjtiYWNrZ3JvdW5kOjAgMDtib3JkZXI6MH0uY2RRdWVzdGlvbkFuc3dlckJ1Y2tldCBhLmJ0bi1wcmltOmhvdmVyLC5jZFF1ZXN0aW9uQW5zd2VyQnVja2V0IHNwYW4uYnRuLXByaW06aG92ZXIsLmN1c3RvbWVyRm9ydW1zQnVja2V0IGEuYnRuLXByaW06aG92ZXIsLmN1c3RvbWVyRm9ydW1zQnVja2V0IHNwYW4uYnRuLXByaW06aG92ZXJ7YmFja2dyb3VuZDojZmVjZDU3O2JhY2tncm91bmQ6LW1vei1saW5lYXItZ3JhZGllbnQodG9wLCNmZWNkNTcsI2ZkYzk0YiwjZmJjNDNjKTtiYWNrZ3JvdW5kOi13ZWJraXQtZ3JhZGllbnQobGluZWFyLDAgMCwwIDEwMCUsZnJvbSgjZmVjZDU3KSx0bygjZmJjNDNjKSk7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsI2ZlY2Q1NywjZmRjOTRiLCNmYmM0M2MpO2JhY2tncm91bmQ6LW8tbGluZWFyLWdyYWRpZW50KHRvcCwjZmVjZDU3LCNmYmM0M2MpO2JhY2tncm91bmQ6LW1zLWxpbmVhci1ncmFkaWVudCh0b3AsI2ZlY2Q1NywjZmJjNDNjKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCh0b3AsI2ZlY2Q1NywjZmJjNDNjKTtmaWx0ZXI6cHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9JyNmZWNkNTcnLCBlbmRDb2xvcnN0cj0nI2ZiYzQzYycpfS5jZFF1ZXN0aW9uQW5zd2VyQnVja2V0IGEuYnRuLXNlYzpob3ZlciwuY2RRdWVzdGlvbkFuc3dlckJ1Y2tldCBzcGFuLmJ0bi1zZWM6aG92ZXIsLmN1c3RvbWVyRm9ydW1zQnVja2V0IGEuYnRuLXNlYzpob3ZlciwuY3VzdG9tZXJGb3J1bXNCdWNrZXQgc3Bhbi5idG4tc2VjOmhvdmVye2JhY2tncm91bmQ6I2Y5ZjhmNjtiYWNrZ3JvdW5kOi1tb3otbGluZWFyLWdyYWRpZW50KHRvcCwjZjlmOGY2LCNlNGUxZGIsI2Y1ZjVmMyk7YmFja2dyb3VuZDotd2Via2l0LWdyYWRpZW50KGxpbmVhciwwIDAsMCAxMDAlLGZyb20oI2Y5ZjhmNiksdG8oI2Y1ZjVmMykpO2JhY2tncm91bmQ6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCNmOWY4ZjYsI2U0ZTFkYiwjZjVmNWYzKTtiYWNrZ3JvdW5kOi1vLWxpbmVhci1ncmFkaWVudCh0b3AsI2Y5ZjhmNiwjZjVmNWYzKTtiYWNrZ3JvdW5kOi1tcy1saW5lYXItZ3JhZGllbnQodG9wLCNmOWY4ZjYsI2Y1ZjVmMyk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG9wLCNmOWY4ZjYsI2Y1ZjVmMyk7ZmlsdGVyOnByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChzdGFydENvbG9yc3RyPScjZjlmOGY2JywgZW5kQ29sb3JzdHI9JyNmNWY1ZjMnKX0uY2RRdWVzdGlvbkFuc3dlckJ1Y2tldCAuZGJvYXJkcy1idG46aG92ZXIgc3BhbiwuY2RRdWVzdGlvbkFuc3dlckJ1Y2tldCBhLmRib2FyZHMtYnRuOmhvdmVyIGlucHV0LC5jdXN0b21lckZvcnVtc0J1Y2tldCAuZGJvYXJkcy1idG46aG92ZXIgc3BhbiwuY3VzdG9tZXJGb3J1bXNCdWNrZXQgYS5kYm9hcmRzLWJ0bjpob3ZlciBpbnB1dHtjb2xvcjojMDAwO3RleHQtZGVjb3JhdGlvbjpub25lO2N1cnNvcjpwb2ludGVyfS5jZFF1ZXN0aW9uQW5zd2VyQnVja2V0IGEuZGJvYXJkcy1idG46YWN0aXZlLC5jZFF1ZXN0aW9uQW5zd2VyQnVja2V0IHNwYW4uZGJvYXJkcy1idG46YWN0aXZlLC5jdXN0b21lckZvcnVtc0J1Y2tldCBhLmRib2FyZHMtYnRuOmFjdGl2ZSwuY3VzdG9tZXJGb3J1bXNCdWNrZXQgc3Bhbi5kYm9hcmRzLWJ0bjphY3RpdmV7Y3Vyc29yOnBvaW50ZXI7dGV4dC1kZWNvcmF0aW9uOm5vbmU7LW1vei1ib3gtc2hhZG93Omluc2V0IDAgMXB4IDFweCByZ2JhKDAsMCwwLC40KTstd2Via2l0LWJveC1zaGFkb3c6aW5zZXQgMCAxcHggMXB4IHJnYmEoMCwwLDAsLjQpO2JveC1zaGFkb3c6aW5zZXQgMCAxcHggMXB4IHJnYmEoMCwwLDAsLjQpfS5jZFF1ZXN0aW9uQW5zd2VyQnVja2V0IGEuZGJvYXJkcy1idG46YWN0aXZlIHNwYW4sLmN1c3RvbWVyRm9ydW1zQnVja2V0IGEuZGJvYXJkcy1idG46YWN0aXZlIHNwYW57Y29sb3I6IzAwMDtwYWRkaW5nLXRvcDozcHh9LmNkUXVlc3Rpb25BbnN3ZXJCdWNrZXQgYS5kYm9hcmRzLWJ0bjphY3RpdmUgc3Bhbi5idG4tc21hbGwsLmN1c3RvbWVyRm9ydW1zQnVja2V0IGEuZGJvYXJkcy1idG46YWN0aXZlIHNwYW4uYnRuLXNtYWxse2xpbmUtaGVpZ2h0OjE0cHh9LmNkUXVlc3Rpb25BbnN3ZXJCdWNrZXQgc3Bhbi5kYm9hcmRzLWJ0bjphY3RpdmUgaW5wdXQsLmN1c3RvbWVyRm9ydW1zQnVja2V0IHNwYW4uZGJvYXJkcy1idG46YWN0aXZlIGlucHV0e3BhZGRpbmc6MnB4IDZweCAxcHggNnB4fS5jZFF1ZXN0aW9uQW5zd2VyQnVja2V0IGEuZGJvYXJkcy1idG46YWN0aXZlLC5jZFF1ZXN0aW9uQW5zd2VyQnVja2V0IGlucHV0LmJ0bi1zbWFsbDphY3RpdmUsLmN1c3RvbWVyRm9ydW1zQnVja2V0IGEuZGJvYXJkcy1idG46YWN0aXZlLC5jdXN0b21lckZvcnVtc0J1Y2tldCBpbnB1dC5idG4tc21hbGw6YWN0aXZle291dGxpbmU6MH0uY2RRdWVzdGlvbkFuc3dlckJ1Y2tldCAuYnRuLXNlYywuY3VzdG9tZXJGb3J1bXNCdWNrZXQgLmJ0bi1zZWN7YmFja2dyb3VuZDojZTRlMWRiO2JhY2tncm91bmQ6LW1vei1saW5lYXItZ3JhZGllbnQodG9wLCNmOWY4ZjYsI2U0ZTFkYiwjZGFkNWNlKTtiYWNrZ3JvdW5kOi13ZWJraXQtZ3JhZGllbnQobGluZWFyLDAgMCwwIDEwMCUsZnJvbSgjZjlmOGY2KSx0bygjZGFkNWNlKSk7YmFja2dyb3VuZDotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsI2Y5ZjhmNiwjZTRlMWRiLCNkYWQ1Y2UpO2JhY2tncm91bmQ6LW8tbGluZWFyLWdyYWRpZW50KHRvcCwjZjlmOGY2LCNkYWQ1Y2UpO2JhY2tncm91bmQ6LW1zLWxpbmVhci1ncmFkaWVudCh0b3AsI2Y5ZjhmNiwjZGFkNWNlKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCh0b3AsI2Y5ZjhmNiwjZGFkNWNlKTtmaWx0ZXI6cHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9JyNmOWY4ZjYnLCBlbmRDb2xvcnN0cj0nI2RhZDVjZScpO2JvcmRlci1jb2xvcjojYjZiMmFhO3RleHQtc2hhZG93OiNmOGY4ZWQgMCAxcHggMH0uY2RRdWVzdGlvbkFuc3dlckJ1Y2tldCBhLmJ0bi1zZWM6aG92ZXIsLmNkUXVlc3Rpb25BbnN3ZXJCdWNrZXQgc3Bhbi5idG4tc2VjOmhvdmVyIC5jdXN0b21lckZvcnVtc0J1Y2tldCBhLmJ0bi1zZWM6aG92ZXIsLmN1c3RvbWVyRm9ydW1zQnVja2V0IHNwYW4uYnRuLXNlYzpob3ZlcntiYWNrZ3JvdW5kOiNmOWY4ZjY7YmFja2dyb3VuZDotbW96LWxpbmVhci1ncmFkaWVudCh0b3AsI2Y5ZjhmNiwjZTRlMWRiLCNmNWY1ZjMpO2JhY2tncm91bmQ6LXdlYmtpdC1ncmFkaWVudChsaW5lYXIsMCAwLDAgMTAwJSxmcm9tKCNmOWY4ZjYpLHRvKCNmNWY1ZjMpKTtiYWNrZ3JvdW5kOi13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwjZjlmOGY2LCNlNGUxZGIsI2Y1ZjVmMyk7YmFja2dyb3VuZDotby1saW5lYXItZ3JhZGllbnQodG9wLCNmOWY4ZjYsI2Y1ZjVmMyk7YmFja2dyb3VuZDotbXMtbGluZWFyLWdyYWRpZW50KHRvcCwjZjlmOGY2LCNmNWY1ZjMpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvcCwjZjlmOGY2LCNmNWY1ZjMpO2ZpbHRlcjpwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoc3RhcnRDb2xvcnN0cj0nI2Y5ZjhmNicsIGVuZENvbG9yc3RyPScjZjVmNWYzJyl9LmNkUXVlc3Rpb25BbnN3ZXJCdWNrZXQsLmNkUXVlc3Rpb25BbnN3ZXJCdWNrZXQgYSwuY2RRdWVzdGlvbkFuc3dlckJ1Y2tldCBhOmFjdGl2ZSwuY2RRdWVzdGlvbkFuc3dlckJ1Y2tldCBhOmZvY3VzLC5jZFF1ZXN0aW9uQW5zd2VyQnVja2V0IGE6dmlzaXRlZCwuY2RRdWVzdGlvbkFuc3dlckJ1Y2tldCBib2R5LC5jZFF1ZXN0aW9uQW5zd2VyQnVja2V0IGRpdiwuY2RRdWVzdGlvbkFuc3dlckJ1Y2tldCBwLC5jZFF1ZXN0aW9uQW5zd2VyQnVja2V0IHNwYW4sLmNkUXVlc3Rpb25BbnN3ZXJCdWNrZXQgdGV4dGFyZWF7Zm9udC1zdHlsZTpub3JtYWx9LmNkUXVlc3Rpb25BbnN3ZXJIZWFkZXJ7Zm9udC1zaXplOjIxcHg7Zm9udC13ZWlnaHQ6NzAwO2NvbG9yOiMzMzMhaW1wb3J0YW50O3BhZGRpbmctYm90dG9tOjRweDtsaW5lLWhlaWdodDoxLjN9LmNkUXVlc3Rpb25BbnN3ZXJCdWNrZXQgYXt0ZXh0LWRlY29yYXRpb246bm9uZTtjb2xvcjojMTI0QzkwfS5jZFF1ZXN0aW9uTGF6eVNlZUFsbHtmbG9hdDpsZWZ0O3BhZGRpbmc6NHB4IDAgOHB4IDI0cHh9LmFza1Jldmlld3NQYWdlQXNrV2lkZ2V0LmEtY29sdW1ue2Zsb2F0Om5vbmV9LmFza1Jldmlld3NQYWdlQXNrV2lkZ2V0IC5hc2tTdWJtaXRRdWVzdGlvbntmbG9hdDpyaWdodH0uYXNrUmV2aWV3c1BhZ2VBc2tXaWRnZXQgLmFza1F1ZXN0aW9uRm9ybSB0ZXh0YXJlYXtyZXNpemU6bm9uZX0uYXNrUmV2aWV3c1BhZ2VBc2tXaWRnZXQgLmFza1F1ZXN0aW9uRm9ybXtvdmVyZmxvdzpoaWRkZW59LmFza1Jldmlld3NQYWdlQXNrV2lkZ2V0IC5hc2tRdWVzdGlvbkZvcm0uaGFzQmFkUXVlc3Rpb24gLmJhZFF1ZXN0aW9uLC5hc2tSZXZpZXdzUGFnZUFza1dpZGdldCAuYXNrUXVlc3Rpb25Gb3JtLmhhc0VtcHR5UXVlc3Rpb24gLmVtcHR5UXVlc3Rpb257ZGlzcGxheTpibG9jazt3aWR0aDo3NSV9LmFza0xpdmVTZWFyY2hTaG93IC5hc2tUZWFzZXJRdWVzdGlvbnN7ZGlzcGxheTpub25lfS5hc2tMaXZlU2VhcmNoSGlkZSAuYXNrTGl2ZVNlYXJjaFJlc3VsdHN7ZGlzcGxheTpub25lfS5hc2tTZWFyY2hJbnB1dEluZ3Jlc3MgaW5wdXR7cGFkZGluZy1yaWdodDoyNXB4fS5hc2tEaXNwbGF5Q2xlYXJTZWFyY2h7ei1pbmRleDoxO3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjdweDt0b3A6MTJweDtjdXJzb3I6cG9pbnRlcjt3aWR0aDoxMnB4O2hlaWdodDoxMnB4fS5hc2tEaXNwbGF5Q2xlYXJTZWFyY2g6YmVmb3Jle3Bvc2l0aW9uOmFic29sdXRlO3RvcDotMTFweDtib3R0b206LTZweDtsZWZ0Oi02cHg7cmlnaHQ6LTdweDtjb250ZW50OicnfS5hc2tJbmxpbmVXaWRnZXQgLmFza0ZhaWxlZFRvRmV0Y2hNb3JlUXVlc3Rpb25ze2NvbG9yOiM5OTBEMDM7ZGlzcGxheTpub25lO3BhZGRpbmctYm90dG9tOjEwcHh9LmFza0lubGluZVdpZGdldCAuYXNrTW9yZVFhbmRBUmVzdWx0c3ttYXJnaW4tYm90dG9tOjB9LmFza0lubGluZVdpZGdldCAuYXNrTG9hZE1vcmVRdWVzdGlvbnMsLmFza0lubGluZVdpZGdldCAuYXNrVG9wUWFuZEFMb2FkTW9yZVF1ZXN0aW9uc3ttYXJnaW4tbGVmdDoxNzVweH0uYXNrTGl2ZVNlYXJjaEhpZGUgLmFza0xpdmVTZWFyY2hTZWVBbGxRdWVzdGlvbnNMaW5rLC5hc2tMaXZlU2VhcmNoU2hvdyAuYXNrRmFpbGVkVG9GZXRjaE1vcmVRdWVzdGlvbnMsLmFza0xpdmVTZWFyY2hTaG93IC5hc2tUb3BRYW5kQUxvYWRNb3JlUXVlc3Rpb25ze2Rpc3BsYXk6bm9uZX0uYXNrSW5saW5lV2lkZ2V0IC5hc2tTZWVNb3JlUXVlc3Rpb25zR3JpZHttYXJnaW4tdG9wOjAhaW1wb3J0YW50fS5hc2tJbmxpbmVXaWRnZXQgLmFza0ZhaWxlZFRvRmV0Y2hNb3JlQW5zd2Vyc3tjb2xvcjojOTkwRDAzO2Rpc3BsYXk6bm9uZTtwYWRkaW5nLWJvdHRvbToxMHB4fS5hc2tJbmxpbmVXaWRnZXQgLmFza0lubGluZUFuc3dlcnN7ZGlzcGxheTpub25lfS5hc2tJbmxpbmVXaWRnZXQgLmFza0NvbGxwYXNlQWRkaXRpb25hbEFuc3dlcnNCdXR0b257ZGlzcGxheTpub25lO21hcmdpbi10b3A6LTEwcHg7cGFkZGluZy1ib3R0b206MTBweH0uYXNrSW5saW5lV2lkZ2V0IC5hLWljb24tZXh0ZW5kZXItZXhwYW5ke21hcmdpbi1yaWdodDowfS5hc2tGb3JtQnV0dG9uc3t0ZXh0LWFsaWduOnJpZ2h0fSNhc2stcG9zdEFuc3dlckJ1dHRvbiwjYXNrLXBvc3RBbnN3ZXJDYW5jZWx7ZGlzcGxheTppbmxpbmUtYmxvY2t9I2Fzay1wb3N0QW5zd2VyQ2FuY2Vse21hcmdpbi1yaWdodDo4cHh9LmFza1F1ZXN0aW9uTGlzdFBhZ2V7bWFyZ2luOjAgMjBweH0uYXNrUXVlc3Rpb25MaXN0UGFnZSAuYXNrSW5saW5lV2lkZ2V0e3BhZGRpbmctbGVmdDoxNXB4fS5hc2tRdWVzdGlvbkxpc3RQYWdlIC5hc2tQYWdpbmF0aW9uSGVhZGVyTWVzc2FnZXtwYWRkaW5nLXRvcDo1cHh9LmFza1F1ZXN0aW9uTGlzdFBhZ2UgLmFza1NvcnRQcm9tcHR7cGFkZGluZy1yaWdodDo2cHh9LmFza1F1ZXN0aW9uTGlzdFBhZ2UgLnF1ZXN0aW9uVGV4dElucHV0e3dpZHRoOjUwJTtkaXNwbGF5OmlubGluZS1ibG9ja30uYXNrUXVlc3Rpb25MaXN0UGFnZSAuYXNrTWFudWZhY3R1cmVye2NvbG9yOiM2NjY7Zm9udC1zaXplOjEycHh9LmFza1F1ZXN0aW9uTGlzdFBhZ2UgLmFza0FsZXJ0Qm94e3dpZHRoOjUwJX0uYXNrUXVlc3Rpb25MaXN0UGFnZSAuYXNrUHJvZHVjdERlc2NyaXB0aW9ue21hcmdpbi10b3A6MzdweH0uYS1uby1qcyAuYXNrUXVlc3Rpb25MaXN0U29ydE9wdGlvbntkaXNwbGF5Om5vbmUhaW1wb3J0YW50O3Zpc2liaWxpdHk6aGlkZGVuIWltcG9ydGFudH0uYXNrUXVlc3Rpb25MaXN0UGFnZSAuYS1zdWJoZWFkZXIuYS1icmVhZGNydW1iIHVsIGxpIGF7bWFyZ2luLWxlZnQ6MjBweH0uYXNrUG9zdFF1ZXN0aW9uQnV0dG9uQ29udGFpbmVye2Rpc3BsYXk6bm9uZX0uYXNrQW5zd2VyTW9yZVF1ZXN0aW9uc01vZGFse3Bvc2l0aW9uOnJlbGF0aXZlfS5hc2tBbnN3ZXJNb3JlUXVlc3Rpb25zTW9kYWwgLmEtY2Fyb3VzZWwtY2FyZHtwYWRkaW5nLWxlZnQ6MTRweH0uYW5zd2VyTW9yZVF1ZXN0aW9uRGVza3RvcENhcmR7b3ZlcmZsb3cteTphdXRvO2hlaWdodDoyMzBweH0uYW5zd2VyTW9yZVF1ZXN0aW9uc0Fuc3dlckNvbmZpcm1EZXNrdG9wQ2FyZHtoZWlnaHQ6Mjk1cHg7b3ZlcmZsb3cteTphdXRvfS5hc2tBbnN3ZXJNb3JlUXVlc3Rpb25zUG9zdEFuc3dlclNwaW5uZXJ7ZGlzcGxheTpub25lO2xlZnQ6NTAlO3RvcDo1MCU7cG9zaXRpb246YWJzb2x1dGU7ei1pbmRleDoyO21hcmdpbi1sZWZ0Oi0xNnB4O21hcmdpbi10b3A6LTE2cHg7dHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLC01MCUpfS5hc2tBbnN3ZXJNb3JlUXVlc3Rpb25zTW9kYWwgdWwuYS1wYWdpbmF0aW9uLmEtZG90cyBsaXstd2Via2l0LWJvcmRlci1yYWRpdXM6NnB4Oy1tb3otYm9yZGVyLXJhZGl1czo2cHg7LW1zLWJvcmRlci1yYWRpdXM6NnB4O2JvcmRlci1yYWRpdXM6NnB4O2JvcmRlcjoxcHggc29saWQgIzk0OTQ5NDtoZWlnaHQ6OXB4O3dpZHRoOjlweDtiYWNrZ3JvdW5kLWNvbG9yOiNmM2YzZjM7ZGlzcGxheTppbmxpbmUtYmxvY2t9LmFza0Fuc3dlck1vcmVRdWVzdGlvbnNNb2RhbCB1bC5hLXBhZ2luYXRpb24gbGkuYS1zZWxlY3RlZHtiYWNrZ3JvdW5kLWNvbG9yOiM5NDk0OTR9LmFza0Fuc3dlck1vcmVRdWVzdGlvbnNEZXNrdG9wQmFja0RlYWN0aXZhdGV7Y29sb3I6Izc2NzY3Nn0uYXNrQW5zd2VyTW9yZVF1ZXN0aW9uc0Rlc2t0b3BCYWNrQWN0aXZhdGV7Y29sb3I6IzAwNjZjMH0uYXNrQW5zd2VyTW9yZVF1ZXN0aW9uc0Rlc2t0b3BQYWdpbmF0aW9ue21hcmdpbjowIDE0cHg7cGFkZGluZy1sZWZ0OjE0cHh9LmFza0Fuc3dlck1vcmVRdWVzdGlvbnNEZXNrdG9wUGFnaW5hdGlvbiAuYS1saW5rLW5vcm1hbHtmbG9hdDpyaWdodH0uYXNrU2VhcmNoUmVzdWx0c0hlYWRlcntjdXJzb3I6cG9pbnRlcjtkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nOjIwcHg7cGFkZGluZy1ib3R0b206OHB4O3BhZGRpbmctdG9wOjE0cHh9LmFza1NlYXJjaFJlc3VsdHNIZWFkZXJBY3RpdmV7Zm9udC13ZWlnaHQ6NzAwO2JvcmRlci1ib3R0b206M3B4IHNvbGlkICNmZmE3MDB9LmFza0RQU2VhcmNoRmFpbHVyZU1lc3NhZ2UsLmFza0RQU2VhcmNoUXVlc3Rpb25FcnJvckNvbnRhaW5lciAuYXNrRXJyb3IsLmFza0RQU2VhcmNoU2VhcmNoSW5kaWNhdG9yLC5hc2tQb3N0UXVlc3Rpb25Qcm9tcHRDb250YWluZXIsLmFza1NlYXJjaFJlc3VsdHM6bm90KC5hc2tTZWFyY2hSZXN1bHRzQWN0aXZlKSwuYXNrU2VhcmNoVGFiSGVhZGVyc3tkaXNwbGF5Om5vbmV9LmFza0RQU2VhcmNoVmlld0NvbnRlbnR7bWF4LXdpZHRoOjEwMDBweDt3b3JkLXdyYXA6YnJlYWstd29yZDtvdmVyZmxvdzpoaWRkZW59LmFza0RQU2VhcmNoRm9ybSwuYXNrRFBTZWFyY2hRdWVzdGlvbkVycm9yQ29udGFpbmVye21hcmdpbi1ib3R0b206MH0uYXNrQm90dG9tUG9zdFF1ZXN0aW9uQ29udGFpbmVyIC5hc2tCdGZTZWFyY2hQb3N0VGV4dElucHV0LC5hc2tCb3R0b21Qb3N0UXVlc3Rpb25Db250YWluZXIgLmFza0RQU2VhcmNoUG9zdFRleHRJbnB1dHttYXJnaW4tbGVmdDoxNHB4fS5hc2tCb3R0b21Qb3N0UXVlc3Rpb25Db250YWluZXIgLmFza1Bvc3RRdWVzdGlvblByb21wdEJ1dHRvbnttYXgtd2lkdGg6MTAwcHg7bWFyZ2luLWxlZnQ6NXB4fS5hc2tCb3R0b21Qb3N0UXVlc3Rpb25Db250YWluZXIgLmEtaWNvbi1wb3BvdmVye2Rpc3BsYXk6bm9uZX0uYXNrRm9sbG93dXBRdWVzdGlvbntkaXNwbGF5OmlubGluZS1ibG9jazttYXgtd2lkdGg6MTAwJTtwYWRkaW5nOjAgMTRweDttYXJnaW46MCAxMHB4IDE0cHggMDtiYWNrZ3JvdW5kLWNvbG9yOiNFQkY4RkE7Ym9yZGVyLWJvdHRvbTpzb2xpZCAxcHggIzk2OTY5NjtsaW5lLWhlaWdodDoyOXB4O2NvbG9yOiMwMDJGMzZ9LmEtaWNvbi1zZWFyY2guYXNrLXN3ZHAtc2VhcmNoLWJ1dHRvbi1pY29ue21hcmdpbi1sZWZ0OjQwcHg7bWFyZ2luLXJpZ2h0OjVweH0uYXNrLXN3ZHAtc2VhcmNoLWJ1dHRvbi1wbGFjZWhvbGRlcnttYXJnaW4tcmlnaHQ6NDBweH1cblx1MDAzQy9zdHlsZT5cblx1MDAzQ3NjcmlwdD5cbiAgKHdpbmRvdy5BbWF6b25VSVBhZ2VKUyA/IEFtYXpvblVJUGFnZUpTIDogUCkubG9hZC5qcygnaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzMxMSUyQk5VaWxqakwuX1JDfDUxRmhEbFB3Qy1MLmpzXy5qcz9BVUlDbGllbnRzL0Fza0F1aUFzc2V0cyMxNTUyNDgtVDEuMTYxMjg4LVQxLjIwNjUzMi1UMS4xODg4NDctVDEnKTtcblx1MDAzQy9zY3JpcHQ+XG5cblx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHt2YXIgX25wPSh3aW5kb3cuUC5fbmFtZXNwYWNlKFwiQXNrQXVpQXNzZXRzXCIpKTtpZihfbnAuZ3VhcmRGYXRhbCl7X25wLmd1YXJkRmF0YWwoZikoX25wKTt9ZWxzZXtmKF9ucCk7fX0oZnVuY3Rpb24oUCkge1xuICB3aW5kb3cuUCAmJiBQLndoZW4oJ2pRdWVyeScsICdyZWFkeScpLmV4ZWN1dGUoZnVuY3Rpb24oJCkge1xuICAgIHZhciBidGYgPSAkKCcjYXNrLWJ0Zl9mZWF0dXJlX2RpdicpO1xuICAgIGlmICgkKCdodG1sJykuaXMoJy5hLWx0LWllMTAnKSkge1xuICAgICAgdmFyIGFzc2V0c0xpbmsgPSBidGYuZmluZCgnbGluaycpLmF0dHIoJ2hyZWYnKTtcbiAgICAgIGRvY3VtZW50LnN0eWxlU2hlZXRzW2RvY3VtZW50LnN0eWxlU2hlZXRzLmxlbmd0aCAtIDFdLmFkZEltcG9ydChhc3NldHNMaW5rKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYnRmLmZpbmQoJ3NjcmlwdCwgbGluaycpLmFwcGVuZFRvKCdoZWFkJyk7XG4gICAgfVxuXG4gICAgdmFyIGF0ZiA9ICQoJy5hc2tBVEZMaW5rJyk7XG4gICAgYXRmLmF0dHIoXCJocmVmXCIsIFwiI0Fza1wiKTtcbiAgfSk7XG59KSk7XHUwMDNDL3NjcmlwdD5cblxuXHUwMDNDZGl2IGlkPVwiY2YtYXNrLWNlbFwiIGNsYXNzPVwiY2Vsd2lkZ2V0XCI+XG4gIFx1MDAzQ2RpdiBpZD1cIkFza1wiPlx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0NkaXYgaWQ9XCJhc2tfbGF6eV9sb2FkX2RpdlwiPlxuICAgIFx1MDAzQ2hyIGNsYXNzPVwiYnVja2V0RGl2aWRlclwiIHNpemU9XCIxXCIgbm9zaGFkZT1cIm5vc2hhZGVcIj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJjZFF1ZXN0aW9uQW5zd2VyQnVja2V0XCIgc3R5bGU9XCJoZWlnaHQ6IDQzMnB4O1wiPlxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJjZFF1ZXN0aW9uQW5zd2VySGVhZGVyXCI+XG4gICAgICAgICAgICBDdXN0b21lciBRdWVzdGlvbnMgJmFtcDsgQW5zd2Vyc1xuICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJjZFF1ZXN0aW9uTGF6eVNlZUFsbFwiPlxuICAgICAgICAgICAgXHUwMDNDYSBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9hc2svcXVlc3Rpb25zL2FzaW4vQjAxR0tRSTM5Mi9yZWY9Y21fY2RfZHBfbGxhX3FsX2xsLzE0NS04OTc1MzkwLTUwNjQxMTNcIj5TZWUgcXVlc3Rpb25zIGFuZCBhbnN3ZXJzXHUwMDNDL2E+XG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImxvYWRpbmdfaW5kXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmVcIiB3aWR0aD1cIjEwMCVcIj5cbiAgICAgICAgICAgIFx1MDAzQ2ltZyBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvdWkvbG9hZEluZGljYXRvcnMvbG9hZEluZGljYXRvci1sYXJnZS5fQ0IxOTIxOTU0ODBfLmdpZlwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHJvbGU9XCJwcmVzZW50YXRpb25cIiBzdHlsZT1cInBhZGRpbmc6OHB4IDBweCAwcHggMTAwcHhcIj5cbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICBcdTAwM0MvZGl2PlxuICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+KGZ1bmN0aW9uKGYpIHt2YXIgX25wPSh3aW5kb3cuUC5fbmFtZXNwYWNlKFwiQXNrQXVpQXNzZXRzXCIpKTtpZihfbnAuZ3VhcmRGYXRhbCl7X25wLmd1YXJkRmF0YWwoZikoX25wKTt9ZWxzZXtmKF9ucCk7fX0oZnVuY3Rpb24oUCkge1xuICAgIChmdW5jdGlvbihQKXtcbiAgICAgICAgUC53aGVuKFwialF1ZXJ5XCIpLmV4ZWN1dGUoZnVuY3Rpb24oJCl7XG4gICAgICAgICAgIFwidXNlIHN0cmljdFwiO1xuICAgICAgICAgICAgJCgnLmNkUXVlc3Rpb25BbnN3ZXJCdWNrZXQnKS5oZWlnaHQoNDMyKTtcbiAgICAgICAgfSk7XG4gICAgfSkod2luZG93LkFtYXpvblVJUGFnZUpTIHx8IHdpbmRvdy5QKTtcbiAgICB9KSk7XHUwMDNDL3NjcmlwdD5cblx1MDAzQy9kaXY+XG5cblxuXG4gICAgXG5cblxuXG5cblx1MDAzQ3NjcmlwdD5cbiAgKHdpbmRvdy5BbWF6b25VSVBhZ2VKUyA/IEFtYXpvblVJUGFnZUpTIDogUCkubG9hZC5qcygnaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzExb21qSmh3c3FMLmpzP0FVSUNsaWVudHMvRGV0YWlsUGFnZUxhenlMb2FkTGliQXNzZXRzJyk7XG5cdTAwM0Mvc2NyaXB0PlxuXG5cblxuXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L0phdmFTY3JpcHRcIj5cblxuICAgICBQLndoZW4oXCJqUXVlcnlcIiwgXCJsYXp5TG9hZExpYlwiLFwicmVhZHlcIikuZXhlY3V0ZShmdW5jdGlvbiAoJCkge1xuICAgICAgICAgICAgJCgnI2Fza19sYXp5X2xvYWRfZGl2JykubGF6eUxvYWRDb250ZW50KHtcbiAgICAgICAgICAgICB0aHJlc2hvbGQgOiA4MDAsXG4gICAgICAgICAgICAgdXJsOiBcIi9ncC9hc2std2lkZ2V0L2Fza1dpZGdldC5odG1sP2FzaW49QjAxR0tRSTM5MiZhc2tFcnJvcj0mYXNrTWVzc2FnZT0md2RnPWpld2VscnlfZGlzcGxheV9vbl93ZWJzaXRlJmFza0xhbmd1YWdlPSZyZXF1ZXN0SUQ9NDc1RTM0SlFWOUZOUEhKOVNTVERcIixcbiAgICAgICAgICAgICBtZXRyaWNzIDogdHJ1ZSxcbiAgICAgICAgICAgICBuYW1lIDogJ2Fza19idGYnLFxuICAgICAgICAgICAgIGNhY2hlIDogZmFsc2VcbiAgICAgICAgICAgICB9KTtcbiAgICAgfSk7XG5cdTAwM0Mvc2NyaXB0PlxuXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cdTAwM0NhIGlkPVwiY3VzdG9tZXJSZXZpZXdzXCIgYXJpYS1sYWJlbD1cIlRvcCBSZXZpZXdzXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgaHJlZj1cIiNcIj5cdTAwM0MvYT5cdTAwM0NociBjbGFzcz1cImEtc3BhY2luZy1sYXJnZSBhLWRpdmlkZXItbm9ybWFsXCI+XHUwMDNDc3BhbiBjbGFzcz1cImNyLXdpZGdldC1QYWdlU3RhdGVcIj5cbiAgXHUwMDNDc3BhbiBpZD1cImNyLXN0YXRlLW9iamVjdFwiIGRhdGEtc3RhdGU9XCJ7JnF1b3Q7YXNpbiZxdW90OzomcXVvdDtCMDFHS1FJMzkyJnF1b3Q7LCZxdW90O2N1c3RvbWVySWQmcXVvdDs6JnF1b3Q7MCZxdW90OywmcXVvdDtkZXZpY2VUeXBlJnF1b3Q7OiZxdW90O2Rlc2t0b3AmcXVvdDssJnF1b3Q7cmV2aWV3Q29tbWVudHNBamF4VXJsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDtyZXZpZXdDb21tZW50U3VibWlzc2lvbkFqYXhVcmwmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O2FwcHJvdmVkQXV0aG9yQWpheFVybCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7cmV2aWV3c0FqYXhVcmwmcXVvdDs6JnF1b3Q7L2h6L3Jldmlld3MtcmVuZGVyL2FqYXgvbWVkbGV5LWZpbHRlcmVkLXJldmlld3MvZ2V0LyZxdW90OywmcXVvdDttZWRsZXlSZXZpZXdzQWpheFVybCZxdW90OzomcXVvdDsvaHovcmV2aWV3cy1yZW5kZXIvYWpheC9tZWRsZXktcmV2aWV3cy9nZXQvJnF1b3Q7LCZxdW90O3Jldmlld2VyVHlwZSZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7Zm9ybWF0VHlwZSZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7ZmlsdGVyQnlLZXl3b3JkJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDtmaWx0ZXJCeUxhbmd1YWdlJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDtmaWx0ZXJCeVN0YXImcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O3NpZ25pblVybCZxdW90OzomcXVvdDtodHRwczovL3d3dy5hbWF6b24uY29tL2FwL3NpZ25pbj9vcGVuaWQucmV0dXJuX3RvXFx1MDAzZGh0dHBzJTNBJTJGJTJGd3d3LmFtYXpvbi5jb20lMkZLZW1zdG9uZS1FbGVnYW50LU11bHRpbGF5ZXItRWFycmluZ3MtQWNjZXNzb3J5JTJGcHJvZHVjdC1yZXZpZXdzJTJGQjAxR0tRSTM5MiUzRmllJTNEVVRGOFxcdTAwMjZvcGVuaWQuaWRlbnRpdHlcXHUwMDNkaHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wJTJGaWRlbnRpZmllcl9zZWxlY3RcXHUwMDI2b3BlbmlkLmNsYWltZWRfaWRcXHUwMDNkaHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wJTJGaWRlbnRpZmllcl9zZWxlY3RcXHUwMDI2b3BlbmlkLmFzc29jX2hhbmRsZVxcdTAwM2R1c2ZsZXhcXHUwMDI2b3BlbmlkLm1vZGVcXHUwMDNkY2hlY2tpZF9zZXR1cFxcdTAwMjZvcGVuaWQubnNcXHUwMDNkaHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wJnF1b3Q7LCZxdW90O3JlZnRhZ1RyaWdnZXJVcmwmcXVvdDs6JnF1b3Q7L2h6L3Jldmlld3MtcmVuZGVyL2FqYXgvcmVmdGFnLXRyaWdnZXImcXVvdDssJnF1b3Q7bW9iaWxlSW1hZ2VHYWxsZXJ5VXJsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDtnZXRJbWFnZXNBamF4VXJsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDtwcm9kdWN0SW5mb1VybCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7ZGlzYWJsZVNjcm9sbCZxdW90OzpmYWxzZSwmcXVvdDtvbkxvYWRTaG93SGlkZUVsZW1lbnRzJnF1b3Q7OiZxdW90OyNjbS1jci1kcC1yZXZpZXdzLWxvYWRpbmctd3JhcHBlciwuY3ItcmV2aWV3cy1sb2FkaW5nJnF1b3Q7fVwiPlx1MDAzQy9zcGFuPlxuXHUwMDNDL3NwYW4+XG5cdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cIlwiIHZhbHVlPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvdmFwL3ZpZGVvL2FpcnkyL3Byb2QvMi4wLjE0NjAuMC9qcy9haXJ5LnNraW4uX0NCNTEzMDY2NTg5Xy5qc1wiIGlkPVwiY3ItYWlyeS1qcy1zb3VyY2UtdXJsXCI+XHUwMDNDaW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJcIiB2YWx1ZT1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL3ZhcC92aWRlby9haXJ5Mi9wcm9kLzIuMC4xNDYwLjAvY3NzL2JlYWNvbi5fQ0I1MTMwNjY1ODlfLmNzc1wiIGlkPVwiY3ItYWlyeS1jc3Mtc291cmNlLXVybFwiPlx1MDAzQ2lucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwiXCIgdmFsdWU9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS92YXAvdmlkZW8vYWlyeTIvcHJvZC8yLjAuMTQ2MC4wL2ZsYXNoL0FpcnlCYXNpY1JlbmRlcmVyLl9DQjUxMzA2NjU4OV8uc3dmXCIgaWQ9XCJjci12aWRlby1zd2YtdXJsXCI+XHUwMDNDbGluayByZWw9XCJzdHlsZXNoZWV0XCIgaHJlZj1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS8wMUxBdjhJMUF4TC5fUkN8MDFNUHlrVXNyQ0wuY3NzLDAxTEtzR2ZwY2xMLmNzcywwMVBUa3A5Sk9DTC5jc3MsMDFjZFhhNW5Tb0wuY3NzXy5jc3M/QVVJQ2xpZW50cy9EZXNrdG9wTWVkbGV5RmlsdGVyaW5nTWV0YUFzc2V0XCI+XG5cdTAwM0NzY3JpcHQ+XG4gICh3aW5kb3cuQW1hem9uVUlQYWdlSlMgPyBBbWF6b25VSVBhZ2VKUyA6IFApLmxvYWQuanMoJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS8zMWxLaUpybGhaTC5fUkN8MTF0WGU5OXlXQkwuanMsMDEtNE1ic0hNV0wuanMsMTFnRmlZZTdLYkwuanMsMjE3UG5ISXlseEwuanNfLmpzP0FVSUNsaWVudHMvRGVza3RvcE1lZGxleUZpbHRlcmluZ01ldGFBc3NldCcpO1xuXHUwMDNDL3NjcmlwdD5cblx1MDAzQ2RpdiBpZD1cInJldmlld3NNZWRsZXlcIiBkYXRhLWhvb2s9XCJyZXZpZXdzLW1lZGxleS13aWRnZXRcIiBjbGFzcz1cImEtZml4ZWQtbGVmdC1ncmlkIGEtc3BhY2luZy1leHRyYS1sYXJnZVwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtbGVmdC1ncmlkLWlubmVyXCIgc3R5bGU9XCJwYWRkaW5nLWxlZnQ6MzAwcHhcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWZpeGVkLWxlZnQtZ3JpZC1jb2wgYS1jb2wtbGVmdFwiIHN0eWxlPVwid2lkdGg6MzAwcHg7bWFyZ2luLWxlZnQ6LTMwMHB4O2Zsb2F0OmxlZnQ7XCI+XHUwMDNDc3BhbiBjbGFzcz1cImNyLXdpZGdldC1TZWVBbGxSZXZpZXdzXCIgZGF0YS1ob29rPVwiY3Itd2lkZ2V0LVNlZUFsbFJldmlld3NcIj5cbiAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XHUwMDNDaDI+Q3VzdG9tZXIgcmV2aWV3c1x1MDAzQy9oMj5cdTAwM0MvZGl2Plx1MDAzQy9zcGFuPlxuICBcdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1taW5pIGNyLXdpZGdldC1BQ1JcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWZpeGVkLWxlZnQtZ3JpZCBBdmVyYWdlQ3VzdG9tZXJSZXZpZXdzIGEtc3BhY2luZy1zbWFsbFwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtbGVmdC1ncmlkLWlubmVyXCIgc3R5bGU9XCJwYWRkaW5nLWxlZnQ6MTA1cHhcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWZpeGVkLWxlZnQtZ3JpZC1jb2wgYS1jb2wtbGVmdFwiIHN0eWxlPVwid2lkdGg6MTA1cHg7bWFyZ2luLWxlZnQ6LTEwNXB4O2Zsb2F0OmxlZnQ7XCI+XHUwMDNDaSBkYXRhLWhvb2s9XCJhdmVyYWdlLXN0YXItcmF0aW5nXCIgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXItbWVkaXVtIGEtc3Rhci1tZWRpdW0tNC01IGF2ZXJhZ2VTdGFyUmF0aW5nXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj40LjQgb3V0IG9mIDUgc3RhcnNcdTAwM0Mvc3Bhbj5cdTAwM0MvaT5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtbGVmdC1ncmlkLWNvbCBhb2stYWxpZ24tY2VudGVyIGEtY29sLXJpZ2h0XCIgc3R5bGU9XCJwYWRkaW5nLWxlZnQ6MCU7ZmxvYXQ6bGVmdDtcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLW5vd3JhcFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLXBvcG92ZXJcIiBkYXRhLWEtcG9wb3Zlcj1cInsmcXVvdDtpbmxpbmVDb250ZW50JnF1b3Q7OiZxdW90O0FtYXpvbiBjYWxjdWxhdGVzIGEgcHJvZHVjdFxcdTIwMTlzIHN0YXIgcmF0aW5ncyBiYXNlZCBvbiBhIG1hY2hpbmUgbGVhcm5lZCBtb2RlbCBpbnN0ZWFkIG9mIGEgcmF3IGRhdGEgYXZlcmFnZS4gVGhlIG1vZGVsIHRha2VzIGludG8gYWNjb3VudCBmYWN0b3JzIGluY2x1ZGluZyB0aGUgYWdlIG9mIGEgcmF0aW5nLCB3aGV0aGVyIHRoZSByYXRpbmdzIGFyZSBmcm9tIHZlcmlmaWVkIHB1cmNoYXNlcnMsIGFuZCBmYWN0b3JzIHRoYXQgZXN0YWJsaXNoIHJldmlld2VyIHRydXN0d29ydGhpbmVzcy4mcXVvdDt9XCI+XHUwMDNDYSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgY2xhc3M9XCJhLXBvcG92ZXItdHJpZ2dlciBhLWRlY2xhcmF0aXZlXCI+XHUwMDNDc3BhbiBkYXRhLWhvb2s9XCJyYXRpbmctb3V0LW9mLXRleHRcIiBjbGFzcz1cImEtc2l6ZS1tZWRpdW0gYS1jb2xvci1iYXNlXCI+NC40IG91dCBvZiA1XHUwMDNDL3NwYW4+XHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcG9wb3ZlclwiPlx1MDAzQy9pPlx1MDAzQy9hPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGRhdGEtaG9vaz1cInRvdGFsLXJldmlldy1jb3VudFwiIGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW1lZGl1bSBhdmVyYWdlU3RhclJhdGluZ051bWVyaWNhbFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXNlY29uZGFyeVwiPlx1MDAzQyEtLVRPRE86IFJlcGxhY2UgdGhpcyBzdHJpbmcgd2l0aCBhcnAteC1yYXRpbmdzIDUvMjIvMTkgKFNob3BwZXJFeHAtNTE0MyktLT5cbiAgICAgICAgICAgICAgICAxMjEgIGN1c3RvbWVyIHJhdGluZ3NcdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDc3BhbiBjbGFzcz1cImNyLXdpZGdldC1IaXN0b2dyYW1cIj5cbiAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtbGVmdC1ncmlkIGEtc3BhY2luZy1ub25lXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1maXhlZC1sZWZ0LWdyaWQtaW5uZXJcIiBzdHlsZT1cInBhZGRpbmctbGVmdDoyODBweFwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtbGVmdC1ncmlkLWNvbCBhLWNvbC1sZWZ0XCIgc3R5bGU9XCJ3aWR0aDoyODBweDttYXJnaW4tbGVmdDotMjgwcHg7ZmxvYXQ6bGVmdDtcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwicmV2aWV3czpmaWx0ZXItYWN0aW9uOnB1c2gtc3RhdGVcIiBkYXRhLXJldmlld3M6ZmlsdGVyLWFjdGlvbjpwdXNoLXN0YXRlPVwieyZxdW90O3Njcm9sbFRvU2VsZWN0b3ImcXVvdDs6JnF1b3Q7I3Jldmlld3MtZmlsdGVyLWluZm8mcXVvdDssJnF1b3Q7YWxsb3dMaW5rRGVmYXVsdCZxdW90OzomcXVvdDsxJnF1b3Q7fVwiPlx1MDAzQ3RhYmxlIGlkPVwiaGlzdG9ncmFtVGFibGVcIiBjbGFzcz1cImEtbm9ybWFsIGEtc3BhY2luZy1ub25lXCIgcm9sZT1cInByZXNlbnRhdGlvblwiPlxuXG5cblxuXG5cblxuXG5cblx1MDAzQy90YWJsZT5cdTAwM0N0YWJsZSBpZD1cImhpc3RvZ3JhbVRhYmxlXCIgY2xhc3M9XCJhLW5vcm1hbCBhLWFsaWduLW1pZGRsZSBhLXNwYWNpbmctYmFzZVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuXG4gIFxuXG4gIFxuXG4gIFxuXG4gIFxuXG4gIFxuXG5cblxuICBcblxuICAgIFxuICAgICAgXG4gICAgICBcblxuICAgICAgICBcbiAgICAgICAgXHUwMDNDdGJvZHk+XHUwMDNDdHIgZGF0YS1yZWZ0YWc9XCJcIiBkYXRhLXJldmlld3Mtc3RhdGUtcGFyYW09XCJ7JnF1b3Q7ZmlsdGVyQnlTdGFyJnF1b3Q7OiZxdW90O2ZpdmVfc3RhciZxdW90OywgJnF1b3Q7cGFnZU51bWJlciZxdW90OzomcXVvdDsxJnF1b3Q7fVwiIGNsYXNzPVwiYS1oaXN0b2dyYW0tcm93XCI+XG5cbiAgICAgICAgICBcdTAwM0N0ZCBjbGFzcz1cImFvay1ub3dyYXBcIj5cblxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlXCI+XG4gICAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsIDVzdGFyXCIgdGl0bGU9XCI1IHN0YXJzIHJlcHJlc2VudCA3NiUgb2YgcmF0aW5nXCIgaHJlZj1cIi9wcm9kdWN0LXJldmlld3MvQjAxR0tRSTM5Mi9yZWY9YWNyX2RwX2hpc3RfNT9pZT1VVEY4JmFtcDtmaWx0ZXJCeVN0YXI9Zml2ZV9zdGFyJmFtcDtyZXZpZXdlclR5cGU9YWxsX3Jldmlld3MjcmV2aWV3cy1maWx0ZXItYmFyXCI+XG4gICAgICAgICAgICAgICAgNSBzdGFyXG4gICAgICAgICAgICAgIFx1MDAzQy9hPlxuICAgICAgICAgICAgXHUwMDNDL3NwYW4+XG5cbiAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxldHRlci1zcGFjZVwiPlx1MDAzQy9zcGFuPlxuICAgICAgICAgIFx1MDAzQy90ZD5cblxuICAgICAgICAgIFx1MDAzQ3RkIGNsYXNzPVwiYS1zcGFuMTBcIj5cbiAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGl0bGU9XCI1IHN0YXJzIHJlcHJlc2VudCA3NiUgb2YgcmF0aW5nXCIgaHJlZj1cIi9wcm9kdWN0LXJldmlld3MvQjAxR0tRSTM5Mi9yZWY9YWNyX2RwX2hpc3RfNT9pZT1VVEY4JmFtcDtmaWx0ZXJCeVN0YXI9Zml2ZV9zdGFyJmFtcDtyZXZpZXdlclR5cGU9YWxsX3Jldmlld3MjcmV2aWV3cy1maWx0ZXItYmFyXCI+XG4gICAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtbWV0ZXJcIiBhcmlhLWxhYmVsPVwiNzYlXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1tZXRlci1iYXIgYS1tZXRlci11bmZpbGxlZFwiIHN0eWxlPVwid2lkdGg6IDc2JTtcIj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XG4gICAgICAgICAgICBcdTAwM0MvYT5cbiAgICAgICAgICBcdTAwM0MvdGQ+XG5cbiAgICAgICAgICBcdTAwM0N0ZCBjbGFzcz1cImEtdGV4dC1yaWdodCBhLW5vd3JhcFwiPlxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtbGV0dGVyLXNwYWNlXCI+XHUwMDNDL3NwYW4+XG4gICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2VcIj5cbiAgICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiB0aXRsZT1cIjUgc3RhcnMgcmVwcmVzZW50IDc2JSBvZiByYXRpbmdcIiBocmVmPVwiL3Byb2R1Y3QtcmV2aWV3cy9CMDFHS1FJMzkyL3JlZj1hY3JfZHBfaGlzdF81P2llPVVURjgmYW1wO2ZpbHRlckJ5U3Rhcj1maXZlX3N0YXImYW1wO3Jldmlld2VyVHlwZT1hbGxfcmV2aWV3cyNyZXZpZXdzLWZpbHRlci1iYXJcIj5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIDc2JVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcdTAwM0MvYT5cbiAgICAgICAgICAgIFx1MDAzQy9zcGFuPlxuICAgICAgICAgIFx1MDAzQy90ZD5cbiAgICAgICAgXHUwMDNDL3RyPlxuXG4gICAgICBcbiAgICBcblxuICBcblxuICBcblxuXG5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcblxuICBcblxuICBcblxuICBcblxuICBcblxuICBcblxuXG5cbiAgXG5cbiAgICBcbiAgICAgIFxuICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFx1MDAzQ3RyIGRhdGEtcmVmdGFnPVwiXCIgZGF0YS1yZXZpZXdzLXN0YXRlLXBhcmFtPVwieyZxdW90O2ZpbHRlckJ5U3RhciZxdW90OzomcXVvdDtmb3VyX3N0YXImcXVvdDssICZxdW90O3BhZ2VOdW1iZXImcXVvdDs6JnF1b3Q7MSZxdW90O31cIiBjbGFzcz1cImEtaGlzdG9ncmFtLXJvd1wiPlxuXG4gICAgICAgICAgXHUwMDNDdGQgY2xhc3M9XCJhb2stbm93cmFwXCI+XG5cbiAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtYmFzZVwiPlxuICAgICAgICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCA0c3RhclwiIHRpdGxlPVwiNCBzdGFycyByZXByZXNlbnQgNyUgb2YgcmF0aW5nXCIgaHJlZj1cIi9wcm9kdWN0LXJldmlld3MvQjAxR0tRSTM5Mi9yZWY9YWNyX2RwX2hpc3RfND9pZT1VVEY4JmFtcDtmaWx0ZXJCeVN0YXI9Zm91cl9zdGFyJmFtcDtyZXZpZXdlclR5cGU9YWxsX3Jldmlld3MjcmV2aWV3cy1maWx0ZXItYmFyXCI+XG4gICAgICAgICAgICAgICAgNCBzdGFyXG4gICAgICAgICAgICAgIFx1MDAzQy9hPlxuICAgICAgICAgICAgXHUwMDNDL3NwYW4+XG5cbiAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxldHRlci1zcGFjZVwiPlx1MDAzQy9zcGFuPlxuICAgICAgICAgIFx1MDAzQy90ZD5cblxuICAgICAgICAgIFx1MDAzQ3RkIGNsYXNzPVwiYS1zcGFuMTBcIj5cbiAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGl0bGU9XCI0IHN0YXJzIHJlcHJlc2VudCA3JSBvZiByYXRpbmdcIiBocmVmPVwiL3Byb2R1Y3QtcmV2aWV3cy9CMDFHS1FJMzkyL3JlZj1hY3JfZHBfaGlzdF80P2llPVVURjgmYW1wO2ZpbHRlckJ5U3Rhcj1mb3VyX3N0YXImYW1wO3Jldmlld2VyVHlwZT1hbGxfcmV2aWV3cyNyZXZpZXdzLWZpbHRlci1iYXJcIj5cbiAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1tZXRlclwiIGFyaWEtbGFiZWw9XCI3JVwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtbWV0ZXItYmFyIGEtbWV0ZXItdW5maWxsZWRcIiBzdHlsZT1cIndpZHRoOiA3JTtcIj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XG4gICAgICAgICAgICBcdTAwM0MvYT5cbiAgICAgICAgICBcdTAwM0MvdGQ+XG5cbiAgICAgICAgICBcdTAwM0N0ZCBjbGFzcz1cImEtdGV4dC1yaWdodCBhLW5vd3JhcFwiPlxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtbGV0dGVyLXNwYWNlXCI+XHUwMDNDL3NwYW4+XG4gICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2VcIj5cbiAgICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiB0aXRsZT1cIjQgc3RhcnMgcmVwcmVzZW50IDclIG9mIHJhdGluZ1wiIGhyZWY9XCIvcHJvZHVjdC1yZXZpZXdzL0IwMUdLUUkzOTIvcmVmPWFjcl9kcF9oaXN0XzQ/aWU9VVRGOCZhbXA7ZmlsdGVyQnlTdGFyPWZvdXJfc3RhciZhbXA7cmV2aWV3ZXJUeXBlPWFsbF9yZXZpZXdzI3Jldmlld3MtZmlsdGVyLWJhclwiPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgNyVcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgXHUwMDNDL2E+XG4gICAgICAgICAgICBcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICBcdTAwM0MvdGQ+XG4gICAgICAgIFx1MDAzQy90cj5cblxuICAgICAgXG4gICAgXG5cbiAgXG5cbiAgXG5cblxuXG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG5cbiAgXG5cbiAgXG5cbiAgXG5cbiAgXG5cbiAgXG5cblxuXG4gIFxuXG4gICAgXG4gICAgICBcbiAgICAgIFxuXG4gICAgICAgIFxuICAgICAgICBcdTAwM0N0ciBkYXRhLXJlZnRhZz1cIlwiIGRhdGEtcmV2aWV3cy1zdGF0ZS1wYXJhbT1cInsmcXVvdDtmaWx0ZXJCeVN0YXImcXVvdDs6JnF1b3Q7dGhyZWVfc3RhciZxdW90OywgJnF1b3Q7cGFnZU51bWJlciZxdW90OzomcXVvdDsxJnF1b3Q7fVwiIGNsYXNzPVwiYS1oaXN0b2dyYW0tcm93XCI+XG5cbiAgICAgICAgICBcdTAwM0N0ZCBjbGFzcz1cImFvay1ub3dyYXBcIj5cblxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlXCI+XG4gICAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsIDNzdGFyXCIgdGl0bGU9XCIzIHN0YXJzIHJlcHJlc2VudCAzJSBvZiByYXRpbmdcIiBocmVmPVwiL3Byb2R1Y3QtcmV2aWV3cy9CMDFHS1FJMzkyL3JlZj1hY3JfZHBfaGlzdF8zP2llPVVURjgmYW1wO2ZpbHRlckJ5U3Rhcj10aHJlZV9zdGFyJmFtcDtyZXZpZXdlclR5cGU9YWxsX3Jldmlld3MjcmV2aWV3cy1maWx0ZXItYmFyXCI+XG4gICAgICAgICAgICAgICAgMyBzdGFyXG4gICAgICAgICAgICAgIFx1MDAzQy9hPlxuICAgICAgICAgICAgXHUwMDNDL3NwYW4+XG5cbiAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxldHRlci1zcGFjZVwiPlx1MDAzQy9zcGFuPlxuICAgICAgICAgIFx1MDAzQy90ZD5cblxuICAgICAgICAgIFx1MDAzQ3RkIGNsYXNzPVwiYS1zcGFuMTBcIj5cbiAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGl0bGU9XCIzIHN0YXJzIHJlcHJlc2VudCAzJSBvZiByYXRpbmdcIiBocmVmPVwiL3Byb2R1Y3QtcmV2aWV3cy9CMDFHS1FJMzkyL3JlZj1hY3JfZHBfaGlzdF8zP2llPVVURjgmYW1wO2ZpbHRlckJ5U3Rhcj10aHJlZV9zdGFyJmFtcDtyZXZpZXdlclR5cGU9YWxsX3Jldmlld3MjcmV2aWV3cy1maWx0ZXItYmFyXCI+XG4gICAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtbWV0ZXJcIiBhcmlhLWxhYmVsPVwiMyVcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLW1ldGVyLWJhciBhLW1ldGVyLXVuZmlsbGVkXCIgc3R5bGU9XCJ3aWR0aDogMyU7XCI+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2PlxuICAgICAgICAgICAgXHUwMDNDL2E+XG4gICAgICAgICAgXHUwMDNDL3RkPlxuXG4gICAgICAgICAgXHUwMDNDdGQgY2xhc3M9XCJhLXRleHQtcmlnaHQgYS1ub3dyYXBcIj5cbiAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxldHRlci1zcGFjZVwiPlx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlXCI+XG4gICAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGl0bGU9XCIzIHN0YXJzIHJlcHJlc2VudCAzJSBvZiByYXRpbmdcIiBocmVmPVwiL3Byb2R1Y3QtcmV2aWV3cy9CMDFHS1FJMzkyL3JlZj1hY3JfZHBfaGlzdF8zP2llPVVURjgmYW1wO2ZpbHRlckJ5U3Rhcj10aHJlZV9zdGFyJmFtcDtyZXZpZXdlclR5cGU9YWxsX3Jldmlld3MjcmV2aWV3cy1maWx0ZXItYmFyXCI+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAzJVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcdTAwM0MvYT5cbiAgICAgICAgICAgIFx1MDAzQy9zcGFuPlxuICAgICAgICAgIFx1MDAzQy90ZD5cbiAgICAgICAgXHUwMDNDL3RyPlxuXG4gICAgICBcbiAgICBcblxuICBcblxuICBcblxuXG5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcblxuICBcblxuICBcblxuICBcblxuICBcblxuICBcblxuXG5cbiAgXG5cbiAgICBcbiAgICAgIFxuICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFx1MDAzQ3RyIGRhdGEtcmVmdGFnPVwiXCIgZGF0YS1yZXZpZXdzLXN0YXRlLXBhcmFtPVwieyZxdW90O2ZpbHRlckJ5U3RhciZxdW90OzomcXVvdDt0d29fc3RhciZxdW90OywgJnF1b3Q7cGFnZU51bWJlciZxdW90OzomcXVvdDsxJnF1b3Q7fVwiIGNsYXNzPVwiYS1oaXN0b2dyYW0tcm93XCI+XG5cbiAgICAgICAgICBcdTAwM0N0ZCBjbGFzcz1cImFvay1ub3dyYXBcIj5cblxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlXCI+XG4gICAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsIDJzdGFyXCIgdGl0bGU9XCIyIHN0YXJzIHJlcHJlc2VudCA4JSBvZiByYXRpbmdcIiBocmVmPVwiL3Byb2R1Y3QtcmV2aWV3cy9CMDFHS1FJMzkyL3JlZj1hY3JfZHBfaGlzdF8yP2llPVVURjgmYW1wO2ZpbHRlckJ5U3Rhcj10d29fc3RhciZhbXA7cmV2aWV3ZXJUeXBlPWFsbF9yZXZpZXdzI3Jldmlld3MtZmlsdGVyLWJhclwiPlxuICAgICAgICAgICAgICAgIDIgc3RhclxuICAgICAgICAgICAgICBcdTAwM0MvYT5cbiAgICAgICAgICAgIFx1MDAzQy9zcGFuPlxuXG4gICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1sZXR0ZXItc3BhY2VcIj5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICBcdTAwM0MvdGQ+XG5cbiAgICAgICAgICBcdTAwM0N0ZCBjbGFzcz1cImEtc3BhbjEwXCI+XG4gICAgICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIHRpdGxlPVwiMiBzdGFycyByZXByZXNlbnQgOCUgb2YgcmF0aW5nXCIgaHJlZj1cIi9wcm9kdWN0LXJldmlld3MvQjAxR0tRSTM5Mi9yZWY9YWNyX2RwX2hpc3RfMj9pZT1VVEY4JmFtcDtmaWx0ZXJCeVN0YXI9dHdvX3N0YXImYW1wO3Jldmlld2VyVHlwZT1hbGxfcmV2aWV3cyNyZXZpZXdzLWZpbHRlci1iYXJcIj5cbiAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1tZXRlclwiIGFyaWEtbGFiZWw9XCI4JVwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtbWV0ZXItYmFyIGEtbWV0ZXItdW5maWxsZWRcIiBzdHlsZT1cIndpZHRoOiA4JTtcIj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XG4gICAgICAgICAgICBcdTAwM0MvYT5cbiAgICAgICAgICBcdTAwM0MvdGQ+XG5cbiAgICAgICAgICBcdTAwM0N0ZCBjbGFzcz1cImEtdGV4dC1yaWdodCBhLW5vd3JhcFwiPlxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtbGV0dGVyLXNwYWNlXCI+XHUwMDNDL3NwYW4+XG4gICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2VcIj5cbiAgICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiB0aXRsZT1cIjIgc3RhcnMgcmVwcmVzZW50IDglIG9mIHJhdGluZ1wiIGhyZWY9XCIvcHJvZHVjdC1yZXZpZXdzL0IwMUdLUUkzOTIvcmVmPWFjcl9kcF9oaXN0XzI/aWU9VVRGOCZhbXA7ZmlsdGVyQnlTdGFyPXR3b19zdGFyJmFtcDtyZXZpZXdlclR5cGU9YWxsX3Jldmlld3MjcmV2aWV3cy1maWx0ZXItYmFyXCI+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICA4JVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcdTAwM0MvYT5cbiAgICAgICAgICAgIFx1MDAzQy9zcGFuPlxuICAgICAgICAgIFx1MDAzQy90ZD5cbiAgICAgICAgXHUwMDNDL3RyPlxuXG4gICAgICBcbiAgICBcblxuICBcblxuICBcblxuXG5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcblxuICBcblxuICBcblxuICBcblxuICBcblxuICBcblxuXG5cbiAgXG5cbiAgICBcbiAgICAgIFxuICAgICAgXG5cbiAgICAgICAgXG4gICAgICAgIFx1MDAzQ3RyIGRhdGEtcmVmdGFnPVwiXCIgZGF0YS1yZXZpZXdzLXN0YXRlLXBhcmFtPVwieyZxdW90O2ZpbHRlckJ5U3RhciZxdW90OzomcXVvdDtvbmVfc3RhciZxdW90OywgJnF1b3Q7cGFnZU51bWJlciZxdW90OzomcXVvdDsxJnF1b3Q7fVwiIGNsYXNzPVwiYS1oaXN0b2dyYW0tcm93XCI+XG5cbiAgICAgICAgICBcdTAwM0N0ZCBjbGFzcz1cImFvay1ub3dyYXBcIj5cblxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlXCI+XG4gICAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsIDFzdGFyXCIgdGl0bGU9XCIxIHN0YXJzIHJlcHJlc2VudCA2JSBvZiByYXRpbmdcIiBocmVmPVwiL3Byb2R1Y3QtcmV2aWV3cy9CMDFHS1FJMzkyL3JlZj1hY3JfZHBfaGlzdF8xP2llPVVURjgmYW1wO2ZpbHRlckJ5U3Rhcj1vbmVfc3RhciZhbXA7cmV2aWV3ZXJUeXBlPWFsbF9yZXZpZXdzI3Jldmlld3MtZmlsdGVyLWJhclwiPlxuICAgICAgICAgICAgICAgIDEgc3RhclxuICAgICAgICAgICAgICBcdTAwM0MvYT5cbiAgICAgICAgICAgIFx1MDAzQy9zcGFuPlxuXG4gICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1sZXR0ZXItc3BhY2VcIj5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICBcdTAwM0MvdGQ+XG5cbiAgICAgICAgICBcdTAwM0N0ZCBjbGFzcz1cImEtc3BhbjEwXCI+XG4gICAgICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIHRpdGxlPVwiMSBzdGFycyByZXByZXNlbnQgNiUgb2YgcmF0aW5nXCIgaHJlZj1cIi9wcm9kdWN0LXJldmlld3MvQjAxR0tRSTM5Mi9yZWY9YWNyX2RwX2hpc3RfMT9pZT1VVEY4JmFtcDtmaWx0ZXJCeVN0YXI9b25lX3N0YXImYW1wO3Jldmlld2VyVHlwZT1hbGxfcmV2aWV3cyNyZXZpZXdzLWZpbHRlci1iYXJcIj5cbiAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1tZXRlclwiIGFyaWEtbGFiZWw9XCI2JVwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtbWV0ZXItYmFyIGEtbWV0ZXItdW5maWxsZWRcIiBzdHlsZT1cIndpZHRoOiA2JTtcIj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XG4gICAgICAgICAgICBcdTAwM0MvYT5cbiAgICAgICAgICBcdTAwM0MvdGQ+XG5cbiAgICAgICAgICBcdTAwM0N0ZCBjbGFzcz1cImEtdGV4dC1yaWdodCBhLW5vd3JhcFwiPlxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtbGV0dGVyLXNwYWNlXCI+XHUwMDNDL3NwYW4+XG4gICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2VcIj5cbiAgICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiB0aXRsZT1cIjEgc3RhcnMgcmVwcmVzZW50IDYlIG9mIHJhdGluZ1wiIGhyZWY9XCIvcHJvZHVjdC1yZXZpZXdzL0IwMUdLUUkzOTIvcmVmPWFjcl9kcF9oaXN0XzE/aWU9VVRGOCZhbXA7ZmlsdGVyQnlTdGFyPW9uZV9zdGFyJmFtcDtyZXZpZXdlclR5cGU9YWxsX3Jldmlld3MjcmV2aWV3cy1maWx0ZXItYmFyXCI+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICA2JVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcdTAwM0MvYT5cbiAgICAgICAgICAgIFx1MDAzQy9zcGFuPlxuICAgICAgICAgIFx1MDAzQy90ZD5cbiAgICAgICAgXHUwMDNDL3RyPlxuXG4gICAgICBcbiAgICBcblxuICBcblxuICBcblxuXG5cblx1MDAzQy90Ym9keT5cdTAwM0MvdGFibGU+XG5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0Mvc3Bhbj5cbiAgICBcdTAwM0NociBjbGFzcz1cImEtc3BhY2luZy1sYXJnZSBhLXNwYWNpbmctdG9wLWxhcmdlIGEtZGl2aWRlci1ub3JtYWxcIj5cdTAwM0NzcGFuIGNsYXNzPVwiY3Itd2lkZ2V0LVN1bW1hcnlBdHRyaWJ1dGVcIiBkYXRhLWhvb2s9XCJjci13aWRnZXQtU3VtbWFyeUF0dHJpYnV0ZVwiPlxuICAgICAgXHUwMDNDZGl2IGlkPVwiY3ItZHAtc3VtbWFyaXphdGlvbi1hdHRyaWJ1dGVzXCIgZGF0YS1ob29rPVwic3VtbWFyaXphdGlvbi1hdHRyaWJ1dGVzLXdpZGdldFwiIGNsYXNzPVwicmV2aWV3XCI+XG5cbiAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW1lZGl1bVwiPlx1MDAzQ3NwYW4gZGF0YS1ob29rPVwic3VtbWFyaXphdGlvbi1hdHRyaWJ1dGVzLXRpdGxlXCIgY2xhc3M9XCJhLXNpemUtbWVkaXVtIGEtdGV4dC1ib2xkXCI+QnkgZmVhdHVyZVx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGRhdGEtaG9vaz1cImNyLXN1bW1hcml6YXRpb24tYXR0cmlidXRlcy1saXN0XCIgaWQ9XCJjci1zdW1tYXJpemF0aW9uLWF0dHJpYnV0ZXMtbGlzdFwiIGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW5vbmUgY2Vsd2lkZ2V0IGNyLWFzaW4tQjAxR0tRSTM5MlwiPlx1MDAzQ2RpdiBpZD1cImNyLXN1bW1hcml6YXRpb24tYXR0cmlidXRlLWF0dHItbGlnaHQtd2VpZ2h0XCIgZGF0YS1ob29rPVwiY3Itc3VtbWFyaXphdGlvbi1hdHRyaWJ1dGVcIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtcmlnaHQtZ3JpZCBhLXNwYWNpbmctYmFzZVwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtcmlnaHQtZ3JpZC1pbm5lciBhLWdyaWQtdmVydGljYWwtYWxpZ24gYS1ncmlkLWNlbnRlclwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtcmlnaHQtZ3JpZC1jb2wgYS1jb2wtbGVmdFwiIHN0eWxlPVwicGFkZGluZy1yaWdodDozJTtmbG9hdDpsZWZ0O1wiPlx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiPkxpZ2h0IHdlaWdodFx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLXRleHQtcmlnaHQgYS1maXhlZC1yaWdodC1ncmlkLWNvbCBhLWNvbC1yaWdodFwiIHN0eWxlPVwid2lkdGg6MTIwcHg7bWFyZ2luLXJpZ2h0Oi0xMjBweDtmbG9hdDpsZWZ0O1wiPlx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXItc21hbGwgYS1zdGFyLXNtYWxsLTVcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPjQuOFx1MDAzQy9zcGFuPlx1MDAzQy9pPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxldHRlci1zcGFjZVwiPlx1MDAzQy9zcGFuPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXRlcnRpYXJ5XCI+NC44XHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgaWQ9XCJjci1zdW1tYXJpemF0aW9uLWF0dHJpYnV0ZS1hdHRyLWdpZnRcIiBkYXRhLWhvb2s9XCJjci1zdW1tYXJpemF0aW9uLWF0dHJpYnV0ZVwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1maXhlZC1yaWdodC1ncmlkIGEtc3BhY2luZy1iYXNlXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1maXhlZC1yaWdodC1ncmlkLWlubmVyIGEtZ3JpZC12ZXJ0aWNhbC1hbGlnbiBhLWdyaWQtY2VudGVyXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1maXhlZC1yaWdodC1ncmlkLWNvbCBhLWNvbC1sZWZ0XCIgc3R5bGU9XCJwYWRkaW5nLXJpZ2h0OjMlO2Zsb2F0OmxlZnQ7XCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCI+R2lmdGFibGVcdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS10ZXh0LXJpZ2h0IGEtZml4ZWQtcmlnaHQtZ3JpZC1jb2wgYS1jb2wtcmlnaHRcIiBzdHlsZT1cIndpZHRoOjEyMHB4O21hcmdpbi1yaWdodDotMTIwcHg7ZmxvYXQ6bGVmdDtcIj5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyLXNtYWxsIGEtc3Rhci1zbWFsbC01XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj40LjdcdTAwM0Mvc3Bhbj5cdTAwM0MvaT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1sZXR0ZXItc3BhY2VcIj5cdTAwM0Mvc3Bhbj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci10ZXJ0aWFyeVwiPjQuN1x1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGlkPVwiY3Itc3VtbWFyaXphdGlvbi1hdHRyaWJ1dGUtYXR0ci12YWx1ZVwiIGRhdGEtaG9vaz1cImNyLXN1bW1hcml6YXRpb24tYXR0cmlidXRlXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWZpeGVkLXJpZ2h0LWdyaWQgYS1zcGFjaW5nLWJhc2VcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWZpeGVkLXJpZ2h0LWdyaWQtaW5uZXIgYS1ncmlkLXZlcnRpY2FsLWFsaWduIGEtZ3JpZC1jZW50ZXJcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWZpeGVkLXJpZ2h0LWdyaWQtY29sIGEtY29sLWxlZnRcIiBzdHlsZT1cInBhZGRpbmctcmlnaHQ6MyU7ZmxvYXQ6bGVmdDtcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIj5WYWx1ZSBmb3IgbW9uZXlcdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS10ZXh0LXJpZ2h0IGEtZml4ZWQtcmlnaHQtZ3JpZC1jb2wgYS1jb2wtcmlnaHRcIiBzdHlsZT1cIndpZHRoOjEyMHB4O21hcmdpbi1yaWdodDotMTIwcHg7ZmxvYXQ6bGVmdDtcIj5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyLXNtYWxsIGEtc3Rhci1zbWFsbC01XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj40LjdcdTAwM0Mvc3Bhbj5cdTAwM0MvaT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1sZXR0ZXItc3BhY2VcIj5cdTAwM0Mvc3Bhbj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci10ZXJ0aWFyeVwiPjQuN1x1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2PlxuXG5cdTAwM0NociBjbGFzcz1cImEtc3BhY2luZy1sYXJnZSBhLXNwYWNpbmctdG9wLWV4dHJhLWxhcmdlIGEtZGl2aWRlci1ub3JtYWxcIj5cdTAwM0Mvc3Bhbj5cbiAgXHUwMDNDaDMgZGF0YS1ob29rPVwic29saWNpdGF0aW9uLXRpdGxlXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj5SZXZpZXcgdGhpcyBwcm9kdWN0XHUwMDNDL2gzPlx1MDAzQ2RpdiBkYXRhLWhvb2s9XCJzaGFyZS15b3VyLXRob3VnaHRzLXRleHRcIiBpZD1cImRwLXN1bW1hcnktc2hhcmUteW91ci10aG91Z2h0c1wiIGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW1lZGl1bVwiPlNoYXJlIHlvdXIgdGhvdWdodHMgd2l0aCBvdGhlciBjdXN0b21lcnNcdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uIGEtYnV0dG9uLWJhc2Ugd3JpdGVSZXZpZXdCdXR0b24gY20tY3ItYnV0dG9uLXdpZGVcIiBpZD1cImEtYXV0b2lkLTIwXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uLWlubmVyXCI+XHUwMDNDYSBocmVmPVwiL3Jldmlldy9jcmVhdGUtcmV2aWV3L3JlZj1jbV9jcl9kcF9kX3dyX2J1dF90b3A/aWU9VVRGOCZhbXA7Y2hhbm5lbD1nbGFuY2UtZGV0YWlsJmFtcDthc2luPUIwMUdLUUkzOTJcIiBkYXRhLWhvb2s9XCJ3cml0ZS1yZXZpZXctYnV0dG9uXCIgY2xhc3M9XCJhLWJ1dHRvbi10ZXh0XCIgcm9sZT1cImJ1dHRvblwiIGlkPVwiYS1hdXRvaWQtMjAtYW5ub3VuY2VcIj5Xcml0ZSBhIGN1c3RvbWVyIHJldmlld1x1MDAzQy9hPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDaHIgY2xhc3M9XCJhLXNwYWNpbmctZXh0cmEtbGFyZ2UgYS1zcGFjaW5nLXRvcC1leHRyYS1sYXJnZSBhLWRpdmlkZXItbm9ybWFsXCI+XHUwMDNDZGl2IGlkPVwiQURQbGFjZWhvbGRlclwiIGNsYXNzPVwiYS1zZWN0aW9uIHJldmlld3MtZGlzcGxheS1hZFwiPlxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ3NjcmlwdD5pZiAodHlwZW9mIHVldCA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgdWVzID09PSAnZnVuY3Rpb24nKSB7dmFyIHNjb3BlID0gJ0RldGFpbF9jdXN0b21lci1yZXZpZXdzLXRvcF9HbGFuY2UnO3ZhciBwbGFjZW1lbnRJZCA9ICdhNWE1ODYzMS05MTU3LTQ1MGQtOGIxMi0yMWIxNWVhNTkyNmQnO3Vlcygnd2InLCAnYWRwbGFjZW1lbnRzOicgKyBzY29wZS5yZXBsYWNlKC9cXF8vZywgJzonKSwge3diOjF9KTsgdWV0KCdiYicsICdhZHBsYWNlbWVudHM6JyArIHNjb3BlLnJlcGxhY2UoL1xcXy9nLCAnOicpLCB7d2I6MX0pOyBpZiAocGxhY2VtZW50SWQpIHt1ZXMoJ3diJywgJ2FkcGxhY2VtZW50czonICsgcGxhY2VtZW50SWQsIHt3YjoxfSk7dWV0KCdiYicsICdhZHBsYWNlbWVudHM6JyArIHBsYWNlbWVudElkLCB7d2I6MX0pO319XHUwMDNDL3NjcmlwdD5cdTAwM0NkaXYgaWQ9XCJhcGVfRGV0YWlsX2N1c3RvbWVyLXJldmlld3MtdG9wX0dsYW5jZV9wbGFjZW1lbnRcIiBjbGFzcz1cImNvcGlsb3Qtc2VjdXJlLWRpc3BsYXkgY2Vsd2lkZ2V0ICB0ZXh0L3gtZGFjeC1zYWZlZnJhbWVcIiBjZWxfd2lkZ2V0X2lkPVwiYWRwbGFjZW1lbnRzOkRldGFpbDpjdXN0b21lci1yZXZpZXdzLXRvcDpHbGFuY2VcIiBkYXRhLWNhbXBhaWduPVwiNzcyMVwiIHN0eWxlPVwid2lkdGg6IDMwMHB4OyBoZWlnaHQ6IDI4MHB4OyBkaXNwbGF5OiBub25lO1wiIGRhdGEtYWQtZGV0YWlscz1cInsmcXVvdDtzbG90JnF1b3Q7IDomcXVvdDtEZXRhaWxfY3VzdG9tZXItcmV2aWV3cy10b3BfR2xhbmNlJnF1b3Q7LCZxdW90O3Nsb3ROYW1lJnF1b3Q7IDomcXVvdDtjdXN0b21lci1yZXZpZXdzLXRvcCZxdW90OywmcXVvdDtzcmMmcXVvdDsgOiAmcXVvdDtodHRwczovL2FheC11cy1lYXN0LmFtYXpvbi1hZHN5c3RlbS5jb20vZS94c3AvZ2V0QWQ/c3JjPTUwMCZhbXA7c2xvdD1jdXN0b21lci1yZXZpZXdzLXRvcCZhbXA7cmlkPTAxMDE1NDdjMGU2YTNlYjE5YTY2NjU1OWI4ZmI0ZDhmMGRmYmY3MWQwYWNiYjA4ZTNiOWMxMzVkMTU0YzU4MjJhZWU4JnF1b3Q7LCZxdW90O2FkU2VydmVyJnF1b3Q7IDomcXVvdDtjcyZxdW90OywmcXVvdDtjYW1wYWlnbklkJnF1b3Q7IDogICZxdW90Ozc3MjEmcXVvdDssJnF1b3Q7YXJpZCZxdW90OyA6JnF1b3Q7YjJjNmEwOGY5MTg5NDIzYWI1OWFkODVlOTg5ZmFkZWEmcXVvdDssJnF1b3Q7cGxhY2VtZW50SWQmcXVvdDs6ICZxdW90O2E1YTU4NjMxLTkxNTctNDUwZC04YjEyLTIxYjE1ZWE1OTI2ZCZxdW90OywmcXVvdDtzaXplJnF1b3Q7IDp7JnF1b3Q7d2lkdGgmcXVvdDs6ICZxdW90OzMwMHB4JnF1b3Q7LCZxdW90O2hlaWdodCZxdW90OyA6ICZxdW90OzI1MHB4JnF1b3Q7fSwmcXVvdDthbGxvd2VkU2l6ZXMmcXVvdDsgOlt7JnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7MzA1cHgmcXVvdDssICZxdW90O2hlaWdodCZxdW90OzomcXVvdDsyNTVweCZxdW90O30seyZxdW90O3dpZHRoJnF1b3Q7OiZxdW90OzMwNXB4JnF1b3Q7LCAmcXVvdDtoZWlnaHQmcXVvdDs6JnF1b3Q7MjUwcHgmcXVvdDt9XSwmcXVvdDthbGxvd2VkRG9tYWlucyZxdW90OyA6ICBbJnF1b3Q7Zy1lY3guaW1hZ2VzLWFtYXpvbi5jb20mcXVvdDtdLCZxdW90O2FhblBhcmFtcyZxdW90OyA6ICAgJnF1b3Q7c2l0ZSUzRGFtYXpvbi51cyUzQnB0JTNERGV0YWlsJTNCc2xvdCUzRGN1c3RvbWVyLXJldmlld3MtdG9wJTNCcGlkJTNEQjAxR0tRSTM5MiUzQmFyaWQlM0RiMmM2YTA4ZjkxODk0MjNhYjU5YWQ4NWU5ODlmYWRlYSZxdW90OywmcXVvdDtsb2FkQWZ0ZXImcXVvdDsgOiAgICZxdW90O2NyaXRpY2FsRmVhdHVyZSZxdW90OywmcXVvdDtleHRyYURlbGF5JnF1b3Q7IDogIDAsJnF1b3Q7aWZyYW1lRXh0cmFTdHlsZSZxdW90OzogJnF1b3Q7JnF1b3Q7LCZxdW90O2lmcmFtZUNsYXNzJnF1b3Q7OiAgJnF1b3Q7JnF1b3Q7LCZxdW90O2FkUGl4ZWxzJnF1b3Q7OiBbXSwmcXVvdDthZFBpeGVsRGVsYXkmcXVvdDs6ICZxdW90OzAmcXVvdDssJnF1b3Q7YWF4SW5zdHJQaXhlbFVybCZxdW90OzogJnF1b3Q7JnF1b3Q7LCZxdW90O3NlcnZlclNpZGVGZXRjaEFkJnF1b3Q7OiAmcXVvdDtmYWxzZSZxdW90OywmcXVvdDtlbmFibGVBZEJsb2NrZXJEZXRlY3RvciZxdW90OzogZmFsc2UsJnF1b3Q7ZGlzYWJsZVJlc2l6ZUZ1bmMmcXVvdDs6IHRydWUsJnF1b3Q7ZmFsbGJhY2tTdGF0aWNBZEltZ1VybCZxdW90OzogJnF1b3Q7JnF1b3Q7LCZxdW90O2ZhbGxiYWNrU3RhdGljQWRDbGlja1VybCZxdW90OzogJnF1b3Q7JnF1b3Q7LCZxdW90O2ZhbGxiYWNrU3RhdGljQWRFeHRyYVN0eWxlJnF1b3Q7OiAmcXVvdDsmcXVvdDssJnF1b3Q7YWRGZWVkYmFja0luZm8mcXVvdDs6IHsmcXVvdDtlbmRQb2ludCZxdW90OzogJnF1b3Q7L2dwL2FxLWZlZWRiYWNrL2xhenlMb2FkL2hhbmRsZXIvYWYtbGluay1oYW5kbGVyLmh0bWwmcXVvdDssJnF1b3Q7Ym9vbEZlZWRiYWNrJnF1b3Q7OiB0cnVlLCZxdW90O3NsdWdUZXh0JnF1b3Q7OiAmcXVvdDtBZHZlcnRpc2VtZW50JnF1b3Q7fSwmcXVvdDthZFBsYWNlbWVudE1ldGFEYXRhJnF1b3Q7OiB7JnF1b3Q7cGFnZVVybCZxdW90OzogJnF1b3Q7YUhSMGNITTZMeTkzZDNjdVlXMWhlbTl1TG1OdmJTOVhSVUl0U1U1R0wzWnBaWGR6TDIxbFpHeGxlVkpCVjFCaFoyVldhV1YzTG1wemNEOWtjRkpsY1hWbGMzUkpaRDFCVWxKQldTVXlPREI0TkdFM05UaGtOekFsTWprbVYwUkhQVUZTVWtGWkpUSTRNSGc0T0dGaVpqUXlZeVV5T1NZcVpXNTBjbWxsY3lvOVFWSlNRVmtsTWpnd2VEZzRZelkzTnpZNEpUSTVKaXBXWlhKemFXOXVLajFCVWxKQldTVXlPREI0T0RWbVpXSmtORFFsTWprbSZxdW90OywmcXVvdDthZEVsZW1lbnRJZCZxdW90OzogJnF1b3Q7YXBlX0RldGFpbF9jdXN0b21lci1yZXZpZXdzLXRvcF9HbGFuY2VfcGxhY2VtZW50JnF1b3Q7LCZxdW90O3BhZ2VUeXBlJnF1b3Q7OiAmcXVvdDtEZXRhaWwmcXVvdDssJnF1b3Q7c2xvdE5hbWUmcXVvdDs6ICZxdW90O2N1c3RvbWVyLXJldmlld3MtdG9wJnF1b3Q7fSwmcXVvdDthZENyZWF0aXZlTWV0YURhdGEmcXVvdDs6IHsmcXVvdDthZE5ldHdvcmsmcXVvdDs6ICZxdW90O2NzJnF1b3Q7fSwmcXVvdDthZHZlcnRpc2VtZW50U3R5bGUmcXVvdDs6IHsmcXVvdDtwb3NpdGlvbiZxdW90OzogJnF1b3Q7YWJzb2x1dGUmcXVvdDssJnF1b3Q7dG9wJnF1b3Q7OiAmcXVvdDsycHgmcXVvdDssJnF1b3Q7cmlnaHQmcXVvdDs6ICZxdW90OzBweCZxdW90OywmcXVvdDtkaXNwbGF5JnF1b3Q7OiAmcXVvdDtpbmxpbmUtYmxvY2smcXVvdDssJnF1b3Q7Zm9udCZxdW90OzogJnF1b3Q7bm9ybWFsIDExcHggQXJpYWwmcXVvdDssJnF1b3Q7Y29sb3ImcXVvdDs6ICZxdW90O2dyZXkmcXVvdDt9LCZxdW90O2ZlZWRiYWNrRGl2U3R5bGUmcXVvdDs6IHsmcXVvdDtwb3NpdGlvbiZxdW90OzogJnF1b3Q7cmVsYXRpdmUmcXVvdDssJnF1b3Q7aGVpZ2h0JnF1b3Q7OiAmcXVvdDsxNHB4JnF1b3Q7LCZxdW90O3RvcCZxdW90OzogJnF1b3Q7MnB4JnF1b3Q7fSwmcXVvdDt2aWV3YWJpbGl0eVN0YW5kYXJkcyZxdW90OzogW3smcXVvdDtwJnF1b3Q7OiAwLCAmcXVvdDt0JnF1b3Q7OiAwLCAmcXVvdDtkZWYmcXVvdDs6ICZxdW90O2Ftem4mcXVvdDt9LCB7JnF1b3Q7cCZxdW90OzogNTAsICZxdW90O3QmcXVvdDs6IDEsICZxdW90O2RlZiZxdW90OzogJnF1b3Q7aWFiJnF1b3Q7fSwgeyZxdW90O3AmcXVvdDs6IDEwMCwgJnF1b3Q7dCZxdW90OzogMSwgJnF1b3Q7ZGVmJnF1b3Q7OiAmcXVvdDtncm91cG0mcXVvdDt9XSwmcXVvdDthamF4V2VibGFiVHJpZ2dlcklkJnF1b3Q7OiAmcXVvdDsmcXVvdDssJnF1b3Q7YWJwU3RhdHVzJnF1b3Q7OiAmcXVvdDstMSZxdW90OywmcXVvdDthYnBBY2NlcHRhYmxlJnF1b3Q7OiAmcXVvdDt0cnVlJnF1b3Q7LCZxdW90O3Byb2dyYW1JZHNUb0NvbGxhcHNlJnF1b3Q7OiBbXSwmcXVvdDtEQXNmVXJsJnF1b3Q7OiZxdW90O2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9hcGUvc2YvZGVza3RvcC9EQXNmLTEuNTAuMjI4Zjk4Yy5fVjQ1MTk1MDkxMF8uanMmcXVvdDt9XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgZGF0YS1hcmlkPVwiYjJjNmEwOGY5MTg5NDIzYWI1OWFkODVlOTg5ZmFkZWFcIj5cdTAwM0NpZnJhbWUgbmFtZT1cInsmcXVvdDtzbG90JnF1b3Q7OiZxdW90O0RldGFpbF9jdXN0b21lci1yZXZpZXdzLXRvcF9HbGFuY2UmcXVvdDssJnF1b3Q7c2xvdE5hbWUmcXVvdDs6JnF1b3Q7Y3VzdG9tZXItcmV2aWV3cy10b3AmcXVvdDssJnF1b3Q7c3JjJnF1b3Q7OiZxdW90O2h0dHBzOi8vYWF4LXVzLWVhc3QuYW1hem9uLWFkc3lzdGVtLmNvbS9lL3hzcC9nZXRBZD9zcmM9NTAwJmFtcDtzbG90PWN1c3RvbWVyLXJldmlld3MtdG9wJmFtcDtyaWQ9MDEwMTU0N2MwZTZhM2ViMTlhNjY2NTU5YjhmYjRkOGYwZGZiZjcxZDBhY2JiMDhlM2I5YzEzNWQxNTRjNTgyMmFlZTgmcXVvdDssJnF1b3Q7YWRTZXJ2ZXImcXVvdDs6JnF1b3Q7Y3MmcXVvdDssJnF1b3Q7Y2FtcGFpZ25JZCZxdW90OzomcXVvdDs3NzIxJnF1b3Q7LCZxdW90O2FyaWQmcXVvdDs6JnF1b3Q7YjJjNmEwOGY5MTg5NDIzYWI1OWFkODVlOTg5ZmFkZWEmcXVvdDssJnF1b3Q7cGxhY2VtZW50SWQmcXVvdDs6JnF1b3Q7YTVhNTg2MzEtOTE1Ny00NTBkLThiMTItMjFiMTVlYTU5MjZkJnF1b3Q7LCZxdW90O3NpemUmcXVvdDs6eyZxdW90O3dpZHRoJnF1b3Q7OiZxdW90OzMwMHB4JnF1b3Q7LCZxdW90O2hlaWdodCZxdW90OzomcXVvdDsyNTBweCZxdW90O30sJnF1b3Q7YWxsb3dlZFNpemVzJnF1b3Q7Olt7JnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7MzA1cHgmcXVvdDssJnF1b3Q7aGVpZ2h0JnF1b3Q7OiZxdW90OzI1NXB4JnF1b3Q7fSx7JnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7MzA1cHgmcXVvdDssJnF1b3Q7aGVpZ2h0JnF1b3Q7OiZxdW90OzI1MHB4JnF1b3Q7fSx7JnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7MzAwcHgmcXVvdDssJnF1b3Q7aGVpZ2h0JnF1b3Q7OiZxdW90OzI1MHB4JnF1b3Q7fV0sJnF1b3Q7YWxsb3dlZERvbWFpbnMmcXVvdDs6WyZxdW90O2ctZWN4LmltYWdlcy1hbWF6b24uY29tJnF1b3Q7LCZxdW90O2QzbDNsa2luejNmNTZ0LmNsb3VkZnJvbnQubmV0JnF1b3Q7LCZxdW90O2ctZWN4LmltYWdlcy1hbWF6b24uY29tJnF1b3Q7LCZxdW90O3otZWN4LmltYWdlcy1hbWF6b24uY29tJnF1b3Q7LCZxdW90O2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20mcXVvdDssJnF1b3Q7Zy1lYzQuaW1hZ2VzLWFtYXpvbi5jb20mcXVvdDssJnF1b3Q7aW1hZ2VzLWNuLnNzbC1pbWFnZXMtYW1hem9uLmNvbSZxdW90O10sJnF1b3Q7YWFuUGFyYW1zJnF1b3Q7OiZxdW90O3NpdGUlM0RhbWF6b24udXMlM0JwdCUzRERldGFpbCUzQnNsb3QlM0RjdXN0b21lci1yZXZpZXdzLXRvcCUzQnBpZCUzREIwMUdLUUkzOTIlM0JhcmlkJTNEYjJjNmEwOGY5MTg5NDIzYWI1OWFkODVlOTg5ZmFkZWEmcXVvdDssJnF1b3Q7bG9hZEFmdGVyJnF1b3Q7OiZxdW90O2NyaXRpY2FsRmVhdHVyZSZxdW90OywmcXVvdDtleHRyYURlbGF5JnF1b3Q7OjAsJnF1b3Q7aWZyYW1lRXh0cmFTdHlsZSZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7aWZyYW1lQ2xhc3MmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O2FkUGl4ZWxzJnF1b3Q7OltdLCZxdW90O2FkUGl4ZWxEZWxheSZxdW90OzomcXVvdDswJnF1b3Q7LCZxdW90O2FheEluc3RyUGl4ZWxVcmwmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O3NlcnZlclNpZGVGZXRjaEFkJnF1b3Q7OiZxdW90O2ZhbHNlJnF1b3Q7LCZxdW90O2VuYWJsZUFkQmxvY2tlckRldGVjdG9yJnF1b3Q7OmZhbHNlLCZxdW90O2Rpc2FibGVSZXNpemVGdW5jJnF1b3Q7OnRydWUsJnF1b3Q7ZmFsbGJhY2tTdGF0aWNBZEltZ1VybCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7ZmFsbGJhY2tTdGF0aWNBZENsaWNrVXJsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDtmYWxsYmFja1N0YXRpY0FkRXh0cmFTdHlsZSZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7YWRGZWVkYmFja0luZm8mcXVvdDs6eyZxdW90O2VuZFBvaW50JnF1b3Q7OiZxdW90Oy9ncC9hcS1mZWVkYmFjay9sYXp5TG9hZC9oYW5kbGVyL2FmLWxpbmstaGFuZGxlci5odG1sJnF1b3Q7LCZxdW90O2Jvb2xGZWVkYmFjayZxdW90Ozp0cnVlLCZxdW90O3NsdWdUZXh0JnF1b3Q7OiZxdW90O0FkdmVydGlzZW1lbnQmcXVvdDt9LCZxdW90O2FkUGxhY2VtZW50TWV0YURhdGEmcXVvdDs6eyZxdW90O3BhZ2VVcmwmcXVvdDs6JnF1b3Q7YUhSMGNITTZMeTkzZDNjdVlXMWhlbTl1TG1OdmJTOVhSVUl0U1U1R0wzWnBaWGR6TDIxbFpHeGxlVkpCVjFCaFoyVldhV1YzTG1wemNEOWtjRkpsY1hWbGMzUkpaRDFCVWxKQldTVXlPREI0TkdFM05UaGtOekFsTWprbVYwUkhQVUZTVWtGWkpUSTRNSGc0T0dGaVpqUXlZeVV5T1NZcVpXNTBjbWxsY3lvOVFWSlNRVmtsTWpnd2VEZzRZelkzTnpZNEpUSTVKaXBXWlhKemFXOXVLajFCVWxKQldTVXlPREI0T0RWbVpXSmtORFFsTWprbSZxdW90OywmcXVvdDthZEVsZW1lbnRJZCZxdW90OzomcXVvdDthcGVfRGV0YWlsX2N1c3RvbWVyLXJldmlld3MtdG9wX0dsYW5jZV9wbGFjZW1lbnQmcXVvdDssJnF1b3Q7cGFnZVR5cGUmcXVvdDs6JnF1b3Q7RGV0YWlsJnF1b3Q7LCZxdW90O3Nsb3ROYW1lJnF1b3Q7OiZxdW90O2N1c3RvbWVyLXJldmlld3MtdG9wJnF1b3Q7fSwmcXVvdDthZENyZWF0aXZlTWV0YURhdGEmcXVvdDs6eyZxdW90O2FkTmV0d29yayZxdW90OzomcXVvdDtjcyZxdW90O30sJnF1b3Q7YWR2ZXJ0aXNlbWVudFN0eWxlJnF1b3Q7OnsmcXVvdDtwb3NpdGlvbiZxdW90OzomcXVvdDthYnNvbHV0ZSZxdW90OywmcXVvdDt0b3AmcXVvdDs6JnF1b3Q7MnB4JnF1b3Q7LCZxdW90O3JpZ2h0JnF1b3Q7OiZxdW90OzBweCZxdW90OywmcXVvdDtkaXNwbGF5JnF1b3Q7OiZxdW90O2lubGluZS1ibG9jayZxdW90OywmcXVvdDtmb250JnF1b3Q7OiZxdW90O25vcm1hbCAxMXB4IEFyaWFsJnF1b3Q7LCZxdW90O2NvbG9yJnF1b3Q7OiZxdW90O2dyZXkmcXVvdDt9LCZxdW90O2ZlZWRiYWNrRGl2U3R5bGUmcXVvdDs6eyZxdW90O3Bvc2l0aW9uJnF1b3Q7OiZxdW90O3JlbGF0aXZlJnF1b3Q7LCZxdW90O2hlaWdodCZxdW90OzomcXVvdDsxNHB4JnF1b3Q7LCZxdW90O3RvcCZxdW90OzomcXVvdDsycHgmcXVvdDt9LCZxdW90O3ZpZXdhYmlsaXR5U3RhbmRhcmRzJnF1b3Q7Olt7JnF1b3Q7cCZxdW90OzowLCZxdW90O3QmcXVvdDs6MCwmcXVvdDtkZWYmcXVvdDs6JnF1b3Q7YW16biZxdW90O30seyZxdW90O3AmcXVvdDs6NTAsJnF1b3Q7dCZxdW90OzoxLCZxdW90O2RlZiZxdW90OzomcXVvdDtpYWImcXVvdDt9LHsmcXVvdDtwJnF1b3Q7OjEwMCwmcXVvdDt0JnF1b3Q7OjEsJnF1b3Q7ZGVmJnF1b3Q7OiZxdW90O2dyb3VwbSZxdW90O31dLCZxdW90O2FqYXhXZWJsYWJUcmlnZ2VySWQmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O2FicFN0YXR1cyZxdW90OzomcXVvdDstMSZxdW90OywmcXVvdDthYnBBY2NlcHRhYmxlJnF1b3Q7OiZxdW90O3RydWUmcXVvdDssJnF1b3Q7cHJvZ3JhbUlkc1RvQ29sbGFwc2UmcXVvdDs6W10sJnF1b3Q7REFzZlVybCZxdW90OzomcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvYXBlL3NmL2Rlc2t0b3AvREFzZi0xLjUwLjIyOGY5OGMuX1Y0NTE5NTA5MTBfLmpzJnF1b3Q7LCZxdW90O2hvc3REb21haW4mcXVvdDs6JnF1b3Q7aHR0cHM6Ly93d3cuYW1hem9uLmNvbSZxdW90OywmcXVvdDtxdWVyeVBhcmFtcyZxdW90Ozp7fSwmcXVvdDthUGFnZVN0YXJ0JnF1b3Q7OjE1Njk3OTQ0NTg5MTMsJnF1b3Q7YWRTdGFydFRpbWUmcXVvdDs6MTU2OTc5NDQ2MDIwNSwmcXVvdDtzYWZlRnJhbWVTcmMmcXVvdDs6JnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2FwZS9zZi93aGl0ZWxpc3RlZC9kZXNrdG9wL3NmLTEuNTAuMjI4Zjk4Yy5fVjQ1MTk1MDkwOF8uaHRtbCZxdW90O31cIiBpZD1cImFwZV9EZXRhaWxfY3VzdG9tZXItcmV2aWV3cy10b3BfR2xhbmNlX2lmcmFtZVwiIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9hcGUvc2Yvd2hpdGVsaXN0ZWQvZGVza3RvcC9zZi0xLjUwLjIyOGY5OGMuX1Y0NTE5NTA5MDhfLmh0bWxcIiBoZWlnaHQ9XCIyNTBweFwiIHdpZHRoPVwiMzAwcHhcIiBjbGFzcz1cIlwiIGZyYW1lYm9yZGVyPVwiMFwiIG1hcmdpbmhlaWdodD1cIjBcIiBtYXJnaW53aWR0aD1cIjBcIiBzY3JvbGxpbmc9XCJub1wiIGFsbG93dHJhbnNwYXJlbmN5PVwidHJ1ZVwiIGFsbG93ZnVsbHNjcmVlbj1cIlwiIG1vemFsbG93ZnVsbHNjcmVlbj1cIlwiIHdlYmtpdGFsbG93ZnVsbHNjcmVlbj1cIlwiIGRhdGEtYXJpZD1cImIyYzZhMDhmOTE4OTQyM2FiNTlhZDg1ZTk4OWZhZGVhXCIgc2FuZGJveD1cImFsbG93LXNjcmlwdHMgYWxsb3ctdG9wLW5hdmlnYXRpb24gYWxsb3ctcG9wdXBzIGFsbG93LXBvcHVwcy10by1lc2NhcGUtc2FuZGJveCBhbGxvdy1zYW1lLW9yaWdpblwiIHN0eWxlPVwiXCI+XHUwMDNDL2lmcmFtZT5cdTAwM0MvZGl2Plx1MDAzQ3NjcmlwdD4oZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGQsZSl7aWYod2luZG93LmFkZEV2ZW50TGlzdGVuZXIpe3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKGQsZSxmYWxzZSk7fWVsc2V7aWYod2luZG93LmF0dGFjaEV2ZW50KXt3aW5kb3cuYXR0YWNoRXZlbnQoXCJvblwiK2QsZSk7fX19ZnVuY3Rpb24gYyhkLGUpe2lmKHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKXt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihkLGUsZmFsc2UpO31lbHNle2lmKHdpbmRvdy5kZXRhY2hFdmVudCl7d2luZG93LmRldGFjaEV2ZW50KFwib25cIitkLGUpO319fXZhciBiPWZ1bmN0aW9uKCl7KGZ1bmN0aW9uKCl7KGZ1bmN0aW9uKGosbSl7ai5zZkxvZ0Vycm9ycz1qLnNmTG9nRXJyb3JzfHxmYWxzZTt2YXIgbz1vfHxmdW5jdGlvbihzLHIpe3I9cnx8bmV3IEVycm9yKHMpO2lmKGoudWUmJnR5cGVvZiB1ZS5jb3VudD09XCJmdW5jdGlvblwiKXt1ZS5jb3VudChcImFkcGxhY2VtZW50czpzYWZlRnJhbWVFcnJvclwiLDEpO31pZighai5zZkxvZ0Vycm9ycyl7cmV0dXJuO31pZihqLnVlTG9nRXJyb3Ipe2oudWVMb2dFcnJvcihyLHtsb2dMZXZlbDpcIkVSUk9SXCIsYXR0cmlidXRpb246XCJBUEUtc2FmZWZyYW1lXCIsbWVzc2FnZTpzK1wiIFwifSk7fWVsc2V7aWYodHlwZW9mIGNvbnNvbGUhPT1cInVuZGVmaW5lZFwiJiZjb25zb2xlLmVycm9yKXtjb25zb2xlLmVycm9yKHMscik7fX19O2ouYWFuUGFyYW1zPWouYWFuUGFyYW1zfHx7fTtqLmFhblBhcmFtc1tcImN1c3RvbWVyLXJldmlld3MtdG9wXCJdPVwic2l0ZT1hbWF6b24udXM7cHQ9RGV0YWlsO3Nsb3Q9Y3VzdG9tZXItcmV2aWV3cy10b3A7cGlkPUIwMUdLUUkzOTI7YXJpZD1iMmM2YTA4ZjkxODk0MjNhYjU5YWQ4NWU5ODlmYWRlYVwiO2pbXCJjdXN0b21lci1yZXZpZXdzLXRvcFwiXT17fTtqW1wiY3VzdG9tZXItcmV2aWV3cy10b3BcIl0uYWRTdGFydFRpbWU9KG5ldyBEYXRlKCkpLmdldFRpbWUoKTtmdW5jdGlvbiBkKCl7cmV0dXJuIGouaW5uZXJIZWlnaHR8fG0uZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodDt9ZnVuY3Rpb24gZygpe3JldHVybiBqLmlubmVyV2lkdGh8fG0uZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoO31mdW5jdGlvbiBlKHQscixzKXtpZih0PjApe3JldHVybihzPnQpO31lbHNle3JldHVybihyPjApO319dmFyIGY9ZnVuY3Rpb24oKXtyZXR1cm4oRGF0ZS5ub3c/RGF0ZS5ub3coKTpuZXcgRGF0ZSgpLmdldFRpbWUoKSk7fTt0aHJvdHRsZT1mdW5jdGlvbihzLHUseSl7dmFyIHIsdyx6O3ZhciB4PW51bGw7dmFyIHY9MDtpZigheSl7eT17fTt9dmFyIHQ9ZnVuY3Rpb24oKXt2PXkubGVhZGluZz09PWZhbHNlPzA6ZigpO3g9bnVsbDt6PXMuYXBwbHkocix3KTtpZigheCl7cj13PW51bGw7fX07cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIEI9ZigpO2lmKCF2JiZ5LmxlYWRpbmc9PT1mYWxzZSl7dj1CO312YXIgQT11LShCLXYpO3I9dGhpczt3PWFyZ3VtZW50cztpZihBXHUwMDNDPTB8fEE+dSl7aWYoeCl7Y2xlYXJUaW1lb3V0KHgpO3g9bnVsbDt9dj1CO3o9cy5hcHBseShyLHcpO2lmKCF4KXtyPXc9bnVsbDt9fWVsc2V7aWYoIXgmJnkudHJhaWxpbmchPT1mYWxzZSl7eD1zZXRUaW1lb3V0KHQsQSk7fX1yZXR1cm4gejt9O307ZnVuY3Rpb24gbCh1LHcsdixyKXt0cnl7dmFyIHQ9bS5nZXRFbGVtZW50QnlJZCh1KS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtpZihlKHQudG9wLHQuYm90dG9tLGQoKSkmJmUodC5sZWZ0LHQucmlnaHQsZygpKSl7aWYodHlwZW9mIHVldD09XCJmdW5jdGlvblwiKXt1ZXQoXCJiYlwiLFwiYWRwbGFjZW1lbnRzOnZpZXdhYmxlbGF0ZW5jeTpcIit3LHt3YjoxfSk7aWYodil7dWV0KFwiYmJcIixcImFkcGxhY2VtZW50czp2aWV3YWJsZWxhdGVuY3k6XCIrdix7d2I6MX0pO319aWYodHlwZW9mIHVleD09XCJmdW5jdGlvblwiJiZqLnVlJiZ0eXBlb2YgdWUuY291bnQ9PVwiZnVuY3Rpb25cIil7aWYoai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tyXS5sb2FkZWQpe3VleChcImxkXCIsXCJhZHBsYWNlbWVudHM6dmlld2FibGVsYXRlbmN5OlwiK3cse3diOjF9KTtpZih2KXt1ZXgoXCJsZFwiLFwiYWRwbGFjZW1lbnRzOnZpZXdhYmxlbGF0ZW5jeTpcIit2LHt3YjoxfSk7fXVlLmNvdW50KFwiYWRwbGFjZW1lbnRzOmh0bWx2aWV3ZWQ6bG9hZGVkOlwiK3csMSk7aWYodil7dWUuY291bnQoXCJhZHBsYWNlbWVudHM6aHRtbHZpZXdlZDpsb2FkZWQ6XCIrdiwxKTt9fXVlLmNvdW50KFwiYWRwbGFjZW1lbnRzOmh0bWx2aWV3ZWQ6XCIrdywxKTtpZih2KXt1ZS5jb3VudChcImFkcGxhY2VtZW50czpodG1sdmlld2VkOlwiK3YsMSk7fX1qLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW3JdLnZpZXdlZD10cnVlO2lmKGouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbcl0udHJhY2tlcil7YyhcInNjcm9sbFwiLGouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbcl0udHJhY2tlcik7YyhcInJlc2l6ZVwiLGouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbcl0udHJhY2tlcik7fX19Y2F0Y2gocyl7ai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tyXS52YWxpZD1mYWxzZTt9fXRyeXtqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzPWouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnN8fHt9O3ZhciBxPVwiYXBlX0RldGFpbF9jdXN0b21lci1yZXZpZXdzLXRvcF9HbGFuY2VfcGxhY2VtZW50XCI7dmFyIHA9XCJEZXRhaWxfY3VzdG9tZXItcmV2aWV3cy10b3BfR2xhbmNlXCIucmVwbGFjZSgvXFxfL2csXCI6XCIpO3ZhciBoPVwiYTVhNTg2MzEtOTE1Ny00NTBkLThiMTItMjFiMTVlYTU5MjZkXCI7dmFyIGk9XCJiMmM2YTA4ZjkxODk0MjNhYjU5YWQ4NWU5ODlmYWRlYVwiO2ouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbaV09ai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tpXXx8e307ai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tpXS52YWxpZD10cnVlO2wocSxwLGgsaSk7aWYoai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tpXS52YWxpZCYmIWouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbaV0udmlld2VkKXtqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW2ldLnRyYWNrZXI9dGhyb3R0bGUoZnVuY3Rpb24oKXtsKHEscCxoLGkpO30sMjApO2EoXCJzY3JvbGxcIixqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW2ldLnRyYWNrZXIpO2EoXCJyZXNpemVcIixqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW2ldLnRyYWNrZXIpO319Y2F0Y2goayl7aWYoai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2VycyYmai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vycy5iMmM2YTA4ZjkxODk0MjNhYjU5YWQ4NWU5ODlmYWRlYSl7ai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vycy5iMmM2YTA4ZjkxODk0MjNhYjU5YWQ4NWU5ODlmYWRlYS52YWxpZD1mYWxzZTt9byhcIkVycm9yIGluaXRpYWxpemluZyB2aWV3YWJsZSBsYXRlbmN5IGluc3RydW1lbnRhdGlvblwiLGspO310cnl7aWYoai5EQXNmKXtqLkRBc2YubG9hZEFkcygpO31lbHNle3ZhciBuPW0uY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtuLnR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIjtuLmFzeW5jPXRydWU7bi5jaGFyc2V0PVwidXRmLThcIjtuLnNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9hcGUvc2YvZGVza3RvcC9EQXNmLTEuNTAuMjI4Zjk4Yy5fVjQ1MTk1MDkxMF8uanM/Y3NtX2F0dHJpYnV0aW9uPUFQRS1TYWZlRnJhbWVcIjtuLm9uZXJyb3I9ZnVuY3Rpb24oKXtvKFwiRXJyb3IgbG9hZGluZyBTYWZlRnJhbWUgbGlicmFyeVwiKTt9O24uc2V0QXR0cmlidXRlKFwiY3Jvc3NvcmlnaW5cIixcImFub255bW91c1wiKTsobS5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF18fG0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJib2R5XCIpWzBdKS5hcHBlbmRDaGlsZChuKTt9fWNhdGNoKGspe28oXCJFcnJvciBhcHBlbmRpbmcgREFzZiBsaWJyYXJ5XCIsayk7fX0od2luZG93LGRvY3VtZW50KSk7fSkoKTt9O2IoKTt9KSgpO1x1MDAzQy9zY3JpcHQ+XG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLWZpeGVkLWxlZnQtZ3JpZC1jb2wgYS1jb2wtcmlnaHRcIiBzdHlsZT1cInBhZGRpbmctbGVmdDoyLjUlO2Zsb2F0OmxlZnQ7XCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgY21fY3JfZ3JpZF9jZW50ZXJfY29udGFpbmVyXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1maXhlZC1yaWdodC1ncmlkLWNvbCBjbV9jcl9ncmlkX2NlbnRlcl9sZWZ0XCIgc3R5bGU9XCJmbG9hdDpsZWZ0O1wiPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1maXhlZC1yaWdodC1ncmlkLWNvbCBjbV9jcl9ncmlkX2NlbnRlcl9yaWdodFwiIHN0eWxlPVwiZmxvYXQ6bGVmdDtcIj5cdTAwM0NzcGFuIGNsYXNzPVwiY3Itd2lkZ2V0LU1lZGxleUN1c3RvbWVySW1hZ2VzXCIgZGF0YS1ob29rPVwiY3Itd2lkZ2V0LU1lZGxleUN1c3RvbWVySW1hZ2VzXCI+XG4gICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXBvcG92ZXItcHJlbG9hZFwiIGlkPVwiYS1wb3BvdmVyLXJldmlld3MtaW1hZ2UtZ2FsbGVyeVwiPlx1MDAzQ2RpdiBjbGFzcz1cInJldmlld0xpZ2h0Ym94UG9wb3ZlckNvbnRhaW5lclwiIGRhdGEtaG9vaz1cImN1c3RvbWVyLWltYWdlcy1tb2RhbFwiPlxuICAgICAgXHUwMDNDZGl2IGNsYXNzPVwicmV2aWV3c0xpZ2h0Ym94XCIgaWQ9XCJyZXZpZXdzLWltYWdlLWdhbGxlcnlcIj5cdTAwM0MvZGl2PlxuICAgIFx1MDAzQy9kaXY+XG4gIFx1MDAzQy9kaXY+XHUwMDNDZGl2IGlkPVwicmV2aWV3cy1pbWFnZS1nYWxsZXJ5LWNvbnRhaW5lclwiIGRhdGEtYXNpbj1cIkIwMUdLUUkzOTJcIiBkYXRhLWhvb2s9XCJjdXN0b21lci1pbWFnZXMtd2lkZ2V0XCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1lZGl1bSByZXZpZXdzLWN1c3RvbWVyLWltYWdlc1wiPlx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XHUwMDNDaDM+Q3VzdG9tZXIgaW1hZ2VzXHUwMDNDL2gzPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLXNtYWxsIGEtc3BhY2luZy10b3Atc21hbGxcIj5cdTAwM0NkaXYgY2xhc3M9XCJyZXZpZXctaW1hZ2UtdGlsZVwiIGRhdGEtaG9vaz1cInJldmlldy1pbWFnZS10aWxlLWdhbGxlcnlcIj5cbiAgICAgICAgICBcdTAwM0NpbWcgYWx0PVwiQ3VzdG9tZXIgaW1hZ2VcIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNzFVTWNhN3hSNkwuX0NSMCwyMDQsMTIyNCwxMjI0X1VYMTc1LmpwZ1wiIGNsYXNzPVwiYS1keW5hbWljLWltYWdlIGNyLWN1c3RvbWVyLWltYWdlLXRodW1ibmFpbFwiIHdpZHRoPVwiMjIuNSVcIiBkYXRhLWEtZHluYW1pYy1pbWFnZT1cInsmcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNzFVTWNhN3hSNkwuX0NSMCwyMDQsMTIyNCwxMjI0X1VYNjQuanBnJnF1b3Q7Ols2NCw2NF0sJnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzcxVU1jYTd4UjZMLl9DUjAsMjA0LDEyMjQsMTIyNF9VWDE3NS5qcGcmcXVvdDs6WzE3NSwxNzVdfVwiPlx1MDAzQy9kaXY+XG4gICAgICBcdTAwM0NkaXYgY2xhc3M9XCJyZXZpZXctaW1hZ2UtdGlsZVwiIGRhdGEtaG9vaz1cInJldmlldy1pbWFnZS10aWxlLWdhbGxlcnlcIj5cbiAgICAgICAgICBcdTAwM0NpbWcgYWx0PVwiQ3VzdG9tZXIgaW1hZ2VcIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFhUlhvaG9ZRUwuX0NSMCwyNSwyMzgsMjM4X1VYMTc1LmpwZ1wiIGNsYXNzPVwiYS1keW5hbWljLWltYWdlIGNyLWN1c3RvbWVyLWltYWdlLXRodW1ibmFpbFwiIHdpZHRoPVwiMjIuNSVcIiBkYXRhLWEtZHluYW1pYy1pbWFnZT1cInsmcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFhUlhvaG9ZRUwuX0NSMCwyNSwyMzgsMjM4X1VYNjQuanBnJnF1b3Q7Ols2NCw2NF0sJnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzQxYVJYb2hvWUVMLl9DUjAsMjUsMjM4LDIzOF9VWDE3NS5qcGcmcXVvdDs6WzE3NSwxNzVdfVwiPlx1MDAzQy9kaXY+XG4gICAgICBcdTAwM0NkaXYgY2xhc3M9XCJyZXZpZXctaW1hZ2UtdGlsZVwiIGRhdGEtaG9vaz1cInJldmlldy1pbWFnZS10aWxlLWdhbGxlcnlcIj5cbiAgICAgICAgICBcdTAwM0NpbWcgYWx0PVwiQ3VzdG9tZXIgaW1hZ2VcIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNzFKeGMrUEFFOEwuX0NSMCwyMDQsMTIyNCwxMjI0X1VYMTc1LmpwZ1wiIGNsYXNzPVwiYS1keW5hbWljLWltYWdlIGNyLWN1c3RvbWVyLWltYWdlLXRodW1ibmFpbFwiIHdpZHRoPVwiMjIuNSVcIiBkYXRhLWEtZHluYW1pYy1pbWFnZT1cInsmcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNzFKeGMrUEFFOEwuX0NSMCwyMDQsMTIyNCwxMjI0X1VYNjQuanBnJnF1b3Q7Ols2NCw2NF0sJnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzcxSnhjK1BBRThMLl9DUjAsMjA0LDEyMjQsMTIyNF9VWDE3NS5qcGcmcXVvdDs6WzE3NSwxNzVdfVwiPlx1MDAzQy9kaXY+XG4gICAgICBcdTAwM0NkaXYgY2xhc3M9XCJyZXZpZXctaW1hZ2UtdGlsZVwiIGRhdGEtaG9vaz1cInJldmlldy1pbWFnZS10aWxlLWdhbGxlcnlcIj5cbiAgICAgICAgICBcdTAwM0NpbWcgYWx0PVwiQ3VzdG9tZXIgaW1hZ2VcIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFqT09RaUhPK0wuX0NSODAsMCw0ODAsNDgwX1VYMTc1LmpwZ1wiIGNsYXNzPVwiYS1keW5hbWljLWltYWdlIGNyLWN1c3RvbWVyLWltYWdlLXRodW1ibmFpbFwiIHdpZHRoPVwiMjIuNSVcIiBkYXRhLWEtZHluYW1pYy1pbWFnZT1cInsmcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFqT09RaUhPK0wuX0NSODAsMCw0ODAsNDgwX1VYMTc1LmpwZyZxdW90OzpbMTc1LDE3NV0sJnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzUxak9PUWlITytMLl9DUjgwLDAsNDgwLDQ4MF9VWDY0LmpwZyZxdW90OzpbNjQsNjRdfVwiPlx1MDAzQy9kaXY+XG4gICAgICBcdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XHUwMDNDYSBkYXRhLWhvb2s9XCJzZWUtYWxsLWltYWdlcy1saW5rXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHJldmlld3MtaW1hZ2UtZ2FsbGVyeS1saW5rXCIgaHJlZj1cIiNDdXN0b21lckltYWdlc1wiPlNlZSBhbGwgY3VzdG9tZXIgaW1hZ2VzXHUwMDNDL2E+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCI+XG4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLW1vZGFsXCIgZGF0YS1hLW1vZGFsPVwieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7cmV2aWV3cy1pbWFnZS1nYWxsZXJ5JnF1b3Q7fVwiPlx1MDAzQ2EgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIGNsYXNzPVwiYS1wb3BvdmVyLXRyaWdnZXIgYS1kZWNsYXJhdGl2ZVwiPlx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXBvcG92ZXJcIj5cdTAwM0MvaT5cdTAwM0MvYT5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2PlxuXG4gIFx1MDAzQy9kaXY+XHUwMDNDL3NwYW4+XG4gIFx1MDAzQ3NwYW4gY2xhc3M9XCJjci13aWRnZXQtTGlnaHRodXRcIiBkYXRhLWhvb2s9XCJjci13aWRnZXQtTGlnaHRodXRcIj5cbiAgICAgIFx1MDAzQ2RpdiBpZD1cImNyLWRwLWRlc2t0b3AtbGlnaHRodXRcIiBjbGFzcz1cImNyLWxpZ2h0aHV0LWJvdW5kYXJ5IGNyLWxpZ2h0aG91c2UtYW5jaG9yLWJ1ZmZlciBjZWx3aWRnZXRcIj5cbiAgXHUwMDNDZGl2IGlkPVwiY3ItZHAtbGlnaHRodXRcIiBkYXRhLWhvb2s9XCJsaWdodGh1dC13aWRnZXRcIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctZXh0cmEtbGFyZ2UgY3ItYXNpbi1CMDFHS1FJMzkyIGNlbHdpZGdldFwiPlxuXG5cdTAwM0NzcGFuIGRhdGEtY3ItdHJpZ2dlci1vbi12aWV3PVwieyZxdW90O2FqYXhVcmwmcXVvdDs6JnF1b3Q7L2h6L3Jldmlld3MtcmVuZGVyL2FqYXgvbGlnaHRodXQvcmVwb3J0LyZxdW90OywmcXVvdDthamF4UGFyYW1zTWFwJnF1b3Q7OnsmcXVvdDtsaWdodGhvdXNlVGVybXMmcXVvdDs6JnF1b3Q7cm9zZSBnb2xkL21hbnkgY29tcGxpbWVudHMvbG92ZSB0aGVzZSBlYXJyaW5ncy9lYXJyaW5ncyBhcmUgYmVhdXRpZnVsL3NpbHZlci9lYXJyaW5nL3N0YXkvYm90dG9tL3dlYXJpbmcvaG9vay9tZXRhbC9zaGFwZSZxdW90O319XCI+XHUwMDNDL3NwYW4+XG5cdTAwM0NoMyBkYXRhLWhvb2s9XCJsaWdodGh1dC10aXRsZVwiIGNsYXNzPVwiYS1zcGFjaW5nLWJhc2VcIj5SZWFkIHJldmlld3MgdGhhdCBtZW50aW9uXHUwMDNDL2gzPlx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XHUwMDNDc3R5bGU+XG4gIC5jci1saWdodGhvdXNlLWFuY2hvci1idWZmZXIge1xuICAgIHBhZGRpbmctdG9wIDogIDYwcHg7XG4gICAgbWFyZ2luLXRvcCAgOiAtNjBweDtcbiAgfVxuXG4gIC5jci1saWdodGhvdXNlLXRlcm0ge1xuICAgIGJhY2tncm91bmQtY29sb3IgOiAjRDdFOEVBO1xuICAgIHBhZGRpbmcgICAgICAgICAgOiAwcHggMTRweDtcbiAgICBsaW5lLWhlaWdodCAgICAgIDogMjlweDtcbiAgICBtYXJnaW4gICAgICAgICAgIDogMHB4IDEwcHggMTRweCAwcHg7XG4gICAgYm9yZGVyLWJvdHRvbSAgICA6IHNvbGlkIDFweCAjOTY5Njk2O1xuICAgIGRpc3BsYXkgICAgICAgICAgOiBpbmxpbmUtYmxvY2s7XG4gICAgZm9udC1zaXplICAgICAgICA6IDEzcHg7XG4gICAgY29sb3IgICAgICAgICAgICA6ICMxMTExMTE7XG4gIH1cblxuICAuY3ItbW9iaWxlLWxpZ2h0aG91c2UtdGVybSB7XG4gICAgYmFja2dyb3VuZC1jb2xvciA6ICNEN0U4RUE7XG4gICAgcGFkZGluZyAgICAgICAgICA6IDBweCAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0ICAgICAgOiA0MHB4O1xuICAgIG1hcmdpbiAgICAgICAgICAgOiAwcHggMTBweCAxM3B4IDBweDtcbiAgICBib3JkZXItYm90dG9tICAgIDogc29saWQgMXB4ICM5Njk2OTY7XG4gICAgZGlzcGxheSAgICAgICAgICA6IGlubGluZS1ibG9jaztcbiAgICBmb250LXNpemUgICAgICAgIDogMTZweDtcbiAgICBjb2xvciAgICAgICAgICAgIDogIzExMTExMTtcbiAgfVxuXG4gIC5jci1saWdodGhvdXNlLXRlcm0uY3ItbGlnaHRodXQtdGVybS1zZWxlY3RlZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvciA6ICMwMDQ2NEY7XG4gICAgY29sb3IgOiAjRkZGRkZGO1xuICB9XG5cbiAgLmNyLW1vYmlsZS1saWdodGhvdXNlLXRlcm0uc2VsZWN0ZWQge1xuICAgIGRpc3BsYXkgOiBub25lO1xuICB9XG5cbiAgLmNyLWxpZ2h0aG91c2UtdGVybXMge1xuICAgIG1heC1oZWlnaHQgOiAxMThweDsgXG4gICAgb3ZlcmZsb3cgICA6IGhpZGRlbjtcbiAgfVxuXG4gIC5jci1tb2JpbGUtbGlnaHRob3VzZS10ZXJtcyB7XG4gICAgbWF4LWhlaWdodDogMzI0cHg7IFxuICAgIG92ZXJmbG93IDogaGlkZGVuO1xuICB9XG5cbiAgLmNyLWxpZ2h0aHV0LWJvdW5kYXJ5IHtcbiAgICB3aWR0aCAgICAgOiA1ODJweDtcbiAgfVxuXG5cdTAwM0Mvc3R5bGU+XG5cdTAwM0NkaXYgZGF0YS1ob29rPVwibGlnaHRodXQtdGVybXMtbGlzdFwiIGlkPVwiY3ItbGlnaHRodXQtMS1cIiBjbGFzcz1cImEtcm93IGNyLWxpZ2h0aHV0XCI+XHUwMDNDZGl2IGNsYXNzPVwiY3ItbGlnaHRob3VzZS10ZXJtc1wiPlxuICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJyZXZpZXdzOmZpbHRlci1hY3Rpb246YXBwbHlcIiBkYXRhLXJldmlld3M6ZmlsdGVyLWFjdGlvbjphcHBseT1cInsmcXVvdDtzY3JvbGxUb1NlbGVjdG9yJnF1b3Q7OiZxdW90Oy5jci1saWdodGhvdXNlLWFuY2hvci1idWZmZXImcXVvdDssJnF1b3Q7ZmlsdGVyQnlLZXl3b3JkJnF1b3Q7OiZxdW90O3Jvc2UgZ29sZCZxdW90OywmcXVvdDt0b2dnbGVGaWx0ZXJzJnF1b3Q7OiZxdW90O3RydWUmcXVvdDssJnF1b3Q7YWxsb3dMaW5rRGVmYXVsdCZxdW90OzomcXVvdDsxJnF1b3Q7fVwiPlx1MDAzQ2EgZGF0YS1yZWZ0YWc9XCJjbV9jcl9kcF9kX2xoXzBcIiBkYXRhLXJldmlld3Mtc3RhdGUtcGFyYW09XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvS2Vtc3RvbmUtRWxlZ2FudC1NdWx0aWxheWVyLUVhcnJpbmdzLUFjY2Vzc29yeS9wcm9kdWN0LXJldmlld3MvQjAxR0tRSTM5Mi9yZWY9Y21fY3JfZHBfZF9saF8wP2llPVVURjgmYW1wO2ZpbHRlckJ5S2V5d29yZD1yb3NlK2dvbGQmYW1wO3BhZ2VOdW1iZXI9MSZhbXA7cmV2aWV3ZXJUeXBlPWFsbF9yZXZpZXdzI3Jldmlld3MtZmlsdGVyLWJhclwiPlx1MDAzQ3NwYW4gaWQ9XCJjci1saWdodGhvdXNlLXRlcm0tcm9zZV9nb2xkXCIgY2xhc3M9XCJjci1saWdodGhvdXNlLXRlcm0gXCIgZGF0YS1ob29rPVwibGlnaHRob3VzZS10ZXJtXCI+XG4gICAgICAgIHJvc2UgZ29sZFx1MDAzQy9zcGFuPlxuICAgIFx1MDAzQy9hPlx1MDAzQy9zcGFuPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJyZXZpZXdzOmZpbHRlci1hY3Rpb246YXBwbHlcIiBkYXRhLXJldmlld3M6ZmlsdGVyLWFjdGlvbjphcHBseT1cInsmcXVvdDtzY3JvbGxUb1NlbGVjdG9yJnF1b3Q7OiZxdW90Oy5jci1saWdodGhvdXNlLWFuY2hvci1idWZmZXImcXVvdDssJnF1b3Q7ZmlsdGVyQnlLZXl3b3JkJnF1b3Q7OiZxdW90O21hbnkgY29tcGxpbWVudHMmcXVvdDssJnF1b3Q7dG9nZ2xlRmlsdGVycyZxdW90OzomcXVvdDt0cnVlJnF1b3Q7LCZxdW90O2FsbG93TGlua0RlZmF1bHQmcXVvdDs6JnF1b3Q7MSZxdW90O31cIj5cdTAwM0NhIGRhdGEtcmVmdGFnPVwiY21fY3JfZHBfZF9saF8xXCIgZGF0YS1yZXZpZXdzLXN0YXRlLXBhcmFtPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL0tlbXN0b25lLUVsZWdhbnQtTXVsdGlsYXllci1FYXJyaW5ncy1BY2Nlc3NvcnkvcHJvZHVjdC1yZXZpZXdzL0IwMUdLUUkzOTIvcmVmPWNtX2NyX2RwX2RfbGhfMT9pZT1VVEY4JmFtcDtmaWx0ZXJCeUtleXdvcmQ9bWFueStjb21wbGltZW50cyZhbXA7cGFnZU51bWJlcj0xJmFtcDtyZXZpZXdlclR5cGU9YWxsX3Jldmlld3MjcmV2aWV3cy1maWx0ZXItYmFyXCI+XHUwMDNDc3BhbiBpZD1cImNyLWxpZ2h0aG91c2UtdGVybS1tYW55X2NvbXBsaW1lbnRzXCIgY2xhc3M9XCJjci1saWdodGhvdXNlLXRlcm0gXCIgZGF0YS1ob29rPVwibGlnaHRob3VzZS10ZXJtXCI+XG4gICAgICAgIG1hbnkgY29tcGxpbWVudHNcdTAwM0Mvc3Bhbj5cbiAgICBcdTAwM0MvYT5cdTAwM0Mvc3Bhbj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwicmV2aWV3czpmaWx0ZXItYWN0aW9uOmFwcGx5XCIgZGF0YS1yZXZpZXdzOmZpbHRlci1hY3Rpb246YXBwbHk9XCJ7JnF1b3Q7c2Nyb2xsVG9TZWxlY3RvciZxdW90OzomcXVvdDsuY3ItbGlnaHRob3VzZS1hbmNob3ItYnVmZmVyJnF1b3Q7LCZxdW90O2ZpbHRlckJ5S2V5d29yZCZxdW90OzomcXVvdDtsb3ZlIHRoZXNlIGVhcnJpbmdzJnF1b3Q7LCZxdW90O3RvZ2dsZUZpbHRlcnMmcXVvdDs6JnF1b3Q7dHJ1ZSZxdW90OywmcXVvdDthbGxvd0xpbmtEZWZhdWx0JnF1b3Q7OiZxdW90OzEmcXVvdDt9XCI+XHUwMDNDYSBkYXRhLXJlZnRhZz1cImNtX2NyX2RwX2RfbGhfMlwiIGRhdGEtcmV2aWV3cy1zdGF0ZS1wYXJhbT1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9LZW1zdG9uZS1FbGVnYW50LU11bHRpbGF5ZXItRWFycmluZ3MtQWNjZXNzb3J5L3Byb2R1Y3QtcmV2aWV3cy9CMDFHS1FJMzkyL3JlZj1jbV9jcl9kcF9kX2xoXzI/aWU9VVRGOCZhbXA7ZmlsdGVyQnlLZXl3b3JkPWxvdmUrdGhlc2UrZWFycmluZ3MmYW1wO3BhZ2VOdW1iZXI9MSZhbXA7cmV2aWV3ZXJUeXBlPWFsbF9yZXZpZXdzI3Jldmlld3MtZmlsdGVyLWJhclwiPlx1MDAzQ3NwYW4gaWQ9XCJjci1saWdodGhvdXNlLXRlcm0tbG92ZV90aGVzZV9lYXJyaW5nc1wiIGNsYXNzPVwiY3ItbGlnaHRob3VzZS10ZXJtIFwiIGRhdGEtaG9vaz1cImxpZ2h0aG91c2UtdGVybVwiPlxuICAgICAgICBsb3ZlIHRoZXNlIGVhcnJpbmdzXHUwMDNDL3NwYW4+XG4gICAgXHUwMDNDL2E+XHUwMDNDL3NwYW4+XHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cInJldmlld3M6ZmlsdGVyLWFjdGlvbjphcHBseVwiIGRhdGEtcmV2aWV3czpmaWx0ZXItYWN0aW9uOmFwcGx5PVwieyZxdW90O3Njcm9sbFRvU2VsZWN0b3ImcXVvdDs6JnF1b3Q7LmNyLWxpZ2h0aG91c2UtYW5jaG9yLWJ1ZmZlciZxdW90OywmcXVvdDtmaWx0ZXJCeUtleXdvcmQmcXVvdDs6JnF1b3Q7ZWFycmluZ3MgYXJlIGJlYXV0aWZ1bCZxdW90OywmcXVvdDt0b2dnbGVGaWx0ZXJzJnF1b3Q7OiZxdW90O3RydWUmcXVvdDssJnF1b3Q7YWxsb3dMaW5rRGVmYXVsdCZxdW90OzomcXVvdDsxJnF1b3Q7fVwiPlx1MDAzQ2EgZGF0YS1yZWZ0YWc9XCJjbV9jcl9kcF9kX2xoXzNcIiBkYXRhLXJldmlld3Mtc3RhdGUtcGFyYW09XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvS2Vtc3RvbmUtRWxlZ2FudC1NdWx0aWxheWVyLUVhcnJpbmdzLUFjY2Vzc29yeS9wcm9kdWN0LXJldmlld3MvQjAxR0tRSTM5Mi9yZWY9Y21fY3JfZHBfZF9saF8zP2llPVVURjgmYW1wO2ZpbHRlckJ5S2V5d29yZD1lYXJyaW5ncythcmUrYmVhdXRpZnVsJmFtcDtwYWdlTnVtYmVyPTEmYW1wO3Jldmlld2VyVHlwZT1hbGxfcmV2aWV3cyNyZXZpZXdzLWZpbHRlci1iYXJcIj5cdTAwM0NzcGFuIGlkPVwiY3ItbGlnaHRob3VzZS10ZXJtLWVhcnJpbmdzX2FyZV9iZWF1dGlmdWxcIiBjbGFzcz1cImNyLWxpZ2h0aG91c2UtdGVybSBcIiBkYXRhLWhvb2s9XCJsaWdodGhvdXNlLXRlcm1cIj5cbiAgICAgICAgZWFycmluZ3MgYXJlIGJlYXV0aWZ1bFx1MDAzQy9zcGFuPlxuICAgIFx1MDAzQy9hPlx1MDAzQy9zcGFuPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJyZXZpZXdzOmZpbHRlci1hY3Rpb246YXBwbHlcIiBkYXRhLXJldmlld3M6ZmlsdGVyLWFjdGlvbjphcHBseT1cInsmcXVvdDtzY3JvbGxUb1NlbGVjdG9yJnF1b3Q7OiZxdW90Oy5jci1saWdodGhvdXNlLWFuY2hvci1idWZmZXImcXVvdDssJnF1b3Q7ZmlsdGVyQnlLZXl3b3JkJnF1b3Q7OiZxdW90O3NpbHZlciZxdW90OywmcXVvdDt0b2dnbGVGaWx0ZXJzJnF1b3Q7OiZxdW90O3RydWUmcXVvdDssJnF1b3Q7YWxsb3dMaW5rRGVmYXVsdCZxdW90OzomcXVvdDsxJnF1b3Q7fVwiPlx1MDAzQ2EgZGF0YS1yZWZ0YWc9XCJjbV9jcl9kcF9kX2xoXzRcIiBkYXRhLXJldmlld3Mtc3RhdGUtcGFyYW09XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvS2Vtc3RvbmUtRWxlZ2FudC1NdWx0aWxheWVyLUVhcnJpbmdzLUFjY2Vzc29yeS9wcm9kdWN0LXJldmlld3MvQjAxR0tRSTM5Mi9yZWY9Y21fY3JfZHBfZF9saF80P2llPVVURjgmYW1wO2ZpbHRlckJ5S2V5d29yZD1zaWx2ZXImYW1wO3BhZ2VOdW1iZXI9MSZhbXA7cmV2aWV3ZXJUeXBlPWFsbF9yZXZpZXdzI3Jldmlld3MtZmlsdGVyLWJhclwiPlx1MDAzQ3NwYW4gaWQ9XCJjci1saWdodGhvdXNlLXRlcm0tc2lsdmVyXCIgY2xhc3M9XCJjci1saWdodGhvdXNlLXRlcm0gXCIgZGF0YS1ob29rPVwibGlnaHRob3VzZS10ZXJtXCI+XG4gICAgICAgIHNpbHZlclx1MDAzQy9zcGFuPlxuICAgIFx1MDAzQy9hPlx1MDAzQy9zcGFuPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJyZXZpZXdzOmZpbHRlci1hY3Rpb246YXBwbHlcIiBkYXRhLXJldmlld3M6ZmlsdGVyLWFjdGlvbjphcHBseT1cInsmcXVvdDtzY3JvbGxUb1NlbGVjdG9yJnF1b3Q7OiZxdW90Oy5jci1saWdodGhvdXNlLWFuY2hvci1idWZmZXImcXVvdDssJnF1b3Q7ZmlsdGVyQnlLZXl3b3JkJnF1b3Q7OiZxdW90O2VhcnJpbmcmcXVvdDssJnF1b3Q7dG9nZ2xlRmlsdGVycyZxdW90OzomcXVvdDt0cnVlJnF1b3Q7LCZxdW90O2FsbG93TGlua0RlZmF1bHQmcXVvdDs6JnF1b3Q7MSZxdW90O31cIj5cdTAwM0NhIGRhdGEtcmVmdGFnPVwiY21fY3JfZHBfZF9saF81XCIgZGF0YS1yZXZpZXdzLXN0YXRlLXBhcmFtPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL0tlbXN0b25lLUVsZWdhbnQtTXVsdGlsYXllci1FYXJyaW5ncy1BY2Nlc3NvcnkvcHJvZHVjdC1yZXZpZXdzL0IwMUdLUUkzOTIvcmVmPWNtX2NyX2RwX2RfbGhfNT9pZT1VVEY4JmFtcDtmaWx0ZXJCeUtleXdvcmQ9ZWFycmluZyZhbXA7cGFnZU51bWJlcj0xJmFtcDtyZXZpZXdlclR5cGU9YWxsX3Jldmlld3MjcmV2aWV3cy1maWx0ZXItYmFyXCI+XHUwMDNDc3BhbiBpZD1cImNyLWxpZ2h0aG91c2UtdGVybS1lYXJyaW5nXCIgY2xhc3M9XCJjci1saWdodGhvdXNlLXRlcm0gXCIgZGF0YS1ob29rPVwibGlnaHRob3VzZS10ZXJtXCI+XG4gICAgICAgIGVhcnJpbmdcdTAwM0Mvc3Bhbj5cbiAgICBcdTAwM0MvYT5cdTAwM0Mvc3Bhbj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwicmV2aWV3czpmaWx0ZXItYWN0aW9uOmFwcGx5XCIgZGF0YS1yZXZpZXdzOmZpbHRlci1hY3Rpb246YXBwbHk9XCJ7JnF1b3Q7c2Nyb2xsVG9TZWxlY3RvciZxdW90OzomcXVvdDsuY3ItbGlnaHRob3VzZS1hbmNob3ItYnVmZmVyJnF1b3Q7LCZxdW90O2ZpbHRlckJ5S2V5d29yZCZxdW90OzomcXVvdDtzdGF5JnF1b3Q7LCZxdW90O3RvZ2dsZUZpbHRlcnMmcXVvdDs6JnF1b3Q7dHJ1ZSZxdW90OywmcXVvdDthbGxvd0xpbmtEZWZhdWx0JnF1b3Q7OiZxdW90OzEmcXVvdDt9XCI+XHUwMDNDYSBkYXRhLXJlZnRhZz1cImNtX2NyX2RwX2RfbGhfNlwiIGRhdGEtcmV2aWV3cy1zdGF0ZS1wYXJhbT1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9LZW1zdG9uZS1FbGVnYW50LU11bHRpbGF5ZXItRWFycmluZ3MtQWNjZXNzb3J5L3Byb2R1Y3QtcmV2aWV3cy9CMDFHS1FJMzkyL3JlZj1jbV9jcl9kcF9kX2xoXzY/aWU9VVRGOCZhbXA7ZmlsdGVyQnlLZXl3b3JkPXN0YXkmYW1wO3BhZ2VOdW1iZXI9MSZhbXA7cmV2aWV3ZXJUeXBlPWFsbF9yZXZpZXdzI3Jldmlld3MtZmlsdGVyLWJhclwiPlx1MDAzQ3NwYW4gaWQ9XCJjci1saWdodGhvdXNlLXRlcm0tc3RheVwiIGNsYXNzPVwiY3ItbGlnaHRob3VzZS10ZXJtIFwiIGRhdGEtaG9vaz1cImxpZ2h0aG91c2UtdGVybVwiPlxuICAgICAgICBzdGF5XHUwMDNDL3NwYW4+XG4gICAgXHUwMDNDL2E+XHUwMDNDL3NwYW4+XHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cInJldmlld3M6ZmlsdGVyLWFjdGlvbjphcHBseVwiIGRhdGEtcmV2aWV3czpmaWx0ZXItYWN0aW9uOmFwcGx5PVwieyZxdW90O3Njcm9sbFRvU2VsZWN0b3ImcXVvdDs6JnF1b3Q7LmNyLWxpZ2h0aG91c2UtYW5jaG9yLWJ1ZmZlciZxdW90OywmcXVvdDtmaWx0ZXJCeUtleXdvcmQmcXVvdDs6JnF1b3Q7Ym90dG9tJnF1b3Q7LCZxdW90O3RvZ2dsZUZpbHRlcnMmcXVvdDs6JnF1b3Q7dHJ1ZSZxdW90OywmcXVvdDthbGxvd0xpbmtEZWZhdWx0JnF1b3Q7OiZxdW90OzEmcXVvdDt9XCI+XHUwMDNDYSBkYXRhLXJlZnRhZz1cImNtX2NyX2RwX2RfbGhfN1wiIGRhdGEtcmV2aWV3cy1zdGF0ZS1wYXJhbT1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9LZW1zdG9uZS1FbGVnYW50LU11bHRpbGF5ZXItRWFycmluZ3MtQWNjZXNzb3J5L3Byb2R1Y3QtcmV2aWV3cy9CMDFHS1FJMzkyL3JlZj1jbV9jcl9kcF9kX2xoXzc/aWU9VVRGOCZhbXA7ZmlsdGVyQnlLZXl3b3JkPWJvdHRvbSZhbXA7cGFnZU51bWJlcj0xJmFtcDtyZXZpZXdlclR5cGU9YWxsX3Jldmlld3MjcmV2aWV3cy1maWx0ZXItYmFyXCI+XHUwMDNDc3BhbiBpZD1cImNyLWxpZ2h0aG91c2UtdGVybS1ib3R0b21cIiBjbGFzcz1cImNyLWxpZ2h0aG91c2UtdGVybSBcIiBkYXRhLWhvb2s9XCJsaWdodGhvdXNlLXRlcm1cIj5cbiAgICAgICAgYm90dG9tXHUwMDNDL3NwYW4+XG4gICAgXHUwMDNDL2E+XHUwMDNDL3NwYW4+XHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cInJldmlld3M6ZmlsdGVyLWFjdGlvbjphcHBseVwiIGRhdGEtcmV2aWV3czpmaWx0ZXItYWN0aW9uOmFwcGx5PVwieyZxdW90O3Njcm9sbFRvU2VsZWN0b3ImcXVvdDs6JnF1b3Q7LmNyLWxpZ2h0aG91c2UtYW5jaG9yLWJ1ZmZlciZxdW90OywmcXVvdDtmaWx0ZXJCeUtleXdvcmQmcXVvdDs6JnF1b3Q7d2VhcmluZyZxdW90OywmcXVvdDt0b2dnbGVGaWx0ZXJzJnF1b3Q7OiZxdW90O3RydWUmcXVvdDssJnF1b3Q7YWxsb3dMaW5rRGVmYXVsdCZxdW90OzomcXVvdDsxJnF1b3Q7fVwiPlx1MDAzQ2EgZGF0YS1yZWZ0YWc9XCJjbV9jcl9kcF9kX2xoXzhcIiBkYXRhLXJldmlld3Mtc3RhdGUtcGFyYW09XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvS2Vtc3RvbmUtRWxlZ2FudC1NdWx0aWxheWVyLUVhcnJpbmdzLUFjY2Vzc29yeS9wcm9kdWN0LXJldmlld3MvQjAxR0tRSTM5Mi9yZWY9Y21fY3JfZHBfZF9saF84P2llPVVURjgmYW1wO2ZpbHRlckJ5S2V5d29yZD13ZWFyaW5nJmFtcDtwYWdlTnVtYmVyPTEmYW1wO3Jldmlld2VyVHlwZT1hbGxfcmV2aWV3cyNyZXZpZXdzLWZpbHRlci1iYXJcIj5cdTAwM0NzcGFuIGlkPVwiY3ItbGlnaHRob3VzZS10ZXJtLXdlYXJpbmdcIiBjbGFzcz1cImNyLWxpZ2h0aG91c2UtdGVybSBcIiBkYXRhLWhvb2s9XCJsaWdodGhvdXNlLXRlcm1cIj5cbiAgICAgICAgd2VhcmluZ1x1MDAzQy9zcGFuPlxuICAgIFx1MDAzQy9hPlx1MDAzQy9zcGFuPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJyZXZpZXdzOmZpbHRlci1hY3Rpb246YXBwbHlcIiBkYXRhLXJldmlld3M6ZmlsdGVyLWFjdGlvbjphcHBseT1cInsmcXVvdDtzY3JvbGxUb1NlbGVjdG9yJnF1b3Q7OiZxdW90Oy5jci1saWdodGhvdXNlLWFuY2hvci1idWZmZXImcXVvdDssJnF1b3Q7ZmlsdGVyQnlLZXl3b3JkJnF1b3Q7OiZxdW90O2hvb2smcXVvdDssJnF1b3Q7dG9nZ2xlRmlsdGVycyZxdW90OzomcXVvdDt0cnVlJnF1b3Q7LCZxdW90O2FsbG93TGlua0RlZmF1bHQmcXVvdDs6JnF1b3Q7MSZxdW90O31cIj5cdTAwM0NhIGRhdGEtcmVmdGFnPVwiY21fY3JfZHBfZF9saF85XCIgZGF0YS1yZXZpZXdzLXN0YXRlLXBhcmFtPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL0tlbXN0b25lLUVsZWdhbnQtTXVsdGlsYXllci1FYXJyaW5ncy1BY2Nlc3NvcnkvcHJvZHVjdC1yZXZpZXdzL0IwMUdLUUkzOTIvcmVmPWNtX2NyX2RwX2RfbGhfOT9pZT1VVEY4JmFtcDtmaWx0ZXJCeUtleXdvcmQ9aG9vayZhbXA7cGFnZU51bWJlcj0xJmFtcDtyZXZpZXdlclR5cGU9YWxsX3Jldmlld3MjcmV2aWV3cy1maWx0ZXItYmFyXCI+XHUwMDNDc3BhbiBpZD1cImNyLWxpZ2h0aG91c2UtdGVybS1ob29rXCIgY2xhc3M9XCJjci1saWdodGhvdXNlLXRlcm0gXCIgZGF0YS1ob29rPVwibGlnaHRob3VzZS10ZXJtXCI+XG4gICAgICAgIGhvb2tcdTAwM0Mvc3Bhbj5cbiAgICBcdTAwM0MvYT5cdTAwM0Mvc3Bhbj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwicmV2aWV3czpmaWx0ZXItYWN0aW9uOmFwcGx5XCIgZGF0YS1yZXZpZXdzOmZpbHRlci1hY3Rpb246YXBwbHk9XCJ7JnF1b3Q7c2Nyb2xsVG9TZWxlY3RvciZxdW90OzomcXVvdDsuY3ItbGlnaHRob3VzZS1hbmNob3ItYnVmZmVyJnF1b3Q7LCZxdW90O2ZpbHRlckJ5S2V5d29yZCZxdW90OzomcXVvdDttZXRhbCZxdW90OywmcXVvdDt0b2dnbGVGaWx0ZXJzJnF1b3Q7OiZxdW90O3RydWUmcXVvdDssJnF1b3Q7YWxsb3dMaW5rRGVmYXVsdCZxdW90OzomcXVvdDsxJnF1b3Q7fVwiPlx1MDAzQ2EgZGF0YS1yZWZ0YWc9XCJjbV9jcl9kcF9kX2xoXzEwXCIgZGF0YS1yZXZpZXdzLXN0YXRlLXBhcmFtPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL0tlbXN0b25lLUVsZWdhbnQtTXVsdGlsYXllci1FYXJyaW5ncy1BY2Nlc3NvcnkvcHJvZHVjdC1yZXZpZXdzL0IwMUdLUUkzOTIvcmVmPWNtX2NyX2RwX2RfbGhfMTA/aWU9VVRGOCZhbXA7ZmlsdGVyQnlLZXl3b3JkPW1ldGFsJmFtcDtwYWdlTnVtYmVyPTEmYW1wO3Jldmlld2VyVHlwZT1hbGxfcmV2aWV3cyNyZXZpZXdzLWZpbHRlci1iYXJcIj5cdTAwM0NzcGFuIGlkPVwiY3ItbGlnaHRob3VzZS10ZXJtLW1ldGFsXCIgY2xhc3M9XCJjci1saWdodGhvdXNlLXRlcm0gXCIgZGF0YS1ob29rPVwibGlnaHRob3VzZS10ZXJtXCI+XG4gICAgICAgIG1ldGFsXHUwMDNDL3NwYW4+XG4gICAgXHUwMDNDL2E+XHUwMDNDL3NwYW4+XHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cInJldmlld3M6ZmlsdGVyLWFjdGlvbjphcHBseVwiIGRhdGEtcmV2aWV3czpmaWx0ZXItYWN0aW9uOmFwcGx5PVwieyZxdW90O3Njcm9sbFRvU2VsZWN0b3ImcXVvdDs6JnF1b3Q7LmNyLWxpZ2h0aG91c2UtYW5jaG9yLWJ1ZmZlciZxdW90OywmcXVvdDtmaWx0ZXJCeUtleXdvcmQmcXVvdDs6JnF1b3Q7c2hhcGUmcXVvdDssJnF1b3Q7dG9nZ2xlRmlsdGVycyZxdW90OzomcXVvdDt0cnVlJnF1b3Q7LCZxdW90O2FsbG93TGlua0RlZmF1bHQmcXVvdDs6JnF1b3Q7MSZxdW90O31cIj5cdTAwM0NhIGRhdGEtcmVmdGFnPVwiY21fY3JfZHBfZF9saF8xMVwiIGRhdGEtcmV2aWV3cy1zdGF0ZS1wYXJhbT1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9LZW1zdG9uZS1FbGVnYW50LU11bHRpbGF5ZXItRWFycmluZ3MtQWNjZXNzb3J5L3Byb2R1Y3QtcmV2aWV3cy9CMDFHS1FJMzkyL3JlZj1jbV9jcl9kcF9kX2xoXzExP2llPVVURjgmYW1wO2ZpbHRlckJ5S2V5d29yZD1zaGFwZSZhbXA7cGFnZU51bWJlcj0xJmFtcDtyZXZpZXdlclR5cGU9YWxsX3Jldmlld3MjcmV2aWV3cy1maWx0ZXItYmFyXCI+XHUwMDNDc3BhbiBpZD1cImNyLWxpZ2h0aG91c2UtdGVybS1zaGFwZVwiIGNsYXNzPVwiY3ItbGlnaHRob3VzZS10ZXJtIFwiIGRhdGEtaG9vaz1cImxpZ2h0aG91c2UtdGVybVwiPlxuICAgICAgICBzaGFwZVx1MDAzQy9zcGFuPlxuICAgIFx1MDAzQy9hPlx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XG5cblx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL3NwYW4+XG4gIFx1MDAzQ3NwYW4gY2xhc3M9XCJjci13aWRnZXQtRm9jYWxSZXZpZXdzXCIgZGF0YS1ob29rPVwiY3Itd2lkZ2V0LUZvY2FsUmV2aWV3c1wiPlxuICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1sYXJnZVwiPlx1MDAzQ2RpdiBjbGFzcz1cImNhcmQtcGFkZGluZ1wiPlxuICAgIFx1MDAzQ2EgaWQ9XCJjdXN0b21lci1yZXZpZXdzLWNvbnRlbnRcIiBhcmlhLWxhYmVsPVwiVG9wIFJldmlld3NcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgY2Vsd2lkZ2V0XCIgaHJlZj1cIiNcIj5cdTAwM0MvYT5cdTAwM0NkaXYgaWQ9XCJjbS1jci1kcC1yZXZpZXctaGVhZGVyXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsXCI+XHUwMDNDaDMgY2xhc3M9XCJhLXNwYWNpbmctc21hbGxcIj5cdTAwM0NzcGFuIGRhdGEtaG9vaz1cInRvcC1jdXN0b21lci1yZXZpZXdzLXRpdGxlXCIgY2xhc3M9XCJhLXNpemUtYmFzZVwiPjEyMSBjdXN0b21lciByZXZpZXdzXHUwMDNDL3NwYW4+XHUwMDNDL2gzPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGlkPVwiY20tY3ItZHAtcmV2aWV3LXNvcnQtdHlwZVwiIGRhdGEtcmVmdGFnPVwiY21fY3JfZHBfZF9mbHRyc19zcnRcIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctc21hbGxcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwicmV2aWV3czpmaWx0ZXItYWN0aW9uOmNoYW5nZVwiIGRhdGEtcmV2aWV3czpmaWx0ZXItYWN0aW9uOmNoYW5nZT1cInsmcXVvdDtmaWx0ZXJUeXBlJnF1b3Q7OiZxdW90O3NvcnRPcmRlciZxdW90O31cIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1kcm9wZG93bi1jb250YWluZXJcIj5cdTAwM0NzZWxlY3QgbmFtZT1cIlwiIGF1dG9jb21wbGV0ZT1cIm9mZlwiIGlkPVwiY20tY3Itc29ydC1kcm9wZG93blwiIHRhYmluZGV4PVwiLTFcIiBjbGFzcz1cImEtbmF0aXZlLWRyb3Bkb3duXCI+XHUwMDNDb3B0aW9uIHZhbHVlPVwiaGVscGZ1bFwiIGRhdGEtYS1jc3MtY2xhc3M9XCJjbS1jci1zb3J0LW9yZGVyLW9wdGlvblwiIHNlbGVjdGVkPVwiXCI+VG9wIFJldmlld3NcdTAwM0Mvb3B0aW9uPlx1MDAzQ29wdGlvbiB2YWx1ZT1cInJlY2VudFwiIGRhdGEtYS1jc3MtY2xhc3M9XCJjbS1jci1zb3J0LW9yZGVyLW9wdGlvblwiPk1vc3QgcmVjZW50XHUwMDNDL29wdGlvbj5cdTAwM0Mvc2VsZWN0Plx1MDAzQ3NwYW4gdGFiaW5kZXg9XCItMVwiIGRhdGEtYS1jbGFzcz1cImNtLWNyLWRwLWZpbHRlci1kcm9wZG93blwiIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24tZHJvcGRvd24gYS1idXR0b24tc21hbGwgY20tY3ItZHAtZmlsdGVyLWRyb3Bkb3duXCIgaWQ9XCJhLWF1dG9pZC0yMVwiIHN0eWxlPVwibWluLXdpZHRoOiAwJTtcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24taW5uZXJcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24tdGV4dCBhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLWRyb3Bkb3duLWJ1dHRvblwiIHJvbGU9XCJidXR0b25cIiB0YWJpbmRleD1cIjBcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBpZD1cImEtYXV0b2lkLTIxLWFubm91bmNlXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtZHJvcGRvd24tcHJvbXB0XCI+VG9wIFJldmlld3NcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1kcm9wZG93blwiPlx1MDAzQy9pPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDc3BhbiBjbGFzcz1cImNyLXRyYW5zbGF0ZS1jdGFcIj5cbiAgXHUwMDNDL3NwYW4+XG5cbiAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLWV4dHJhLWxhcmdlIGEtc3BhY2luZy10b3AtbWVkaXVtIGEtdGV4dC1jZW50ZXIgcmV2aWV3LWxvYWQtZXJyb3IgYW9rLWhpZGRlblwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtYm94IGEtYWxlcnQgYS1hbGVydC1lcnJvciBjci1lcnJvclwiIGFyaWEtbGl2ZT1cImFzc2VydGl2ZVwiIHJvbGU9XCJhbGVydFwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtYm94LWlubmVyIGEtYWxlcnQtY29udGFpbmVyXCI+XHUwMDNDaDQgY2xhc3M9XCJhLWFsZXJ0LWhlYWRpbmdcIj5UaGVyZSB3YXMgYSBwcm9ibGVtIGZpbHRlcmluZyByZXZpZXdzIHJpZ2h0IG5vdy4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlci5cdTAwM0MvaDQ+XHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tYWxlcnRcIj5cdTAwM0MvaT5cdTAwM0NkaXYgY2xhc3M9XCJhLWFsZXJ0LWNvbnRlbnRcIj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBpZD1cImNtLWNyLWRwLXJldmlld3MtbG9hZGluZy13cmFwcGVyXCIgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctbWVkaXVtIGFvay1oaWRkZW5cIj5cdTAwM0NkaXYgY2xhc3M9XCJhLXNwaW5uZXItd3JhcHBlciBjci1yZXZpZXdzLWxvYWRpbmcgYW9rLWhpZGRlblwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNwaW5uZXIgYS1zcGlubmVyLW1lZGl1bVwiPlx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLWV4dHJhLWxhcmdlIHJldmlld3MtY29udGVudCBmaWx0ZXJhYmxlLXJldmlld3MtY29udGVudCBjZWx3aWRnZXRcIj5cdTAwM0NkaXYgaWQ9XCJjbS1jci1kcC1yZXZpZXctbGlzdFwiIGRhdGEtaG9vaz1cInRvcC1jdXN0b21lci1yZXZpZXdzLXdpZGdldFwiIGNsYXNzPVwiYS1zZWN0aW9uIHJldmlldy12aWV3cyBjZWx3aWRnZXRcIj5cdTAwM0NkaXYgaWQ9XCJSMUVCWlEzOTgyRVM2SVwiIGRhdGEtaG9vaz1cInJldmlld1wiIGNsYXNzPVwiYS1zZWN0aW9uIHJldmlldyBhb2stcmVsYXRpdmVcIj5cdTAwM0NkaXYgaWQ9XCJSMUVCWlEzOTgyRVM2SS1yZXZpZXctY2FyZFwiIGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW5vbmVcIj5cdTAwM0NkaXYgaWQ9XCJjdXN0b21lcl9yZXZpZXctUjFFQlpRMzk4MkVTNklcIiBjbGFzcz1cImEtc2VjdGlvbiBjZWx3aWRnZXRcIj5cdTAwM0NkaXYgZGF0YS1ob29rPVwiZ2Vub21lLXdpZGdldFwiIGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW1pbmlcIj5cdTAwM0NhIGhyZWY9XCIvZ3AvcHJvZmlsZS9hbXpuMS5hY2NvdW50LkFGQlREREVLNERWNFdXS0VKTURNT09SNVNDN1EvcmVmPWNtX2NyX2RwX2RfZ3dfdHI/aWU9VVRGOFwiIGNsYXNzPVwiYS1wcm9maWxlXCIgZGF0YS1hLXNpemU9XCJzbWFsbFwiPlx1MDAzQ2RpdiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cImEtcHJvZmlsZS1hdmF0YXItd3JhcHBlclwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtcHJvZmlsZS1hdmF0YXJcIj5cdTAwM0NpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL3gtbG9jYWxlL2NvbW1vbi9ncmV5LXBpeGVsLmdpZlwiIGNsYXNzPVwiYS1sYXp5LWxvYWRlZFwiIGRhdGEtc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9TL2FtYXpvbi1hdmF0YXJzL2RlZmF1bHQuX0NSMCwwLDEwMjQsMTAyNF9TWDQ4Xy5wbmdcIj5cdTAwM0Nub3NjcmlwdD5cdTAwM0NpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9TL2FtYXpvbi1hdmF0YXJzL2RlZmF1bHQuX0NSMCwwLDEwMjQsMTAyNF9TWDQ4Xy5wbmdcIi8+XHUwMDNDL25vc2NyaXB0Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLXByb2ZpbGUtY29udGVudFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXByb2ZpbGUtbmFtZVwiPlNhblNcdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQy9hPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj5cdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIHRpdGxlPVwiNC4wIG91dCBvZiA1IHN0YXJzXCIgaHJlZj1cIi9ncC9jdXN0b21lci1yZXZpZXdzL1IxRUJaUTM5ODJFUzZJL3JlZj1jbV9jcl9kcF9kX3J2d190dGw/aWU9VVRGOCZhbXA7QVNJTj1CMDFHS1FJMzkyXCI+XHUwMDNDaSBkYXRhLWhvb2s9XCJyZXZpZXctc3Rhci1yYXRpbmdcIiBjbGFzcz1cImEtaWNvbiBhLWljb24tc3RhciBhLXN0YXItNCByZXZpZXctcmF0aW5nXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj40LjAgb3V0IG9mIDUgc3RhcnNcdTAwM0Mvc3Bhbj5cdTAwM0MvaT5cdTAwM0MvYT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1sZXR0ZXItc3BhY2VcIj5cdTAwM0Mvc3Bhbj5cdTAwM0NhIGRhdGEtaG9vaz1cInJldmlldy10aXRsZVwiIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1saW5rLW5vcm1hbCByZXZpZXctdGl0bGUgYS1jb2xvci1iYXNlIHJldmlldy10aXRsZS1jb250ZW50IGEtdGV4dC1ib2xkXCIgaHJlZj1cIi9ncC9jdXN0b21lci1yZXZpZXdzL1IxRUJaUTM5ODJFUzZJL3JlZj1jbV9jcl9kcF9kX3J2d190dGw/aWU9VVRGOCZhbXA7QVNJTj1CMDFHS1FJMzkyXCI+XHUwMDNDc3BhbiBjbGFzcz1cIlwiPkVhY2ggaW5kaXZpZHVhbCByaW5nIHdpdGhpbiB0aGUgZWFycmluZyBjYW4gYmUgZmxpcHBlZC5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgIFx1MDAzQy9hPlx1MDAzQy9kaXY+XHUwMDNDc3BhbiBkYXRhLWhvb2s9XCJyZXZpZXctZGF0ZVwiIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1zZWNvbmRhcnkgcmV2aWV3LWRhdGVcIj5NYXJjaCA2LCAyMDE4XHUwMDNDL3NwYW4+XHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW1pbmkgcmV2aWV3LWRhdGEgcmV2aWV3LWZvcm1hdC1zdHJpcFwiPlx1MDAzQ3NwYW4gZGF0YS1ob29rPVwiYXZwLWJhZGdlLWxpbmtsZXNzXCIgY2xhc3M9XCJhLXNpemUtbWluaSBhLWNvbG9yLXN0YXRlIGEtdGV4dC1ib2xkXCI+VmVyaWZpZWQgUHVyY2hhc2VcdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtc3BhY2luZy1zbWFsbCByZXZpZXctZGF0YVwiPlx1MDAzQ3NwYW4gZGF0YS1ob29rPVwicmV2aWV3LWJvZHlcIiBjbGFzcz1cImEtc2l6ZS1iYXNlIHJldmlldy10ZXh0XCI+XHUwMDNDZGl2IGFyaWEtbGl2ZT1cInBvbGl0ZVwiIGRhdGEtYS1leHBhbmRlci1uYW1lPVwicmV2aWV3X3RleHRfcmVhZF9tb3JlXCIgZGF0YS1hLWV4cGFuZGVyLWNvbGxhcHNlZC1oZWlnaHQ9XCIzMDBcIiBjbGFzcz1cImEtZXhwYW5kZXItY29sbGFwc2VkLWhlaWdodCBhLXJvdyBhLWV4cGFuZGVyLWNvbnRhaW5lciBhLWV4cGFuZGVyLXBhcnRpYWwtY29sbGFwc2UtY29udGFpbmVyXCIgc3R5bGU9XCJtYXgtaGVpZ2h0OjMwMHB4XCI+XHUwMDNDZGl2IGRhdGEtaG9vaz1cInJldmlldy1jb2xsYXBzZWRcIiBhcmlhLWV4cGFuZGVkPVwiZmFsc2VcIiBjbGFzcz1cImEtZXhwYW5kZXItY29udGVudCByZXZpZXdUZXh0IHJldmlldy10ZXh0LWNvbnRlbnQgYS1leHBhbmRlci1wYXJ0aWFsLWNvbGxhcHNlLWNvbnRlbnRcIj5cdTAwM0NzcGFuIGNsYXNzPVwiXCI+SXQgdG9vayBtZSBhIGZldyBtaW51dGVzIHRvIGZpZ3VyZSBvdXQgdGhlc2UgZWFycmluZ3MgYXMgd2hlbiB0aGV5IGNhbWUgc29tZSBvZiB0aGUgaW5kaXZpZHVhbCByaW5ncyBoYWQgdGhlIHBvaW50ZWQgdGlwcyBhdCB0aGUgdG9wIGFuZCBzb21lIGF0IHRoZSBib3R0b20uIEkgcGxheWVkIHdpdGggdGhlbSBhIGxpdHRsZSBhbmQgZGlzY292ZXJlZCB5b3UgY2FuIHdlYXIgdGhlbSBhcyB1cHNpZGUgZG93biB0ZWFyZHJvcHMgb3IgcmlnaHQgc2lkZSB1cCB0ZWFyZHJvcHMgYnkgdHVybmluZyBvciBmbGlwcGluZyBlYWNoIHJpbmcuIFRoZSBlYXJyaW5ncyB0aGVtc2VsdmVzIGFyZSBleGFjdGx5IGxpa2UgdGhlIHBpY3R1cmVzIHNob3cgYW5kIHZlcnkgcHJldHR5IGFuZCBmbGFzaHkuIE9ubHkgZG93bnNpZGUgZm9yIG1lIGlzIHRoZXkgYXJlIGhlYXZpZXIgdGhhbiBJIGxpa2Ugc28gSSByYXRlZCB0aGVtIDQgc3RhcnMuXHUwMDNDL3NwYW4+XG4gIFx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1leHBhbmRlci1oZWFkZXIgYS1leHBhbmRlci1wYXJ0aWFsLWNvbGxhcHNlLWhlYWRlclwiIHN0eWxlPVwib3BhY2l0eTogMDsgZGlzcGxheTogbm9uZTtcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWV4cGFuZGVyLWNvbnRlbnQtZmFkZVwiPlx1MDAzQy9kaXY+XHUwMDNDYSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgZGF0YS1ob29rPVwiZXhwYW5kLWNvbGxhcHNlLXJlYWQtbW9yZS1sZXNzXCIgZGF0YS1hY3Rpb249XCJhLWV4cGFuZGVyLXRvZ2dsZVwiIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYS1leHBhbmRlci10b2dnbGU9XCJ7JnF1b3Q7YWxsb3dMaW5rRGVmYXVsdCZxdW90Ozp0cnVlLCAmcXVvdDtleHBhbmRfcHJvbXB0JnF1b3Q7OiZxdW90O1JlYWQgbW9yZSZxdW90OywgJnF1b3Q7Y29sbGFwc2VfcHJvbXB0JnF1b3Q7OiZxdW90O1JlYWQgbGVzcyZxdW90O31cIj5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1leHRlbmRlci1leHBhbmRcIj5cdTAwM0MvaT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1leHBhbmRlci1wcm9tcHRcIj5SZWFkIG1vcmVcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgZGF0YS1ob29rPVwicmV2aWV3LWNvbW1lbnRzXCIgY2xhc3M9XCJhLXJvdyByZXZpZXctY29tbWVudHMgY3Itdm90ZS1hY3Rpb24tYmFyXCI+XHUwMDNDc3BhbiBjbGFzcz1cImNyLXZvdGVcIiBkYXRhLWhvb2s9XCJyZXZpZXctdm90aW5nLXdpZGdldFwiPlxuICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctc21hbGxcIj5cdTAwM0NzcGFuIGRhdGEtaG9vaz1cImhlbHBmdWwtdm90ZS1zdGF0ZW1lbnRcIiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItdGVydGlhcnkgY3Itdm90ZS10ZXh0XCI+MTEgcGVvcGxlIGZvdW5kIHRoaXMgaGVscGZ1bFx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiY3ItaGVscGZ1bC1idXR0b24gYW9rLWZsb2F0LWxlZnRcIj5cbiAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbiBhLWJ1dHRvbi1iYXNlXCIgaWQ9XCJhLWF1dG9pZC0yMlwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi1pbm5lclwiPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vYXAvc2lnbmluP29wZW5pZC5yZXR1cm5fdG89aHR0cHMlM0ElMkYlMkZ3d3cuYW1hem9uLmNvbSUyRmRwJTJGQjAxR0tRSTM5MiUyRnJlZiUzRGNtX2NyX2RwX2Rfdm90ZV9sZnQlM0ZpZSUzRFVURjglMjZ2b3RlSW5zdGFuY2VJZCUzRFIxRUJaUTM5ODJFUzZJJTI2dm90ZVZhbHVlJTNEMSUyNmNzcmZUJTNEZ25sNDN2RHR2a2hIbXRYdU1MT1l6MG9uZE01U1NsOTlMWjAlMjUyRlk0Y0FBQUFCQUFBQUFGMlJLSXh5WVhjQUFBQUElMjUyQjRrVUVrJTI1MkY3aU1HUjN4UGNYNmlVJTIzUjFFQlpRMzk4MkVTNkkmYW1wO29wZW5pZC5pZGVudGl0eT1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAlMkZpZGVudGlmaWVyX3NlbGVjdCZhbXA7b3BlbmlkLmNsYWltZWRfaWQ9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wJTJGaWRlbnRpZmllcl9zZWxlY3QmYW1wO29wZW5pZC5hc3NvY19oYW5kbGU9dXNmbGV4JmFtcDtvcGVuaWQubW9kZT1jaGVja2lkX3NldHVwJmFtcDtvcGVuaWQubnM9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wXCIgZGF0YS1ob29rPVwidm90ZS1oZWxwZnVsLWJ1dHRvblwiIGNsYXNzPVwiYS1idXR0b24tdGV4dFwiIHJvbGU9XCJidXR0b25cIiBpZD1cImEtYXV0b2lkLTIyLWFubm91bmNlXCI+XHUwMDNDZGl2IGNsYXNzPVwiY3ItaGVscGZ1bC10ZXh0XCI+XG4gICAgICAgICAgSGVscGZ1bFx1MDAzQy9kaXY+XG4gICAgICBcdTAwM0MvYT5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2PlxuICBcdTAwM0Mvc3Bhbj5cblxuXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tdGV4dC1zZXBhcmF0b3JcIiByb2xlPVwiaW1nXCIgYXJpYS1sYWJlbD1cInxcIj5cdTAwM0MvaT5cdTAwM0NhIGRhdGEtaG9vaz1cInJldmlldy1jb21tZW50XCIgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWxpbmstbm9ybWFsIGEtY29sb3Itc2Vjb25kYXJ5IGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL2dwL2N1c3RvbWVyLXJldmlld3MvUjFFQlpRMzk4MkVTNkkvcmVmPWNtX2NyX2RwX2RfcnZ3X2J0bT9pZT1VVEY4JmFtcDtBU0lOPUIwMUdLUUkzOTIjd2FzVGhpc0hlbHBmdWxcIj5Db21tZW50XHUwMDNDL2E+XHUwMDNDc3BhbiBjbGFzcz1cImNyLWZvb3Rlci1saW5lLWhlaWdodFwiPlxuICAgICAgXHUwMDNDc3Bhbj5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi10ZXh0LXNlcGFyYXRvclwiIHJvbGU9XCJpbWdcIiBhcmlhLWxhYmVsPVwifFwiPlx1MDAzQy9pPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJjci1wb3B1cFwiIGRhdGEtY3ItcG9wdXA9XCJ7JnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7NTgwJnF1b3Q7LCZxdW90O3RpdGxlJnF1b3Q7OiZxdW90O1JlcG9ydEFidXNlJnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvaHovcmV2aWV3cy1yZW5kZXIvcmVwb3J0LWFidXNlP2llPVVURjgmYW1wO3ZvdGVEb21haW49UmV2aWV3cyZhbXA7cmVmPWNtX2NyX2RwX2RfcnZ3X2hscCZhbXA7Y3NyZlQ9Z25sNDN2RHR2a2hIbXRYdU1MT1l6MG9uZE01U1NsOTlMWjAlMkZZNGNBQUFBQkFBQUFBRjJSS0l4eVlYY0FBQUFBJTJCNGtVRWslMkY3aU1HUjN4UGNYNmlVJmFtcDtlbnRpdHlJZD1SMUVCWlEzOTgyRVM2SSZhbXA7c2Vzc2lvbklkPTE0NS04OTc1MzkwLTUwNjQxMTMmcXVvdDssJnF1b3Q7aGVpZ2h0JnF1b3Q7OiZxdW90OzM4MCZxdW90O31cIj5cdTAwM0NhIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1saW5rLW5vcm1hbCBhLWNvbG9yLXNlY29uZGFyeSByZXBvcnQtYWJ1c2UtbGluayBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9oei9yZXZpZXdzLXJlbmRlci9yZXBvcnQtYWJ1c2U/aWU9VVRGOCZhbXA7dm90ZURvbWFpbj1SZXZpZXdzJmFtcDtyZWY9Y21fY3JfZHBfZF9ydndfaGxwJmFtcDtjc3JmVD1nbmw0M3ZEdHZraEhtdFh1TUxPWXowb25kTTVTU2w5OUxaMCUyRlk0Y0FBQUFCQUFBQUFGMlJLSXh5WVhjQUFBQUElMkI0a1VFayUyRjdpTUdSM3hQY1g2aVUmYW1wO2VudGl0eUlkPVIxRUJaUTM5ODJFUzZJJmFtcDtzZXNzaW9uSWQ9MTQ1LTg5NzUzOTAtNTA2NDExM1wiPlJlcG9ydCBhYnVzZVx1MDAzQy9hPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlxuICBcdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBpZD1cIlIyRkdFU1VCV0xFVENcIiBkYXRhLWhvb2s9XCJyZXZpZXdcIiBjbGFzcz1cImEtc2VjdGlvbiByZXZpZXcgYW9rLXJlbGF0aXZlXCI+XHUwMDNDZGl2IGlkPVwiUjJGR0VTVUJXTEVUQy1yZXZpZXctY2FyZFwiIGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW5vbmVcIj5cdTAwM0NkaXYgaWQ9XCJjdXN0b21lcl9yZXZpZXctUjJGR0VTVUJXTEVUQ1wiIGNsYXNzPVwiYS1zZWN0aW9uIGNlbHdpZGdldFwiPlx1MDAzQ2RpdiBkYXRhLWhvb2s9XCJnZW5vbWUtd2lkZ2V0XCIgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctbWluaVwiPlx1MDAzQ2EgaHJlZj1cIi9ncC9wcm9maWxlL2Ftem4xLmFjY291bnQuQUhRTVNTWVBCR0tTVEZCQ1VHTTdHVElHSFFDQS9yZWY9Y21fY3JfZHBfZF9nd190cj9pZT1VVEY4XCIgY2xhc3M9XCJhLXByb2ZpbGVcIiBkYXRhLWEtc2l6ZT1cInNtYWxsXCI+XHUwMDNDZGl2IGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGNsYXNzPVwiYS1wcm9maWxlLWF2YXRhci13cmFwcGVyXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1wcm9maWxlLWF2YXRhclwiPlx1MDAzQ2ltZyBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEveC1sb2NhbGUvY29tbW9uL2dyZXktcGl4ZWwuZ2lmXCIgY2xhc3M9XCJhLWxhenktbG9hZGVkXCIgZGF0YS1zcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL1MvYW1hem9uLWF2YXRhcnMvMGY1ZTFhNTgtYmJiOC00MjUwLWI5MjItNTAyYmUzMTM3YTFhLl9DUjYyLDAsMzc1LDM3NV9TWDQ4Xy5qcGdcIj5cdTAwM0Nub3NjcmlwdD5cdTAwM0NpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9TL2FtYXpvbi1hdmF0YXJzLzBmNWUxYTU4LWJiYjgtNDI1MC1iOTIyLTUwMmJlMzEzN2ExYS5fQ1I2MiwwLDM3NSwzNzVfU1g0OF8uanBnXCIvPlx1MDAzQy9ub3NjcmlwdD5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1wcm9maWxlLWNvbnRlbnRcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1wcm9maWxlLW5hbWVcIj5zYXNzeVx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDL2E+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGl0bGU9XCI1LjAgb3V0IG9mIDUgc3RhcnNcIiBocmVmPVwiL2dwL2N1c3RvbWVyLXJldmlld3MvUjJGR0VTVUJXTEVUQy9yZWY9Y21fY3JfZHBfZF9ydndfdHRsP2llPVVURjgmYW1wO0FTSU49QjAxR0tRSTM5MlwiPlx1MDAzQ2kgZGF0YS1ob29rPVwicmV2aWV3LXN0YXItcmF0aW5nXCIgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXIgYS1zdGFyLTUgcmV2aWV3LXJhdGluZ1wiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWljb24tYWx0XCI+NS4wIG91dCBvZiA1IHN0YXJzXHUwMDNDL3NwYW4+XHUwMDNDL2k+XHUwMDNDL2E+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGV0dGVyLXNwYWNlXCI+XHUwMDNDL3NwYW4+XHUwMDNDYSBkYXRhLWhvb2s9XCJyZXZpZXctdGl0bGVcIiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtbGluay1ub3JtYWwgcmV2aWV3LXRpdGxlIGEtY29sb3ItYmFzZSByZXZpZXctdGl0bGUtY29udGVudCBhLXRleHQtYm9sZFwiIGhyZWY9XCIvZ3AvY3VzdG9tZXItcmV2aWV3cy9SMkZHRVNVQldMRVRDL3JlZj1jbV9jcl9kcF9kX3J2d190dGw/aWU9VVRGOCZhbXA7QVNJTj1CMDFHS1FJMzkyXCI+XHUwMDNDc3BhbiBjbGFzcz1cIlwiPkJlYXV0aWZ1bCBhbmQgbWFkZSB3ZWxsXHUwMDNDL3NwYW4+XG4gICAgICAgICAgICBcdTAwM0MvYT5cdTAwM0MvZGl2Plx1MDAzQ3NwYW4gZGF0YS1ob29rPVwicmV2aWV3LWRhdGVcIiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5IHJldmlldy1kYXRlXCI+SmFudWFyeSAyMCwgMjAxOFx1MDAzQy9zcGFuPlx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtc3BhY2luZy1taW5pIHJldmlldy1kYXRhIHJldmlldy1mb3JtYXQtc3RyaXBcIj5cdTAwM0NzcGFuIGRhdGEtaG9vaz1cImF2cC1iYWRnZS1saW5rbGVzc1wiIGNsYXNzPVwiYS1zaXplLW1pbmkgYS1jb2xvci1zdGF0ZSBhLXRleHQtYm9sZFwiPlZlcmlmaWVkIFB1cmNoYXNlXHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctc21hbGwgcmV2aWV3LWRhdGFcIj5cdTAwM0NzcGFuIGRhdGEtaG9vaz1cInJldmlldy1ib2R5XCIgY2xhc3M9XCJhLXNpemUtYmFzZSByZXZpZXctdGV4dFwiPlx1MDAzQ2RpdiBhcmlhLWxpdmU9XCJwb2xpdGVcIiBkYXRhLWEtZXhwYW5kZXItbmFtZT1cInJldmlld190ZXh0X3JlYWRfbW9yZVwiIGRhdGEtYS1leHBhbmRlci1jb2xsYXBzZWQtaGVpZ2h0PVwiMzAwXCIgY2xhc3M9XCJhLWV4cGFuZGVyLWNvbGxhcHNlZC1oZWlnaHQgYS1yb3cgYS1leHBhbmRlci1jb250YWluZXIgYS1leHBhbmRlci1wYXJ0aWFsLWNvbGxhcHNlLWNvbnRhaW5lclwiIHN0eWxlPVwibWF4LWhlaWdodDozMDBweFwiPlx1MDAzQ2RpdiBkYXRhLWhvb2s9XCJyZXZpZXctY29sbGFwc2VkXCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCIgY2xhc3M9XCJhLWV4cGFuZGVyLWNvbnRlbnQgcmV2aWV3VGV4dCByZXZpZXctdGV4dC1jb250ZW50IGEtZXhwYW5kZXItcGFydGlhbC1jb2xsYXBzZS1jb250ZW50XCI+XHUwMDNDc3BhbiBjbGFzcz1cIlwiPkkgcHVyY2hhc2VkIHRoZXNlIGZvciBteSBzaXN0ZXIgbiBsYXcgZm9yIENocmlzdG1hcyBhbmQgd2FzIHF1aXRlIHN1cnByaXNlZCBob3cgYmVhdXRpZnVsIHRoZXkgYXJlLiAgSSBhbG1vc3Qga2VwdCB0aGVtICwgYnV0IHNoZSBsb3ZlcyBkYW5nbGVzIGFuZCB3YXMgc28gZXhjaXRlZCB3aGVuIHNoZSBvcGVuZWQgdGhhdCBwcmV0dHkgYm94IHRoZXkgY2FtZSBpbiAgYW5kIHRvdGFsbHkgbGl2ZSB0aGVtLiBEcmVzc3ksIGNhc3VhbCBhbmQgbWFkZSB3ZWxsLiBTaGUgbGl2ZXMgaW4gQ2FuYWRhIGFuZCBJJ3ZlIG5ldmVyIG1ldCBoZXIsIGFuZCBteSBicm90aGVyIG4gbGF3IHNheXMgc2hlIGwgSSBuZWVkIGRhbmdsZSBvbmUncy4gIEkgbGF1Z2hlZCBzbyBoYXJkIHdoZW4gaGUgc2FpZCB0aGF0IGNvbnNpZGVyaW5nIGhlJ3MgbmV2ZXIgcHVyY2hhc2VkIGVhcnJpbmdzIGJlZm9yZS4gIFRoaXMgcGljdHVyZSBoZXJlIGRvZXMgbm90IHNob3cgdGhlIGJlYXV0eSBvZiB0aGVtLCBJIGd1ZXNzIHRoYXQncyB3aHkgSSB3YXMgZGVsaWdodGVkIHNcdTAwM0Nicj5XaGVuIHRoZXkgY2FtZS5cdTAwM0Mvc3Bhbj5cbiAgXHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLWV4cGFuZGVyLWhlYWRlciBhLWV4cGFuZGVyLXBhcnRpYWwtY29sbGFwc2UtaGVhZGVyXCIgc3R5bGU9XCJvcGFjaXR5OiAwOyBkaXNwbGF5OiBub25lO1wiPlx1MDAzQ2RpdiBjbGFzcz1cImEtZXhwYW5kZXItY29udGVudC1mYWRlXCI+XHUwMDNDL2Rpdj5cdTAwM0NhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiBkYXRhLWhvb2s9XCJleHBhbmQtY29sbGFwc2UtcmVhZC1tb3JlLWxlc3NcIiBkYXRhLWFjdGlvbj1cImEtZXhwYW5kZXItdG9nZ2xlXCIgY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hLWV4cGFuZGVyLXRvZ2dsZT1cInsmcXVvdDthbGxvd0xpbmtEZWZhdWx0JnF1b3Q7OnRydWUsICZxdW90O2V4cGFuZF9wcm9tcHQmcXVvdDs6JnF1b3Q7UmVhZCBtb3JlJnF1b3Q7LCAmcXVvdDtjb2xsYXBzZV9wcm9tcHQmcXVvdDs6JnF1b3Q7UmVhZCBsZXNzJnF1b3Q7fVwiPlx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLWV4dGVuZGVyLWV4cGFuZFwiPlx1MDAzQy9pPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWV4cGFuZGVyLXByb21wdFwiPlJlYWQgbW9yZVx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBkYXRhLWhvb2s9XCJyZXZpZXctY29tbWVudHNcIiBjbGFzcz1cImEtcm93IHJldmlldy1jb21tZW50cyBjci12b3RlLWFjdGlvbi1iYXJcIj5cdTAwM0NzcGFuIGNsYXNzPVwiY3Itdm90ZVwiIGRhdGEtaG9vaz1cInJldmlldy12b3Rpbmctd2lkZ2V0XCI+XG4gIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtc3BhY2luZy1zbWFsbFwiPlx1MDAzQ3NwYW4gZGF0YS1ob29rPVwiaGVscGZ1bC12b3RlLXN0YXRlbWVudFwiIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci10ZXJ0aWFyeSBjci12b3RlLXRleHRcIj41IHBlb3BsZSBmb3VuZCB0aGlzIGhlbHBmdWxcdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImNyLWhlbHBmdWwtYnV0dG9uIGFvay1mbG9hdC1sZWZ0XCI+XG4gICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24tYmFzZVwiIGlkPVwiYS1hdXRvaWQtMjNcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24taW5uZXJcIj5cdTAwM0NhIGhyZWY9XCJodHRwczovL3d3dy5hbWF6b24uY29tL2FwL3NpZ25pbj9vcGVuaWQucmV0dXJuX3RvPWh0dHBzJTNBJTJGJTJGd3d3LmFtYXpvbi5jb20lMkZkcCUyRkIwMUdLUUkzOTIlMkZyZWYlM0RjbV9jcl9kcF9kX3ZvdGVfbGZ0JTNGaWUlM0RVVEY4JTI2dm90ZUluc3RhbmNlSWQlM0RSMkZHRVNVQldMRVRDJTI2dm90ZVZhbHVlJTNEMSUyNmNzcmZUJTNEZ2ltUDlGclVlNzczcSUyNTJCMlEyV21zJTI1MkJFQ1BzUTUwMmhXSzFydVNYR1lBQUFBQkFBQUFBRjJSS0l4eVlYY0FBQUFBJTI1MkI0a1VFayUyNTJGN2lNR1IzeFBjWDZpVSUyM1IyRkdFU1VCV0xFVEMmYW1wO29wZW5pZC5pZGVudGl0eT1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAlMkZpZGVudGlmaWVyX3NlbGVjdCZhbXA7b3BlbmlkLmNsYWltZWRfaWQ9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wJTJGaWRlbnRpZmllcl9zZWxlY3QmYW1wO29wZW5pZC5hc3NvY19oYW5kbGU9dXNmbGV4JmFtcDtvcGVuaWQubW9kZT1jaGVja2lkX3NldHVwJmFtcDtvcGVuaWQubnM9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wXCIgZGF0YS1ob29rPVwidm90ZS1oZWxwZnVsLWJ1dHRvblwiIGNsYXNzPVwiYS1idXR0b24tdGV4dFwiIHJvbGU9XCJidXR0b25cIiBpZD1cImEtYXV0b2lkLTIzLWFubm91bmNlXCI+XHUwMDNDZGl2IGNsYXNzPVwiY3ItaGVscGZ1bC10ZXh0XCI+XG4gICAgICAgICAgSGVscGZ1bFx1MDAzQy9kaXY+XG4gICAgICBcdTAwM0MvYT5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2PlxuICBcdTAwM0Mvc3Bhbj5cblxuXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tdGV4dC1zZXBhcmF0b3JcIiByb2xlPVwiaW1nXCIgYXJpYS1sYWJlbD1cInxcIj5cdTAwM0MvaT5cdTAwM0NhIGRhdGEtaG9vaz1cInJldmlldy1jb21tZW50XCIgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWxpbmstbm9ybWFsIGEtY29sb3Itc2Vjb25kYXJ5IGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL2dwL2N1c3RvbWVyLXJldmlld3MvUjJGR0VTVUJXTEVUQy9yZWY9Y21fY3JfZHBfZF9ydndfYnRtP2llPVVURjgmYW1wO0FTSU49QjAxR0tRSTM5MiN3YXNUaGlzSGVscGZ1bFwiPkNvbW1lbnRcdTAwM0MvYT5cdTAwM0NzcGFuIGNsYXNzPVwiY3ItZm9vdGVyLWxpbmUtaGVpZ2h0XCI+XG4gICAgICBcdTAwM0NzcGFuPlx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXRleHQtc2VwYXJhdG9yXCIgcm9sZT1cImltZ1wiIGFyaWEtbGFiZWw9XCJ8XCI+XHUwMDNDL2k+XHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImNyLXBvcHVwXCIgZGF0YS1jci1wb3B1cD1cInsmcXVvdDt3aWR0aCZxdW90OzomcXVvdDs1ODAmcXVvdDssJnF1b3Q7dGl0bGUmcXVvdDs6JnF1b3Q7UmVwb3J0QWJ1c2UmcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9oei9yZXZpZXdzLXJlbmRlci9yZXBvcnQtYWJ1c2U/aWU9VVRGOCZhbXA7dm90ZURvbWFpbj1SZXZpZXdzJmFtcDtyZWY9Y21fY3JfZHBfZF9ydndfaGxwJmFtcDtjc3JmVD1naW1QOUZyVWU3NzNxJTJCMlEyV21zJTJCRUNQc1E1MDJoV0sxcnVTWEdZQUFBQUJBQUFBQUYyUktJeHlZWGNBQUFBQSUyQjRrVUVrJTJGN2lNR1IzeFBjWDZpVSZhbXA7ZW50aXR5SWQ9UjJGR0VTVUJXTEVUQyZhbXA7c2Vzc2lvbklkPTE0NS04OTc1MzkwLTUwNjQxMTMmcXVvdDssJnF1b3Q7aGVpZ2h0JnF1b3Q7OiZxdW90OzM4MCZxdW90O31cIj5cdTAwM0NhIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1saW5rLW5vcm1hbCBhLWNvbG9yLXNlY29uZGFyeSByZXBvcnQtYWJ1c2UtbGluayBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9oei9yZXZpZXdzLXJlbmRlci9yZXBvcnQtYWJ1c2U/aWU9VVRGOCZhbXA7dm90ZURvbWFpbj1SZXZpZXdzJmFtcDtyZWY9Y21fY3JfZHBfZF9ydndfaGxwJmFtcDtjc3JmVD1naW1QOUZyVWU3NzNxJTJCMlEyV21zJTJCRUNQc1E1MDJoV0sxcnVTWEdZQUFBQUJBQUFBQUYyUktJeHlZWGNBQUFBQSUyQjRrVUVrJTJGN2lNR1IzeFBjWDZpVSZhbXA7ZW50aXR5SWQ9UjJGR0VTVUJXTEVUQyZhbXA7c2Vzc2lvbklkPTE0NS04OTc1MzkwLTUwNjQxMTNcIj5SZXBvcnQgYWJ1c2VcdTAwM0MvYT5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cbiAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgaWQ9XCJSMk03TE8zN0ZaVVFDOVwiIGRhdGEtaG9vaz1cInJldmlld1wiIGNsYXNzPVwiYS1zZWN0aW9uIHJldmlldyBhb2stcmVsYXRpdmVcIj5cdTAwM0NkaXYgaWQ9XCJSMk03TE8zN0ZaVVFDOS1yZXZpZXctY2FyZFwiIGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW5vbmVcIj5cdTAwM0NkaXYgaWQ9XCJjdXN0b21lcl9yZXZpZXctUjJNN0xPMzdGWlVRQzlcIiBjbGFzcz1cImEtc2VjdGlvbiBjZWx3aWRnZXRcIj5cdTAwM0NkaXYgZGF0YS1ob29rPVwiZ2Vub21lLXdpZGdldFwiIGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW1pbmlcIj5cdTAwM0NhIGhyZWY9XCIvZ3AvcHJvZmlsZS9hbXpuMS5hY2NvdW50LkFHR1JQWkdKQlhDM0lDUU5OWU5YNFNXRjdEQVEvcmVmPWNtX2NyX2RwX2RfZ3dfdHI/aWU9VVRGOFwiIGNsYXNzPVwiYS1wcm9maWxlXCIgZGF0YS1hLXNpemU9XCJzbWFsbFwiPlx1MDAzQ2RpdiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cImEtcHJvZmlsZS1hdmF0YXItd3JhcHBlclwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtcHJvZmlsZS1hdmF0YXJcIj5cdTAwM0NpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL3gtbG9jYWxlL2NvbW1vbi9ncmV5LXBpeGVsLmdpZlwiIGNsYXNzPVwiYS1sYXp5LWxvYWRlZFwiIGRhdGEtc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9TL2FtYXpvbi1hdmF0YXJzLWdsb2JhbC84ZDY4NDI0NC00NWY1LTRlYjgtOWRjMC0xMWZhMGEzNzllMDkuX0NSMTE2LDAsMjY4LDI2OF9TWDQ4Xy5qcGdcIj5cdTAwM0Nub3NjcmlwdD5cdTAwM0NpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9TL2FtYXpvbi1hdmF0YXJzLWdsb2JhbC84ZDY4NDI0NC00NWY1LTRlYjgtOWRjMC0xMWZhMGEzNzllMDkuX0NSMTE2LDAsMjY4LDI2OF9TWDQ4Xy5qcGdcIi8+XHUwMDNDL25vc2NyaXB0Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLXByb2ZpbGUtY29udGVudFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXByb2ZpbGUtbmFtZVwiPlNob3BwaW5nIERpdmFcdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQy9hPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj5cdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIHRpdGxlPVwiMi4wIG91dCBvZiA1IHN0YXJzXCIgaHJlZj1cIi9ncC9jdXN0b21lci1yZXZpZXdzL1IyTTdMTzM3RlpVUUM5L3JlZj1jbV9jcl9kcF9kX3J2d190dGw/aWU9VVRGOCZhbXA7QVNJTj1CMDFHS1FJMzkyXCI+XHUwMDNDaSBkYXRhLWhvb2s9XCJyZXZpZXctc3Rhci1yYXRpbmdcIiBjbGFzcz1cImEtaWNvbiBhLWljb24tc3RhciBhLXN0YXItMiByZXZpZXctcmF0aW5nXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj4yLjAgb3V0IG9mIDUgc3RhcnNcdTAwM0Mvc3Bhbj5cdTAwM0MvaT5cdTAwM0MvYT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1sZXR0ZXItc3BhY2VcIj5cdTAwM0Mvc3Bhbj5cdTAwM0NhIGRhdGEtaG9vaz1cInJldmlldy10aXRsZVwiIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1saW5rLW5vcm1hbCByZXZpZXctdGl0bGUgYS1jb2xvci1iYXNlIHJldmlldy10aXRsZS1jb250ZW50IGEtdGV4dC1ib2xkXCIgaHJlZj1cIi9ncC9jdXN0b21lci1yZXZpZXdzL1IyTTdMTzM3RlpVUUM5L3JlZj1jbV9jcl9kcF9kX3J2d190dGw/aWU9VVRGOCZhbXA7QVNJTj1CMDFHS1FJMzkyXCI+XHUwMDNDc3BhbiBjbGFzcz1cIlwiPk5pY2UsIGJ1dCBEaXNhcHBvaW50aW5nXHUwMDNDL3NwYW4+XG4gICAgICAgICAgICBcdTAwM0MvYT5cdTAwM0MvZGl2Plx1MDAzQ3NwYW4gZGF0YS1ob29rPVwicmV2aWV3LWRhdGVcIiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5IHJldmlldy1kYXRlXCI+SnVuZSAxNiwgMjAxN1x1MDAzQy9zcGFuPlx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtc3BhY2luZy1taW5pIHJldmlldy1kYXRhIHJldmlldy1mb3JtYXQtc3RyaXBcIj5cdTAwM0NzcGFuIGRhdGEtaG9vaz1cImF2cC1iYWRnZS1saW5rbGVzc1wiIGNsYXNzPVwiYS1zaXplLW1pbmkgYS1jb2xvci1zdGF0ZSBhLXRleHQtYm9sZFwiPlZlcmlmaWVkIFB1cmNoYXNlXHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctc21hbGwgcmV2aWV3LWRhdGFcIj5cdTAwM0NzcGFuIGRhdGEtaG9vaz1cInJldmlldy1ib2R5XCIgY2xhc3M9XCJhLXNpemUtYmFzZSByZXZpZXctdGV4dFwiPlx1MDAzQ2RpdiBhcmlhLWxpdmU9XCJwb2xpdGVcIiBkYXRhLWEtZXhwYW5kZXItbmFtZT1cInJldmlld190ZXh0X3JlYWRfbW9yZVwiIGRhdGEtYS1leHBhbmRlci1jb2xsYXBzZWQtaGVpZ2h0PVwiMzAwXCIgY2xhc3M9XCJhLWV4cGFuZGVyLWNvbGxhcHNlZC1oZWlnaHQgYS1yb3cgYS1leHBhbmRlci1jb250YWluZXIgYS1leHBhbmRlci1wYXJ0aWFsLWNvbGxhcHNlLWNvbnRhaW5lclwiIHN0eWxlPVwibWF4LWhlaWdodDozMDBweFwiPlx1MDAzQ2RpdiBkYXRhLWhvb2s9XCJyZXZpZXctY29sbGFwc2VkXCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCIgY2xhc3M9XCJhLWV4cGFuZGVyLWNvbnRlbnQgcmV2aWV3VGV4dCByZXZpZXctdGV4dC1jb250ZW50IGEtZXhwYW5kZXItcGFydGlhbC1jb2xsYXBzZS1jb250ZW50XCI+XHUwMDNDc3BhbiBjbGFzcz1cIlwiPlRoZXNlIHdvdWxkIGJlIGEgbmljZSBzZXQgb2YgZWFycmluZ3MsIHBlcmZlY3Qgc2l6ZSBidXQgbXkgc2hhcGVzIGRpZG4ndCBtYXRjaC4gT25lIHdhcyBwZXJmZWN0IG92YWwgc2hhcGUgdGhlIG90aGVyIHdhcyBvdmFsIHdpdGggYSBkaXN0aW5jdCBwb2ludC4gSSBhbSBrZWVwaW5nIGFuZCBob3BlIGl0IGlzbid0IG5vdGljZWFibGUgd2hlbiB0aGV5IGFyZSBiZWluZyB3b3JuLiBTdWNoIGFzaGFtZSBJIHJlYWxseSBsaWtlIHRoZSBjb25jZXB0IG9mIHRoZXNlIGVhcnJpbmdzXHUwMDNDL3NwYW4+XG4gIFx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1leHBhbmRlci1oZWFkZXIgYS1leHBhbmRlci1wYXJ0aWFsLWNvbGxhcHNlLWhlYWRlclwiIHN0eWxlPVwib3BhY2l0eTogMDsgZGlzcGxheTogbm9uZTtcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWV4cGFuZGVyLWNvbnRlbnQtZmFkZVwiPlx1MDAzQy9kaXY+XHUwMDNDYSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgZGF0YS1ob29rPVwiZXhwYW5kLWNvbGxhcHNlLXJlYWQtbW9yZS1sZXNzXCIgZGF0YS1hY3Rpb249XCJhLWV4cGFuZGVyLXRvZ2dsZVwiIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYS1leHBhbmRlci10b2dnbGU9XCJ7JnF1b3Q7YWxsb3dMaW5rRGVmYXVsdCZxdW90Ozp0cnVlLCAmcXVvdDtleHBhbmRfcHJvbXB0JnF1b3Q7OiZxdW90O1JlYWQgbW9yZSZxdW90OywgJnF1b3Q7Y29sbGFwc2VfcHJvbXB0JnF1b3Q7OiZxdW90O1JlYWQgbGVzcyZxdW90O31cIj5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1leHRlbmRlci1leHBhbmRcIj5cdTAwM0MvaT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1leHBhbmRlci1wcm9tcHRcIj5SZWFkIG1vcmVcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgZGF0YS1ob29rPVwicmV2aWV3LWNvbW1lbnRzXCIgY2xhc3M9XCJhLXJvdyByZXZpZXctY29tbWVudHMgY3Itdm90ZS1hY3Rpb24tYmFyXCI+XHUwMDNDc3BhbiBjbGFzcz1cImNyLXZvdGVcIiBkYXRhLWhvb2s9XCJyZXZpZXctdm90aW5nLXdpZGdldFwiPlxuICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctc21hbGxcIj5cdTAwM0NzcGFuIGRhdGEtaG9vaz1cImhlbHBmdWwtdm90ZS1zdGF0ZW1lbnRcIiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItdGVydGlhcnkgY3Itdm90ZS10ZXh0XCI+NSBwZW9wbGUgZm91bmQgdGhpcyBoZWxwZnVsXHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJjci1oZWxwZnVsLWJ1dHRvbiBhb2stZmxvYXQtbGVmdFwiPlxuICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uIGEtYnV0dG9uLWJhc2VcIiBpZD1cImEtYXV0b2lkLTI0XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uLWlubmVyXCI+XHUwMDNDYSBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9hcC9zaWduaW4/b3BlbmlkLnJldHVybl90bz1odHRwcyUzQSUyRiUyRnd3dy5hbWF6b24uY29tJTJGZHAlMkZCMDFHS1FJMzkyJTJGcmVmJTNEY21fY3JfZHBfZF92b3RlX2xmdCUzRmllJTNEVVRGOCUyNnZvdGVJbnN0YW5jZUlkJTNEUjJNN0xPMzdGWlVRQzklMjZ2b3RlVmFsdWUlM0QxJTI2Y3NyZlQlM0RndTRVak1kMldIZDc2VzR1Z1dQNFFMYTNGS1hFJTI1MkZOJTI1MkZObmlObWkwc0FBQUFCQUFBQUFGMlJLSXh5WVhjQUFBQUElMjUyQjRrVUVrJTI1MkY3aU1HUjN4UGNYNmlVJTIzUjJNN0xPMzdGWlVRQzkmYW1wO29wZW5pZC5pZGVudGl0eT1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAlMkZpZGVudGlmaWVyX3NlbGVjdCZhbXA7b3BlbmlkLmNsYWltZWRfaWQ9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wJTJGaWRlbnRpZmllcl9zZWxlY3QmYW1wO29wZW5pZC5hc3NvY19oYW5kbGU9dXNmbGV4JmFtcDtvcGVuaWQubW9kZT1jaGVja2lkX3NldHVwJmFtcDtvcGVuaWQubnM9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wXCIgZGF0YS1ob29rPVwidm90ZS1oZWxwZnVsLWJ1dHRvblwiIGNsYXNzPVwiYS1idXR0b24tdGV4dFwiIHJvbGU9XCJidXR0b25cIiBpZD1cImEtYXV0b2lkLTI0LWFubm91bmNlXCI+XHUwMDNDZGl2IGNsYXNzPVwiY3ItaGVscGZ1bC10ZXh0XCI+XG4gICAgICAgICAgSGVscGZ1bFx1MDAzQy9kaXY+XG4gICAgICBcdTAwM0MvYT5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2PlxuICBcdTAwM0Mvc3Bhbj5cblxuXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tdGV4dC1zZXBhcmF0b3JcIiByb2xlPVwiaW1nXCIgYXJpYS1sYWJlbD1cInxcIj5cdTAwM0MvaT5cdTAwM0NhIGRhdGEtaG9vaz1cInJldmlldy1jb21tZW50XCIgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWxpbmstbm9ybWFsIGEtY29sb3Itc2Vjb25kYXJ5IGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL2dwL2N1c3RvbWVyLXJldmlld3MvUjJNN0xPMzdGWlVRQzkvcmVmPWNtX2NyX2RwX2RfcnZ3X2J0bT9pZT1VVEY4JmFtcDtBU0lOPUIwMUdLUUkzOTIjd2FzVGhpc0hlbHBmdWxcIj5Db21tZW50XHUwMDNDL2E+XHUwMDNDc3BhbiBjbGFzcz1cImNyLWZvb3Rlci1saW5lLWhlaWdodFwiPlxuICAgICAgXHUwMDNDc3Bhbj5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi10ZXh0LXNlcGFyYXRvclwiIHJvbGU9XCJpbWdcIiBhcmlhLWxhYmVsPVwifFwiPlx1MDAzQy9pPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJjci1wb3B1cFwiIGRhdGEtY3ItcG9wdXA9XCJ7JnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7NTgwJnF1b3Q7LCZxdW90O3RpdGxlJnF1b3Q7OiZxdW90O1JlcG9ydEFidXNlJnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvaHovcmV2aWV3cy1yZW5kZXIvcmVwb3J0LWFidXNlP2llPVVURjgmYW1wO3ZvdGVEb21haW49UmV2aWV3cyZhbXA7cmVmPWNtX2NyX2RwX2RfcnZ3X2hscCZhbXA7Y3NyZlQ9Z3U0VWpNZDJXSGQ3Nlc0dWdXUDRRTGEzRktYRSUyRk4lMkZObmlObWkwc0FBQUFCQUFBQUFGMlJLSXh5WVhjQUFBQUElMkI0a1VFayUyRjdpTUdSM3hQY1g2aVUmYW1wO2VudGl0eUlkPVIyTTdMTzM3RlpVUUM5JmFtcDtzZXNzaW9uSWQ9MTQ1LTg5NzUzOTAtNTA2NDExMyZxdW90OywmcXVvdDtoZWlnaHQmcXVvdDs6JnF1b3Q7MzgwJnF1b3Q7fVwiPlx1MDAzQ2EgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWxpbmstbm9ybWFsIGEtY29sb3Itc2Vjb25kYXJ5IHJlcG9ydC1hYnVzZS1saW5rIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL2h6L3Jldmlld3MtcmVuZGVyL3JlcG9ydC1hYnVzZT9pZT1VVEY4JmFtcDt2b3RlRG9tYWluPVJldmlld3MmYW1wO3JlZj1jbV9jcl9kcF9kX3J2d19obHAmYW1wO2NzcmZUPWd1NFVqTWQyV0hkNzZXNHVnV1A0UUxhM0ZLWEUlMkZOJTJGTm5pTm1pMHNBQUFBQkFBQUFBRjJSS0l4eVlYY0FBQUFBJTJCNGtVRWslMkY3aU1HUjN4UGNYNmlVJmFtcDtlbnRpdHlJZD1SMk03TE8zN0ZaVVFDOSZhbXA7c2Vzc2lvbklkPTE0NS04OTc1MzkwLTUwNjQxMTNcIj5SZXBvcnQgYWJ1c2VcdTAwM0MvYT5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cbiAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgaWQ9XCJSMVM0WE9PSkxaVFpYRVwiIGRhdGEtaG9vaz1cInJldmlld1wiIGNsYXNzPVwiYS1zZWN0aW9uIHJldmlldyBhb2stcmVsYXRpdmVcIj5cdTAwM0NkaXYgaWQ9XCJSMVM0WE9PSkxaVFpYRS1yZXZpZXctY2FyZFwiIGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW5vbmVcIj5cdTAwM0NkaXYgaWQ9XCJjdXN0b21lcl9yZXZpZXctUjFTNFhPT0pMWlRaWEVcIiBjbGFzcz1cImEtc2VjdGlvbiBjZWx3aWRnZXRcIj5cdTAwM0NkaXYgZGF0YS1ob29rPVwiZ2Vub21lLXdpZGdldFwiIGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW1pbmlcIj5cdTAwM0NhIGhyZWY9XCIvZ3AvcHJvZmlsZS9hbXpuMS5hY2NvdW50LkFFRVNYQTRQUDRZSjZMRVpNT0dWV1NJNlo2WUEvcmVmPWNtX2NyX2RwX2RfZ3dfdHI/aWU9VVRGOFwiIGNsYXNzPVwiYS1wcm9maWxlXCIgZGF0YS1hLXNpemU9XCJzbWFsbFwiPlx1MDAzQ2RpdiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cImEtcHJvZmlsZS1hdmF0YXItd3JhcHBlclwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtcHJvZmlsZS1hdmF0YXJcIj5cdTAwM0NpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL3gtbG9jYWxlL2NvbW1vbi9ncmV5LXBpeGVsLmdpZlwiIGNsYXNzPVwiYS1sYXp5LWxvYWRlZFwiIGRhdGEtc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9TL2FtYXpvbi1hdmF0YXJzLWdsb2JhbC9kZWZhdWx0Ll9DUjAsMCwxMDI0LDEwMjRfU1g0OF8ucG5nXCI+XHUwMDNDbm9zY3JpcHQ+XHUwMDNDaW1nIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvUy9hbWF6b24tYXZhdGFycy1nbG9iYWwvZGVmYXVsdC5fQ1IwLDAsMTAyNCwxMDI0X1NYNDhfLnBuZ1wiLz5cdTAwM0Mvbm9zY3JpcHQ+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtcHJvZmlsZS1jb250ZW50XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtcHJvZmlsZS1uYW1lXCI+Y2hlcmkgYmx1bVx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDL2E+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGl0bGU9XCI1LjAgb3V0IG9mIDUgc3RhcnNcIiBocmVmPVwiL2dwL2N1c3RvbWVyLXJldmlld3MvUjFTNFhPT0pMWlRaWEUvcmVmPWNtX2NyX2RwX2RfcnZ3X3R0bD9pZT1VVEY4JmFtcDtBU0lOPUIwMUdLUUkzOTJcIj5cdTAwM0NpIGRhdGEtaG9vaz1cInJldmlldy1zdGFyLXJhdGluZ1wiIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyIGEtc3Rhci01IHJldmlldy1yYXRpbmdcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPjUuMCBvdXQgb2YgNSBzdGFyc1x1MDAzQy9zcGFuPlx1MDAzQy9pPlx1MDAzQy9hPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxldHRlci1zcGFjZVwiPlx1MDAzQy9zcGFuPlx1MDAzQ2EgZGF0YS1ob29rPVwicmV2aWV3LXRpdGxlXCIgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWxpbmstbm9ybWFsIHJldmlldy10aXRsZSBhLWNvbG9yLWJhc2UgcmV2aWV3LXRpdGxlLWNvbnRlbnQgYS10ZXh0LWJvbGRcIiBocmVmPVwiL2dwL2N1c3RvbWVyLXJldmlld3MvUjFTNFhPT0pMWlRaWEUvcmVmPWNtX2NyX2RwX2RfcnZ3X3R0bD9pZT1VVEY4JmFtcDtBU0lOPUIwMUdLUUkzOTJcIj5cdTAwM0NzcGFuIGNsYXNzPVwiXCI+TXVjaCBwcmV0dGllciBpbiBwZXJzb25cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgIFx1MDAzQy9hPlx1MDAzQy9kaXY+XHUwMDNDc3BhbiBkYXRhLWhvb2s9XCJyZXZpZXctZGF0ZVwiIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1zZWNvbmRhcnkgcmV2aWV3LWRhdGVcIj5KYW51YXJ5IDE0LCAyMDE5XHUwMDNDL3NwYW4+XHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW1pbmkgcmV2aWV3LWRhdGEgcmV2aWV3LWZvcm1hdC1zdHJpcFwiPlx1MDAzQ3NwYW4gZGF0YS1ob29rPVwiYXZwLWJhZGdlLWxpbmtsZXNzXCIgY2xhc3M9XCJhLXNpemUtbWluaSBhLWNvbG9yLXN0YXRlIGEtdGV4dC1ib2xkXCI+VmVyaWZpZWQgUHVyY2hhc2VcdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtc3BhY2luZy1zbWFsbCByZXZpZXctZGF0YVwiPlx1MDAzQ3NwYW4gZGF0YS1ob29rPVwicmV2aWV3LWJvZHlcIiBjbGFzcz1cImEtc2l6ZS1iYXNlIHJldmlldy10ZXh0XCI+XHUwMDNDZGl2IGFyaWEtbGl2ZT1cInBvbGl0ZVwiIGRhdGEtYS1leHBhbmRlci1uYW1lPVwicmV2aWV3X3RleHRfcmVhZF9tb3JlXCIgZGF0YS1hLWV4cGFuZGVyLWNvbGxhcHNlZC1oZWlnaHQ9XCIzMDBcIiBjbGFzcz1cImEtZXhwYW5kZXItY29sbGFwc2VkLWhlaWdodCBhLXJvdyBhLWV4cGFuZGVyLWNvbnRhaW5lciBhLWV4cGFuZGVyLXBhcnRpYWwtY29sbGFwc2UtY29udGFpbmVyXCIgc3R5bGU9XCJtYXgtaGVpZ2h0OjMwMHB4XCI+XHUwMDNDZGl2IGRhdGEtaG9vaz1cInJldmlldy1jb2xsYXBzZWRcIiBhcmlhLWV4cGFuZGVkPVwiZmFsc2VcIiBjbGFzcz1cImEtZXhwYW5kZXItY29udGVudCByZXZpZXdUZXh0IHJldmlldy10ZXh0LWNvbnRlbnQgYS1leHBhbmRlci1wYXJ0aWFsLWNvbGxhcHNlLWNvbnRlbnRcIj5cdTAwM0NzcGFuIGNsYXNzPVwiXCI+SSBsb3ZlIHRoZXNlIGVhcnJpbmdzLCB0aGV5IGFyZSBtdWNoIHByZXR0aWVyIGluIHBlcnNvbiB0aGFuIG9uIHNpdGUuIFRoZXkgamluZ2xlIGEgbGl0dGxlIGJlY2F1c2Ugb2YgdGhlIGxheWVycy4gVGhlIGNvbG9ycyBhcmUgYnJpZ2h0LCBhbmQgdGhlcmUncyBhIHRpbnkgcGxhc3RpYyBob29rIHNhZmV0eSBwaWVjZSBpZiB5b3UncmUgd29ycmllZCBhYm91dCBpdCBzbGlkaW5nIG91dCBvZiB5b3VyIGVhci4gSW0gdmVyeSBwbGVhc2VkIHdpdGggdGhlc2UgYW5kIHJlY2VpdmVkIG1hbnkgY29tcGxpbWVudHMgb24gdGhlbSB0aGUgb3RoZXIgZGF5Llx1MDAzQy9zcGFuPlxuICBcdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtZXhwYW5kZXItaGVhZGVyIGEtZXhwYW5kZXItcGFydGlhbC1jb2xsYXBzZS1oZWFkZXJcIiBzdHlsZT1cIm9wYWNpdHk6IDA7IGRpc3BsYXk6IG5vbmU7XCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1leHBhbmRlci1jb250ZW50LWZhZGVcIj5cdTAwM0MvZGl2Plx1MDAzQ2EgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIGRhdGEtaG9vaz1cImV4cGFuZC1jb2xsYXBzZS1yZWFkLW1vcmUtbGVzc1wiIGRhdGEtYWN0aW9uPVwiYS1leHBhbmRlci10b2dnbGVcIiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWEtZXhwYW5kZXItdG9nZ2xlPVwieyZxdW90O2FsbG93TGlua0RlZmF1bHQmcXVvdDs6dHJ1ZSwgJnF1b3Q7ZXhwYW5kX3Byb21wdCZxdW90OzomcXVvdDtSZWFkIG1vcmUmcXVvdDssICZxdW90O2NvbGxhcHNlX3Byb21wdCZxdW90OzomcXVvdDtSZWFkIGxlc3MmcXVvdDt9XCI+XHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tZXh0ZW5kZXItZXhwYW5kXCI+XHUwMDNDL2k+XHUwMDNDc3BhbiBjbGFzcz1cImEtZXhwYW5kZXItcHJvbXB0XCI+UmVhZCBtb3JlXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGRhdGEtaG9vaz1cInJldmlldy1jb21tZW50c1wiIGNsYXNzPVwiYS1yb3cgcmV2aWV3LWNvbW1lbnRzIGNyLXZvdGUtYWN0aW9uLWJhclwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJjci12b3RlXCIgZGF0YS1ob29rPVwicmV2aWV3LXZvdGluZy13aWRnZXRcIj5cbiAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLXNtYWxsXCI+XHUwMDNDc3BhbiBkYXRhLWhvb2s9XCJoZWxwZnVsLXZvdGUtc3RhdGVtZW50XCIgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXRlcnRpYXJ5IGNyLXZvdGUtdGV4dFwiPjIgcGVvcGxlIGZvdW5kIHRoaXMgaGVscGZ1bFx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiY3ItaGVscGZ1bC1idXR0b24gYW9rLWZsb2F0LWxlZnRcIj5cbiAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbiBhLWJ1dHRvbi1iYXNlXCIgaWQ9XCJhLWF1dG9pZC0yNVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi1pbm5lclwiPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vYXAvc2lnbmluP29wZW5pZC5yZXR1cm5fdG89aHR0cHMlM0ElMkYlMkZ3d3cuYW1hem9uLmNvbSUyRmRwJTJGQjAxR0tRSTM5MiUyRnJlZiUzRGNtX2NyX2RwX2Rfdm90ZV9sZnQlM0ZpZSUzRFVURjglMjZ2b3RlSW5zdGFuY2VJZCUzRFIxUzRYT09KTFpUWlhFJTI2dm90ZVZhbHVlJTNEMSUyNmNzcmZUJTNEZ3IlMjUyRnFaaGFxbFVsc3hMZzlUM3NXczFGUWcwcUZoVDElMjUyQlc1ZGc3V0VBQUFBQkFBQUFBRjJSS0l4eVlYY0FBQUFBJTI1MkI0a1VFayUyNTJGN2lNR1IzeFBjWDZpVSUyM1IxUzRYT09KTFpUWlhFJmFtcDtvcGVuaWQuaWRlbnRpdHk9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wJTJGaWRlbnRpZmllcl9zZWxlY3QmYW1wO29wZW5pZC5jbGFpbWVkX2lkPWh0dHAlM0ElMkYlMkZzcGVjcy5vcGVuaWQubmV0JTJGYXV0aCUyRjIuMCUyRmlkZW50aWZpZXJfc2VsZWN0JmFtcDtvcGVuaWQuYXNzb2NfaGFuZGxlPXVzZmxleCZhbXA7b3BlbmlkLm1vZGU9Y2hlY2tpZF9zZXR1cCZhbXA7b3BlbmlkLm5zPWh0dHAlM0ElMkYlMkZzcGVjcy5vcGVuaWQubmV0JTJGYXV0aCUyRjIuMFwiIGRhdGEtaG9vaz1cInZvdGUtaGVscGZ1bC1idXR0b25cIiBjbGFzcz1cImEtYnV0dG9uLXRleHRcIiByb2xlPVwiYnV0dG9uXCIgaWQ9XCJhLWF1dG9pZC0yNS1hbm5vdW5jZVwiPlx1MDAzQ2RpdiBjbGFzcz1cImNyLWhlbHBmdWwtdGV4dFwiPlxuICAgICAgICAgIEhlbHBmdWxcdTAwM0MvZGl2PlxuICAgICAgXHUwMDNDL2E+XHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cbiAgXHUwMDNDL3NwYW4+XG5cblx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXRleHQtc2VwYXJhdG9yXCIgcm9sZT1cImltZ1wiIGFyaWEtbGFiZWw9XCJ8XCI+XHUwMDNDL2k+XHUwMDNDYSBkYXRhLWhvb2s9XCJyZXZpZXctY29tbWVudFwiIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1saW5rLW5vcm1hbCBhLWNvbG9yLXNlY29uZGFyeSBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9ncC9jdXN0b21lci1yZXZpZXdzL1IxUzRYT09KTFpUWlhFL3JlZj1jbV9jcl9kcF9kX3J2d19idG0/aWU9VVRGOCZhbXA7QVNJTj1CMDFHS1FJMzkyI3dhc1RoaXNIZWxwZnVsXCI+Q29tbWVudFx1MDAzQy9hPlx1MDAzQ3NwYW4gY2xhc3M9XCJjci1mb290ZXItbGluZS1oZWlnaHRcIj5cbiAgICAgIFx1MDAzQ3NwYW4+XHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tdGV4dC1zZXBhcmF0b3JcIiByb2xlPVwiaW1nXCIgYXJpYS1sYWJlbD1cInxcIj5cdTAwM0MvaT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiY3ItcG9wdXBcIiBkYXRhLWNyLXBvcHVwPVwieyZxdW90O3dpZHRoJnF1b3Q7OiZxdW90OzU4MCZxdW90OywmcXVvdDt0aXRsZSZxdW90OzomcXVvdDtSZXBvcnRBYnVzZSZxdW90OywmcXVvdDt1cmwmcXVvdDs6JnF1b3Q7L2h6L3Jldmlld3MtcmVuZGVyL3JlcG9ydC1hYnVzZT9pZT1VVEY4JmFtcDt2b3RlRG9tYWluPVJldmlld3MmYW1wO3JlZj1jbV9jcl9kcF9kX3J2d19obHAmYW1wO2NzcmZUPWdyJTJGcVpoYXFsVWxzeExnOVQzc1dzMUZRZzBxRmhUMSUyQlc1ZGc3V0VBQUFBQkFBQUFBRjJSS0l4eVlYY0FBQUFBJTJCNGtVRWslMkY3aU1HUjN4UGNYNmlVJmFtcDtlbnRpdHlJZD1SMVM0WE9PSkxaVFpYRSZhbXA7c2Vzc2lvbklkPTE0NS04OTc1MzkwLTUwNjQxMTMmcXVvdDssJnF1b3Q7aGVpZ2h0JnF1b3Q7OiZxdW90OzM4MCZxdW90O31cIj5cdTAwM0NhIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1saW5rLW5vcm1hbCBhLWNvbG9yLXNlY29uZGFyeSByZXBvcnQtYWJ1c2UtbGluayBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9oei9yZXZpZXdzLXJlbmRlci9yZXBvcnQtYWJ1c2U/aWU9VVRGOCZhbXA7dm90ZURvbWFpbj1SZXZpZXdzJmFtcDtyZWY9Y21fY3JfZHBfZF9ydndfaGxwJmFtcDtjc3JmVD1nciUyRnFaaGFxbFVsc3hMZzlUM3NXczFGUWcwcUZoVDElMkJXNWRnN1dFQUFBQUJBQUFBQUYyUktJeHlZWGNBQUFBQSUyQjRrVUVrJTJGN2lNR1IzeFBjWDZpVSZhbXA7ZW50aXR5SWQ9UjFTNFhPT0pMWlRaWEUmYW1wO3Nlc3Npb25JZD0xNDUtODk3NTM5MC01MDY0MTEzXCI+UmVwb3J0IGFidXNlXHUwMDNDL2E+XHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XG4gIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGlkPVwiUjI5SDA4UTNIVEcwWVRcIiBkYXRhLWhvb2s9XCJyZXZpZXdcIiBjbGFzcz1cImEtc2VjdGlvbiByZXZpZXcgYW9rLXJlbGF0aXZlXCI+XHUwMDNDZGl2IGlkPVwiUjI5SDA4UTNIVEcwWVQtcmV2aWV3LWNhcmRcIiBjbGFzcz1cImEtcm93IGEtc3BhY2luZy1ub25lXCI+XHUwMDNDZGl2IGlkPVwiY3VzdG9tZXJfcmV2aWV3LVIyOUgwOFEzSFRHMFlUXCIgY2xhc3M9XCJhLXNlY3Rpb24gY2Vsd2lkZ2V0XCI+XHUwMDNDZGl2IGRhdGEtaG9vaz1cImdlbm9tZS13aWRnZXRcIiBjbGFzcz1cImEtcm93IGEtc3BhY2luZy1taW5pXCI+XHUwMDNDYSBocmVmPVwiL2dwL3Byb2ZpbGUvYW16bjEuYWNjb3VudC5BRjVJRkNOUlFKTEFWUFIyNzNWU0RBVUdaUUhBL3JlZj1jbV9jcl9kcF9kX2d3X3RyP2llPVVURjhcIiBjbGFzcz1cImEtcHJvZmlsZVwiIGRhdGEtYS1zaXplPVwic21hbGxcIj5cdTAwM0NkaXYgYXJpYS1oaWRkZW49XCJ0cnVlXCIgY2xhc3M9XCJhLXByb2ZpbGUtYXZhdGFyLXdyYXBwZXJcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLXByb2ZpbGUtYXZhdGFyXCI+XHUwMDNDaW1nIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS94LWxvY2FsZS9jb21tb24vZ3JleS1waXhlbC5naWZcIiBjbGFzcz1cImEtbGF6eS1sb2FkZWRcIiBkYXRhLXNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvUy9hbWF6b24tYXZhdGFycy1nbG9iYWwvZDg2ZTljYzYtZWE1Yy00ODdiLWI1MmItNDI2OWM2M2E0YTcxLl9DUjYzLDAsMzc0LDM3NF9TWDQ4Xy5qcGdcIj5cdTAwM0Nub3NjcmlwdD5cdTAwM0NpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9TL2FtYXpvbi1hdmF0YXJzLWdsb2JhbC9kODZlOWNjNi1lYTVjLTQ4N2ItYjUyYi00MjY5YzYzYTRhNzEuX0NSNjMsMCwzNzQsMzc0X1NYNDhfLmpwZ1wiLz5cdTAwM0Mvbm9zY3JpcHQ+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtcHJvZmlsZS1jb250ZW50XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtcHJvZmlsZS1uYW1lXCI+TEFMTEFXXHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0MvYT5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiB0aXRsZT1cIjUuMCBvdXQgb2YgNSBzdGFyc1wiIGhyZWY9XCIvZ3AvY3VzdG9tZXItcmV2aWV3cy9SMjlIMDhRM0hURzBZVC9yZWY9Y21fY3JfZHBfZF9ydndfdHRsP2llPVVURjgmYW1wO0FTSU49QjAxR0tRSTM5MlwiPlx1MDAzQ2kgZGF0YS1ob29rPVwicmV2aWV3LXN0YXItcmF0aW5nXCIgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXIgYS1zdGFyLTUgcmV2aWV3LXJhdGluZ1wiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWljb24tYWx0XCI+NS4wIG91dCBvZiA1IHN0YXJzXHUwMDNDL3NwYW4+XHUwMDNDL2k+XHUwMDNDL2E+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGV0dGVyLXNwYWNlXCI+XHUwMDNDL3NwYW4+XHUwMDNDYSBkYXRhLWhvb2s9XCJyZXZpZXctdGl0bGVcIiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtbGluay1ub3JtYWwgcmV2aWV3LXRpdGxlIGEtY29sb3ItYmFzZSByZXZpZXctdGl0bGUtY29udGVudCBhLXRleHQtYm9sZFwiIGhyZWY9XCIvZ3AvY3VzdG9tZXItcmV2aWV3cy9SMjlIMDhRM0hURzBZVC9yZWY9Y21fY3JfZHBfZF9ydndfdHRsP2llPVVURjgmYW1wO0FTSU49QjAxR0tRSTM5MlwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJcIj5BIHF1YWxpdHkgcGllY2Ugb2YgamV3ZWxyeSFcdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgIFx1MDAzQy9hPlx1MDAzQy9kaXY+XHUwMDNDc3BhbiBkYXRhLWhvb2s9XCJyZXZpZXctZGF0ZVwiIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1zZWNvbmRhcnkgcmV2aWV3LWRhdGVcIj5NYXkgMTUsIDIwMTlcdTAwM0Mvc3Bhbj5cdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctbWluaSByZXZpZXctZGF0YSByZXZpZXctZm9ybWF0LXN0cmlwXCI+XHUwMDNDc3BhbiBkYXRhLWhvb2s9XCJhdnAtYmFkZ2UtbGlua2xlc3NcIiBjbGFzcz1cImEtc2l6ZS1taW5pIGEtY29sb3Itc3RhdGUgYS10ZXh0LWJvbGRcIj5WZXJpZmllZCBQdXJjaGFzZVx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLXNtYWxsIHJldmlldy1kYXRhXCI+XHUwMDNDc3BhbiBkYXRhLWhvb2s9XCJyZXZpZXctYm9keVwiIGNsYXNzPVwiYS1zaXplLWJhc2UgcmV2aWV3LXRleHRcIj5cdTAwM0NkaXYgYXJpYS1saXZlPVwicG9saXRlXCIgZGF0YS1hLWV4cGFuZGVyLW5hbWU9XCJyZXZpZXdfdGV4dF9yZWFkX21vcmVcIiBkYXRhLWEtZXhwYW5kZXItY29sbGFwc2VkLWhlaWdodD1cIjMwMFwiIGNsYXNzPVwiYS1leHBhbmRlci1jb2xsYXBzZWQtaGVpZ2h0IGEtcm93IGEtZXhwYW5kZXItY29udGFpbmVyIGEtZXhwYW5kZXItcGFydGlhbC1jb2xsYXBzZS1jb250YWluZXJcIiBzdHlsZT1cIm1heC1oZWlnaHQ6MzAwcHhcIj5cdTAwM0NkaXYgZGF0YS1ob29rPVwicmV2aWV3LWNvbGxhcHNlZFwiIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiIGNsYXNzPVwiYS1leHBhbmRlci1jb250ZW50IHJldmlld1RleHQgcmV2aWV3LXRleHQtY29udGVudCBhLWV4cGFuZGVyLXBhcnRpYWwtY29sbGFwc2UtY29udGVudFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJcIj5LZW1zdG9uZSBjb25zaXN0ZW50bHkgcHJvZHVjZXMgbG92ZWx5IHBpZWNlcyBvZiBqZXdlbHJ5IHRoYXQgYXJlIHZlcnkgd2VsbC1tYWRlIGF0IGEgcmVhc29uYWJsZSBwcmljZS4gIEkganVzdCBsb3ZlIHRoZWlyIGl0ZW1zIGFuZCB0aGV5IGNvbWUgaW4gYSBwcmV0dHkgdGFuIGFuZCBibGFjayBnaWZ0IGJveCB3aXRoIGEgYm93IG9uIHRvcC4gIEdpZnQgYW55IG9mIHRoZWlyIGl0ZW1zIHdpdGggY29uZmlkZW5jZS4gIFRoZXNlIGVhcnJpbmdzIGFyZSBsb3ZlbHksIGRvbid0IG1ha2UgeW91ciBlYXIgbG9iZXMgc2FnLCBhcmUgY29tZm9ydGFibGUgYW5kIHN0eWxpc2ggZm9yIGRheSBvciBldmVuaW5nIHdlYXIuICBWZXJ5IGhhcHB5IHdpdGggdGhpcyBwdXJjaGFzZS5cdTAwM0Mvc3Bhbj5cbiAgXHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLWV4cGFuZGVyLWhlYWRlciBhLWV4cGFuZGVyLXBhcnRpYWwtY29sbGFwc2UtaGVhZGVyXCIgc3R5bGU9XCJvcGFjaXR5OiAwOyBkaXNwbGF5OiBub25lO1wiPlx1MDAzQ2RpdiBjbGFzcz1cImEtZXhwYW5kZXItY29udGVudC1mYWRlXCI+XHUwMDNDL2Rpdj5cdTAwM0NhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiBkYXRhLWhvb2s9XCJleHBhbmQtY29sbGFwc2UtcmVhZC1tb3JlLWxlc3NcIiBkYXRhLWFjdGlvbj1cImEtZXhwYW5kZXItdG9nZ2xlXCIgY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hLWV4cGFuZGVyLXRvZ2dsZT1cInsmcXVvdDthbGxvd0xpbmtEZWZhdWx0JnF1b3Q7OnRydWUsICZxdW90O2V4cGFuZF9wcm9tcHQmcXVvdDs6JnF1b3Q7UmVhZCBtb3JlJnF1b3Q7LCAmcXVvdDtjb2xsYXBzZV9wcm9tcHQmcXVvdDs6JnF1b3Q7UmVhZCBsZXNzJnF1b3Q7fVwiPlx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLWV4dGVuZGVyLWV4cGFuZFwiPlx1MDAzQy9pPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWV4cGFuZGVyLXByb21wdFwiPlJlYWQgbW9yZVx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBkYXRhLWhvb2s9XCJyZXZpZXctY29tbWVudHNcIiBjbGFzcz1cImEtcm93IHJldmlldy1jb21tZW50cyBjci12b3RlLWFjdGlvbi1iYXJcIj5cdTAwM0NzcGFuIGNsYXNzPVwiY3Itdm90ZVwiIGRhdGEtaG9vaz1cInJldmlldy12b3Rpbmctd2lkZ2V0XCI+XG4gIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtc3BhY2luZy1zbWFsbFwiPlx1MDAzQ3NwYW4gZGF0YS1ob29rPVwiaGVscGZ1bC12b3RlLXN0YXRlbWVudFwiIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci10ZXJ0aWFyeSBjci12b3RlLXRleHRcIj5PbmUgcGVyc29uIGZvdW5kIHRoaXMgaGVscGZ1bFx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiY3ItaGVscGZ1bC1idXR0b24gYW9rLWZsb2F0LWxlZnRcIj5cbiAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbiBhLWJ1dHRvbi1iYXNlXCIgaWQ9XCJhLWF1dG9pZC0yNlwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi1pbm5lclwiPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vYXAvc2lnbmluP29wZW5pZC5yZXR1cm5fdG89aHR0cHMlM0ElMkYlMkZ3d3cuYW1hem9uLmNvbSUyRmRwJTJGQjAxR0tRSTM5MiUyRnJlZiUzRGNtX2NyX2RwX2Rfdm90ZV9sZnQlM0ZpZSUzRFVURjglMjZ2b3RlSW5zdGFuY2VJZCUzRFIyOUgwOFEzSFRHMFlUJTI2dm90ZVZhbHVlJTNEMSUyNmNzcmZUJTNEZ2pOeWZjSXI3VDFIRHRYTk5WaFMyOCUyNTJGSHVVek4xQXlxMTI3WXVTSUFBQUFCQUFBQUFGMlJLSXh5WVhjQUFBQUElMjUyQjRrVUVrJTI1MkY3aU1HUjN4UGNYNmlVJTIzUjI5SDA4UTNIVEcwWVQmYW1wO29wZW5pZC5pZGVudGl0eT1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAlMkZpZGVudGlmaWVyX3NlbGVjdCZhbXA7b3BlbmlkLmNsYWltZWRfaWQ9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wJTJGaWRlbnRpZmllcl9zZWxlY3QmYW1wO29wZW5pZC5hc3NvY19oYW5kbGU9dXNmbGV4JmFtcDtvcGVuaWQubW9kZT1jaGVja2lkX3NldHVwJmFtcDtvcGVuaWQubnM9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wXCIgZGF0YS1ob29rPVwidm90ZS1oZWxwZnVsLWJ1dHRvblwiIGNsYXNzPVwiYS1idXR0b24tdGV4dFwiIHJvbGU9XCJidXR0b25cIiBpZD1cImEtYXV0b2lkLTI2LWFubm91bmNlXCI+XHUwMDNDZGl2IGNsYXNzPVwiY3ItaGVscGZ1bC10ZXh0XCI+XG4gICAgICAgICAgSGVscGZ1bFx1MDAzQy9kaXY+XG4gICAgICBcdTAwM0MvYT5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2PlxuICBcdTAwM0Mvc3Bhbj5cblxuXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tdGV4dC1zZXBhcmF0b3JcIiByb2xlPVwiaW1nXCIgYXJpYS1sYWJlbD1cInxcIj5cdTAwM0MvaT5cdTAwM0NhIGRhdGEtaG9vaz1cInJldmlldy1jb21tZW50XCIgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWxpbmstbm9ybWFsIGEtY29sb3Itc2Vjb25kYXJ5IGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL2dwL2N1c3RvbWVyLXJldmlld3MvUjI5SDA4UTNIVEcwWVQvcmVmPWNtX2NyX2RwX2RfcnZ3X2J0bT9pZT1VVEY4JmFtcDtBU0lOPUIwMUdLUUkzOTIjd2FzVGhpc0hlbHBmdWxcIj5Db21tZW50XHUwMDNDL2E+XHUwMDNDc3BhbiBjbGFzcz1cImNyLWZvb3Rlci1saW5lLWhlaWdodFwiPlxuICAgICAgXHUwMDNDc3Bhbj5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi10ZXh0LXNlcGFyYXRvclwiIHJvbGU9XCJpbWdcIiBhcmlhLWxhYmVsPVwifFwiPlx1MDAzQy9pPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJjci1wb3B1cFwiIGRhdGEtY3ItcG9wdXA9XCJ7JnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7NTgwJnF1b3Q7LCZxdW90O3RpdGxlJnF1b3Q7OiZxdW90O1JlcG9ydEFidXNlJnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvaHovcmV2aWV3cy1yZW5kZXIvcmVwb3J0LWFidXNlP2llPVVURjgmYW1wO3ZvdGVEb21haW49UmV2aWV3cyZhbXA7cmVmPWNtX2NyX2RwX2RfcnZ3X2hscCZhbXA7Y3NyZlQ9Z2pOeWZjSXI3VDFIRHRYTk5WaFMyOCUyRkh1VXpOMUF5cTEyN1l1U0lBQUFBQkFBQUFBRjJSS0l4eVlYY0FBQUFBJTJCNGtVRWslMkY3aU1HUjN4UGNYNmlVJmFtcDtlbnRpdHlJZD1SMjlIMDhRM0hURzBZVCZhbXA7c2Vzc2lvbklkPTE0NS04OTc1MzkwLTUwNjQxMTMmcXVvdDssJnF1b3Q7aGVpZ2h0JnF1b3Q7OiZxdW90OzM4MCZxdW90O31cIj5cdTAwM0NhIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1saW5rLW5vcm1hbCBhLWNvbG9yLXNlY29uZGFyeSByZXBvcnQtYWJ1c2UtbGluayBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9oei9yZXZpZXdzLXJlbmRlci9yZXBvcnQtYWJ1c2U/aWU9VVRGOCZhbXA7dm90ZURvbWFpbj1SZXZpZXdzJmFtcDtyZWY9Y21fY3JfZHBfZF9ydndfaGxwJmFtcDtjc3JmVD1nak55ZmNJcjdUMUhEdFhOTlZoUzI4JTJGSHVVek4xQXlxMTI3WXVTSUFBQUFCQUFBQUFGMlJLSXh5WVhjQUFBQUElMkI0a1VFayUyRjdpTUdSM3hQY1g2aVUmYW1wO2VudGl0eUlkPVIyOUgwOFEzSFRHMFlUJmFtcDtzZXNzaW9uSWQ9MTQ1LTg5NzUzOTAtNTA2NDExM1wiPlJlcG9ydCBhYnVzZVx1MDAzQy9hPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlxuICBcdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBpZD1cIlIyU1NEWFQ4WDBST1ZUXCIgZGF0YS1ob29rPVwicmV2aWV3XCIgY2xhc3M9XCJhLXNlY3Rpb24gcmV2aWV3IGFvay1yZWxhdGl2ZVwiPlx1MDAzQ2RpdiBpZD1cIlIyU1NEWFQ4WDBST1ZULXJldmlldy1jYXJkXCIgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctbm9uZVwiPlx1MDAzQ2RpdiBpZD1cImN1c3RvbWVyX3Jldmlldy1SMlNTRFhUOFgwUk9WVFwiIGNsYXNzPVwiYS1zZWN0aW9uIGNlbHdpZGdldFwiPlx1MDAzQ2RpdiBkYXRhLWhvb2s9XCJnZW5vbWUtd2lkZ2V0XCIgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctbWluaVwiPlx1MDAzQ2EgaHJlZj1cIi9ncC9wcm9maWxlL2Ftem4xLmFjY291bnQuQUdLQVhZTzMzQzRJRVpQVVVWU1gyQVpHS0tNQS9yZWY9Y21fY3JfZHBfZF9nd190cj9pZT1VVEY4XCIgY2xhc3M9XCJhLXByb2ZpbGVcIiBkYXRhLWEtc2l6ZT1cInNtYWxsXCI+XHUwMDNDZGl2IGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGNsYXNzPVwiYS1wcm9maWxlLWF2YXRhci13cmFwcGVyXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1wcm9maWxlLWF2YXRhclwiPlx1MDAzQ2ltZyBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEveC1sb2NhbGUvY29tbW9uL2dyZXktcGl4ZWwuZ2lmXCIgY2xhc3M9XCJhLWxhenktbG9hZGVkXCIgZGF0YS1zcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL1MvYW1hem9uLWF2YXRhcnMvYzVjYmU0NWEtMGI3ZC00MDFjLWFmODMtNGVmNjY0ZmEwNDczLl9DUjYyLDAsMzc1LDM3NV9TWDQ4Xy5qcGdcIj5cdTAwM0Nub3NjcmlwdD5cdTAwM0NpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9TL2FtYXpvbi1hdmF0YXJzL2M1Y2JlNDVhLTBiN2QtNDAxYy1hZjgzLTRlZjY2NGZhMDQ3My5fQ1I2MiwwLDM3NSwzNzVfU1g0OF8uanBnXCIvPlx1MDAzQy9ub3NjcmlwdD5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1wcm9maWxlLWNvbnRlbnRcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1wcm9maWxlLW5hbWVcIj5KZW5ueSBTLlx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDL2E+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGl0bGU9XCI1LjAgb3V0IG9mIDUgc3RhcnNcIiBocmVmPVwiL2dwL2N1c3RvbWVyLXJldmlld3MvUjJTU0RYVDhYMFJPVlQvcmVmPWNtX2NyX2RwX2RfcnZ3X3R0bD9pZT1VVEY4JmFtcDtBU0lOPUIwMUdLUUkzOTJcIj5cdTAwM0NpIGRhdGEtaG9vaz1cInJldmlldy1zdGFyLXJhdGluZ1wiIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyIGEtc3Rhci01IHJldmlldy1yYXRpbmdcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPjUuMCBvdXQgb2YgNSBzdGFyc1x1MDAzQy9zcGFuPlx1MDAzQy9pPlx1MDAzQy9hPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWxldHRlci1zcGFjZVwiPlx1MDAzQy9zcGFuPlx1MDAzQ2EgZGF0YS1ob29rPVwicmV2aWV3LXRpdGxlXCIgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWxpbmstbm9ybWFsIHJldmlldy10aXRsZSBhLWNvbG9yLWJhc2UgcmV2aWV3LXRpdGxlLWNvbnRlbnQgYS10ZXh0LWJvbGRcIiBocmVmPVwiL2dwL2N1c3RvbWVyLXJldmlld3MvUjJTU0RYVDhYMFJPVlQvcmVmPWNtX2NyX2RwX2RfcnZ3X3R0bD9pZT1VVEY4JmFtcDtBU0lOPUIwMUdLUUkzOTJcIj5cdTAwM0NzcGFuIGNsYXNzPVwiXCI+TE9WRVx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgXHUwMDNDL2E+XHUwMDNDL2Rpdj5cdTAwM0NzcGFuIGRhdGEtaG9vaz1cInJldmlldy1kYXRlXCIgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXNlY29uZGFyeSByZXZpZXctZGF0ZVwiPk9jdG9iZXIgMjcsIDIwMTdcdTAwM0Mvc3Bhbj5cdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctbWluaSByZXZpZXctZGF0YSByZXZpZXctZm9ybWF0LXN0cmlwXCI+XHUwMDNDc3BhbiBkYXRhLWhvb2s9XCJhdnAtYmFkZ2UtbGlua2xlc3NcIiBjbGFzcz1cImEtc2l6ZS1taW5pIGEtY29sb3Itc3RhdGUgYS10ZXh0LWJvbGRcIj5WZXJpZmllZCBQdXJjaGFzZVx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLXNtYWxsIHJldmlldy1kYXRhXCI+XHUwMDNDc3BhbiBkYXRhLWhvb2s9XCJyZXZpZXctYm9keVwiIGNsYXNzPVwiYS1zaXplLWJhc2UgcmV2aWV3LXRleHRcIj5cdTAwM0NkaXYgYXJpYS1saXZlPVwicG9saXRlXCIgZGF0YS1hLWV4cGFuZGVyLW5hbWU9XCJyZXZpZXdfdGV4dF9yZWFkX21vcmVcIiBkYXRhLWEtZXhwYW5kZXItY29sbGFwc2VkLWhlaWdodD1cIjMwMFwiIGNsYXNzPVwiYS1leHBhbmRlci1jb2xsYXBzZWQtaGVpZ2h0IGEtcm93IGEtZXhwYW5kZXItY29udGFpbmVyIGEtZXhwYW5kZXItcGFydGlhbC1jb2xsYXBzZS1jb250YWluZXJcIiBzdHlsZT1cIm1heC1oZWlnaHQ6MzAwcHhcIj5cdTAwM0NkaXYgZGF0YS1ob29rPVwicmV2aWV3LWNvbGxhcHNlZFwiIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiIGNsYXNzPVwiYS1leHBhbmRlci1jb250ZW50IHJldmlld1RleHQgcmV2aWV3LXRleHQtY29udGVudCBhLWV4cGFuZGVyLXBhcnRpYWwtY29sbGFwc2UtY29udGVudFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJcIj5JIHdlYXIgYSBsb3Qgb2YgdHdvIHRvbmUgamV3ZWxyeSwgc28gdGhlc2UgYXJlIHBlcmZlY3QhIFRoZXkncmUgbm90IHRvbyBoZWF2eSBidXQgbm90IHRvbyBsaWdodCBlaXRoZXIuIFJlYWxseSBzcGVjdGFjdWxhci4gSSB3b3VsZCBoaWdobHkgcmVjb21tZW5kLlx1MDAzQy9zcGFuPlxuICBcdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtZXhwYW5kZXItaGVhZGVyIGEtZXhwYW5kZXItcGFydGlhbC1jb2xsYXBzZS1oZWFkZXJcIiBzdHlsZT1cIm9wYWNpdHk6IDA7IGRpc3BsYXk6IG5vbmU7XCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1leHBhbmRlci1jb250ZW50LWZhZGVcIj5cdTAwM0MvZGl2Plx1MDAzQ2EgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIGRhdGEtaG9vaz1cImV4cGFuZC1jb2xsYXBzZS1yZWFkLW1vcmUtbGVzc1wiIGRhdGEtYWN0aW9uPVwiYS1leHBhbmRlci10b2dnbGVcIiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWEtZXhwYW5kZXItdG9nZ2xlPVwieyZxdW90O2FsbG93TGlua0RlZmF1bHQmcXVvdDs6dHJ1ZSwgJnF1b3Q7ZXhwYW5kX3Byb21wdCZxdW90OzomcXVvdDtSZWFkIG1vcmUmcXVvdDssICZxdW90O2NvbGxhcHNlX3Byb21wdCZxdW90OzomcXVvdDtSZWFkIGxlc3MmcXVvdDt9XCI+XHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tZXh0ZW5kZXItZXhwYW5kXCI+XHUwMDNDL2k+XHUwMDNDc3BhbiBjbGFzcz1cImEtZXhwYW5kZXItcHJvbXB0XCI+UmVhZCBtb3JlXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGRhdGEtaG9vaz1cInJldmlldy1jb21tZW50c1wiIGNsYXNzPVwiYS1yb3cgcmV2aWV3LWNvbW1lbnRzIGNyLXZvdGUtYWN0aW9uLWJhclwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJjci12b3RlXCIgZGF0YS1ob29rPVwicmV2aWV3LXZvdGluZy13aWRnZXRcIj5cbiAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLXNtYWxsXCI+XHUwMDNDc3BhbiBkYXRhLWhvb2s9XCJoZWxwZnVsLXZvdGUtc3RhdGVtZW50XCIgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXRlcnRpYXJ5IGNyLXZvdGUtdGV4dFwiPjQgcGVvcGxlIGZvdW5kIHRoaXMgaGVscGZ1bFx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiY3ItaGVscGZ1bC1idXR0b24gYW9rLWZsb2F0LWxlZnRcIj5cbiAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbiBhLWJ1dHRvbi1iYXNlXCIgaWQ9XCJhLWF1dG9pZC0yN1wiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWJ1dHRvbi1pbm5lclwiPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vYXAvc2lnbmluP29wZW5pZC5yZXR1cm5fdG89aHR0cHMlM0ElMkYlMkZ3d3cuYW1hem9uLmNvbSUyRmRwJTJGQjAxR0tRSTM5MiUyRnJlZiUzRGNtX2NyX2RwX2Rfdm90ZV9sZnQlM0ZpZSUzRFVURjglMjZ2b3RlSW5zdGFuY2VJZCUzRFIyU1NEWFQ4WDBST1ZUJTI2dm90ZVZhbHVlJTNEMSUyNmNzcmZUJTNEZ3UlMjUyRkdGQVBGbnpldG8xJTI1MkJhZ1M3JTI1MkJzcGNZSkVua21Xc3FHTzZaRWM4QUFBQUJBQUFBQUYyUktJeHlZWGNBQUFBQSUyNTJCNGtVRWslMjUyRjdpTUdSM3hQY1g2aVUlMjNSMlNTRFhUOFgwUk9WVCZhbXA7b3BlbmlkLmlkZW50aXR5PWh0dHAlM0ElMkYlMkZzcGVjcy5vcGVuaWQubmV0JTJGYXV0aCUyRjIuMCUyRmlkZW50aWZpZXJfc2VsZWN0JmFtcDtvcGVuaWQuY2xhaW1lZF9pZD1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAlMkZpZGVudGlmaWVyX3NlbGVjdCZhbXA7b3BlbmlkLmFzc29jX2hhbmRsZT11c2ZsZXgmYW1wO29wZW5pZC5tb2RlPWNoZWNraWRfc2V0dXAmYW1wO29wZW5pZC5ucz1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjBcIiBkYXRhLWhvb2s9XCJ2b3RlLWhlbHBmdWwtYnV0dG9uXCIgY2xhc3M9XCJhLWJ1dHRvbi10ZXh0XCIgcm9sZT1cImJ1dHRvblwiIGlkPVwiYS1hdXRvaWQtMjctYW5ub3VuY2VcIj5cdTAwM0NkaXYgY2xhc3M9XCJjci1oZWxwZnVsLXRleHRcIj5cbiAgICAgICAgICBIZWxwZnVsXHUwMDNDL2Rpdj5cbiAgICAgIFx1MDAzQy9hPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XG4gIFx1MDAzQy9zcGFuPlxuXG5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi10ZXh0LXNlcGFyYXRvclwiIHJvbGU9XCJpbWdcIiBhcmlhLWxhYmVsPVwifFwiPlx1MDAzQy9pPlx1MDAzQ2EgZGF0YS1ob29rPVwicmV2aWV3LWNvbW1lbnRcIiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtbGluay1ub3JtYWwgYS1jb2xvci1zZWNvbmRhcnkgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvZ3AvY3VzdG9tZXItcmV2aWV3cy9SMlNTRFhUOFgwUk9WVC9yZWY9Y21fY3JfZHBfZF9ydndfYnRtP2llPVVURjgmYW1wO0FTSU49QjAxR0tRSTM5MiN3YXNUaGlzSGVscGZ1bFwiPkNvbW1lbnRcdTAwM0MvYT5cdTAwM0NzcGFuIGNsYXNzPVwiY3ItZm9vdGVyLWxpbmUtaGVpZ2h0XCI+XG4gICAgICBcdTAwM0NzcGFuPlx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXRleHQtc2VwYXJhdG9yXCIgcm9sZT1cImltZ1wiIGFyaWEtbGFiZWw9XCJ8XCI+XHUwMDNDL2k+XHUwMDNDc3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImNyLXBvcHVwXCIgZGF0YS1jci1wb3B1cD1cInsmcXVvdDt3aWR0aCZxdW90OzomcXVvdDs1ODAmcXVvdDssJnF1b3Q7dGl0bGUmcXVvdDs6JnF1b3Q7UmVwb3J0QWJ1c2UmcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9oei9yZXZpZXdzLXJlbmRlci9yZXBvcnQtYWJ1c2U/aWU9VVRGOCZhbXA7dm90ZURvbWFpbj1SZXZpZXdzJmFtcDtyZWY9Y21fY3JfZHBfZF9ydndfaGxwJmFtcDtjc3JmVD1ndSUyRkdGQVBGbnpldG8xJTJCYWdTNyUyQnNwY1lKRW5rbVdzcUdPNlpFYzhBQUFBQkFBQUFBRjJSS0l4eVlYY0FBQUFBJTJCNGtVRWslMkY3aU1HUjN4UGNYNmlVJmFtcDtlbnRpdHlJZD1SMlNTRFhUOFgwUk9WVCZhbXA7c2Vzc2lvbklkPTE0NS04OTc1MzkwLTUwNjQxMTMmcXVvdDssJnF1b3Q7aGVpZ2h0JnF1b3Q7OiZxdW90OzM4MCZxdW90O31cIj5cdTAwM0NhIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1saW5rLW5vcm1hbCBhLWNvbG9yLXNlY29uZGFyeSByZXBvcnQtYWJ1c2UtbGluayBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9oei9yZXZpZXdzLXJlbmRlci9yZXBvcnQtYWJ1c2U/aWU9VVRGOCZhbXA7dm90ZURvbWFpbj1SZXZpZXdzJmFtcDtyZWY9Y21fY3JfZHBfZF9ydndfaGxwJmFtcDtjc3JmVD1ndSUyRkdGQVBGbnpldG8xJTJCYWdTNyUyQnNwY1lKRW5rbVdzcUdPNlpFYzhBQUFBQkFBQUFBRjJSS0l4eVlYY0FBQUFBJTJCNGtVRWslMkY3aU1HUjN4UGNYNmlVJmFtcDtlbnRpdHlJZD1SMlNTRFhUOFgwUk9WVCZhbXA7c2Vzc2lvbklkPTE0NS04OTc1MzkwLTUwNjQxMTNcIj5SZXBvcnQgYWJ1c2VcdTAwM0MvYT5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cbiAgXHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgaWQ9XCJSMjdaWE5LU0Y1TTVMQ1wiIGRhdGEtaG9vaz1cInJldmlld1wiIGNsYXNzPVwiYS1zZWN0aW9uIHJldmlldyBhb2stcmVsYXRpdmVcIj5cdTAwM0NkaXYgaWQ9XCJSMjdaWE5LU0Y1TTVMQy1yZXZpZXctY2FyZFwiIGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW5vbmVcIj5cdTAwM0NkaXYgaWQ9XCJjdXN0b21lcl9yZXZpZXctUjI3WlhOS1NGNU01TENcIiBjbGFzcz1cImEtc2VjdGlvbiBjZWx3aWRnZXRcIj5cdTAwM0NkaXYgZGF0YS1ob29rPVwiZ2Vub21lLXdpZGdldFwiIGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW1pbmlcIj5cdTAwM0NhIGhyZWY9XCIvZ3AvcHJvZmlsZS9hbXpuMS5hY2NvdW50LkFHQ0E0VUYzT003NDdaNFJBSExDRkJRQkpTV0EvcmVmPWNtX2NyX2RwX2RfZ3dfdHI/aWU9VVRGOFwiIGNsYXNzPVwiYS1wcm9maWxlXCIgZGF0YS1hLXNpemU9XCJzbWFsbFwiPlx1MDAzQ2RpdiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cImEtcHJvZmlsZS1hdmF0YXItd3JhcHBlclwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtcHJvZmlsZS1hdmF0YXJcIj5cdTAwM0NpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL3gtbG9jYWxlL2NvbW1vbi9ncmV5LXBpeGVsLmdpZlwiIGNsYXNzPVwiYS1sYXp5LWxvYWRlZFwiIGRhdGEtc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9TL2FtYXpvbi1hdmF0YXJzLWdsb2JhbC9kZWZhdWx0Ll9DUjAsMCwxMDI0LDEwMjRfU1g0OF8ucG5nXCI+XHUwMDNDbm9zY3JpcHQ+XHUwMDNDaW1nIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvUy9hbWF6b24tYXZhdGFycy1nbG9iYWwvZGVmYXVsdC5fQ1IwLDAsMTAyNCwxMDI0X1NYNDhfLnBuZ1wiLz5cdTAwM0Mvbm9zY3JpcHQ+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtcHJvZmlsZS1jb250ZW50XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtcHJvZmlsZS1uYW1lXCI+S2lsbGlhbjA5MTdcdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQy9hPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1yb3dcIj5cdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIHRpdGxlPVwiNS4wIG91dCBvZiA1IHN0YXJzXCIgaHJlZj1cIi9ncC9jdXN0b21lci1yZXZpZXdzL1IyN1pYTktTRjVNNUxDL3JlZj1jbV9jcl9kcF9kX3J2d190dGw/aWU9VVRGOCZhbXA7QVNJTj1CMDFHS1FJMzkyXCI+XHUwMDNDaSBkYXRhLWhvb2s9XCJyZXZpZXctc3Rhci1yYXRpbmdcIiBjbGFzcz1cImEtaWNvbiBhLWljb24tc3RhciBhLXN0YXItNSByZXZpZXctcmF0aW5nXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj41LjAgb3V0IG9mIDUgc3RhcnNcdTAwM0Mvc3Bhbj5cdTAwM0MvaT5cdTAwM0MvYT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1sZXR0ZXItc3BhY2VcIj5cdTAwM0Mvc3Bhbj5cdTAwM0NhIGRhdGEtaG9vaz1cInJldmlldy10aXRsZVwiIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1saW5rLW5vcm1hbCByZXZpZXctdGl0bGUgYS1jb2xvci1iYXNlIHJldmlldy10aXRsZS1jb250ZW50IGEtdGV4dC1ib2xkXCIgaHJlZj1cIi9ncC9jdXN0b21lci1yZXZpZXdzL1IyN1pYTktTRjVNNUxDL3JlZj1jbV9jcl9kcF9kX3J2d190dGw/aWU9VVRGOCZhbXA7QVNJTj1CMDFHS1FJMzkyXCI+XHUwMDNDc3BhbiBjbGFzcz1cIlwiPlNwYXJrbGUgYW5kIG1vdmVtZW50IVx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgXHUwMDNDL2E+XHUwMDNDL2Rpdj5cdTAwM0NzcGFuIGRhdGEtaG9vaz1cInJldmlldy1kYXRlXCIgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXNlY29uZGFyeSByZXZpZXctZGF0ZVwiPkF1Z3VzdCAxNCwgMjAxN1x1MDAzQy9zcGFuPlx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtc3BhY2luZy1taW5pIHJldmlldy1kYXRhIHJldmlldy1mb3JtYXQtc3RyaXBcIj5cdTAwM0NzcGFuIGRhdGEtaG9vaz1cImF2cC1iYWRnZS1saW5rbGVzc1wiIGNsYXNzPVwiYS1zaXplLW1pbmkgYS1jb2xvci1zdGF0ZSBhLXRleHQtYm9sZFwiPlZlcmlmaWVkIFB1cmNoYXNlXHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctc21hbGwgcmV2aWV3LWRhdGFcIj5cdTAwM0NzcGFuIGRhdGEtaG9vaz1cInJldmlldy1ib2R5XCIgY2xhc3M9XCJhLXNpemUtYmFzZSByZXZpZXctdGV4dFwiPlx1MDAzQ2RpdiBhcmlhLWxpdmU9XCJwb2xpdGVcIiBkYXRhLWEtZXhwYW5kZXItbmFtZT1cInJldmlld190ZXh0X3JlYWRfbW9yZVwiIGRhdGEtYS1leHBhbmRlci1jb2xsYXBzZWQtaGVpZ2h0PVwiMzAwXCIgY2xhc3M9XCJhLWV4cGFuZGVyLWNvbGxhcHNlZC1oZWlnaHQgYS1yb3cgYS1leHBhbmRlci1jb250YWluZXIgYS1leHBhbmRlci1wYXJ0aWFsLWNvbGxhcHNlLWNvbnRhaW5lclwiIHN0eWxlPVwibWF4LWhlaWdodDozMDBweFwiPlx1MDAzQ2RpdiBkYXRhLWhvb2s9XCJyZXZpZXctY29sbGFwc2VkXCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCIgY2xhc3M9XCJhLWV4cGFuZGVyLWNvbnRlbnQgcmV2aWV3VGV4dCByZXZpZXctdGV4dC1jb250ZW50IGEtZXhwYW5kZXItcGFydGlhbC1jb2xsYXBzZS1jb250ZW50XCI+XHUwMDNDc3BhbiBjbGFzcz1cIlwiPkFic29sdXRlbHkgZ29yZ2VvdXMhIEhhdmUgcmVjZWl2ZWQgbnVtZXJvdXMgY29tcGxpbWVudHMgc2luY2UgSSByZWNlaXZlZCB0aGVtLiBUaGV5J3JlIHdlbGwtbWFkZSBhbmQgdmVyeSBsaWdodC4gU2l6ZSBpcyBmbGF0dGVyaW5nIGFuZCB0aGUgbW92ZW1lbnQgb2YgdGhlIHJpbmdzIGNyZWF0ZXMgc3BhcmtsZSBhbmQgc2hpbmUuIFdvdWxkIGRlZmluaXRlbHkgcmVjb21tZW5kIHRoZXNlIHRvIG15IHdvbWVuIGZyaWVuZHMuXHUwMDNDL3NwYW4+XG4gIFx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1leHBhbmRlci1oZWFkZXIgYS1leHBhbmRlci1wYXJ0aWFsLWNvbGxhcHNlLWhlYWRlclwiIHN0eWxlPVwib3BhY2l0eTogMDsgZGlzcGxheTogbm9uZTtcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWV4cGFuZGVyLWNvbnRlbnQtZmFkZVwiPlx1MDAzQy9kaXY+XHUwMDNDYSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgZGF0YS1ob29rPVwiZXhwYW5kLWNvbGxhcHNlLXJlYWQtbW9yZS1sZXNzXCIgZGF0YS1hY3Rpb249XCJhLWV4cGFuZGVyLXRvZ2dsZVwiIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYS1leHBhbmRlci10b2dnbGU9XCJ7JnF1b3Q7YWxsb3dMaW5rRGVmYXVsdCZxdW90Ozp0cnVlLCAmcXVvdDtleHBhbmRfcHJvbXB0JnF1b3Q7OiZxdW90O1JlYWQgbW9yZSZxdW90OywgJnF1b3Q7Y29sbGFwc2VfcHJvbXB0JnF1b3Q7OiZxdW90O1JlYWQgbGVzcyZxdW90O31cIj5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1leHRlbmRlci1leHBhbmRcIj5cdTAwM0MvaT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1leHBhbmRlci1wcm9tcHRcIj5SZWFkIG1vcmVcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgZGF0YS1ob29rPVwicmV2aWV3LWNvbW1lbnRzXCIgY2xhc3M9XCJhLXJvdyByZXZpZXctY29tbWVudHMgY3Itdm90ZS1hY3Rpb24tYmFyXCI+XHUwMDNDc3BhbiBjbGFzcz1cImNyLXZvdGVcIiBkYXRhLWhvb2s9XCJyZXZpZXctdm90aW5nLXdpZGdldFwiPlxuICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctc21hbGxcIj5cdTAwM0NzcGFuIGRhdGEtaG9vaz1cImhlbHBmdWwtdm90ZS1zdGF0ZW1lbnRcIiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItdGVydGlhcnkgY3Itdm90ZS10ZXh0XCI+MyBwZW9wbGUgZm91bmQgdGhpcyBoZWxwZnVsXHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJjci1oZWxwZnVsLWJ1dHRvbiBhb2stZmxvYXQtbGVmdFwiPlxuICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uIGEtYnV0dG9uLWJhc2VcIiBpZD1cImEtYXV0b2lkLTI4XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uLWlubmVyXCI+XHUwMDNDYSBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9hcC9zaWduaW4/b3BlbmlkLnJldHVybl90bz1odHRwcyUzQSUyRiUyRnd3dy5hbWF6b24uY29tJTJGZHAlMkZCMDFHS1FJMzkyJTJGcmVmJTNEY21fY3JfZHBfZF92b3RlX2xmdCUzRmllJTNEVVRGOCUyNnZvdGVJbnN0YW5jZUlkJTNEUjI3WlhOS1NGNU01TEMlMjZ2b3RlVmFsdWUlM0QxJTI2Y3NyZlQlM0Rna2lvSmpXa3VoVE9iMjVUVkJoVjlhTGZZZzI3RUpSRmx3MWUyTTRBQUFBQkFBQUFBRjJSS0l4eVlYY0FBQUFBJTI1MkI0a1VFayUyNTJGN2lNR1IzeFBjWDZpVSUyM1IyN1pYTktTRjVNNUxDJmFtcDtvcGVuaWQuaWRlbnRpdHk9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wJTJGaWRlbnRpZmllcl9zZWxlY3QmYW1wO29wZW5pZC5jbGFpbWVkX2lkPWh0dHAlM0ElMkYlMkZzcGVjcy5vcGVuaWQubmV0JTJGYXV0aCUyRjIuMCUyRmlkZW50aWZpZXJfc2VsZWN0JmFtcDtvcGVuaWQuYXNzb2NfaGFuZGxlPXVzZmxleCZhbXA7b3BlbmlkLm1vZGU9Y2hlY2tpZF9zZXR1cCZhbXA7b3BlbmlkLm5zPWh0dHAlM0ElMkYlMkZzcGVjcy5vcGVuaWQubmV0JTJGYXV0aCUyRjIuMFwiIGRhdGEtaG9vaz1cInZvdGUtaGVscGZ1bC1idXR0b25cIiBjbGFzcz1cImEtYnV0dG9uLXRleHRcIiByb2xlPVwiYnV0dG9uXCIgaWQ9XCJhLWF1dG9pZC0yOC1hbm5vdW5jZVwiPlx1MDAzQ2RpdiBjbGFzcz1cImNyLWhlbHBmdWwtdGV4dFwiPlxuICAgICAgICAgIEhlbHBmdWxcdTAwM0MvZGl2PlxuICAgICAgXHUwMDNDL2E+XHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cbiAgXHUwMDNDL3NwYW4+XG5cblx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXRleHQtc2VwYXJhdG9yXCIgcm9sZT1cImltZ1wiIGFyaWEtbGFiZWw9XCJ8XCI+XHUwMDNDL2k+XHUwMDNDYSBkYXRhLWhvb2s9XCJyZXZpZXctY29tbWVudFwiIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1saW5rLW5vcm1hbCBhLWNvbG9yLXNlY29uZGFyeSBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9ncC9jdXN0b21lci1yZXZpZXdzL1IyN1pYTktTRjVNNUxDL3JlZj1jbV9jcl9kcF9kX3J2d19idG0/aWU9VVRGOCZhbXA7QVNJTj1CMDFHS1FJMzkyI3dhc1RoaXNIZWxwZnVsXCI+Q29tbWVudFx1MDAzQy9hPlx1MDAzQ3NwYW4gY2xhc3M9XCJjci1mb290ZXItbGluZS1oZWlnaHRcIj5cbiAgICAgIFx1MDAzQ3NwYW4+XHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tdGV4dC1zZXBhcmF0b3JcIiByb2xlPVwiaW1nXCIgYXJpYS1sYWJlbD1cInxcIj5cdTAwM0MvaT5cdTAwM0NzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiY3ItcG9wdXBcIiBkYXRhLWNyLXBvcHVwPVwieyZxdW90O3dpZHRoJnF1b3Q7OiZxdW90OzU4MCZxdW90OywmcXVvdDt0aXRsZSZxdW90OzomcXVvdDtSZXBvcnRBYnVzZSZxdW90OywmcXVvdDt1cmwmcXVvdDs6JnF1b3Q7L2h6L3Jldmlld3MtcmVuZGVyL3JlcG9ydC1hYnVzZT9pZT1VVEY4JmFtcDt2b3RlRG9tYWluPVJldmlld3MmYW1wO3JlZj1jbV9jcl9kcF9kX3J2d19obHAmYW1wO2NzcmZUPWdraW9KaldrdWhUT2IyNVRWQmhWOWFMZllnMjdFSlJGbHcxZTJNNEFBQUFCQUFBQUFGMlJLSXh5WVhjQUFBQUElMkI0a1VFayUyRjdpTUdSM3hQY1g2aVUmYW1wO2VudGl0eUlkPVIyN1pYTktTRjVNNUxDJmFtcDtzZXNzaW9uSWQ9MTQ1LTg5NzUzOTAtNTA2NDExMyZxdW90OywmcXVvdDtoZWlnaHQmcXVvdDs6JnF1b3Q7MzgwJnF1b3Q7fVwiPlx1MDAzQ2EgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWxpbmstbm9ybWFsIGEtY29sb3Itc2Vjb25kYXJ5IHJlcG9ydC1hYnVzZS1saW5rIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL2h6L3Jldmlld3MtcmVuZGVyL3JlcG9ydC1hYnVzZT9pZT1VVEY4JmFtcDt2b3RlRG9tYWluPVJldmlld3MmYW1wO3JlZj1jbV9jcl9kcF9kX3J2d19obHAmYW1wO2NzcmZUPWdraW9KaldrdWhUT2IyNVRWQmhWOWFMZllnMjdFSlJGbHcxZTJNNEFBQUFCQUFBQUFGMlJLSXh5WVhjQUFBQUElMkI0a1VFayUyRjdpTUdSM3hQY1g2aVUmYW1wO2VudGl0eUlkPVIyN1pYTktTRjVNNUxDJmFtcDtzZXNzaW9uSWQ9MTQ1LTg5NzUzOTAtNTA2NDExM1wiPlJlcG9ydCBhYnVzZVx1MDAzQy9hPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlxuICBcdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBpZD1cIlIzTEhDNkNXMkRPVjc3XCIgZGF0YS1ob29rPVwicmV2aWV3XCIgY2xhc3M9XCJhLXNlY3Rpb24gcmV2aWV3IGFvay1yZWxhdGl2ZVwiPlx1MDAzQ2RpdiBpZD1cIlIzTEhDNkNXMkRPVjc3LXJldmlldy1jYXJkXCIgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctbm9uZVwiPlx1MDAzQ2RpdiBpZD1cImN1c3RvbWVyX3Jldmlldy1SM0xIQzZDVzJET1Y3N1wiIGNsYXNzPVwiYS1zZWN0aW9uIGNlbHdpZGdldFwiPlx1MDAzQ2RpdiBkYXRhLWhvb2s9XCJnZW5vbWUtd2lkZ2V0XCIgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctbWluaVwiPlx1MDAzQ2EgaHJlZj1cIi9ncC9wcm9maWxlL2Ftem4xLmFjY291bnQuQUg1SjJFUjNWVUdFTEI0NU9YNkFRN1BNSEtLUS9yZWY9Y21fY3JfZHBfZF9nd190cj9pZT1VVEY4XCIgY2xhc3M9XCJhLXByb2ZpbGVcIiBkYXRhLWEtc2l6ZT1cInNtYWxsXCI+XHUwMDNDZGl2IGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGNsYXNzPVwiYS1wcm9maWxlLWF2YXRhci13cmFwcGVyXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1wcm9maWxlLWF2YXRhclwiPlx1MDAzQ2ltZyBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEveC1sb2NhbGUvY29tbW9uL2dyZXktcGl4ZWwuZ2lmXCIgY2xhc3M9XCJhLWxhenktbG9hZGVkXCIgZGF0YS1zcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL1MvYW1hem9uLWF2YXRhcnMtZ2xvYmFsL2RlZmF1bHQuX0NSMCwwLDEwMjQsMTAyNF9TWDQ4Xy5wbmdcIj5cdTAwM0Nub3NjcmlwdD5cdTAwM0NpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9TL2FtYXpvbi1hdmF0YXJzLWdsb2JhbC9kZWZhdWx0Ll9DUjAsMCwxMDI0LDEwMjRfU1g0OF8ucG5nXCIvPlx1MDAzQy9ub3NjcmlwdD5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1wcm9maWxlLWNvbnRlbnRcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1wcm9maWxlLW5hbWVcIj5LaXRjaGVuIERyb25lXHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0MvYT5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiB0aXRsZT1cIjUuMCBvdXQgb2YgNSBzdGFyc1wiIGhyZWY9XCIvZ3AvY3VzdG9tZXItcmV2aWV3cy9SM0xIQzZDVzJET1Y3Ny9yZWY9Y21fY3JfZHBfZF9ydndfdHRsP2llPVVURjgmYW1wO0FTSU49QjAxR0tRSTM5MlwiPlx1MDAzQ2kgZGF0YS1ob29rPVwicmV2aWV3LXN0YXItcmF0aW5nXCIgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXIgYS1zdGFyLTUgcmV2aWV3LXJhdGluZ1wiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWljb24tYWx0XCI+NS4wIG91dCBvZiA1IHN0YXJzXHUwMDNDL3NwYW4+XHUwMDNDL2k+XHUwMDNDL2E+XHUwMDNDc3BhbiBjbGFzcz1cImEtbGV0dGVyLXNwYWNlXCI+XHUwMDNDL3NwYW4+XHUwMDNDYSBkYXRhLWhvb2s9XCJyZXZpZXctdGl0bGVcIiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtbGluay1ub3JtYWwgcmV2aWV3LXRpdGxlIGEtY29sb3ItYmFzZSByZXZpZXctdGl0bGUtY29udGVudCBhLXRleHQtYm9sZFwiIGhyZWY9XCIvZ3AvY3VzdG9tZXItcmV2aWV3cy9SM0xIQzZDVzJET1Y3Ny9yZWY9Y21fY3JfZHBfZF9ydndfdHRsP2llPVVURjgmYW1wO0FTSU49QjAxR0tRSTM5MlwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJcIj5HZW9yZ2VvdXMgYW5kIGluZXhwZW5zaXZlLlx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgXHUwMDNDL2E+XHUwMDNDL2Rpdj5cdTAwM0NzcGFuIGRhdGEtaG9vaz1cInJldmlldy1kYXRlXCIgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXNlY29uZGFyeSByZXZpZXctZGF0ZVwiPkRlY2VtYmVyIDE3LCAyMDE4XHUwMDNDL3NwYW4+XHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW1pbmkgcmV2aWV3LWRhdGEgcmV2aWV3LWZvcm1hdC1zdHJpcFwiPlx1MDAzQ3NwYW4gZGF0YS1ob29rPVwiYXZwLWJhZGdlLWxpbmtsZXNzXCIgY2xhc3M9XCJhLXNpemUtbWluaSBhLWNvbG9yLXN0YXRlIGEtdGV4dC1ib2xkXCI+VmVyaWZpZWQgUHVyY2hhc2VcdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtc3BhY2luZy1zbWFsbCByZXZpZXctZGF0YVwiPlx1MDAzQ3NwYW4gZGF0YS1ob29rPVwicmV2aWV3LWJvZHlcIiBjbGFzcz1cImEtc2l6ZS1iYXNlIHJldmlldy10ZXh0XCI+XHUwMDNDZGl2IGFyaWEtbGl2ZT1cInBvbGl0ZVwiIGRhdGEtYS1leHBhbmRlci1uYW1lPVwicmV2aWV3X3RleHRfcmVhZF9tb3JlXCIgZGF0YS1hLWV4cGFuZGVyLWNvbGxhcHNlZC1oZWlnaHQ9XCIzMDBcIiBjbGFzcz1cImEtZXhwYW5kZXItY29sbGFwc2VkLWhlaWdodCBhLXJvdyBhLWV4cGFuZGVyLWNvbnRhaW5lciBhLWV4cGFuZGVyLXBhcnRpYWwtY29sbGFwc2UtY29udGFpbmVyXCIgc3R5bGU9XCJtYXgtaGVpZ2h0OjMwMHB4XCI+XHUwMDNDZGl2IGRhdGEtaG9vaz1cInJldmlldy1jb2xsYXBzZWRcIiBhcmlhLWV4cGFuZGVkPVwiZmFsc2VcIiBjbGFzcz1cImEtZXhwYW5kZXItY29udGVudCByZXZpZXdUZXh0IHJldmlldy10ZXh0LWNvbnRlbnQgYS1leHBhbmRlci1wYXJ0aWFsLWNvbGxhcHNlLWNvbnRlbnRcIj5cdTAwM0NzcGFuIGNsYXNzPVwiXCI+Rm9yIHRoZSBwcmljZSwgb25lIGNvdWxkIG5vdCBkbyBiZXR0ZXIuIEkgZ2F2ZSBteSBlaWdodC15ZWFyLW9sZCBHb2QtZGF1Z2h0ZXIgYSBjaG9pY2Ugb2Ygc2l4IGVhcnJpbmdzIGZvciBoZXIgbW90aGVy4oCZcyBDaHJpc3RtYXMuIFNoZSB3YXMgcGxlYXNlZCB3aGVuIHRoZXkgYXJyaXZlZC4gU3R5bGlzaC4gTG9va3MgdHdvIHRvIHRocmVlIHRpbWVzIG1vcmUgZXhwZW5zaXZlIHRoYW4gdGhlIHRoZSBwcmljZS5cdTAwM0Mvc3Bhbj5cbiAgXHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJhLWV4cGFuZGVyLWhlYWRlciBhLWV4cGFuZGVyLXBhcnRpYWwtY29sbGFwc2UtaGVhZGVyXCIgc3R5bGU9XCJvcGFjaXR5OiAwOyBkaXNwbGF5OiBub25lO1wiPlx1MDAzQ2RpdiBjbGFzcz1cImEtZXhwYW5kZXItY29udGVudC1mYWRlXCI+XHUwMDNDL2Rpdj5cdTAwM0NhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiBkYXRhLWhvb2s9XCJleHBhbmQtY29sbGFwc2UtcmVhZC1tb3JlLWxlc3NcIiBkYXRhLWFjdGlvbj1cImEtZXhwYW5kZXItdG9nZ2xlXCIgY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hLWV4cGFuZGVyLXRvZ2dsZT1cInsmcXVvdDthbGxvd0xpbmtEZWZhdWx0JnF1b3Q7OnRydWUsICZxdW90O2V4cGFuZF9wcm9tcHQmcXVvdDs6JnF1b3Q7UmVhZCBtb3JlJnF1b3Q7LCAmcXVvdDtjb2xsYXBzZV9wcm9tcHQmcXVvdDs6JnF1b3Q7UmVhZCBsZXNzJnF1b3Q7fVwiPlx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLWV4dGVuZGVyLWV4cGFuZFwiPlx1MDAzQy9pPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWV4cGFuZGVyLXByb21wdFwiPlJlYWQgbW9yZVx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBkYXRhLWhvb2s9XCJyZXZpZXctY29tbWVudHNcIiBjbGFzcz1cImEtcm93IHJldmlldy1jb21tZW50cyBjci12b3RlLWFjdGlvbi1iYXJcIj5cdTAwM0NzcGFuIGNsYXNzPVwiY3Itdm90ZVwiIGRhdGEtaG9vaz1cInJldmlldy12b3Rpbmctd2lkZ2V0XCI+XG4gIFx1MDAzQ2RpdiBjbGFzcz1cImNyLWhlbHBmdWwtYnV0dG9uIGFvay1mbG9hdC1sZWZ0XCI+XG4gICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24tYmFzZVwiIGlkPVwiYS1hdXRvaWQtMjlcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24taW5uZXJcIj5cdTAwM0NhIGhyZWY9XCJodHRwczovL3d3dy5hbWF6b24uY29tL2FwL3NpZ25pbj9vcGVuaWQucmV0dXJuX3RvPWh0dHBzJTNBJTJGJTJGd3d3LmFtYXpvbi5jb20lMkZkcCUyRkIwMUdLUUkzOTIlMkZyZWYlM0RjbV9jcl9kcF9kX3ZvdGVfbGZ0JTNGaWUlM0RVVEY4JTI2dm90ZUluc3RhbmNlSWQlM0RSM0xIQzZDVzJET1Y3NyUyNnZvdGVWYWx1ZSUzRDElMjZjc3JmVCUzRGd2WFFYb2d1SmxQaWhxeGRnZXJiUm9MTmVhNDhSMDFKTVJUZ0hJRUFBQUFCQUFBQUFGMlJLSXh5WVhjQUFBQUElMjUyQjRrVUVrJTI1MkY3aU1HUjN4UGNYNmlVJTIzUjNMSEM2Q1cyRE9WNzcmYW1wO29wZW5pZC5pZGVudGl0eT1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAlMkZpZGVudGlmaWVyX3NlbGVjdCZhbXA7b3BlbmlkLmNsYWltZWRfaWQ9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wJTJGaWRlbnRpZmllcl9zZWxlY3QmYW1wO29wZW5pZC5hc3NvY19oYW5kbGU9dXNmbGV4JmFtcDtvcGVuaWQubW9kZT1jaGVja2lkX3NldHVwJmFtcDtvcGVuaWQubnM9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wXCIgZGF0YS1ob29rPVwidm90ZS1oZWxwZnVsLWJ1dHRvblwiIGNsYXNzPVwiYS1idXR0b24tdGV4dFwiIHJvbGU9XCJidXR0b25cIiBpZD1cImEtYXV0b2lkLTI5LWFubm91bmNlXCI+XHUwMDNDZGl2IGNsYXNzPVwiY3ItaGVscGZ1bC10ZXh0XCI+XG4gICAgICAgICAgSGVscGZ1bFx1MDAzQy9kaXY+XG4gICAgICBcdTAwM0MvYT5cdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2PlxuICBcdTAwM0Mvc3Bhbj5cblxuXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tdGV4dC1zZXBhcmF0b3JcIiByb2xlPVwiaW1nXCIgYXJpYS1sYWJlbD1cInxcIj5cdTAwM0MvaT5cdTAwM0NhIGRhdGEtaG9vaz1cInJldmlldy1jb21tZW50XCIgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWxpbmstbm9ybWFsIGEtY29sb3Itc2Vjb25kYXJ5IGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL2dwL2N1c3RvbWVyLXJldmlld3MvUjNMSEM2Q1cyRE9WNzcvcmVmPWNtX2NyX2RwX2RfcnZ3X2J0bT9pZT1VVEY4JmFtcDtBU0lOPUIwMUdLUUkzOTIjd2FzVGhpc0hlbHBmdWxcIj5Db21tZW50XHUwMDNDL2E+XHUwMDNDc3BhbiBjbGFzcz1cImNyLWZvb3Rlci1saW5lLWhlaWdodFwiPlxuICAgICAgXHUwMDNDc3Bhbj5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi10ZXh0LXNlcGFyYXRvclwiIHJvbGU9XCJpbWdcIiBhcmlhLWxhYmVsPVwifFwiPlx1MDAzQy9pPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJjci1wb3B1cFwiIGRhdGEtY3ItcG9wdXA9XCJ7JnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7NTgwJnF1b3Q7LCZxdW90O3RpdGxlJnF1b3Q7OiZxdW90O1JlcG9ydEFidXNlJnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvaHovcmV2aWV3cy1yZW5kZXIvcmVwb3J0LWFidXNlP2llPVVURjgmYW1wO3ZvdGVEb21haW49UmV2aWV3cyZhbXA7cmVmPWNtX2NyX2RwX2RfcnZ3X2hscCZhbXA7Y3NyZlQ9Z3ZYUVhvZ3VKbFBpaHF4ZGdlcmJSb0xOZWE0OFIwMUpNUlRnSElFQUFBQUJBQUFBQUYyUktJeHlZWGNBQUFBQSUyQjRrVUVrJTJGN2lNR1IzeFBjWDZpVSZhbXA7ZW50aXR5SWQ9UjNMSEM2Q1cyRE9WNzcmYW1wO3Nlc3Npb25JZD0xNDUtODk3NTM5MC01MDY0MTEzJnF1b3Q7LCZxdW90O2hlaWdodCZxdW90OzomcXVvdDszODAmcXVvdDt9XCI+XHUwMDNDYSBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtbGluay1ub3JtYWwgYS1jb2xvci1zZWNvbmRhcnkgcmVwb3J0LWFidXNlLWxpbmsgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvaHovcmV2aWV3cy1yZW5kZXIvcmVwb3J0LWFidXNlP2llPVVURjgmYW1wO3ZvdGVEb21haW49UmV2aWV3cyZhbXA7cmVmPWNtX2NyX2RwX2RfcnZ3X2hscCZhbXA7Y3NyZlQ9Z3ZYUVhvZ3VKbFBpaHF4ZGdlcmJSb0xOZWE0OFIwMUpNUlRnSElFQUFBQUJBQUFBQUYyUktJeHlZWGNBQUFBQSUyQjRrVUVrJTJGN2lNR1IzeFBjWDZpVSZhbXA7ZW50aXR5SWQ9UjNMSEM2Q1cyRE9WNzcmYW1wO3Nlc3Npb25JZD0xNDUtODk3NTM5MC01MDY0MTEzXCI+UmVwb3J0IGFidXNlXHUwMDNDL2E+XHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XG4gIFx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGlkPVwicmV2aWV3cy1tZWRsZXktZm9vdGVyXCIgZGF0YS1ob29rPVwicmV2aWV3cy1tZWRsZXktZm9vdGVyXCIgY2xhc3M9XCJhLXNlY3Rpb25cIj5cdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLWxhcmdlXCI+XHUwMDNDYSBkYXRhLWhvb2s9XCJzZWUtYWxsLXJldmlld3MtbGluay1mb290XCIgY2xhc3M9XCJhLWxpbmstZW1waGFzaXMgYS10ZXh0LWJvbGRcIiBocmVmPVwiL0tlbXN0b25lLUVsZWdhbnQtTXVsdGlsYXllci1FYXJyaW5ncy1BY2Nlc3NvcnkvcHJvZHVjdC1yZXZpZXdzL0IwMUdLUUkzOTIvcmVmPWNtX2NyX2RwX2Rfc2hvd19hbGxfYnRtP2llPVVURjgmYW1wO3Jldmlld2VyVHlwZT1hbGxfcmV2aWV3c1wiPlNlZSBhbGwgMTIxIGN1c3RvbWVyIHJldmlld3NcdTAwM0MvYT5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uIGEtYnV0dG9uLWJhc2Ugd3JpdGVSZXZpZXdCdXR0b25cIiBpZD1cImEtYXV0b2lkLTMwXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uLWlubmVyXCI+XHUwMDNDYSBocmVmPVwiL3Jldmlldy9jcmVhdGUtcmV2aWV3L3JlZj1jbV9jcl9kcF9kX3dyX2J1dF9idG0/aWU9VVRGOCZhbXA7Y2hhbm5lbD1nbGFuY2UtZGV0YWlsJmFtcDthc2luPUIwMUdLUUkzOTJcIiBkYXRhLWhvb2s9XCJ3cml0ZS1yZXZpZXctYnV0dG9uXCIgY2xhc3M9XCJhLWJ1dHRvbi10ZXh0XCIgcm9sZT1cImJ1dHRvblwiIGlkPVwiYS1hdXRvaWQtMzAtYW5ub3VuY2VcIj5Xcml0ZSBhIGN1c3RvbWVyIHJldmlld1x1MDAzQy9hPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2PlxuXHUwMDNDL2Rpdj5cdTAwM0Mvc3Bhbj5cbiAgXHUwMDNDc3BhbiBjbGFzcz1cImNyLXdpZGdldC1Dcm9zc01hcmtldHBsYWNlU2hhcmluZ1wiIGRhdGEtaG9vaz1cImNyLXdpZGdldC1Dcm9zc01hcmtldHBsYWNlU2hhcmluZ1wiPlx1MDAzQy9zcGFuPlxuICBcdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XG5cbiAgICBcbiAgICBcblxuICBcblxuXG5cblxuXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cblxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDZGl2IGlkPVwiZ2l2ZWF3YXlfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cImdpdmVhd2F5XCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFx1MDAzQ2RpdiBpZD1cImdpdmVhd2F5XCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLWV4dHJhLWxhcmdlXCI+XG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtZGl2aWRlciBhLWRpdmlkZXItc2VjdGlvblwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtZGl2aWRlci1pbm5lclwiPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQ2gyPlNldCB1cCBhbiBBbWF6b24gR2l2ZWF3YXlcdTAwM0MvaDI+XG4gICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLWZpeGVkLWxlZnQtZ3JpZCBhLXNwYWNpbmctdG9wLW1lZGl1bVwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtbGVmdC1ncmlkLWlubmVyXCIgc3R5bGU9XCJwYWRkaW5nLWxlZnQ6MTMwcHhcIj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1maXhlZC1sZWZ0LWdyaWQtY29sIGEtY29sLWxlZnRcIiBzdHlsZT1cIndpZHRoOjEzMHB4O21hcmdpbi1sZWZ0Oi0xMzBweDtmbG9hdDpsZWZ0O1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDaW1nIGFsdD1cIktlbXN0b25lIEVsZWdhbnQgUm9zZSBHb2xkL1NpbHZlciAyIFRvbmUgTXVsdGlsYXllciBEYW5nbGUgRWFycmluZ3MgQWNjZXNzb3J5IGZvciBXb21hbiwgMi40IEluY2hlc1wiIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS80MUg4ejRYYzBYTC5fU0w1MDBfQUExMzBfLmpwZ1wiIHdpZHRoPVwiMTMwXCI+XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtZml4ZWQtbGVmdC1ncmlkLWNvbCBhLWNvbC1yaWdodFwiIHN0eWxlPVwicGFkZGluZy1sZWZ0OjEuNSU7ZmxvYXQ6bGVmdDtcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtc3BhY2luZy10b3Atc21hbGwgdGV4dC1hbmQtYnRuXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuNlwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuPkFtYXpvbiBHaXZlYXdheSBhbGxvd3MgeW91IHRvIHJ1biBwcm9tb3Rpb25hbCBnaXZlYXdheXMgaW4gb3JkZXIgdG8gY3JlYXRlIGJ1enosIHJld2FyZCB5b3VyIGF1ZGllbmNlLCBhbmQgYXR0cmFjdCBuZXcgZm9sbG93ZXJzIGFuZCBjdXN0b21lcnMuIFx1MDAzQy9zcGFuPlx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXJcIiBocmVmPVwiL2dhL2dpdmVhd2F5cy8/aT1kcGxtJmFtcDtwYWdlSWQ9MSZhbXA7cmVmPWFnYV9kcF9sbVwiPkxlYXJuIG1vcmUgYWJvdXQgQW1hem9uIEdpdmVhd2F5XHUwMDNDL2E+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctdG9wLW1lZGl1bSBnaXZlYXdheS1wcm9kdWN0LXRpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtdGV4dC1ib2xkXCI+VGhpcyBpdGVtOiBcdTAwM0Mvc3Bhbj5cdTAwM0NzcGFuPktlbXN0b25lIEVsZWdhbnQgUm9zZSBHb2xkL1NpbHZlciAyIFRvbmUgTXVsdGlsYXllciBEYW5nbGUgRWFycmluZ3MgQWNjZXNzb3J5IGZvciBXb21hbiwgMi40IEluY2hlc1x1MDAzQy9zcGFuPlx1MDAzQ2JyPlxuICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93IGEtc3BhY2luZy10b3AtbWVkaXVtXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uIGEtYnV0dG9uLWJhc2VcIiBpZD1cImEtYXV0b2lkLTMxXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uLWlubmVyXCI+XHUwMDNDYSBocmVmPVwiL2dpdmVhd2F5L2hvc3Qvc2V0dXAvcmVmPWFnYV9oX3N1X2RwP19lbmNvZGluZz1VVEY4JmFtcDthc2luPUIwMUdLUUkzOTJcIiBuYW1lPVwic3VibWl0R2l2ZWF3YXlcIiBjbGFzcz1cImEtYnV0dG9uLXRleHRcIiByb2xlPVwiYnV0dG9uXCIgaWQ9XCJhLWF1dG9pZC0zMS1hbm5vdW5jZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXQgdXAgYSBnaXZlYXdheVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQy9hPlx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzQ2JyPlxuICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICAgICAgICAgICAgICBcdTAwM0MvZGl2Plx1MDAzQy9kaXY+XG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgXHUwMDNDL2Rpdj5cblxuICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG4gICAgICAgIFxuICAgICAgICBQLndoZW4oJ2pRdWVyeScpLmV4ZWN1dGUoZnVuY3Rpb24oJCkge1xuICAgICAgICAgICAgaWYgKCQoXCIjZ2l2ZWF3YXlcIikuaXMoXCI6aGlkZGVuXCIpICYmXG4gICAgICAgICAgICAgICAgICAgICh0eXBlb2YgZ2l2ZWF3YXlHaWZ0aW5nU2hhcmVWYXIgIT09ICd1bmRlZmluZWQnICYmIGdpdmVhd2F5R2lmdGluZ1NoYXJlVmFyKSkge1xuICAgICAgICAgICAgICAgICQoXCIjZ2l2ZWF3YXlcIikucmVtb3ZlQ2xhc3MoXCJhLWhpZGRlblwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgXHUwMDNDL3NjcmlwdD5cblxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFx1MDAzQy9kaXY+XG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxudmFyIGlzQVVJID0gdHlwZW9mIFAgPT09ICdvYmplY3QnICYmIHR5cGVvZiBQLndoZW4gPT09ICdmdW5jdGlvbic7XG4gIGlmKHR5cGVvZiBzZXRDU01SZXEgPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBzZXRDU01SZXEoJ2NmJyk7XG4gIH1lbHNlIHtcbiAgICAgaWYodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHVldCgnY2YnKTtcbiAgICAgfVxuICAgICBpZihpc0FVSSl7XG4gICAgIFx0ICAgUC50cmlnZ2VyKFwiY2ZcIik7XG4gICAgIFx0fWVsc2V7XG4gICAgIFx0XHRhbXpuSlEuY29tcGxldGVkU3RhZ2UoJ2Ftem5KUS5jcml0aWNhbEZlYXR1cmUnKTtcbiAgICAgXHR9XG4gIH1cblx1MDAzQy9zY3JpcHQ+XG4gXG5cblxuXG5cblxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuXG4gIGlmKHR5cGVvZiBQICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBQLndoZW4gPT09IFwiZnVuY3Rpb25cIil7XG4gICAgUC53aGVuKCdjZicpLmV4ZWN1dGUoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgUC53aGVuKCdzZWFyY2gtanMtanEnKS5leGVjdXRlKGZ1bmN0aW9uKCl7fSk7XG4gIFAud2hlbignYW1hem9uU2hvdmVsZXInKS5leGVjdXRlKGZ1bmN0aW9uKCl7fSk7XG4gIFAud2hlbignc2ltc0pTJykuZXhlY3V0ZShmdW5jdGlvbigpe30pO1xuICBQLndoZW4oJ2NtdUFubm90YXRpb25zJykuZXhlY3V0ZShmdW5jdGlvbigpe30pO1xuICBQLndoZW4oJ2V4dGVybmFsSlMudGFnZ2luZycpLmV4ZWN1dGUoZnVuY3Rpb24oKXt9KTtcbiAgUC53aGVuKCdhbXpuLXJhdGluZ3MtYmFyJykuZXhlY3V0ZShmdW5jdGlvbigpe30pO1xuICBQLndoZW4oJ2FjY2Vzc29yaWVzSlMnKS5leGVjdXRlKGZ1bmN0aW9uKCl7fSk7XG4gIFAud2hlbigncHJpY2Vmb3JtYXR0ZXJKUycpLmV4ZWN1dGUoZnVuY3Rpb24oKXt9KTtcbiAgUC53aGVuKCdDdXN0b21lclBvcG92ZXInKS5leGVjdXRlKGZ1bmN0aW9uKCl7fSk7XG5cbiAgICB9KTtcbiAgfVxuXHUwMDNDL3NjcmlwdD5cblxuXG5cblxuXG5cbiBcblxuXG4gXG5cblx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG4vLyBUaGlzIHdpbGwgZmV0Y2ggdGhlIHJlc291cmNlIGluIGEgbG93IGltcGFjdCB3YXkgZnJvbSB0aGUgZXhwZXJpbWVudCBzZXJ2ZXIuXG4vLyBleGVjdXRlT25sb2FkIHdpbGwgcHJldmVudCBmZXRjaGluZyB0aGUgcmVzb3VyY2UgdW50aWwgZXZlcnl0aGluZyBlbHNlIG9uIHRoZSBwYWdlIGhhcyBsb2FkZWQuXG52YXIgY2xvdWRmcm9udEltZyA9IG5ldyBJbWFnZSgpO1xudmFyIHNob3VsZEV4ZWN1dGVPbmxvYWQgPSAoXCIxXCIgPT0gXCIxXCIpO1xuaWYgKHNob3VsZEV4ZWN1dGVPbmxvYWQpIHtcbiAgICBpZiAod2luZG93LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpeyBjbG91ZGZyb250SW1nLnNyYyA9IFwiLy9jbG91ZGZyb250LWxhYnMuYW1hem9uYXdzLmNvbS94LnBuZ1wiOyB9LCA0MDApO30sIGZhbHNlKTtcbiAgICB9IGVsc2UgaWYgKHdpbmRvdy5hdHRhY2hFdmVudCkge1xuICAgICAgICB3aW5kb3cuYXR0YWNoRXZlbnQoXCJvbmxvYWRcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7IGNsb3VkZnJvbnRJbWcuc3JjID0gXCIvL2Nsb3VkZnJvbnQtbGFicy5hbWF6b25hd3MuY29tL3gucG5nXCI7IH0sIDQwMCk7fSk7XG4gICAgfVxufSBlbHNlIHtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7IGNsb3VkZnJvbnRJbWcuc3JjID0gXCIvL2Nsb3VkZnJvbnQtbGFicy5hbWF6b25hd3MuY29tL3gucG5nXCI7IH0sIDQwMCk7XG59XG5cdTAwM0Mvc2NyaXB0PlxuIFxuXG4gXG4gXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDc2NyaXB0PlxuKHdpbmRvdy5BbWF6b25VSVBhZ2VKUyA/IEFtYXpvblVJUGFnZUpTIDogUCkud2hlbignYXRmJykuZXhlY3V0ZShmdW5jdGlvbigpe1xuICAod2luZG93LkFtYXpvblVJUGFnZUpTID8gQW1hem9uVUlQYWdlSlMgOiBQKS5sb2FkLmpzKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvMzElMkJZSm1rTzZaTC5qcz9BVUlDbGllbnRzL1BhZ2VSZWZyZXNoQXNzZXQjMTIzMzkyLVQxJyk7XG59KTtcblx1MDAzQy9zY3JpcHQ+XG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ3NjcmlwdCBsYW5ndWFnZT1cIkphdmFTY3JpcHRcIj5cbiAgICBQLnJlZ2lzdGVyKCdwYWdlLXJlZnJlc2gtanMtaW5pdC1tYXNvbi1kYXRhJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBkYXRhVG9SZXR1cm4gPSB7XCJkaXZUb1VwZGF0ZURhdGFcIjp7XCJ0d2lzdGVyXCI6e1widHdpc3Rlci1jZi1tYXJrZXJcIjp7XCJkaXZUb1VwZGF0ZVwiOlwidHdpc3Rlci1jZi1tYXJrZXJfZmVhdHVyZV9kaXZcIn0sXCJ2ZW5kb3ItcmViYXRlc1wiOntcImRpdlRvVXBkYXRlXCI6XCJ2ZW5kb3ItcmViYXRlc19mZWF0dXJlX2RpdlwifSxcImRwLWFkcy1jZW50ZXItcHJvbW9cIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZHAtYWRzLWNlbnRlci1wcm9tb19mZWF0dXJlX2RpdlwifSxcImRweC1idGYtZmVhdHVyZS1idWxsZXRzXCI6e1wiZGl2VG9VcGRhdGVcIjpcImRweC1idGYtZmVhdHVyZS1idWxsZXRzX2ZlYXR1cmVfZGl2XCJ9LFwic2ltcy1jb25zb2xpZGF0ZWQtNFwiOntcImRpdlRvVXBkYXRlXCI6XCJzaW1zLWNvbnNvbGlkYXRlZC00X2ZlYXR1cmVfZGl2XCJ9LFwiZHAtZmFzdC10cmFjay1sb2dnZXJcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZHAtZmFzdC10cmFjay1sb2dnZXJfZmVhdHVyZV9kaXZcIn0sXCJkcC1hZHMtbWlkZGxlXCI6e1wiZGl2VG9VcGRhdGVcIjpcImRwLWFkcy1taWRkbGVfZmVhdHVyZV9kaXZcIn0sXCJkcC1hZHMtY2VudGVyLXByb21vLXRvcFwiOntcImRpdlRvVXBkYXRlXCI6XCJkcC1hZHMtY2VudGVyLXByb21vLXRvcF9mZWF0dXJlX2RpdlwifSxcImRweC1hamF4LWJsb2NrLWNvbXBvbmVudHNcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZHB4LWFqYXgtYmxvY2stY29tcG9uZW50c19mZWF0dXJlX2RpdlwifSxcImFzay1kcC1zZWFyY2hcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiYXNrLWRwLXNlYXJjaF9mZWF0dXJlX2RpdlwifSxcInNpbXMtY29uc29saWRhdGVkLTJcIjp7XCJkaXZUb1VwZGF0ZVwiOlwic2ltcy1jb25zb2xpZGF0ZWQtMl9mZWF0dXJlX2RpdlwifSxcInZhLXJlbGF0ZWQtdmlkZW9zLXdpZGdldFwiOntcImRpdlRvVXBkYXRlXCI6XCJ2YS1yZWxhdGVkLXZpZGVvcy13aWRnZXRfZmVhdHVyZV9kaXZcIn0sXCJkcHgtYXBsdXMtYnJhbmQtc3RvcnlcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZHB4LWFwbHVzLWJyYW5kLXN0b3J5X2ZlYXR1cmVfZGl2XCJ9LFwiZHAtb3V0LW9mLXN0b2NrLXRvcFwiOntcImRpdlRvVXBkYXRlXCI6XCJkcC1vdXQtb2Ytc3RvY2stdG9wX2ZlYXR1cmVfZGl2XCJ9LFwiZHB4LWdpdmVhd2F5XCI6e1wiZGl2VG9VcGRhdGVcIjpcImRweC1naXZlYXdheV9mZWF0dXJlX2RpdlwifSxcImFuZG9uLWNvcmQtcHVsbGluZ1wiOntcImRpdlRvVXBkYXRlXCI6XCJhbmRvbi1jb3JkLXB1bGxpbmdfZmVhdHVyZV9kaXZcIn0sXCJkcHgtYXBsdXMtcHJvZHVjdC1kZXNjcmlwdGlvblwiOntcImRpdlRvVXBkYXRlXCI6XCJkcHgtYXBsdXMtcHJvZHVjdC1kZXNjcmlwdGlvbl9mZWF0dXJlX2RpdlwifSxcImRweC1taXJhaS1idGYtc2hvcGJ5bG9vay1zb2Z0bGluZXNcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZHB4LW1pcmFpLWJ0Zi1zaG9wYnlsb29rLXNvZnRsaW5lc19mZWF0dXJlX2RpdlwifSxcImRweC1idGYtYnVuZGxlXCI6e1wiZGl2VG9VcGRhdGVcIjpcImRweC1idGYtYnVuZGxlX2ZlYXR1cmVfZGl2XCJ9LFwibHBvLXRvcC1zdHJpcGUtMlwiOntcImRpdlRvVXBkYXRlXCI6XCJscG8tdG9wLXN0cmlwZS0yX2ZlYXR1cmVfZGl2XCJ9LFwiZHB4LWJ0Zi1obGN4LWNvbXBhcmlzb25cIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZHB4LWJ0Zi1obGN4LWNvbXBhcmlzb25fZmVhdHVyZV9kaXZcIn0sXCJxcGUtdGl0bGUtdGFnXCI6e1wiZGl2VG9VcGRhdGVcIjpcInFwZS10aXRsZS10YWdfZmVhdHVyZV9kaXZcIn0sXCJoZXJvLXF1aWNrLXByb21vLWdyaWRcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiaGVyby1xdWljay1wcm9tby1ncmlkX2ZlYXR1cmVfZGl2XCJ9LFwic2ltcy1jb25zb2xpZGF0ZWQtM1wiOntcImRpdlRvVXBkYXRlXCI6XCJzaW1zLWNvbnNvbGlkYXRlZC0zX2ZlYXR1cmVfZGl2XCJ9LFwidHdpc3Rlci1hdGYtbWFya2VyXCI6e1wiZGl2VG9VcGRhdGVcIjpcInR3aXN0ZXItYXRmLW1hcmtlcl9mZWF0dXJlX2RpdlwifSxcImRweC1sZWdhbFwiOntcImRpdlRvVXBkYXRlXCI6XCJkcHgtbGVnYWxfZmVhdHVyZV9kaXZcIn0sXCJhc2stYnRmXCI6e1wiZGl2VG9VcGRhdGVcIjpcImFzay1idGZfZmVhdHVyZV9kaXZcIn0sXCJ0d2lzdGVyLWxvZy1tZXRyaWNzXCI6e1wiZGl2VG9VcGRhdGVcIjpcInR3aXN0ZXItbG9nLW1ldHJpY3NfZmVhdHVyZV9kaXZcIn0sXCJwcm9tb3Rpb25zXCI6e1wiZGl2VG9VcGRhdGVcIjpcInByb21vdGlvbnNfZmVhdHVyZV9kaXZcIn0sXCJkcHgtYW1hem9uLXNhbGVzLXJhbmtcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZHB4LWFtYXpvbi1zYWxlcy1yYW5rX2ZlYXR1cmVfZGl2XCJ9LFwid2FycmFudHktcmVxdWVzdC13aWRnZXRcIjp7XCJkaXZUb1VwZGF0ZVwiOlwid2FycmFudHktcmVxdWVzdC13aWRnZXRfZmVhdHVyZV9kaXZcIn0sXCJwcm9kdWN0LWFsZXJ0LWdyaWRcIjp7XCJkaXZUb1VwZGF0ZVwiOlwicHJvZHVjdC1hbGVydC1ncmlkX2ZlYXR1cmVfZGl2XCJ9LFwiZHB4LWltYWdlLWJsb2NrLXZhcmlhdGlvbnNcIjp7XCJkaXZUb1VwZGF0ZVwiOlwiZHB4LWltYWdlLWJsb2NrLXZhcmlhdGlvbnNfZmVhdHVyZV9kaXZcIn0sXCJkcHgtYXBsdXMtM3AtcHJvZHVjdC1kZXNjcmlwdGlvblwiOntcImRpdlRvVXBkYXRlXCI6XCJkcHgtYXBsdXMtM3AtcHJvZHVjdC1kZXNjcmlwdGlvbl9mZWF0dXJlX2RpdlwifSxcInNpbXMtY29uc29saWRhdGVkLTFcIjp7XCJkaXZUb1VwZGF0ZVwiOlwic2ltcy1jb25zb2xpZGF0ZWQtMV9mZWF0dXJlX2RpdlwifX0sXCJsb2NhdGlvblwiOnt9LFwicmVudGJ1eWJveFwiOnt9LFwibmV3YnV5Ym94XCI6e30sXCJ1cHNlbGxcIjp7fX19OyAvL3NlbGVjdGl2ZWx5IG5vdCBlc2NhcGluZyB0aGlzLlxuICAgICAgICByZXR1cm4gZGF0YVRvUmV0dXJuO1xuICAgIH0pO1xuXHUwMDNDL3NjcmlwdD5cblxuXHUwMDNDc2NyaXB0IHR5cGU9XCJhLXN0YXRlXCIgZGF0YS1hLXN0YXRlPVwieyZxdW90O2tleSZxdW90OzomcXVvdDtwYWdlLXJlZnJlc2gtZGF0YS1tYXNvbiZxdW90O31cIj57XCJwYWdlUmVmcmVzaFVybFBhcmFtc1wiOntcInNpZFwiOlwiMTQ1LTg5NzUzOTAtNTA2NDExM1wiLFwicHRkXCI6XCJGQVNISU9ORUFSUklOR1wiLFwianNvblwiOlwiMVwiLFwiZHB4QWpheEZsYWdcIjpcIjFcIixcInNDYWNcIjpcIjFcIixcImlzVURQRmxhZ1wiOlwiMVwiLFwidHdpc3RlclZpZXdcIjpcImdsYW5jZVwiLFwiZWVcIjpcIjJcIixcInBnaWRcIjpcImpld2VscnlfZGlzcGxheV9vbl93ZWJzaXRlXCIsXCJub2RlSURcIjpcIjMzNjc1ODFcIixcInRhZ0FjdGlvbkNvZGVcIjpcInNwZWVjbXVzaW4tMjBcIixcInJpZFwiOlwiNDc1RTM0SlFWOUZOUEhKOVNTVERcIixcInBhcmVudEFzaW5cIjpcIkIwMUdLUUkzOTJcIixcImVuUHJlXCI6XCIxXCIsXCJkY21cIjpcIjFcIixcImFzaW5MaXN0XCI6XCJCMDFHS1FJMzkyXCIsXCJudW1lcmljR0xQcm9kdWN0R3JvdXBJRFwiOlwiMTk3XCIsXCJzdG9yZUlEXCI6XCJqZXdlbHJ5XCIsXCJhdWlBamF4XCI6XCIxXCJ9fVx1MDAzQy9zY3JpcHQ+XG5cblxuXG5cblxuXG5cbiAgXG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuXG5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICBcblxuXG4gICAgICAgICAgICBcblxuXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cbiAgICAgICAgICAgIFxuXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDZGl2IGlkPVwiaW1hZ2VCbG9ja1ZhcmlhdGlvbnNfZmVhdHVyZV9kaXZcIiBjbGFzcz1cImZlYXR1cmVcIiBkYXRhLWZlYXR1cmUtbmFtZT1cImltYWdlQmxvY2tWYXJpYXRpb25zXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cblx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG5QLndoZW4oJ0EnLCAnalF1ZXJ5JywgJ0ltYWdlQmxvY2tBVEYnLCAnY2YnKS5yZWdpc3RlcignSW1hZ2VCbG9ja0JURicsIGZ1bmN0aW9uKEEsICQsIGltYWdlQmxvY2tBVEYsIGNmKXtcbnZhciBkYXRhID0ge307XG52YXIgb2JqID0galF1ZXJ5LnBhcnNlSlNPTigne1wiZGF0YUluSnNvblwiOm51bGwsXCJhbHdheXNJbmNsdWRlVmlkZW9cIjp0cnVlLFwiYXV0b3BsYXlWaWRlb1wiOmZhbHNlLFwiZGVmYXVsdENvbG9yXCI6XCJpbml0aWFsXCIsXCJtYWluSW1hZ2VTaXplc1wiOltbXCIzOTVcIixcIjM5NVwiXSxbXCI1MDBcIixcIjUwMFwiXSxbXCI1MzVcIixcIjUzNVwiXSxbXCI1NzVcIixcIjU3NVwiXSxbXCI2MjVcIixcIjYyNVwiXSxbXCI2NzVcIixcIjY3NVwiXSxbXCI2OTVcIixcIjY5NVwiXV0sXCJtYXhBbHRzXCI6NyxcImFsdHNPbkxlZnRcIjp0cnVlLFwicHJvZHVjdEdyb3VwSURcIjpcImpld2VscnlfZGlzcGxheV9vbl93ZWJzaXRlXCIsXCJsYXp5TG9hZEV4cGVyaWVuY2VEaXNhYmxlZFwiOnRydWUsXCJsYXp5TG9hZEV4cGVyaWVuY2VPbkhvdmVyRGlzYWJsZWRcIjpmYWxzZSxcInVzZUNocm9tZWxlc3NWaWRlb1BsYXllclwiOmZhbHNlLFwiY29sb3JUb0FzaW5cIjp7fSxcInJlZmFjdG9yRW5hYmxlZFwiOnRydWUsXCJ1c2VJVlwiOmZhbHNlLFwidGFibGV0V2ViXCI6ZmFsc2UsXCJ2aWV3c1wiOltcIkltYWdlQmxvY2tNYWduaWZpZXJWaWV3XCIsXCJJbWFnZUJsb2NrQWx0SW1hZ2VWaWV3XCIsXCJJbWFnZUJsb2NrVmlkZW9WaWV3XCIsXCJJbWFnZUJsb2NrVHdpc3RlclZpZXdcIl0sXCJlbmhhbmNlZEhvdmVyT3ZlcmxheVwiOnRydWUsXCJsYW5kaW5nQXNpbkNvbG9yXCI6XCJpbml0aWFsXCIsXCJjb2xvckltYWdlc1wiOnt9LFwiaGVyb0ltYWdlc1wiOnt9LFwiZW5hYmxlMzYwTWFwXCI6e30sXCJzdGF0aWNJbWFnZXNcIjp7XCJob3Zlclpvb21JY29uXCI6XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvaW1nMTEvYXBwYXJlbC9VWC9EUC9pY29uX3pvb20uX0NCMTM4OTIzODg2Xy5wbmdcIixcInpvb21MZW5zQmFja2dyb3VuZFwiOlwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2FwcGFyZWwvcmN4Z3MvdGlsZS5fQ0I0ODMzNjkxMDVfLmdpZlwiLFwiem9vbUluQ3VyXCI6XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvZGV0YWlsLXBhZ2UvY3Vyc29ycy96b29tSW4uX0NCMzIzMDgyNzk5Xy5jdXJcIixcImFycm93XCI6XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvamF2YXNjcmlwdHMvbGliL3BvcG92ZXIvaW1hZ2VzL2xpZ2h0L3Nwcml0ZS12ZXJ0aWNhbC1wb3BvdmVyLWFycm93Ll9DQjE4Njg3Nzg2OF8ucG5nXCIsXCJ6b29tSW5cIjpcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9kZXRhaWwtcGFnZS9jdXJzb3JzL3pvb20taW4uX0NCMTg0ODg4NzkwXy5ibXBcIixcInpvb21PdXRcIjpcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9kZXRhaWwtcGFnZS9jdXJzb3JzL3pvb20tb3V0Ll9DQjE4NDg4ODczOF8uYm1wXCIsXCJ2aWRlb1RodW1iSWNvblwiOlwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL1F1YXJ0ZXJkZWNrL2VuX1VTL2ltYWdlcy92aWRlby5fQ0IxODM3MTYzMzlfU1M0MF8uZ2lmXCIsXCJzcGlubmVyTm9MYWJlbFwiOlwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL3VpL2xvYWRJbmRpY2F0b3JzL2xvYWRpbmctbGFyZ2UuX0NCMTkyMjM4OTY1Xy5naWZcIixcInpvb21PdXRDdXJcIjpcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9kZXRhaWwtcGFnZS9jdXJzb3JzL3pvb21PdXQuX0NCMzIzMDgyNzk4Xy5jdXJcIixcInZpZGVvU1dGUGF0aFwiOlwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL1F1YXJ0ZXJkZWNrL2VuX1VTL3ZpZGVvLzIwMTEwNTE4MTE1MDQwODkyL1ZpZGVvLl9DQjE3ODY2ODQwNF8uc3dmXCIsXCJncmFiYmluZ1wiOlwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL0hvbWVDdXN0b21Qcm9kdWN0L2dyYWJiaW5nYm94Ll9DQjUxODA3Njc2NV8uY3VyXCIsXCJpY29uMzYwXCI6XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvSG9tZUN1c3RvbVByb2R1Y3QvMzYwX2ljb25fNzN4NzN2Mi5fQ0I1MTA2ODYzMzNfU1M0MF8ucG5nXCIsXCJncmFiXCI6XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvSG9tZUN1c3RvbVByb2R1Y3QvZ3JhYmJveC5fQ0I1MTgwNzY3NjVfLmN1clwiLFwic3Bpbm5lclwiOlwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL3VpL2xvYWRJbmRpY2F0b3JzL2xvYWRpbmctbGFyZ2VfbGFiZWxlZC5fQ0IxOTIyMzg5NDlfLmdpZlwifSxcInN0YXRpY1N0cmluZ3NcIjp7XCJpbWFnZXNcIjpcIkltYWdlc1wiLFwid2F0Y2hNb3JlVmlkZW9zXCI6XCJDbGljayB0byBzZWUgbW9yZSB2aWRlb3NcIixcImFsbE1lZGlhXCI6XCJBbGwgTWVkaWFcIixcImRyYWdUb1NwaW5cIjpcIkRyYWcgdG8gU3BpblwiLFwidmlkZW9zXCI6XCJWaWRlb3NcIixcInZpZGVvXCI6XCJ2aWRlb1wiLFwicm9sbE92ZXJUb1pvb21cIjpcIlJvbGwgb3ZlciBpbWFnZSB0byB6b29tIGluXCIsXCJjbGlja1RvRXhwYW5kXCI6XCJDbGljayBpbWFnZSB0byBvcGVuIGV4cGFuZGVkIHZpZXdcIixcInBsYXlWaWRlb1wiOlwiQ2xpY2sgdG8gcGxheSB2aWRlb1wiLFwidG91Y2hUb1pvb21cIjpcIlRvdWNoIHRoZSBpbWFnZSB0byB6b29tIGluXCIsXCJtdWx0aXBsZVZpZGVvc1wiOlwiVklERU9TXCIsXCJzaW5nbGVWaWRlb1wiOlwiVklERU9cIixcInBsZWFzZVNlbGVjdFwiOlwiUGxlYXNlIHNlbGVjdFwiLFwiY2xvc2VcIjpcIkNsb3NlXCIsXCJjbGlja1RvWm9vbVwiOlwiQ2xpY2sgb24gaW1hZ2UgdG8gem9vbSBpblwifSxcInVzZUNoaWxkVmlkZW9zXCI6dHJ1ZSxcInVzZUNsaWNrWm9vbVwiOmZhbHNlLFwidXNlSG92ZXJab29tXCI6dHJ1ZSxcInVzZUhvdmVyWm9vbUlwYWRcIjpmYWxzZSxcInZpc3VhbERpbWVuc2lvbnNcIjpbXSxcIm1haW5JbWFnZUhlaWdodFBhcnRpdGlvbnNcIjpudWxsLFwibWFpbkltYWdlTWF4U2l6ZXNcIjpudWxsLFwiaGVyb0ZvY2FsUG9pbnRcIjpudWxsLFwic2hvd01hZ25pZmllck9uSG92ZXJcIjpmYWxzZSxcImRpc2FibGVIb3Zlck9uQWx0SW1hZ2VzXCI6ZmFsc2UsXCJvdmVycmlkZUFsdEltYWdlQ2xpY2tBY3Rpb25cIjpmYWxzZSxcIm5hdHVyYWxNYWluSW1hZ2VTaXplXCI6bnVsbCxcImltZ1RhZ1dyYXBwZXJDbGFzc2VzXCI6bnVsbCxcInByaW9yaXRpemVWaWRlb3NcIjpmYWxzZSxcInVzZVBlZWtIb3ZlclwiOmZhbHNlLFwiZmFkZU1hZ25pZmllclwiOmZhbHNlLFwicmVwb3NpdGlvbkhlcm9JbWFnZVwiOmZhbHNlLFwiaGVyb1ZpZGVvVmFyaWFudFwiOm51bGwsXCJ2aWRlb3NcIjpbe1wib2Zmc2V0XCI6XCIwXCIsXCJ0aHVtYlwiOlwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzkxY1UlMkJ1VzFrOUwuU1M0MF9QS21iLXBsYXktYnV0dG9uLW92ZXJsYXktdGh1bWJfLnBuZ1wiLFwiZHVyYXRpb25TZWNvbmRzXCI6MTksXCJtYXJrZXRQbGFjZUlEXCI6XCJBVFZQREtJS1gwREVSXCIsXCJpc1ZpZGVvXCI6dHJ1ZSxcImlzSGVyb1ZpZGVvXCI6ZmFsc2UsXCJ0aXRsZVwiOlwiRWxlZ2FudCBUd28gVG9uZSBUZWFyZHJvcCBEYW5nbGUgRWFycmluZ3NcIixcImxhbmd1YWdlQ29kZVwiOlwiZW5fVVNcIixcImhvbGRlcklkXCI6XCJob2xkZXI0NTQyYjY0ZTE5OWU0YWUwYTBjMGVlOWVmMTMzMTI2NFwiLFwidXJsXCI6XCJodHRwczovL2QxeTZqcmJ6b3RueWpnLmNsb3VkZnJvbnQubmV0L1o3QVg0LzQ1NDJiNjRlMTk5ZTRhZTBhMGMwZWU5ZWYxMzMxMjY0L1YxMS8yYmEwZjRlYTZmNzM0YmNhODYzZjY4YTBhZjI5Y2M0My9TaG9ydEZvcm0tR2VuZXJpYy00ODBwLTE2LTktMTQwOTE3MzA4OTc5My1ycGNiZTUubXA0P0V4cGlyZXM9MTU3MDM5ODMwOCZTaWduYXR1cmU9UlNzaVVPVFJOMmd+WnF4WjFpTEtXOWJ0U2NUaHRRcGE3SmpKdVJjdnJodlpOLVNiVXY0bW1PVG82dmpUMTZHRmRLLTBRYjNqTTJPQW5sLXlzSGFxUkRuNFRJLTlmWGRPYjdYSS11clRtZ2dzb1hldHhNTTVQS05zdEFLeG50LUZrZmYtT3RpVi00ZEJKTGV+bVNMbG9iR2s5NDNNVH5iYWFia2hDNTdZSXJFXyZLZXktUGFpci1JZD1BUEtBSjYyWFdLWjM1RU9WTzRYQVwiLFwidmlkZW9IZWlnaHRcIjpcIjQ4MFwiLFwidmlkZW9XaWR0aFwiOlwiODU0XCIsXCJkdXJhdGlvblRpbWVzdGFtcFwiOlwiMDA6MTlcIixcInNsYXRlVXJsXCI6XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvOTFjVSUyQnVXMWs5TC5TWDUyMl8ucG5nXCIsXCJtaW5pbXVtQWdlXCI6MCxcInZhcmlhbnRcIjpcIk1BSU5cIixcInNsYXRlSGFzaFwiOntcImV4dGVuc2lvblwiOlwicG5nXCIsXCJwaHlzaWNhbElEXCI6XCI5MWNVK3VXMWs5TFwiLFwid2lkdGhcIjpcIjE5MjBcIixcImhlaWdodFwiOlwiMTA4MFwifSxcIm1lZGlhT2JqZWN0SWRcIjpcIjQ1NDJiNjRlMTk5ZTRhZTBhMGMwZWU5ZWYxMzMxMjY0XCIsXCJ0aHVtYlVybFwiOlwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzkxY1UlMkJ1VzFrOUwuU1M0MF9QS21iLXBsYXktYnV0dG9uLW92ZXJsYXktdGh1bWJfLnBuZ1wifV0sXCJ0aXRsZVwiOlwiS2Vtc3RvbmUgRWxlZ2FudCBSb3NlIEdvbGRcXFxcL1NpbHZlciAyIFRvbmUgTXVsdGlsYXllciBEYW5nbGUgRWFycmluZ3MgQWNjZXNzb3J5IGZvciBXb21hbiwgMi40IEluY2hlc1wiLFwiYWlyeUNvbmZpZ0VuYWJsZWRcIjp0cnVlLFwiYWlyeUNvbmZpZ1wiOntcImpzVXJsXCI6XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvdmFwL3ZpZGVvL2FpcnkyL3Byb2QvMi4wLjE0NjAuMC9qcy9haXJ5LnNraW4uX0NCNTEzMDY2NTg5Xy5qc1wiLFwiY3NzVXJsXCI6XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvdmFwL3ZpZGVvL2FpcnkyL3Byb2QvMi4wLjE0NjAuMC9jc3MvYmVhY29uLl9DQjUxMzA2NjU4OV8uY3NzXCIsXCJzd2ZVcmxcIjpcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS92YXAvdmlkZW8vYWlyeTIvcHJvZC8yLjAuMTQ2MC4wL2ZsYXNoL0FpcnlCYXNpY1JlbmRlcmVyLl9DQjUxMzA2NjU4OV8uc3dmXCIsXCJmb3Jlc3Rlck1ldGFkYXRhUGFyYW1zXCI6e1wibWFya2V0cGxhY2VJZFwiOlwiQVRWUERLSUtYMERFUlwiLFwibWV0aG9kXCI6XCJKZXdlbHJ5LkltYWdlQmxvY2tcIixcInJlcXVlc3RJZFwiOlwiNDc1RTM0SlFWOUZOUEhKOVNTVERcIixcInNlc3Npb25cIjpcIjE0NS04OTc1MzkwLTUwNjQxMTNcIixcImNsaWVudFwiOlwiRHB4XCJ9fSxcInZzZVZpZGVvRGF0YVNvdXJjZVRyZWF0bWVudFwiOlwiVDFcIixcIm1lZGlhQXNpblwiOlwiQjAxR0tRSTM5MlwiLFwibGFyZ2VTQ0xWaWRlb1RodW1ibmFpbFwiOmZhbHNlLFwiZGlzcGxheVZpZGVvQmFubmVyXCI6ZmFsc2UsXCJ1c2VWU0VWaWRlb3NcIjp0cnVlLFwidXNlVGFiYmVkSW1tZXJzaXZlVmlld1wiOmZhbHNlLFwiZHBSZXF1ZXN0SWRcIjpcIjQ3NUUzNEpRVjlGTlBISjlTU1REXCIsXCJkcDYwVmlkZW9UaHVtYk1hcFwiOm51bGx9Jyk7XG5kYXRhW1wiYWx3YXlzSW5jbHVkZVZpZGVvXCJdID0gb2JqLmFsd2F5c0luY2x1ZGVWaWRlbyA/IDEgOiAwO1xuZGF0YVtcImF1dG9wbGF5VmlkZW9cIl0gPSBvYmouYXV0b3BsYXlWaWRlbyA/IDEgOiAwO1xuZGF0YVtcImRlZmF1bHRDb2xvclwiXSA9IG9iai5kZWZhdWx0Q29sb3I7XG5kYXRhW1wibWF4QWx0c1wiXSA9IG9iai5tYXhBbHRzO1xuZGF0YVtcImFsdHNPbkxlZnRcIl0gPSBvYmouYWx0c09uTGVmdDtcbmRhdGFbXCJuZXdWaWRlb01pc3NpbmdcIl0gPSBvYmoubmV3VmlkZW9NaXNzaW5nO1xuZGF0YVtcImxhenlMb2FkRXhwZXJpZW5jZURpc2FibGVkXCJdID0gb2JqLmxhenlMb2FkRXhwZXJpZW5jZURpc2FibGVkO1xuZGF0YVtcImxhenlMb2FkRXhwZXJpZW5jZU9uSG92ZXJEaXNhYmxlZFwiXSA9IG9iai5sYXp5TG9hZEV4cGVyaWVuY2VPbkhvdmVyRGlzYWJsZWQ7XG5kYXRhW1widXNlQ2hyb21lbGVzc1ZpZGVvUGxheWVyXCJdID0gb2JqLnVzZUNocm9tZWxlc3NWaWRlb1BsYXllciA/IDEgOiAwO1xuZGF0YVtcImNvbG9yVG9Bc2luXCJdID0gb2JqLmNvbG9yVG9Bc2luO1xuZGF0YVtcIml2UmVwcmVzZW50YXRpdmVBc2luXCJdID0gb2JqLml2UmVwcmVzZW50YXRpdmVBc2luO1xuZGF0YVtcIml2SW1hZ2VTZXRLZXlzXCJdID0gb2JqLml2SW1hZ2VTZXRLZXlzO1xuZGF0YVtcInVzZUlWXCJdID0gb2JqLnVzZUlWID8gMSA6IDA7XG5kYXRhW1widGFibGV0V2ViXCJdID0gb2JqLnRhYmxldFdlYiA/IDEgOiAwO1xuZGF0YVtcInZpZXdzXCJdID0gb2JqLnZpZXdzO1xuZGF0YVtcImVuaGFuY2VkSG92ZXJPdmVybGF5XCJdID0gb2JqLmVuaGFuY2VkSG92ZXJPdmVybGF5O1xuZGF0YVtcImxhbmRpbmdBc2luQ29sb3JcIl0gPSBvYmoubGFuZGluZ0FzaW5Db2xvcjtcbmRhdGFbXCJjb2xvckltYWdlc1wiXSA9IG9iai5jb2xvckltYWdlcztcbmRhdGFbXCJoZXJvSW1hZ2VcIl0gPSBvYmouaGVyb0ltYWdlcztcbmRhdGFbXCJzcGluMzYwQ29sb3JFbmFibGVkXCJdID0gb2JqLmVuYWJsZTM2ME1hcDtcbmRhdGFbXCJzdGF0aWNJbWFnZXNcIl0gPSBvYmouc3RhdGljSW1hZ2VzO1xuZGF0YVtcInN0YXRpY1N0cmluZ3NcIl0gPSBvYmouc3RhdGljU3RyaW5ncztcbmRhdGFbXCJ1c2VDaGlsZFZpZGVvc1wiXSA9IG9iai51c2VDaGlsZFZpZGVvcyA/IDEgOiAwO1xuZGF0YVtcInVzZUNsaWNrWm9vbVwiXSA9IG9iai51c2VDbGlja1pvb20gPyAxIDogMDtcbmRhdGFbXCJ1c2VIb3Zlclpvb21cIl0gPSBvYmoudXNlSG92ZXJab29tID8gMSA6IDA7XG5kYXRhW1widXNlSG92ZXJab29tSXBhZFwiXSA9IG9iai51c2VIb3Zlclpvb21JcGFkID8gMSA6IDA7XG5kYXRhW1widmlzdWFsRGltZW5zaW9uc1wiXSA9IG9iai52aXN1YWxEaW1lbnNpb25zO1xuZGF0YVtcImlzTGFyZ2VTQ0xWaWRlb1RodW1ibmFpbFwiXSA9IG9iai5sYXJnZVNDTFZpZGVvVGh1bWJuYWlsO1xuZGF0YVtcIm1haW5JbWFnZVNpemVzXCJdID0gb2JqLm1haW5JbWFnZVNpemVzO1xuZGF0YVtcImRpc3BsYXlWaWRlb0Jhbm5lclwiXSA9IG9iai5kaXNwbGF5VmlkZW9CYW5uZXI7XG5kYXRhW1wibWFpbkltYWdlSGVpZ2h0UGFydGl0aW9uc1wiXSA9IG9iai5tYWluSW1hZ2VIZWlnaHRQYXJ0aXRpb25zO1xuZGF0YVtcIm1haW5JbWFnZU1heFNpemVzXCJdID0gb2JqLm1haW5JbWFnZU1heFNpemVzO1xuZGF0YVtcImhlcm9Gb2NhbFBvaW50XCJdID0gb2JqLmhlcm9Gb2NhbFBvaW50O1xuZGF0YVtcInNob3dNYWduaWZpZXJPbkhvdmVyXCJdID0gb2JqLnNob3dNYWduaWZpZXJPbkhvdmVyID8gMSA6IDA7XG5kYXRhW1wiZGlzYWJsZUhvdmVyT25BbHRJbWFnZXNcIl0gPSBvYmouZGlzYWJsZUhvdmVyT25BbHRJbWFnZXMgPyAxIDogMDtcbmRhdGFbXCJvdmVycmlkZUFsdEltYWdlQ2xpY2tBY3Rpb25cIl0gPSBvYmoub3ZlcnJpZGVBbHRJbWFnZUNsaWNrQWN0aW9uID8gMSA6IDA7XG5kYXRhW1wibmF0dXJhbE1haW5JbWFnZVNpemVcIl0gPSBvYmoubmF0dXJhbE1haW5JbWFnZVNpemU7XG5kYXRhW1wiaW1nVGFnV3JhcHBlckNsYXNzZXNcIl0gPSBvYmouaW1nVGFnV3JhcHBlckNsYXNzZXM7XG5kYXRhW1wicHJpb3JpdGl6ZVZpZGVvc1wiXSA9IG9iai5wcmlvcml0aXplVmlkZW9zO1xuZGF0YVtcInVzZVBlZWtIb3ZlclwiXSA9IG9iai51c2VQZWVrSG92ZXI7XG5kYXRhW1wiZmFkZU1hZ25pZmllclwiXSA9IG9iai5mYWRlTWFnbmlmaWVyO1xuZGF0YVtcInJlcG9zaXRpb25IZXJvSW1hZ2VcIl0gPSBvYmoucmVwb3NpdGlvbkhlcm9JbWFnZTtcbmRhdGFbXCJoZXJvVmlkZW9WYXJpYW50XCJdID0gb2JqLmhlcm9WaWRlb1ZhcmlhbnQ7XG5kYXRhW1widmlkZW9zXCJdID0gb2JqLnZpZGVvcztcbmRhdGFbXCJwcm9kdWN0R3JvdXBJRFwiXSA9IG9iai5wcm9kdWN0R3JvdXBJRDtcbmRhdGFbXCJ0aXRsZVwiXSA9IG9iai50aXRsZTtcbmRhdGFbXCJhaXJ5Q29uZmlnRW5hYmxlZFwiXSA9IG9iai5haXJ5Q29uZmlnRW5hYmxlZDtcbmlmIChvYmouYWlyeUNvbmZpZ0VuYWJsZWQpIHtcbiAgZGF0YVtcImFpcnlDb25maWdcIl0gPSBvYmouYWlyeUNvbmZpZztcbn1cbmRhdGFbXCJpc0RQWEZlYXR1cmVFbmFibGVkXCJdID0gdHJ1ZTtcbmRhdGFbXCJ1c2VUYWJiZWRJbW1lcnNpdmVWaWV3XCJdID0gb2JqLnVzZVRhYmJlZEltbWVyc2l2ZVZpZXc7XG5kYXRhW1widnNlVmlkZW9EYXRhU291cmNlVHJlYXRtZW50XCJdID0gb2JqLnZzZVZpZGVvRGF0YVNvdXJjZVRyZWF0bWVudDtcbmRhdGFbXCJ1c2VWU0VWaWRlb3NcIl0gPSBvYmoudXNlVlNFVmlkZW9zO1xuZGF0YVtcImRwUmVxdWVzdElkXCJdID0gb2JqLmRwUmVxdWVzdElkO1xuZGF0YVtcIm1lZGlhQXNpblwiXSA9IG9iai5tZWRpYUFzaW47XG5kYXRhW1wiZHA2MFZpZGVvVGh1bWJNYXBcIl0gPSBvYmouZHA2MFZpZGVvVGh1bWJNYXA7XG5cbnJldHVybiBkYXRhO1xufSk7XG5cdTAwM0Mvc2NyaXB0PlxuXG5cdCAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuXG5cblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgXHUwMDNDL2Rpdj5cblxuXG5cblxuXG5cbiAgXG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuXG5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICBcblxuXG4gICAgICAgICAgICBcblxuXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cbiAgICAgICAgICAgIFxuXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0NkaXYgaWQ9XCJhamF4QmxvY2tDb21wb25lbnRzX2ZlYXR1cmVfZGl2XCIgY2xhc3M9XCJmZWF0dXJlXCIgZGF0YS1mZWF0dXJlLW5hbWU9XCJhamF4QmxvY2tDb21wb25lbnRzXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuXG5QLndoZW4oJ0EnLCdqUXVlcnknKS5leGVjdXRlKCd0cmlnZ2VyVmlkZW9BamF4JywgZnVuY3Rpb24oQSl7XG52YXIgb2JqID0galF1ZXJ5LnBhcnNlSlNPTigne1wiZGF0YUluSnNvblwiOm51bGwsXCJjb2xvckltYWdlc1wiOnt9LFwidmlkZW9zXCI6W3tcIm9mZnNldFwiOlwiMFwiLFwidGh1bWJcIjpcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS85MWNVJTJCdVcxazlMLlNTNDBfUEttYi1wbGF5LWJ1dHRvbi1vdmVybGF5LXRodW1iXy5wbmdcIixcImR1cmF0aW9uU2Vjb25kc1wiOjE5LFwibWFya2V0UGxhY2VJRFwiOlwiQVRWUERLSUtYMERFUlwiLFwiaXNWaWRlb1wiOnRydWUsXCJpc0hlcm9WaWRlb1wiOmZhbHNlLFwidGl0bGVcIjpcIkVsZWdhbnQgVHdvIFRvbmUgVGVhcmRyb3AgRGFuZ2xlIEVhcnJpbmdzXCIsXCJsYW5ndWFnZUNvZGVcIjpcImVuX1VTXCIsXCJob2xkZXJJZFwiOlwiaG9sZGVyNDU0MmI2NGUxOTllNGFlMGEwYzBlZTllZjEzMzEyNjRcIixcInVybFwiOlwiaHR0cHM6Ly9kMXk2anJiem90bnlqZy5jbG91ZGZyb250Lm5ldC9aN0FYNC80NTQyYjY0ZTE5OWU0YWUwYTBjMGVlOWVmMTMzMTI2NC9WMTEvMmJhMGY0ZWE2ZjczNGJjYTg2M2Y2OGEwYWYyOWNjNDMvU2hvcnRGb3JtLUdlbmVyaWMtNDgwcC0xNi05LTE0MDkxNzMwODk3OTMtcnBjYmU1Lm1wND9FeHBpcmVzPTE1NzAzOTgzMDgmU2lnbmF0dXJlPVJTc2lVT1RSTjJnflpxeFoxaUxLVzlidFNjVGh0UXBhN0pqSnVSY3ZyaHZaTi1TYlV2NG1tT1RvNnZqVDE2R0ZkSy0wUWIzak0yT0FubC15c0hhcVJEbjRUSS05ZlhkT2I3WEktdXJUbWdnc29YZXR4TU01UEtOc3RBS3hudC1Ga2ZmLU90aVYtNGRCSkxlfm1TTGxvYkdrOTQzTVR+YmFhYmtoQzU3WUlyRV8mS2V5LVBhaXItSWQ9QVBLQUo2MlhXS1ozNUVPVk80WEFcIixcInZpZGVvSGVpZ2h0XCI6XCI0ODBcIixcInZpZGVvV2lkdGhcIjpcIjg1NFwiLFwiZHVyYXRpb25UaW1lc3RhbXBcIjpcIjAwOjE5XCIsXCJzbGF0ZVVybFwiOlwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzkxY1UlMkJ1VzFrOUwuU1g1MjJfLnBuZ1wiLFwibWluaW11bUFnZVwiOjAsXCJ2YXJpYW50XCI6XCJNQUlOXCIsXCJzbGF0ZUhhc2hcIjp7XCJleHRlbnNpb25cIjpcInBuZ1wiLFwicGh5c2ljYWxJRFwiOlwiOTFjVSt1VzFrOUxcIixcIndpZHRoXCI6XCIxOTIwXCIsXCJoZWlnaHRcIjpcIjEwODBcIn0sXCJtZWRpYU9iamVjdElkXCI6XCI0NTQyYjY0ZTE5OWU0YWUwYTBjMGVlOWVmMTMzMTI2NFwiLFwidGh1bWJVcmxcIjpcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS85MWNVJTJCdVcxazlMLlNTNDBfUEttYi1wbGF5LWJ1dHRvbi1vdmVybGF5LXRodW1iXy5wbmdcIn1dLFwibGF6eUxvYWRFeHBlcmllbmNlRGlzYWJsZWRcIjp0cnVlLFwibGF6eUxvYWRFeHBlcmllbmNlT25Ib3ZlckRpc2FibGVkXCI6ZmFsc2UsXCJyZWZhY3RvckVuYWJsZWRcIjpmYWxzZSxcIm1haW5JbWFnZVNpemVzXCI6W1tcIjM5NVwiLFwiMzk1XCJdLFtcIjUwMFwiLFwiNTAwXCJdLFtcIjUzNVwiLFwiNTM1XCJdLFtcIjU3NVwiLFwiNTc1XCJdLFtcIjYyNVwiLFwiNjI1XCJdLFtcIjY3NVwiLFwiNjc1XCJdLFtcIjY5NVwiLFwiNjk1XCJdXX0nKTtcbkEudHJpZ2dlcigndHJpZ2dlclZpZGVvQWpheCcsb2JqLnZpZGVvcyk7XG59KTtcblxuXG5cblx1MDAzQy9zY3JpcHQ+XG5cblx0ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG4gICAgXG5cblxuICBcblxuXG4gIFxuICBcblxuXG5cblxuXG5cblxuXG5cdTAwM0NkaXYgaWQ9XCJkcC1hZHMtbWlkZGxlLTNwc2xcIj5cblxuXG5cblxuXG5cblxuXHUwMDNDL2Rpdj5cblxuXG5cblxuXHUwMDNDIS0tcmJkLS0+XG5cblx1MDAzQ2RpdiBjbGFzcz1cImNlbHdpZGdldCBwZF9yZF93LXZVd05SIHBmX3JkX3AtZDY2MzcyZmUtNjhhNi00OGEzLTkwZWMtNDFkN2Y2NDIxMmJlIHBmX3JkX3ItNDc1RTM0SlFWOUZOUEhKOVNTVEQgcGRfcmRfci1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUgcGRfcmRfd2ctZ3NPYk9cIiBjZWxfd2lkZ2V0X2lkPVwiZGVza3RvcC1kcC1zaW1zX3Nlc3Npb24tc2ltaWxhcml0aWVzXCI+XG5cblxuXG5cblxuXG5cbiBcblxuIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXHUwMDNDZGl2IGlkPVwicDEzbi1tLWRlc2t0b3AtZHAtc2ltc19zZXNzaW9uLXNpbWlsYXJpdGllcy1zaW1zLWZlYXR1cmUtNFwiIGNsYXNzPVwiY2Vsd2lkZ2V0XCIgY2VsX3dpZGdldF9pZD1cImRlc2t0b3AtZHAtc2ltc19zZXNzaW9uLXNpbWlsYXJpdGllcy1zaW1zLWZlYXR1cmUtNFwiPlxuICAgIFxuICAgICAgICAgICAgXHUwMDNDZGl2IGRhdGEtc2ltaWxhcml0eS10eXBlPVwiZGVza3RvcC1kcC1zaW1zX3Nlc3Npb24tc2ltaWxhcml0aWVzXCIgY2xhc3M9XCJhLXNlY3Rpb24gc2ltaWxhcml0aWVzLXdpZGdldCBzaW1zLWNhcm91c2VsLWhvbGRlclwiPlxuICAgICAgICAgICAgICAgIFx1MDAzQ2hyIGNsYXNzPVwiYS1kaXZpZGVyLW5vcm1hbCBzaW1zLWNhcm91c2VsLWhlYWRpbmcgYnVja2V0RGl2aWRlclwiPlxuICAgICAgICAgICAgICAgIFx1MDAzQ2RpdiBpZD1cImRlc2t0b3AtZHAtc2ltc19zZXNzaW9uLXNpbWlsYXJpdGllcy1zaW1zLWZlYXR1cmVcIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbGFyZ2UgYnVja2V0XCI+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICBcdTAwM0NkaXYgZGF0YS1hLWNhcm91c2VsLW9wdGlvbnM9XCJ7JnF1b3Q7YWpheCZxdW90Ozp7JnF1b3Q7cGFyYW1zJnF1b3Q7OnsmcXVvdDthc2luTWV0YWRhdGFLZXlzJnF1b3Q7OiZxdW90O2FkSWQmcXVvdDssJnF1b3Q7d2lkZ2V0VGVtcGxhdGVDbGFzcyZxdW90OzomcXVvdDtQSTo6U2ltaWxhcml0aWVzOjpWaWV3VGVtcGxhdGVzOjpDYXJvdXNlbDo6RGVza3RvcCZxdW90OywmcXVvdDtsaW5rR2V0UGFyYW1ldGVycyZxdW90OzomcXVvdDt7XFwmcXVvdDtwZF9yZF93Z1xcJnF1b3Q7OlxcJnF1b3Q7Z3NPYk9cXCZxdW90OyxcXCZxdW90O3BkX3JkX3JcXCZxdW90OzpcXCZxdW90O2I0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNVxcJnF1b3Q7LFxcJnF1b3Q7cGZfcmRfclxcJnF1b3Q7OlxcJnF1b3Q7NDc1RTM0SlFWOUZOUEhKOVNTVERcXCZxdW90OyxcXCZxdW90O3BmX3JkX3BcXCZxdW90OzpcXCZxdW90O2Q2NjM3MmZlLTY4YTYtNDhhMy05MGVjLTQxZDdmNjQyMTJiZVxcJnF1b3Q7LFxcJnF1b3Q7cGRfcmRfd1xcJnF1b3Q7OlxcJnF1b3Q7dlV3TlJcXCZxdW90O30mcXVvdDssJnF1b3Q7cHJvZHVjdERldGFpbHNUZW1wbGF0ZUNsYXNzJnF1b3Q7OiZxdW90O1BJOjpQMTNOOjpWaWV3VGVtcGxhdGVzOjpQcm9kdWN0RGV0YWlsczo6RGVza3RvcDo6QmFzZSZxdW90OywmcXVvdDtmb3JjZUZyZXNoV2luJnF1b3Q7OjAsJnF1b3Q7ZmVhdHVyZUlkJnF1b3Q7OiZxdW90O1NpbWlsYXJpdGllc0Nhcm91c2VsJnF1b3Q7LCZxdW90O3JlZnRhZ1ByZWZpeCZxdW90OzomcXVvdDtwZF9zYnNfMTk3JnF1b3Q7LCZxdW90O2ltYWdlSGVpZ2h0JnF1b3Q7OjE2MCwmcXVvdDtmYWNlb3V0VGVtcGxhdGVDbGFzcyZxdW90OzomcXVvdDtQSTo6UDEzTjo6Vmlld1RlbXBsYXRlczo6UHJvZHVjdDo6RGVza3RvcDo6Q2Fyb3VzZWxGYWNlb3V0JnF1b3Q7LCZxdW90O2ltYWdlV2lkdGgmcXVvdDs6MTYwLCZxdW90O2F1aURldmljZVR5cGUmcXVvdDs6JnF1b3Q7ZGVza3RvcCZxdW90OywmcXVvdDtzY2hlbWFWZXJzaW9uJnF1b3Q7OjIsJnF1b3Q7cmVsYXRlZFJlcXVlc3RJRCZxdW90OzomcXVvdDs0NzVFMzRKUVY5Rk5QSEo5U1NURCZxdW90OywmcXVvdDtwcm9kdWN0RGF0YUZsYXZvciZxdW90OzomcXVvdDtGYWNlb3V0JnF1b3Q7LCZxdW90O21heExpbmVDb3VudCZxdW90Ozo2LCZxdW90O2ZhY2VvdXRBcmdzJnF1b3Q7OiZxdW90O3tcXCZxdW90O3Byb2R1Y3REZXRhaWxzVGVtcGxhdGVDbGFzc1xcJnF1b3Q7OlxcJnF1b3Q7UEk6OlAxM046OlZpZXdUZW1wbGF0ZXM6OlByb2R1Y3REZXRhaWxzOjpEZXNrdG9wOjpCYXNlXFwmcXVvdDt9JnF1b3Q7fSwmcXVvdDtpZF9saXN0JnF1b3Q7OlsmcXVvdDtCMDFIWEZHTU44OiZxdW90OywmcXVvdDtCMDdITVZDNTVTOiZxdW90OywmcXVvdDtCMDc1NkZHMk1KOiZxdW90OywmcXVvdDtCMDdHQk5LNUpSOiZxdW90OywmcXVvdDtCMDdRUFNYUFJDOiZxdW90OywmcXVvdDtCMDFIWEZHRkdXOiZxdW90OywmcXVvdDtCMDFINDJNMzI0OiZxdW90OywmcXVvdDtCMDdXSkJCOVdIOiZxdW90OywmcXVvdDtCMDE5STlVVjdLOiZxdW90OywmcXVvdDtCMDdSTkpYRE1LOiZxdW90OywmcXVvdDtCMDdER0o5N1g3OiZxdW90OywmcXVvdDtCMDdXRlhaVjkyOiZxdW90OywmcXVvdDtCMDFNRjlVNTlNOiZxdW90OywmcXVvdDtCMDZYQ0ZHNTlIOiZxdW90OywmcXVvdDtCMDFNMVM0VTdPOiZxdW90OywmcXVvdDtCMDdSQjU0REhZOiZxdW90OywmcXVvdDtCMDdUS0xKS1JCOiZxdW90OywmcXVvdDtCMDc1VDZMMTlYOiZxdW90OywmcXVvdDtCMDcyQzM0SExQOiZxdW90OywmcXVvdDtCMDdXSzJSUEJWOiZxdW90OywmcXVvdDtCMDdEQ05YR1hOOiZxdW90OywmcXVvdDtCMDdXMThRSlNWOiZxdW90OywmcXVvdDtCMDdRTk1ZREJNOiZxdW90OywmcXVvdDtCMDdCUzZaQ0RROiZxdW90OywmcXVvdDtCMDdTMU0zSjJZOiZxdW90OywmcXVvdDtCMDc5MjFXSlM5OiZxdW90OywmcXVvdDtCMDdSNlI5TFMxOiZxdW90OywmcXVvdDtCMDdERDgzWTlSOiZxdW90OywmcXVvdDtCMDcxNkxZTFlCOiZxdW90OywmcXVvdDtCMDc2OTIxMTNKOiZxdW90OywmcXVvdDtCMDAzOEsxRU9BOiZxdW90OywmcXVvdDtCMDdLWk1SOEhDOiZxdW90OywmcXVvdDtCMDdERkZITVQ1OiZxdW90OywmcXVvdDtCMDdQTVBaQ0JIOiZxdW90OywmcXVvdDtCMDdOUU1LQ0xOOiZxdW90O10sJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9ncC9wMTNuLXNoYXJlZC9mYWNlb3V0LXBhcnRpYWwmcXVvdDssJnF1b3Q7aWRfcGFyYW1fbmFtZSZxdW90OzomcXVvdDthc2lucyZxdW90O30sJnF1b3Q7YmFzZUFzaW4mcXVvdDs6JnF1b3Q7QjAxR0tRSTM5MiZxdW90OywmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O2Rlc2t0b3AtZHAtc2ltc19zZXNzaW9uLXNpbWlsYXJpdGllcyZxdW90OywmcXVvdDtzZXRfc2l6ZSZxdW90OzozNX1cIiBkYXRhLXAxM24tZmVhdHVyZS1tZXRhZGF0YT1cInsmcXVvdDtiYXNlQXNpbiZxdW90OzomcXVvdDtCMDFHS1FJMzkyJnF1b3Q7LCZxdW90O3BkX3JkX3dnJnF1b3Q7OiZxdW90O2dzT2JPJnF1b3Q7LCZxdW90O3BkX3JkX3ImcXVvdDs6JnF1b3Q7YjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1JnF1b3Q7LCZxdW90O3BmX3JkX3ImcXVvdDs6JnF1b3Q7NDc1RTM0SlFWOUZOUEhKOVNTVEQmcXVvdDssJnF1b3Q7cGZfcmRfcCZxdW90OzomcXVvdDtkNjYzNzJmZS02OGE2LTQ4YTMtOTBlYy00MWQ3ZjY0MjEyYmUmcXVvdDssJnF1b3Q7cGRfcmRfdyZxdW90OzomcXVvdDt2VXdOUiZxdW90O31cIiBkYXRhLXAxM24tZmVhdHVyZS1uYW1lPVwicGRfc2JzXzE5N1wiIGRhdGEtcDEzbi1nbG9iYWw9XCJ7JnF1b3Q7YXVpRGV2aWNlVHlwZSZxdW90OzomcXVvdDtkZXNrdG9wJnF1b3Q7LCZxdW90O21hcmtldHBsYWNlSWQmcXVvdDs6JnF1b3Q7QVRWUERLSUtYMERFUiZxdW90OywmcXVvdDtyZXF1ZXN0SWQmcXVvdDs6JnF1b3Q7NDc1RTM0SlFWOUZOUEhKOVNTVEQmcXVvdDssJnF1b3Q7bWFya2V0cGxhY2UmcXVvdDs6JnF1b3Q7VVMmcXVvdDssJnF1b3Q7Y3VzdG9tZXJJZCZxdW90OzowLCZxdW90O3Nlc3Npb24mcXVvdDs6JnF1b3Q7MTQ1LTg5NzUzOTAtNTA2NDExMyZxdW90O31cIiBkYXRhLWEtZGlzcGxheS1zdHJhdGVneT1cInN3YXBcIiBkYXRhLWEtdHJhbnNpdGlvbi1zdHJhdGVneT1cInN3YXBcIiBkYXRhLWEtY2xhc3M9XCJkZXNrdG9wXCIgY2xhc3M9XCJhLWJlZ2luIGEtY2Fyb3VzZWwtY29udGFpbmVyIGEtY2Fyb3VzZWwtZGlzcGxheS1zd2FwIGEtY2Fyb3VzZWwtdHJhbnNpdGlvbi1zd2FwIHNpbWlsYXJpdGllcy1hdWktY2Fyb3VzZWwgcDEzbi1zYy1jYXJvdXNlbFwiPlx1MDAzQ2lucHV0IGF1dG9jb21wbGV0ZT1cIm9uXCIgdHlwZT1cImhpZGRlblwiIGNsYXNzPVwiYS1jYXJvdXNlbC1maXJzdHZpc2libGVpdGVtXCI+XG4gICAgICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvdyBhLWNhcm91c2VsLWhlYWRlci1yb3cgYS1zaXplLWxhcmdlXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuOFwiPlx1MDAzQ2gyIGNsYXNzPVwiYS1jYXJvdXNlbC1oZWFkaW5nXCI+Q3VzdG9tZXJzIHdobyB2aWV3ZWQgdGhpcyBpdGVtIGFsc28gdmlld2VkXHUwMDNDL2gyPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuNCBhLXNwYW4tbGFzdCBhLXRleHQtcmlnaHRcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1jYXJvdXNlbC1wYWdpbmF0aW9uIGEtc2l6ZS1iYXNlXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtY2Fyb3VzZWwtcGFnZS1jb3VudFwiPlBhZ2UgXHUwMDNDc3BhbiBjbGFzcz1cImEtY2Fyb3VzZWwtcGFnZS1jdXJyZW50XCI+MVx1MDAzQy9zcGFuPiBvZiBcdTAwM0NzcGFuIGNsYXNzPVwiYS1jYXJvdXNlbC1wYWdlLW1heFwiPjFcdTAwM0Mvc3Bhbj4gIFx1MDAzQy9zcGFuPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWNhcm91c2VsLXJlc3RhcnQtY29udGFpbmVyXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtdGV4dC1zZXBhcmF0b3JcIj5cdTAwM0Mvc3Bhbj5cdTAwM0NhIGNsYXNzPVwiYS1jYXJvdXNlbC1yZXN0YXJ0XCIgaHJlZj1cIiNcIj5TdGFydCBvdmVyXHUwMDNDL2E+XHUwMDNDL3NwYW4+XHUwMDNDc3BhbiBjbGFzcz1cImEtY2Fyb3VzZWwtYWNjZXNzaWJpbGl0eS1wYWdlLWluZm8gYS1vZmZzY3JlZW5cIiBhcmlhLWxpdmU9XCJwb2xpdGVcIj5QYWdlIDEgb2YgMSAgXHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2PlxuICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImFvay1vZmZzY3JlZW4gcDEzbi1zYy1vZmZzY3JlZW5cIj5UaGlzIHNob3BwaW5nIGZlYXR1cmUgd2lsbCBjb250aW51ZSB0byBsb2FkIGl0ZW1zLiBJbiBvcmRlciB0byBuYXZpZ2F0ZSBvdXQgb2YgdGhpcyBjYXJvdXNlbCBwbGVhc2UgdXNlIHlvdXIgaGVhZGluZyBzaG9ydGN1dCBrZXkgdG8gbmF2aWdhdGUgdG8gdGhlIG5leHQgb3IgcHJldmlvdXMgaGVhZGluZy5cdTAwM0Mvc3Bhbj5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1yb3cgYS1jYXJvdXNlbC1jb250cm9scyBhLWNhcm91c2VsLXJvdyBhLWNhcm91c2VsLWhhcy1idXR0b25zXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1jYXJvdXNlbC1yb3ctaW5uZXJcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLWNhcm91c2VsLWNvbCBhLWNhcm91c2VsLWxlZnRcIj5cdTAwM0NhIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24taW1hZ2UgYS1jYXJvdXNlbC1idXR0b24gYS1jYXJvdXNlbC1nb3RvLXByZXZwYWdlXCIgdGFiaW5kZXg9XCIwXCIgaHJlZj1cIiNcIiBpZD1cImEtYXV0b2lkLTMyXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtYnV0dG9uLWlubmVyXCI+XHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tcHJldmlvdXNcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPkJhY2tcdTAwM0Mvc3Bhbj5cdTAwM0MvaT5cdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cImEtY2Fyb3VzZWwtY29sIGEtY2Fyb3VzZWwtY2VudGVyXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1jYXJvdXNlbC12aWV3cG9ydFwiIHN0eWxlPVwiaGVpZ2h0OiAyODFweDtcIj5cdTAwM0NvbCBjbGFzcz1cImEtY2Fyb3VzZWxcIiByb2xlPVwibGlzdFwiPlxuICAgICAgICAgICAgICAgIFx1MDAzQ2xpIGNsYXNzPVwiYS1jYXJvdXNlbC1jYXJkIGFvay1mbG9hdC1sZWZ0XCIgcm9sZT1cImxpc3RpdGVtXCI+XG4gICAgICAgIFx1MDAzQ2RpdiBkYXRhLXAxM24tYXNpbi1tZXRhZGF0YT1cInsmcXVvdDtyZWYmcXVvdDs6JnF1b3Q7cGRfc2JzXzE5N18xJnF1b3Q7LCZxdW90O2FzaW4mcXVvdDs6JnF1b3Q7QjAxSFhGR01OOCZxdW90O31cIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBwMTNuLWFzaW5cIj5cbiAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9LZW1zdG9uZS1CcnVzaGVkLVBsYXRlZC1EYW5nbGUtRWFycmluZ3MvZHAvQjAxSFhGR01OOC9yZWY9cGRfc2JzXzE5N18xLzE0NS04OTc1MzkwLTUwNjQxMTM/X2VuY29kaW5nPVVURjgmYW1wO3BkX3JkX2k9QjAxSFhGR01OOCZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9dlV3TlImYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWQ2NjM3MmZlLTY4YTYtNDhhMy05MGVjLTQxZDdmNjQyMTJiZSZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cHNjPTEmYW1wO3JlZlJJRD00NzVFMzRKUVY5Rk5QSEo5U1NURFwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbWluaVwiPlx1MDAzQ2ltZyBhbHQ9XCJLZW1zdG9uZSBCcnVzaGVkIFNhdGluIFJvc2UgR29sZCBQbGF0ZWQgRHJvcCBEYW5nbGUgRWFycmluZ3MgQ2hhbmRlbGllciBFYXJyaW5ncyBmb3IgV29tZW5cIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFtWWN2c21QWkwuX0FDX1VMMzIwX1NSMzIwLDMyMF8uanBnXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2UgcDEzbi1zYy1keW5hbWljLWltYWdlXCIgaGVpZ2h0PVwiMTYwXCIgd2lkdGg9XCIxNjBcIiBkYXRhLWEtZHluYW1pYy1pbWFnZT1cInsmcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFtWWN2c21QWkwuX0FDX1VMNDgwX1NSNDgwLDQ4MF8uanBnJnF1b3Q7Ols0ODAsNDgwXSwmcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFtWWN2c21QWkwuX0FDX1VMMTYwX1NSMTYwLDE2MF8uanBnJnF1b3Q7OlsxNjAsMTYwXSwmcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFtWWN2c21QWkwuX0FDX1VMMzIwX1NSMzIwLDMyMF8uanBnJnF1b3Q7OlszMjAsMzIwXX1cIj5cdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJwMTNuLXNjLXRydW5jYXRlZFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGRhdGEtcm93cz1cIjRcIj5LZW1zdG9uZSBCcnVzaGVkIFNhdGluIFJvc2UgR29sZCBQbGF0ZWQgRHJvcCBEYW5nbGUgRWFycmluZ3MgQ2hhbmRlbGllciBFYXJyaW5ncyBmb3IgV29tZW5cdTAwM0MvZGl2PlxuICAgIFx1MDAzQy9hPlxuICAgICAgICAgICAgXG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtaWNvbi1yb3cgYS1zcGFjaW5nLW5vbmVcIj5cbiAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGl0bGU9XCI0LjQgb3V0IG9mIDUgc3RhcnNcIiBocmVmPVwiL3Byb2R1Y3QtcmV2aWV3cy9CMDFIWEZHTU44L3JlZj1wZF9zYnNfMTk3X2NyXzEvMTQ1LTg5NzUzOTAtNTA2NDExMz9pZT1VVEY4JmFtcDtwZF9yZF9pPUIwMUhYRkdNTjgmYW1wO3BkX3JkX3I9YjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1JmFtcDtwZF9yZF93PXZVd05SJmFtcDtwZF9yZF93Zz1nc09iTyZhbXA7cGZfcmRfcD1kNjYzNzJmZS02OGE2LTQ4YTMtOTBlYy00MWQ3ZjY0MjEyYmUmYW1wO3BmX3JkX3I9NDc1RTM0SlFWOUZOUEhKOVNTVEQmYW1wO3JlZlJJRD00NzVFMzRKUVY5Rk5QSEo5U1NURFwiPlxuICAgICAgICAgICAgICAgIFx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXIgYS1zdGFyLTQtNVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWljb24tYWx0XCI+NC40IG91dCBvZiA1IHN0YXJzXHUwMDNDL3NwYW4+XHUwMDNDL2k+XG4gICAgICAgICAgICBcdTAwM0MvYT5cbiAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLXNpemUtc21hbGwgYS1saW5rLW5vcm1hbFwiIGhyZWY9XCIvcHJvZHVjdC1yZXZpZXdzL0IwMUhYRkdNTjgvcmVmPXBkX3Nic18xOTdfY3JfMS8xNDUtODk3NTM5MC01MDY0MTEzP2llPVVURjgmYW1wO3BkX3JkX2k9QjAxSFhGR01OOCZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9dlV3TlImYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWQ2NjM3MmZlLTY4YTYtNDhhMy05MGVjLTQxZDdmNjQyMTJiZSZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+NDNcdTAwM0MvYT5cbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL0tlbXN0b25lLUJydXNoZWQtUGxhdGVkLURhbmdsZS1FYXJyaW5ncy9kcC9CMDFIWEZHTU44L3JlZj1wZF9zYnNfMTk3XzEvMTQ1LTg5NzUzOTAtNTA2NDExMz9fZW5jb2Rpbmc9VVRGOCZhbXA7cGRfcmRfaT1CMDFIWEZHTU44JmFtcDtwZF9yZF9yPWI0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNSZhbXA7cGRfcmRfdz12VXdOUiZhbXA7cGRfcmRfd2c9Z3NPYk8mYW1wO3BmX3JkX3A9ZDY2MzcyZmUtNjhhNi00OGEzLTkwZWMtNDFkN2Y2NDIxMmJlJmFtcDtwZl9yZF9yPTQ3NUUzNEpRVjlGTlBISjlTU1REJmFtcDtwc2M9MSZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItcHJpY2VcIj5cdTAwM0NzcGFuIGNsYXNzPVwicDEzbi1zYy1wcmljZVwiPiQxNC45OVx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9hPiAgIFx1MDAzQy9kaXY+XG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgXHUwMDNDL2xpPlx1MDAzQ2xpIGNsYXNzPVwiYS1jYXJvdXNlbC1jYXJkIGFvay1mbG9hdC1sZWZ0XCIgcm9sZT1cImxpc3RpdGVtXCI+XG4gICAgICAgIFx1MDAzQ2RpdiBkYXRhLXAxM24tYXNpbi1tZXRhZGF0YT1cInsmcXVvdDtyZWYmcXVvdDs6JnF1b3Q7cGRfc2JzXzE5N18yJnF1b3Q7LCZxdW90O2FzaW4mcXVvdDs6JnF1b3Q7QjA3SE1WQzU1UyZxdW90O31cIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBwMTNuLWFzaW5cIj5cbiAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9MT1ZFLUNMT1ZFUi1MYXRlc3QtRWFycmluZ3MtSGFtbWVyZWQvZHAvQjA3SE1WQzU1Uy9yZWY9cGRfc2JzXzE5N18yLzE0NS04OTc1MzkwLTUwNjQxMTM/X2VuY29kaW5nPVVURjgmYW1wO3BkX3JkX2k9QjA3SE1WQzU1UyZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9dlV3TlImYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWQ2NjM3MmZlLTY4YTYtNDhhMy05MGVjLTQxZDdmNjQyMTJiZSZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1taW5pXCI+XHUwMDNDaW1nIGFsdD1cIkxPVkUmYW1wO0NMT1ZFUiBFYXJyaW5ncyBmb3IgV29tZW4gRGFuZ2xpbmcsIENyeXN0YWwgRHJvcCBEYW5nbGUgRWFycmluZ3MgRWxsaXB0aWNhbCBSaW5nIFRlYXJkcm9wIFdvbWVuIEdpcmxzIFdlZGRpbmcgR2lmdCBSb3NlIEdvbGRcIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNzF5MUUyWW9mNEwuX0FDX1VMMzIwX1NSMzIwLDMyMF8uanBnXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2UgcDEzbi1zYy1keW5hbWljLWltYWdlXCIgaGVpZ2h0PVwiMTYwXCIgd2lkdGg9XCIxNjBcIiBkYXRhLWEtZHluYW1pYy1pbWFnZT1cInsmcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNzF5MUUyWW9mNEwuX0FDX1VMNDgwX1NSNDgwLDQ4MF8uanBnJnF1b3Q7Ols0ODAsNDgwXSwmcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNzF5MUUyWW9mNEwuX0FDX1VMMzIwX1NSMzIwLDMyMF8uanBnJnF1b3Q7OlszMjAsMzIwXSwmcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNzF5MUUyWW9mNEwuX0FDX1VMMTYwX1NSMTYwLDE2MF8uanBnJnF1b3Q7OlsxNjAsMTYwXX1cIj5cdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJwMTNuLXNjLXRydW5jYXRlZFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGRhdGEtcm93cz1cIjRcIiB0aXRsZT1cIkxPVkUmYW1wO0NMT1ZFUiBFYXJyaW5ncyBmb3IgV29tZW4gRGFuZ2xpbmcsIENyeXN0YWwgRHJvcCBEYW5nbGUgRWFycmluZ3MgRWxsaXB0aWNhbCBSaW5nIFRlYXJkcm9wIFdvbWVuIEdpcmxzIFdlZGRpbmcgR2lmdCBSb3NlIEdvbGRcIj5MT1ZFJmFtcDtDTE9WRVIgRWFycmluZ3MgZm9yIFdvbWVuIERhbmdsaW5nLCBDcnlzdGFsIERyb3AgRGFuZ2xlIEVhcnJpbmdzIEVsbGlwdGljYWwgUmluZ+KAplx1MDAzQy9kaXY+XG4gICAgXHUwMDNDL2E+XG4gICAgICAgICAgICBcbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1pY29uLXJvdyBhLXNwYWNpbmctbm9uZVwiPlxuICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiB0aXRsZT1cIjQuNyBvdXQgb2YgNSBzdGFyc1wiIGhyZWY9XCIvcHJvZHVjdC1yZXZpZXdzL0IwN0hNVkM1NVMvcmVmPXBkX3Nic18xOTdfY3JfMi8xNDUtODk3NTM5MC01MDY0MTEzP2llPVVURjgmYW1wO3BkX3JkX2k9QjA3SE1WQzU1UyZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9dlV3TlImYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWQ2NjM3MmZlLTY4YTYtNDhhMy05MGVjLTQxZDdmNjQyMTJiZSZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3RhciBhLXN0YXItNC01XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj40Ljcgb3V0IG9mIDUgc3RhcnNcdTAwM0Mvc3Bhbj5cdTAwM0MvaT5cbiAgICAgICAgICAgIFx1MDAzQy9hPlxuICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtc2l6ZS1zbWFsbCBhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9wcm9kdWN0LXJldmlld3MvQjA3SE1WQzU1Uy9yZWY9cGRfc2JzXzE5N19jcl8yLzE0NS04OTc1MzkwLTUwNjQxMTM/aWU9VVRGOCZhbXA7cGRfcmRfaT1CMDdITVZDNTVTJmFtcDtwZF9yZF9yPWI0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNSZhbXA7cGRfcmRfdz12VXdOUiZhbXA7cGRfcmRfd2c9Z3NPYk8mYW1wO3BmX3JkX3A9ZDY2MzcyZmUtNjhhNi00OGEzLTkwZWMtNDFkN2Y2NDIxMmJlJmFtcDtwZl9yZF9yPTQ3NUUzNEpRVjlGTlBISjlTU1REJmFtcDtyZWZSSUQ9NDc1RTM0SlFWOUZOUEhKOVNTVERcIj40M1x1MDAzQy9hPlxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWwgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvTE9WRS1DTE9WRVItTGF0ZXN0LUVhcnJpbmdzLUhhbW1lcmVkL2RwL0IwN0hNVkM1NVMvcmVmPXBkX3Nic18xOTdfMi8xNDUtODk3NTM5MC01MDY0MTEzP19lbmNvZGluZz1VVEY4JmFtcDtwZF9yZF9pPUIwN0hNVkM1NVMmYW1wO3BkX3JkX3I9YjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1JmFtcDtwZF9yZF93PXZVd05SJmFtcDtwZF9yZF93Zz1nc09iTyZhbXA7cGZfcmRfcD1kNjYzNzJmZS02OGE2LTQ4YTMtOTBlYy00MWQ3ZjY0MjEyYmUmYW1wO3BmX3JkX3I9NDc1RTM0SlFWOUZOUEhKOVNTVEQmYW1wO3JlZlJJRD00NzVFMzRKUVY5Rk5QSEo5U1NURFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXByaWNlXCI+XHUwMDNDc3BhbiBjbGFzcz1cInAxM24tc2MtcHJpY2VcIj4kMTIuOTkgLSAkMjIuOTlcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0MvYT4gXHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICBcdTAwM0MvbGk+XHUwMDNDbGkgY2xhc3M9XCJhLWNhcm91c2VsLWNhcmQgYW9rLWZsb2F0LWxlZnRcIiByb2xlPVwibGlzdGl0ZW1cIj5cbiAgICAgICAgXHUwMDNDZGl2IGRhdGEtcDEzbi1hc2luLW1ldGFkYXRhPVwieyZxdW90O3JlZiZxdW90OzomcXVvdDtwZF9zYnNfMTk3XzMmcXVvdDssJnF1b3Q7YXNpbiZxdW90OzomcXVvdDtCMDc1NkZHMk1KJnF1b3Q7fVwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIHAxM24tYXNpblwiPlxuICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiBocmVmPVwiL0NhcmZlbnktRWFycmluZ3MtTXVsdGlsYXllci1UZWFyZHJvcC1IeXBvYWxsZXJnZW5pYy9kcC9CMDc1NkZHMk1KL3JlZj1wZF9zYnNfMTk3XzMvMTQ1LTg5NzUzOTAtNTA2NDExMz9fZW5jb2Rpbmc9VVRGOCZhbXA7cGRfcmRfaT1CMDc1NkZHMk1KJmFtcDtwZF9yZF9yPWI0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNSZhbXA7cGRfcmRfdz12VXdOUiZhbXA7cGRfcmRfd2c9Z3NPYk8mYW1wO3BmX3JkX3A9ZDY2MzcyZmUtNjhhNi00OGEzLTkwZWMtNDFkN2Y2NDIxMmJlJmFtcDtwZl9yZF9yPTQ3NUUzNEpRVjlGTlBISjlTU1REJmFtcDtwc2M9MSZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+XHUwMDNDZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1taW5pXCI+XHUwMDNDaW1nIGFsdD1cIkNhcmZlbnkgUm9zZSBHb2xkIGFuZCBTaWx2ZXIgRWFycmluZ3MgVHdvIFRvbmUgRGFuZ2xlIEVhcnJpbmdzLCBNdWx0aWxheWVyIEhlYXJ0IFNoYXBlZCBUZWFyZHJvcCBFYXJyaW5ncyBmb3IgV29tZW4sIEh5cG9hbGxlcmdlbmljIEVhcnJpbmcg4p2k77iPR2lybHMgV29tZW4gSmV3ZWxyeSBHaWZ04p2k77iPXCIgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxb1I4WkNabmVMLl9BQ19VTDMyMF9TUjMyMCwzMjBfLmpwZ1wiIGNsYXNzPVwiYS1keW5hbWljLWltYWdlIHAxM24tc2MtZHluYW1pYy1pbWFnZVwiIGhlaWdodD1cIjE2MFwiIHdpZHRoPVwiMTYwXCIgZGF0YS1hLWR5bmFtaWMtaW1hZ2U9XCJ7JnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxb1I4WkNabmVMLl9BQ19VTDE2MF9TUjE2MCwxNjBfLmpwZyZxdW90OzpbMTYwLDE2MF0sJnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxb1I4WkNabmVMLl9BQ19VTDQ4MF9TUjQ4MCw0ODBfLmpwZyZxdW90OzpbNDgwLDQ4MF0sJnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxb1I4WkNabmVMLl9BQ19VTDMyMF9TUjMyMCwzMjBfLmpwZyZxdW90OzpbMzIwLDMyMF19XCI+XHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwicDEzbi1zYy10cnVuY2F0ZWRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBkYXRhLXJvd3M9XCI0XCIgdGl0bGU9XCJDYXJmZW55IFJvc2UgR29sZCBhbmQgU2lsdmVyIEVhcnJpbmdzIFR3byBUb25lIERhbmdsZSBFYXJyaW5ncywgTXVsdGlsYXllciBIZWFydCBTaGFwZWQgVGVhcmRyb3AgRWFycmluZ3MgZm9yIFdvbWVuLCBIeXBvYWxsZXJnZW5pYyBFYXJyaW5nIOKdpO+4j0dpcmxzIFdvbWVuIEpld2VscnkgR2lmdOKdpO+4j1wiPkNhcmZlbnkgUm9zZSBHb2xkIGFuZCBTaWx2ZXIgRWFycmluZ3MgVHdvIFRvbmUgRGFuZ2xlIEVhcnJpbmdzLCBNdWx0aWxheWVyIEhlYXJ0IFNoYXBlZCBUZWFyZHJvcOKAplx1MDAzQy9kaXY+XG4gICAgXHUwMDNDL2E+XG4gICAgICAgICAgICBcbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1pY29uLXJvdyBhLXNwYWNpbmctbm9uZVwiPlxuICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiB0aXRsZT1cIjQuNiBvdXQgb2YgNSBzdGFyc1wiIGhyZWY9XCIvcHJvZHVjdC1yZXZpZXdzL0IwNzU2RkcyTUovcmVmPXBkX3Nic18xOTdfY3JfMy8xNDUtODk3NTM5MC01MDY0MTEzP2llPVVURjgmYW1wO3BkX3JkX2k9QjA3NTZGRzJNSiZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9dlV3TlImYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWQ2NjM3MmZlLTY4YTYtNDhhMy05MGVjLTQxZDdmNjQyMTJiZSZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3RhciBhLXN0YXItNC01XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj40LjYgb3V0IG9mIDUgc3RhcnNcdTAwM0Mvc3Bhbj5cdTAwM0MvaT5cbiAgICAgICAgICAgIFx1MDAzQy9hPlxuICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtc2l6ZS1zbWFsbCBhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9wcm9kdWN0LXJldmlld3MvQjA3NTZGRzJNSi9yZWY9cGRfc2JzXzE5N19jcl8zLzE0NS04OTc1MzkwLTUwNjQxMTM/aWU9VVRGOCZhbXA7cGRfcmRfaT1CMDc1NkZHMk1KJmFtcDtwZF9yZF9yPWI0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNSZhbXA7cGRfcmRfdz12VXdOUiZhbXA7cGRfcmRfd2c9Z3NPYk8mYW1wO3BmX3JkX3A9ZDY2MzcyZmUtNjhhNi00OGEzLTkwZWMtNDFkN2Y2NDIxMmJlJmFtcDtwZl9yZF9yPTQ3NUUzNEpRVjlGTlBISjlTU1REJmFtcDtyZWZSSUQ9NDc1RTM0SlFWOUZOUEhKOVNTVERcIj4zOVx1MDAzQy9hPlxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWwgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvQ2FyZmVueS1FYXJyaW5ncy1NdWx0aWxheWVyLVRlYXJkcm9wLUh5cG9hbGxlcmdlbmljL2RwL0IwNzU2RkcyTUovcmVmPXBkX3Nic18xOTdfMy8xNDUtODk3NTM5MC01MDY0MTEzP19lbmNvZGluZz1VVEY4JmFtcDtwZF9yZF9pPUIwNzU2RkcyTUomYW1wO3BkX3JkX3I9YjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1JmFtcDtwZF9yZF93PXZVd05SJmFtcDtwZF9yZF93Zz1nc09iTyZhbXA7cGZfcmRfcD1kNjYzNzJmZS02OGE2LTQ4YTMtOTBlYy00MWQ3ZjY0MjEyYmUmYW1wO3BmX3JkX3I9NDc1RTM0SlFWOUZOUEhKOVNTVEQmYW1wO3BzYz0xJmFtcDtyZWZSSUQ9NDc1RTM0SlFWOUZOUEhKOVNTVERcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1wcmljZVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJwMTNuLXNjLXByaWNlXCI+JDYuOTlcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0MvYT4gICBcdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgIFx1MDAzQy9saT5cdTAwM0NsaSBjbGFzcz1cImEtY2Fyb3VzZWwtY2FyZCBhb2stZmxvYXQtbGVmdFwiIHJvbGU9XCJsaXN0aXRlbVwiPlxuICAgICAgICBcdTAwM0NkaXYgZGF0YS1wMTNuLWFzaW4tbWV0YWRhdGE9XCJ7JnF1b3Q7cmVmJnF1b3Q7OiZxdW90O3BkX3Nic18xOTdfNCZxdW90OywmcXVvdDthc2luJnF1b3Q7OiZxdW90O0IwN0dCTks1SlImcXVvdDt9XCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgcDEzbi1hc2luXCI+XG4gICAgICAgICAgICBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIGhyZWY9XCIvREVTSU1USU9OLVBsYXRlZC1DbGFzc2ljLUVhcnJpbmdzLVN0ZXJsaW5nL2RwL0IwN0dCTks1SlIvcmVmPXBkX3Nic18xOTdfNC8xNDUtODk3NTM5MC01MDY0MTEzP19lbmNvZGluZz1VVEY4JmFtcDtwZF9yZF9pPUIwN0dCTks1SlImYW1wO3BkX3JkX3I9YjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1JmFtcDtwZF9yZF93PXZVd05SJmFtcDtwZF9yZF93Zz1nc09iTyZhbXA7cGZfcmRfcD1kNjYzNzJmZS02OGE2LTQ4YTMtOTBlYy00MWQ3ZjY0MjEyYmUmYW1wO3BmX3JkX3I9NDc1RTM0SlFWOUZOUEhKOVNTVEQmYW1wO3JlZlJJRD00NzVFMzRKUVY5Rk5QSEo5U1NURFwiPlx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbWluaVwiPlx1MDAzQ2ltZyBhbHQ9XCJERVNJTVRJT04gMThLIEdvbGQgUGxhdGVkIENsYXNzaWMgVHdpc3QgV2F2ZSBTdGVybGluZyBTaWx2ZXIgUG9zdCBEYW5nbGUgRWFycmluZ3MgZm9yIFdvbWVuIEdpcmxzXCIgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxdnVGV3IzTzJMLl9BQ19VTDMyMF9TUjMyMCwzMjBfLmpwZ1wiIGNsYXNzPVwiYS1keW5hbWljLWltYWdlIHAxM24tc2MtZHluYW1pYy1pbWFnZVwiIGhlaWdodD1cIjE2MFwiIHdpZHRoPVwiMTYwXCIgZGF0YS1hLWR5bmFtaWMtaW1hZ2U9XCJ7JnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxdnVGV3IzTzJMLl9BQ19VTDE2MF9TUjE2MCwxNjBfLmpwZyZxdW90OzpbMTYwLDE2MF0sJnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxdnVGV3IzTzJMLl9BQ19VTDQ4MF9TUjQ4MCw0ODBfLmpwZyZxdW90OzpbNDgwLDQ4MF0sJnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzYxdnVGV3IzTzJMLl9BQ19VTDMyMF9TUjMyMCwzMjBfLmpwZyZxdW90OzpbMzIwLDMyMF19XCI+XHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwicDEzbi1zYy10cnVuY2F0ZWRcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBkYXRhLXJvd3M9XCI0XCI+REVTSU1USU9OIDE4SyBHb2xkIFBsYXRlZCBDbGFzc2ljIFR3aXN0IFdhdmUgU3RlcmxpbmcgU2lsdmVyIFBvc3QgRGFuZ2xlIEVhcnJpbmdzIGZvciBXb21lbiBHaXJsc1x1MDAzQy9kaXY+XG4gICAgXHUwMDNDL2E+XG4gICAgICAgICAgICBcbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1pY29uLXJvdyBhLXNwYWNpbmctbm9uZVwiPlxuICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiB0aXRsZT1cIjQuNCBvdXQgb2YgNSBzdGFyc1wiIGhyZWY9XCIvcHJvZHVjdC1yZXZpZXdzL0IwN0dCTks1SlIvcmVmPXBkX3Nic18xOTdfY3JfNC8xNDUtODk3NTM5MC01MDY0MTEzP2llPVVURjgmYW1wO3BkX3JkX2k9QjA3R0JOSzVKUiZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9dlV3TlImYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWQ2NjM3MmZlLTY4YTYtNDhhMy05MGVjLTQxZDdmNjQyMTJiZSZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3RhciBhLXN0YXItNC01XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj40LjQgb3V0IG9mIDUgc3RhcnNcdTAwM0Mvc3Bhbj5cdTAwM0MvaT5cbiAgICAgICAgICAgIFx1MDAzQy9hPlxuICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtc2l6ZS1zbWFsbCBhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9wcm9kdWN0LXJldmlld3MvQjA3R0JOSzVKUi9yZWY9cGRfc2JzXzE5N19jcl80LzE0NS04OTc1MzkwLTUwNjQxMTM/aWU9VVRGOCZhbXA7cGRfcmRfaT1CMDdHQk5LNUpSJmFtcDtwZF9yZF9yPWI0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNSZhbXA7cGRfcmRfdz12VXdOUiZhbXA7cGRfcmRfd2c9Z3NPYk8mYW1wO3BmX3JkX3A9ZDY2MzcyZmUtNjhhNi00OGEzLTkwZWMtNDFkN2Y2NDIxMmJlJmFtcDtwZl9yZF9yPTQ3NUUzNEpRVjlGTlBISjlTU1REJmFtcDtyZWZSSUQ9NDc1RTM0SlFWOUZOUEhKOVNTVERcIj4xNzNcdTAwM0MvYT5cbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL0RFU0lNVElPTi1QbGF0ZWQtQ2xhc3NpYy1FYXJyaW5ncy1TdGVybGluZy9kcC9CMDdHQk5LNUpSL3JlZj1wZF9zYnNfMTk3XzQvMTQ1LTg5NzUzOTAtNTA2NDExMz9fZW5jb2Rpbmc9VVRGOCZhbXA7cGRfcmRfaT1CMDdHQk5LNUpSJmFtcDtwZF9yZF9yPWI0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNSZhbXA7cGRfcmRfdz12VXdOUiZhbXA7cGRfcmRfd2c9Z3NPYk8mYW1wO3BmX3JkX3A9ZDY2MzcyZmUtNjhhNi00OGEzLTkwZWMtNDFkN2Y2NDIxMmJlJmFtcDtwZl9yZF9yPTQ3NUUzNEpRVjlGTlBISjlTU1REJmFtcDtyZWZSSUQ9NDc1RTM0SlFWOUZOUEhKOVNTVERcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1wcmljZVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJwMTNuLXNjLXByaWNlXCI+JDEwLjk5IC0gJDEyLjk5XHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XHUwMDNDL2E+IFx1MDAzQy9kaXY+XG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgXHUwMDNDL2xpPlx1MDAzQ2xpIGNsYXNzPVwiYS1jYXJvdXNlbC1jYXJkIGFvay1mbG9hdC1sZWZ0XCIgcm9sZT1cImxpc3RpdGVtXCI+XG4gICAgICAgIFx1MDAzQ2RpdiBkYXRhLXAxM24tYXNpbi1tZXRhZGF0YT1cInsmcXVvdDtyZWYmcXVvdDs6JnF1b3Q7cGRfc2JzXzE5N181JnF1b3Q7LCZxdW90O2FzaW4mcXVvdDs6JnF1b3Q7QjA3UVBTWFBSQyZxdW90O31cIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBwMTNuLWFzaW5cIj5cbiAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9LZW1zdG9uZS1MZXZlcmJhY2stRWFycmluZ3MtRmFzaGlvbi1KZXdlbHJ5L2RwL0IwN1FQU1hQUkMvcmVmPXBkX3Nic18xOTdfNS8xNDUtODk3NTM5MC01MDY0MTEzP19lbmNvZGluZz1VVEY4JmFtcDtwZF9yZF9pPUIwN1FQU1hQUkMmYW1wO3BkX3JkX3I9YjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1JmFtcDtwZF9yZF93PXZVd05SJmFtcDtwZF9yZF93Zz1nc09iTyZhbXA7cGZfcmRfcD1kNjYzNzJmZS02OGE2LTQ4YTMtOTBlYy00MWQ3ZjY0MjEyYmUmYW1wO3BmX3JkX3I9NDc1RTM0SlFWOUZOUEhKOVNTVEQmYW1wO3BzYz0xJmFtcDtyZWZSSUQ9NDc1RTM0SlFWOUZOUEhKOVNTVERcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1pbmlcIj5cdTAwM0NpbWcgYWx0PVwiS2Vtc3RvbmUgR29sZCBUb25lIEhlYXJ0IExldmVyYmFjayBFYXJyaW5ncyBXb21lbiBGYXNoaW9uIEpld2VscnlcIiBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFhSGhMVXdEeUwuX0FDX1VMMzIwX1NSMzIwLDMyMF8uanBnXCIgY2xhc3M9XCJhLWR5bmFtaWMtaW1hZ2UgcDEzbi1zYy1keW5hbWljLWltYWdlXCIgaGVpZ2h0PVwiMTYwXCIgd2lkdGg9XCIxNjBcIiBkYXRhLWEtZHluYW1pYy1pbWFnZT1cInsmcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFhSGhMVXdEeUwuX0FDX1VMNDgwX1NSNDgwLDQ4MF8uanBnJnF1b3Q7Ols0ODAsNDgwXSwmcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFhSGhMVXdEeUwuX0FDX1VMMTYwX1NSMTYwLDE2MF8uanBnJnF1b3Q7OlsxNjAsMTYwXSwmcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFhSGhMVXdEeUwuX0FDX1VMMzIwX1NSMzIwLDMyMF8uanBnJnF1b3Q7OlszMjAsMzIwXX1cIj5cdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0NkaXYgY2xhc3M9XCJwMTNuLXNjLXRydW5jYXRlZFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGRhdGEtcm93cz1cIjRcIj5LZW1zdG9uZSBHb2xkIFRvbmUgSGVhcnQgTGV2ZXJiYWNrIEVhcnJpbmdzIFdvbWVuIEZhc2hpb24gSmV3ZWxyeVx1MDAzQy9kaXY+XG4gICAgXHUwMDNDL2E+XG4gICAgICAgICAgICBcbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwiYS1pY29uLXJvdyBhLXNwYWNpbmctbm9uZVwiPlxuICAgICAgICAgICAgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiB0aXRsZT1cIjUuMCBvdXQgb2YgNSBzdGFyc1wiIGhyZWY9XCIvcHJvZHVjdC1yZXZpZXdzL0IwN1FQU1hQUkMvcmVmPXBkX3Nic18xOTdfY3JfNS8xNDUtODk3NTM5MC01MDY0MTEzP2llPVVURjgmYW1wO3BkX3JkX2k9QjA3UVBTWFBSQyZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9dlV3TlImYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWQ2NjM3MmZlLTY4YTYtNDhhMy05MGVjLTQxZDdmNjQyMTJiZSZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDaSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3RhciBhLXN0YXItNVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWljb24tYWx0XCI+NS4wIG91dCBvZiA1IHN0YXJzXHUwMDNDL3NwYW4+XHUwMDNDL2k+XG4gICAgICAgICAgICBcdTAwM0MvYT5cbiAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLXNpemUtc21hbGwgYS1saW5rLW5vcm1hbFwiIGhyZWY9XCIvcHJvZHVjdC1yZXZpZXdzL0IwN1FQU1hQUkMvcmVmPXBkX3Nic18xOTdfY3JfNS8xNDUtODk3NTM5MC01MDY0MTEzP2llPVVURjgmYW1wO3BkX3JkX2k9QjA3UVBTWFBSQyZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9dlV3TlImYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWQ2NjM3MmZlLTY4YTYtNDhhMy05MGVjLTQxZDdmNjQyMTJiZSZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+N1x1MDAzQy9hPlxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtcm93XCI+XHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWwgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvS2Vtc3RvbmUtTGV2ZXJiYWNrLUVhcnJpbmdzLUZhc2hpb24tSmV3ZWxyeS9kcC9CMDdRUFNYUFJDL3JlZj1wZF9zYnNfMTk3XzUvMTQ1LTg5NzUzOTAtNTA2NDExMz9fZW5jb2Rpbmc9VVRGOCZhbXA7cGRfcmRfaT1CMDdRUFNYUFJDJmFtcDtwZF9yZF9yPWI0ZDBkMWE2LTE4NDQtNDQ0Ny05NjhkLTU2ODZlNzY2NTFiNSZhbXA7cGRfcmRfdz12VXdOUiZhbXA7cGRfcmRfd2c9Z3NPYk8mYW1wO3BmX3JkX3A9ZDY2MzcyZmUtNjhhNi00OGEzLTkwZWMtNDFkN2Y2NDIxMmJlJmFtcDtwZl9yZF9yPTQ3NUUzNEpRVjlGTlBISjlTU1REJmFtcDtwc2M9MSZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItcHJpY2VcIj5cdTAwM0NzcGFuIGNsYXNzPVwicDEzbi1zYy1wcmljZVwiPiQxNy45OVx1MDAzQy9zcGFuPlx1MDAzQy9zcGFuPlx1MDAzQy9hPiAgIFx1MDAzQy9kaXY+XG4gICAgICAgIFx1MDAzQy9kaXY+XG4gICAgXHUwMDNDL2xpPlx1MDAzQ2xpIGNsYXNzPVwiYS1jYXJvdXNlbC1jYXJkIGFvay1mbG9hdC1sZWZ0XCIgcm9sZT1cImxpc3RpdGVtXCI+XG4gICAgICAgIFx1MDAzQ2RpdiBkYXRhLXAxM24tYXNpbi1tZXRhZGF0YT1cInsmcXVvdDtyZWYmcXVvdDs6JnF1b3Q7cGRfc2JzXzE5N182JnF1b3Q7LCZxdW90O2FzaW4mcXVvdDs6JnF1b3Q7QjAxSFhGR0ZHVyZxdW90O31cIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBwMTNuLWFzaW5cIj5cbiAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9LZW1zdG9uZS1DaGFuZGVsaWVyLURhbmdsZS1FYXJyaW5ncy1KZXdlbHJ5L2RwL0IwMUhYRkdGR1cvcmVmPXBkX3Nic18xOTdfNi8xNDUtODk3NTM5MC01MDY0MTEzP19lbmNvZGluZz1VVEY4JmFtcDtwZF9yZF9pPUIwMUhYRkdGR1cmYW1wO3BkX3JkX3I9YjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1JmFtcDtwZF9yZF93PXZVd05SJmFtcDtwZF9yZF93Zz1nc09iTyZhbXA7cGZfcmRfcD1kNjYzNzJmZS02OGE2LTQ4YTMtOTBlYy00MWQ3ZjY0MjEyYmUmYW1wO3BmX3JkX3I9NDc1RTM0SlFWOUZOUEhKOVNTVEQmYW1wO3BzYz0xJmFtcDtyZWZSSUQ9NDc1RTM0SlFWOUZOUEhKOVNTVERcIj5cdTAwM0NkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1pbmlcIj5cdTAwM0NpbWcgYWx0PVwiS2Vtc3RvbmUgUm9zZSBHb2xkIENhdCdzIEV5ZSBTdG9uZSBDaGFuZGVsaWVyIERhbmdsZSBFYXJyaW5ncyBKZXdlbHJ5IGZvciBMb3ZlclwiIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS81MWFmRFpMbWo5TC5fQUNfVUwzMjBfU1IzMjAsMzIwXy5qcGdcIiBjbGFzcz1cImEtZHluYW1pYy1pbWFnZSBwMTNuLXNjLWR5bmFtaWMtaW1hZ2VcIiBoZWlnaHQ9XCIxNjBcIiB3aWR0aD1cIjE2MFwiIGRhdGEtYS1keW5hbWljLWltYWdlPVwieyZxdW90O2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS81MWFmRFpMbWo5TC5fQUNfVUw0ODBfU1I0ODAsNDgwXy5qcGcmcXVvdDs6WzQ4MCw0ODBdLCZxdW90O2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS81MWFmRFpMbWo5TC5fQUNfVUwzMjBfU1IzMjAsMzIwXy5qcGcmcXVvdDs6WzMyMCwzMjBdLCZxdW90O2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS81MWFmRFpMbWo5TC5fQUNfVUwxNjBfU1IxNjAsMTYwXy5qcGcmcXVvdDs6WzE2MCwxNjBdfVwiPlx1MDAzQy9kaXY+XG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cInAxM24tc2MtdHJ1bmNhdGVkXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgZGF0YS1yb3dzPVwiNFwiPktlbXN0b25lIFJvc2UgR29sZCBDYXQncyBFeWUgU3RvbmUgQ2hhbmRlbGllciBEYW5nbGUgRWFycmluZ3MgSmV3ZWxyeSBmb3IgTG92ZXJcdTAwM0MvZGl2PlxuICAgIFx1MDAzQy9hPlxuICAgICAgICAgICAgXG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtaWNvbi1yb3cgYS1zcGFjaW5nLW5vbmVcIj5cbiAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgdGl0bGU9XCI0Ljcgb3V0IG9mIDUgc3RhcnNcIiBocmVmPVwiL3Byb2R1Y3QtcmV2aWV3cy9CMDFIWEZHRkdXL3JlZj1wZF9zYnNfMTk3X2NyXzYvMTQ1LTg5NzUzOTAtNTA2NDExMz9pZT1VVEY4JmFtcDtwZF9yZF9pPUIwMUhYRkdGR1cmYW1wO3BkX3JkX3I9YjRkMGQxYTYtMTg0NC00NDQ3LTk2OGQtNTY4NmU3NjY1MWI1JmFtcDtwZF9yZF93PXZVd05SJmFtcDtwZF9yZF93Zz1nc09iTyZhbXA7cGZfcmRfcD1kNjYzNzJmZS02OGE2LTQ4YTMtOTBlYy00MWQ3ZjY0MjEyYmUmYW1wO3BmX3JkX3I9NDc1RTM0SlFWOUZOUEhKOVNTVEQmYW1wO3JlZlJJRD00NzVFMzRKUVY5Rk5QSEo5U1NURFwiPlxuICAgICAgICAgICAgICAgIFx1MDAzQ2kgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXIgYS1zdGFyLTQtNVwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLWljb24tYWx0XCI+NC43IG91dCBvZiA1IHN0YXJzXHUwMDNDL3NwYW4+XHUwMDNDL2k+XG4gICAgICAgICAgICBcdTAwM0MvYT5cbiAgICAgICAgICAgIFx1MDAzQ2EgY2xhc3M9XCJhLXNpemUtc21hbGwgYS1saW5rLW5vcm1hbFwiIGhyZWY9XCIvcHJvZHVjdC1yZXZpZXdzL0IwMUhYRkdGR1cvcmVmPXBkX3Nic18xOTdfY3JfNi8xNDUtODk3NTM5MC01MDY0MTEzP2llPVVURjgmYW1wO3BkX3JkX2k9QjAxSFhGR0ZHVyZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9dlV3TlImYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWQ2NjM3MmZlLTY4YTYtNDhhMy05MGVjLTQxZDdmNjQyMTJiZSZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cmVmUklEPTQ3NUUzNEpRVjlGTlBISjlTU1REXCI+MjRcdTAwM0MvYT5cbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJhLXJvd1wiPlx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL0tlbXN0b25lLUNoYW5kZWxpZXItRGFuZ2xlLUVhcnJpbmdzLUpld2VscnkvZHAvQjAxSFhGR0ZHVy9yZWY9cGRfc2JzXzE5N182LzE0NS04OTc1MzkwLTUwNjQxMTM/X2VuY29kaW5nPVVURjgmYW1wO3BkX3JkX2k9QjAxSFhGR0ZHVyZhbXA7cGRfcmRfcj1iNGQwZDFhNi0xODQ0LTQ0NDctOTY4ZC01Njg2ZTc2NjUxYjUmYW1wO3BkX3JkX3c9dlV3TlImYW1wO3BkX3JkX3dnPWdzT2JPJmFtcDtwZl9yZF9wPWQ2NjM3MmZlLTY4YTYtNDhhMy05MGVjLTQxZDdmNjQyMTJiZSZhbXA7cGZfcmRfcj00NzVFMzRKUVY5Rk5QSEo5U1NURCZhbXA7cHNjPTEmYW1wO3JlZlJJRD00NzVFMzRKUVY5Rk5QSEo5U1NURFwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXByaWNlXCI+XHUwMDNDc3BhbiBjbGFzcz1cInAxM24tc2MtcHJpY2VcIj4kMTguNDZcdTAwM0Mvc3Bhbj5cdTAwM0Mvc3Bhbj5cdTAwM0MvYT4gICBcdTAwM0MvZGl2PlxuICAgICAgICBcdTAwM0MvZGl2PlxuICAgIFx1MDAzQy9saT5cbiAgICAgICAgICAgIFx1MDAzQy9vbD5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwiYS1jYXJvdXNlbC1jb2wgYS1jYXJvdXNlbC1yaWdodFwiPlx1MDAzQ2EgY2xhc3M9XCJhLWJ1dHRvbiBhLWJ1dHRvbi1pbWFnZSBhLWNhcm91c2VsLWJ1dHRvbiBhLWNhcm91c2VsLWdvdG8tbmV4dHBhZ2VcIiB0YWJpbmRleD1cIjBcIiBocmVmPVwiI1wiIGlkPVwiYS1hdXRvaWQtMzNcIj5cdTAwM0NzcGFuIGNsYXNzPVwiYS1idXR0b24taW5uZXJcIj5cdTAwM0NpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1uZXh0XCI+XHUwMDNDc3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj5OZXh0XHUwMDNDL3NwYW4+XHUwMDNDL2k+XHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XG4gICAgICAgICAgICBcbiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cImEtZW5kIGFvay1oaWRkZW5cIj5cdTAwM0Mvc3Bhbj5cdTAwM0MvZGl2PlxuICAgIFxuICAgICAgICAgICAgICAgIFx1MDAzQy9kaXY+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcdTAwM0MvZGl2PlxuICAgICAgICBcbiAgICAgICAgXHUwMDNDL2Rpdj5cbiAgICBcbiAgICBcblxuXG5cblxuXG5cblxuXHUwMDNDL2Rpdj5cblxuXG5cbiAgXG4gIFxuICBcbiAgXG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuIFxuIFxuIFxuXG5cblxuXG5cbiAgXG5cblxuXG5cblxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuXG5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICBcblxuXG4gICAgICAgICAgICBcblxuXG4gICAgICAgICAgICBcblxuXG5cblxuXG5cbiAgICAgICAgICAgIFxuXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0NkaXYgaWQ9XCJkcF9icm93c2VfY29udGFpbmVyX2RpdlwiIGNsYXNzPVwiZmVhdHVyZVwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiYnJvd3NlXCI+XG4gICAgICAgICBcbiAgICAgXG5cblxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXHQgICAgICAgICAgICAgICAgXG5cdCAgICAgICAgICAgICAgICBcblx0ICAgICAgICAgICAgICAgIFx0XG5cblx1MDAzQ2RpdiBpZD1cImJyb3dzZV9mZWF0dXJlX2RpdlwiIGRhdGEtZmVhdHVyZS1uYW1lPVwiYnJvd3NlXCIgZGF0YS10ZW1wbGF0ZS1uYW1lPVwiYnJvd3NlXCIgY2xhc3M9XCJhLXJvdyBmZWF0dXJlXCI+XG4gICAgXG4gICAgICAgIFxuXG5cblxuXG4gICAgXG5cdTAwM0MvZGl2PlxuXHQgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcdTAwM0MvZGl2PlxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDc2NyaXB0PmlmICh0eXBlb2YgdWV0ID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiB1ZXMgPT09ICdmdW5jdGlvbicpIHt2YXIgc2NvcGUgPSAnRGV0YWlsX2FkLWVuZGNhcC0xX0dsYW5jZSc7dmFyIHBsYWNlbWVudElkID0gJzZlODg0OWY3LTY0YzMtNDVlNS1hNzMyLWQ0ZWY4YzA2MjQ2Yic7dWVzKCd3YicsICdhZHBsYWNlbWVudHM6JyArIHNjb3BlLnJlcGxhY2UoL1xcXy9nLCAnOicpLCB7d2I6MX0pOyB1ZXQoJ2JiJywgJ2FkcGxhY2VtZW50czonICsgc2NvcGUucmVwbGFjZSgvXFxfL2csICc6JyksIHt3YjoxfSk7IGlmIChwbGFjZW1lbnRJZCkge3Vlcygnd2InLCAnYWRwbGFjZW1lbnRzOicgKyBwbGFjZW1lbnRJZCwge3diOjF9KTt1ZXQoJ2JiJywgJ2FkcGxhY2VtZW50czonICsgcGxhY2VtZW50SWQsIHt3YjoxfSk7fX1cdTAwM0Mvc2NyaXB0Plx1MDAzQ2RpdiBpZD1cImFwZV9EZXRhaWxfYWQtZW5kY2FwLTFfR2xhbmNlX3BsYWNlbWVudFwiIGNsYXNzPVwiY29waWxvdC1zZWN1cmUtZGlzcGxheSBjZWx3aWRnZXQgIHRleHQveC1kYWN4LXNhZmVmcmFtZVwiIGNlbF93aWRnZXRfaWQ9XCJhZHBsYWNlbWVudHM6RGV0YWlsOmFkLWVuZGNhcC0xOkdsYW5jZVwiIGRhdGEtY2FtcGFpZ249XCI2NjIxXCIgc3R5bGU9XCJkaXNwbGF5OiBub25lOyBtYXJnaW46IGF1dG87IGxpbmUtaGVpZ2h0OiAwOyB3aWR0aDogNzI4cHg7XCIgZGF0YS1hZC1kZXRhaWxzPVwieyZxdW90O3Nsb3QmcXVvdDsgOiZxdW90O0RldGFpbF9hZC1lbmRjYXAtMV9HbGFuY2UmcXVvdDssJnF1b3Q7c2xvdE5hbWUmcXVvdDsgOiZxdW90O2FkLWVuZGNhcC0xJnF1b3Q7LCZxdW90O3NyYyZxdW90OyA6ICZxdW90O2h0dHBzOi8vYWF4LXVzLWVhc3QuYW1hem9uLWFkc3lzdGVtLmNvbS9lL3hzcC9nZXRBZD9zcmM9NTAwJmFtcDtzbG90PWFkLWVuZGNhcC0xJmFtcDtyaWQ9MDEwMTU0N2MwZTZhM2ViMTlhNjY2NTU5YjhmYjRkOGYwZGZiZjcxZDBhY2JiMDhlM2I5YzEzNWQxNTRjNTgyMmFlZTgmcXVvdDssJnF1b3Q7YWRTZXJ2ZXImcXVvdDsgOiZxdW90O2NzJnF1b3Q7LCZxdW90O2NhbXBhaWduSWQmcXVvdDsgOiAgJnF1b3Q7NjYyMSZxdW90OywmcXVvdDthcmlkJnF1b3Q7IDomcXVvdDs1NDBkNDFjMmI0YzA0MDVlOWRiYjVlZThkNjg0OWM2MiZxdW90OywmcXVvdDtwbGFjZW1lbnRJZCZxdW90OzogJnF1b3Q7NmU4ODQ5ZjctNjRjMy00NWU1LWE3MzItZDRlZjhjMDYyNDZiJnF1b3Q7LCZxdW90O3NpemUmcXVvdDsgOnsmcXVvdDt3aWR0aCZxdW90OzogJnF1b3Q7MTAwJSZxdW90OywmcXVvdDtoZWlnaHQmcXVvdDsgOiAmcXVvdDs5MHB4JnF1b3Q7fSwmcXVvdDthbGxvd2VkU2l6ZXMmcXVvdDsgOlt7JnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7NzI4cHgmcXVvdDssJnF1b3Q7aGVpZ2h0JnF1b3Q7OiZxdW90OzkwcHgmcXVvdDt9XSwmcXVvdDthbGxvd2VkRG9tYWlucyZxdW90OyA6ICBbJnF1b3Q7Zy1lY3guaW1hZ2VzLWFtYXpvbi5jb20mcXVvdDtdLCZxdW90O2FhblBhcmFtcyZxdW90OyA6ICAgJnF1b3Q7c2l0ZSUzRGFtYXpvbi51cyUzQnB0JTNERGV0YWlsJTNCc2xvdCUzRGFkLWVuZGNhcC0xJTNCcGlkJTNEQjAxR0tRSTM5MiUzQmFyaWQlM0Q1NDBkNDFjMmI0YzA0MDVlOWRiYjVlZThkNjg0OWM2MiZxdW90OywmcXVvdDtsb2FkQWZ0ZXImcXVvdDsgOiAgICZxdW90O2NyaXRpY2FsRmVhdHVyZSZxdW90OywmcXVvdDtleHRyYURlbGF5JnF1b3Q7IDogIDAsJnF1b3Q7aWZyYW1lRXh0cmFTdHlsZSZxdW90OzogJnF1b3Q7bWluLXdpZHRoOiA3MjhweDsmcXVvdDssJnF1b3Q7aWZyYW1lQ2xhc3MmcXVvdDs6ICAmcXVvdDsmcXVvdDssJnF1b3Q7YWRQaXhlbHMmcXVvdDs6IFtdLCZxdW90O2FkUGl4ZWxEZWxheSZxdW90OzogJnF1b3Q7MCZxdW90OywmcXVvdDthYXhJbnN0clBpeGVsVXJsJnF1b3Q7OiAmcXVvdDsmcXVvdDssJnF1b3Q7c2VydmVyU2lkZUZldGNoQWQmcXVvdDs6ICZxdW90O2ZhbHNlJnF1b3Q7LCZxdW90O2VuYWJsZUFkQmxvY2tlckRldGVjdG9yJnF1b3Q7OiBmYWxzZSwmcXVvdDtkaXNhYmxlUmVzaXplRnVuYyZxdW90OzogdHJ1ZSwmcXVvdDtmYWxsYmFja1N0YXRpY0FkSW1nVXJsJnF1b3Q7OiAmcXVvdDsmcXVvdDssJnF1b3Q7ZmFsbGJhY2tTdGF0aWNBZENsaWNrVXJsJnF1b3Q7OiAmcXVvdDsmcXVvdDssJnF1b3Q7ZmFsbGJhY2tTdGF0aWNBZEV4dHJhU3R5bGUmcXVvdDs6ICZxdW90OyZxdW90OywmcXVvdDthZEZlZWRiYWNrSW5mbyZxdW90OzogeyZxdW90O2VuZFBvaW50JnF1b3Q7OiAmcXVvdDsvZ3AvYXEtZmVlZGJhY2svbGF6eUxvYWQvaGFuZGxlci9hZi1saW5rLWhhbmRsZXIuaHRtbCZxdW90OywmcXVvdDtib29sRmVlZGJhY2smcXVvdDs6IHRydWUsJnF1b3Q7c2x1Z1RleHQmcXVvdDs6ICZxdW90O0FkdmVydGlzZW1lbnQmcXVvdDt9LCZxdW90O2FkUGxhY2VtZW50TWV0YURhdGEmcXVvdDs6IHsmcXVvdDtwYWdlVXJsJnF1b3Q7OiAmcXVvdDthSFIwY0hNNkx5OTNkM2N1WVcxaGVtOXVMbU52YlM5bmNDOXdjbTlrZFdOMEwwSXdNVWRMVVVrek9USS9aSEJTWlhGMVpYTjBTV1E5TkRjMVJUTTBTbEZXT1VaT1VFaEtPVk5UVkVRbVYwUkhQV3BsZDJWc2NubGZaR2x6Y0d4aGVWOXZibDkzWldKemFYUmxKaXBsYm5SeWFXVnpLajB3SmlwV1pYSnphVzl1S2oweEpnPT0mcXVvdDssJnF1b3Q7YWRFbGVtZW50SWQmcXVvdDs6ICZxdW90O2FwZV9EZXRhaWxfYWQtZW5kY2FwLTFfR2xhbmNlX3BsYWNlbWVudCZxdW90OywmcXVvdDtwYWdlVHlwZSZxdW90OzogJnF1b3Q7RGV0YWlsJnF1b3Q7LCZxdW90O3Nsb3ROYW1lJnF1b3Q7OiAmcXVvdDthZC1lbmRjYXAtMSZxdW90O30sJnF1b3Q7YWRDcmVhdGl2ZU1ldGFEYXRhJnF1b3Q7OiB7JnF1b3Q7YWROZXR3b3JrJnF1b3Q7OiAmcXVvdDtjcyZxdW90O30sJnF1b3Q7YWR2ZXJ0aXNlbWVudFN0eWxlJnF1b3Q7OiB7JnF1b3Q7cG9zaXRpb24mcXVvdDs6ICZxdW90O2Fic29sdXRlJnF1b3Q7LCZxdW90O3RvcCZxdW90OzogJnF1b3Q7MnB4JnF1b3Q7LCZxdW90O3JpZ2h0JnF1b3Q7OiAmcXVvdDswcHgmcXVvdDssJnF1b3Q7ZGlzcGxheSZxdW90OzogJnF1b3Q7aW5saW5lLWJsb2NrJnF1b3Q7LCZxdW90O2ZvbnQmcXVvdDs6ICZxdW90O25vcm1hbCAxMXB4IEFyaWFsJnF1b3Q7LCZxdW90O2NvbG9yJnF1b3Q7OiAmcXVvdDtncmV5JnF1b3Q7fSwmcXVvdDtmZWVkYmFja0RpdlN0eWxlJnF1b3Q7OiB7ICZxdW90O3Bvc2l0aW9uJnF1b3Q7OiAmcXVvdDtyZWxhdGl2ZSZxdW90OywgJnF1b3Q7aGVpZ2h0JnF1b3Q7OiAmcXVvdDsxOHB4JnF1b3Q7fSwmcXVvdDt2aWV3YWJpbGl0eVN0YW5kYXJkcyZxdW90OzogW3smcXVvdDtwJnF1b3Q7OiAwLCAmcXVvdDt0JnF1b3Q7OiAwLCAmcXVvdDtkZWYmcXVvdDs6ICZxdW90O2Ftem4mcXVvdDt9LCB7JnF1b3Q7cCZxdW90OzogNTAsICZxdW90O3QmcXVvdDs6IDEsICZxdW90O2RlZiZxdW90OzogJnF1b3Q7aWFiJnF1b3Q7fSwgeyZxdW90O3AmcXVvdDs6IDEwMCwgJnF1b3Q7dCZxdW90OzogMSwgJnF1b3Q7ZGVmJnF1b3Q7OiAmcXVvdDtncm91cG0mcXVvdDt9XSwmcXVvdDthamF4V2VibGFiVHJpZ2dlcklkJnF1b3Q7OiAmcXVvdDsmcXVvdDssJnF1b3Q7YWJwU3RhdHVzJnF1b3Q7OiAmcXVvdDstMSZxdW90OywmcXVvdDthYnBBY2NlcHRhYmxlJnF1b3Q7OiAmcXVvdDt0cnVlJnF1b3Q7LCZxdW90O3Byb2dyYW1JZHNUb0NvbGxhcHNlJnF1b3Q7OiBbXSwmcXVvdDtEQXNmVXJsJnF1b3Q7OiZxdW90O2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9hcGUvc2YvZGVza3RvcC9EQXNmLTEuNTAuMjI4Zjk4Yy5fVjQ1MTk1MDkxMF8uanMmcXVvdDt9XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgZGF0YS1hcmlkPVwiNTQwZDQxYzJiNGMwNDA1ZTlkYmI1ZWU4ZDY4NDljNjJcIj5cdTAwM0NpZnJhbWUgbmFtZT1cInsmcXVvdDtzbG90JnF1b3Q7OiZxdW90O0RldGFpbF9hZC1lbmRjYXAtMV9HbGFuY2UmcXVvdDssJnF1b3Q7c2xvdE5hbWUmcXVvdDs6JnF1b3Q7YWQtZW5kY2FwLTEmcXVvdDssJnF1b3Q7c3JjJnF1b3Q7OiZxdW90O2h0dHBzOi8vYWF4LXVzLWVhc3QuYW1hem9uLWFkc3lzdGVtLmNvbS9lL3hzcC9nZXRBZD9zcmM9NTAwJmFtcDtzbG90PWFkLWVuZGNhcC0xJmFtcDtyaWQ9MDEwMTU0N2MwZTZhM2ViMTlhNjY2NTU5YjhmYjRkOGYwZGZiZjcxZDBhY2JiMDhlM2I5YzEzNWQxNTRjNTgyMmFlZTgmcXVvdDssJnF1b3Q7YWRTZXJ2ZXImcXVvdDs6JnF1b3Q7Y3MmcXVvdDssJnF1b3Q7Y2FtcGFpZ25JZCZxdW90OzomcXVvdDs2NjIxJnF1b3Q7LCZxdW90O2FyaWQmcXVvdDs6JnF1b3Q7NTQwZDQxYzJiNGMwNDA1ZTlkYmI1ZWU4ZDY4NDljNjImcXVvdDssJnF1b3Q7cGxhY2VtZW50SWQmcXVvdDs6JnF1b3Q7NmU4ODQ5ZjctNjRjMy00NWU1LWE3MzItZDRlZjhjMDYyNDZiJnF1b3Q7LCZxdW90O3NpemUmcXVvdDs6eyZxdW90O3dpZHRoJnF1b3Q7OiZxdW90OzEwMCUmcXVvdDssJnF1b3Q7aGVpZ2h0JnF1b3Q7OiZxdW90OzkwcHgmcXVvdDt9LCZxdW90O2FsbG93ZWRTaXplcyZxdW90OzpbeyZxdW90O3dpZHRoJnF1b3Q7OiZxdW90OzcyOHB4JnF1b3Q7LCZxdW90O2hlaWdodCZxdW90OzomcXVvdDs5MHB4JnF1b3Q7fSx7JnF1b3Q7d2lkdGgmcXVvdDs6JnF1b3Q7MTAwJSZxdW90OywmcXVvdDtoZWlnaHQmcXVvdDs6JnF1b3Q7OTBweCZxdW90O31dLCZxdW90O2FsbG93ZWREb21haW5zJnF1b3Q7OlsmcXVvdDtnLWVjeC5pbWFnZXMtYW1hem9uLmNvbSZxdW90OywmcXVvdDtkM2wzbGtpbnozZjU2dC5jbG91ZGZyb250Lm5ldCZxdW90OywmcXVvdDtnLWVjeC5pbWFnZXMtYW1hem9uLmNvbSZxdW90OywmcXVvdDt6LWVjeC5pbWFnZXMtYW1hem9uLmNvbSZxdW90OywmcXVvdDtpbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tJnF1b3Q7LCZxdW90O2ctZWM0LmltYWdlcy1hbWF6b24uY29tJnF1b3Q7LCZxdW90O2ltYWdlcy1jbi5zc2wtaW1hZ2VzLWFtYXpvbi5jb20mcXVvdDtdLCZxdW90O2FhblBhcmFtcyZxdW90OzomcXVvdDtzaXRlJTNEYW1hem9uLnVzJTNCcHQlM0REZXRhaWwlM0JzbG90JTNEYWQtZW5kY2FwLTElM0JwaWQlM0RCMDFHS1FJMzkyJTNCYXJpZCUzRDU0MGQ0MWMyYjRjMDQwNWU5ZGJiNWVlOGQ2ODQ5YzYyJnF1b3Q7LCZxdW90O2xvYWRBZnRlciZxdW90OzomcXVvdDtjcml0aWNhbEZlYXR1cmUmcXVvdDssJnF1b3Q7ZXh0cmFEZWxheSZxdW90OzowLCZxdW90O2lmcmFtZUV4dHJhU3R5bGUmcXVvdDs6JnF1b3Q7bWluLXdpZHRoOiA3MjhweDsmcXVvdDssJnF1b3Q7aWZyYW1lQ2xhc3MmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O2FkUGl4ZWxzJnF1b3Q7OltdLCZxdW90O2FkUGl4ZWxEZWxheSZxdW90OzomcXVvdDswJnF1b3Q7LCZxdW90O2FheEluc3RyUGl4ZWxVcmwmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O3NlcnZlclNpZGVGZXRjaEFkJnF1b3Q7OiZxdW90O2ZhbHNlJnF1b3Q7LCZxdW90O2VuYWJsZUFkQmxvY2tlckRldGVjdG9yJnF1b3Q7OmZhbHNlLCZxdW90O2Rpc2FibGVSZXNpemVGdW5jJnF1b3Q7OnRydWUsJnF1b3Q7ZmFsbGJhY2tTdGF0aWNBZEltZ1VybCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7ZmFsbGJhY2tTdGF0aWNBZENsaWNrVXJsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDtmYWxsYmFja1N0YXRpY0FkRXh0cmFTdHlsZSZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7YWRGZWVkYmFja0luZm8mcXVvdDs6eyZxdW90O2VuZFBvaW50JnF1b3Q7OiZxdW90Oy9ncC9hcS1mZWVkYmFjay9sYXp5TG9hZC9oYW5kbGVyL2FmLWxpbmstaGFuZGxlci5odG1sJnF1b3Q7LCZxdW90O2Jvb2xGZWVkYmFjayZxdW90Ozp0cnVlLCZxdW90O3NsdWdUZXh0JnF1b3Q7OiZxdW90O0FkdmVydGlzZW1lbnQmcXVvdDt9LCZxdW90O2FkUGxhY2VtZW50TWV0YURhdGEmcXVvdDs6eyZxdW90O3BhZ2VVcmwmcXVvdDs6JnF1b3Q7YUhSMGNITTZMeTkzZDNjdVlXMWhlbTl1TG1OdmJTOW5jQzl3Y205a2RXTjBMMEl3TVVkTFVVa3pPVEkvWkhCU1pYRjFaWE4wU1dROU5EYzFSVE0wU2xGV09VWk9VRWhLT1ZOVFZFUW1WMFJIUFdwbGQyVnNjbmxmWkdsemNHeGhlVjl2Ymw5M1pXSnphWFJsSmlwbGJuUnlhV1Z6S2owd0ppcFdaWEp6YVc5dUtqMHhKZz09JnF1b3Q7LCZxdW90O2FkRWxlbWVudElkJnF1b3Q7OiZxdW90O2FwZV9EZXRhaWxfYWQtZW5kY2FwLTFfR2xhbmNlX3BsYWNlbWVudCZxdW90OywmcXVvdDtwYWdlVHlwZSZxdW90OzomcXVvdDtEZXRhaWwmcXVvdDssJnF1b3Q7c2xvdE5hbWUmcXVvdDs6JnF1b3Q7YWQtZW5kY2FwLTEmcXVvdDt9LCZxdW90O2FkQ3JlYXRpdmVNZXRhRGF0YSZxdW90Ozp7JnF1b3Q7YWROZXR3b3JrJnF1b3Q7OiZxdW90O2NzJnF1b3Q7fSwmcXVvdDthZHZlcnRpc2VtZW50U3R5bGUmcXVvdDs6eyZxdW90O3Bvc2l0aW9uJnF1b3Q7OiZxdW90O2Fic29sdXRlJnF1b3Q7LCZxdW90O3RvcCZxdW90OzomcXVvdDsycHgmcXVvdDssJnF1b3Q7cmlnaHQmcXVvdDs6JnF1b3Q7MHB4JnF1b3Q7LCZxdW90O2Rpc3BsYXkmcXVvdDs6JnF1b3Q7aW5saW5lLWJsb2NrJnF1b3Q7LCZxdW90O2ZvbnQmcXVvdDs6JnF1b3Q7bm9ybWFsIDExcHggQXJpYWwmcXVvdDssJnF1b3Q7Y29sb3ImcXVvdDs6JnF1b3Q7Z3JleSZxdW90O30sJnF1b3Q7ZmVlZGJhY2tEaXZTdHlsZSZxdW90Ozp7JnF1b3Q7cG9zaXRpb24mcXVvdDs6JnF1b3Q7cmVsYXRpdmUmcXVvdDssJnF1b3Q7aGVpZ2h0JnF1b3Q7OiZxdW90OzE4cHgmcXVvdDt9LCZxdW90O3ZpZXdhYmlsaXR5U3RhbmRhcmRzJnF1b3Q7Olt7JnF1b3Q7cCZxdW90OzowLCZxdW90O3QmcXVvdDs6MCwmcXVvdDtkZWYmcXVvdDs6JnF1b3Q7YW16biZxdW90O30seyZxdW90O3AmcXVvdDs6NTAsJnF1b3Q7dCZxdW90OzoxLCZxdW90O2RlZiZxdW90OzomcXVvdDtpYWImcXVvdDt9LHsmcXVvdDtwJnF1b3Q7OjEwMCwmcXVvdDt0JnF1b3Q7OjEsJnF1b3Q7ZGVmJnF1b3Q7OiZxdW90O2dyb3VwbSZxdW90O31dLCZxdW90O2FqYXhXZWJsYWJUcmlnZ2VySWQmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O2FicFN0YXR1cyZxdW90OzomcXVvdDstMSZxdW90OywmcXVvdDthYnBBY2NlcHRhYmxlJnF1b3Q7OiZxdW90O3RydWUmcXVvdDssJnF1b3Q7cHJvZ3JhbUlkc1RvQ29sbGFwc2UmcXVvdDs6W10sJnF1b3Q7REFzZlVybCZxdW90OzomcXVvdDtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvYXBlL3NmL2Rlc2t0b3AvREFzZi0xLjUwLjIyOGY5OGMuX1Y0NTE5NTA5MTBfLmpzJnF1b3Q7LCZxdW90O2hvc3REb21haW4mcXVvdDs6JnF1b3Q7aHR0cHM6Ly93d3cuYW1hem9uLmNvbSZxdW90OywmcXVvdDtxdWVyeVBhcmFtcyZxdW90Ozp7fSwmcXVvdDthUGFnZVN0YXJ0JnF1b3Q7OjE1Njk3OTQ0NTg5MTMsJnF1b3Q7YWRTdGFydFRpbWUmcXVvdDs6MTU2OTc5NDQ2MDI4NiwmcXVvdDtzYWZlRnJhbWVTcmMmcXVvdDs6JnF1b3Q7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2FwZS9zZi93aGl0ZWxpc3RlZC9kZXNrdG9wL3NmLTEuNTAuMjI4Zjk4Yy5fVjQ1MTk1MDkwOF8uaHRtbCZxdW90O31cIiBpZD1cImFwZV9EZXRhaWxfYWQtZW5kY2FwLTFfR2xhbmNlX2lmcmFtZVwiIHNyYz1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9hcGUvc2Yvd2hpdGVsaXN0ZWQvZGVza3RvcC9zZi0xLjUwLjIyOGY5OGMuX1Y0NTE5NTA5MDhfLmh0bWxcIiBoZWlnaHQ9XCI5MHB4XCIgd2lkdGg9XCIxMDAlXCIgY2xhc3M9XCJcIiBmcmFtZWJvcmRlcj1cIjBcIiBtYXJnaW5oZWlnaHQ9XCIwXCIgbWFyZ2lud2lkdGg9XCIwXCIgc2Nyb2xsaW5nPVwibm9cIiBhbGxvd3RyYW5zcGFyZW5jeT1cInRydWVcIiBhbGxvd2Z1bGxzY3JlZW49XCJcIiBtb3phbGxvd2Z1bGxzY3JlZW49XCJcIiB3ZWJraXRhbGxvd2Z1bGxzY3JlZW49XCJcIiBkYXRhLWFyaWQ9XCI1NDBkNDFjMmI0YzA0MDVlOWRiYjVlZThkNjg0OWM2MlwiIHNhbmRib3g9XCJhbGxvdy1zY3JpcHRzIGFsbG93LXRvcC1uYXZpZ2F0aW9uIGFsbG93LXBvcHVwcyBhbGxvdy1wb3B1cHMtdG8tZXNjYXBlLXNhbmRib3ggYWxsb3ctc2FtZS1vcmlnaW5cIiBzdHlsZT1cIm1pbi13aWR0aDogNzI4cHg7XCI+XHUwMDNDL2lmcmFtZT5cdTAwM0MvZGl2Plx1MDAzQ3NjcmlwdD4oZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGQsZSl7aWYod2luZG93LmFkZEV2ZW50TGlzdGVuZXIpe3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKGQsZSxmYWxzZSk7fWVsc2V7aWYod2luZG93LmF0dGFjaEV2ZW50KXt3aW5kb3cuYXR0YWNoRXZlbnQoXCJvblwiK2QsZSk7fX19ZnVuY3Rpb24gYyhkLGUpe2lmKHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKXt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihkLGUsZmFsc2UpO31lbHNle2lmKHdpbmRvdy5kZXRhY2hFdmVudCl7d2luZG93LmRldGFjaEV2ZW50KFwib25cIitkLGUpO319fXZhciBiPWZ1bmN0aW9uKCl7KGZ1bmN0aW9uKCl7KGZ1bmN0aW9uKGosbSl7ai5zZkxvZ0Vycm9ycz1qLnNmTG9nRXJyb3JzfHxmYWxzZTt2YXIgbz1vfHxmdW5jdGlvbihzLHIpe3I9cnx8bmV3IEVycm9yKHMpO2lmKGoudWUmJnR5cGVvZiB1ZS5jb3VudD09XCJmdW5jdGlvblwiKXt1ZS5jb3VudChcImFkcGxhY2VtZW50czpzYWZlRnJhbWVFcnJvclwiLDEpO31pZighai5zZkxvZ0Vycm9ycyl7cmV0dXJuO31pZihqLnVlTG9nRXJyb3Ipe2oudWVMb2dFcnJvcihyLHtsb2dMZXZlbDpcIkVSUk9SXCIsYXR0cmlidXRpb246XCJBUEUtc2FmZWZyYW1lXCIsbWVzc2FnZTpzK1wiIFwifSk7fWVsc2V7aWYodHlwZW9mIGNvbnNvbGUhPT1cInVuZGVmaW5lZFwiJiZjb25zb2xlLmVycm9yKXtjb25zb2xlLmVycm9yKHMscik7fX19O2ouYWFuUGFyYW1zPWouYWFuUGFyYW1zfHx7fTtqLmFhblBhcmFtc1tcImFkLWVuZGNhcC0xXCJdPVwic2l0ZT1hbWF6b24udXM7cHQ9RGV0YWlsO3Nsb3Q9YWQtZW5kY2FwLTE7cGlkPUIwMUdLUUkzOTI7YXJpZD01NDBkNDFjMmI0YzA0MDVlOWRiYjVlZThkNjg0OWM2MlwiO2pbXCJhZC1lbmRjYXAtMVwiXT17fTtqW1wiYWQtZW5kY2FwLTFcIl0uYWRTdGFydFRpbWU9KG5ldyBEYXRlKCkpLmdldFRpbWUoKTtmdW5jdGlvbiBkKCl7cmV0dXJuIGouaW5uZXJIZWlnaHR8fG0uZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodDt9ZnVuY3Rpb24gZygpe3JldHVybiBqLmlubmVyV2lkdGh8fG0uZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoO31mdW5jdGlvbiBlKHQscixzKXtpZih0PjApe3JldHVybihzPnQpO31lbHNle3JldHVybihyPjApO319dmFyIGY9ZnVuY3Rpb24oKXtyZXR1cm4oRGF0ZS5ub3c/RGF0ZS5ub3coKTpuZXcgRGF0ZSgpLmdldFRpbWUoKSk7fTt0aHJvdHRsZT1mdW5jdGlvbihzLHUseSl7dmFyIHIsdyx6O3ZhciB4PW51bGw7dmFyIHY9MDtpZigheSl7eT17fTt9dmFyIHQ9ZnVuY3Rpb24oKXt2PXkubGVhZGluZz09PWZhbHNlPzA6ZigpO3g9bnVsbDt6PXMuYXBwbHkocix3KTtpZigheCl7cj13PW51bGw7fX07cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIEI9ZigpO2lmKCF2JiZ5LmxlYWRpbmc9PT1mYWxzZSl7dj1CO312YXIgQT11LShCLXYpO3I9dGhpczt3PWFyZ3VtZW50cztpZihBXHUwMDNDPTB8fEE+dSl7aWYoeCl7Y2xlYXJUaW1lb3V0KHgpO3g9bnVsbDt9dj1CO3o9cy5hcHBseShyLHcpO2lmKCF4KXtyPXc9bnVsbDt9fWVsc2V7aWYoIXgmJnkudHJhaWxpbmchPT1mYWxzZSl7eD1zZXRUaW1lb3V0KHQsQSk7fX1yZXR1cm4gejt9O307ZnVuY3Rpb24gbCh1LHcsdixyKXt0cnl7dmFyIHQ9bS5nZXRFbGVtZW50QnlJZCh1KS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtpZihlKHQudG9wLHQuYm90dG9tLGQoKSkmJmUodC5sZWZ0LHQucmlnaHQsZygpKSl7aWYodHlwZW9mIHVldD09XCJmdW5jdGlvblwiKXt1ZXQoXCJiYlwiLFwiYWRwbGFjZW1lbnRzOnZpZXdhYmxlbGF0ZW5jeTpcIit3LHt3YjoxfSk7aWYodil7dWV0KFwiYmJcIixcImFkcGxhY2VtZW50czp2aWV3YWJsZWxhdGVuY3k6XCIrdix7d2I6MX0pO319aWYodHlwZW9mIHVleD09XCJmdW5jdGlvblwiJiZqLnVlJiZ0eXBlb2YgdWUuY291bnQ9PVwiZnVuY3Rpb25cIil7aWYoai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tyXS5sb2FkZWQpe3VleChcImxkXCIsXCJhZHBsYWNlbWVudHM6dmlld2FibGVsYXRlbmN5OlwiK3cse3diOjF9KTtpZih2KXt1ZXgoXCJsZFwiLFwiYWRwbGFjZW1lbnRzOnZpZXdhYmxlbGF0ZW5jeTpcIit2LHt3YjoxfSk7fXVlLmNvdW50KFwiYWRwbGFjZW1lbnRzOmh0bWx2aWV3ZWQ6bG9hZGVkOlwiK3csMSk7aWYodil7dWUuY291bnQoXCJhZHBsYWNlbWVudHM6aHRtbHZpZXdlZDpsb2FkZWQ6XCIrdiwxKTt9fXVlLmNvdW50KFwiYWRwbGFjZW1lbnRzOmh0bWx2aWV3ZWQ6XCIrdywxKTtpZih2KXt1ZS5jb3VudChcImFkcGxhY2VtZW50czpodG1sdmlld2VkOlwiK3YsMSk7fX1qLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW3JdLnZpZXdlZD10cnVlO2lmKGouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbcl0udHJhY2tlcil7YyhcInNjcm9sbFwiLGouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbcl0udHJhY2tlcik7YyhcInJlc2l6ZVwiLGouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbcl0udHJhY2tlcik7fX19Y2F0Y2gocyl7ai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tyXS52YWxpZD1mYWxzZTt9fXRyeXtqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzPWouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnN8fHt9O3ZhciBxPVwiYXBlX0RldGFpbF9hZC1lbmRjYXAtMV9HbGFuY2VfcGxhY2VtZW50XCI7dmFyIHA9XCJEZXRhaWxfYWQtZW5kY2FwLTFfR2xhbmNlXCIucmVwbGFjZSgvXFxfL2csXCI6XCIpO3ZhciBoPVwiNmU4ODQ5ZjctNjRjMy00NWU1LWE3MzItZDRlZjhjMDYyNDZiXCI7dmFyIGk9XCI1NDBkNDFjMmI0YzA0MDVlOWRiYjVlZThkNjg0OWM2MlwiO2ouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbaV09ai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tpXXx8e307ai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tpXS52YWxpZD10cnVlO2wocSxwLGgsaSk7aWYoai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tpXS52YWxpZCYmIWouYXBlVmlld2FibGVMYXRlbmN5VHJhY2tlcnNbaV0udmlld2VkKXtqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW2ldLnRyYWNrZXI9dGhyb3R0bGUoZnVuY3Rpb24oKXtsKHEscCxoLGkpO30sMjApO2EoXCJzY3JvbGxcIixqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW2ldLnRyYWNrZXIpO2EoXCJyZXNpemVcIixqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW2ldLnRyYWNrZXIpO319Y2F0Y2goayl7aWYoai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2VycyYmai5hcGVWaWV3YWJsZUxhdGVuY3lUcmFja2Vyc1tcIjU0MGQ0MWMyYjRjMDQwNWU5ZGJiNWVlOGQ2ODQ5YzYyXCJdKXtqLmFwZVZpZXdhYmxlTGF0ZW5jeVRyYWNrZXJzW1wiNTQwZDQxYzJiNGMwNDA1ZTlkYmI1ZWU4ZDY4NDljNjJcIl0udmFsaWQ9ZmFsc2U7fW8oXCJFcnJvciBpbml0aWFsaXppbmcgdmlld2FibGUgbGF0ZW5jeSBpbnN0cnVtZW50YXRpb25cIixrKTt9dHJ5e2lmKGouREFzZil7ai5EQXNmLmxvYWRBZHMoKTt9ZWxzZXt2YXIgbj1tLmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7bi50eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI7bi5hc3luYz10cnVlO24uY2hhcnNldD1cInV0Zi04XCI7bi5zcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvYXBlL3NmL2Rlc2t0b3AvREFzZi0xLjUwLjIyOGY5OGMuX1Y0NTE5NTA5MTBfLmpzP2NzbV9hdHRyaWJ1dGlvbj1BUEUtU2FmZUZyYW1lXCI7bi5vbmVycm9yPWZ1bmN0aW9uKCl7byhcIkVycm9yIGxvYWRpbmcgU2FmZUZyYW1lIGxpYnJhcnlcIik7fTtuLnNldEF0dHJpYnV0ZShcImNyb3Nzb3JpZ2luXCIsXCJhbm9ueW1vdXNcIik7KG0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJoZWFkXCIpWzBdfHxtLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiYm9keVwiKVswXSkuYXBwZW5kQ2hpbGQobik7fX1jYXRjaChrKXtvKFwiRXJyb3IgYXBwZW5kaW5nIERBc2YgbGlicmFyeVwiLGspO319KHdpbmRvdyxkb2N1bWVudCkpO30pKCk7fTtiKCk7fSkoKTtcdTAwM0Mvc2NyaXB0PlxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICBcblxuICAgICAgICAgICAgXG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cImEtc2VjdGlvblwiPlxuICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPVwiYS10ZXh0LWJvbGRcIj5QYWdlcyB3aXRoIHJlbGF0ZWQgcHJvZHVjdHMuXHUwMDNDL3NwYW4+XG4gICAgICAgIFx1MDAzQ3NwYW4+U2VlIGFuZCBkaXNjb3ZlciBvdGhlciBpdGVtczogXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiBocmVmPVwiL3NscC9lYXJyaW5nLXJvc2UtZ29sZC9memNkNGRlMmJxcG84emYvMTQ1LTg5NzUzOTAtNTA2NDExMz9fZW5jb2Rpbmc9VVRGOCZhbXA7cmVmXz1mc19ibHdfZF9jbHBfMVwiPmVhcnJpbmcgcm9zZSBnb2xkXHUwMDNDL2E+LCBcdTAwM0NhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIGhyZWY9XCIvc2xwL3Jvc2UtZ29sZC1kaWFtb25kLWVhcnJpbmdzL3FyZWs3aHl6ZnV1ZzQ0ZS8xNDUtODk3NTM5MC01MDY0MTEzP19lbmNvZGluZz1VVEY4JmFtcDtyZWZfPWZzX2Jsd19kX2NscF8yXCI+cm9zZSBnb2xkIGRpYW1vbmQgZWFycmluZ3NcdTAwM0MvYT4sIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9zbHAvcm9zZS1nb2xkLWRyb3AtZWFycmluZ3MvemJhajV0ODNrcXU5Nmg4LzE0NS04OTc1MzkwLTUwNjQxMTM/X2VuY29kaW5nPVVURjgmYW1wO3JlZl89ZnNfYmx3X2RfY2xwXzNcIj5yb3NlIGdvbGQgZHJvcCBlYXJyaW5nc1x1MDAzQy9hPiwgXHUwMDNDYSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiBocmVmPVwiL3NscC9yb3NlLWdvbGQtZWFycmluZ3Mvdnh5OHFjdnNqY3FoOWUzLzE0NS04OTc1MzkwLTUwNjQxMTM/X2VuY29kaW5nPVVURjgmYW1wO3JlZl89ZnNfYmx3X2RfY2xwXzRcIj5yb3NlIGdvbGQgZWFycmluZ3NcdTAwM0MvYT4sIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9zbHAvcm9zZS1nb2xkLXdlZGRpbmctZHJlc3Nlcy9ybzJmNnlxYTRjZW03amgvMTQ1LTg5NzUzOTAtNTA2NDExMz9fZW5jb2Rpbmc9VVRGOCZhbXA7cmVmXz1mc19ibHdfZF9jbHBfNVwiPnJvc2UgZ29sZCB3ZWRkaW5nIGRyZXNzZXNcdTAwM0MvYT4sIFx1MDAzQ2EgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9zbHAvZ29sZC1hbmQtc2lsdmVyLWVhcnJpbmdzLzdxNm03N2Y1NnFqdzZzNi8xNDUtODk3NTM5MC01MDY0MTEzP19lbmNvZGluZz1VVEY4JmFtcDtyZWZfPWZzX2Jsd19kX2NscF82XCI+Z29sZCBhbmQgc2lsdmVyIGVhcnJpbmdzXHUwMDNDL2E+XHUwMDNDL3NwYW4+XG4gICAgICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cbiAgICAgICAgICAgIFxuICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cbiAgICAvLyBPbmx5IGV4ZWN1dGUgaWYgcGVyZm9ybWFuY2Ugb2JqZWN0IGlzIGRlZmluZWQgaW4gSlNcbiAgICBpZih0eXBlb2YgcGVyZm9ybWFuY2UhPSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBwZXJmb3JtYW5jZS5nZXRFbnRyaWVzICE9IFwidW5kZWZpbmVkXCIpIHtcblxuXG5cblxuXG4gICAgICAgIHZhciBtZXRhQXNzZXROYW1lcyA9IFtdO1xuICAgICAgICBtZXRhQXNzZXROYW1lcy5wdXNoKFwiRGV0YWlsUGFnZURlc2t0b3BJbWFnZUJsb2NrTWV0YUFzc2V0XCIpO1xuICAgICAgICBtZXRhQXNzZXROYW1lcy5wdXNoKFwiVVNTb2Z0bGluZXNEZXRhaWxQYWdlTWV0YUFzc2V0X1RVUkJPX0RFU0tUT1BcIik7XG4gICAgICAgIG1ldGFBc3NldE5hbWVzLnB1c2goXCJEZXRhaWxQYWdlTWlyYWlBc3NldHNcIik7XG4gICAgICAgIG1ldGFBc3NldE5hbWVzLnB1c2goXCJEZXRhaWxQYWdlQWxsT2ZmZXJzRGlzcGxheUFzc2V0c1wiKTtcbiAgICAgICAgaWYobWV0YUFzc2V0TmFtZXMubGVuZ3RoID4gMCkgIHtcbiAgICAgICAgICAgIGZvcihhc3NldEluZGV4ID0gMDsgYXNzZXRJbmRleCBcdTAwM0MgbWV0YUFzc2V0TmFtZXMubGVuZ3RoOyBhc3NldEluZGV4ICsrKSB7XG5cdCAgICAgdmFyIG1ldGFBc3NldE5hbWUgPSBtZXRhQXNzZXROYW1lc1thc3NldEluZGV4XTtcbiAgICAgICAgICAgICB2YXIgcmUgPSBuZXcgUmVnRXhwKFwiXFxcXC5jc3NcXFxcP0FVSUNsaWVudHMvXCIgKyBtZXRhQXNzZXROYW1lKTsgXG4gICAgICAgICAgICAgZm9yKGkgPSAwOyBpIFx1MDAzQyBwZXJmb3JtYW5jZS5nZXRFbnRyaWVzKCkubGVuZ3RoOyBpKyspIHtcdCAgIFx0XG4gICAgICAgICAgICAgICAgdmFyIGRwRW50cnkgPSBwZXJmb3JtYW5jZS5nZXRFbnRyaWVzKClbaV07XG5cdFx0dmFyIHJlcyA9IGRwRW50cnkubmFtZS5tYXRjaChyZSk7XG4gICAgICAgICAgICAgICAgaWYocmVzICYmIGRwRW50cnkuaW5pdGlhdG9yVHlwZSAgJiYgZHBFbnRyeS5pbml0aWF0b3JUeXBlID09IFwibGlua1wiKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkcG1hRHVyYXRpb24gPSBkcEVudHJ5LmR1cmF0aW9uO1xuICAgICAgICAgICAgICAgICAgICB1ZS5jb3VudChtZXRhQXNzZXROYW1lICtcIi5kdXJhdGlvblwiLCBkcG1hRHVyYXRpb24pO1xuICAgICAgICAgICAgICAgICAgICBpZihkcG1hRHVyYXRpb24gXHUwMDNDIDUwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1ZS50YWcobWV0YUFzc2V0TmFtZSArIFwiQ2FjaGVkXCIpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdWUudGFnKG1ldGFBc3NldE5hbWUgKyBcIk5vdENhY2hlZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB1ZS5jb3VudChtZXRhQXNzZXROYW1lICsgXCIuc3RhcnRUaW1lXCIsIGRwRW50cnkuc3RhcnRUaW1lKTtcbiAgICAgICAgICAgICAgICB9XG5cdCAgICAgIH1cblx0ICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB1ZS5jb3VudChcIkRQTUFOb01ldGFBc3NldFwiLCAxKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvcihpID0gMCA7IGkgXHUwMDNDIHBlcmZvcm1hbmNlLmdldEVudHJpZXMoKS5sZW5ndGggOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBuYW1lID0gcGVyZm9ybWFuY2UuZ2V0RW50cmllcygpW2ldLm5hbWUgO1xuICAgICAgICAgICAgdmFyIHJlcyA9IG5hbWUubWF0Y2goL1xcLmNzc1xcP0FVSUNsaWVudHNcXC9BbWF6b25VSS8pO1xuXHQgICAgdmFyIGluaXRpYXRvclR5cGUgPSBwZXJmb3JtYW5jZS5nZXRFbnRyaWVzKClbaV0uaW5pdGlhdG9yVHlwZTtcbiAgICAgICAgICAgIGlmKHJlcyAmJiBpbml0aWF0b3JUeXBlICYmIGluaXRpYXRvclR5cGUgPT0gXCJsaW5rXCIpIHtcbiAgICAgICAgICAgICAgICB2YXIgZHVyYXRpb24gPSBwZXJmb3JtYW5jZS5nZXRFbnRyaWVzKClbaV0uZHVyYXRpb24gO1xuICAgICAgICAgICAgICAgIHVlLmNvdW50KFwiYXVpLmR1cmF0aW9uXCIsIGR1cmF0aW9uKTtcbiAgICAgICAgICAgICAgICB1ZS5jb3VudChcImF1aS5zdGFydFRpbWVcIiwgcGVyZm9ybWFuY2UuZ2V0RW50cmllcygpW2ldLnN0YXJ0VGltZSk7XG4gICAgICAgICAgICAgICAgaWYoZHVyYXRpb24gXHUwMDNDIDUwKSB7XG4gICAgICAgICAgICAgICAgICAgIGNzbVRhZyA9IFwiYXVpQ2FjaGVkXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjc21UYWcgPSBcImF1aU5vdENhY2hlZFwiO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmKHdpbmRvdy51ZSAmJiB1ZS50YWcpIHtcbiAgICAgICAgICAgICAgICAgICAgdWUudGFnKGNzbVRhZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXHUwMDNDL3NjcmlwdD5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0NzY3JpcHQ+XG4od2luZG93LkFtYXpvblVJUGFnZUpTID8gQW1hem9uVUlQYWdlSlMgOiBQKS53aGVuKCdBJykuZXhlY3V0ZShmdW5jdGlvbihBKXtcbiAgaWYoQS5wcmVsb2FkKXtcbiAgICBBLnByZWxvYWQoJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MTRpaHhRRFdwTC5fUkN8MTEtQlpFSjhsbkwuanMsNjFHUTlJZEs3SEwuanMsMjFPZjAtOUhQQ0wuanMsMDEyRlZjMzEzMUwuanMsMTE5S0FXbEhVNkwuanMsNTF4TDJRTHY0WUwuanMsMTFBSGxRaFBSakwuanMsMDE2aUhncEY3NEwuanMsMTFhTllGRlM1aEwuanMsMTE2dGd3OVRTYUwuanMsMjExLXA0R1JVQ0wuanMsMDFQb0xYQkRYV0wuanMsNjFUcWdzdDE4dEwuanMsMTFCT2d2bm5udEwuanMsMzFVV3VQZ3RUdEwuanMsMDFycGF1VGVwNEwuanMsMDFpeXh1U0dqNEwuanMsMDFvR29FVUYxUEwuanNfLmpzP0FVSUNsaWVudHMvQW1hem9uVUkjMTkyMzM4LVQxLjIwMjA1MS1UMScpO1xuICAgIEEucHJlbG9hZCgnaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzUxN3JwMk5IMlVMLl9SQ3w1MTZmY09VRS1ITC5jc3MsMDFldmRvaWVta0wuY3NzLDAxSytQczFEZUVMLmNzcywzMXBkSnY5aVN6TC5jc3MsMDF0Z0szNmxwR0wuY3NzLDExVUdDK0dYT1BMLmNzcywyMUxLN2phaWNNTC5jc3MsMTFMNThRcG8wR0wuY3NzLDIxa3lUaTFGYWJMLmNzcywwMVhsOUtpZ3R6TC5jc3MsMDFZaFMzQ3MtaEwuY3NzLDIxR3dFM2NSLXlMLmNzcywwMTlTSFpudDhSTC5jc3MsMDF3QVdRUmdYekwuY3NzLDIxYldjUkpZTklMLmNzcywxMVdnUnhVZEpSTC5jc3MsMDFkVTgrU1BsRkwuY3NzLDExb2NyZ0tvRS1MLmNzcywwMVNIalBNTDZ0TC5jc3MsMTExLUQycVJqaUwuY3NzLDAxUXJXdVJyWi1MLmNzcywzMTBJbWI2THFGTC5jc3MsMTFaMWEwRnhTSUwuY3NzLDAxY2JTM1VLMTFMLmNzcywyMW1PTHcrbllZTC5jc3MsMDFMOFktSkZFaEwuY3NzXy5jc3M/QVVJQ2xpZW50cy9BbWF6b25VSSN1cy5ub3QtdHJpZGVudCcpO1xuICAgIEEucHJlbG9hZCgnaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzMxTmI1aFpRaXpMLl9SQ3wxMURieVY3RXFFTC5qcyw0MS01eUNJSkxrTC5qcywzMXNlbFNzTisxTC5qcyw0MTN1OThYT05RTC5qcywzMTZuVloxYytnTC5qcywyMU9ZRUJkOFBWTC5qcywzMThyczRwaUdQTC5qcywwMWpFcXE2STBVTC5qcywwMTg1SVRWME02TC5qcyw0MURmSEdkWFVlTC5qcywyMTdYT3YxV2pWTC5qcywyMTBOakxrLVVvTC5qcywzMUdTb1V4a1RvTC5qcywxMUgrcXVrNWpBTC5qcywyMUZCSmxQZk02TC5qcywwMVRReW8wYm5JTC5qcywxMVNSa1lXY3BQTC5qcyw3MS1Fa3NUNGVhTC5qcyw2MTJOMTJIUWxMTC5qcywzMVVqVEFwR09QTC5qcywwMUxISnQ1UGl5TC5qcywzMUFjLWNRK1pXTC5qcywxMW9HYW9ZZ2JkTC5qcywwMTkzdXlJY2lOTC5qcyw0MUQ0a1J1aXk5TC5qcywzMTRZaWRlWS1VTC5qcywxMXAwbkxmTkNjTC5qcywwMXM5SEVmYnQzTC5qcywxMWlIWnVRYXBLTC5qcyw2MWNYbnE3eWEzTC5qcywxMUFWUlZXVG91TC5qcywxMU1RcUZQRUsrTC5qcyw0MTdNendhREt6TC5qcywxMUc0YzQzT1p2TC5qcywyMUdmbDlWeFhGTC5qcywzMXQ0b2pvQ3lUTC5qcywxMTVlSmVueXVuTC5qcywwMVgyemlnWDRrTC5qcywyMVlXOUxLRjJ6TC5qcywyMW15bUVPTkZ0TC5qcyw2MW5vOUlEdFByTC5qcywyMU9KREFSQmhRTC5qcyw0MXMrT0JQeFRQTC5qcyw1MUo2eGpYV2N0TC5qcywwMUlXVWIyOVE0TC5qcywwMUp6RTMtRGZMTC5qc18uanM/QVVJQ2xpZW50cy9VU0hhcmRsaW5lc0RldGFpbFBhZ2VNZXRhQXNzZXRGaXhlZCNkZXNrdG9wLnVzLjIxMzQ5OC1UMS4xOTU0MDYtQy4yMjc5NDgtVDEuMTgzNTExLVQxLjIyMTMzMC1UMS4xMjMzOTItVDEuMTE0Nzc5LVQxLjEyMDA2Ny1UMS4xNzM5NzEtVDEuMTMxOTAwLVQxLjE4NDY2MC1DLjE2MjkwOS1UMS4xNTUxNzUtVDEuMTA4MzEwLVQxLjE1NjM5MS1UMS4xOTU1ODktVDEuMTA3Njg2LVQxLjE3MjM0Ni1UMS4xMzMwMDMtVDEuMTgxNTYxLVQxLjE4NzU1NS1UMScpO1xuICAgIEEucHJlbG9hZCgnaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzExVUdLNCUyQkdDTkwuX1JDfDExaWtVNk1YMUpMLmNzcywwMWVrSVhUajVrTC5jc3MsMDFLdkNxS01CZ0wuY3NzLDIxY2t1c3FtdTZMLmNzcywyMUJ5dWtGS0c0TC5jc3MsMDE0dHJTS3JPM0wuY3NzLDExeFJ5M2JTa09MLmNzcywwMUhLNWF3ZDhBTC5jc3MsMDFELUItT2VOREwuY3NzLDAxem1ZdGZiZ0RMLmNzcywyMUdPQnhINXpITC5jc3MsMDF0ZjNPWk4rbEwuY3NzLDAxUVVzNUZWWG9MLmNzcywxMU1YZ2hoMWVCTC5jc3MsMDFhT3pZaWRQMEwuY3NzLDQxdk9RYjFrMExMLmNzcywzMU1rUUhWM2dhTC5jc3MsMzE0Z2IyTGtMTUwuY3NzLDAxRnRBdUZScjNMLmNzcywwMXJnUTNqcW83TC5jc3MsMzEtbTQ1bDIzeEwuY3NzLDMxVEp0U21Ca1hMLmNzcywxMVg4SzRBb2xwTC5jc3MsMjFQamZzUDlZdkwuY3NzLDMxbURxSDdsM0FMLmNzcywwMTRaK01iYVJhTC5jc3MsMDFSUkgweUZhNEwuY3NzLDMxS2MyZ1lQaXVMLmNzcywwMVpHUjRQRFNUTC5jc3MsMDFkQ2lkTTJ6dEwuY3NzLDIxOFhWUFdmMllMLmNzcywwMWYzMVZOQ293TC5jc3MsMDFyZ1EzanFvN0wuY3NzLDAxa3d1aVBPS0lMLmNzcyw0MWZLNmZUMXRxTC5jc3MsMDFreW1yTGtHOUwuY3NzXy5jc3M/QVVJQ2xpZW50cy9VU0hhcmRsaW5lc0RldGFpbFBhZ2VNZXRhQXNzZXRGaXhlZCNkZXNrdG9wLnVzLm5vdC10cmlkZW50LjE2NDM5Ni1UMS4xNjQ0MDAtVDEuMTMxOTAwLVQxLjE1NTE3NS1UMS4xNzE1NjktVDEuMTA4MzEwLVQxLjE3MjM0Ni1UMS4xMzMwMDMtVDEuMTgxNTYxLVQxJyk7XG4gICAgQS5wcmVsb2FkKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFWRS1DR0xsd0wuanM/QVVJQ2xpZW50cy9EZXRhaWxQYWdlRGVza3RvcEltYWdlQmxvY2tNZXRhQXNzZXQjMjMwNjU0LVQxLjIxMDkwOS1UMS4xNjk1OTMtVDEnKTtcbiAgICBBLnByZWxvYWQoJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS8yMVBXczJMTElHTC5fUkN8MTE4U2F5N0hJWkwuanMsMjFFMmFJRGo2REwuanMsMzFxVWRveFBFOEwuanMsNDEyM0JUVHRVckwuanMsMzFiRVhuVmdsS0wuanMsMzFHeThFR3l5aUwuanMsNDFUbVVCNWFsLUwuanMsMjFORElzZjBhMUwuanMsMDE1VFJRQzVpK0wuanMsNjFBbXo5Kzk3dEwuanMsMDFsY0g0emNUYUwuanMsMDFPdHZwd2lrUUwuanMsNTE0MUorWDJXaEwuanMsMDFxd29WRWtLbEwuanMsMDFnMmV0YWgwTkwuanMsMjFiK3dyS0phbEwuanMsMjFxT0dxamNNN0wuanMsMTF3VHdsKzUwMEwuanMsNjFWMVl5ZVFJM0wuanMsMTF6b0Fxa2QyVUwuanMsMDFZaXZlbFlXNUwuanMsMDE2UUZXQUFkTUwuanMsNTFRaEp1OTFYRUwuanMsMTFHeCs2UzVPLUwuanMsMzFjeE45WkNXa0wuanMsNDFGWENZZlN5ckwuanMsNDFmN1pZRFBoNkwuanMsMzFaUzVUUVZXREwuanMsNTFaNklwcWNQQ0wuanMsMDFJUW9SWHZwbkwuanMsMDExYlgyY2lKYkwuanMsMjEyMjJCK3JBekwuanMsMDFncDNvcXBiNUwuanMsMzFTVmhVSHoxYkwuanMsMjFuc2ZyamtaYUwuanMsMDF1OENoRldnZEwuanMsMDExa3dnME9UUUwuanMsMDFqTHBIbWI5MkwuanMsMDE0a0NvSUhnSUwuanMsMDFyZDNVWTNaOEwuanMsMDFoa3NlT1hqNkwuanMsMDFTZDRKZ0g5TUwuanMsMDFtYjVzS3dOTUwuanMsMDFkWFNFYm1kdkwuanMsMDFJQy1nQkt5WUwuanMsNTFJVkRWOE1JaUwuanMsMjFyWVVqTWsxNkwuanMsMDFPSTBSenB4ZkwuanNfLmpzP0FVSUNsaWVudHMvVVNIYXJkbGluZXNEZXRhaWxQYWdlTWV0YUFzc2V0VmFyaWFibGVfVFVSQk9fREVTS1RPUCNkZXNrdG9wLnVzLjE2NzE2Mi1UMS4yMTU0ODUtVDEuMjEwNTQ3LVQxLjIxMjU0OS1UMS4xNTM2NjItVDEuMTAzMDYxLVQxLjE1MDE1MC1UMS4yMDA2MTYtVDEuMTg0ODg4LVQxLjE2MjkwOS1UMS4yMTIyMTMtVDEuMjEzMDY2LVQxLjIwNzgyNi1UMS4xOTA0NjUtVDEuMTkwMTIzLVQxLjE0NDIwMS1UMS4yMjEwMDktVDEuMTY5MDUzLVQyLjE4NDM2MS1UMS4xMjYzMzEtVDEuMTg4MjEzLVQxLjE3OTc4OS1UMS4xMDkzNzgtVDEuMTQ3OTU3LVQxLjE1NDAzMS1UMy4xOTg4OTgtQy4yMDA5NjMtVDEuMjI0NzIyLVQxLjE2OTU5My1UMS4xNDIwODgtQy4xODc1MzEtVDEuMTg3NTU1LVQxJyk7XG4gICAgQS5wcmVsb2FkKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjF5JTJCYTRudkdXTC5fUkN8MjEwTGJpS3lDTUwuY3NzLDMxajZCT1BqbXpMLmNzcywwMXpXeE05VmgwTC5jc3MsNDFPd3hHRVVWUEwuY3NzLDIxOW9DUkdsLXNMLmNzcywyMTJoUzlrMC1pTC5jc3MsMTFoOHk4MjZDMUwuY3NzLDMxZFRLMWhIYjZMLmNzcywyMVc1ZmlTajA2TC5jc3MsMzFXZzBhaTA5NUwuY3NzLDExWjdTK2xLNDdMLmNzcywwMU5XOFZUVWVWTC5jc3MsMDExdUhnbXhCZkwuY3NzLDIxa20rS05Gc0tMLmNzcywzMWo0bjV2dVk3TC5jc3MsMTFWUWZYWk9ZV0wuY3NzLDIxdTMrNnRmMHlMLmNzcywyMVdmNTN4WjVqTC5jc3MsMDFPaEExNk5EMUwuY3NzLDAxVTIyVEs3a3hMLmNzcywzMTJ2VytFS2l1TC5jc3MsMDFCd2NQZ09OK0wuY3NzLDQxaE9GUlJNdUhMLmNzcywwMVl3U08rQ2IzTC5jc3MsMjE3aEtGVGVuRUwuY3NzLDExcEJXQ2JRWjZMLmNzcywzMXQwdUluc2g3TC5jc3MsMDFxd0VXTnV4dUwuY3NzLDIxcXhEbWhaVjNMLmNzcywxMVhYZ3V5ampaTC5jc3MsMzFMUERsdWUyakwuY3NzLDAxLXRjQTJ2azBMLmNzcywwMU9IQTJQLVZKTC5jc3MsMDFBVDNPMEM2Y0wuY3NzLDAxYW4tVjlGazlMLmNzcywwMWdvSUlQb1Z4TC5jc3NfLmNzcz9BVUlDbGllbnRzL1VTSGFyZGxpbmVzRGV0YWlsUGFnZU1ldGFBc3NldFZhcmlhYmxlX1RVUkJPX0RFU0tUT1AjZGVza3RvcC51cy4yMTAwMTktVDEuMTIyOTUyLVQxLjExMzc4OC1DLjExOTU5Ny1UMS4yMTA1NDctVDEuMjAwMDA5LVQxLjEwMzA2MS1UMS4xNzI0MDItVDEuMTY3MjUxLVQxLjE1MDE1MC1UMS4xMzM0ODAtVDEuMTI5NzM3LUMuMTkwNDY1LVQxLjE0NDIwMS1UMS4xNDA0NzctVDEuMTY5MDUzLVQyLjE4NDM2MS1UMS4xMjYzMzEtVDEuMjI5MjA2LVQxLjIxNTYzMi1UMS4xMDkzNzgtVDEuMTY5NTkzLVQxJyk7XG4gICAgQS5wcmVsb2FkKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvMzFOYjVoWlFpekwuX1JDfDIxUFdzMkxMSUdMLmpzLDExOFNheTdISVpMLmpzLDIxRTJhSURqNkRMLmpzLDQxLTV5Q0lKTGtMLmpzLDAxZzJldGFoME5MLmpzLDMxc2VsU3NOKzFMLmpzLDQxM3U5OFhPTlFMLmpzLDIxT1lFQmQ4UFZMLmpzLDUxLTJqZnVveG9MLmpzLDMxNm5WWjFjK2dMLmpzLDAxQWRZTFk5ckhMLmpzLDAxSU9NQ3NWRkNMLmpzLDAxODVJVFYwTTZMLmpzLDQxRGZIR2RYVWVMLmpzLDIxME5qTGstVW9MLmpzLDMxR1NvVXhrVG9MLmpzLDAxVFF5bzBibklMLmpzLDExU1JrWVdjcFBMLmpzLDcxLUVrc1Q0ZWFMLmpzLDAxT3JRNUFYcXNMLmpzLDMxVWpUQXBHT1BMLmpzLDAxTEhKdDVQaXlMLmpzLDMxQWMtY1ErWldMLmpzLDExb0dhb1lnYmRMLmpzLDAxSG1jYkZzbkZMLmpzLDMxc0crTTVRTjVMLmpzLDExQVZSVldUb3VMLmpzLDExTVFxRlBFSytMLmpzLDExRzRjNDNPWnZMLmpzLDExREdjclpzVXdMLmpzLDAxWDJ6aWdYNGtMLmpzLDAxT3R2cHdpa1FMLmpzLDMxcVVkb3hQRThMLmpzLDIxcU9HcWpjTTdMLmpzLDAxWkYrb3ZOZmxMLmpzLDMxWmwtQldFMTBMLmpzLDYxVjFZeWVRSTNMLmpzLDIxWVc5TEtGMnpMLmpzLDIxbXltRU9ORnRMLmpzLDYxbm85SUR0UHJMLmpzLDIxT0pEQVJCaFFMLmpzLDQxcytPQlB4VFBMLmpzLDUxSjZ4alhXY3RMLmpzLDAxSVdVYjI5UTRMLmpzLDExem9BcWtkMlVMLmpzLDAxSnpFMy1EZkxMLmpzLDAxWWl2ZWxZVzVMLmpzLDAxNlFGV0FBZE1MLmpzLDQxZjdaWURQaDZMLmpzLDAxMWJYMmNpSmJMLmpzLDIxMjIyQityQXpMLmpzLDAxZ3Azb3FwYjVMLmpzLDMxU1ZoVUh6MWJMLmpzLDIxbnNmcmprWmFMLmpzLDAxdThDaEZXZ2RMLmpzLDAxTktHYVcwdzVMLmpzLDAxckVtZExMcHhMLmpzLDMxYkVYblZnbEtMLmpzLDAxcmQzVVkzWjhMLmpzLDAxaGtzZU9YajZMLmpzLDAxbWI1c0t3Tk1MLmpzLDAxU2Q0SmdIOU1MLmpzLDMxWlM1VFFWV0RMLmpzLDUxWjZJcHFjUENMLmpzLDAxSUMtZ0JLeVlMLmpzLDUxSVZEVjhNSWlMLmpzLDIxcllVak1rMTZMLmpzLDAxT0kwUnpweGZMLmpzXy5qcz9BVUlDbGllbnRzL1VTU29mdGxpbmVzRGV0YWlsUGFnZU1ldGFBc3NldF9UVVJCT19ERVNLVE9QI2Rlc2t0b3AudXMuMjEzNDk4LVQxLjE2NzE2Mi1UMS4yMTU0ODUtVDEuMjEwNTQ3LVQxLjE5NTQwNi1DLjIyNzk0OC1UMS4xODM1MTEtVDEuMTUzNjYyLVQxLjEwMzA2MS1UMS4yMjEzMzAtVDEuMTIzMzkyLVQxLjIzMjAwMi1UMS4yMDA2MTYtVDEuMTczOTcxLVQxLjE4NDg4OC1UMS4xMzE5MDAtVDEuMTg0NjYwLUMuMTYyOTA5LVQxLjE1NTE3NS1UMS4yMTIyMTMtVDEuMjEzMDY2LVQxLjIwNzgyNi1UMS4xNDQyMDEtVDEuMjIxMDA5LVQxLjEyNjMzMS1UMS4xNTYzOTEtVDEuMTg4MjEzLVQxLjE3OTc4OS1UMS4xMDkzNzgtVDEuMTQ3OTU3LVQxLjE1NDAzMS1UMy4xOTg4OTgtQy4yMDA5NjMtVDEuMjI0NzIyLVQxLjE2OTU5My1UMS4xODE1NjEtVDEuMTg3NTU1LVQxJyk7XG4gICAgQS5wcmVsb2FkKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDE2a1FJa0JkLUwuX1JDfDQxdWZxRTN6VFJMLmNzcywxMVVHSzQrR0NOTC5jc3MsMjEwTGJpS3lDTUwuY3NzLDMxajZCT1BqbXpMLmNzcywwMWVrSVhUajVrTC5jc3MsMDFLdkNxS01CZ0wuY3NzLDIxY2t1c3FtdTZMLmNzcywwMTR0clNLck8zTC5jc3MsNDE5Qjh4a0lwZEwuY3NzLDIxQnl1a0ZLRzRMLmNzcywwMWYwR3RqNmE5TC5jc3MsMDFISzVhd2Q4QUwuY3NzLDAxRC1CLU9lTkRMLmNzcywyMUdPQnhINXpITC5jc3MsMDF0ZjNPWk4rbEwuY3NzLDAxYU96WWlkUDBMLmNzcywzMU1rUUhWM2dhTC5jc3MsMzE0Z2IyTGtMTUwuY3NzLDAxRnRBdUZScjNMLmNzcywwMVFMd2s4bXU2TC5jc3MsMDE0WitNYmFSYUwuY3NzLDAxUlJIMHlGYTRMLmNzcywwMVpHUjRQRFNUTC5jc3MsMDE4bUdPUko3dEwuY3NzLDAxTlc4VlRVZVZMLmNzcywwMXJnUTNqcW83TC5jc3MsMDF6V3hNOVZoMEwuY3NzLDAxMXVIZ214QmZMLmNzcywxMVZRZlhaT1lXTC5jc3MsMDFNTHpjb3RmbEwuY3NzLDIxdTMrNnRmMHlMLmNzcywwMWt3dWlQT0tJTC5jc3MsNDFmSzZmVDF0cUwuY3NzLDAxa3ltckxrRzlMLmNzcywyMVdmNTN4WjVqTC5jc3MsMDFPaEExNk5EMUwuY3NzLDExcEJXQ2JRWjZMLmNzcywwMXF3RVdOdXh1TC5jc3MsMjFxeERtaFpWM0wuY3NzLDExWFhndXlqalpMLmNzcywzMUxQRGx1ZTJqTC5jc3MsMDEtdGNBMnZrMEwuY3NzLDAxT0hBMlAtVkpMLmNzcywyMTlvQ1JHbC1zTC5jc3MsMDFBVDNPMEM2Y0wuY3NzLDMxdDB1SW5zaDdMLmNzcywwMWdvSUlQb1Z4TC5jc3NfLmNzcz9BVUlDbGllbnRzL1VTU29mdGxpbmVzRGV0YWlsUGFnZU1ldGFBc3NldF9UVVJCT19ERVNLVE9QI2Rlc2t0b3AudXMuMTIyOTUyLVQxLjExMzc4OC1DLjExOTU5Ny1UMS4yMTA1NDctVDEuMjAwMDA5LVQxLjEwMzA2MS1UMS4xNzI0MDItVDEuMjMyMDAyLVQxLjEzMTkwMC1UMS4xNTUxNzUtVDEuMTQ0MjAxLVQxLjE0MDQ3Ny1UMS4xMjYzMzEtVDEuMjE1NjMyLVQxLjEwOTM3OC1UMS4xNjk1OTMtVDEuMTgxNTYxLVQxJyk7XG4gICAgQS5wcmVsb2FkKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvMzFjeE45WkNXa0wuanM/QVVJQ2xpZW50cy9EZXRhaWxQYWdlTWlyYWlBc3NldHMjMTUwMTUwLVQxJyk7XG4gICAgQS5wcmVsb2FkKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFoT0ZSUk11SEwuY3NzP0FVSUNsaWVudHMvRGV0YWlsUGFnZU1pcmFpQXNzZXRzIzE1MDE1MC1UMS4yMjkyMDYtVDEnKTtcbiAgICBBLnByZWxvYWQoJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS8zMU5iNWhaUWl6TC5fUkN8MjFFMmFJRGo2REwuanMsNDEtNXlDSUpMa0wuanMsMDFnMmV0YWgwTkwuanMsMDE4NUlUVjBNNkwuanMsNDFEZkhHZFhVZUwuanMsMzFzZWxTc04rMUwuanMsNDEzdTk4WE9OUUwuanMsMjFQV3MyTExJR0wuanMsMTE4U2F5N0hJWkwuanMsMjFGQkpsUGZNNkwuanMsMDFUUXlvMGJuSUwuanMsMTFTUmtZV2NwUEwuanMsMDFuQ0dNNHUrcUwuanMsNzEtRWtzVDRlYUwuanMsMzFValRBcEdPUEwuanMsMDFMSEp0NVBpeUwuanMsMzFBYy1jUStaV0wuanMsMTFvR2FvWWdiZEwuanMsMTFNUXFGUEVLK0wuanMsMDFYMnppZ1g0a0wuanMsMjFKdFQwbUpYRUwuanMsMzF2TUZVZzM3NkwuanMsMDFPdHZwd2lrUUwuanMsMzFxVWRveFBFOEwuanMsMjE3WE92MVdqVkwuanMsMzFiRVhuVmdsS0wuanMsMzFHeThFR3l5aUwuanMsMTFwMG5MZk5DY0wuanMsMTFpSFp1UWFwS0wuanMsMjFxT0dxamNNN0wuanMsMDFHaEtiMnVzTkwuanMsNjFWMVl5ZVFJM0wuanMsMjFZVzlMS0YyekwuanMsMjFteW1FT05GdEwuanMsNjFubzlJRHRQckwuanMsMjFPSkRBUkJoUUwuanMsNDFzK09CUHhUUEwuanMsNTFKNnhqWFdjdEwuanMsMDFJV1ViMjlRNEwuanMsMTF6b0Fxa2QyVUwuanMsMDFWRVhDeHorYUwuanMsMDFKekUzLURmTEwuanMsMDE2UUZXQUFkTUwuanMsNDFmN1pZRFBoNkwuanMsMDFyZDNVWTNaOEwuanMsMDFoa3NlT1hqNkwuanMsMDFTZDRKZ0g5TUwuanMsMzFaUzVUUVZXREwuanMsNTFaNklwcWNQQ0wuanMsMDFJQy1nQkt5WUwuanMsNTFJVkRWOE1JaUwuanMsMjFyWVVqTWsxNkwuanMsMDFPSTBSenB4ZkwuanNfLmpzP0FVSUNsaWVudHMvVVNNZWRpYURldGFpbFBhZ2VNZXRhQXNzZXRfVFVSQk9fREVTS1RPUCNkZXNrdG9wLnVzLjIxMzQ5OC1UMS4xNjcxNjItVDEuMjE1NDg1LVQxLjIxMDU0Ny1UMS4xOTU0MDYtQy4yMjc5NDgtVDEuMTgzNTExLVQxLjE1MzY2Mi1UMS4xMDMwNjEtVDEuMTIzMzkyLVQxLjIwMDYxNi1UMS4xNzM5NzEtVDEuMTg0ODg4LVQxLjEzMTkwMC1UMS4xODQ2NjAtQy4xNjI5MDktVDEuMjEyMjEzLVQxLjIxMzA2Ni1UMS4yMDc4MjYtVDEuMTU2MzkxLVQxLjE4ODIxMy1UMS4xNzk3ODktVDEuMTA5Mzc4LVQxLjE0Nzk1Ny1UMS4xNTQwMzEtVDMuMTk4ODk4LUMuMjAwOTYzLVQxLjIyNDcyMi1UMS4xNjk1OTMtVDEuMTMzMDAzLVQxJyk7XG4gICAgQS5wcmVsb2FkKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTF6YTFzOHFFaUwuX1JDfDExVUdLNCtHQ05MLmNzcywzMWo2Qk9Qam16TC5jc3MsMDFla0lYVGo1a0wuY3NzLDAxSEs1YXdkOEFMLmNzcywwMUQtQi1PZU5ETC5jc3MsMDFLdkNxS01CZ0wuY3NzLDIxY2t1c3FtdTZMLmNzcywyMTBMYmlLeUNNTC5jc3MsMTFNWGdoaDFlQkwuY3NzLDAxYU96WWlkUDBMLmNzcywzMU1rUUhWM2dhTC5jc3MsMzE0Z2IyTGtMTUwuY3NzLDAxRnRBdUZScjNMLmNzcywwMVJSSDB5RmE0TC5jc3MsMDFOVzhWVFVlVkwuY3NzLDAxcmdRM2pxbzdMLmNzcywyMWpOaE54SEZCTC5jc3MsMDF6V3hNOVZoMEwuY3NzLDAxMXVIZ214QmZMLmNzcywwMXptWXRmYmdETC5jc3MsMjE5b0NSR2wtc0wuY3NzLDIxMmhTOWswLWlMLmNzcywzMVRKdFNtQmtYTC5jc3MsMjFQamZzUDlZdkwuY3NzLDExVlFmWFpPWVdMLmNzcywwMXdzcDQ2U1FUTC5jc3MsMjF1Mys2dGYweUwuY3NzLDAxa3d1aVBPS0lMLmNzcyw0MWZLNmZUMXRxTC5jc3MsMDFreW1yTGtHOUwuY3NzLDIxV2Y1M3haNWpMLmNzcywwMS04QlVSdlFtTC5jc3MsMTFwQldDYlFaNkwuY3NzLDMxdDB1SW5zaDdMLmNzcywwMWdvSUlQb1Z4TC5jc3NfLmNzcz9BVUlDbGllbnRzL1VTTWVkaWFEZXRhaWxQYWdlTWV0YUFzc2V0X1RVUkJPX0RFU0tUT1AjZGVza3RvcC51cy4xMjI5NTItVDEuMTEzNzg4LUMuMTE5NTk3LVQxLjIxMDU0Ny1UMS4yMDAwMDktVDEuMTAzMDYxLVQxLjEzMTkwMC1UMS4yMTU2MzItVDEuMTA5Mzc4LVQxLjE2OTU5My1UMS4xMzMwMDMtVDEnKTtcbiAgICBBLnByZWxvYWQoJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS81MXJIRnVRQjdmTC5qcz9BVUlDbGllbnRzL0RldGFpbFBhZ2VBbGxPZmZlcnNEaXNwbGF5QXNzZXRzIzIzMDY5Ny1UMScpO1xuICAgIEEucHJlbG9hZCgnaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzIxdzRrWTlzZFNMLmNzcz9BVUlDbGllbnRzL0RldGFpbFBhZ2VBbGxPZmZlcnNEaXNwbGF5QXNzZXRzIzIzMDY5Ny1UMScpO1xuICB9XG59KTtcblx1MDAzQy9zY3JpcHQ+XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG5cbmZ1bmN0aW9uIHByZWZldGNoVFlQQXNzZXRzKCkge1xuICAgIHZhciBpbWFnZUFzc2V0cyA9IG5ldyBBcnJheSgpO1xuICAgIHZhciBqc0Nzc0Fzc2V0cyA9IG5ldyBBcnJheSgpO1xuICAgICAgaW1hZ2VBc3NldHMucHVzaChcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS94LWxvY2FsZS9jb21tb24vYnV5LWJ1dHRvbnMvcmV2aWV3LTEtY2xpY2stb3JkZXIuX0NCMTkyMjUxMjQzXy5naWZcIik7XG4gICAgICBpbWFnZUFzc2V0cy5wdXNoKFwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL3gtbG9jYWxlL2NvbW1vbi9idXR0b25zL2NvbnRpbnVlLXNob3BwaW5nLl9DQjE5MjE5MzUyMl8uZ2lmXCIpO1xuICAgICAgaW1hZ2VBc3NldHMucHVzaChcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS94LWxvY2FsZS9jb21tb24vYnV5LWJ1dHRvbnMvdGhhbmsteW91LWVsYm93Ll9DQjE5MjIzODc4Nl8uZ2lmXCIpO1xuICAgICAgaW1hZ2VBc3NldHMucHVzaChcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS94LWxvY2FsZS9jb21tdW5pdGllcy9zb2NpYWwvc253aWNvbnNfdjIuX0NCMzY5NzY0NTgwXy5wbmdcIik7XG4gICAgICBpbWFnZUFzc2V0cy5wdXNoKFwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2NoZWNrb3V0L2Fzc2V0cy9jYXJyb3QuX0NCMTkyMTk2MTczXy5naWZcIik7XG4gICAgICBpbWFnZUFzc2V0cy5wdXNoKFwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2NoZWNrb3V0L3RoYW5rLXlvdS1wYWdlL2Fzc2V0cy95ZWxsb3ctcm91bmRlZC1jb3JuZXItc3ByaXRlLl9DQjE5MjIzODI4OF8uZ2lmXCIpO1xuICAgICAgaW1hZ2VBc3NldHMucHVzaChcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9jaGVja291dC90aGFuay15b3UtcGFnZS9hc3NldHMvd2hpdGUtcm91bmRlZC1jb3JuZXItc3ByaXRlLl9DQjE5MjI1OTkyOV8uZ2lmXCIpO1xuICAgICAgaW1hZ2VBc3NldHMucHVzaChcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9nbm8vc3ByaXRlcy9uYXYtc3ByaXRlLWdsb2JhbF9ibHVlYmVhY29uLTF4X29wdGltaXplZF9sYXlvdXQxLl9DQjQ2ODY3MDc3NF8ucG5nXCIpO1xuICAgICAgaW1hZ2VBc3NldHMucHVzaChcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS94LWxvY2FsZS9jb21tb24vdHJhbnNwYXJlbnQtcGl4ZWwuX0NCMzg2OTQyNDY0Xy5naWZcIik7XG5cbiAgICAvLyBwcmUtZmV0Y2hpbmcgaW1hZ2UgYXNzZXRzXG4gICAgZm9yICh2YXIgaT0wOyBpXHUwMDNDaW1hZ2VBc3NldHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICBuZXcgSW1hZ2UoKS5zcmMgPSBpbWFnZUFzc2V0c1tpXTtcbiAgICB9XG4gICAgLy8gcHJlLWZldGNoaW5nIGNzcyBhbmQganMgYXNzZXRzIGJhc2VkIG9uIGRpZmZlcmVudCBicm93c2VyIHR5cGVzXG4gICAgdmFyIGlzSUUgPSAvKkBjY19vbiFAKi8wO1xuICAgIHZhciBpc0ZpcmVGb3ggPSAvRmlyZWZveC8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgICBpZiAoaXNJRSkge1xuICAgICAgZm9yICh2YXIgaT0wOyBpXHUwMDNDanNDc3NBc3NldHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbmV3IEltYWdlKCkuc3JjID0ganNDc3NBc3NldHNbaV07XG4gICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzRmlyZUZveCkge1xuICAgICAgZm9yICh2YXIgaT0wOyBpXHUwMDNDanNDc3NBc3NldHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIG8gPSAgZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9iamVjdFwiKTtcbiAgICAgICAgby5kYXRhID0ganNDc3NBc3NldHNbaV07XG4gICAgICAgIG8ud2lkdGggPSBvLmhlaWdodCA9IDA7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobyk7XG4gICAgICB9XG4gICAgfVxufVxuXG4gICAgdmFyIG9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgc2V0VGltZW91dChwcmVmZXRjaFRZUEFzc2V0cywgMjAwMCk7XG4gICAgfTtcbiAgICBpZiAod2luZG93LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsIG9ubG9hZCk7XG4gICAgfSBlbHNlIGlmICh3aW5kb3cuYXR0YWNoRXZlbnQpIHsgLyogZm9yIFx1MDAzQz0gSUUgOCAqL1xuICAgICAgICB3aW5kb3cuYXR0YWNoRXZlbnQoXCJvbmxvYWRcIiwgb25sb2FkKTtcbiAgICB9XG5cdTAwM0Mvc2NyaXB0PlxuXG5cdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cIjFjbGljay10c2RlbHRhXCIgaWQ9XCIxY2xpY2stdHNkZWx0YVwiPlxuXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cbnZhciBvY0luaXRUaW1lc3RhbXAgPSAxNTY5Nzk0MTg5O1xuXHUwMDNDL3NjcmlwdD5cblxuXG5cblxuXG5cblxuICAgIFxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG5cblxuaWYgKCF3aW5kb3cuJFNlYXJjaEpTICYmIHdpbmRvdy4kTmF2KSB7XG4gIHdpbmRvdy4kU2VhcmNoSlMgPSAkTmF2Lm1ha2UoJ3N4Jyk7XG59XG5pZiAod2luZG93LiRTZWFyY2hKUykge1xuXG5cbn1cblxuXG4oZnVuY3Rpb24oKSB7XG4gIHZhciBwcmVjYWNoZU1hdGVyaWFscyA9IFtcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9uYXYyL2ltYWdlcy9ndWkvc2VhcmNoU3ByaXRlLl9DQjI4MDQyOTc4OV8ucG5nXCJdO1xuICAgICAgaWYgKHdpbmRvdy5hbXpuSlEpIHtcbiAgICAgICAgYW16bkpRLmFkZFBMKHByZWNhY2hlTWF0ZXJpYWxzKTtcbiAgICAgIH0gZWxzZSBpZiAod2luZG93LlApIHtcbiAgICAgICAgUC53aGVuKCdBJykuZXhlY3V0ZShmdW5jdGlvbihBKXtcbiAgICAgICAgICBBLnByZWxvYWQocHJlY2FjaGVNYXRlcmlhbHMpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbn0pKCk7XG5cblxuXHUwMDNDL3NjcmlwdD5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgICAgICAgICAgXG5cdTAwM0MhLS0mJiZQb3J0YWwmRGVsaW1pdGVyJiYmLS0+XHUwMDNDIS0tIHNwOmVuZC1mZWF0dXJlOmhvc3QtYXRmIC0tPlxuXHUwMDNDIS0tIHNwOmZlYXR1cmU6bmF2LWJ0ZiAtLT5cblx1MDAzQyEtLSBidGYgcGlsdSAtLT5cblxuXG5cblxuXG5cblx1MDAzQ2RpdiBzdHlsZT1cImRpc3BsYXk6IG5vbmVcIj5cbiAgXHUwMDNDZGl2IGlkPVwibmF2LXByaW1lLW1lbnVcIiBjbGFzcz1cIm5hdi1lbXB0eSBuYXYtZmx5b3V0LWNvbnRlbnQgbmF2LWFqYXgtcHJpbWUtbWVudVwiPlxuICAgIFx1MDAzQ2RpdiBjbGFzcz1cIm5hdl9keW5hbWljXCI+XHUwMDNDL2Rpdj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJuYXYtYWpheC1tZXNzYWdlXCI+XHUwMDNDL2Rpdj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJuYXYtYWpheC1lcnJvci1tc2dcIj5cbiAgICAgIFx1MDAzQ3AgY2xhc3M9XCJuYXZfcCBuYXYtYm9sZFwiPlRoZXJlJ3MgYSBwcm9ibGVtIGxvYWRpbmcgdGhpcyBtZW51IHJpZ2h0IG5vdy5cdTAwM0MvcD5cbiAgICAgIFx1MDAzQ3AgY2xhc3M9XCJuYXZfcFwiPlx1MDAzQ2EgaHJlZj1cIi9ncC9wcmltZS9yZWY9bmF2X3ByaW1lX2FqYXhfZXJyLzE0NS04OTc1MzkwLTUwNjQxMTNcIiBjbGFzcz1cIm5hdl9hXCI+TGVhcm4gbW9yZSBhYm91dCBBbWF6b24gUHJpbWUuXHUwMDNDL2E+XHUwMDNDL3A+XG4gICAgXHUwMDNDL2Rpdj5cbiAgXHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG5cblxuXHUwMDNDc3R5bGU+XG4gICNuYXYtcHJpbWUtdG9vbHRpcHtcbiAgICBwYWRkaW5nOiAwIDIwcHggMnB4IDIwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgZm9udC1mYW1pbHk6IGFyaWFsLHNhbnMtc2VyaWY7XG4gIH1cbiAgLm5hdi1ucHQtdGV4dC10aXRsZXtcbiAgICBmb250LWZhbWlseTogYXJpYWwsc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgbGluZS1oZWlnaHQ6IDIxcHg7XG4gICAgY29sb3I6ICNFNDc5MjM7XG4gIH1cbiAgLm5hdi1ucHQtdGV4dC1kZXRhaWwsIGEubmF2LW5wdC1he1xuICAgIGZvbnQtZmFtaWx5OiBhcmlhbCxzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICBjb2xvcjogIzMzMzMzMztcbiAgICBtYXJnaW46IDJweCAwcHg7XG4gIH1cbiAgYS5uYXYtbnB0LWEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICB9XG5cdTAwM0Mvc3R5bGU+XG5cblxuXHUwMDNDZGl2IHN0eWxlPVwiZGlzcGxheTogbm9uZVwiPlxuICBcdTAwM0NkaXYgaWQ9XCJuYXYtcHJpbWUtdG9vbHRpcFwiPlxuICAgIFx1MDAzQ2RpdiBjbGFzcz1cIm5hdi1ucHQtdGV4dC10aXRsZVwiPiBHZXQgZmFzdCwgZnJlZSBkZWxpdmVyeSB3aXRoIEFtYXpvbiBQcmltZSBcdTAwM0MvZGl2PlxuICAgIFx1MDAzQ2RpdiBjbGFzcz1cIm5hdi1ucHQtdGV4dC1kZXRhaWxcIj4gUHJpbWUgbWVtYmVycyBlbmpveSBGUkVFIFR3by1EYXkgRGVsaXZlcnkgYW5kIGV4Y2x1c2l2ZSBhY2Nlc3MgdG8gbXVzaWMsIG1vdmllcywgVFYgc2hvd3MsIG9yaWdpbmFsIGF1ZGlvIHNlcmllcywgYW5kIEtpbmRsZSBib29rcy4gXHUwMDNDL2Rpdj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJuYXYtbnB0LXRleHQtZGV0YWlsXCI+XG4gICAgICAmZ3Q7XG4gICAgICBcdTAwM0NhIGNsYXNzPVwibmF2LW5wdC1hXCIgaHJlZj1cIi9wcmltZS9yZWY9bmF2X3Rvb2x0aXBfcmVkaXJlY3QvMTQ1LTg5NzUzOTAtNTA2NDExM1wiPkdldCBzdGFydGVkXHUwMDNDL2E+XG4gICAgXHUwMDNDL2Rpdj5cbiAgXHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XG5cblxuXG5cbiAgXG5cblxuXG5cblxuXHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cbiAgd2luZG93LiROYXYgJiYgJE5hdi53aGVuKFwiZGF0YVwiKS5ydW4oZnVuY3Rpb24oZGF0YSkgeyBkYXRhKHtcInlvdXJBY2NvdW50Q29udGVudFwiOntcInRlbXBsYXRlXCI6e1wibmFtZVwiOlwiaXRlbUxpc3RcIixcImRhdGFcIjp7XCJpdGVtc1wiOlt7XCJ0ZXh0XCI6XCJZb3VyIEFjY291bnRcIixcInVybFwiOlwiL2dwL2Nzcy9ob21lcGFnZS5odG1sP2llPVVURjgmcmVmXz1uYXZfeW91cmFjY291bnRfeWFcIn0se1widGV4dFwiOlwiWW91ciBPcmRlcnNcIixcInVybFwiOlwiL2dwL2Nzcy9vcmRlci1oaXN0b3J5P2llPVVURjgmcmVmXz1uYXZfeW91cmFjY291bnRfb3JkZXJzXCIsXCJpZFwiOlwibmF2X3ByZWZldGNoX3lvdXJvcmRlcnNcIn0se1widGV4dFwiOlwiWW91ciBMaXN0c1wiLFwidXJsXCI6XCIvZ3AvcmVnaXN0cnkvd2lzaGxpc3Q/aWU9VVRGOCZyZWZfPW5hdl95b3VyYWNjb3VudF93bCZyZXF1aXJlc1NpZ25Jbj0xXCJ9LHtcInRleHRcIjpcIllvdXIgUmVjb21tZW5kYXRpb25zXCIsXCJ1cmxcIjpcIi9ncC95b3Vyc3RvcmU/aWU9VVRGOCZyZWZfPW5hdl95b3VyYWNjb3VudF9yZWNzXCJ9LHtcInRleHRcIjpcIllvdXIgU3Vic2NyaWJlICYgU2F2ZSBJdGVtc1wiLFwidXJsXCI6XCIvZ3Avc3Vic2NyaWJlLWFuZC1zYXZlL21hbmFnZXIvdmlld3N1YnNjcmlwdGlvbnM/aWU9VVRGOCZyZWZfPW5hdl95b3VyYWNjb3VudF9zbnNcIn0se1widGV4dFwiOlwiTWVtYmVyc2hpcHMgJiBTdWJzY3JpcHRpb25zXCIsXCJ1cmxcIjpcIi95b3VybWVtYmVyc2hpcHNhbmRzdWJzY3JpcHRpb25zP19lbmNvZGluZz1VVEY4JnJlZl89bmF2X3lvdXJhY2NvdW50X2RpZ2l0YWxfc3Vic2NyaXB0aW9uc1wifSx7XCJ0ZXh0XCI6XCJZb3VyIFNlcnZpY2UgUmVxdWVzdHNcIixcInVybFwiOlwiL2xvY2Fsc2VydmljZXMveWEvc2VydmljZXJlcXVlc3RzP19lbmNvZGluZz1VVEY4JnJlZl89bmF2X3lvdXJhY2NvdW50X2Rlc2t0b3BfdmFzX3JlcXVlc3RsaXN0XCJ9LHtcInRleHRcIjpcIllvdXIgR2FyYWdlXCIsXCJ1cmxcIjpcIi9ncC95b3VyLWdhcmFnZS8/aWU9VVRGOCZyZWZfPW5hdl95b3VyYWNjb3VudF9hdV9wZl9hc19HTk9cIn0se1widGV4dFwiOlwiWW91ciBGYW5zaG9wXCIsXCJ1cmxcIjpcIi9mYW5zaG9wP19lbmNvZGluZz1VVEY4JnJlZl89bmF2X3lvdXJhY2NvdW50X3lmc1wifSx7XCJ0ZXh0XCI6XCJZb3VyIFBldHNcIixcInVybFwiOlwiL3lvdXJwZXRzP19lbmNvZGluZz1VVEY4JnJlZl89bmF2X3lvdXJhY2NvdW50X3BldF9wcm9maWxlc1wifSx7XCJ0ZXh0XCI6XCJZb3VyIENvbnRlbnQgYW5kIERldmljZXNcIixcInVybFwiOlwiL21uL2Rjdy9teXguaHRtbD9fZW5jb2Rpbmc9VVRGOCZyZWZfPW5hdl95b3VyYWNjb3VudF9teWtcIn0se1widGV4dFwiOlwiWW91ciBNdXNpYyBMaWJyYXJ5XCIsXCJ1cmxcIjpcIi9ncC9kbXVzaWMvbXAzL3BsYXllcj9pZT1VVEY4JnJlZl89bmF2X3lvdXJhY2NvdW50X2NsZHBseXJcIn0se1widGV4dFwiOlwiWW91ciBBbWF6b24gRHJpdmVcIixcInVybFwiOlwiL2Nsb3VkZHJpdmU/X2VuY29kaW5nPVVURjgmcmVmXz1uYXZfeW91cmFjY291bnRfY2xkZHJ2XCJ9LHtcInRleHRcIjpcIllvdXIgUHJpbWUgVmlkZW9cIixcInVybFwiOlwiL1ByaW1lLUluc3RhbnQtVmlkZW8vcy9icm93c2U/X2VuY29kaW5nPVVURjgmbm9kZT0yNjc2ODgyMDExJnJlZl89bmF2X3lvdXJhY2NvdW50X3BpdlwifSx7XCJ0ZXh0XCI6XCJZb3VyIEtpbmRsZSBVbmxpbWl0ZWRcIixcInVybFwiOlwiL2dwL2tpbmRsZS9rdS9rdV9jZW50cmFsP2llPVVURjgmcmVmXz1uYXZfeW91cmFjY291bnRfa3VcIn0se1widGV4dFwiOlwiWW91ciBXYXRjaGxpc3RcIixcInVybFwiOlwiL2dwL3ZpZGVvL3dhdGNobGlzdD9pZT1VVEY4JnJlZl89bmF2X3lvdXJhY2NvdW50X3l3bFwifSx7XCJ0ZXh0XCI6XCJZb3VyIFZpZGVvIExpYnJhcnlcIixcInVybFwiOlwiL2dwL3ZpZGVvL2xpYnJhcnk/aWU9VVRGOCZyZWZfPW5hdl95b3VyYWNjb3VudF95dmxcIn0se1widGV4dFwiOlwiWW91ciBBbmRyb2lkIEFwcHMgJiBEZXZpY2VzXCIsXCJ1cmxcIjpcIi9ncC9tYXMveW91ci1hY2NvdW50L215YXBwcz9pZT1VVEY4JnJlZl89bmF2X3lvdXJhY2NvdW50X2FhZFwifV19fSxcInVybFwiOlwiL2dwL2Nzcy9ob21lcGFnZS5odG1sP2llPVVURjgmcmVmXz15YVwiLFwic2lnbkluSHRtbFwiOlwiXHUwMDNDZGl2IGlkPSduYXYtZmx5b3V0LXlhLXNpZ25pbicgY2xhc3M9J25hdi1mbHlvdXQtY29udGVudCc+XHUwMDNDYSBocmVmPScvZ3AvbmF2aWdhdGlvbi9yZWRpcmVjdG9yLmh0bWwvcmVmPXNpZ24taW4tcmVkaXJlY3Q/aWU9VVRGOCZhbXA7YXNzb2NpYXRpb25IYW5kbGU9dXNmbGV4JmFtcDtjdXJyZW50UGFnZVVSTD1odHRwcyUzQSUyRiUyRnd3dy5hbWF6b24uY29tJTJGZ3AlMkZ5b3Vyc3RvcmUlMkZob21lJTNGaWUlM0RVVEY4JTI2cmVmXyUzRG5hdl9zaWduaW4mYW1wO3BhZ2VUeXBlPSZhbXA7c3dpdGNoQWNjb3VudD0mYW1wO3lzaFVSTD1odHRwcyUzQSUyRiUyRnd3dy5hbWF6b24uY29tJTJGZ3AlMkZ5b3Vyc3RvcmUlMkZob21lJTNGaWUlM0RVVEY4JTI2cmVmXyUzRG5hdl9zaWduaW4nIHJlbD0nbm9mb2xsb3cnIGNsYXNzPSduYXYtYWN0aW9uLWJ1dHRvbicgZGF0YS1uYXYtcm9sZT0nc2lnbmluJyBkYXRhLW5hdi1yZWY9J25hdl9zaWduaW4nPlx1MDAzQ3NwYW4gY2xhc3M9J25hdi1hY3Rpb24taW5uZXInPlNpZ24gaW5cdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NkaXYgaWQ9J25hdi1mbHlvdXQteWEtbmV3Q3VzdCcgY2xhc3M9J25hdl9wb3BfbmV3X2N1c3QgbmF2LWZseW91dC1jb250ZW50Jz5OZXcgY3VzdG9tZXI/IFx1MDAzQ2EgaHJlZj0naHR0cHM6Ly93d3cuYW1hem9uLmNvbS9hcC9yZWdpc3Rlcj9fZW5jb2Rpbmc9VVRGOCZhbXA7b3BlbmlkLmFzc29jX2hhbmRsZT11c2ZsZXgmYW1wO29wZW5pZC5jbGFpbWVkX2lkPWh0dHAlM0ElMkYlMkZzcGVjcy5vcGVuaWQubmV0JTJGYXV0aCUyRjIuMCUyRmlkZW50aWZpZXJfc2VsZWN0JmFtcDtvcGVuaWQuaWRlbnRpdHk9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wJTJGaWRlbnRpZmllcl9zZWxlY3QmYW1wO29wZW5pZC5tb2RlPWNoZWNraWRfc2V0dXAmYW1wO29wZW5pZC5ucz1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAmYW1wO29wZW5pZC5ucy5wYXBlPWh0dHAlM0ElMkYlMkZzcGVjcy5vcGVuaWQubmV0JTJGZXh0ZW5zaW9ucyUyRnBhcGUlMkYxLjAmYW1wO29wZW5pZC5wYXBlLm1heF9hdXRoX2FnZT0wJmFtcDtvcGVuaWQucmV0dXJuX3RvPWh0dHBzJTNBJTJGJTJGd3d3LmFtYXpvbi5jb20lMkZncCUyRnlvdXJzdG9yZSUyRmhvbWUlM0ZpZSUzRFVURjglMjZyZWZfJTNEbmF2X25ld2N1c3QnIHJlbD0nbm9mb2xsb3cnIGNsYXNzPSduYXYtYSc+U3RhcnQgaGVyZS5cdTAwM0MvYT5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XCJ9LFwid2lzaGxpc3RDb250ZW50XCI6e1widGVtcGxhdGVcIjp7XCJuYW1lXCI6XCJpdGVtTGlzdFwiLFwiZGF0YVwiOntcIml0ZW1zXCI6W3tcInRleHRcIjpcIkNyZWF0ZSBhIExpc3RcIixcInVybFwiOlwiL2dwL3JlZ2lzdHJ5L3dpc2hsaXN0P2llPVVURjgmcmVmXz1uYXZfd2lzaGxpc3RfY3JlYXRlJnRyaWdnZXJFbGVtZW50SUQ9Y3JlYXRlTGlzdFwifSx7XCJ0ZXh0XCI6XCJGaW5kIGEgR2lmdFwiLFwidXJsXCI6XCIvZ2N4L0dpZnRzLWZvci1FdmVyeW9uZS9nZmh6Lz9fZW5jb2Rpbmc9VVRGOCZyZWZfPW5hdl93aXNobGlzdF9nZlwifSx7XCJzdWJ0ZXh0XCI6XCJJbnN0YWxsIEFtYXpvbiBBc3Npc3RhbnRcIixcInRleHRcIjpcIlNhdmUgSXRlbXMgZnJvbSB0aGUgV2ViXCIsXCJ1cmxcIjpcIi9ncC9CSVQ/aWU9VVRGOCZiaXRDYW1wYWlnbkNvZGU9YTAwMzImcmVmXz1uYXZfd2lzaGxpc3RfYml0X3YyX2EwMDMyXCJ9LHtcInRleHRcIjpcIldlZGRpbmcgUmVnaXN0cnlcIixcInVybFwiOlwiL3dlZGRpbmcvaG9tZT9fZW5jb2Rpbmc9VVRGOCZyZWZfPW5hdl93aXNobGlzdF93clwifSx7XCJ0ZXh0XCI6XCJCYWJ5IFJlZ2lzdHJ5XCIsXCJ1cmxcIjpcIi9iYWJ5LXJlZy9ob21lcGFnZT9fZW5jb2Rpbmc9VVRGOCZyZWZfPW5hdl93aXNobGlzdF9iclwifSx7XCJ0ZXh0XCI6XCJGcmllbmRzICYgRmFtaWx5IEdpZnRpbmdcIixcInVybFwiOlwiL2dwL2dpZnQtY2VudHJhbC9vcmdhbml6ZXI/aWU9VVRGOCZyZWZfPW5hdl93aXNobGlzdF9mYWZnaWZ0XCJ9LHtcInRleHRcIjpcIkFtYXpvblNtaWxlIENoYXJpdHkgTGlzdHNcIixcInVybFwiOlwiL2dwL2NscGY/aWU9VVRGOCZyZWZfPW5hdl93aXNobGlzdF9zbWlfc2VfeWFfbGxsX2xsXCJ9LHtcInRleHRcIjpcIlBhbnRyeSBMaXN0c1wiLFwidXJsXCI6XCIvZ3AvcGFudHJ5L3lvdXJsaXN0cz9pZT1VVEY4JnJlZl89bmF2X3dpc2hsaXN0X3BudHJ5X2dub1wifSx7XCJ0ZXh0XCI6XCJZb3VyIEhlYXJ0c1wiLFwidXJsXCI6XCIvaWRlYXMvc2F2ZXM/X2VuY29kaW5nPVVURjgmcmVmXz1uYXZfd2lzaGxpc3Rfc3RybV9pbl95b3V0aXF1ZV9saXN0c1wifSx7XCJ0ZXh0XCI6XCJFeHBsb3JlIElkZWEgTGlzdHNcIixcInVybFwiOlwiL2lkZWFzP19lbmNvZGluZz1VVEY4JnJlZl89bmF2X3dpc2hsaXN0X2lkZWFfbmF2XCJ9LHtcInRleHRcIjpcIkV4cGxvcmUgU2hvd3Jvb21cIixcInVybFwiOlwiL3Nob3dyb29tP19lbmNvZGluZz1VVEY4JnJlZl89bmF2X3dpc2hsaXN0X3NybV95b3VyX2Rlc2tfd2xcIn0se1widGV4dFwiOlwiVGFrZSB0aGUgSG9tZSBTdHlsZSBRdWl6XCIsXCJ1cmxcIjpcIi9zdHlsZXF1aXovP19lbmNvZGluZz1VVEY4JnJlZl89bmF2X3dpc2hsaXN0X3NxX3lhX3lsXCJ9XX19LFwidXJsXCI6XCIvZ3AvcmVnaXN0cnkvd2lzaGxpc3Q/aWU9VVRGOCZyZWZfPWZseW91dF95bF9oZWFkZXJcIixcIndsVHJpZ2dlcnNcIjpcIjU3MDQyOjE2NTcyM1wifSxcImNhcnRDb250ZW50XCI6e1wiaHRtbFwiOlwiXHUwMDNDZGl2IGlkPSduYXYtY2FydC1mbHlvdXQnIGNsYXNzPSduYXYtZW1wdHkgbmF2LWZseW91dC1jb250ZW50JyBkYXRhLW9uZT0ne2NvdW50fSBpdGVtJyBkYXRhLW1hbnk9J3tjb3VudH0gaXRlbXMnPlx1MDAzQ2RpdiBjbGFzcz0nbmF2LWR5bmFtaWMtZnVsbCc+XHUwMDNDZGl2IGlkPSduYXYtY2FydC1zdGFuZGFyZCcgY2xhc3M9J25hdi1jYXJ0LWNvbnRlbnQnPlx1MDAzQ2EgaHJlZj0nL2dwL2NhcnQvdmlldy5odG1sL3JlZj1uYXZfZmx5b3V0X3ZpZXdjYXJ0P2llPVVURjgmYW1wO2hhc1dvcmtpbmdKYXZhc2NyaXB0PTEnIGNsYXNzPSduYXYtY2FydC10aXRsZSc+SXRlbXMgaW4geW91ciBDYXJ0XHUwMDNDL2E+XHUwMDNDZGl2IGNsYXNzPSduYXYtY2FydC1zdWJ0aXRsZSc+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9J25hdi1jYXJ0LWl0ZW1zJz5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGlkPSduYXYtY2FydC1wYW50cnknIGNsYXNzPSduYXYtY2FydC1jb250ZW50JyBkYXRhLWJveD0ne2NvdW50fSBib3gnIGRhdGEtYm94ZXM9J3tjb3VudH0gYm94ZXMnIGRhdGEtYm94LWZpbGxlZD0ne3BjdH0lIGZpbGxlZCcgZGF0YS1ib3hlcy1maWxsZWQ9J3twY3R9JSBmaWxsZWQgaW4gY3VycmVudCBib3gnPlx1MDAzQ2EgaHJlZj0nL2dwL2NhcnQvdmlldy5odG1sL3JlZj1uYXZfZmx5b3V0X3ZpZXdjYXJ0P2llPVVURjgmYW1wO2hhc1dvcmtpbmdKYXZhc2NyaXB0PTEnIGNsYXNzPSduYXYtY2FydC10aXRsZSc+UHJpbWUgUGFudHJ5IEl0ZW1zXHUwMDNDL2E+XHUwMDNDZGl2IGNsYXNzPSduYXYtY2FydC1zdWJ0aXRsZSc+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9J25hdi1jYXJ0LWl0ZW1zJz5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDZGl2IGlkPSduYXYtY2FydC1mcmVzaCcgY2xhc3M9J25hdi1jYXJ0LWNvbnRlbnQnPlx1MDAzQ2EgaHJlZj0nL2dwL2NhcnQvdmlldy5odG1sL3JlZj1uYXZfZmx5b3V0X3ZpZXdjYXJ0P2llPVVURjgmYW1wO2hhc1dvcmtpbmdKYXZhc2NyaXB0PTEnIGNsYXNzPSduYXYtY2FydC10aXRsZSc+XHUwMDNDaW1nIGlkPSduYXYtY2FydC1mcmVzaC1sb2dvJyBzcmM9J2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9nbm8vZWMtbG9nby1mcmVzaC1jb2xvci5fQ0IzMDU3NzA2ODhfLnBuZyc+XHUwMDNDL2E+XHUwMDNDZGl2IGNsYXNzPSduYXYtY2FydC1zdWJ0aXRsZSc+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9J25hdi1jYXJ0LWl0ZW1zJz5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9J25hdi1hamF4LW1lc3NhZ2UnPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPSduYXYtZHluYW1pYy1lbXB0eSc+XHUwMDNDcCBjbGFzcz0nbmF2X3AgbmF2LWJvbGQgbmF2LWNhcnQtZW1wdHknPiBZb3VyIFNob3BwaW5nIENhcnQgaXMgZW1wdHkuXHUwMDNDL3A+XHUwMDNDcCBjbGFzcz0nbmF2X3AgJz4gR2l2ZSBpdCBwdXJwb3NlJm1kYXNoO2ZpbGwgaXQgd2l0aCBib29rcywgRFZEcywgY2xvdGhlcywgZWxlY3Ryb25pY3MsIGFuZCBtb3JlLlx1MDAzQy9wPlx1MDAzQ3AgY2xhc3M9J25hdl9wICc+IElmIHlvdSBhbHJlYWR5IGhhdmUgYW4gYWNjb3VudCwgXHUwMDNDYSBocmVmPScvZ3AvbmF2aWdhdGlvbi9yZWRpcmVjdG9yLmh0bWwvcmVmPXNpZ24taW4tcmVkaXJlY3Q/aWU9VVRGOCZhc3NvY2lhdGlvbkhhbmRsZT11c2ZsZXgmY3VycmVudFBhZ2VVUkw9aHR0cHMlM0ElMkYlMkZ3d3cuYW1hem9uLmNvbSUyRmdwJTJGeW91cnN0b3JlJTJGaG9tZSUzRmllJTNEVVRGOCUyNnJlZl8lM0RuYXZfc2lnbmluX2NhcnQmcGFnZVR5cGU9JnN3aXRjaEFjY291bnQ9JnlzaFVSTD1odHRwcyUzQSUyRiUyRnd3dy5hbWF6b24uY29tJTJGZ3AlMkZ5b3Vyc3RvcmUlMkZob21lJTNGaWUlM0RVVEY4JTI2cmVmXyUzRG5hdl9zaWduaW5fY2FydCcgY2xhc3M9J25hdl9hJz5zaWduIGluXHUwMDNDL2E+Llx1MDAzQy9wPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPSduYXYtYWpheC1lcnJvci1tc2cnPlx1MDAzQ3AgY2xhc3M9J25hdl9wIG5hdi1ib2xkJz4gVGhlcmUncyBhIHByb2JsZW0gcHJldmlld2luZyB5b3VyIGNhcnQgcmlnaHQgbm93Llx1MDAzQy9wPlx1MDAzQ3AgY2xhc3M9J25hdl9wICc+IENoZWNrIHlvdXIgSW50ZXJuZXQgY29ubmVjdGlvbiBhbmQgXHUwMDNDYSBocmVmPScvZ3AvY2FydC92aWV3Lmh0bWwvcmVmPW5hdl9mbHlvdXRfdmlld2NhcnQ/aWU9VVRGOCZoYXNXb3JraW5nSmF2YXNjcmlwdD0xJyBjbGFzcz0nbmF2X2EnPmdvIHRvIHlvdXIgY2FydFx1MDAzQy9hPiwgb3IgXHUwMDNDYSBocmVmPSdqYXZhc2NyaXB0OnZvaWQoMCk7JyBjbGFzcz0nbmF2X2EgbmF2LXRyeS1hZ2Fpbic+dHJ5IGFnYWluXHUwMDNDL2E+Llx1MDAzQy9wPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGlkPSduYXYtY2FydC1mb290ZXInPlx1MDAzQ2EgaHJlZj0nL2dwL2NhcnQvdmlldy5odG1sL3JlZj1uYXZfZmx5b3V0X3ZpZXdjYXJ0P2llPVVURjgmYW1wO2hhc1dvcmtpbmdKYXZhc2NyaXB0PTEnIGlkPSduYXYtY2FydC1tZW51LWJ1dHRvbicgY2xhc3M9J25hdi1hY3Rpb24tYnV0dG9uJz5cdTAwM0NzcGFuIGNsYXNzPSduYXYtYWN0aW9uLWlubmVyJz5WaWV3IENhcnRcdTAwM0NzcGFuIGlkPSduYXYtY2FydC1tZW51LWJ1dHRvbi1jb3VudCcgPlx1MDAzQ3NwYW4gaWQ9J25hdi1jYXJ0LXplcm8nPihcdTAwM0NzcGFuIGNsYXNzPSduYXYtY2FydC1jb3VudCc+MFx1MDAzQy9zcGFuPiBpdGVtcylcdTAwM0Mvc3Bhbj5cdTAwM0NzcGFuIGlkPSduYXYtY2FydC1vbmUnIHN0eWxlPSdkaXNwbGF5OiBub25lOyc+KFx1MDAzQ3NwYW4gY2xhc3M9J25hdi1jYXJ0LWNvdW50Jz4wXHUwMDNDL3NwYW4+IGl0ZW0pXHUwMDNDL3NwYW4+XHUwMDNDc3BhbiBpZD0nbmF2LWNhcnQtbWFueScgc3R5bGU9J2Rpc3BsYXk6IG5vbmU7Jz4oXHUwMDNDc3BhbiBjbGFzcz0nbmF2LWNhcnQtY291bnQnPjBcdTAwM0Mvc3Bhbj4gaXRlbXMpXHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2PlwifSxcInNpZ25pbkNvbnRlbnRcIjp7XCJodG1sXCI6XCJcdTAwM0NkaXYgaWQ9J25hdi1zaWduaW4tdG9vbHRpcCc+XHUwMDNDYSBocmVmPScvZ3AvbmF2aWdhdGlvbi9yZWRpcmVjdG9yLmh0bWwvcmVmPXNpZ24taW4tcmVkaXJlY3Q/aWU9VVRGOCZhbXA7YXNzb2NpYXRpb25IYW5kbGU9dXNmbGV4JmFtcDtjdXJyZW50UGFnZVVSTD1odHRwcyUzQSUyRiUyRnd3dy5hbWF6b24uY29tJTJGZ3AlMkZ5b3Vyc3RvcmUlMkZob21lJTNGaWUlM0RVVEY4JTI2cmVmXyUzRG5hdl9jdXN0cmVjX3NpZ25pbiZhbXA7cGFnZVR5cGU9JmFtcDtzd2l0Y2hBY2NvdW50PSZhbXA7eXNoVVJMPWh0dHBzJTNBJTJGJTJGd3d3LmFtYXpvbi5jb20lMkZncCUyRnlvdXJzdG9yZSUyRmhvbWUlM0ZpZSUzRFVURjglMjZyZWZfJTNEbmF2X2N1c3RyZWNfc2lnbmluJyBjbGFzcz0nbmF2LWFjdGlvbi1idXR0b24nIGRhdGEtbmF2LXJvbGU9J3NpZ25pbicgZGF0YS1uYXYtcmVmPSduYXZfY3VzdHJlY19zaWduaW4nPlx1MDAzQ3NwYW4gY2xhc3M9J25hdi1hY3Rpb24taW5uZXInPlNpZ24gaW5cdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NkaXYgY2xhc3M9J25hdi1zaWduaW4tdG9vbHRpcC1mb290ZXInPk5ldyBjdXN0b21lcj8gXHUwMDNDYSBocmVmPSdodHRwczovL3d3dy5hbWF6b24uY29tL2FwL3JlZ2lzdGVyP19lbmNvZGluZz1VVEY4JmFtcDtvcGVuaWQuYXNzb2NfaGFuZGxlPXVzZmxleCZhbXA7b3BlbmlkLmNsYWltZWRfaWQ9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wJTJGaWRlbnRpZmllcl9zZWxlY3QmYW1wO29wZW5pZC5pZGVudGl0eT1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAlMkZpZGVudGlmaWVyX3NlbGVjdCZhbXA7b3BlbmlkLm1vZGU9Y2hlY2tpZF9zZXR1cCZhbXA7b3BlbmlkLm5zPWh0dHAlM0ElMkYlMkZzcGVjcy5vcGVuaWQubmV0JTJGYXV0aCUyRjIuMCZhbXA7b3BlbmlkLm5zLnBhcGU9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZleHRlbnNpb25zJTJGcGFwZSUyRjEuMCZhbXA7b3BlbmlkLnBhcGUubWF4X2F1dGhfYWdlPTAmYW1wO29wZW5pZC5yZXR1cm5fdG89aHR0cHMlM0ElMkYlMkZ3d3cuYW1hem9uLmNvbSUyRmdwJTJGeW91cnN0b3JlJTJGaG9tZSUzRmllJTNEVVRGOCUyNnJlZl8lM0RuYXZfY3VzdHJlY19uZXdjdXN0JyBjbGFzcz0nbmF2LWEnPlN0YXJ0IGhlcmUuXHUwMDNDL2E+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2PlwifSxcImFjY291bnRMaXN0Q29udGVudFwiOntcImh0bWxcIjpcIlx1MDAzQ2RpdiBpZD0nbmF2LWFsLWNvbnRhaW5lcic+XHUwMDNDZGl2IGlkPSduYXYtYWwtc2lnbmluJz5cdTAwM0NkaXYgaWQ9J25hdi1mbHlvdXQteWEtc2lnbmluJyBjbGFzcz0nbmF2LWZseW91dC1jb250ZW50Jz5cdTAwM0NhIGhyZWY9Jy9ncC9uYXZpZ2F0aW9uL3JlZGlyZWN0b3IuaHRtbC9yZWY9c2lnbi1pbi1yZWRpcmVjdD9pZT1VVEY4JmFtcDthc3NvY2lhdGlvbkhhbmRsZT11c2ZsZXgmYW1wO2N1cnJlbnRQYWdlVVJMPWh0dHBzJTNBJTJGJTJGd3d3LmFtYXpvbi5jb20lMkZncCUyRnlvdXJzdG9yZSUyRmhvbWUlM0ZpZSUzRFVURjglMjZyZWZfJTNEbmF2X3NpZ25pbiZhbXA7cGFnZVR5cGU9JmFtcDtzd2l0Y2hBY2NvdW50PSZhbXA7eXNoVVJMPWh0dHBzJTNBJTJGJTJGd3d3LmFtYXpvbi5jb20lMkZncCUyRnlvdXJzdG9yZSUyRmhvbWUlM0ZpZSUzRFVURjglMjZyZWZfJTNEbmF2X3NpZ25pbicgcmVsPSdub2ZvbGxvdycgY2xhc3M9J25hdi1hY3Rpb24tYnV0dG9uJyBkYXRhLW5hdi1yb2xlPSdzaWduaW4nIGRhdGEtbmF2LXJlZj0nbmF2X3NpZ25pbic+XHUwMDNDc3BhbiBjbGFzcz0nbmF2LWFjdGlvbi1pbm5lcic+U2lnbiBpblx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2RpdiBpZD0nbmF2LWZseW91dC15YS1uZXdDdXN0JyBjbGFzcz0nbmF2X3BvcF9uZXdfY3VzdCBuYXYtZmx5b3V0LWNvbnRlbnQnPk5ldyBjdXN0b21lcj8gXHUwMDNDYSBocmVmPSdodHRwczovL3d3dy5hbWF6b24uY29tL2FwL3JlZ2lzdGVyP19lbmNvZGluZz1VVEY4JmFtcDtvcGVuaWQuYXNzb2NfaGFuZGxlPXVzZmxleCZhbXA7b3BlbmlkLmNsYWltZWRfaWQ9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wJTJGaWRlbnRpZmllcl9zZWxlY3QmYW1wO29wZW5pZC5pZGVudGl0eT1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAlMkZpZGVudGlmaWVyX3NlbGVjdCZhbXA7b3BlbmlkLm1vZGU9Y2hlY2tpZF9zZXR1cCZhbXA7b3BlbmlkLm5zPWh0dHAlM0ElMkYlMkZzcGVjcy5vcGVuaWQubmV0JTJGYXV0aCUyRjIuMCZhbXA7b3BlbmlkLm5zLnBhcGU9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZleHRlbnNpb25zJTJGcGFwZSUyRjEuMCZhbXA7b3BlbmlkLnBhcGUubWF4X2F1dGhfYWdlPTAmYW1wO29wZW5pZC5yZXR1cm5fdG89aHR0cHMlM0ElMkYlMkZ3d3cuYW1hem9uLmNvbSUyRmdwJTJGeW91cnN0b3JlJTJGaG9tZSUzRmllJTNEVVRGOCUyNnJlZl8lM0RuYXZfbmV3Y3VzdCcgcmVsPSdub2ZvbGxvdycgY2xhc3M9J25hdi1hJz5TdGFydCBoZXJlLlx1MDAzQy9hPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBpZD0nbmF2LWFsLXdpc2hsaXN0JyBjbGFzcz0nbmF2LWFsLWNvbHVtbiBuYXYtdHBsLWl0ZW1MaXN0Jz5cdTAwM0NhIGhyZWY9Jy9ncC9yZWdpc3RyeS93aXNobGlzdD9pZT1VVEY4JmFtcDtyZWZfPWZseW91dF95bF9oZWFkZXInIGNsYXNzPSduYXYtYWwtZmx5b3V0LWhlYWRlcicgaWQ9J25hdi1hbC10aXRsZSc+XHUwMDNDZGl2IGNsYXNzPSduYXYtdGl0bGUnPllvdXIgTGlzdHNcdTAwM0MvZGl2Plx1MDAzQy9hPlx1MDAzQ2EgaHJlZj0nL2dwL3JlZ2lzdHJ5L3dpc2hsaXN0P2llPVVURjgmYW1wO3JlZl89bmF2X3dpc2hsaXN0X2NyZWF0ZSZhbXA7dHJpZ2dlckVsZW1lbnRJRD1jcmVhdGVMaXN0JyBjbGFzcz0nbmF2LWxpbmsgbmF2LWl0ZW0nPlx1MDAzQ3NwYW4gY2xhc3M9J25hdi10ZXh0Jz5DcmVhdGUgYSBMaXN0XHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDYSBocmVmPScvZ2N4L0dpZnRzLWZvci1FdmVyeW9uZS9nZmh6Lz9fZW5jb2Rpbmc9VVRGOCZhbXA7cmVmXz1uYXZfd2lzaGxpc3RfZ2YnIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+XHUwMDNDc3BhbiBjbGFzcz0nbmF2LXRleHQnPkZpbmQgYSBHaWZ0XHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDYSBocmVmPScvZ3AvQklUP2llPVVURjgmYW1wO2JpdENhbXBhaWduQ29kZT1hMDAzMiZhbXA7cmVmXz1uYXZfd2lzaGxpc3RfYml0X3YyX2EwMDMyJyBjbGFzcz0nbmF2LWxpbmsgbmF2LWl0ZW0nPlx1MDAzQ3NwYW4gY2xhc3M9J25hdi10ZXh0Jz5TYXZlIEl0ZW1zIGZyb20gdGhlIFdlYlx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj0nL3dlZGRpbmcvaG9tZT9fZW5jb2Rpbmc9VVRGOCZhbXA7cmVmXz1uYXZfd2lzaGxpc3Rfd3InIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+XHUwMDNDc3BhbiBjbGFzcz0nbmF2LXRleHQnPldlZGRpbmcgUmVnaXN0cnlcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9Jy9iYWJ5LXJlZy9ob21lcGFnZT9fZW5jb2Rpbmc9VVRGOCZhbXA7cmVmXz1uYXZfd2lzaGxpc3RfYnInIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+XHUwMDNDc3BhbiBjbGFzcz0nbmF2LXRleHQnPkJhYnkgUmVnaXN0cnlcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9Jy9ncC9naWZ0LWNlbnRyYWwvb3JnYW5pemVyP2llPVVURjgmYW1wO3JlZl89bmF2X3dpc2hsaXN0X2ZhZmdpZnQnIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+XHUwMDNDc3BhbiBjbGFzcz0nbmF2LXRleHQnPkZyaWVuZHMgJiBGYW1pbHkgR2lmdGluZ1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj0nL2dwL2NscGY/aWU9VVRGOCZhbXA7cmVmXz1uYXZfd2lzaGxpc3Rfc21pX3NlX3lhX2xsbF9sbCcgY2xhc3M9J25hdi1saW5rIG5hdi1pdGVtJz5cdTAwM0NzcGFuIGNsYXNzPSduYXYtdGV4dCc+QW1hem9uU21pbGUgQ2hhcml0eSBMaXN0c1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj0nL2dwL3BhbnRyeS95b3VybGlzdHM/aWU9VVRGOCZhbXA7cmVmXz1uYXZfd2lzaGxpc3RfcG50cnlfZ25vJyBjbGFzcz0nbmF2LWxpbmsgbmF2LWl0ZW0nPlx1MDAzQ3NwYW4gY2xhc3M9J25hdi10ZXh0Jz5QYW50cnkgTGlzdHNcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9Jy9pZGVhcy9zYXZlcz9fZW5jb2Rpbmc9VVRGOCZhbXA7cmVmXz1uYXZfd2lzaGxpc3Rfc3RybV9pbl95b3V0aXF1ZV9saXN0cycgY2xhc3M9J25hdi1saW5rIG5hdi1pdGVtJz5cdTAwM0NzcGFuIGNsYXNzPSduYXYtdGV4dCc+WW91ciBIZWFydHNcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9Jy9pZGVhcz9fZW5jb2Rpbmc9VVRGOCZhbXA7cmVmXz1uYXZfd2lzaGxpc3RfaWRlYV9uYXYnIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+XHUwMDNDc3BhbiBjbGFzcz0nbmF2LXRleHQnPkV4cGxvcmUgSWRlYSBMaXN0c1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj0nL3Nob3dyb29tP19lbmNvZGluZz1VVEY4JmFtcDtyZWZfPW5hdl93aXNobGlzdF9zcm1feW91cl9kZXNrX3dsJyBjbGFzcz0nbmF2LWxpbmsgbmF2LWl0ZW0nPlx1MDAzQ3NwYW4gY2xhc3M9J25hdi10ZXh0Jz5FeHBsb3JlIFNob3dyb29tXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDYSBocmVmPScvc3R5bGVxdWl6Lz9fZW5jb2Rpbmc9VVRGOCZhbXA7cmVmXz1uYXZfd2lzaGxpc3Rfc3FfeWFfeWwnIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+XHUwMDNDc3BhbiBjbGFzcz0nbmF2LXRleHQnPlRha2UgdGhlIEhvbWUgU3R5bGUgUXVpelx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGlkPSduYXYtYWwteW91ci1hY2NvdW50JyBjbGFzcz0nbmF2LWFsLWNvbHVtbiBuYXYtdGVtcGxhdGUgbmF2LWZseW91dC1jb250ZW50IG5hdi10cGwtaXRlbUxpc3QnPlx1MDAzQ2EgaHJlZj0nL2dwL2Nzcy9ob21lcGFnZS5odG1sP2llPVVURjgmYW1wO3JlZl89eWEnIGNsYXNzPSduYXYtYWwtZmx5b3V0LWhlYWRlcic+XHUwMDNDZGl2IGNsYXNzPSduYXYtdGl0bGUnPllvdXIgQWNjb3VudFx1MDAzQy9kaXY+XHUwMDNDL2E+XHUwMDNDYSBocmVmPScvZ3AvY3NzL2hvbWVwYWdlLmh0bWw/aWU9VVRGOCZhbXA7cmVmXz1uYXZfeW91cmFjY291bnRfeWEnIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+XHUwMDNDc3BhbiBjbGFzcz0nbmF2LXRleHQnPllvdXIgQWNjb3VudFx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj0nL2dwL2Nzcy9vcmRlci1oaXN0b3J5P2llPVVURjgmYW1wO3JlZl89bmF2X3lvdXJhY2NvdW50X29yZGVycycgY2xhc3M9J25hdi1saW5rIG5hdi1pdGVtJyBpZD0nbmF2X3ByZWZldGNoX3lvdXJvcmRlcnMnPlx1MDAzQ3NwYW4gY2xhc3M9J25hdi10ZXh0Jz5Zb3VyIE9yZGVyc1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj0nL2dwL3JlZ2lzdHJ5L3dpc2hsaXN0P2llPVVURjgmYW1wO3JlZl89bmF2X3lvdXJhY2NvdW50X3dsJmFtcDtyZXF1aXJlc1NpZ25Jbj0xJyBjbGFzcz0nbmF2LWxpbmsgbmF2LWl0ZW0nPlx1MDAzQ3NwYW4gY2xhc3M9J25hdi10ZXh0Jz5Zb3VyIExpc3RzXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDYSBocmVmPScvZ3AveW91cnN0b3JlP2llPVVURjgmYW1wO3JlZl89bmF2X3lvdXJhY2NvdW50X3JlY3MnIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+XHUwMDNDc3BhbiBjbGFzcz0nbmF2LXRleHQnPllvdXIgUmVjb21tZW5kYXRpb25zXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDYSBocmVmPScvZ3Avc3Vic2NyaWJlLWFuZC1zYXZlL21hbmFnZXIvdmlld3N1YnNjcmlwdGlvbnM/aWU9VVRGOCZhbXA7cmVmXz1uYXZfeW91cmFjY291bnRfc25zJyBjbGFzcz0nbmF2LWxpbmsgbmF2LWl0ZW0nPlx1MDAzQ3NwYW4gY2xhc3M9J25hdi10ZXh0Jz5Zb3VyIFN1YnNjcmliZSAmIFNhdmUgSXRlbXNcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9Jy95b3VybWVtYmVyc2hpcHNhbmRzdWJzY3JpcHRpb25zP19lbmNvZGluZz1VVEY4JmFtcDtyZWZfPW5hdl95b3VyYWNjb3VudF9kaWdpdGFsX3N1YnNjcmlwdGlvbnMnIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+XHUwMDNDc3BhbiBjbGFzcz0nbmF2LXRleHQnPk1lbWJlcnNoaXBzICYgU3Vic2NyaXB0aW9uc1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj0nL2xvY2Fsc2VydmljZXMveWEvc2VydmljZXJlcXVlc3RzP19lbmNvZGluZz1VVEY4JmFtcDtyZWZfPW5hdl95b3VyYWNjb3VudF9kZXNrdG9wX3Zhc19yZXF1ZXN0bGlzdCcgY2xhc3M9J25hdi1saW5rIG5hdi1pdGVtJz5cdTAwM0NzcGFuIGNsYXNzPSduYXYtdGV4dCc+WW91ciBTZXJ2aWNlIFJlcXVlc3RzXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDYSBocmVmPScvZ3AveW91ci1nYXJhZ2UvP2llPVVURjgmYW1wO3JlZl89bmF2X3lvdXJhY2NvdW50X2F1X3BmX2FzX0dOTycgY2xhc3M9J25hdi1saW5rIG5hdi1pdGVtJz5cdTAwM0NzcGFuIGNsYXNzPSduYXYtdGV4dCc+WW91ciBHYXJhZ2VcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9Jy9mYW5zaG9wP19lbmNvZGluZz1VVEY4JmFtcDtyZWZfPW5hdl95b3VyYWNjb3VudF95ZnMnIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+XHUwMDNDc3BhbiBjbGFzcz0nbmF2LXRleHQnPllvdXIgRmFuc2hvcFx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj0nL3lvdXJwZXRzP19lbmNvZGluZz1VVEY4JmFtcDtyZWZfPW5hdl95b3VyYWNjb3VudF9wZXRfcHJvZmlsZXMnIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+XHUwMDNDc3BhbiBjbGFzcz0nbmF2LXRleHQnPllvdXIgUGV0c1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQ2EgaHJlZj0nL21uL2Rjdy9teXguaHRtbD9fZW5jb2Rpbmc9VVRGOCZhbXA7cmVmXz1uYXZfeW91cmFjY291bnRfbXlrJyBjbGFzcz0nbmF2LWxpbmsgbmF2LWl0ZW0nPlx1MDAzQ3NwYW4gY2xhc3M9J25hdi10ZXh0Jz5Zb3VyIENvbnRlbnQgYW5kIERldmljZXNcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9Jy9ncC9kbXVzaWMvbXAzL3BsYXllcj9pZT1VVEY4JmFtcDtyZWZfPW5hdl95b3VyYWNjb3VudF9jbGRwbHlyJyBjbGFzcz0nbmF2LWxpbmsgbmF2LWl0ZW0nPlx1MDAzQ3NwYW4gY2xhc3M9J25hdi10ZXh0Jz5Zb3VyIE11c2ljIExpYnJhcnlcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9Jy9jbG91ZGRyaXZlP19lbmNvZGluZz1VVEY4JmFtcDtyZWZfPW5hdl95b3VyYWNjb3VudF9jbGRkcnYnIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+XHUwMDNDc3BhbiBjbGFzcz0nbmF2LXRleHQnPllvdXIgQW1hem9uIERyaXZlXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDYSBocmVmPScvUHJpbWUtSW5zdGFudC1WaWRlby9zL2Jyb3dzZT9fZW5jb2Rpbmc9VVRGOCZhbXA7bm9kZT0yNjc2ODgyMDExJmFtcDtyZWZfPW5hdl95b3VyYWNjb3VudF9waXYnIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+XHUwMDNDc3BhbiBjbGFzcz0nbmF2LXRleHQnPllvdXIgUHJpbWUgVmlkZW9cdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9Jy9ncC9raW5kbGUva3Uva3VfY2VudHJhbD9pZT1VVEY4JmFtcDtyZWZfPW5hdl95b3VyYWNjb3VudF9rdScgY2xhc3M9J25hdi1saW5rIG5hdi1pdGVtJz5cdTAwM0NzcGFuIGNsYXNzPSduYXYtdGV4dCc+WW91ciBLaW5kbGUgVW5saW1pdGVkXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDYSBocmVmPScvZ3AvdmlkZW8vd2F0Y2hsaXN0P2llPVVURjgmYW1wO3JlZl89bmF2X3lvdXJhY2NvdW50X3l3bCcgY2xhc3M9J25hdi1saW5rIG5hdi1pdGVtJz5cdTAwM0NzcGFuIGNsYXNzPSduYXYtdGV4dCc+WW91ciBXYXRjaGxpc3RcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0NhIGhyZWY9Jy9ncC92aWRlby9saWJyYXJ5P2llPVVURjgmYW1wO3JlZl89bmF2X3lvdXJhY2NvdW50X3l2bCcgY2xhc3M9J25hdi1saW5rIG5hdi1pdGVtJz5cdTAwM0NzcGFuIGNsYXNzPSduYXYtdGV4dCc+WW91ciBWaWRlbyBMaWJyYXJ5XHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDYSBocmVmPScvZ3AvbWFzL3lvdXItYWNjb3VudC9teWFwcHM/aWU9VVRGOCZhbXA7cmVmXz1uYXZfeW91cmFjY291bnRfYWFkJyBjbGFzcz0nbmF2LWxpbmsgbmF2LWl0ZW0nPlx1MDAzQ3NwYW4gY2xhc3M9J25hdi10ZXh0Jz5Zb3VyIEFuZHJvaWQgQXBwcyAmIERldmljZXNcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XCJ9LFwidGVtcGxhdGVzXCI6e1wiYXNpbi1wcm9tb1wiOlwiXHUwMDNDYSBocmVmPSdcdTAwM0MjPWRlc3RpbmF0aW9uICM+JyBjbGFzcz0nbmF2X2FzaW5fcHJvbW8nPiAgXHUwMDNDaW1nIHNyYz0nXHUwMDNDIz1pbWFnZSAjPicgY2xhc3M9J25hdl9hc2luX3Byb21vX2ltZycvPiAgXHUwMDNDc3BhbiBjbGFzcz0nbmF2X2FzaW5fcHJvbW9faGVhZGxpbmUnPlx1MDAzQyM9aGVhZGxpbmUgIz5cdTAwM0Mvc3Bhbj4gIFx1MDAzQ3NwYW4gY2xhc3M9J25hdl9hc2luX3Byb21vX2luZm8nPiAgICBcdTAwM0NzcGFuIGNsYXNzPSduYXZfYXNpbl9wcm9tb190aXRsZSc+XHUwMDNDIz1wcm9kdWN0VGl0bGUgIz5cdTAwM0Mvc3Bhbj4gICAgXHUwMDNDc3BhbiBjbGFzcz0nbmF2X2FzaW5fcHJvbW9fdGl0bGUyJz5cdTAwM0MjPXByb2R1Y3RUaXRsZTIgIz5cdTAwM0Mvc3Bhbj4gICAgXHUwMDNDc3BhbiBjbGFzcz0nbmF2X2FzaW5fcHJvbW9fcHJpY2UnPlx1MDAzQyM9cHJpY2UgIz5cdTAwM0Mvc3Bhbj4gIFx1MDAzQy9zcGFuPiAgXHUwMDNDc3BhbiBjbGFzcz0nbmF2X2FzaW5fcHJvbW9fYnV0dG9uIG5hdi1zcHJpdGUnPlx1MDAzQyM9YnV0dG9uICM+XHUwMDNDL3NwYW4+XHUwMDNDL2E+XCIsXCJkaXNjb3ZlcnlQYW5lbExpc3RcIjpcIlx1MDAzQyMgdmFyIHJlbmRlckl0ZW1zID0gZnVuY3Rpb24oaXRlbXMpIHsgIz4gICAgXHUwMDNDc3BhbiBjbGFzcz0nbmF2LWRwLXRpdGxlIG5hdi1pdGVtJz4gICAgRGVsaXZlcmllcyBhdCBhIGdsYW5jZSAgICBcdTAwM0NkaXYgY2xhc3M9J25hdi1kaXZpZGVyLWNvbnRhaW5lcic+XHUwMDNDZGl2IGNsYXNzPSduYXYtZGl2aWRlcic+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9zcGFuPiAgICBcdTAwM0MjIGpRdWVyeS5lYWNoKGl0ZW1zLCBmdW5jdGlvbiAoaSwgaXRlbSkgeyAjPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz0nbmF2LWl0ZW0nPiAgICAgICAgICAgIFx1MDAzQ2EgaHJlZj0nXHUwMDNDIz1pdGVtLm9yZGVyX2xpbmsjPicgY2xhc3M9J25hdi1kcC1saW5rJz4gICAgICAgICAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz0nbmF2LWRwLWxlZnQtY29sdW1uJz4gICAgICAgICAgICAgICAgICAgIFx1MDAzQ2ltZyBzcmM9J1x1MDAzQyM9aXRlbS5pbWFnZSM+JyBjbGFzcz0nbmF2LWRwLWltYWdlJy8+ICAgICAgICAgICAgICAgIFx1MDAzQy9zcGFuPiAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPSduYXYtZHAtcmlnaHQtY29sdW1uJz4gICAgICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9J25hdi1kcC10ZXh0IFx1MDAzQyM9aXRlbS5zdGF0dXMjPic+ICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDIz1pdGVtLnN0YXR1c190ZXh0Iz4gICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0Nici8+ICAgICAgICAgICAgICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgICAgICAgICAgICAgICAgIFx1MDAzQyMgaWYoaXRlbS5zZWNvbmRhcnlfc3RhdHVzX3RleHQpIHsgIz4gICAgICAgICAgICAgICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPSduYXYtZHAtdGV4dC1zZWNvbmRhcnkgXHUwMDNDIz1pdGVtLnN0YXR1cyM+Jz4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDIz1pdGVtLnNlY29uZGFyeV9zdGF0dXNfdGV4dCM+ICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+ICAgICAgICAgICAgICAgICAgICBcdTAwM0MjIH0gIz4gICAgICAgICAgICAgICAgXHUwMDNDL3NwYW4+ICAgICAgICAgICAgXHUwMDNDL2E+ICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPSduYXYtZGl2aWRlci1jb250YWluZXInPlx1MDAzQ2RpdiBjbGFzcz0nbmF2LWRpdmlkZXInPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj4gICAgICAgIFx1MDAzQy9zcGFuPiAgXHUwMDNDIyB9KTsgIz4gIFx1MDAzQ2EgaHJlZj0nL3lvdXItb3JkZXJzL3JlZj1uYXZfZHBfYXlvJyBjbGFzcz0nbmF2LWRwLWxpbmstZW1waGFzaXMnPiAgICAgIFZpZXcgYWxsIG9yZGVycyAgXHUwMDNDL2E+XHUwMDNDIyB9OyAjPlx1MDAzQyMgcmVuZGVySXRlbXMoaXRlbXMpOyAjPlwiLFwiaXRlbUxpc3RcIjpcIlx1MDAzQyMgdmFyIGhhc0NvbHVtbnMgPSAoZnVuY3Rpb24gKCkgeyAgdmFyIGNoZWNrQ29sdW1ucyA9IGZ1bmN0aW9uIChfaXRlbXMpIHsgICAgaWYgKCFfaXRlbXMpIHsgICAgICByZXR1cm4gZmFsc2U7ICAgIH0gICAgZm9yICh2YXIgaT0wOyBpXHUwMDNDX2l0ZW1zLmxlbmd0aDsgaSsrKSB7ICAgICAgaWYgKF9pdGVtc1tpXS5jb2x1bW5CcmVhayB8fCAoX2l0ZW1zW2ldLml0ZW1zICYmIGNoZWNrQ29sdW1ucyhfaXRlbXNbaV0uaXRlbXMpKSkgeyAgICAgICAgcmV0dXJuIHRydWU7ICAgICAgfSAgICB9ICAgIHJldHVybiBmYWxzZTsgIH07ICByZXR1cm4gY2hlY2tDb2x1bW5zKGl0ZW1zKTt9KCkpOyAjPlx1MDAzQyMgaWYoaGFzQ29sdW1ucykgeyAjPiAgXHUwMDNDIyBpZihpdGVtc1swXS5pbWFnZSAmJiBpdGVtc1swXS5pbWFnZS5zcmMpIHsgIz4gICAgXHUwMDNDZGl2IGNsYXNzPSduYXYtY29sdW1uIG5hdi1jb2x1bW4tZmlyc3QgbmF2LWNvbHVtbi1pbWFnZSc+ICBcdTAwM0MjIH0gZWxzZSBpZiAoaXRlbXNbMF0uZ3JlZXRpbmcpIHsgIz4gICAgXHUwMDNDZGl2IGNsYXNzPSduYXYtY29sdW1uIG5hdi1jb2x1bW4tZmlyc3QgbmF2LWNvbHVtbi1ncmVldGluZyc+ICBcdTAwM0MjIH0gZWxzZSB7ICM+ICAgIFx1MDAzQ2RpdiBjbGFzcz0nbmF2LWNvbHVtbiBuYXYtY29sdW1uLWZpcnN0Jz4gIFx1MDAzQyMgfSAjPlx1MDAzQyMgfSAjPlx1MDAzQyMgdmFyIHJlbmRlckl0ZW1zID0gZnVuY3Rpb24oaXRlbXMpIHsgIz4gIFx1MDAzQyMgalF1ZXJ5LmVhY2goaXRlbXMsIGZ1bmN0aW9uIChpLCBpdGVtKSB7ICM+ICAgIFx1MDAzQyMgaWYoaGFzQ29sdW1ucyAmJiBpdGVtLmNvbHVtbkJyZWFrKSB7ICM+ICAgICAgXHUwMDNDIyBpZihpdGVtLmltYWdlICYmIGl0ZW0uaW1hZ2Uuc3JjKSB7ICM+ICAgICAgICBcdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz0nbmF2LWNvbHVtbiBuYXYtY29sdW1uLW5vdGZpcnN0IG5hdi1jb2x1bW4tYnJlYWsgbmF2LWNvbHVtbi1pbWFnZSc+ICAgICAgXHUwMDNDIyB9IGVsc2UgaWYgKGl0ZW0uZ3JlZXRpbmcpIHsgIz4gICAgICAgIFx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPSduYXYtY29sdW1uIG5hdi1jb2x1bW4tbm90Zmlyc3QgbmF2LWNvbHVtbi1icmVhayBuYXYtY29sdW1uLWdyZWV0aW5nJz4gICAgICBcdTAwM0MjIH0gZWxzZSB7ICM+ICAgICAgICBcdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz0nbmF2LWNvbHVtbiBuYXYtY29sdW1uLW5vdGZpcnN0IG5hdi1jb2x1bW4tYnJlYWsnPiAgICAgIFx1MDAzQyMgfSAjPiAgICBcdTAwM0MjIH0gIz4gICAgXHUwMDNDIyBpZihpdGVtLmRpdmlkZXJCZWZvcmUpIHsgIz4gICAgICBcdTAwM0NkaXYgY2xhc3M9J25hdi1kaXZpZGVyJz5cdTAwM0MvZGl2PiAgICBcdTAwM0MjIH0gIz4gICAgXHUwMDNDIyBpZihpdGVtLnRleHQgfHwgaXRlbS5jb250ZW50KSB7ICM+ICAgICAgXHUwMDNDIyBpZihpdGVtLnVybCkgeyAjPiAgICAgICAgXHUwMDNDYSBocmVmPSdcdTAwM0MjPWl0ZW0udXJsICM+JyBjbGFzcz0nbmF2LWxpbmsgICAgICBcdTAwM0MjIH0gZWxzZSB7Iz4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9JyAgICAgIFx1MDAzQyMgfSAjPiAgICAgIFx1MDAzQyMgaWYoaXRlbS5wYW5lbEtleSkgeyAjPiAgICAgICAgbmF2LWhhc1BhbmVsICAgICAgXHUwMDNDIyB9ICM+ICAgICAgXHUwMDNDIyBpZihpdGVtLml0ZW1zKSB7ICM+ICAgICAgICBuYXYtdGl0bGUgICAgICBcdTAwM0MjIH0gIz4gICAgICBcdTAwM0MjIGlmKGl0ZW0uZGVjb3JhdGUgPT0gJ2NhcmF0JykgeyAjPiAgICAgICAgbmF2LWNhcmF0ICAgICAgXHUwMDNDIyB9ICM+ICAgICAgXHUwMDNDIyBpZihpdGVtLmRlY29yYXRlID09ICduYXYtYWN0aW9uLWJ1dHRvbicpIHsgIz4gICAgICAgIG5hdi1hY3Rpb24tYnV0dG9uICAgICAgXHUwMDNDIyB9ICM+ICAgICAgbmF2LWl0ZW0nICAgICAgXHUwMDNDIyBpZihpdGVtLmV4dHJhKSB7ICM+ICAgICAgICBcdTAwM0MjPWl0ZW0uZXh0cmEgIz4gICAgICBcdTAwM0MjIH0gIz4gICAgICBcdTAwM0MjIGlmKGl0ZW0uaWQpIHsgIz4gICAgICAgIGlkPSdcdTAwM0MjPWl0ZW0uaWQgIz4nICAgICAgXHUwMDNDIyB9ICM+ICAgICAgXHUwMDNDIyBpZihpdGVtLmRhdGFOYXZSb2xlKSB7ICM+ICAgICAgICBkYXRhLW5hdi1yb2xlPSdcdTAwM0MjPWl0ZW0uZGF0YU5hdlJvbGUgIz4nICAgICAgXHUwMDNDIyB9ICM+ICAgICAgXHUwMDNDIyBpZihpdGVtLmRhdGFOYXZSZWYpIHsgIz4gICAgICAgIGRhdGEtbmF2LXJlZj0nXHUwMDNDIz1pdGVtLmRhdGFOYXZSZWYgIz4nICAgICAgXHUwMDNDIyB9ICM+ICAgICAgXHUwMDNDIyBpZihpdGVtLnBhbmVsS2V5KSB7ICM+ICAgICAgICBkYXRhLW5hdi1wYW5lbGtleT0nXHUwMDNDIz1pdGVtLnBhbmVsS2V5ICM+JyAgICAgICAgcm9sZT0nbmF2aWdhdGlvbicgICAgICAgIGFyaWEtbGFiZWw9J1x1MDAzQyM9aXRlbS50ZXh0Iz4nICAgICAgXHUwMDNDIyB9ICM+ICAgICAgXHUwMDNDIyBpZihpdGVtLnN1YnRleHRLZXkpIHsgIz4gICAgICAgIGRhdGEtbmF2LXN1YnRleHRrZXk9J1x1MDAzQyM9aXRlbS5zdWJ0ZXh0S2V5ICM+JyAgICAgIFx1MDAzQyMgfSAjPiAgICAgIFx1MDAzQyMgaWYoaXRlbS5pbWFnZSAmJiBpdGVtLmltYWdlLmhlaWdodCA+IDE2KSB7ICM+ICAgICAgICBzdHlsZT0nbGluZS1oZWlnaHQ6XHUwMDNDIz1pdGVtLmltYWdlLmhlaWdodCAjPnB4OycgICAgICBcdTAwM0MjIH0gIz4gICAgICA+ICAgICAgXHUwMDNDIyBpZihpdGVtLmRlY29yYXRlID09ICdjYXJhdCcpIHsgIz4gICAgICAgIFx1MDAzQ2kgY2xhc3M9J25hdi1pY29uJz5cdTAwM0MvaT4gICAgICBcdTAwM0MjIH0gIz4gICAgICBcdTAwM0MjIGlmKGl0ZW0uaW1hZ2UgJiYgaXRlbS5pbWFnZS5zcmMpIHsgIz4gICAgICAgIFx1MDAzQ2ltZyBjbGFzcz0nbmF2LWltYWdlJyBzcmM9J1x1MDAzQyM9aXRlbS5pbWFnZS5zcmMgIz4nIHN0eWxlPSdoZWlnaHQ6XHUwMDNDIz1pdGVtLmltYWdlLmhlaWdodCAjPnB4OyB3aWR0aDpcdTAwM0MjPWl0ZW0uaW1hZ2Uud2lkdGggIz5weDsnIC8+ICAgICAgXHUwMDNDIyB9ICM+ICAgICAgXHUwMDNDIyBpZihpdGVtLnRleHQpIHsgIz4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9J25hdi10ZXh0XHUwMDNDIyBpZihpdGVtLmNsYXNzbmFtZSkgeyAjPiBcdTAwM0MjPWl0ZW0uY2xhc3NuYW1lICM+XHUwMDNDIyB9ICM+Jz5cdTAwM0MjPWl0ZW0udGV4dCM+XHUwMDNDIyBpZihpdGVtLmJhZGdlVGV4dCkgeyAjPiAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPSduYXYtYmFkZ2UnPlx1MDAzQyM9aXRlbS5iYWRnZVRleHQjPlx1MDAzQy9zcGFuPiAgICAgICAgXHUwMDNDIyB9ICM+XHUwMDNDL3NwYW4+ICAgICAgXHUwMDNDIyB9IGVsc2UgaWYgKGl0ZW0uY29udGVudCkgeyAjPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz0nbmF2LWNvbnRlbnQnPlx1MDAzQyMgalF1ZXJ5LmVhY2goaXRlbS5jb250ZW50LCBmdW5jdGlvbiAoaiwgY0l0ZW0pIHsgIz5cdTAwM0MjIGlmKGNJdGVtLnVybCAmJiBjSXRlbS50ZXh0KSB7ICM+XHUwMDNDYSBocmVmPSdcdTAwM0MjPWNJdGVtLnVybCAjPicgY2xhc3M9J25hdi1hJz5cdTAwM0MjPWNJdGVtLnRleHQgIz5cdTAwM0MvYT5cdTAwM0MjIH0gZWxzZSBpZiAoY0l0ZW0udGV4dCkgeyAjPlx1MDAzQyM9Y0l0ZW0udGV4dCM+XHUwMDNDIyB9ICM+XHUwMDNDIyB9KTsgIz5cdTAwM0Mvc3Bhbj4gICAgICBcdTAwM0MjIH0gIz4gICAgICBcdTAwM0MjIGlmKGl0ZW0uc3VidGV4dCkgeyAjPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz0nbmF2LXN1YnRleHQnPlx1MDAzQyM9aXRlbS5zdWJ0ZXh0ICM+XHUwMDNDL3NwYW4+ICAgICAgXHUwMDNDIyB9ICM+ICAgICAgXHUwMDNDIyBpZihpdGVtLnVybCkgeyAjPiAgICAgICAgXHUwMDNDL2E+ICAgICAgXHUwMDNDIyB9IGVsc2UgeyM+ICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgICBcdTAwM0MjIH0gIz4gICAgXHUwMDNDIyB9ICM+ICAgIFx1MDAzQyMgaWYoaXRlbS5pbWFnZSAmJiBpdGVtLmltYWdlLnNyYykgeyAjPiAgICAgIFx1MDAzQyMgaWYoaXRlbS51cmwpIHsgIz4gICAgICAgIFx1MDAzQ2EgaHJlZj0nXHUwMDNDIz1pdGVtLnVybCAjPic+ICAgICAgIFx1MDAzQyMgfSAjPiAgICAgIFx1MDAzQ2ltZyBjbGFzcz0nbmF2LWltYWdlJyAgICAgIFx1MDAzQyMgaWYoaXRlbS5pZCkgeyAjPiAgICAgICAgaWQ9J1x1MDAzQyM9aXRlbS5pZCAjPicgICAgICBcdTAwM0MjIH0gIz4gICAgICBzcmM9J1x1MDAzQyM9aXRlbS5pbWFnZS5zcmMgIz4nIFx1MDAzQyMgaWYgKGl0ZW0uYWx0KSB7ICM+IGFsdD0nXHUwMDNDIz0gaXRlbS5hbHQgIz4nXHUwMDNDIyB9ICM+Lz4gICAgICBcdTAwM0MjIGlmKGl0ZW0udXJsKSB7ICM+ICAgICAgICBcdTAwM0MvYT4gICAgICAgXHUwMDNDIyB9ICM+ICAgIFx1MDAzQyMgfSAjPiAgICBcdTAwM0MjIGlmKGl0ZW0uaXRlbXMpIHsgIz4gICAgICBcdTAwM0NkaXYgY2xhc3M9J25hdi1wYW5lbCc+IFx1MDAzQyMgcmVuZGVySXRlbXMoaXRlbS5pdGVtcyk7ICM+IFx1MDAzQy9kaXY+ICAgIFx1MDAzQyMgfSAjPiAgXHUwMDNDIyB9KTsgIz5cdTAwM0MjIH07ICM+XHUwMDNDIyByZW5kZXJJdGVtcyhpdGVtcyk7ICM+XHUwMDNDIyBpZihoYXNDb2x1bW5zKSB7ICM+ICBcdTAwM0MvZGl2Plx1MDAzQyMgfSAjPlwiLFwibm90aWZpY2F0aW9uc0xpc3RcIjpcIlx1MDAzQ2RpdiBjbGFzcz0nbmF2LWl0ZW0gbmF2LXRpdGxlJz4gIE5vdGlmaWNhdGlvbnNcdTAwM0MvZGl2Plx1MDAzQyMgalF1ZXJ5LmVhY2goaXRlbXMgfHwgW10sIGZ1bmN0aW9uIChpLCBpdGVtKSB7ICM+ICBcdTAwM0NkaXYgY2xhc3M9J25hdi1pdGVtXHUwMDNDIyBpZiAoaXRlbS50eXBlKSB7ICM+IG5hdi1ub3RpLWxpc3QtXHUwMDNDIz0gaXRlbS50eXBlICM+XHUwMDNDIyB9ICM+XHUwMDNDIyBpZiAoaXRlbS5pbWFnZSAmJiBpdGVtLmltYWdlLnNyYykgeyAjPiBuYXYtbm90aS1saXN0LXdpdGgtaW1hZ2VcdTAwM0MjIH0gIz4nPiAgICBcdTAwM0MjIGlmIChpdGVtLmRpc21pc3NJZCkgeyAjPiAgICAgIFx1MDAzQ2RpdiBjbGFzcz0nbmF2LW5vdGktbGlzdC14JyBkYXRhLW5vdGktaWQ9J1x1MDAzQyM9IGl0ZW0uZGlzbWlzc0lkICM+Jz4mdGltZXM7XHUwMDNDL2Rpdj4gICAgXHUwMDNDIyB9ICM+ICAgIFx1MDAzQyMgaWYgKGl0ZW0uaW1hZ2UgJiYgaXRlbS5pbWFnZS5zcmMpIHsgIz4gICAgICBcdTAwM0NkaXYgY2xhc3M9J25hdi1ub3RpLWxpc3QtaW1hZ2UnPiAgICAgICAgXHUwMDNDaW1nIGNsYXNzPSduYXYtbm90aS1saXN0LWltYWdlLXRhZycgc3JjPSdcdTAwM0MjPSBpdGVtLmltYWdlLnNyYyAjPicgXHUwMDNDIyBpZiAoaXRlbS5pbWFnZS5hbHQpIHsgIz4gYWx0PSdcdTAwM0MjPSBpdGVtLmltYWdlLmFsdCAjPidcdTAwM0MjIH0gIz4gXHUwMDNDIyBpZiAoaXRlbS5pbWFnZS50aXRsZSkgeyAjPiB0aXRsZT0nXHUwMDNDIz0gaXRlbS5pbWFnZS50aXRsZSAjPidcdTAwM0MjIH0gIz4vPiAgICAgIFx1MDAzQy9kaXY+ICAgIFx1MDAzQyMgfSAjPiAgICBcdTAwM0MjIGlmIChpdGVtLmhlYWRpbmcpIHsgIz4gICAgICBcdTAwM0NkaXYgY2xhc3M9J25hdi1ub3RpLWxpc3QtaGVhZGluZyc+XHUwMDNDIz0gaXRlbS5oZWFkaW5nICM+XHUwMDNDL2Rpdj4gICAgXHUwMDNDIyB9ICM+ICAgIFx1MDAzQyMgalF1ZXJ5LmVhY2goaXRlbS5jb250ZW50IHx8IFtdLCBmdW5jdGlvbiAoaiwgaXRlbUNvbnRlbnQpIHsgIz4gICAgICBcdTAwM0MjIGlmIChpdGVtQ29udGVudC51cmwpIHsgIz4gICAgICAgIFx1MDAzQ2EgaHJlZj0nXHUwMDNDIz0gaXRlbUNvbnRlbnQudXJsICM+JyBjbGFzcz0nbmF2LW5vdGktbGlzdC1jb250ZW50Jz4gICAgICBcdTAwM0MjIH0gZWxzZSB7ICM+ICAgICAgICBcdTAwM0NkaXYgY2xhc3M9J25hdi1ub3RpLWxpc3QtY29udGVudCc+ICAgICAgXHUwMDNDIyB9ICM+ICAgICAgICBcdTAwM0MjIGlmIChpdGVtQ29udGVudC50ZXh0KSB7ICM+ICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9J25hdi1ub3RpLWxpc3QtdGV4dCc+XHUwMDNDIz0gaXRlbUNvbnRlbnQudGV4dCAjPlx1MDAzQy9zcGFuPiAgICAgICAgXHUwMDNDIyB9ICM+ICAgICAgICBcdTAwM0MjIGlmIChpdGVtQ29udGVudC5zdWJ0ZXh0KSB7ICM+ICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9J25hdi1ub3RpLWxpc3Qtc3VidGV4dCc+XHUwMDNDIz0gaXRlbUNvbnRlbnQuc3VidGV4dCAjPlx1MDAzQy9zcGFuPiAgICAgICAgXHUwMDNDIyB9ICM+ICAgICAgXHUwMDNDIyBpZiAoaXRlbUNvbnRlbnQudXJsKSB7ICM+ICAgICAgICBcdTAwM0MvYT4gICAgICBcdTAwM0MjIH0gZWxzZSB7ICM+ICAgICAgICBcdTAwM0MvZGl2PiAgICAgIFx1MDAzQyMgfSAjPiAgICBcdTAwM0MjIH0pOyAjPiAgXHUwMDNDL2Rpdj5cdTAwM0MjIH0pOyAjPlwiLFwiZGlzY292ZXJ5UGFuZWxTdW1tYXJ5XCI6XCIgICAgXHUwMDNDc3BhbiBjbGFzcz0nbmF2LWRwLXRpdGxlIG5hdi1pdGVtJz4gICAgRGVsaXZlcmllcyBhdCBhIGdsYW5jZSAgICBcdTAwM0NkaXYgY2xhc3M9J25hdi1kaXZpZGVyLWNvbnRhaW5lcic+XHUwMDNDZGl2IGNsYXNzPSduYXYtZGl2aWRlcic+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9zcGFuPiAgICBcdTAwM0MjIGpRdWVyeS5lYWNoKGl0ZW1zIHx8IFtdLCBmdW5jdGlvbiAoaSwgaXRlbSkgeyAjPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz0nbmF2LWl0ZW0nPiAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9J25hdi1kcC1sZWZ0LWNvbHVtbic+ICAgICAgICAgICAgICAgIFx1MDAzQ2ltZyBzcmM9J1x1MDAzQyM9aXRlbS5pbWFnZS51cmwjPicgY2xhc3M9J25hdi1kcC1pbWFnZScgaGVpZ2h0PSdcdTAwM0MjPWl0ZW0uaW1hZ2UuaGVpZ2h0Iz4nLz4gICAgICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPSduYXYtZHAtcmlnaHQtY29sdW1uJz4gICAgICAgICAgICAgICAgXHUwMDNDIz1pdGVtLnN0YXR1c190ZXh0Iz4gICAgICAgICAgICAgICAgXHUwMDNDZGl2IGNsYXNzPSduYXYtZHAtc2Vjb25kYXJ5LXJvdyc+ICAgICAgICAgICAgICAgICAgICBcdTAwM0NhIGhyZWY9Jy95b3VyLW9yZGVycy9yZWY9bmF2X2RwX3J5bycgY2xhc3M9J25hdi1kcC1saW5rLWVtcGhhc2lzJz4gICAgICAgICAgICAgICAgICAgICAgICBTaWduIGluIHRvIHZpZXcgb3JkZXJzICAgICAgICAgICAgICAgICAgICBcdTAwM0MvYT4gICAgICAgICAgICAgICAgXHUwMDNDL2Rpdj4gICAgICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgICAgIFx1MDAzQy9zcGFuPiAgICBcdTAwM0MjIH0pOyAjPlwiLFwiaHRtbExpc3RcIjpcIiAgXHUwMDNDIyBqUXVlcnkuZWFjaChpdGVtcywgZnVuY3Rpb24gKGksIGl0ZW0pIHsgIz4gICAgXHUwMDNDZGl2IGNsYXNzPSduYXYtaXRlbSc+ICAgICAgXHUwMDNDIz1pdGVtICM+ICAgIFx1MDAzQy9kaXY+ICBcdTAwM0MjIH0pOyAjPlwiLFwic3VibmF2XCI6XCJcdTAwM0MjIGlmIChvYmogJiYgb2JqLnR5cGUgPT09ICd2ZXJ0aWNhbCcpIHsgIz4gIFx1MDAzQyMgalF1ZXJ5LmVhY2gob2JqLnJvd3MsIGZ1bmN0aW9uIChpLCByb3cpIHsgIz4gICAgXHUwMDNDIyBpZiAocm93LmZseW91dEVsZW1lbnQgPT09ICdidXR0b24nKSB7ICM+ICAgICAgXHUwMDNDZGl2IGNsYXNzPSduYXZfc3ZfZm9fdl9idXR0b24nICAgICAgICBcdTAwM0MjIGlmIChyb3cuZWxlbWVudFN0eWxlKSB7ICM+ICAgICAgICAgIHN0eWxlPSdcdTAwM0MjPSByb3cuZWxlbWVudFN0eWxlICM+JyAgICAgICAgXHUwMDNDIyB9ICM+ICAgICAgPiAgICAgICAgXHUwMDNDYSBocmVmPSdcdTAwM0MjPXJvdy51cmwgIz4nIGNsYXNzPSduYXYtYWN0aW9uLWJ1dHRvbiBuYXYtc3ByaXRlJz4gICAgICAgICAgXHUwMDNDIz1yb3cudGV4dCAjPiAgICAgICAgXHUwMDNDL2E+ICAgICAgXHUwMDNDL2Rpdj4gICAgXHUwMDNDIyB9IGVsc2UgaWYgKHJvdy5mbHlvdXRFbGVtZW50ID09PSAnbGlzdCcgJiYgcm93Lmxpc3QpIHsgIz4gICAgICBcdTAwM0MjIGpRdWVyeS5lYWNoKHJvdy5saXN0LCBmdW5jdGlvbiAoaiwgbGlzdCkgeyAjPiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPSduYXZfc3ZfZm9fdl9jb2x1bW4gXHUwMDNDIz0oaiA9PT0gMCkgPyAnbmF2X3N2X2ZvX3ZfZmlyc3QnIDogJycgIz4nPiAgICAgICAgICBcdTAwM0N1bCBjbGFzcz0nXHUwMDNDIz1saXN0LmVsZW1lbnRDbGFzcyAjPic+ICAgICAgICAgIFx1MDAzQyMgalF1ZXJ5LmVhY2gobGlzdC5saW5rTGlzdCwgZnVuY3Rpb24gKGssIGxpbmspIHsgIz4gICAgICAgICAgICBcdTAwM0MjIGlmIChrID09PSAwKSB7IGxpbmsuZWxlbWVudENsYXNzICs9ICcgbmF2X3N2X2ZvX3ZfZmlyc3QnOyB9ICM+ICAgICAgICAgICAgXHUwMDNDbGkgY2xhc3M9J1x1MDAzQyM9bGluay5lbGVtZW50Q2xhc3MgIz4nPiAgICAgICAgICAgICAgXHUwMDNDIyBpZiAobGluay51cmwpIHsgIz4gICAgICAgICAgICAgICAgXHUwMDNDYSBocmVmPSdcdTAwM0MjPWxpbmsudXJsICM+JyBjbGFzcz0nbmF2X2EnPlx1MDAzQyM9bGluay50ZXh0ICM+XHUwMDNDL2E+ICAgICAgICAgICAgICBcdTAwM0MjIH0gZWxzZSB7ICM+ICAgICAgICAgICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9J25hdl9zdl9mb192X3NwYW4nPlx1MDAzQyM9bGluay50ZXh0ICM+XHUwMDNDL3NwYW4+ICAgICAgICAgICAgICBcdTAwM0MjIH0gIz4gICAgICAgICAgICBcdTAwM0MvbGk+ICAgICAgICAgIFx1MDAzQyMgfSk7ICM+ICAgICAgICAgIFx1MDAzQy91bD4gICAgICAgIFx1MDAzQy9kaXY+ICAgICAgXHUwMDNDIyB9KTsgIz4gICAgXHUwMDNDIyB9IGVsc2UgaWYgKHJvdy5mbHlvdXRFbGVtZW50ID09PSAnbGluaycpIHsgIz4gICAgICBcdTAwM0MjIGlmIChyb3cudG9wU3BhY2VyKSB7ICM+ICAgICAgICBcdTAwM0NkaXYgY2xhc3M9J25hdl9zdl9mb192X2NsZWFyJz5cdTAwM0MvZGl2PiAgICAgIFx1MDAzQyMgfSAjPiAgICAgIFx1MDAzQ2RpdiBjbGFzcz0nXHUwMDNDIz1yb3cuZWxlbWVudENsYXNzICM+Jz4gICAgICAgIFx1MDAzQ2EgaHJlZj0nXHUwMDNDIz1yb3cudXJsICM+JyBjbGFzcz0nbmF2X3N2X2ZvX3ZfbG1hcmdpbiBuYXZfYSc+ICAgICAgICAgIFx1MDAzQyM9cm93LnRleHQgIz4gICAgICAgIFx1MDAzQy9hPiAgICAgIFx1MDAzQy9kaXY+ICAgIFx1MDAzQyMgfSAjPiAgXHUwMDNDIyB9KTsgIz5cdTAwM0MjIH0gZWxzZSBpZiAob2JqKSB7ICM+ICBcdTAwM0NkaXYgY2xhc3M9J25hdl9zdl9mb19zY2hlZHVsZWQnPiAgICBcdTAwM0MjPSBvYmogIz4gIFx1MDAzQy9kaXY+XHUwMDNDIyB9ICM+XCIsXCJ3aXNobGlzdFwiOlwiXHUwMDNDIyBqUXVlcnkuZWFjaCh3aXNobGlzdCwgZnVuY3Rpb24gKGksIGl0ZW0pIHsgIz4gIFx1MDAzQ2xpIGNsYXNzPSduYXZfcG9wX2xpJz4gICAgXHUwMDNDYSBocmVmPSdcdTAwM0MjPWl0ZW0udXJsICM+JyBjbGFzcz0nbmF2X2EnPiAgICAgIFx1MDAzQyM9aXRlbS5uYW1lICM+ICAgIFx1MDAzQy9hPiAgICBcdTAwM0NkaXYgY2xhc3M9J25hdl90YWcnPiAgICAgIFx1MDAzQyEtLSBUT0RPIHRoaXMgbG9naWMgc2hvdWxkIG5vdyBiZSBpbiBkeW5hbWljLXdpc2gtbGlzdC5taSAtLT4gICAgICBcdTAwM0MjIGlmKHR5cGVvZiBpdGVtLmNvdW50ICE9J3VuZGVmaW5lZCcpIHsgIz4gICAgICAgIFx1MDAzQyM9ICAgICAgICAgIChpdGVtLmNvdW50ID09IDEgPyAne2NvdW50fSBpdGVtJyA6ICd7Y291bnR9IGl0ZW1zJykgICAgICAgICAgICAucmVwbGFjZSgne2NvdW50fScsIGl0ZW0uY291bnQpICAgICAgICAjPiAgICAgIFx1MDAzQyMgfSAjPiAgICBcdTAwM0MvZGl2PiAgXHUwMDNDL2xpPlx1MDAzQyMgfSk7ICM+XCIsXCJjYXJ0XCI6XCJcdTAwM0MjIGpRdWVyeS5lYWNoKGl0ZW1zLCBmdW5jdGlvbiAoaSwgaXRlbSkgeyAjPiAgXHUwMDNDZGl2IGNsYXNzPSduYXYtY2FydC1pdGVtJz4gICAgXHUwMDNDYSBocmVmPSdcdTAwM0MjPWl0ZW0udXJsICM+JyBjbGFzcz0nbmF2LWNhcnQtaXRlbS1saW5rJz4gICAgICBcdTAwM0NpbWcgc3JjPSdcdTAwM0MjPWl0ZW0uaW1nICM+JyBjbGFzcz0nbmF2LWNhcnQtaXRlbS1pbWFnZScgLz4gICAgICBcdTAwM0NzcGFuIGNsYXNzPSduYXYtY2FydC1pdGVtLXRpdGxlJz5cdTAwM0MjPWl0ZW0ubmFtZSAjPlx1MDAzQy9zcGFuPiAgICAgIFx1MDAzQyMgaWYgKGl0ZW0ud2VpZ2h0KSB7ICM+ICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPSduYXYtY2FydC1pdGVtLXdlaWdodCcgc3R5bGU9J2Rpc3BsYXk6bm9uZTsnPiAgICAgICAgICBcdTAwM0MjPSAnU2hpcCB3ZWlnaHQ6IHt2YWx1ZX0ge3VuaXR9Jy5yZXBsYWNlKCd7dmFsdWV9JywgaXRlbS53ZWlnaHQudmFsdWUpLnJlcGxhY2UoJ3t1bml0fScsIGl0ZW0ud2VpZ2h0LnVuaXQpICM+ICAgICAgICBcdTAwM0Mvc3Bhbj4gICAgICBcdTAwM0MjIH0gIz4gICAgICBcdTAwM0MjIGlmIChpdGVtLm91clByaWNlKSB7ICM+ICAgICAgICBcdTAwM0NzcGFuIGNsYXNzPSduYXYtY2FydC1pdGVtLWJ1eWluZ1ByaWNlJz5cdTAwM0MjPWl0ZW0ub3VyUHJpY2UgIz5cdTAwM0Mvc3Bhbj4gICAgICBcdTAwM0MjIH0gIz4gICAgICBcdTAwM0MjIGlmIChpdGVtLnNjYXJjaXR5TWVzc2FnZSkgeyAjPiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz0nXHUwMDNDIz1pdGVtLnNjYXJjaXR5Q2xhc3MgIz4nPlx1MDAzQyM9aXRlbS5zY2FyY2l0eU1lc3NhZ2UgIz5cdTAwM0Mvc3Bhbj4gICAgICBcdTAwM0MjIH0gIz4gICAgICBcdTAwM0NzcGFuIGNsYXNzPSduYXYtY2FydC1pdGVtLXF1YW50aXR5Jz4gICAgICAgIFx1MDAzQyM9ICdRdWFudGl0eToge2NvdW50fScucmVwbGFjZSgne2NvdW50fScsIGl0ZW0ucXR5KSAjPiAgICAgIFx1MDAzQy9zcGFuPiAgICBcdTAwM0MvYT4gIFx1MDAzQy9kaXY+ICBcdTAwM0MjIGlmIChpJTI9PTEpIHsgIz4gICAgXHUwMDNDZGl2IGNsYXNzPSduYXYtY2FydC1pdGVtLWJyZWFrJz5cdTAwM0MvZGl2PiAgXHUwMDNDIyB9ICM+XHUwMDNDIyB9KTsgIz5cdTAwM0NkaXYgY2xhc3M9J25hdi1jYXJ0LWl0ZW0tYnJlYWsnPlx1MDAzQy9kaXY+XCJ9fSk7IH0pO1xuXHUwMDNDL3NjcmlwdD5cblxuICBcdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuICAgICAgd2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucHJlZmV0Y2hVcmxzJywgW1wiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2F1dGhwb3J0YWwvY29tbW9uL2ltYWdlcy9hbWF6b25fbG9nb19uby1vcmdfbWlkLl9DQjE1MzM4NzA1M18ucG5nXCIsXCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvYXV0aHBvcnRhbC9jb21tb24vaW1hZ2VzL2Ftem5idG4tc3ByaXRlMDMuX0NCMzk1NTkyNDkyXy5wbmdcIixcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9hdXRocG9ydGFsL2ZsZXgvcmVkdWNlZC1uYXYvYXAtZmxleC1yZWR1Y2VkLW5hdi0yLjAuX0NCMzA5MDkyMTAyXy5qc1wiLFwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2F1dGhwb3J0YWwvZmxleC9yZWR1Y2VkLW5hdi9hcC1mbGV4LXJlZHVjZWQtbmF2LTIuMS5fQ0IzNDM5MjA4OTRfLmNzc1wiLFwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2duby9zcHJpdGVzL25hdi1zcHJpdGUtZ2xvYmFsX2JsdWViZWFjb24tMXhfb3B0aW1pemVkX2xheW91dDEuX0NCNDY4NjcwNzc0Xy5wbmdcIixcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS94LWxvY2FsZS9jb21tb24vYnV0dG9ucy9zaWduLWluLXNlY3VyZS5fQ0IxOTIxOTQ3NjZfLmdpZlwiLFwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL3gtbG9jYWxlL2NvbW1vbi9sb2dpbi9md2NpbS5fQ0I0NTQ0MjgwNDhfLmpzXCIsXCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEveC1sb2NhbGUvY29tbW9uL3RyYW5zcGFyZW50LXBpeGVsLl9DQjM4Njk0MjQ2NF8uZ2lmXCJdKTtcbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnByZWZldGNoJyxmdW5jdGlvbigpIHtcbiAgICB2YXIgcFVybHMgPSB3aW5kb3cuJE5hdi5nZXROb3coJ2NvbmZpZy5wcmVmZXRjaFVybHMnKTtcbiAgICAod2luZG93LkFtYXpvblVJUGFnZUpTID8gQW1hem9uVUlQYWdlSlMgOiBQKS53aGVuKCdBJykuZXhlY3V0ZShmdW5jdGlvbiAoQSkgeyBBLnByZWxvYWQocFVybHMpOyB9KTtcbn0pO1xuXG4gIC8qICAqL1xuICBcbih3aW5kb3cuQW1hem9uVUlQYWdlSlMgPyBBbWF6b25VSVBhZ2VKUyA6IFApLndoZW4oJ0EnKS5leGVjdXRlKGZ1bmN0aW9uKEEpe1xuICBpZihBLnByZWxvYWQpe1xuICAgIEEucHJlbG9hZCgnaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzQxQW5NMFdTZldMLl9SQ3w3MVVXa2lpSmJlTC5qcyw2MW9tOGhwZzAtTC5qcyw0MVc5b2hBMGUrTC5qcywxMXZyTmtiZGN2TC5qcywyMVNIZDlnMkxBTC5qcywzMXhpeXlXZzFrTC5qcyw1MStrbHN2d2dxTC5qcywzMXM2bng0Um50TC5qc18uanM/QVVJQ2xpZW50cy9BbWF6b25OYXZpZ2F0aW9uRGVza3RvcE1ldGFBc3NldCNkZXNrdG9wJyk7XG4gICAgQS5wcmVsb2FkKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvMjFrcE5Pd0I1ZEwuX1JDfDcxSUdGZC10YVRMLmNzcywxMVduTzZQUDdHTC5jc3MsMzFYOFZSSHk4UUwuY3NzLDIxK2FVK1IzSWlMLmNzcywzMXdXV0M2WUF2TC5jc3MsMTFHNEh4TXRNU0wuY3NzLDMxT3ZIUlcrWGlMLmNzcywwMVhITU9IcEsxTC5jc3NfLmNzcz9BVUlDbGllbnRzL0FtYXpvbk5hdmlnYXRpb25EZXNrdG9wTWV0YUFzc2V0I2Rlc2t0b3AnKTtcbiAgfVxufSk7XG5cblxuXG5cbiAgICB3aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5mbHlvdXRVUkwnLCBudWxsKTtcbiAgICB3aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2J0Zi5saXRlJyk7XG4gICAgd2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdidGYuZnVsbCcpO1xuICAgIHdpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnYnRmLmV4aXN0cycpO1xuICAgICh3aW5kb3cuQW1hem9uVUlQYWdlSlMgPyBBbWF6b25VSVBhZ2VKUyA6IFApLnJlZ2lzdGVyKCduYXZDRicpO1xuICBcdTAwM0Mvc2NyaXB0PlxuXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG4gICAgd2luZG93LiROYXYgJiYgJE5hdi53aGVuKCckJykucnVuKCdDQU1hcmtldHBsYWNlUmVkaXJlY3RPdmVybGF5JyxmdW5jdGlvbigkKSB7XG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB0eXBlOiAnUE9TVCcsXG4gICAgICAgICAgICB1cmw6ICcvZ3AvcmVkaXJlY3Rpb24vY2FuYWRhLmh0bWwnLFxuICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgIHBhdGg6ICcvZHAvQjAxR0tRSTM5MicsXG4gICAgICAgICAgICAgICAgcXVlcnlTdHJpbmc6ICc/aWU9VVRGOCcsXG4gICAgICAgICAgICAgICAgcGFnZVR5cGU6ICdEZXRhaWwnLFxuICAgICAgICAgICAgICAgIHJlZmVyZXI6ICcnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICQoJ2JvZHknKS5hcHBlbmQoZGF0YSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTtcblx1MDAzQy9zY3JpcHQ+XG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG4gICAgd2luZG93LiROYXYgJiYgJE5hdi53aGVuKCckJywgJ3BhZ2UucmVhZHknKS5ydW4oJ01YTWFya2V0cGxhY2VSZWRpcmVjdE92ZXJsYXknLGZ1bmN0aW9uKCQpIHtcbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcbiAgICAgICAgICAgIHVybDogJy9ncC9yZWRpcmVjdGlvbi9tZXhpY28uaHRtbC8xNDUtODk3NTM5MC01MDY0MTEzJyxcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICBwYXRoOiAnL2RwL0IwMUdLUUkzOTInLFxuICAgICAgICAgICAgICAgIHF1ZXJ5U3RyaW5nOiAnP2llPVVURjgnLFxuICAgICAgICAgICAgICAgIHBhZ2VUeXBlOiAnRGV0YWlsJyxcbiAgICAgICAgICAgICAgICAgcmVmZXJlcjogJydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgJCgnYm9keScpLmFwcGVuZChkYXRhKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXHUwMDNDL3NjcmlwdD5cblxuICAgIFxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuXG5cblxuXG4gICAgXHUwMDNDbGluayByZWw9XCJzdHlsZXNoZWV0XCIgdHlwZT1cInRleHQvY3NzXCIgaHJlZj1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS94LWxvY2FsZS9yZWRpcmVjdC1vdmVybGF5L3JlZGlyZWN0LW92ZXJsYXktbmF2LWh0dHBzLTIwMTkwNzE3Ll9DQjQ0MjM2NTY0OF8uY3NzXCI+XG4gICAgXHUwMDNDIS0tW2lmIGx0ZSBJRSA5XT5cdTAwM0NsaW5rIHJlbD1cInN0eWxlc2hlZXRcIiB0eXBlPVwidGV4dC9jc3NcIiBocmVmPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL3gtbG9jYWxlL3JlZGlyZWN0LW92ZXJsYXkvcmVkaXJlY3Qtb3ZlcmxheS1sdGUtaWU5Ll9DQjMzNjczNDUxNV8uY3NzXCI+XHUwMDNDIVtlbmRpZl0tLT5cblxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuICAgIHdpbmRvdy4kTmF2ICYmICROYXYud2hlbignJCcpLnJ1bignQVVNYXJrZXRwbGFjZVJlZGlyZWN0T3ZlcmxheScsZnVuY3Rpb24oJCkge1xuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxuICAgICAgICAgICAgdXJsOiAnL2dwL3JlZGlyZWN0aW9uL2F1c3RyYWxpYS5odG1sJyxcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICBwYXRoOiAnL2RwL0IwMUdLUUkzOTInLFxuICAgICAgICAgICAgICAgIHF1ZXJ5U3RyaW5nOiAnP2llPVVURjgnLFxuICAgICAgICAgICAgICAgIHBhZ2VUeXBlOiAnRGV0YWlsJyxcbiAgICAgICAgICAgICAgICByZWZlcmVyOiAnJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICBpZiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAkKCdib2R5JykuYXBwZW5kKGRhdGEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG5cdTAwM0Mvc2NyaXB0PlxuXG4gICAgXG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblx1MDAzQ2Zvcm0gc3R5bGU9XCJkaXNwbGF5OiBub25lO1wiPlxuICBcdTAwM0NpbnB1dCB0eXBlPVwiaGlkZGVuXCIgaWQ9XCJyd29sLWRpc3BsYXktY2FsbGVkXCIgdmFsdWU9XCIxXCI+XG5cdTAwM0MvZm9ybT5cblxuICAgIFx1MDAzQ3NjcmlwdCB0eXBlPVwiYS1zdGF0ZVwiIGRhdGEtYS1zdGF0ZT1cInsmcXVvdDtrZXkmcXVvdDs6JnF1b3Q7cnctZHluYW1pYy1tb2RhbC1ib290c3RyYXAmcXVvdDt9XCI+e1wib3JpZ1Nlc3Npb25JZFwiOlwiMTQ1LTg5NzUzOTAtNTA2NDExM1wiLFwic3ViUGFnZVR5cGVcIjpudWxsLFwicGFnZVR5cGVcIjpcIkRldGFpbFwiLFwiQVNJTlwiOlwiQjAxR0tRSTM5MlwiLFwicGF0aFwiOlwiL2RwL0IwMUdLUUkzOTJcIixcImlzQVVJXCI6XCIxXCJ9XHUwMDNDL3NjcmlwdD5cbiAgICAgIFxuXG4gICAgICBcdTAwM0NzY3JpcHQ+XG4od2luZG93LkFtYXpvblVJUGFnZUpTID8gQW1hem9uVUlQYWdlSlMgOiBQKS53aGVuKCduYXZDRicpLmV4ZWN1dGUoZnVuY3Rpb24oKXtcbiAgKHdpbmRvdy5BbWF6b25VSVBhZ2VKUyA/IEFtYXpvblVJUGFnZUpTIDogUCkubG9hZC5qcygnaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzExVmJWJTJCJTJCS2hRTC5qcz9BVUlDbGllbnRzL1JldGFpbFdlYnNpdGVPdmVybGF5QVVJQXNzZXRzJyk7XG59KTtcblx1MDAzQy9zY3JpcHQ+XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuICB3aW5kb3cuJE5hdiAmJiB3aW5kb3cuJE5hdi5idWlsZCgnUGxkbkxvY2FsU3RvcmFnZScsIGZ1bmN0aW9uKCkge1xuICAgIHZhciBQbGRuTG9jYWxTdG9yYWdlID0gZnVuY3Rpb24oKSB7fTtcblxuICAgIFBsZG5Mb2NhbFN0b3JhZ2UucHJvdG90eXBlLnNldEl0ZW0gPSBmdW5jdGlvbihrZXksIG9iaikge1xuICAgICAgaWYgKHR5cGVvZiBvYmogIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIG9iaiA9IHdpbmRvdy5KU09OICYmIHdpbmRvdy5KU09OLnN0cmluZ2lmeShvYmopO1xuICAgICAgfVxuXG4gICAgICB0cnkge1xuICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlICYmIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIG9iaik7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfSBjYXRjaCAoZXhjZXB0aW9uKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH07XG4gICAgfTtcblxuICAgIFBsZG5Mb2NhbFN0b3JhZ2UucHJvdG90eXBlLmdldEl0ZW0gPSBmdW5jdGlvbihrZXkpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHJldHVybiB3aW5kb3cubG9jYWxTdG9yYWdlICYmIHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xuICAgICAgfSBjYXRjaChleGNlcHRpb24pIHt9O1xuICAgIH07XG5cbiAgICByZXR1cm4gbmV3IFBsZG5Mb2NhbFN0b3JhZ2UoKTtcbiAgfSk7XG5cbiAgd2luZG93LiROYXYgJiYgd2luZG93LiROYXYud2hlbignUGxkbkxvY2FsU3RvcmFnZScpLnJ1bignUGxkblVjb2xDaGVjaycsIGZ1bmN0aW9uKHN0b3JhZ2UpIHtcbiAgICBpZiAoIXN0b3JhZ2UuZ2V0SXRlbSgnYW1hem9uU21pbGVDYW1wYWlnbnMnKSkge1xuICAgICAgc3RvcmFnZS5zZXRJdGVtKCdhbWF6b25TbWlsZUNhbXBhaWducycsIHtcbiAgICAgICAgXCJ1Y29sXCI6IHtcbiAgICAgICAgICBcIm9wdE91dFwiOiBmYWxzZSxcbiAgICAgICAgICBcImhpdHNcIjogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBcImRhdGVcIjogbmV3IERhdGUoKSxcbiAgICAgICAgICAgICAgXCJyZWRpcmVjdFwiOiBmYWxzZSxcbiAgICAgICAgICAgICAgXCJvcHRPdXRcIjogZmFsc2VcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG5cdTAwM0Mvc2NyaXB0PlxuXHUwMDNDIS0tIGJ0ZiB0aWx1IC0tPlxuXG5cblx1MDAzQyEtLSBzcDpmZWF0dXJlOmhvc3QtYnRmIC0tPlxuXG5cbiAgXHUwMDNDL2Rpdj5cblxuICBcdTAwM0MvZGl2PlxuXG5cdTAwM0MhLS0gaHRtbEVuZE1hcmtlciAtLT5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cdTAwM0MhLS0gc3A6ZW5kLWZlYXR1cmU6aG9zdC1idGYgLS0+XG5cdTAwM0MhLS0gc3A6ZmVhdHVyZTphdWktcHJlbG9hZCAtLT5cblx1MDAzQ3NjcmlwdD5cbih3aW5kb3cuQW1hem9uVUlQYWdlSlMgPyBBbWF6b25VSVBhZ2VKUyA6IFApLndoZW4oJ0EnKS5leGVjdXRlKGZ1bmN0aW9uKEEpIHtcbiAgaWYoQS5wcmVsb2FkKXtcbiAgICBBLnByZWxvYWQoJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MTRpaHhRRFdwTC5fUkN8MTEtQlpFSjhsbkwuanMsNjFHUTlJZEs3SEwuanMsMjFPZjAtOUhQQ0wuanMsMDEyRlZjMzEzMUwuanMsMTE5S0FXbEhVNkwuanMsNTF4TDJRTHY0WUwuanMsMTFBSGxRaFBSakwuanMsMDE2aUhncEY3NEwuanMsMTFhTllGRlM1aEwuanMsMTE2dGd3OVRTYUwuanMsMjExLXA0R1JVQ0wuanMsMDFQb0xYQkRYV0wuanMsNjFUcWdzdDE4dEwuanMsMTFCT2d2bm5udEwuanMsMzFVV3VQZ3RUdEwuanMsMDFycGF1VGVwNEwuanMsMDFpeXh1U0dqNEwuanMsMDFvR29FVUYxUEwuanNfLmpzP0FVSUNsaWVudHMvQW1hem9uVUkjMTkyMzM4LVQxLjIwMjA1MS1UMScpO1xuICAgIEEucHJlbG9hZCgnaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzUxN3JwMk5IMlVMLl9SQ3w1MTZmY09VRS1ITC5jc3MsMDFldmRvaWVta0wuY3NzLDAxSytQczFEZUVMLmNzcywzMXBkSnY5aVN6TC5jc3MsMDF0Z0szNmxwR0wuY3NzLDExVUdDK0dYT1BMLmNzcywyMUxLN2phaWNNTC5jc3MsMTFMNThRcG8wR0wuY3NzLDIxa3lUaTFGYWJMLmNzcywwMVhsOUtpZ3R6TC5jc3MsMDFZaFMzQ3MtaEwuY3NzLDIxR3dFM2NSLXlMLmNzcywwMTlTSFpudDhSTC5jc3MsMDF3QVdRUmdYekwuY3NzLDIxYldjUkpZTklMLmNzcywxMVdnUnhVZEpSTC5jc3MsMDFkVTgrU1BsRkwuY3NzLDExb2NyZ0tvRS1MLmNzcywwMVNIalBNTDZ0TC5jc3MsMTExLUQycVJqaUwuY3NzLDAxUXJXdVJyWi1MLmNzcywzMTBJbWI2THFGTC5jc3MsMTFaMWEwRnhTSUwuY3NzLDAxY2JTM1VLMTFMLmNzcywyMW1PTHcrbllZTC5jc3MsMDFMOFktSkZFaEwuY3NzXy5jc3M/QVVJQ2xpZW50cy9BbWF6b25VSSN1cy5ub3QtdHJpZGVudCcpO1xuICB9XG59KTtcblx1MDAzQy9zY3JpcHQ+XG5cdTAwM0MhLS0gc3A6ZmVhdHVyZTpuYXYtZm9vdGVyIC0tPlxuXHUwMDNDIS0tIGZvb3RlciBwaWx1IC0tPlxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDZGl2IGlkPVwicmhmXCIgY2xhc3M9XCJjb3BpbG90LXNlY3VyZS1kaXNwbGF5XCIgc3R5bGU9XCJjbGVhcjpib3RoXCIgcm9sZT1cImNvbXBsZW1lbnRhcnlcIiBhcmlhLWxhYmVsPVwiWW91ciByZWNlbnRseSB2aWV3ZWQgaXRlbXMgYW5kIGZlYXR1cmVkIHJlY29tbWVuZGF0aW9uc1wiPlxuXG4gICAgXHUwMDNDZGl2IGNsYXNzPVwicmhmLWZyYW1lXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmVcIj5cbiAgICAgICAgXHUwMDNDYnI+XG4gICAgICAgIFx1MDAzQ2RpdiBpZD1cInJoZi1jb250YWluZXJcIj5cblxuXG5cblxuXG5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJyaGYtbG9hZGluZy1vdXRlclwiPlxuICAgICAgICBcdTAwM0N0YWJsZSBjbGFzcz1cInJoZi1sb2FkaW5nLW1pZGRsZVwiPlxuICAgICAgICAgICAgXHUwMDNDdGJvZHk+XHUwMDNDdHI+XG4gICAgICAgICAgICAgICAgXHUwMDNDdGQgY2xhc3M9XCJyaGYtbG9hZGluZy1pbm5lclwiPlxuICAgICAgICAgICAgICAgICAgICBcdTAwM0NpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL3BlcnNvbmFsaXphdGlvbi95YmgvbG9hZGluZy00eC1ncmF5Ll9DQjMxNzk3NjI2NV8uZ2lmXCI+XG4gICAgICAgICAgICAgICAgXHUwMDNDL3RkPlxuICAgICAgICAgICAgXHUwMDNDL3RyPlxuICAgICAgICBcdTAwM0MvdGJvZHk+XHUwMDNDL3RhYmxlPlxuICAgIFx1MDAzQy9kaXY+XG5cblxuXG5cblxuXG5cblxuXHUwMDNDZGl2IGlkPVwicmhmLWNvbnRleHRcIj5cbiAgICBcdTAwM0NzY3JpcHQgdHlwZT1cImFwcGxpY2F0aW9uL2pzb25cIj5cbiAgICAgICAge1wicmhmSGFuZGxlclBhcmFtc1wiOntcInJoZkFzaW5zXCI6XCJcIixcIm5vUDEzTkNhY2hlXCI6XCJcIixcIndlYmxhYlRyaWdnZXJzXCI6XCJcIixcImF1aURlYnVnXCI6XCJcIixcImtleXdvcmRzXCI6XCJcIixcImtcIjpcIlwiLFwicnZpQXNpbnNcIjpcIlwiLFwidXJsXCI6XCJcIixcInBhcmVudFNlc3Npb25cIjpcIjE0NS04OTc1MzkwLTUwNjQxMTNcIixcInJoZlN0YXRlXCI6XCJcIixcImNvbnRleHRNZXRhZGF0YU92ZXJyaWRlXCI6XCJcIixcImN1cnJlbnRTdWJQYWdlVHlwZVwiOm51bGwsXCJmaWVsZC1rZXl3b3Jkc1wiOlwiXCIsXCJyZWxhdGVkUmVxdWVzdElkXCI6XCI0NzVFMzRKUVY5Rk5QSEo5U1NURFwiLFwicmVjc0FzaW5zXCI6XCJcIixcImV4Y2x1ZGVBU0lOXCI6XCJRakF4UjB0UlNUTTVNZz09XCIsXCJhdWRpdEVuYWJsZWRcIjpcIlwiLFwiY3VzdG9tZXJJZFwiOlwiXCIsXCJ0ZXN0UmVjc0ZhaWx1cmVcIjpcIlwiLFwicHJldmlld0NhbXBhaWduc1wiOlwiXCIsXCJmb3JjZVdpZGdldHNcIjpcIlwiLFwiY3VycmVudFBhZ2VUeXBlXCI6XCJEZXRhaWxcIixcInN0cmluZ0RlYnVnXCI6XCJcIn0sXCJzdWJQYWdlVHlwZVwiOm51bGwsXCJyZXF1ZXN0SWRcIjpcIjQ3NUUzNEpRVjlGTlBISjlTU1REXCIsXCJzZXNzaW9uSWRcIjpcIjE0NS04OTc1MzkwLTUwNjQxMTNcIixcImN1c3RvbWVySWRcIjpcIlwiLFwicGFnZVR5cGVcIjpcIkRldGFpbFwiLFwieWJoSGFuZGxlclBhcmFtc1wiOntcInJlbGF0ZWRSZXF1ZXN0SWRcIjpcIjQ3NUUzNEpRVjlGTlBISjlTU1REXCIsXCJjdXJyZW50UGFnZVR5cGVcIjpcIkRldGFpbFwiLFwicGFyZW50U2Vzc2lvblwiOlwiMTQ1LTg5NzUzOTAtNTA2NDExM1wifX1cbiAgICBcdTAwM0Mvc2NyaXB0PlxuXHUwMDNDL2Rpdj5cblxuXHUwMDNDL2Rpdj5cdTAwM0Nub3NjcmlwdD5cblxuXHUwMDNDZGl2IGNsYXNzPVwicmhmLWJvcmRlclwiPlxuXG4gICAgICAgIFx1MDAzQ2RpdiBjbGFzcz1cInJoZi1oZWFkZXJcIj5cbiAgICAgICAgWW91ciByZWNlbnRseSB2aWV3ZWQgaXRlbXMgYW5kIGZlYXR1cmVkIHJlY29tbWVuZGF0aW9uc1xuICAgIFx1MDAzQy9kaXY+XG5cblx1MDAzQ2RpdiBjbGFzcz1cInJoZi1mb290ZXJcIj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJydmktY29udGFpbmVyXCI+XG5cblx1MDAzQ2RpdiBjbGFzcz1cInliaC1lZGl0XCI+XG4gICAgXHUwMDNDZGl2IGNsYXNzPVwieWJoLWVkaXQtYXJyb3dcIj4gJiM4MjUwOyBcdTAwM0MvZGl2PlxuICAgIFx1MDAzQ2RpdiBjbGFzcz1cInliaC1lZGl0LWxpbmtcIj5cdTAwM0NhIGhyZWY9XCIvZ3AveW91cnN0b3JlL3B5bS9yZWY9cGRfcHltbF9yaGYvMTQ1LTg5NzUzOTAtNTA2NDExM1wiPlZpZXcgb3IgZWRpdCB5b3VyIGJyb3dzaW5nIGhpc3RvcnlcdTAwM0MvYT5cdTAwM0MvZGl2PlxuXHUwMDNDL2Rpdj5cbiAgICAgICAgXHUwMDNDc3BhbiBjbGFzcz1cIm5vLXJ2aS1tZXNzYWdlXCI+QWZ0ZXIgdmlld2luZyBwcm9kdWN0IGRldGFpbCBwYWdlcywgbG9vayBoZXJlIHRvIGZpbmQgYW4gZWFzeSB3YXkgdG8gbmF2aWdhdGUgYmFjayB0byBwYWdlcyB5b3UgYXJlIGludGVyZXN0ZWQgaW4uXHUwMDNDL3NwYW4+XG4gICAgXHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XG5cdTAwM0MvZGl2PlxuXHUwMDNDL25vc2NyaXB0Plx1MDAzQ2RpdiBpZD1cInJoZi1lcnJvclwiIHN0eWxlPVwiZGlzcGxheTpub25lO1wiPlxuXG5cdTAwM0NkaXYgY2xhc3M9XCJyaGYtYm9yZGVyXCI+XG5cbiAgICAgICAgXHUwMDNDZGl2IGNsYXNzPVwicmhmLWhlYWRlclwiPlxuICAgICAgICBZb3VyIHJlY2VudGx5IHZpZXdlZCBpdGVtcyBhbmQgZmVhdHVyZWQgcmVjb21tZW5kYXRpb25zXG4gICAgXHUwMDNDL2Rpdj5cblxuXHUwMDNDZGl2IGNsYXNzPVwicmhmLWZvb3RlclwiPlxuICAgIFx1MDAzQ2RpdiBjbGFzcz1cInJ2aS1jb250YWluZXJcIj5cblxuXHUwMDNDZGl2IGNsYXNzPVwieWJoLWVkaXRcIj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJ5YmgtZWRpdC1hcnJvd1wiPiDigLogXHUwMDNDL2Rpdj5cbiAgICBcdTAwM0NkaXYgY2xhc3M9XCJ5YmgtZWRpdC1saW5rXCI+XHUwMDNDYSBocmVmPVwiL2dwL3lvdXJzdG9yZS9weW0vcmVmPXBkX3B5bWxfcmhmLzE0NS04OTc1MzkwLTUwNjQxMTNcIj5WaWV3IG9yIGVkaXQgeW91ciBicm93c2luZyBoaXN0b3J5XHUwMDNDL2E+XHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XG4gICAgICAgIFx1MDAzQ3NwYW4gY2xhc3M9XCJuby1ydmktbWVzc2FnZVwiPkFmdGVyIHZpZXdpbmcgcHJvZHVjdCBkZXRhaWwgcGFnZXMsIGxvb2sgaGVyZSB0byBmaW5kIGFuIGVhc3kgd2F5IHRvIG5hdmlnYXRlIGJhY2sgdG8gcGFnZXMgeW91IGFyZSBpbnRlcmVzdGVkIGluLlx1MDAzQy9zcGFuPlxuICAgIFx1MDAzQy9kaXY+XG5cdTAwM0MvZGl2PlxuXHUwMDNDL2Rpdj5cblx1MDAzQy9kaXY+XG4gICAgICAgIFx1MDAzQ2JyPlxuICAgIFx1MDAzQy9kaXY+XG5cdTAwM0MvZGl2PlxuXG5cdTAwM0NkaXYgY2xhc3M9XCJuYXZMZWZ0Rm9vdGVyIG5hdi1zcHJpdGUtdjFcIiBpZD1cIm5hdkZvb3RlclwiPlx1MDAzQ2EgaHJlZj1cIiNuYXYtdG9wXCIgaWQ9XCJuYXZCYWNrVG9Ub3BcIj5cdTAwM0NkaXYgY2xhc3M9XCJuYXZGb290ZXJCYWNrVG9Ub3BcIj5cdTAwM0NzcGFuIGNsYXNzPVwibmF2Rm9vdGVyQmFja1RvVG9wVGV4dFwiPkJhY2sgdG8gdG9wXHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0MvYT5cblxuXHUwMDNDZGl2IGNsYXNzPVwibmF2Rm9vdGVyVmVydGljYWxDb2x1bW4gbmF2QWNjZXNzaWJpbGl0eVwiIHJvbGU9XCJwcmVzZW50YXRpb25cIj5cdTAwM0NkaXYgY2xhc3M9XCJuYXZGb290ZXJWZXJ0aWNhbFJvdyBuYXZBY2Nlc3NpYmlsaXR5XCIgc3R5bGU9XCJkaXNwbGF5OiB0YWJsZS1yb3c7XCI+XHUwMDNDZGl2IGNsYXNzPVwibmF2Rm9vdGVyTGlua0NvbCBuYXZBY2Nlc3NpYmlsaXR5XCI+XHUwMDNDZGl2IGNsYXNzPVwibmF2Rm9vdGVyQ29sSGVhZFwiPkdldCB0byBLbm93IFVzXHUwMDNDL2Rpdj5cdTAwM0N1bD5cdTAwM0NsaSBjbGFzcz1cIm5hdl9maXJzdFwiPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5qb2JzXCIgY2xhc3M9XCJuYXZfYVwiPkNhcmVlcnNcdTAwM0MvYT5cdTAwM0MvbGk+XHUwMDNDbGk+XHUwMDNDYSBocmVmPVwiaHR0cHM6Ly9ibG9nLmFib3V0YW1hem9uLmNvbS8/dXRtX3NvdXJjZT1nYXRld2F5JmFtcDt1dG1fbWVkaXVtPWZvb3RlclwiIGNsYXNzPVwibmF2X2FcIj5CbG9nXHUwMDNDL2E+XHUwMDNDL2xpPlx1MDAzQ2xpPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vd3d3LmFib3V0YW1hem9uLmNvbS8/dXRtX3NvdXJjZT1nYXRld2F5JmFtcDt1dG1fbWVkaXVtPWZvb3RlclwiIGNsYXNzPVwibmF2X2FcIj5BYm91dCBBbWF6b25cdTAwM0MvYT5cdTAwM0MvbGk+XHUwMDNDbGk+XHUwMDNDYSBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9pclwiIGNsYXNzPVwibmF2X2FcIj5JbnZlc3RvciBSZWxhdGlvbnNcdTAwM0MvYT5cdTAwM0MvbGk+XHUwMDNDbGk+XHUwMDNDYSBocmVmPVwiL2FtYXpvbi1kZXZpY2VzL2I/aWU9VVRGOCZhbXA7bm9kZT0yMTAyMzEzMDExJmFtcDtyZWZfPWZvb3Rlcl9kZXZpY2VzXCIgY2xhc3M9XCJuYXZfYVwiPkFtYXpvbiBEZXZpY2VzXHUwMDNDL2E+XHUwMDNDL2xpPlx1MDAzQ2xpIGNsYXNzPVwibmF2X2xhc3RcIj5cdTAwM0NhIGhyZWY9XCJodHRwczovL3d3dy5hYm91dGFtYXpvbi5jb20vYW1hem9uLWZ1bGZpbGxtZW50LWNlbnRlci10b3Vycz91dG1fc291cmNlPWdhdGV3YXkmYW1wO3V0bV9tZWRpdW09Zm9vdGVyJmFtcDt1dG1fY2FtcGFpZ249ZmN0b3Vyc1wiIGNsYXNzPVwibmF2X2FcIj5BbWF6b24gVG91cnNcdTAwM0MvYT5cdTAwM0MvbGk+XHUwMDNDL3VsPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwibmF2Rm9vdGVyQ29sU3BhY2VySW5uZXIgbmF2QWNjZXNzaWJpbGl0eVwiPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwibmF2Rm9vdGVyTGlua0NvbCBuYXZBY2Nlc3NpYmlsaXR5XCI+XHUwMDNDZGl2IGNsYXNzPVwibmF2Rm9vdGVyQ29sSGVhZFwiPk1ha2UgTW9uZXkgd2l0aCBVc1x1MDAzQy9kaXY+XHUwMDNDdWw+XHUwMDNDbGkgY2xhc3M9XCJuYXZfZmlyc3RcIj5cdTAwM0NhIGhyZWY9XCIvZ3AvcmVkaXJlY3QuaHRtbD9fZW5jb2Rpbmc9VVRGOCZhbXA7bG9jYXRpb249aHR0cHMlM0ElMkYlMkZzZXJ2aWNlcy5hbWF6b24uY29tJTJGY29udGVudCUyRnNlbGwtb24tYW1hem9uLmh0bWwlM0ZsZCUzREFaRlNTT0ElMjZyZWZfJTNEZm9vdGVyX3NvYSZhbXA7c291cmNlPXN0YW5kYXJkcyZhbXA7dG9rZW49NjczMDVCMDY5MzhFRjE4NDk1OUMyNUZFQkYxQjgzMDg1NDgwRTIwNVwiIGNsYXNzPVwibmF2X2FcIj5TZWxsIG9uIEFtYXpvblx1MDAzQy9hPlx1MDAzQy9saT5cdTAwM0NsaT5cdTAwM0NhIGhyZWY9XCIvZ3AvcmVkaXJlY3QuaHRtbD9fZW5jb2Rpbmc9VVRGOCZhbXA7bG9jYXRpb249aHR0cHMlM0ElMkYlMkZzZXJ2aWNlcy5hbWF6b24uY29tJTJGc2VsbGluZy1zZXJ2aWNlcyUyRmJlbmVmaXRzLmh0bSUzRmxkJTNEQVpVU1ZBUy1nbG9iYWxmb290ZXIlMjZyZWZfJTNEZm9vdGVyX3NlbGxfc3ZjcyZhbXA7c291cmNlPXN0YW5kYXJkcyZhbXA7dG9rZW49RTkzODU4RjBFOTQ2RjkzRkVBQzdGMzZFRkI4RTEwRjVDNTRDREJGQ1wiIGNsYXNzPVwibmF2X2FcIj5TZWxsIFlvdXIgU2VydmljZXMgb24gQW1hem9uXHUwMDNDL2E+XHUwMDNDL2xpPlx1MDAzQ2xpPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vc2VydmljZXMuYW1hem9uLmNvbS9hbWF6b24tYnVzaW5lc3MuaHRtbD9sZD11c2IyYnVuaWZvb3RlciZhbXA7cmVmXz1mb290ZXJfYjJiXCIgY2xhc3M9XCJuYXZfYVwiPlNlbGwgb24gQW1hem9uIEJ1c2luZXNzXHUwMDNDL2E+XHUwMDNDL2xpPlx1MDAzQ2xpPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vZGV2ZWxvcGVyLmFtYXpvbi5jb21cIiBjbGFzcz1cIm5hdl9hXCI+U2VsbCBZb3VyIEFwcHMgb24gQW1hem9uXHUwMDNDL2E+XHUwMDNDL2xpPlx1MDAzQ2xpPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vYWZmaWxpYXRlLXByb2dyYW0uYW1hem9uLmNvbS9cIiBjbGFzcz1cIm5hdl9hXCI+QmVjb21lIGFuIEFmZmlsaWF0ZVx1MDAzQy9hPlx1MDAzQy9saT5cdTAwM0NsaT5cdTAwM0NhIGhyZWY9XCJodHRwczovL2FkdmVydGlzaW5nLmFtYXpvbi5jb20vP3JlZj1leHRfYW16bl9mdHJcIiBjbGFzcz1cIm5hdl9hXCI+QWR2ZXJ0aXNlIFlvdXIgUHJvZHVjdHNcdTAwM0MvYT5cdTAwM0MvbGk+XHUwMDNDbGk+XHUwMDNDYSBocmVmPVwiL2dwL3NlbGxlci1hY2NvdW50L21tLXN1bW1hcnktcGFnZS5odG1sP2llPVVURjgmYW1wO2xkPUFaRm9vdGVyU2VsZlB1Ymxpc2gmYW1wO3JlZl89Zm9vdGVyX3B1Ymxpc2hpbmcmYW1wO3RvcGljPTIwMDI2MDUyMFwiIGNsYXNzPVwibmF2X2FcIj5TZWxmLVB1Ymxpc2ggd2l0aCBVc1x1MDAzQy9hPlx1MDAzQy9saT5cdTAwM0NsaSBjbGFzcz1cIm5hdl9sYXN0IG5hdl9hX2NhcmF0XCI+XHUwMDNDc3BhbiBjbGFzcz1cIm5hdl9hX2NhcmF0XCI+4oC6XHUwMDNDL3NwYW4+XHUwMDNDYSBocmVmPVwiL2IvP19lbmNvZGluZz1VVEY4JmFtcDtsZD1BWlVTU09BLXNlZW1vcmUmYW1wO25vZGU9MTgxOTAxMzEwMTEmYW1wO3JlZl89Zm9vdGVyX3NlZW1vcmVcIiBjbGFzcz1cIm5hdl9hXCI+U2VlIE1vcmVcdTAwM0MvYT5cdTAwM0MvbGk+XHUwMDNDL3VsPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwibmF2Rm9vdGVyQ29sU3BhY2VySW5uZXIgbmF2QWNjZXNzaWJpbGl0eVwiPlx1MDAzQy9kaXY+XHUwMDNDZGl2IGNsYXNzPVwibmF2Rm9vdGVyTGlua0NvbCBuYXZBY2Nlc3NpYmlsaXR5XCI+XHUwMDNDZGl2IGNsYXNzPVwibmF2Rm9vdGVyQ29sSGVhZFwiPkFtYXpvbiBQYXltZW50IFByb2R1Y3RzXHUwMDNDL2Rpdj5cdTAwM0N1bD5cdTAwM0NsaSBjbGFzcz1cIm5hdl9maXJzdFwiPlx1MDAzQ2EgaHJlZj1cIi9kcC9CMDc5ODRKTjNMP19lbmNvZGluZz1VVEY4JmFtcDtpZT1VVEYtOCZhbXA7cGxhdHRyPUFDT01GT1wiIGNsYXNzPVwibmF2X2FcIj5BbWF6b24gQnVzaW5lc3MgQ2FyZFx1MDAzQy9hPlx1MDAzQy9saT5cdTAwM0NsaT5cdTAwM0NhIGhyZWY9XCIvYj9pZT1VVEY4JmFtcDtub2RlPTE2MjE4NjE5MDExJmFtcDtyZWZfPWZvb3Rlcl9zd3BcIiBjbGFzcz1cIm5hdl9hXCI+U2hvcCB3aXRoIFBvaW50c1x1MDAzQy9hPlx1MDAzQy9saT5cdTAwM0NsaT5cdTAwM0NhIGhyZWY9XCIvUmVsb2FkLVlvdXItR2lmdC1DYXJkLUJhbGFuY2UvYj9pZT1VVEY4JmFtcDtub2RlPTEwMjMyNDQwMDExJmFtcDtyZWZfPWZvb3Rlcl9yZWxvYWRfdXNcIiBjbGFzcz1cIm5hdl9hXCI+UmVsb2FkIFlvdXIgQmFsYW5jZVx1MDAzQy9hPlx1MDAzQy9saT5cdTAwM0NsaSBjbGFzcz1cIm5hdl9sYXN0XCI+XHUwMDNDYSBocmVmPVwiL0N1cnJlbmN5LUNvbnZlcnRlci9iP2llPVVURjgmYW1wO25vZGU9Mzg4MzA1MDExJmFtcDtyZWZfPWZvb3Rlcl90ZnhcIiBjbGFzcz1cIm5hdl9hXCI+QW1hem9uIEN1cnJlbmN5IENvbnZlcnRlclx1MDAzQy9hPlx1MDAzQy9saT5cdTAwM0MvdWw+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJuYXZGb290ZXJDb2xTcGFjZXJJbm5lciBuYXZBY2Nlc3NpYmlsaXR5XCI+XHUwMDNDL2Rpdj5cdTAwM0NkaXYgY2xhc3M9XCJuYXZGb290ZXJMaW5rQ29sIG5hdkFjY2Vzc2liaWxpdHlcIj5cdTAwM0NkaXYgY2xhc3M9XCJuYXZGb290ZXJDb2xIZWFkXCI+TGV0IFVzIEhlbHAgWW91XHUwMDNDL2Rpdj5cdTAwM0N1bD5cdTAwM0NsaSBjbGFzcz1cIm5hdl9maXJzdFwiPlx1MDAzQ2EgaHJlZj1cIi9ncC9jc3MvaG9tZXBhZ2UuaHRtbD9pZT1VVEY4JmFtcDtyZWZfPWZvb3Rlcl95YVwiIGNsYXNzPVwibmF2X2FcIj5Zb3VyIEFjY291bnRcdTAwM0MvYT5cdTAwM0MvbGk+XHUwMDNDbGk+XHUwMDNDYSBocmVmPVwiL2dwL2Nzcy9vcmRlci1oaXN0b3J5P2llPVVURjgmYW1wO3JlZl89Zm9vdGVyX3lvXCIgY2xhc3M9XCJuYXZfYVwiPllvdXIgT3JkZXJzXHUwMDNDL2E+XHUwMDNDL2xpPlx1MDAzQ2xpPlx1MDAzQ2EgaHJlZj1cIi9ncC9oZWxwL2N1c3RvbWVyL2Rpc3BsYXkuaHRtbD9pZT1VVEY4JmFtcDtub2RlSWQ9NDY4NTIwJmFtcDtyZWZfPWZvb3Rlcl9zaGlwcmF0ZXNcIiBjbGFzcz1cIm5hdl9hXCI+U2hpcHBpbmcgUmF0ZXMgJmFtcDsgUG9saWNpZXNcdTAwM0MvYT5cdTAwM0MvbGk+XHUwMDNDbGk+XHUwMDNDYSBocmVmPVwiL2dwL2Nzcy9yZXR1cm5zL2hvbWVwYWdlLmh0bWw/aWU9VVRGOCZhbXA7cmVmXz1mb290ZXJfaHlfZl80XCIgY2xhc3M9XCJuYXZfYVwiPlJldHVybnMgJmFtcDsgUmVwbGFjZW1lbnRzXHUwMDNDL2E+XHUwMDNDL2xpPlx1MDAzQ2xpPlx1MDAzQ2EgaHJlZj1cIi9ncC9kaWdpdGFsL2Zpb25hL21hbmFnZT9pZT1VVEY4JmFtcDtyZWZfPWZvb3Rlcl9teWtcIiBjbGFzcz1cIm5hdl9hXCI+TWFuYWdlIFlvdXIgQ29udGVudCBhbmQgRGV2aWNlc1x1MDAzQy9hPlx1MDAzQy9saT5cdTAwM0NsaT5cdTAwM0NhIGhyZWY9XCIvZ3AvQklUL3JlZj1mb290ZXJfYml0X3YyX3VzX0EwMDI5P2JpdENhbXBhaWduQ29kZT1BMDAyOVwiIGNsYXNzPVwibmF2X2FcIj5BbWF6b24gQXNzaXN0YW50XHUwMDNDL2E+XHUwMDNDL2xpPlx1MDAzQ2xpIGNsYXNzPVwibmF2X2xhc3RcIj5cdTAwM0NhIGhyZWY9XCIvZ3AvaGVscC9jdXN0b21lci9kaXNwbGF5Lmh0bWw/aWU9VVRGOCZhbXA7bm9kZUlkPTUwODUxMCZhbXA7cmVmXz1mb290ZXJfZ3dfbV9iX2hlXCIgY2xhc3M9XCJuYXZfYVwiPkhlbHBcdTAwM0MvYT5cdTAwM0MvbGk+XHUwMDNDL3VsPlx1MDAzQy9kaXY+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cIm5hdi1mb290ZXItbGluZVwiPlx1MDAzQy9kaXY+XG4gICBcblx1MDAzQ2RpdiBjbGFzcz1cIm5hdkZvb3RlckxpbmUgbmF2Rm9vdGVyTGlua0xpbmUgbmF2Rm9vdGVyUGFkSXRlbUxpbmVcIj5cdTAwM0NzcGFuPlx1MDAzQ2RpdiBjbGFzcz1cIm5hdkZvb3RlckxpbmUgbmF2Rm9vdGVyTG9nb0xpbmVcIj5cdTAwM0NhIGhyZWY9XCIvcmVmPWZvb3Rlcl9sb2dvXCI+XHUwMDNDZGl2IGNsYXNzPVwibmF2LWxvZ28tYmFzZSBuYXYtc3ByaXRlXCI+XHUwMDNDL2Rpdj5cdTAwM0MvYT5cdTAwM0MvZGl2PlxuXHUwMDNDL3NwYW4+XHUwMDNDdWw+XHUwMDNDL3VsPlx1MDAzQ3NwYW4gY2xhc3M9XCJpY3AtY29udGFpbmVyLWRlc2t0b3BcIj5cdTAwM0NkaXYgY2xhc3M9XCJuYXZGb290ZXJMaW5lXCI+XG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDc3R5bGUgdHlwZT1cInRleHQvY3NzXCI+XG4gICNpY3AtdG91Y2gtbGluay1sYW5ndWFnZSB7IGRpc3BsYXk6IG5vbmU7IH1cblx1MDAzQy9zdHlsZT5cblxuXHUwMDNDYSBocmVmPVwiL2dwL2N1c3RvbWVyLXByZWZlcmVuY2VzL3NlbGVjdC1sYW5ndWFnZS9yZWY9Zm9vdGVyX2xhbmc/aWU9VVRGOCZhbXA7cHJlZmVyZW5jZXNSZXR1cm5Vcmw9JTJGZHAlMkZCMDFHS1FJMzkyXCIgY2xhc3M9XCJpY3AtYnV0dG9uIGEtZGVjbGFyYXRpdmVcIiBpZD1cImljcC10b3VjaC1saW5rLWxhbmd1YWdlXCI+XG4gIFx1MDAzQ2RpdiBjbGFzcz1cImljcC1uYXYtZ2xvYmUtaW1nLTIgaWNwLWJ1dHRvbi1nbG9iZS0yIGljcC1uYXYtZ2xvYmUtY3Vyci1maXhcIj7igItcdTAwM0MvZGl2Plx1MDAzQ3NwYW4gY2xhc3M9XCJpY3AtY29sb3ItYmFzZVwiPkVuZ2xpc2hcdTAwM0Mvc3Bhbj5cdTAwM0NzcGFuIGNsYXNzPVwibmF2LWFycm93IGljcC11cC1kb3duLWFycm93XCI+XHUwMDNDL3NwYW4+XHUwMDNDc3BhbiBjbGFzcz1cImFvay1oaWRkZW5cIiBzdHlsZT1cImRpc3BsYXk6bm9uZVwiPkNob29zZSBhIGxhbmd1YWdlIGZvciBzaG9wcGluZy5cdTAwM0Mvc3Bhbj5cblx1MDAzQy9hPlxuXG5cblxuXG5cblxuXG4gIFxuXG5cblxuXG5cdTAwM0NzdHlsZSB0eXBlPVwidGV4dC9jc3NcIj5cbiAgI2ljcC10b3VjaC1saW5rLWNvcCB7IGRpc3BsYXk6IG5vbmU7IH1cblx1MDAzQy9zdHlsZT5cblxuXHUwMDNDYSBocmVmPVwiL2dwL2N1c3RvbWVyLXByZWZlcmVuY2VzL3NlbGVjdC1jdXJyZW5jeS9yZWY9Zm9vdGVyX2NvcD9pZT1VVEY4JmFtcDtwcmVmZXJlbmNlc1JldHVyblVybD0lMkZkcCUyRkIwMUdLUUkzOTJcIiBjbGFzcz1cImljcC1idXR0b25cIiBpZD1cImljcC10b3VjaC1saW5rLWNvcFwiPlxuICBcdTAwM0NzcGFuIGNsYXNzPVwiaWNwLWN1cnJlbmN5LXN5bWJvbFwiPiRcdTAwM0Mvc3Bhbj5cdTAwM0NzcGFuIGNsYXNzPVwiaWNwLWNvbG9yLWJhc2VcIj5VU0QgLSBVLlMuIERvbGxhclx1MDAzQy9zcGFuPlxuXHUwMDNDL2E+XG5cblxuXG5cblxuXG5cblxuXG5cblxuXHUwMDNDc3R5bGUgdHlwZT1cInRleHQvY3NzXCI+XG4jaWNwLXRvdWNoLWxpbmstY291bnRyeSB7IGRpc3BsYXk6IG5vbmU7IH1cblx1MDAzQy9zdHlsZT5cblxuICBcblxuXHUwMDNDYSBocmVmPVwiL2dwL25hdmlnYXRpb24tY291bnRyeS9zZWxlY3QtY291bnRyeS9yZWY9P2llPVVURjgmYW1wO3ByZWZlcmVuY2VzUmV0dXJuVXJsPSUyRmRwJTJGQjAxR0tRSTM5MlwiIGNsYXNzPVwiaWNwLWJ1dHRvbiBhLWRlY2xhcmF0aXZlXCIgaWQ9XCJpY3AtdG91Y2gtbGluay1jb3VudHJ5XCI+XG4gIFx1MDAzQ3NwYW4gY2xhc3M9XCJpY3AtZmxhZy0zIGljcC1mbGFnLTMtdXNcIj7igItcdTAwM0Mvc3Bhbj5cdTAwM0NzcGFuIGNsYXNzPVwiaWNwLWNvbG9yLWJhc2VcIj5Vbml0ZWQgU3RhdGVzXHUwMDNDL3NwYW4+XHUwMDNDc3BhbiBjbGFzcz1cImFvay1oaWRkZW5cIiBzdHlsZT1cImRpc3BsYXk6bm9uZVwiPkNob29zZSBhIGNvdW50cnkvcmVnaW9uIGZvciBzaG9wcGluZy5cdTAwM0Mvc3Bhbj5cblx1MDAzQy9hPlxuXG5cblx1MDAzQy9kaXY+XG5cdTAwM0Mvc3Bhbj5cdTAwM0N1bD5cdTAwM0MvdWw+XHUwMDNDL2Rpdj5cblxuXHUwMDNDZGl2IGNsYXNzPVwibmF2Rm9vdGVyTGluZSBuYXZGb290ZXJMaW5rTGluZSBuYXZGb290ZXJEZXNjTGluZVwiIHJvbGU9XCJuYXZpZ2F0aW9uXCIgYXJpYS1sYWJlbD1cIk1vcmUgb24gQW1hem9uLmNvbVwiPlx1MDAzQ3RhYmxlIGNsYXNzPVwibmF2Rm9vdGVyTW9yZU9uQW1hem9uXCIgY2VsbHNwYWNpbmc9XCIwXCI+XHUwMDNDdGJvZHk+XHUwMDNDdHI+XG5cdTAwM0N0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+XHUwMDNDYSBocmVmPVwiaHR0cHM6Ly9tdXNpYy5hbWF6b24uY29tP3JlZj1kbV9hZmZfYW16X2NvbVwiIGNsYXNzPVwibmF2X2FcIj5BbWF6b24gTXVzaWNcdTAwM0Nicj4gXHUwMDNDc3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+U3RyZWFtIG1pbGxpb25zXHUwMDNDYnI+IG9mIHNvbmdzXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjU3BhY2VyXCIgc3R5bGU9XCJ3aWR0aDogNCVcIj5cdTAwM0MvdGQ+XG5cdTAwM0N0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+XHUwMDNDYSBocmVmPVwiaHR0cHM6Ly9hZHZlcnRpc2luZy5hbWF6b24uY29tLz9yZWY9Zm9vdGVyX2FkdnRzaW5nX2Ftem5fY29tXCIgY2xhc3M9XCJuYXZfYVwiPkFtYXpvbiBBZHZlcnRpc2luZ1x1MDAzQ2JyPiBcdTAwM0NzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5GaW5kLCBhdHRyYWN0LCBhbmRcdTAwM0Nicj4gZW5nYWdlIGN1c3RvbWVyc1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPlx1MDAzQ2EgaHJlZj1cIi9TVFJJTkctc3VibmF2X3ByaW1lcGhvdG9zX2FtYXpvbmRyaXZlL2I/aWU9VVRGOCZhbXA7bm9kZT0xNTU0NzEzMDAxMSZhbXA7cmVmXz11c19mb290ZXJfZHJpdmVcIiBjbGFzcz1cIm5hdl9hXCI+QW1hem9uIERyaXZlXHUwMDNDYnI+IFx1MDAzQ3NwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPkNsb3VkIHN0b3JhZ2VcdTAwM0Nicj4gZnJvbSBBbWF6b25cdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0MvdGQ+XG5cdTAwM0N0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NTcGFjZXJcIiBzdHlsZT1cIndpZHRoOiA0JVwiPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj5cdTAwM0NhIGhyZWY9XCJodHRwczovL3d3dy42cG0uY29tXCIgY2xhc3M9XCJuYXZfYVwiPjZwbVx1MDAzQ2JyPiBcdTAwM0NzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5TY29yZSBkZWFsc1x1MDAzQ2JyPiBvbiBmYXNoaW9uIGJyYW5kc1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vd3d3LmFiZWJvb2tzLmNvbVwiIGNsYXNzPVwibmF2X2FcIj5BYmVCb29rc1x1MDAzQ2JyPiBcdTAwM0NzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5Cb29rcywgYXJ0XHUwMDNDYnI+ICZhbXA7IGNvbGxlY3RpYmxlc1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vd3d3LmFjeC5jb20vXCIgY2xhc3M9XCJuYXZfYVwiPkFDWCBcdTAwM0Nicj4gXHUwMDNDc3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+QXVkaW9ib29rIFB1Ymxpc2hpbmdcdTAwM0Nicj4gTWFkZSBFYXN5XHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjU3BhY2VyXCIgc3R5bGU9XCJ3aWR0aDogNCVcIj5cdTAwM0MvdGQ+XG5cdTAwM0N0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+XHUwMDNDYSBocmVmPVwiaHR0cHM6Ly93d3cuYWxleGEuY29tXCIgY2xhc3M9XCJuYXZfYVwiPkFsZXhhXHUwMDNDYnI+IFx1MDAzQ3NwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPkFjdGlvbmFibGUgQW5hbHl0aWNzXHUwMDNDYnI+IGZvciB0aGUgV2ViXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDL3RkPlxuXHUwMDNDL3RyPlxuXHUwMDNDdHI+XHUwMDNDdGQ+Jm5ic3A7XHUwMDNDL3RkPlx1MDAzQy90cj5cblx1MDAzQ3RyPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPlx1MDAzQ2EgaHJlZj1cIi9idXNpbmVzcz9fZW5jb2Rpbmc9VVRGOCZhbXA7cmVmXz1mb290ZXJfcmV0YWlsX2IyYlwiIGNsYXNzPVwibmF2X2FcIj5BbWF6b24gQnVzaW5lc3NcdTAwM0Nicj4gXHUwMDNDc3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+RXZlcnl0aGluZyBGb3JcdTAwM0Nicj4gWW91ciBCdXNpbmVzc1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPlx1MDAzQ2EgaHJlZj1cIi9JbnRlcm5hdGlvbmFsLVNoaXBwaW5nLURpcmVjdC9iP2llPVVURjgmYW1wO25vZGU9MjMwNjU5MDExJmFtcDtyZWZfPWZvb3Rlcl9hbWF6b25nbG9iYWxcIiBjbGFzcz1cIm5hdl9hXCI+QW1hem9uR2xvYmFsXHUwMDNDYnI+IFx1MDAzQ3NwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPlNoaXAgT3JkZXJzXHUwMDNDYnI+IEludGVybmF0aW9uYWxseVx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPlx1MDAzQ2EgaHJlZj1cIi9zZXJ2aWNlcz9fZW5jb2Rpbmc9VVRGOCZhbXA7cmVmXz1mb290ZXJfc2VydmljZXNcIiBjbGFzcz1cIm5hdl9hXCI+SG9tZSBTZXJ2aWNlc1x1MDAzQ2JyPiBcdTAwM0NzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5IYW5kcGlja2VkIFByb3NcdTAwM0Nicj4gSGFwcGluZXNzIEd1YXJhbnRlZVx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbmluc3BpcmUuY29tLz9yZWY9YW1hem9uX2Zvb3RlclwiIGNsYXNzPVwibmF2X2FcIj5BbWF6b24gSW5zcGlyZVx1MDAzQ2JyPiBcdTAwM0NzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5EaWdpdGFsIEVkdWNhdGlvbmFsXHUwMDNDYnI+ICBSZXNvdXJjZXNcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0MvdGQ+XG5cdTAwM0N0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NTcGFjZXJcIiBzdHlsZT1cIndpZHRoOiA0JVwiPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj5cdTAwM0NhIGhyZWY9XCJodHRwczovL3JhcGlkcy5hbWF6b24uY29tLz9yZWY9cmFwaWRzX2FjcV9nYXRld2F5Zm9vdGVyXCIgY2xhc3M9XCJuYXZfYVwiPkFtYXpvbiBSYXBpZHNcdTAwM0Nicj4gXHUwMDNDc3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+RnVuIHN0b3JpZXMgZm9yXHUwMDNDYnI+ICBraWRzIG9uIHRoZSBnb1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vYXdzLmFtYXpvbi5jb20vd2hhdC1pcy1jbG91ZC1jb21wdXRpbmcvP3NjX2NoYW5uZWw9RUwmYW1wO3NjX2NhbXBhaWduPWFtYXpvbmZvb3RlclwiIGNsYXNzPVwibmF2X2FcIj5BbWF6b24gV2ViIFNlcnZpY2VzXHUwMDNDYnI+IFx1MDAzQ3NwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPlNjYWxhYmxlIENsb3VkXHUwMDNDYnI+IENvbXB1dGluZyBTZXJ2aWNlc1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vd3d3LmF1ZGlibGUuY29tXCIgY2xhc3M9XCJuYXZfYVwiPkF1ZGlibGVcdTAwM0Nicj4gXHUwMDNDc3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+TGlzdGVuIHRvIEJvb2tzICZhbXA7IE9yaWdpbmFsXHUwMDNDYnI+IEF1ZGlvIFBlcmZvcm1hbmNlc1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy90ZD5cblx1MDAzQy90cj5cblx1MDAzQ3RyPlx1MDAzQ3RkPiZuYnNwO1x1MDAzQy90ZD5cdTAwM0MvdHI+XG5cdTAwM0N0cj5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj5cdTAwM0NhIGhyZWY9XCJodHRwczovL3d3dy5ib29rZGVwb3NpdG9yeS5jb21cIiBjbGFzcz1cIm5hdl9hXCI+Qm9vayBEZXBvc2l0b3J5XHUwMDNDYnI+IFx1MDAzQ3NwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPkJvb2tzIFdpdGggRnJlZVx1MDAzQ2JyPiBEZWxpdmVyeSBXb3JsZHdpZGVcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0MvdGQ+XG5cdTAwM0N0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NTcGFjZXJcIiBzdHlsZT1cIndpZHRoOiA0JVwiPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj5cdTAwM0NhIGhyZWY9XCJodHRwczovL3d3dy5ib3hvZmZpY2Vtb2pvLmNvbS8/cmVmXz1hbXpuX25hdl9mdHJcIiBjbGFzcz1cIm5hdl9hXCI+Qm94IE9mZmljZSBNb2pvXHUwMDNDYnI+IFx1MDAzQ3NwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPkZpbmQgTW92aWVcdTAwM0Nicj4gQm94IE9mZmljZSBEYXRhXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjU3BhY2VyXCIgc3R5bGU9XCJ3aWR0aDogNCVcIj5cdTAwM0MvdGQ+XG5cdTAwM0N0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+XHUwMDNDYSBocmVmPVwiaHR0cHM6Ly93d3cuY29taXhvbG9neS5jb21cIiBjbGFzcz1cIm5hdl9hXCI+Q29taVhvbG9neVx1MDAzQ2JyPiBcdTAwM0NzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5UaG91c2FuZHMgb2ZcdTAwM0Nicj4gRGlnaXRhbCBDb21pY3NcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0MvdGQ+XG5cdTAwM0N0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NTcGFjZXJcIiBzdHlsZT1cIndpZHRoOiA0JVwiPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj5cdTAwM0NhIGhyZWY9XCJodHRwczovL3d3dy5jcmVhdGVzcGFjZS5jb21cIiBjbGFzcz1cIm5hdl9hXCI+Q3JlYXRlU3BhY2VcdTAwM0Nicj4gXHUwMDNDc3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+SW5kaWUgUHJpbnQgUHVibGlzaGluZ1x1MDAzQ2JyPiBNYWRlIEVhc3lcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0MvdGQ+XG5cdTAwM0N0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NTcGFjZXJcIiBzdHlsZT1cIndpZHRoOiA0JVwiPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj5cdTAwM0NhIGhyZWY9XCJodHRwczovL3d3dy5kcHJldmlldy5jb21cIiBjbGFzcz1cIm5hdl9hXCI+RFBSZXZpZXdcdTAwM0Nicj4gXHUwMDNDc3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+RGlnaXRhbFx1MDAzQ2JyPiBQaG90b2dyYXBoeVx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vd3d3LmVhc3RkYW5lLmNvbS93ZWxjb21lXCIgY2xhc3M9XCJuYXZfYVwiPkVhc3QgRGFuZVx1MDAzQ2JyPiBcdTAwM0NzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5EZXNpZ25lciBNZW4nc1x1MDAzQ2JyPiBGYXNoaW9uXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjU3BhY2VyXCIgc3R5bGU9XCJ3aWR0aDogNCVcIj5cdTAwM0MvdGQ+XG5cdTAwM0N0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+XHUwMDNDYSBocmVmPVwiaHR0cHM6Ly93d3cuZmFicmljLmNvbVwiIGNsYXNzPVwibmF2X2FcIj5GYWJyaWNcdTAwM0Nicj4gXHUwMDNDc3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+U2V3aW5nLCBRdWlsdGluZ1x1MDAzQ2JyPiAmYW1wOyBLbml0dGluZ1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy90ZD5cblx1MDAzQy90cj5cblx1MDAzQ3RyPlx1MDAzQ3RkPiZuYnNwO1x1MDAzQy90ZD5cdTAwM0MvdHI+XG5cdTAwM0N0cj5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj5cdTAwM0NhIGhyZWY9XCJodHRwczovL3d3dy5nb29kcmVhZHMuY29tXCIgY2xhc3M9XCJuYXZfYVwiPkdvb2RyZWFkc1x1MDAzQ2JyPiBcdTAwM0NzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5Cb29rIHJldmlld3NcdTAwM0Nicj4gJmFtcDsgcmVjb21tZW5kYXRpb25zXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjU3BhY2VyXCIgc3R5bGU9XCJ3aWR0aDogNCVcIj5cdTAwM0MvdGQ+XG5cdTAwM0N0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+XHUwMDNDYSBocmVmPVwiaHR0cHM6Ly93d3cuaW1kYi5jb21cIiBjbGFzcz1cIm5hdl9hXCI+SU1EYlx1MDAzQ2JyPiBcdTAwM0NzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5Nb3ZpZXMsIFRWXHUwMDNDYnI+ICZhbXA7IENlbGVicml0aWVzXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjU3BhY2VyXCIgc3R5bGU9XCJ3aWR0aDogNCVcIj5cdTAwM0MvdGQ+XG5cdTAwM0N0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+XHUwMDNDYSBocmVmPVwiaHR0cHM6Ly9wcm8uaW1kYi5jb20/cmVmXz1hbXpuX25hdl9mdHJcIiBjbGFzcz1cIm5hdl9hXCI+SU1EYlByb1x1MDAzQ2JyPiBcdTAwM0NzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5HZXQgSW5mbyBFbnRlcnRhaW5tZW50XHUwMDNDYnI+IFByb2Zlc3Npb25hbHMgTmVlZFx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8va2RwLmFtYXpvbi5jb21cIiBjbGFzcz1cIm5hdl9hXCI+S2luZGxlIERpcmVjdCBQdWJsaXNoaW5nXHUwMDNDYnI+IFx1MDAzQ3NwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPkluZGllIERpZ2l0YWwgUHVibGlzaGluZ1x1MDAzQ2JyPiBNYWRlIEVhc3lcblx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vdmlkZW9kaXJlY3QuYW1hem9uLmNvbS9ob21lL2xhbmRpbmdcIiBjbGFzcz1cIm5hdl9hXCI+UHJpbWUgVmlkZW8gRGlyZWN0XHUwMDNDYnI+IFx1MDAzQ3NwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPlZpZGVvIERpc3RyaWJ1dGlvblx1MDAzQ2JyPiBNYWRlIEVhc3lcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0MvdGQ+XG5cdTAwM0N0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NTcGFjZXJcIiBzdHlsZT1cIndpZHRoOiA0JVwiPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj5cdTAwM0NhIGhyZWY9XCJodHRwczovL3d3dy5zaG9wYm9wLmNvbS93ZWxjb21lXCIgY2xhc3M9XCJuYXZfYVwiPlNob3Bib3BcdTAwM0Nicj4gXHUwMDNDc3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+RGVzaWduZXJcdTAwM0Nicj4gRmFzaGlvbiBCcmFuZHNcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0MvdGQ+XG5cdTAwM0N0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NTcGFjZXJcIiBzdHlsZT1cIndpZHRoOiA0JVwiPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj5cdTAwM0NhIGhyZWY9XCJodHRwczovL3d3dy53b290LmNvbS9cIiBjbGFzcz1cIm5hdl9hXCI+V29vdCFcdTAwM0Nicj4gXHUwMDNDc3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+RGVhbHMgYW5kIFx1MDAzQ2JyPiBTaGVuYW5pZ2Fuc1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy90ZD5cblx1MDAzQy90cj5cblx1MDAzQ3RyPlx1MDAzQ3RkPiZuYnNwO1x1MDAzQy90ZD5cdTAwM0MvdHI+XG5cdTAwM0N0cj5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj5cdTAwM0NhIGhyZWY9XCJodHRwczovL3d3dy56YXBwb3MuY29tXCIgY2xhc3M9XCJuYXZfYVwiPlphcHBvc1x1MDAzQ2JyPiBcdTAwM0NzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5TaG9lcyAmYW1wO1x1MDAzQ2JyPiBDbG90aGluZ1x1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vcmluZy5jb21cIiBjbGFzcz1cIm5hdl9hXCI+UmluZ1x1MDAzQ2JyPiBcdTAwM0NzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5TbWFydCBIb21lXHUwMDNDYnI+IFNlY3VyaXR5IFN5c3RlbXNcblx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vZWVyby5jb20vXCIgY2xhc3M9XCJuYXZfYVwiPmVlcm8gV2lGaVx1MDAzQ2JyPiBcdTAwM0NzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5TdHJlYW0gNEsgVmlkZW9cdTAwM0Nicj4gaW4gRXZlcnkgUm9vbVx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPlx1MDAzQ2EgaHJlZj1cImh0dHBzOi8vc2hvcC5yaW5nLmNvbS9wYWdlcy9uZWlnaGJvcnMtYXBwXCIgY2xhc3M9XCJuYXZfYVwiPk5laWdoYm9ycyBBcHAgXHUwMDNDYnI+IFx1MDAzQ3NwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPiBSZWFsLVRpbWUgQ3JpbWVcdTAwM0Nicj4gJmFtcDsgU2FmZXR5IEFsZXJ0c1xuXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjU3BhY2VyXCIgc3R5bGU9XCJ3aWR0aDogNCVcIj5cdTAwM0MvdGQ+XG5cdTAwM0N0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+XHUwMDNDYSBocmVmPVwiL2I/aWU9VVRGOCZhbXA7bm9kZT0xNDQ5ODY5MDAxMSZhbXA7cmVmXz1hbXpuX25hdl9mdHJfc3dhXCIgY2xhc3M9XCJuYXZfYVwiPlN1YnNjcmliZSB3aXRoIEFtYXpvblx1MDAzQ2JyPiBcdTAwM0NzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5EaXNjb3ZlciAmYW1wOyB0cnlcdTAwM0Nicj4gc3Vic2NyaXB0aW9uIHNlcnZpY2VzXHUwMDNDL3NwYW4+XHUwMDNDL2E+XHUwMDNDL3RkPlxuXHUwMDNDdGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjU3BhY2VyXCIgc3R5bGU9XCJ3aWR0aDogNCVcIj5cdTAwM0MvdGQ+XG5cdTAwM0N0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+XHUwMDNDYSBocmVmPVwiaHR0cHM6Ly93d3cucGlsbHBhY2suY29tXCIgY2xhc3M9XCJuYXZfYVwiPlBpbGxQYWNrXHUwMDNDYnI+IFx1MDAzQ3NwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPlBoYXJtYWN5IFNpbXBsaWZpZWRcdTAwM0Mvc3Bhbj5cdTAwM0MvYT5cdTAwM0MvdGQ+XG5cdTAwM0N0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NTcGFjZXJcIiBzdHlsZT1cIndpZHRoOiA0JVwiPlx1MDAzQy90ZD5cblx1MDAzQ3RkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj5cdTAwM0NhIGhyZWY9XCIvYW1hem9uc2Vjb25kY2hhbmNlP19lbmNvZGluZz1VVEY4JmFtcDtyZWZfPWZvb3Rlcl9hc2NcIiBjbGFzcz1cIm5hdl9hXCI+QW1hem9uIFNlY29uZCBDaGFuY2VcdTAwM0Nicj4gXHUwMDNDc3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+UGFzcyBpdCBvbiwgdHJhZGUgaXQgaW4sXHUwMDNDYnI+IGdpdmUgaXQgYSBzZWNvbmQgbGlmZVx1MDAzQy9zcGFuPlx1MDAzQy9hPlx1MDAzQy90ZD5cblx1MDAzQy90cj5cblx1MDAzQy90Ym9keT5cdTAwM0MvdGFibGU+XHUwMDNDL2Rpdj5cbiAgIFxuXHUwMDNDZGl2IGNsYXNzPVwibmF2Rm9vdGVyTGluZSBuYXZGb290ZXJMaW5rTGluZSBuYXZGb290ZXJQYWRJdGVtTGluZSBuYXZGb290ZXJDb3B5cmlnaHRcIj5cdTAwM0N1bD5cdTAwM0NsaSBjbGFzcz1cIm5hdl9maXJzdFwiPlx1MDAzQ2EgaHJlZj1cIi9ncC9oZWxwL2N1c3RvbWVyL2Rpc3BsYXkuaHRtbD9pZT1VVEY4JmFtcDtub2RlSWQ9NTA4MDg4JmFtcDtyZWZfPWZvb3Rlcl9jb3VcIiBjbGFzcz1cIm5hdl9hXCI+Q29uZGl0aW9ucyBvZiBVc2VcdTAwM0MvYT5cdTAwM0MvbGk+XHUwMDNDbGk+XHUwMDNDYSBocmVmPVwiL2dwL2hlbHAvY3VzdG9tZXIvZGlzcGxheS5odG1sP2llPVVURjgmYW1wO25vZGVJZD00Njg0OTYmYW1wO3JlZl89Zm9vdGVyX3ByaXZhY3lcIiBjbGFzcz1cIm5hdl9hXCI+UHJpdmFjeSBOb3RpY2VcdTAwM0MvYT5cdTAwM0MvbGk+XHUwMDNDbGk+XHUwMDNDYSBocmVmPVwiL2ludGVyZXN0YmFzZWRhZHMvcmVmPWZvb3Rlcl9pYmFcIiBjbGFzcz1cIm5hdl9hXCI+SW50ZXJlc3QtQmFzZWQgQWRzXHUwMDNDL2E+XHUwMDNDL2xpPlx1MDAzQ2xpIGNsYXNzPVwibmF2X2xhc3RcIj7CqSAxOTk2LTIwMTksIEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXNcdTAwM0MvbGk+XHUwMDNDL3VsPlx1MDAzQy9kaXY+XG5cdTAwM0MvZGl2Plx1MDAzQyEtLSB3aGZoLXE3YWhxMW5DbGZLM3VLL0J4TzVsS2xtZFBwaGRmSzNFY25sUFcxRkxpdlN1a1JwNmxOOEJ5bWZqYlVoZG1IZURJM2RIbG80VE5yQT0gcmlkLTQ3NUUzNEpRVjlGTlBISjlTU1REIC0tPlxuXHUwMDNDZGl2IGlkPVwic2lzX3BpeGVsX3IyXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgc3R5bGU9XCJoZWlnaHQ6MXB4OyBwb3NpdGlvbjogYWJzb2x1dGU7IGxlZnQ6IC0xMDAwMDAwcHg7IHRvcDogLTEwMDAwMDBweDtcIj5cdTAwM0MvZGl2Plx1MDAzQ3NjcmlwdD4oZnVuY3Rpb24oYSxiKXthLmF0dGFjaEV2ZW50P2EuYXR0YWNoRXZlbnQoXCJvbmxvYWRcIixiKTphLmFkZEV2ZW50TGlzdGVuZXImJmEuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIixiLCExKX0pKHdpbmRvdyxmdW5jdGlvbigpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt2YXIgZWw9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzaXNfcGl4ZWxfcjJcIik7ZWwmJihlbC5pbm5lckhUTUw9J1x1MDAzQ2lmcmFtZSBpZD1cIkRBc2lzXCIgc3JjPVwiLy9zLmFtYXpvbi1hZHN5c3RlbS5jb20vaXUzP2Q9YW1hem9uLmNvbSZzbG90PW5hdkZvb3RlciZhMj0wMTAxNWM4ZmRjMWVkZDkxNDhlZjgzZTA5ZTI5NDdkYmE0ZjYyZmYxN2M3MDFmMTNhYjg3YjQ3M2ZjNjA5NmNhYTA1MSZvbGRfb289MCZ0cz0xNTY5Nzk0MTg3ODg4JnM9QVZ3RmhYenMyNTBWQXJrVHhWb3M0Y29wd3FtVlBSSnRKbEc5ejVTNC1Tbm0mY2I9MTU2OTc5NDE4Nzg4OFwiIHdpZHRoPVwiMVwiIGhlaWdodD1cIjFcIiBmcmFtZWJvcmRlcj1cIjBcIiBtYXJnaW53aWR0aD1cIjBcIiBtYXJnaW5oZWlnaHQ9XCIwXCIgc2Nyb2xsaW5nPVwibm9cIj5cdTAwM0MvaWZyYW1lPicpfSwzMDApfSk7XHUwMDNDL3NjcmlwdD5cdTAwM0MhLS0gZm9vdGVyIHRpbHUgLS0+XG5cblxuXHUwMDNDIS0tIHNwOmZlYXR1cmU6YW1hem9uLXBheS1pZnJhbWUgLS0+XG5cdTAwM0NkaXYgaWQ9XCJhcGF5cHhcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBzdHlsZT1cImhlaWdodDoxcHg7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgbGVmdDogLTEwMDAwMDBweDsgdG9wOiAtMTAwMDAwMHB4O1wiPlx1MDAzQy9kaXY+XHUwMDNDc2NyaXB0PihmdW5jdGlvbih3LHQpe3cuYXR0YWNoRXZlbnQ/dy5hdHRhY2hFdmVudCgnb25sb2FkJyx0KTp3LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLHQsICExKX0pKHdpbmRvdyxmdW5jdGlvbigpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXBheXB4JykuaW5uZXJIVE1MPSdcdTAwM0NpZnJhbWUgaWQ9XFwnYXBheXB4ZnJhbWVcXCcgc3JjPVxcJ2h0dHBzOi8vY29pbi5hbWF6b25wYXkuY29tL3JiP2EyPTAxMDExMmI2MzE4ZWRmZTgyOTIwZGNlODgxYzhiYTQyNTVkZDMzZWZjNjk2MzUwYWNhNzUzNTM0YWQ4OWQyNTk2NmM2JmQ9d3d3LmFtYXpvbi5jb21cXCcgZnJhbWVib3JkZXI9MCB3aWR0aD0wIGhlaWdodD0wPid9LDMwMCl9KTtcdTAwM0Mvc2NyaXB0Plx1MDAzQyEtLSBzcDplbmQtZmVhdHVyZTphbWF6b24tcGF5LWlmcmFtZSAtLT5cblx1MDAzQyEtLSBzcDpmZWF0dXJlOmFzc29jaWF0ZS10cmFja2VyLXBpeGVsIC0tPlxuXHUwMDNDaW1nIHNyYz1cImh0dHBzOi8vYXNzb2MtbmEuYXNzb2NpYXRlcy1hbWF6b24uY29tL2FiaWQvdW0/cz0xNDUtODk3NTM5MC01MDY0MTEzJmFtcDttPUFUVlBES0lLWDBERVJcIiBzdHlsZT1cImRpc3BsYXk6bm9uZVwiIGFsdD1cIlwiPlx1MDAzQyEtLSBzcDplbmQtZmVhdHVyZTphc3NvY2lhdGUtdHJhY2tlci1waXhlbCAtLT5cblx1MDAzQ3NjcmlwdD5cbih3aW5kb3cuQW1hem9uVUlQYWdlSlMgPyBBbWF6b25VSVBhZ2VKUyA6IFApLndoZW4oJ2FmdGVyTG9hZCcpLmV4ZWN1dGUoZnVuY3Rpb24oKSB7XG4gICh3aW5kb3cuQW1hem9uVUlQYWdlSlMgPyBBbWF6b25VSVBhZ2VKUyA6IFApLmxvYWQuanMoJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS8yMUIzNHdKTXpLTC5qcz9BVUlDbGllbnRzL01TQVZvd2Vsc0phdmFzY3JpcHRBc3NldHMnKTtcbn0pO1xuXHUwMDNDL3NjcmlwdD5cblx1MDAzQ2RpdiBpZD1cImJlXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW47XCI+XHUwMDNDZm9ybSBuYW1lPVwidWVfYmFja2RldGVjdFwiIGFjdGlvbj1cImdldFwiPlx1MDAzQ2lucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwidWVfYmFja1wiIHZhbHVlPVwiMlwiPlx1MDAzQy9mb3JtPlxuXG5cblx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG53aW5kb3cudWVfaWJlID0gKHdpbmRvdy51ZV9pYmUgfHwgMCkgKyAxO1xuaWYgKHdpbmRvdy51ZV9pYmUgPT09IDEpIHtcblxuKGZ1bmN0aW9uKGUsYyl7ZnVuY3Rpb24gaChiLGEpe2YucHVzaChbYixhXSl9ZnVuY3Rpb24gZyhiLGEpe2lmKGIpe3ZhciBjPWUuaGVhZHx8ZS5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF18fGUuZG9jdW1lbnRFbGVtZW50LGQ9ZS5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO2QuYXN5bmM9XCJhc3luY1wiO2Quc3JjPWI7ZC5zZXRBdHRyaWJ1dGUoXCJjcm9zc29yaWdpblwiLFwiYW5vbnltb3VzXCIpO2EmJmEub25lcnJvciYmKGQub25lcnJvcj1hLm9uZXJyb3IpO2EmJmEub25sb2FkJiYoZC5vbmxvYWQ9YS5vbmxvYWQpO2MuaW5zZXJ0QmVmb3JlKGQsYy5maXJzdENoaWxkKX19ZnVuY3Rpb24gaygpe3VlLnVlbHM9Zztmb3IodmFyIGI9MDtiXHUwMDNDZi5sZW5ndGg7YisrKXt2YXIgYT1mW2JdO2coYVswXSxhWzFdKX11ZS5kZWZmZXJlZD0xfXZhciBmPVtdO2MudWUmJih1ZS51ZWxzPWgsYy51ZS5hdHRhY2gmJmMudWUuYXR0YWNoKFwibG9hZFwiLGspKX0pKGRvY3VtZW50LHdpbmRvdyk7XG5cblxuaWYgKHdpbmRvdy51ZSAmJiB3aW5kb3cudWUudWVscykge1xuICAgICAgICB2YXIgY2VsX3dpZGdldHMgPSBbIHsgXCJjXCI6XCJjZWx3aWRnZXRcIiB9LHsgXCJzXCI6XCIjbmF2LXN3bXNsb3QgPiBkaXZcIiwgXCJpZF9nZW5cIjpmdW5jdGlvbihlbGVtLCBpbmRleCl7IHJldHVybiAnbmF2X3NpdGV3aWRlX21zZyc7IH0gfSx7IFwiY1wiOlwiZmVhdHVyZVwiIH0seyBcImlkXCI6XCJkZXRhaWwtaWxtX2RpdlwiIH0gXTtcblxuICAgICAgICAgICAgICAgIHVlLnVlbHMoXCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvQVVJQ2xpZW50cy9DbGllbnRTaWRlTWV0cmljc0FVSUphdmFzY3JpcHRAanNlcnJvcnNGb3Jlc3Rlci4xMGYyNTU5ZTkzZWM1ODlkOTI1MDkzMThhN2UyYWNiYWM3NGMzNDNhLl9WMl8uanNcIik7XG59XG52YXIgdWVfbWJsPXVlX2NzbS51ZS5leGVjKGZ1bmN0aW9uKGUsYSl7ZnVuY3Rpb24gbChmKXtiPWZ8fHt9O2EuQU1aTlBlcmZvcm1hbmNlPWI7Yi50cmFuc2l0aW9uPWIudHJhbnNpdGlvbnx8e307Yi50aW1pbmc9Yi50aW1pbmd8fHt9O2UudWUuZXhlYyhtLFwiY3NtLWFuZHJvaWQtY2hlY2tcIikoKSYmYi50YWdzIGluc3RhbmNlb2YgQXJyYXkmJihmPS0xIT1iLnRhZ3MuaW5kZXhPZihcInVzZXNBcHBTdGFydFRpbWVcIil8fGIudHJhbnNpdGlvbi50eXBlPyFiLnRyYW5zaXRpb24udHlwZSYmLTFcdTAwM0NiLnRhZ3MuaW5kZXhPZihcInVzZXNBcHBTdGFydFRpbWVcIik/XCJ3YXJtLXN0YXJ0XCI6dm9pZCAwOlwidmlldy10cmFuc2l0aW9uXCIsZiYmKGIudHJhbnNpdGlvbi50eXBlPWYpKTtcInJlbG9hZFwiPT09Yy5fbnQmJmUudWVfb3JjdHx8XCJpbnRyYXBhZ2UtdHJhbnNpdGlvblwiPT09Yy5fbnQ/YS5wZXJmb3JtYW5jZSYmcGVyZm9ybWFuY2UudGltaW5nJiZwZXJmb3JtYW5jZS50aW1pbmcubmF2aWdhdGlvblN0YXJ0P1xuYi50aW1pbmcudHJhbnNpdGlvblN0YXJ0PWEucGVyZm9ybWFuY2UudGltaW5nLm5hdmlnYXRpb25TdGFydDpkZWxldGUgYi50aW1pbmcudHJhbnNpdGlvblN0YXJ0OlwidW5kZWZpbmVkXCI9PT10eXBlb2YgYy5fbnQmJmEucGVyZm9ybWFuY2UmJnBlcmZvcm1hbmNlLnRpbWluZyYmcGVyZm9ybWFuY2UudGltaW5nLm5hdmlnYXRpb25TdGFydCYmYS5oaXN0b3J5JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5IaXN0b3J5JiZcIm9iamVjdFwiPT09dHlwZW9mIGEuaGlzdG9yeSYmaGlzdG9yeS5sZW5ndGgmJjEhPWhpc3RvcnkubGVuZ3RoJiYoYi50aW1pbmcudHJhbnNpdGlvblN0YXJ0PWEucGVyZm9ybWFuY2UudGltaW5nLm5hdmlnYXRpb25TdGFydCk7Zj1iLnRyYW5zaXRpb247dmFyIGQ7ZD1jLl9udD9jLl9udDp2b2lkIDA7Zi5zdWJUeXBlPWQ7YS51ZSYmYS51ZS50YWcmJmEudWUudGFnKFwiaGFzLUFNWk5QZXJmb3JtYW5jZVwiKTtjLmlzbCYmYS51ZXgmJnVleChcImF0XCIsXCJjc20tdGltaW5nXCIpO1xubigpfWZ1bmN0aW9uIHAoYil7YS51ZSYmYS51ZS5jb3VudCYmYS51ZS5jb3VudChcImNzbS1jb3Jkb3ZhLXBsdWdpbi1mYWlsZWRcIiwxKX1mdW5jdGlvbiBtKCl7cmV0dXJuIGEud2ViY2xpZW50JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS53ZWJjbGllbnQuZ2V0UmVhbENsaWNrVGltZT9hLmNvcmRvdmEmJmEuY29yZG92YS5wbGF0Zm9ybUlkJiZcImlvc1wiPT1hLmNvcmRvdmEucGxhdGZvcm1JZD8hMTohMDohMX1mdW5jdGlvbiBuKCl7dHJ5e1AucmVnaXN0ZXIoXCJBTVpOUGVyZm9ybWFuY2VcIixmdW5jdGlvbigpe3JldHVybiBifSl9Y2F0Y2goYSl7fX1mdW5jdGlvbiBoKCl7aWYoIWIpcmV0dXJuXCJcIjt1ZV9tYmwuY250PW51bGw7Zm9yKHZhciBhPWIudGltaW5nLGQ9Yi50cmFuc2l0aW9uLGE9W1wibXRzXCIsayhhLnRyYW5zaXRpb25TdGFydCksXCJtcHNcIixrKGEucHJvY2Vzc1N0YXJ0KSxcIm10dFwiLGQudHlwZSxcIm10c3RcIixkLnN1YlR5cGUsXCJtdGx0XCIsZC5sYXVuY2hUeXBlXSxkPVwiXCIsYz0wO2NcdTAwM0NcbmEubGVuZ3RoO2MrPTIpe3ZhciBlPWFbY10sZz1hW2MrMV07XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBnJiYoZCs9XCImXCIrZStcIj1cIitnKX1yZXR1cm4gZH1mdW5jdGlvbiBrKGEpe2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgYSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBnKXJldHVybiBhLWd9ZnVuY3Rpb24gcShhLGMpe2ImJihnPWMsYi50aW1pbmcudHJhbnNpdGlvblN0YXJ0PWEsYi50cmFuc2l0aW9uLnR5cGU9XCJ2aWV3LXRyYW5zaXRpb25cIixiLnRyYW5zaXRpb24uc3ViVHlwZT1cImFqYXgtdHJhbnNpdGlvblwiLGIudHJhbnNpdGlvbi5sYXVuY2hUeXBlPVwibm9ybWFsXCIsdWVfbWJsLmNudD1oKX12YXIgYz1lLnVlfHx7fSxnPWUudWVfdDAsYjtpZihhLlAmJmEuUC53aGVuJiZhLlAucmVnaXN0ZXIpcmV0dXJuIGEuUC53aGVuKFwiQ1NNUGx1Z2luXCIpLmV4ZWN1dGUoZnVuY3Rpb24oYSl7YS5idWlsZEFNWk5QZXJmb3JtYW5jZSYmYS5idWlsZEFNWk5QZXJmb3JtYW5jZSh7c3VjY2Vzc0NhbGxiYWNrOmwsXG5mYWlsQ2FsbGJhY2s6cH0pfSkse2NudDpoLGFqYXg6cX19LFwibW9iaWxlLXRpbWluZ1wiKSh1ZV9jc20sd2luZG93KTtcblxuKGZ1bmN0aW9uKGQpe2QuX3Vlc3M9ZnVuY3Rpb24oKXt2YXIgYT1cIlwiO3NjcmVlbiYmc2NyZWVuLndpZHRoJiZzY3JlZW4uaGVpZ2h0JiYoYSs9XCImc3c9XCIrc2NyZWVuLndpZHRoK1wiJnNoPVwiK3NjcmVlbi5oZWlnaHQpO3ZhciBiPWZ1bmN0aW9uKGEpe3ZhciBiPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudFtcImNsaWVudFwiK2FdO3JldHVyblwiQ1NTMUNvbXBhdFwiPT09ZG9jdW1lbnQuY29tcGF0TW9kZSYmYnx8ZG9jdW1lbnQuYm9keVtcImNsaWVudFwiK2FdfHxifSxjPWIoXCJXaWR0aFwiKSxiPWIoXCJIZWlnaHRcIik7YyYmYiYmKGErPVwiJnZ3PVwiK2MrXCImdmg9XCIrYik7cmV0dXJuIGF9fSkodWVfY3NtKTtcblxuKGZ1bmN0aW9uKGEpe3ZhciBiPWRvY3VtZW50LnVlX2JhY2tkZXRlY3Q7YiYmYi51ZV9iYWNrJiZhLnVlJiYoYS51ZS5iZmluaT1iLnVlX2JhY2sudmFsdWUpO2EudWV0JiZhLnVldChcImJlXCIpO2Eub25MZEVuZCYmKHdpbmRvdy5hZGRFdmVudExpc3RlbmVyP3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLGEub25MZEVuZCwhMSk6d2luZG93LmF0dGFjaEV2ZW50JiZ3aW5kb3cuYXR0YWNoRXZlbnQoXCJvbmxvYWRcIixhLm9uTGRFbmQpKTthLnVlaCYmYS51ZWgoMCx3aW5kb3csXCJsb2FkXCIsYS5vbkxkLDEpO2EudWUmJmEudWUudGFnJiYoYS51ZV9mdXJsJiZhLnVlX2Z1cmwuc3BsaXQ/KGI9YS51ZV9mdXJsLnNwbGl0KFwiLlwiKSkmJmJbMF0mJmEudWUudGFnKGJbMF0pOmEudWUudGFnKFwibm9mbHNcIikpfSkodWVfY3NtKTtcbihmdW5jdGlvbihnLGgpe2Z1bmN0aW9uIGQoYSxkKXt2YXIgYj17fTtpZighZXx8IWYpdHJ5e3ZhciBjPWguc2Vzc2lvblN0b3JhZ2U7Yz9hJiYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkP2Muc2V0SXRlbShhLGQpOmIudmFsPWMuZ2V0SXRlbShhKSk6Zj0xfWNhdGNoKGcpe2U9MX1lJiYoYi5lPTEpO3JldHVybiBifXZhciBiPWcudWV8fHt9LGE9XCJcIixmLGUsYyxhPWQoXCJjc210aWRcIik7Zj9hPVwiTkFcIjphLmU/YT1cIkVUXCI6KGE9YS52YWwsYXx8KGE9Yi5vaWR8fFwiTklcIixkKFwiY3NtdGlkXCIsYSkpLGM9ZChiLm9pZCksYy5lfHwoYy52YWw9Yy52YWx8fDAsZChiLm9pZCxjLnZhbCsxKSksYi5zc3c9ZCk7Yi50YWJpZD1hfSkodWVfY3NtLHdpbmRvdyk7XG51ZV9jc20udWUuZXhlYyhmdW5jdGlvbihlLGYpe3ZhciBhPWUudWV8fHt9LGI9YS5fd2xvLGQ7aWYoYS5zc3cpe2Q9YS5zc3coXCJDU01fcHJldmlvdXNVUkxcIikudmFsO3ZhciBjPWYubG9jYXRpb24sYj1iP2I6YyYmYy5ocmVmP2MuaHJlZi5zcGxpdChcIiNcIilbMF06dm9pZCAwO2M9KGJ8fFwiXCIpPT09YS5zc3coXCJDU01fcHJldmlvdXNVUkxcIikudmFsOyFjJiZiJiZhLnNzdyhcIkNTTV9wcmV2aW91c1VSTFwiLGIpO2Q9Yz9cInJlbG9hZFwiOmQ/XCJpbnRyYXBhZ2UtdHJhbnNpdGlvblwiOlwiZmlyc3Qtdmlld1wifWVsc2UgZD1cInVua25vd25cIjthLl9udD1kfSxcIk5hdlR5cGVNb2R1bGVcIikodWVfY3NtLHdpbmRvdyk7XG51ZV9jc20udWUuZXhlYyhmdW5jdGlvbihjLGEpe2Z1bmN0aW9uIGcoYSl7YS5ydW4oZnVuY3Rpb24oZSl7ZC50YWcoXCJjc20tZmVhdHVyZS1cIithLm5hbWUrXCI6XCIrZSk7ZC5pc2wmJmMudWV4KFwiYXRcIil9KX1pZihhLmFkZEV2ZW50TGlzdGVuZXIpZm9yKHZhciBkPWMudWV8fHt9LGY9W3tuYW1lOlwidG91Y2gtZW5hYmxlZFwiLHJ1bjpmdW5jdGlvbihiKXt2YXIgZT1mdW5jdGlvbigpe2EucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIixjLCEwKTthLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIixkLCEwKX0sYz1mdW5jdGlvbigpe2IoXCJ0cnVlXCIpO2UoKX0sZD1mdW5jdGlvbigpe2IoXCJmYWxzZVwiKTtlKCl9O2EuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIixjLCEwKTthLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIixkLCEwKX19XSxiPTA7Ylx1MDAzQ2YubGVuZ3RoO2IrKylnKGZbYl0pfSxcImNzbS1mZWF0dXJlc1wiKSh1ZV9jc20sd2luZG93KTtcblxuXG4oZnVuY3Rpb24oYixjKXt2YXIgYT1jLmltYWdlczthJiZhLmxlbmd0aCYmYi51ZS5jb3VudChcInRvdGFsSW1hZ2VzXCIsYS5sZW5ndGgpfSkodWVfY3NtLGRvY3VtZW50KTtcbihmdW5jdGlvbihiKXtmdW5jdGlvbiBjKCl7dmFyIGQ9W107YS5sb2cmJmEubG9nLmlzU3R1YiYmYS5sb2cucmVwbGF5KGZ1bmN0aW9uKGEpe2UoZCxhKX0pO2EuY2xvZyYmYS5jbG9nLmlzU3R1YiYmYS5jbG9nLnJlcGxheShmdW5jdGlvbihhKXtlKGQsYSl9KTtkLmxlbmd0aCYmKGEuX2ZsaHMrPTEsbihkKSxwKGQpKX1mdW5jdGlvbiBnKCl7YS5sb2cmJmEubG9nLmlzU3R1YiYmKGEub25mbHVzaCYmYS5vbmZsdXNoLnJlcGxheSYmYS5vbmZsdXNoLnJlcGxheShmdW5jdGlvbihhKXthWzBdKCl9KSxhLm9udW5sb2FkJiZhLm9udW5sb2FkLnJlcGxheSYmYS5vbnVubG9hZC5yZXBsYXkoZnVuY3Rpb24oYSl7YVswXSgpfSksYygpKX1mdW5jdGlvbiBlKGQsYil7dmFyIGM9YlsxXSxmPWJbMF0sZT17fTthLl9scG5bY109KGEuX2xwbltjXXx8MCkrMTtlW2NdPWY7ZC5wdXNoKGUpfWZ1bmN0aW9uIG4oYil7cSYmKGEuX2xwbi5jc209KGEuX2xwbi5jc218fDApKzEsYi5wdXNoKHtjc206e2s6XCJjaGtcIixcbmY6YS5fZmxocyxsOmEuX2xwbixzOlwiaW5sblwifX0pKX1mdW5jdGlvbiBwKGEpe2lmKGgpYT1rKGEpLGIubmF2aWdhdG9yLnNlbmRCZWFjb24obCxhKTtlbHNle2E9ayhhKTt2YXIgYz1uZXcgYltmXTtjLm9wZW4oXCJQT1NUXCIsbCwhMCk7Yy5zZXRSZXF1ZXN0SGVhZGVyJiZjLnNldFJlcXVlc3RIZWFkZXIoXCJDb250ZW50LXR5cGVcIixcInRleHQvcGxhaW5cIik7Yy5zZW5kKGEpfX1mdW5jdGlvbiBrKGEpe3JldHVybiBKU09OLnN0cmluZ2lmeSh7cmlkOmIudWVfaWQsc2lkOmIudWVfc2lkLG1pZDpiLnVlX21pZCxta3Q6Yi51ZV9ta3Qsc246Yi51ZV9zbixyZXFzOmF9KX12YXIgZj1cIlhNTEh0dHBSZXF1ZXN0XCIscT0xPT09Yi51ZV9kZHEsYT1iLnVlLHI9YltmXSYmXCJ3aXRoQ3JlZGVudGlhbHNcImluIG5ldyBiW2ZdLGg9Yi5uYXZpZ2F0b3ImJmIubmF2aWdhdG9yLnNlbmRCZWFjb24sbD1cIi8vXCIrYi51ZV9mdXJsK1wiLzEvYmF0Y2gvMS9PRS9cIixtPWIudWVfZmNpX2Z0fHw1RTM7YSYmKHJ8fGgpJiZcbihhLl9mbGhzPWEuX2ZsaHN8fDAsYS5fbHBuPWEuX2xwbnx8e30sYS5hdHRhY2gmJihhLmF0dGFjaChcImJlZm9yZXVubG9hZFwiLGcpLGEuYXR0YWNoKFwicGFnZWhpZGVcIixnKSksbSYmYi5zZXRUaW1lb3V0KGMsbSksYS5fZmZjaT1jKX0pKHdpbmRvdyk7XG5cblxuKGZ1bmN0aW9uKGssYyl7ZnVuY3Rpb24gbChhLGIpe3JldHVybiBhLmZpbHRlcihmdW5jdGlvbihhKXtyZXR1cm4gYS5pbml0aWF0b3JUeXBlPT1ifSl9ZnVuY3Rpb24gZihhLGMpe2lmKGIudFthXSl7dmFyIGc9Yi50W2FdLWIuX3QwLGU9Yy5maWx0ZXIoZnVuY3Rpb24oYSl7cmV0dXJuIDAhPT1hLnJlc3BvbnNlRW5kJiZtKGEpXHUwMDNDZ30pLGY9bChlLFwic2NyaXB0XCIpLGg9bChlLFwibGlua1wiKSxrPWwoZSxcImltZ1wiKSxuPWUubWFwKGZ1bmN0aW9uKGEpe3JldHVybiBhLm5hbWUuc3BsaXQoXCIvXCIpWzJdfSkuZmlsdGVyKGZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gYSYmYy5sYXN0SW5kZXhPZihhKT09Yn0pLHE9ZS5maWx0ZXIoZnVuY3Rpb24oYSl7cmV0dXJuIGEuZHVyYXRpb25cdTAwM0NwfSkscz1nLU1hdGgubWF4LmFwcGx5KG51bGwsZS5tYXAobSkpXHUwMDNDcnwwO1wiYWZcIj09YSYmKGIuX2FmanM9Zi5sZW5ndGgpO3JldHVybiBhK1wiOlwiK1tlW2RdLGZbZF0saFtkXSxrW2RdLG5bZF0scVtkXSxzXS5qb2luKFwiLVwiKX19XG5mdW5jdGlvbiBtKGEpe3JldHVybiBhLnJlc3BvbnNlRW5kLShiLl90MC1jLnRpbWluZy5uYXZpZ2F0aW9uU3RhcnQpfWZ1bmN0aW9uIG4oKXt2YXIgYT1jW2hdKFwicmVzb3VyY2VcIiksZD1mKFwiY2ZcIixhKSxnPWYoXCJhZlwiLGEpLGE9ZihcImxkXCIsYSk7ZGVsZXRlIGIuX3J0O2IuX2xkPWIudC5sZC1iLl90MDtiLl9hcnQmJmIuX2FydCgpO3JldHVybltkLGcsYV0uam9pbihcIl9cIil9dmFyIHA9MjAscj01MCxkPVwibGVuZ3RoXCIsYj1rLnVlLGg9XCJnZXRFbnRyaWVzQnlUeXBlXCI7Yi5fcnJlPW07Yi5fcnQ9YyYmYy50aW1pbmcmJmNbaF0mJm59KSh1ZV9jc20sd2luZG93LnBlcmZvcm1hbmNlKTtcblxuXG51ZV9jc20udWUuX3J0biA9IDE7XG4oZnVuY3Rpb24oZSxmKXtmdW5jdGlvbiBoKGEpe2E9YS5zcGxpdChcIj9cIilbMF18fGE7YT1hLnJlcGxhY2UoXCJodHRwOi8vXCIsXCJcIikucmVwbGFjZShcImh0dHBzOi8vXCIsXCJcIikucmVwbGFjZShcInJlc291cmNlOi8vXCIsXCJcIikucmVwbGFjZShcInJlczovL1wiLFwiXCIpLnJlcGxhY2UoXCJ1bmRlZmluZWQ6Ly9cIixcIlwiKS5yZXBsYWNlKFwiY2hyb21lOi8vXCIsXCJcIikucmVwbGFjZSgvXFwqL2csXCJcIikucmVwbGFjZSgvIS9nLFwiXCIpLnJlcGxhY2UoL34vZyxcIlwiKTt2YXIgYj1hLnNwbGl0KFwiL1wiKTthPWEuc3Vic3RyKGEubGFzdEluZGV4T2YoXCIvXCIpKzEpO2Iuc3BsaWNlKC0xKTtiPWIubWFwKGZ1bmN0aW9uKGEpe2NbYV18fChjW2FdPShrKyspLnRvU3RyaW5nKDM2KSk7cmV0dXJuIGNbYV19KTtiLnB1c2goYSk7cmV0dXJuIGIuam9pbihcIiFcIil9ZnVuY3Rpb24gbCgpe3JldHVybiBmLmdldEVudHJpZXNCeVR5cGUoXCJyZXNvdXJjZVwiKS5maWx0ZXIoZnVuY3Rpb24oYSl7cmV0dXJuIGQuX3JyZShhKVx1MDAzQ2QuX2xkfSkuc29ydChmdW5jdGlvbihhLFxuYil7cmV0dXJuIGEucmVzcG9uc2VFbmQtYi5yZXNwb25zZUVuZH0pLnNwbGljZSgwLG0pLm1hcChmdW5jdGlvbihhKXt2YXIgYj1bXSxjO2ZvcihjIGluIGEpZ1tjXSYmYVtjXSYmYi5wdXNoKGdbY10rTWF0aC5tYXgoYVtjXXwwLC0xKS50b1N0cmluZygzNikpO2IucHVzaChcImlcIithLmluaXRpYXRvclR5cGUpOygxPT1kLl9ydG4mJmQuX2FmanM+bnx8Mj09ZC5fcnRuKSYmYi5wdXNoKFwiblwiK2goYS5uYW1lKSk7cmV0dXJuIGIuam9pbihcIl9cIil9KS5qb2luKFwiKlwiKX1mdW5jdGlvbiBwKCl7dmFyIGE9XCJwbVwiLGI7Zm9yKGIgaW4gYyljLmhhc093blByb3BlcnR5KGIpJiYoYSs9XCIqXCIrY1tiXStcIl9cIitiKTtyZXR1cm4gYX1mdW5jdGlvbiBxKCl7ZC5sb2coe2s6XCJydGltaW5nXCIsdmFsdWU6bCgpK1wiflwiK3AoKX0sXCJjc21cIil9aWYoZiYmZi5nZXRFbnRyaWVzQnlUeXBlJiZBcnJheS5wcm90b3R5cGUubWFwJiZBcnJheS5wcm90b3R5cGUuZmlsdGVyJiZlLnVlJiZlLnVlLmxvZyl7dmFyIGc9XG57Y29ubmVjdFN0YXJ0OlwiY1wiLGNvbm5lY3RFbmQ6XCJDXCIsZG9tYWluTG9va3VwU3RhcnQ6XCJkXCIsZG9tYWluTG9va3VwRW5kOlwiRFwiLGR1cmF0aW9uOlwielwiLGVuY29kZWRCb2R5U2l6ZTpcImVcIixkZWNvZGVkQm9keVNpemU6XCJFXCIsZmV0Y2hTdGFydDpcImZcIixyZWRpcmVjdFN0YXJ0OlwiclwiLHJlZGlyZWN0RW5kOlwiUlwiLHJlcXVlc3RTdGFydDpcInFcIixyZXNwb25zZVN0YXJ0Olwic1wiLHJlc3BvbnNlRW5kOlwiU1wiLHN0YXJ0VGltZTpcImFcIix0cmFuc2ZlclNpemU6XCJ0XCJ9LGQ9ZS51ZSxjPXt9LGs9MSxuPTIwLG09MjAwO2QmJmQuX3JyZSYmKGQuX2FydD1mdW5jdGlvbigpe2QuX2xkJiZ3aW5kb3cuc2V0VGltZW91dChxLDApfSl9fSkodWVfY3NtfHx7fSx3aW5kb3cucGVyZm9ybWFuY2UpO1xuXG5cbihmdW5jdGlvbihjLGQpe3ZhciBiPWMudWUsYT1kLm5hdmlnYXRvcjtiJiZiLnRhZyYmYSYmKGE9YS5jb25uZWN0aW9ufHxhLm1vekNvbm5lY3Rpb258fGEud2Via2l0Q29ubmVjdGlvbikmJmEudHlwZSYmYi50YWcoXCJuZXRJbmZvOlwiK2EudHlwZSl9KSh1ZV9jc20sd2luZG93KTtcblxuXG4oZnVuY3Rpb24oYyxkKXtmdW5jdGlvbiBoKGEsYil7Zm9yKHZhciBjPVtdLGQ9MDtkXHUwMDNDYS5sZW5ndGg7ZCsrKXt2YXIgZT1hW2RdLGY9Yi5lbmNvZGUoZSk7aWYoZVtrXSl7dmFyIGc9Yi5tZXRhU2VwLGU9ZVtrXSxsPWIubWV0YVBhaXJTZXAsaD1bXSxtPXZvaWQgMDtmb3IobSBpbiBlKWUuaGFzT3duUHJvcGVydHkobSkmJmgucHVzaChtK1wiPVwiK2VbbV0pO2U9aC5qb2luKGwpO2YrPWcrZX1jLnB1c2goZil9cmV0dXJuIGMuam9pbihiLnJlc291cmNlU2VwKX1mdW5jdGlvbiBzKGEpe3ZhciBiPWFba109YVtrXXx8e307Ylt0XXx8KGJbdF09Yy51ZV9taWQpO2JbdV18fChiW3VdPWMudWVfc2lkKTtiW2ZdfHwoYltmXT1jLnVlX2lkKTtiLmNzbT0xO2E9XCIvL1wiK2MudWVfZnVybCtcIi8xL1wiK2Fbdl0rXCIvMS9PUC9cIithW3ddK1wiL1wiK2FbeF0rXCIvXCIraChbYV0seSk7aWYobil0cnl7bi5jYWxsKGRbcF0sYSl9Y2F0Y2goZyl7Yy51ZS5zYmY9MSwobmV3IEltYWdlKS5zcmM9YX1lbHNlKG5ldyBJbWFnZSkuc3JjPVxuYX1mdW5jdGlvbiBxKCl7ZyYmZy5pc1N0dWImJmcucmVwbGF5KGZ1bmN0aW9uKGEsYixjKXthPWFbMF07Yj1hW2tdPWFba118fHt9O2JbZl09YltmXXx8YztzKGEpfSk7bC5pbXByZXNzaW9uPXM7Zz1udWxsfWlmKCEoMVx1MDAzQ2MudWVpbml0KSl7dmFyIGs9XCJtZXRhZGF0YVwiLHg9XCJpbXByZXNzaW9uVHlwZVwiLHY9XCJmb3Jlc3RlckNoYW5uZWxcIix3PVwicHJvZ3JhbUdyb3VwXCIsdD1cIm1hcmtldHBsYWNlSWRcIix1PVwic2Vzc2lvblwiLGY9XCJyZXF1ZXN0SWRcIixwPVwibmF2aWdhdG9yXCIsbD1jLnVlfHx7fSxuPWRbcF0mJmRbcF0uc2VuZEJlYWNvbixyPWZ1bmN0aW9uKGEsYixjLGQpe3JldHVybntlbmNvZGU6ZCxyZXNvdXJjZVNlcDphLG1ldGFTZXA6YixtZXRhUGFpclNlcDpjfX0seT1yKFwiXCIsXCI/XCIsXCImXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGgoYS5pbXByZXNzaW9uRGF0YSx6KX0pLHo9cihcIi9cIixcIjpcIixcIixcIixmdW5jdGlvbihhKXtyZXR1cm4gYS5mZWF0dXJlTmFtZStcIjpcIitoKGEucmVzb3VyY2VzLFxuQSl9KSxBPXIoXCIsXCIsXCJAXCIsXCJ8XCIsZnVuY3Rpb24oYSl7cmV0dXJuIGEuaWR9KSxnPWwuaW1wcmVzc2lvbjtuP3EoKToobC5hdHRhY2goXCJsb2FkXCIscSksbC5hdHRhY2goXCJiZWZvcmV1bmxvYWRcIixxKSk7dHJ5e2QuUCYmZC5QLnJlZ2lzdGVyJiZkLlAucmVnaXN0ZXIoXCJpbXByZXNzaW9uLWNsaWVudFwiLGZ1bmN0aW9uKCl7fSl9Y2F0Y2goQil7Yy51ZUxvZ0Vycm9yKEIse2xvZ0xldmVsOlwiV0FSTlwifSl9fX0pKHVlX2NzbSx3aW5kb3cpO1xuXG5cblxudmFyIHVlX3B0eSA9IFwiRGV0YWlsXCI7XG5cbnZhciB1ZV9zcHR5ID0gXCJHbGFuY2VcIjtcblxudmFyIHVlX3B0aSA9IFwiQjAxR0tRSTM5MlwiO1xuXG5cbnZhciB1ZV9hZGIgPSA0O1xudmFyIHVlX2FkYl9ydGxhID0gMTtcbnVlX2NzbS51ZS5leGVjKGZ1bmN0aW9uKHcsYSl7ZnVuY3Rpb24gcSgpe2lmKGQmJmYpe3ZhciBhO2E6e3RyeXthPWQuZ2V0SXRlbShnKTticmVhayBhfWNhdGNoKGMpe31hPXZvaWQgMH1pZihhKXJldHVybiBiPWEsITB9cmV0dXJuITF9ZnVuY3Rpb24gcigpe2I9aDtrKCk7aWYoZil0cnl7ZC5zZXRJdGVtKGcsYil9Y2F0Y2goYSl7fX1mdW5jdGlvbiBzKCl7Yj0xPT09YS51ZV9hZGJfY2hrP2w6aDtrKCk7aWYoZil0cnl7ZC5zZXRJdGVtKGcsYil9Y2F0Y2goYyl7fX1mdW5jdGlvbiBtKCl7YS51ZV9hZGJfcnRsYSYmYyYmMFx1MDAzQ2MuZWMmJiExPT09biYmKGMuZWxoPW51bGwsdWVMb2dFcnJvcih7bTpcIkhpdCBJbmZvXCIsZnJvbU9uRXJyb3I6MX0se2xvZ0xldmVsOlwiSU5GT1wiLGFkYjpifSksbj0hMCl9ZnVuY3Rpb24gaygpe2UudGFnKGIpO2UuaXNsJiZhLnVleCYmdWV4KFwiYXRcIixiKTtwJiZwLnVwZGF0ZUNzbUhpdChcImFkYlwiLGIpO2MmJjBcdTAwM0NjLmVjP20oKTphLnVlX2FkYl9ydGxhJiZjJiZcbihjLmVsaD1tKX1mdW5jdGlvbiB0KCl7cmV0dXJuIGJ9aWYoYS51ZV9hZGIpe2EudWVfZmFkYj1hLnVlX2ZhZGJ8fDEwO3ZhciBlPWEudWUsaD1cImFkYmxrX3llc1wiLGw9XCJhZGJsa19ub1wiLGI9XCJhZGJsa191bmtcIixkO2E6e3RyeXtkPWEubG9jYWxTdG9yYWdlO2JyZWFrIGF9Y2F0Y2goeCl7fWQ9dm9pZCAwfXZhciBnPVwiY3NtOmFkYlwiLGM9YS51ZV9lcnIscD1lLmNvb2tpZSxmPXZvaWQgMCE9PWEubG9jYWxTdG9yYWdlLHU9TWF0aC5yYW5kb20oKT4xLTEvYS51ZV9mYWRiLG49ITEsdj1xKCk7dXx8IXY/ZS51ZWxzKFwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvY3NtL3Nob3dhZHMudjIuanNcIix7b25lcnJvcjpyLG9ubG9hZDpzfSk6aygpO2EudWVfaXNBZGI9dDthLnVlX2lzQWRiLnVuaz1cImFkYmxrX3Vua1wiO2EudWVfaXNBZGIubm89bDthLnVlX2lzQWRiLnllcz1ofX0sXCJhZGJcIikoZG9jdW1lbnQsd2luZG93KTtcblxuXG5cblxuKGZ1bmN0aW9uKGMsbCxtKXtmdW5jdGlvbiBoKGEpe2lmKGEpdHJ5e2lmKGEuaWQpcmV0dXJuXCIvLypbQGlkPSdcIithLmlkK1wiJ11cIjt2YXIgYixkPTEsZTtmb3IoZT1hLnByZXZpb3VzU2libGluZztlO2U9ZS5wcmV2aW91c1NpYmxpbmcpZS5ub2RlTmFtZT09PWEubm9kZU5hbWUmJihkKz0xKTtiPWQ7dmFyIGM9YS5ub2RlTmFtZTsxIT09YiYmKGMrPVwiW1wiK2IrXCJdXCIpO2EucGFyZW50Tm9kZSYmKGM9aChhLnBhcmVudE5vZGUpK1wiL1wiK2MpO3JldHVybiBjfWNhdGNoKGYpe3JldHVyblwiREVUQUNIRURcIn19ZnVuY3Rpb24gZihhKXtpZihhJiZhLmdldEF0dHJpYnV0ZSlyZXR1cm4gYS5nZXRBdHRyaWJ1dGUoayk/YS5nZXRBdHRyaWJ1dGUoayk6ZihhLnBhcmVudEVsZW1lbnQpfXZhciBrPVwiZGF0YS1jZWwtd2lkZ2V0XCIsZz0hMSxkPVtdOyhjLnVlfHx7fSkuaXNCRj1mdW5jdGlvbigpe3RyeXt2YXIgYT1KU09OLnBhcnNlKGxvY2FsU3RvcmFnZVtcImNzbS1iZlwiXXx8XCJbXVwiKSxiPTBcdTAwM0M9YS5pbmRleE9mKGMudWVfaWQpO1xuYS51bnNoaWZ0KGMudWVfaWQpO2E9YS5zbGljZSgwLDIwKTtsb2NhbFN0b3JhZ2VbXCJjc20tYmZcIl09SlNPTi5zdHJpbmdpZnkoYSk7cmV0dXJuIGJ9Y2F0Y2goZCl7cmV0dXJuITF9fSgpO2MudWVfdXRpbHM9e2dldFhQYXRoOmgsZ2V0Rmlyc3RBc2NlbmRpbmdXaWRnZXQ6ZnVuY3Rpb24oYSxiKXtjLnVlX2NlbCYmYy51ZV9mZW0/ITA9PT1nP2IoZihhKSk6ZC5wdXNoKHtlbGVtZW50OmEsY2FsbGJhY2s6Yn0pOmIoKX0sbm90aWZ5V2lkZ2V0c0xhYmVsZWQ6ZnVuY3Rpb24oKXtpZighMT09PWcpe2c9ITA7Zm9yKHZhciBhPWYsYj0wO2JcdTAwM0NkLmxlbmd0aDtiKyspaWYoZFtiXS5oYXNPd25Qcm9wZXJ0eShcImNhbGxiYWNrXCIpJiZkW2JdLmhhc093blByb3BlcnR5KFwiZWxlbWVudFwiKSl7dmFyIGM9ZFtiXS5jYWxsYmFjayxlPWRbYl0uZWxlbWVudDtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJmMoYShlKSl9ZD1udWxsfX0sZXh0cmFjdFN0cmluZ1ZhbHVlOmZ1bmN0aW9uKGEpe2lmKFwic3RyaW5nXCI9PT1cbnR5cGVvZiBhKXJldHVybiBhfX19KSh1ZV9jc20sd2luZG93LGRvY3VtZW50KTtcblxuXG4oZnVuY3Rpb24oYSxjKXthLnVlX2NlbHx8KGEudWVfY2VsPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gaChhLGIpe2I/Yi5yPXk6Yj17cjp5LGM6MX07IXVlX2NzbS51ZV9zY2xvZyYmYi5jbG9nJiZlLmNsb2c/ZS5jbG9nKGEsYi5uc3x8bixiKTpiLmdsb2cmJmUuZ2xvZz9lLmdsb2coYSxiLm5zfHxuLGIpOmUubG9nKGEsYi5uc3x8bixiKX1mdW5jdGlvbiBsKCl7dmFyIGE9Yi5sZW5ndGg7aWYoMFx1MDAzQ2Epe2Zvcih2YXIgZj1bXSxjPTA7Y1x1MDAzQ2E7YysrKXt2YXIgZz1iW2NdLmFwaTtnLnJlYWR5KCk/KGcub24oe3RzOmUuZCxuczpufSksZC5wdXNoKGJbY10pLGgoe2s6XCJtc29cIixuOmJbY10ubmFtZSx0OmUuZCgpfSkpOmYucHVzaChiW2NdKX1iPWZ9fWZ1bmN0aW9uIGYoKXtpZighZi5leGVjdXRlZCl7Zm9yKHZhciBhPTA7YVx1MDAzQ2QubGVuZ3RoO2ErKylkW2FdLmFwaS5vZmYmJmRbYV0uYXBpLm9mZih7dHM6ZS5kLG5zOm59KTtxKCk7aCh7azpcImVvZFwiLHQwOmUudDAsdDplLmQoKX0se2M6MSxpbDoxfSk7XG5mLmV4ZWN1dGVkPTE7Zm9yKGE9MDthXHUwMDNDZC5sZW5ndGg7YSsrKWIucHVzaChkW2FdKTtkPVtdO2NsZWFyVGltZW91dCh0KTtjbGVhclRpbWVvdXQodil9fWZ1bmN0aW9uIHEoYSl7aCh7azpcImhydFwiLHQ6ZS5kKCl9LHtjOjEsaWw6MSxuOmF9KTtnPU1hdGgubWluKGsscipnKTt6KCl9ZnVuY3Rpb24geigpe2NsZWFyVGltZW91dCh2KTt2PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtxKCEwKX0sZyl9ZnVuY3Rpb24gdSgpe2YuZXhlY3V0ZWR8fHEoKX12YXIgcj0xLjUsaz1jLnVlX2NlbF9tYXhfaHJ0fHwzRTQsYj1bXSxkPVtdLG49YS51ZV9jZWxfbnN8fFwiY2VsXCIsdCx2LGU9YS51ZSxtPWEudWV0LHc9YS51ZXgseT1lLnJpZCxnPWMudWVfY2VsX2hydF9pbnR8fDNFMyxzPWMucmVxdWVzdEFuaW1hdGlvbkZyYW1lfHxmdW5jdGlvbihhKXthKCl9O2lmKGUuaXNCRiloKHtrOlwiYmZ0XCIsdDplLmQoKX0pO2Vsc2V7XCJmdW5jdGlvblwiPT10eXBlb2YgbSYmbShcImJiXCIsXCJjc21DRUxMU2ZyYW1ld29ya1wiLFxue3diOjF9KTtzZXRUaW1lb3V0KGwsMCk7ZS5vbnVubG9hZChmKTtpZihlLm9uZmx1c2gpZS5vbmZsdXNoKHUpO3Q9c2V0VGltZW91dChmLDZFNSk7eigpO1wiZnVuY3Rpb25cIj09dHlwZW9mIHcmJncoXCJsZFwiLFwiY3NtQ0VMTFNmcmFtZXdvcmtcIix7d2I6MX0pO3JldHVybntyZWdpc3Rlck1vZHVsZTpmdW5jdGlvbihhLGMpe2IucHVzaCh7bmFtZTphLGFwaTpjfSk7aCh7azpcIm1yZ1wiLG46YSx0OmUuZCgpfSk7bCgpfSxyZXNldDpmdW5jdGlvbihhKXtoKHtrOlwicnN0XCIsdDA6ZS50MCx0OmUuZCgpfSk7Yj1iLmNvbmNhdChkKTtkPVtdO2Zvcih2YXIgYz1iLmxlbmd0aCxnPTA7Z1x1MDAzQ2M7ZysrKWJbZ10uYXBpLm9mZigpLGJbZ10uYXBpLnJlc2V0KCk7eT1hfHxlLnJpZDtsKCk7Y2xlYXJUaW1lb3V0KHQpO3Q9c2V0VGltZW91dChmLDZFNSk7Zi5leGVjdXRlZD0wfSx0aW1lb3V0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIGMuc2V0VGltZW91dChmdW5jdGlvbigpe3MoZnVuY3Rpb24oKXtmLmV4ZWN1dGVkfHxcbmEoKX0pfSxiKX0sbG9nOmgsb2ZmOmZ9fX0oKSl9KSh1ZV9jc20sd2luZG93KTtcbihmdW5jdGlvbihhLGMsaCl7YS51ZV9wZG18fCFhLnVlX2NlbHx8dWUuaXNCRnx8KGEudWVfcGRtPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbCgpe3RyeXt2YXIgYj13aW5kb3cuc2NyZWVuO2lmKGIpe3ZhciBjPXt3OmIud2lkdGgsYXc6Yi5hdmFpbFdpZHRoLGg6Yi5oZWlnaHQsYWg6Yi5hdmFpbEhlaWdodCxjZDpiLmNvbG9yRGVwdGgscGQ6Yi5waXhlbERlcHRofTtlJiZlLnc9PT1jLncmJmUuaD09PWMuaCYmZS5hdz09PWMuYXcmJmUuYWg9PT1jLmFoJiZlLnBkPT09Yy5wZCYmZS5jZD09PWMuY2R8fChlPWMsZS50PXQoKSxlLms9XCJzY2lcIixzKGUpKX12YXIgZz1oLmJvZHl8fHt9LGY9aC5kb2N1bWVudEVsZW1lbnR8fHt9LGQ9e3c6TWF0aC5tYXgoZy5zY3JvbGxXaWR0aHx8MCxnLm9mZnNldFdpZHRofHwwLGYuY2xpZW50V2lkdGh8fDAsZi5zY3JvbGxXaWR0aHx8MCxmLm9mZnNldFdpZHRofHwwKSxoOk1hdGgubWF4KGcuc2Nyb2xsSGVpZ2h0fHwwLGcub2Zmc2V0SGVpZ2h0fHwwLGYuY2xpZW50SGVpZ2h0fHxcbjAsZi5zY3JvbGxIZWlnaHR8fDAsZi5vZmZzZXRIZWlnaHR8fDApfTttJiZtLnc9PT1kLncmJm0uaD09PWQuaHx8KG09ZCxtLnQ9dCgpLG0uaz1cImRvaVwiLHMobSkpO249YS51ZV9jZWwudGltZW91dChsLHYpO3krPTF9Y2F0Y2gocil7d2luZG93LnVlTG9nRXJyb3ImJnVlTG9nRXJyb3Iocix7YXR0cmlidXRpb246XCJjc20tY2VsLXBhZ2UtbW9kdWxlXCIsbG9nTGV2ZWw6XCJXQVJOXCJ9KX19ZnVuY3Rpb24gZigpe2soXCJlYmxcIixcImRlZmF1bHRcIiwhMSl9ZnVuY3Rpb24gcSgpe2soXCJlZm9cIixcImRlZmF1bHRcIiwhMCl9ZnVuY3Rpb24geigpe2soXCJlYmxcIixcImFwcFwiLCExKX1mdW5jdGlvbiB1KCl7ayhcImVmb1wiLFwiYXBwXCIsITApfWZ1bmN0aW9uIHIoKXtjLnNldFRpbWVvdXQoZnVuY3Rpb24oKXtoW0RdP2soXCJlYmxcIixcInBhZ2V2aXpcIiwhMSk6ayhcImVmb1wiLFwicGFnZXZpelwiLCEwKX0sMCl9ZnVuY3Rpb24gayhhLGIsYyl7dyE9PWMmJnMoe2s6YSx0OnQoKSxzOmJ9LHtmZjohMD09PWM/MDoxfSk7dz1cbmN9ZnVuY3Rpb24gYigpe2cuYXR0YWNoJiYoeCYmZy5hdHRhY2gocCxyLGgpLEEmJlAud2hlbihcIm1hc2hcIikuZXhlY3V0ZShmdW5jdGlvbihhKXthJiZhLmFkZEV2ZW50TGlzdGVuZXImJihhLmFkZEV2ZW50TGlzdGVuZXIoXCJhcHBQYXVzZVwiLHopLGEuYWRkRXZlbnRMaXN0ZW5lcihcImFwcFJlc3VtZVwiLHUpKX0pLGcuYXR0YWNoKFwiYmx1clwiLGYsYyksZy5hdHRhY2goXCJmb2N1c1wiLHEsYykpfWZ1bmN0aW9uIGQoKXtnLmRldGFjaCYmKHgmJmcuZGV0YWNoKHAscixoKSxBJiZQLndoZW4oXCJtYXNoXCIpLmV4ZWN1dGUoZnVuY3Rpb24oYSl7YSYmYS5yZW1vdmVFdmVudExpc3RlbmVyJiYoYS5yZW1vdmVFdmVudExpc3RlbmVyKFwiYXBwUGF1c2VcIix6KSxhLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhcHBSZXN1bWVcIix1KSl9KSxnLmRldGFjaChcImJsdXJcIixmLGMpLGcuZGV0YWNoKFwiZm9jdXNcIixxLGMpKX12YXIgbix0LHYsZSxtLHc9bnVsbCx5PTAsZz1hLnVlLHM9YS51ZV9jZWwubG9nLEI9YS51ZXQsXG5FPWEudWV4LHg9ISFnLnBhZ2VWaXoscD14JiZnLnBhZ2VWaXouZXZlbnQsRD14JiZnLnBhZ2VWaXoucHJvcEhpZCxBPWMuUCYmYy5QLndoZW47XCJmdW5jdGlvblwiPT10eXBlb2YgQiYmQihcImJiXCIsXCJjc21DRUxMU3BkbVwiLHt3YjoxfSk7cmV0dXJue29uOmZ1bmN0aW9uKGEpe3Y9YS50aW1lc3Bhbnx8NTAwO3Q9YS50cztiKCk7YT1jLmxvY2F0aW9uO3Moe2s6XCJwbWRcIixvOmEub3JpZ2luLHA6YS5wYXRobmFtZSx0OnQoKX0pO2woKTtcImZ1bmN0aW9uXCI9PXR5cGVvZiBFJiZFKFwibGRcIixcImNzbUNFTExTcGRtXCIse3diOjF9KX0sb2ZmOmZ1bmN0aW9uKGEpe2NsZWFyVGltZW91dChuKTtkKCk7Zy5jb3VudCYmZy5jb3VudChcImNlbC5QRE0uVG90YWxFeGVjdXRpb25zXCIseSl9LHJlYWR5OmZ1bmN0aW9uKCl7cmV0dXJuIGguYm9keSYmYS51ZV9jZWwmJmEudWVfY2VsLmxvZ30scmVzZXQ6ZnVuY3Rpb24oKXtlPW09bnVsbH19fSgpLGEudWVfY2VsJiZhLnVlX2NlbC5yZWdpc3Rlck1vZHVsZShcInBhZ2UgbW9kdWxlXCIsXG5hLnVlX3BkbSkpfSkodWVfY3NtLHdpbmRvdyxkb2N1bWVudCk7XG4oZnVuY3Rpb24oYSxjKXthLnVlX3ZwbXx8IWEudWVfY2VsfHx1ZS5pc0JGfHwoYS51ZV92cG09ZnVuY3Rpb24oKXtmdW5jdGlvbiBoKCl7dmFyIGE9dSgpLGI9e3c6Yy5pbm5lcldpZHRoLGg6Yy5pbm5lckhlaWdodCx4OmMucGFnZVhPZmZzZXQseTpjLnBhZ2VZT2Zmc2V0fTtmJiZmLnc9PWIudyYmZi5oPT1iLmgmJmYueD09Yi54JiZmLnk9PWIueXx8KGIudD1hLGIuaz1cInZwaVwiLGY9YixkKGYse2Nsb2c6MX0pKTtxPTA7cj11KCktYTtrKz0xfWZ1bmN0aW9uIGwoKXtxfHwocT1hLnVlX2NlbC50aW1lb3V0KGgseikpfXZhciBmLHEseix1LHI9MCxrPTAsYj1hLnVlLGQ9YS51ZV9jZWwubG9nLG49YS51ZXQsdD1hLnVleCx2PWIuYXR0YWNoLGU9Yi5kZXRhY2g7XCJmdW5jdGlvblwiPT10eXBlb2YgbiYmbihcImJiXCIsXCJjc21DRUxMU3ZwbVwiLHt3YjoxfSk7cmV0dXJue29uOmZ1bmN0aW9uKGEpe3U9YS50czt6PWEudGltZXNwYW58fDEwMDtoKCk7diYmKHYoXCJzY3JvbGxcIixsKSx2KFwicmVzaXplXCIsXG5sKSk7XCJmdW5jdGlvblwiPT10eXBlb2YgdCYmdChcImxkXCIsXCJjc21DRUxMU3ZwbVwiLHt3YjoxfSl9LG9mZjpmdW5jdGlvbihhKXtjbGVhclRpbWVvdXQocSk7ZSYmKGUoXCJzY3JvbGxcIixsKSxlKFwicmVzaXplXCIsbCkpO2IuY291bnQmJihiLmNvdW50KFwiY2VsLlZQSS5Ub3RhbEV4ZWN1dGlvbnNcIixrKSxiLmNvdW50KFwiY2VsLlZQSS5Ub3RhbEV4ZWN1dGlvblRpbWVcIixyKSxiLmNvdW50KFwiY2VsLlZQSS5BdmVyYWdlRXhlY3V0aW9uVGltZVwiLHIvaykpfSxyZWFkeTpmdW5jdGlvbigpe3JldHVybiBhLnVlX2NlbCYmYS51ZV9jZWwubG9nfSxyZXNldDpmdW5jdGlvbigpe2Y9dm9pZCAwfSxnZXRWcGk6ZnVuY3Rpb24oKXtyZXR1cm4gZn19fSgpLGEudWVfY2VsJiZhLnVlX2NlbC5yZWdpc3Rlck1vZHVsZShcInZpZXdwb3J0IG1vZHVsZVwiLGEudWVfdnBtKSl9KSh1ZV9jc20sd2luZG93KTtcbihmdW5jdGlvbihhLGMsaCl7aWYoIWEudWVfZmVtJiZhLnVlX2NlbCYmYS51ZV91dGlscyl7dmFyIGw9YS51ZXx8e307IWwuaXNCRiYmIWEudWVfZmVtJiZoLnF1ZXJ5U2VsZWN0b3ImJmMuZ2V0Q29tcHV0ZWRTdHlsZSYmW10uZm9yRWFjaCYmKGEudWVfZmVtPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZihhLGIpe3JldHVybiBhPmI/Mz5hLWI6Mz5iLWF9ZnVuY3Rpb24gcShhLGIpe3ZhciBlPWMucGFnZVhPZmZzZXQsZz1jLnBhZ2VZT2Zmc2V0LGQ7YTp7dHJ5e2lmKGEpe3ZhciBoPWEuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkscixsPTA9PT1hLm9mZnNldFdpZHRoJiYwPT09YS5vZmZzZXRIZWlnaHQ7Yzp7Zm9yKHZhciBrPWEucGFyZW50Tm9kZSxuPWgubGVmdHx8MCxwPWgudG9wfHwwLHM9aC53aWR0aHx8MCx0PWguaGVpZ2h0fHwwO2smJmshPT1kb2N1bWVudC5ib2R5Oyl7dmFyIG07ZDp7dHJ5e3ZhciBxPXZvaWQgMDtpZihrKXZhciBDPWsuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkscT1cbnt4OkMubGVmdHx8MCx5OkMudG9wfHwwLHc6Qy53aWR0aHx8MCxoOkMuaGVpZ2h0fHwwfTtlbHNlIHE9dm9pZCAwO209cTticmVhayBkfWNhdGNoKHYpe31tPXZvaWQgMH12YXIgdT13aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShrKSx3PVwiaGlkZGVuXCI9PT11Lm92ZXJmbG93LE49d3x8XCJoaWRkZW5cIj09PXUub3ZlcmZsb3dYLEo9d3x8XCJoaWRkZW5cIj09PXUub3ZlcmZsb3dZLHo9cCt0LTFcdTAwM0NtLnkrMXx8cCsxPm0ueSttLmgtMTtpZigobitzLTFcdTAwM0NtLngrMXx8bisxPm0ueCttLnctMSkmJk58fHomJkope3I9ITA7YnJlYWsgY31rPWsucGFyZW50Tm9kZX1yPSExfWQ9e3g6aC5sZWZ0K2V8fDAseTpoLnRvcCtnfHwwLHc6aC53aWR0aHx8MCxoOmguaGVpZ2h0fHwwLGQ6KGx8fHIpfDB9fWVsc2UgZD12b2lkIDA7YnJlYWsgYX1jYXRjaChBKXt9ZD12b2lkIDB9aWYoZCYmIWEuY2VsX2IpYS5jZWxfYj1kLHgoe246YS5nZXRBdHRyaWJ1dGUoeSksdzphLmNlbF9iLncsaDphLmNlbF9iLmgsZDphLmNlbF9iLmQsXG54OmEuY2VsX2IueCx5OmEuY2VsX2IueSx0OmIsazpcImV3aVwiLGNsOmEuY2xhc3NOYW1lfSx7Y2xvZzoxfSk7ZWxzZXtpZihlPWQpZT1hLmNlbF9iLGc9ZCxlPWcuZD09PWUuZCYmMT09PWcuZD8hMTohKGYoZS54LGcueCkmJmYoZS55LGcueSkmJmYoZS53LGcudykmJmYoZS5oLGcuaCkmJmUuZD09PWcuZCk7ZSYmKGEuY2VsX2I9ZCx4KHtuOmEuZ2V0QXR0cmlidXRlKHkpLHc6YS5jZWxfYi53LGg6YS5jZWxfYi5oLGQ6YS5jZWxfYi5kLHg6YS5jZWxfYi54LHk6YS5jZWxfYi55LHQ6YixrOlwiZXdpXCJ9LHtjbG9nOjF9KSl9fWZ1bmN0aW9uIHooYixlKXt2YXIgYztjPWIuYz9oLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoYi5jKTpiLmlkP1toLmdldEVsZW1lbnRCeUlkKGIuaWQpXTpoLnF1ZXJ5U2VsZWN0b3JBbGwoYi5zKTtiLnc9W107Zm9yKHZhciBkPTA7ZFx1MDAzQ2MubGVuZ3RoO2QrKyl7dmFyIGY9Y1tkXTtpZihmKXtpZighZi5nZXRBdHRyaWJ1dGUoeSkpe3ZhciByPWYuZ2V0QXR0cmlidXRlKFwiY2VsX3dpZGdldF9pZFwiKXx8XG4oYi5pZF9nZW58fEUpKGYsZCl8fGYuaWQ7Zi5zZXRBdHRyaWJ1dGUoeSxyKX1iLncucHVzaChmKTtrKFEsZixlKX19ITE9PT1CJiYocysrLHM9PT1nLmxlbmd0aCYmKEI9ITAsYS51ZV91dGlscy5ub3RpZnlXaWRnZXRzTGFiZWxlZCgpKSl9ZnVuY3Rpb24gdShhLGIpe3AuY29udGFpbnMoYSl8fHgoe246YS5nZXRBdHRyaWJ1dGUoeSksdDpiLGs6XCJld2RcIn0se2Nsb2c6MX0pfWZ1bmN0aW9uIHIoYSl7SS5sZW5ndGgmJnVlX2NlbC50aW1lb3V0KGZ1bmN0aW9uKCl7aWYobSl7Zm9yKHZhciBiPVIoKSxjPSExO1IoKS1iXHUwMDNDZSYmIWM7KXtmb3IoYz1TOzBcdTAwM0NjLS0mJjBcdTAwM0NJLmxlbmd0aDspe3ZhciBnPUkuc2hpZnQoKTtUW2cudHlwZV0oZy5lbGVtLGcudGltZSl9Yz0wPT09SS5sZW5ndGh9VSsrO3IoYSl9fSwwKX1mdW5jdGlvbiBrKGEsYixjKXtJLnB1c2goe3R5cGU6YSxlbGVtOmIsdGltZTpjfSl9ZnVuY3Rpb24gYihhLGIpe2Zvcih2YXIgYz0wO2NcdTAwM0NnLmxlbmd0aDtjKyspZm9yKHZhciBlPVxuZ1tjXS53fHxbXSxkPTA7ZFx1MDAzQ2UubGVuZ3RoO2QrKylrKGEsZVtkXSxiKX1mdW5jdGlvbiBkKCl7S3x8KEs9YS51ZV9jZWwudGltZW91dChmdW5jdGlvbigpe0s9bnVsbDt2YXIgYz13KCk7YihXLGMpO2Zvcih2YXIgZT0wO2VcdTAwM0NnLmxlbmd0aDtlKyspayhYLGdbZV0sYyk7MD09PWcubGVuZ3RoJiYhMT09PUImJihCPSEwLGEudWVfdXRpbHMubm90aWZ5V2lkZ2V0c0xhYmVsZWQoKSk7cihjKX0sdikpfWZ1bmN0aW9uIG4oKXtLfHxPfHwoTz1hLnVlX2NlbC50aW1lb3V0KGZ1bmN0aW9uKCl7Tz1udWxsO3ZhciBhPXcoKTtiKFEsYSk7cihhKX0sdikpfWZ1bmN0aW9uIHQoKXtyZXR1cm4gQSYmRiYmcCYmcC5jb250YWlucyYmcC5nZXRCb3VuZGluZ0NsaWVudFJlY3QmJnd9dmFyIHY9NTAsZT00LjUsbT0hMSx3LHk9XCJkYXRhLWNlbC13aWRnZXRcIixnPVtdLHM9MCxCPSExLEU9ZnVuY3Rpb24oKXt9LHg9YS51ZV9jZWwubG9nLHAsRCxBLEYsRz1jLk11dGF0aW9uT2JzZXJ2ZXJ8fGMuV2ViS2l0TXV0YXRpb25PYnNlcnZlcnx8XG5jLk1vek11dGF0aW9uT2JzZXJ2ZXIsTj0hIUcsSCxDLEo9XCJET01BdHRyTW9kaWZpZWRcIixMPVwiRE9NTm9kZUluc2VydGVkXCIsTT1cIkRPTU5vZGVSZW1vdmVkXCIsTyxLLEk9W10sVT0wLFM9bnVsbCxXPVwicmVtb3ZlZFdpZGdldFwiLFg9XCJ1cGRhdGVXaWRnZXRzXCIsUT1cInByb2Nlc3NXaWRnZXRcIixULFY9Yy5wZXJmb3JtYW5jZXx8e30sUj1WLm5vdyYmZnVuY3Rpb24oKXtyZXR1cm4gVi5ub3coKX18fGZ1bmN0aW9uKCl7cmV0dXJuIERhdGUubm93KCl9O1wiZnVuY3Rpb25cIj09dHlwZW9mIHVldCYmdWV0KFwiYmJcIixcImNzbUNFTExTZmVtXCIse3diOjF9KTtyZXR1cm57b246ZnVuY3Rpb24oYil7ZnVuY3Rpb24gYygpe2lmKHQoKSl7VD17cmVtb3ZlZFdpZGdldDp1LHVwZGF0ZVdpZGdldHM6eixwcm9jZXNzV2lkZ2V0OnF9O2lmKE4pe3ZhciBhPXthdHRyaWJ1dGVzOiEwLHN1YnRyZWU6ITB9O0g9bmV3IEcobik7Qz1uZXcgRyhkKTtILm9ic2VydmUocCxhKTtDLm9ic2VydmUocCx7Y2hpbGRMaXN0OiEwLFxuc3VidHJlZTohMH0pO0Mub2JzZXJ2ZShELGEpfWVsc2UgQS5jYWxsKHAsSixuKSxBLmNhbGwocCxMLGQpLEEuY2FsbChwLE0sZCksQS5jYWxsKEQsTCxuKSxBLmNhbGwoRCxNLG4pO2QoKX19cD1oLmJvZHk7RD1oLmhlYWQ7QT1wLmFkZEV2ZW50TGlzdGVuZXI7Rj1wLnJlbW92ZUV2ZW50TGlzdGVuZXI7dz1iLnRzO2c9YS5jZWxfd2lkZ2V0c3x8W107Uz1iLmJzfHw1O2wuZGVmZmVyZWQ/YygpOmwuYXR0YWNoJiZsLmF0dGFjaChcImxvYWRcIixjKTtcImZ1bmN0aW9uXCI9PXR5cGVvZiB1ZXgmJnVleChcImxkXCIsXCJjc21DRUxMU2ZlbVwiLHt3YjoxfSk7bT0hMH0sb2ZmOmZ1bmN0aW9uKCl7dCgpJiYoQyYmKEMuZGlzY29ubmVjdCgpLEM9bnVsbCksSCYmKEguZGlzY29ubmVjdCgpLEg9bnVsbCksRi5jYWxsKHAsSixuKSxGLmNhbGwocCxMLGQpLEYuY2FsbChwLE0sZCksRi5jYWxsKEQsTCxuKSxGLmNhbGwoRCxNLG4pKTtsLmNvdW50JiZsLmNvdW50KFwiY2VsLndpZGdldHMuYmF0Y2hlc1Byb2Nlc3NlZFwiLFxuVSk7bT0hMX0scmVhZHk6ZnVuY3Rpb24oKXtyZXR1cm4gYS51ZV9jZWwmJmEudWVfY2VsLmxvZ30scmVzZXQ6ZnVuY3Rpb24oKXtnPWEuY2VsX3dpZGdldHN8fFtdfX19KCksYS51ZV9jZWwmJmEudWVfZmVtJiZhLnVlX2NlbC5yZWdpc3Rlck1vZHVsZShcImZlYXR1cmVzIG1vZHVsZVwiLGEudWVfZmVtKSl9fSkodWVfY3NtLHdpbmRvdyxkb2N1bWVudCk7XG4oZnVuY3Rpb24oYSxjLGgpeyFhLnVlX21jbSYmYS51ZV9jZWwmJmEudWVfdXRpbHMmJiFhLnVlLmlzQkYmJihhLnVlX21jbT1mdW5jdGlvbigpe2Z1bmN0aW9uIGwoYSxrKXt2YXIgYj1hLnNyY0VsZW1lbnR8fGEudGFyZ2V0fHx7fSxkPXtrOmYsdzooa3x8e30pLm93fHwoYy5ib2R5fHx7fSkuc2Nyb2xsV2lkdGgsaDooa3x8e30pLm9ofHwoYy5ib2R5fHx7fSkuc2Nyb2xsSGVpZ2h0LHQ6KGt8fHt9KS5vdHN8fHEoKSx4OmEucGFnZVgseTphLnBhZ2VZLHA6dS5nZXRYUGF0aChiKSxuOmIubm9kZU5hbWV9O2gmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLm5vdyYmYS50aW1lU3RhbXAmJihkLmR0PShrfHx7fSkub2R0fHxoLm5vdygpLWEudGltZVN0YW1wLGQuZHQ9cGFyc2VGbG9hdChkLmR0LnRvRml4ZWQoMikpKTthLmJ1dHRvbiYmKGQuYj1hLmJ1dHRvbik7Yi5ocmVmJiYoZC5yPXUuZXh0cmFjdFN0cmluZ1ZhbHVlKGIuaHJlZikpO2IuaWQmJihkLmk9Yi5pZCk7Yi5jbGFzc05hbWUmJlxuYi5jbGFzc05hbWUuc3BsaXQmJihkLmM9Yi5jbGFzc05hbWUuc3BsaXQoL1xccysvKSk7eihkLHtjOjF9KX12YXIgZj1cIm1jbVwiLHEsej1hLnVlX2NlbC5sb2csdT1hLnVlX3V0aWxzO3JldHVybntvbjpmdW5jdGlvbihjKXtxPWMudHM7YS51ZV9jZWxfc3R1YiYmYS51ZV9jZWxfc3R1Yi5yZXBsYXlNb2R1bGUoZixsKTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciYmd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIixsLCEwKX0sb2ZmOmZ1bmN0aW9uKGEpe3dpbmRvdy5hZGRFdmVudExpc3RlbmVyJiZ3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLGwsITApfSxyZWFkeTpmdW5jdGlvbigpe3JldHVybiBhLnVlX2NlbCYmYS51ZV9jZWwubG9nfSxyZXNldDpmdW5jdGlvbigpe319fSgpLGEudWVfY2VsJiZhLnVlX2NlbC5yZWdpc3Rlck1vZHVsZShcIm1vdXNlIGNsaWNrIG1vZHVsZVwiLGEudWVfbWNtKSl9KSh1ZV9jc20sZG9jdW1lbnQsd2luZG93LnBlcmZvcm1hbmNlKTtcbihmdW5jdGlvbihhLGMpe2EudWVfbW1tfHwhYS51ZV9jZWx8fGEudWUuaXNCRnx8KGEudWVfbW1tPWZ1bmN0aW9uKGgpe2Z1bmN0aW9uIGwoYSxiKXt2YXIgYz17eDphLnBhZ2VYfHxhLnh8fDAseTphLnBhZ2VZfHxhLnl8fDAsdDprKCl9OyFiJiZ4JiYoYy50LXgudFx1MDAzQ3p8fGMueD09eC54JiZjLnk9PXgueSl8fCh4PWMscy5wdXNoKGMpKX1mdW5jdGlvbiBmKCl7aWYocy5sZW5ndGgpe3k9Ry5ub3coKTtmb3IodmFyIGE9MDthXHUwMDNDcy5sZW5ndGg7YSsrKXt2YXIgYj1zW2FdLGM9YTtwPXNbRV07RD1iO3ZhciBkPXZvaWQgMDtpZighKGQ9Mj5jKSl7ZD12b2lkIDA7YTppZihzW2NdLnQtc1tjLTFdLnQ+cSlkPTA7ZWxzZXtmb3IoZD1FKzE7ZFx1MDAzQ2M7ZCsrKXt2YXIgZj1wLGg9RCxrPXNbZF07QT0oaC54LWYueCkqKGYueS1rLnkpLShmLngtay54KSooaC55LWYueSk7aWYoQSpBLygoaC54LWYueCkqKGgueC1mLngpKyhoLnktZi55KSooaC55LWYueSkpPnUpe2Q9MDticmVhayBhfX1kPTF9ZD0hZH0oRj1cbmQpP0U9Yy0xOkIucG9wKCk7Qi5wdXNoKGIpfWc9Ry5ub3coKS15O3Y9TWF0aC5taW4odixnKTtlPU1hdGgubWF4KGUsZyk7bT0obSp3K2cpLyh3KzEpO3crPTE7bih7azpyLGU6QixtaW46TWF0aC5mbG9vcigxRTMqdiksbWF4Ok1hdGguZmxvb3IoMUUzKmUpLGF2ZzpNYXRoLmZsb29yKDFFMyptKX0se2M6MX0pO3M9W107Qj1bXTtFPTB9fXZhciBxPTEwMCx6PTIwLHU9MjUscj1cIm1tbTFcIixrLGIsZD1hLnVlLG49YS51ZV9jZWwubG9nLHQsdj0xRTMsZT0wLG09MCx3PTAseSxnLHM9W10sQj1bXSxFPTAseCxwLEQsQSxGLEc9aCYmaC5ub3cmJmh8fERhdGUubm93JiZEYXRlfHx7bm93OmZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBEYXRlKS5nZXRUaW1lKCl9fTtyZXR1cm57b246ZnVuY3Rpb24oYSl7az1hLnRzO2I9YS5ucztkLmF0dGFjaCYmZC5hdHRhY2goXCJtb3VzZW1vdmVcIixsLGMpO3Q9c2V0SW50ZXJ2YWwoZiwzRTMpfSxvZmY6ZnVuY3Rpb24oYSl7YiYmKHgmJmwoeCwhMCksZigpKTtcbmNsZWFySW50ZXJ2YWwodCk7ZC5kZXRhY2gmJmQuZGV0YWNoKFwibW91c2Vtb3ZlXCIsbCxjKX0scmVhZHk6ZnVuY3Rpb24oKXtyZXR1cm4gYS51ZV9jZWwmJmEudWVfY2VsLmxvZ30scmVzZXQ6ZnVuY3Rpb24oKXtzPVtdO0I9W107RT0wO3g9bnVsbH19fSh3aW5kb3cucGVyZm9ybWFuY2UpLGEudWVfY2VsJiZhLnVlX2NlbC5yZWdpc3Rlck1vZHVsZShcIm1vdXNlIG1vdmUgbW9kdWxlXCIsYS51ZV9tbW0pKX0pKHVlX2NzbSxkb2N1bWVudCk7XG5cblxuXG51ZV9jc20udWUuZXhlYyhmdW5jdGlvbihiLGMpe3ZhciBlPWZ1bmN0aW9uKCl7fSxmPWZ1bmN0aW9uKCl7cmV0dXJue3NlbmQ6ZnVuY3Rpb24oYixkKXtpZihkJiZiKXt2YXIgYTtpZihjLlhEb21haW5SZXF1ZXN0KWE9bmV3IFhEb21haW5SZXF1ZXN0LGEub25lcnJvcj1lLGEub250aW1lb3V0PWUsYS5vbnByb2dyZXNzPWUsYS5vbmxvYWQ9ZSxhLnRpbWVvdXQ9MDtlbHNlIGlmKGMuWE1MSHR0cFJlcXVlc3Qpe2lmKGE9bmV3IFhNTEh0dHBSZXF1ZXN0LCEoXCJ3aXRoQ3JlZGVudGlhbHNcImluIGEpKXRocm93XCJcIjt9ZWxzZSBhPXZvaWQgMDtpZighYSl0aHJvd1wiXCI7YS5vcGVuKFwiUE9TVFwiLGIsITApO2Euc2V0UmVxdWVzdEhlYWRlciYmYS5zZXRSZXF1ZXN0SGVhZGVyKFwiQ29udGVudC10eXBlXCIsXCJ0ZXh0L3BsYWluXCIpO2Euc2VuZChkKX19LGlzU3VwcG9ydGVkOiEwfX0oKSxnPWZ1bmN0aW9uKCl7cmV0dXJue3NlbmQ6ZnVuY3Rpb24oYyxkKXtpZihjJiZkKWlmKG5hdmlnYXRvci5zZW5kQmVhY29uKGMsXG5kKSliLnVlX3NidWltcCYmYi51ZSYmYi51ZS5zc3cmJmIudWUuc3N3KFwiZWVsc3RzXCIsXCJzY3NcIik7ZWxzZSB0aHJvd1wiXCI7fSxpc1N1cHBvcnRlZDohIW5hdmlnYXRvci5zZW5kQmVhY29uJiYhKGMuY29yZG92YSYmYy5jb3Jkb3ZhLnBsYXRmb3JtSWQmJlwiaW9zXCI9PWMuY29yZG92YS5wbGF0Zm9ybUlkKX19KCk7Yi51ZS5fYWp4PWY7Yi51ZS5fc0Jjbj1nfSxcIlRyYW5zcG9ydGF0aW9uLWNsaWVudHNcIikodWVfY3NtLHdpbmRvdyk7XG51ZV9jc20udWUuZXhlYyhmdW5jdGlvbihjLGYpe2Z1bmN0aW9uIEMoKXtmb3IodmFyIGE9MDthXHUwMDNDYXJndW1lbnRzLmxlbmd0aDthKyspe3ZhciBiPWFyZ3VtZW50c1thXTt0cnl7dmFyIGM7aWYoYi5pc1N1cHBvcnRlZCl7dmFyIGc9dC5idWlsZFBheWxvYWQoayxlKTtjPWIuc2VuZChOLGcpfWVsc2UgdGhyb3cgZHVtbXlFeGNlcHRpb247cmV0dXJuIGN9Y2F0Y2gobSl7fX1EKHttOlwiQWxsIHN1cHBvcnRlZCBjbGllbnRzIGZhaWxlZFwiLGF0dHJpYnV0aW9uOlwiQ1NNU3VzaGlDbGllbnRfVFJBTlNQT1JUQVRJT05fRkFJTFwiLGY6XCJzdXNoaS1jbGllbnQuanNcIixsb2dMZXZlbDpcIkVSUk9SXCJ9LGYudWVfZXJyX2NoYW58fFwianNlcnJcIil9ZnVuY3Rpb24gbigpe2lmKGUubGVuZ3RoKXtmb3IodmFyIGE9MDthXHUwMDNDcC5sZW5ndGg7YSsrKXBbYV0oKTtDKGQuX3NCY258fHt9LGQuX2FqeHx8e30pO2U9W107aD17fTtrPXt9O3U9dj1xPXc9MH19ZnVuY3Rpb24gTygpe3ZhciBhPW5ldyBEYXRlLGI9ZnVuY3Rpb24oYSl7cmV0dXJuIDEwPlxuYT9cIjBcIithOmF9O3JldHVybiBEYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZz9hLnRvSVNPU3RyaW5nKCk6YS5nZXRVVENGdWxsWWVhcigpK1wiLVwiK2IoYS5nZXRVVENNb250aCgpKzEpK1wiLVwiK2IoYS5nZXRVVENEYXRlKCkpK1wiVFwiK2IoYS5nZXRVVENIb3VycygpKStcIjpcIitiKGEuZ2V0VVRDTWludXRlcygpKStcIjpcIitiKGEuZ2V0VVRDU2Vjb25kcygpKStcIi5cIitTdHJpbmcoKGEuZ2V0VVRDTWlsbGlzZWNvbmRzKCkvMUUzKS50b0ZpeGVkKDMpKS5zbGljZSgyLDUpK1wiWlwifWZ1bmN0aW9uIHgoYSl7dHJ5e3JldHVybiBKU09OLnN0cmluZ2lmeShhKX1jYXRjaChiKXt9cmV0dXJuIG51bGx9ZnVuY3Rpb24gRShhLGIsbCxnKXt2YXIgbT0hMTtnPWd8fHt9O3IrKztyPT1GJiZEKHttOlwiTWF4IG51bWJlciBvZiBTdXNoaSBMb2dzIGV4Y2VlZGVkXCIsZjpcInN1c2hpLWNsaWVudC5qc1wiLGxvZ0xldmVsOlwiRVJST1JcIixhdHRyaWJ1dGlvbjpcIkNTTVN1c2hpQ2xpZW50X01BWF9DQUxMU1wifSxmLnVlX2Vycl9jaGFufHxcblwianNlcnJcIik7dmFyIHk7aWYoeT0hKHI+PUYpKSh5PWEmJi0xXHUwMDNDYS5jb25zdHJ1Y3Rvci50b1N0cmluZygpLmluZGV4T2YoXCJPYmplY3RcIikmJmImJi0xXHUwMDNDYi5jb25zdHJ1Y3Rvci50b1N0cmluZygpLmluZGV4T2YoXCJTdHJpbmdcIikmJmwmJi0xXHUwMDNDbC5jb25zdHJ1Y3Rvci50b1N0cmluZygpLmluZGV4T2YoXCJTdHJpbmdcIikpfHxQKys7eSYmKGQuY291bnQmJmQuY291bnQoXCJFdmVudDpcIitsLDEpLGEucHJvZHVjZXJJZD1hLnByb2R1Y2VySWR8fGIsYS5zY2hlbWFJZD1hLnNjaGVtYUlkfHxsLGEudGltZXN0YW1wPU8oKSxiPURhdGUubm93P0RhdGUubm93KCk6K25ldyBEYXRlLGw9TWF0aC5yYW5kb20oKS50b1N0cmluZygpLnN1YnN0cmluZygyLDEyKSxhLm1lc3NhZ2VJZD1jLnVlX2lkK1wiLVwiK2IrXCItXCIrbCxnJiYhZy5zc2QmJihhLnNlc3Npb25JZD1hLnNlc3Npb25JZHx8Yy51ZV9zaWQsYS5yZXF1ZXN0SWQ9YS5yZXF1ZXN0SWR8fGMudWVfaWQsYS5vYmZ1c2NhdGVkTWFya2V0cGxhY2VJZD1cbmEub2JmdXNjYXRlZE1hcmtldHBsYWNlSWR8fGMudWVfbWlkKSwoYj14KGEpKT8oYj1iLmxlbmd0aCwoZS5sZW5ndGg9PVF8fHErYj5SKSYmbigpLHErPWIsYT17ZGF0YTp0LmNvbXByZXNzRXZlbnQoYSl9LGUucHVzaChhKSwoZ3x8e30pLm4/MD09PUc/bigpOnV8fCh1PWYuc2V0VGltZW91dChuLEcpKTp2fHwodj1mLnNldFRpbWVvdXQobixTKSksbT0hMCk6bT0hMSk7IW0mJmMudWVfaW50JiZjb25zb2xlLmVycm9yKFwiSW52YWxpZCBKUyBOZXh1cyBBUEkgY2FsbFwiKTtyZXR1cm4gbX1mdW5jdGlvbiBIKCl7aWYoIUkpe2Zvcih2YXIgYT0wO2FcdTAwM0N6Lmxlbmd0aDthKyspelthXSgpO2ZvcihhPTA7YVx1MDAzQ3AubGVuZ3RoO2ErKylwW2FdKCk7ZS5sZW5ndGgmJihjLnVlX3NidWltcCYmYy51ZSYmYy51ZS5zc3cmJihhPXgoe2RjdDprLGV2dDplfSksYy51ZS5zc3coXCJlZWxkYXRhXCIsYSksYy51ZS5zc3coXCJlZWxzdHNcIixcInVua1wiKSksQyhkLl9zQmNufHx7fSkpO0k9ITB9fWZ1bmN0aW9uIEooYSl7ei5wdXNoKGEpfVxuZnVuY3Rpb24gSyhhKXtwLnB1c2goYSl9dmFyIEY9MUUzLFE9NDk5LFI9NTI0Mjg4LHM9ZnVuY3Rpb24oKXt9LGQ9Yy51ZXx8e30sRD1kLmxvZ3x8cyxUPWMudWV4fHxzOyhjLnVldHx8cykoXCJiYlwiLFwidWVfc3VzaGlfdjFcIix7d2I6MX0pO3ZhciBOPWMudWVfc3VybHx8XCJodHRwczovL3VuYWdpLW5hLmFtYXpvbi5jb20vMS9ldmVudHMvY29tLmFtYXpvbi5jc20ubmV4dXNjbGllbnQuZ2FtbWFcIixVPVtcIm1lc3NhZ2VJZFwiLFwidGltZXN0YW1wXCJdLEE9XCIjXCIsZT1bXSxoPXt9LGs9e30scT0wLHc9MCxQPTAscj0wLEI9MCxMPTEsTT0yLHo9W10scD1bXSxJPSExLHUsdixHPXZvaWQgMD09PWMudWVfaHBzaT8xRTM6Yy51ZV9ocHNpLFM9dm9pZCAwPT09Yy51ZV9scHNpPzFFNDpjLnVlX2xwc2ksdD1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSl7aFthXT1BK3crKztrW2hbYV1dPWE7cmV0dXJuIGhbYV19ZnVuY3Rpb24gYihhKXtyZXR1cm4gYS5sZW5ndGg+KEErdykubGVuZ3RofHxhLmNoYXJBdCgwKT09PVxuQX1mdW5jdGlvbiBjKGEpe2lmKGEpc3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwibnVtYmVyXCI6cmV0dXJuIShpc05hTihhKXx8SW5maW5pdHk9PT1hKSYmYihhLnRvU3RyaW5nKCkpO2Nhc2UgXCJib29sZWFuXCI6YnJlYWs7Y2FzZSBcInN0cmluZ1wiOnJldHVybiBiKGEpO2RlZmF1bHQ6cmV0dXJuITB9cmV0dXJuITF9ZnVuY3Rpb24gZyhiKXtpZihjKGIpKXt2YXIgZD1CO2IgaW5zdGFuY2VvZiBBcnJheT9kPU06YiBpbnN0YW5jZW9mIEZ1bmN0aW9uP2Q9QjpiIGluc3RhbmNlb2YgT2JqZWN0JiYoZD1MKTtzd2l0Y2goZCl7Y2FzZSBCOmI9aFtiXT9oW2JdOmEoYik7YnJlYWs7Y2FzZSBNOnZhciBlPWI7Yj1bXTtmb3IodmFyIGQ9ZS5sZW5ndGgsZj0wO2ZcdTAwM0NkO2YrKyliW2ZdPWcoZVtmXSk7YnJlYWs7Y2FzZSBMOmQ9e307Zm9yKGUgaW4gYiliLmhhc093blByb3BlcnR5KGUpJiYoZFtoW2VdP2hbZV06YShlKV09LTE9PVUuaW5kZXhPZihlKT9nKGJbZV0pOmJbZV0pO2I9ZH19cmV0dXJuIGJ9cmV0dXJue2NvbXByZXNzRXZlbnQ6ZyxcbmJ1aWxkUGF5bG9hZDpmdW5jdGlvbigpe3JldHVybiB4KHtjczp7ZGN0Omt9LGV2ZW50czplfSl9fX0oKTsoZnVuY3Rpb24oKXtpZihkLmV2ZW50JiZkLmV2ZW50LmlzU3R1Yil7aWYoYy51ZV9zYnVpbXAmJmMudWUmJmMudWUuc3N3KXt2YXIgYT1jLnVlLnNzdyhcImVlbHN0c1wiKS52YWw7aWYoYSYmXCJ1bmtcIj09PWEmJihhPWMudWUuc3N3KFwiZWVsZGF0YVwiKS52YWwpKXt2YXIgYjthOnt0cnl7Yj1KU09OLnBhcnNlKGEpO2JyZWFrIGF9Y2F0Y2goZil7fWI9bnVsbH1iJiZiLmV2dCBpbnN0YW5jZW9mIEFycmF5JiZiLmRjdCBpbnN0YW5jZW9mIE9iamVjdCYmKGU9Yi5ldnQsaz1iLmRjdCxlJiZrJiYobigpLGMudWUuc3N3KFwiZWVsZGF0YVwiLFwie31cIiksYy51ZS5zc3coXCJlZWxzdHNcIixcInNjc1wiKSkpfX1kLmV2ZW50LnJlcGxheShmdW5jdGlvbihhKXthWzNdPWFbM118fHt9O2FbM10ubj0xO0UuYXBwbHkodGhpcyxhKX0pO2Qub25TdXNoaVVubG9hZC5yZXBsYXkoZnVuY3Rpb24oYSl7SihhWzBdKX0pO1xuZC5vblN1c2hpRmx1c2gucmVwbGF5KGZ1bmN0aW9uKGEpe0soYVswXSl9KX19KSgpO2QuYXR0YWNoKFwiYmVmb3JldW5sb2FkXCIsSCk7ZC5hdHRhY2goXCJwYWdlaGlkZVwiLEgpO2QuX2NtcHM9dDtkLmV2ZW50PUU7ZC5ldmVudC5yZXNldD1mdW5jdGlvbigpe3I9MH07ZC5vblN1c2hpVW5sb2FkPUo7ZC5vblN1c2hpRmx1c2g9Szt0cnl7Zi5QJiZmLlAucmVnaXN0ZXImJmYuUC5yZWdpc3RlcihcInN1c2hpLWNsaWVudFwiLHMpfWNhdGNoKFYpe2MudWVMb2dFcnJvcihWLHtsb2dMZXZlbDpcIldBUk5cIn0pfVQoXCJsZFwiLFwidWVfc3VzaGlfdjFcIix7d2I6MX0pfSxcIk54cy1KUy1DbGllbnRcIikodWVfY3NtLHdpbmRvdyk7XG5cblxudWVfY3NtLnVlX3VucnQgPSA3NTA7XG4oZnVuY3Rpb24oZCxiLHQpe2Z1bmN0aW9uIHUoYSxiKXt2YXIgYz1hLnNyY0VsZW1lbnR8fGEudGFyZ2V0fHx7fSxlPXtrOncsdDpiLnQsZHQ6Yi5kdCx4OmEucGFnZVgseTphLnBhZ2VZLHA6Zi5nZXRYUGF0aChjKSxuOmMubm9kZU5hbWV9O2EuYnV0dG9uJiYoZS5iPWEuYnV0dG9uKTtjLnR5cGUmJihlLnR5PWMudHlwZSk7Yy5ocmVmJiYoZS5yPWYuZXh0cmFjdFN0cmluZ1ZhbHVlKGMuaHJlZikpO2MuaWQmJihlLmk9Yy5pZCk7Yy5jbGFzc05hbWUmJmMuY2xhc3NOYW1lLnNwbGl0JiYoZS5jPWMuY2xhc3NOYW1lLnNwbGl0KC9cXHMrLykpO2crPTE7Zi5nZXRGaXJzdEFzY2VuZGluZ1dpZGdldChjLGZ1bmN0aW9uKGEpe2Uud2Q9YTtkLnVlLmxvZyhlLHIpfSl9ZnVuY3Rpb24geChhKXtpZigheShhLnNyY0VsZW1lbnR8fGEudGFyZ2V0KSl7ays9MTtuPSEwO3ZhciB2PWg9ZC51ZS5kKCksYztwJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcC5ub3cmJmEudGltZVN0YW1wJiYoYz1wLm5vdygpLVxuYS50aW1lU3RhbXAsYz1wYXJzZUZsb2F0KGMudG9GaXhlZCgyKSkpO3M9Yi5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dShhLHt0OnYsZHQ6Y30pfSx6KX19ZnVuY3Rpb24gQShhKXtpZihhKXt2YXIgYj1hLmZpbHRlcihCKTthLmxlbmd0aCE9PWIubGVuZ3RoJiYocT0hMCxsPWQudWUuZCgpLG4mJnEmJihsJiZoJiZkLnVlLmxvZyh7azpDLHQ6aCxtOk1hdGguYWJzKGwtaCl9LHIpLG0oKSxxPSExLGw9MCkpfX1mdW5jdGlvbiBCKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPVwiY2hhcmFjdGVyRGF0YVwiPT09YS50eXBlP2EudGFyZ2V0LnBhcmVudEVsZW1lbnQ6YS50YXJnZXQ7aWYoIWJ8fCFiLmhhc0F0dHJpYnV0ZXN8fCFiLmF0dHJpYnV0ZXMpcmV0dXJuITE7dmFyIGM9e1wiY2xhc3NcIjpcImd3LWNsb2NrIGd3LWNsb2NrLWFyaWEgcy1pdGVtLWNvbnRhaW5lci1oZWlnaHQtYXV0byBmZWVkLWNhcm91c2VsIHVzaW5nLW1vdXNlIGtmcy1pbm5lci1jb250YWluZXJcIi5zcGxpdChcIiBcIiksaWQ6W1wiZGVhbENsb2NrXCIsXG5cImRlYWxfZXhwaXJ5X3RpbWVyXCIsXCJ0aW1lclwiXSxyb2xlOltcInRpbWVyXCJdfSxlPSExO09iamVjdC5rZXlzKGMpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGQ9Yi5hdHRyaWJ1dGVzW2FdP2IuYXR0cmlidXRlc1thXS52YWx1ZTpcIlwiOyhjW2FdfHxcIlwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpey0xIT09ZC5pbmRleE9mKGEpJiYoZT0hMCl9KX0pO3JldHVybiBlfWZ1bmN0aW9uIHkoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9KGYuZXh0cmFjdFN0cmluZ1ZhbHVlKGEubm9kZU5hbWUpfHxcIlwiKS50b0xvd2VyQ2FzZSgpLGM9KGYuZXh0cmFjdFN0cmluZ1ZhbHVlKGEudHlwZSl8fFwiXCIpLnRvTG93ZXJDYXNlKCksZD0oZi5leHRyYWN0U3RyaW5nVmFsdWUoYS5ocmVmKXx8XCJcIikudG9Mb3dlckNhc2UoKTthPShmLmV4dHJhY3RTdHJpbmdWYWx1ZShhLmlkKXx8XCJcIikudG9Mb3dlckNhc2UoKTt2YXIgZz1cImNoZWNrYm94IGNvbG9yIGRhdGUgZGF0ZXRpbWUtbG9jYWwgZW1haWwgZmlsZSBtb250aCBudW1iZXIgcGFzc3dvcmQgcmFkaW8gcmFuZ2UgcmVzZXQgc2VhcmNoIHRlbCB0ZXh0IHRpbWUgdXJsIHdlZWtcIi5zcGxpdChcIiBcIik7XG5pZigtMSE9PVtcInNlbGVjdFwiLFwidGV4dGFyZWFcIixcImh0bWxcIl0uaW5kZXhPZihiKXx8XCJpbnB1dFwiPT09YiYmLTEhPT1nLmluZGV4T2YoYyl8fFwiYVwiPT09YiYmLTEhPT1kLmluZGV4T2YoXCJodHRwXCIpfHwtMSE9PVtcInNpdGJyZWFkZXJyaWdodHBhZ2V0dXJuZXJcIixcInNpdGJyZWFkZXJsZWZ0cGFnZXR1cm5lclwiLFwic2l0YnJlYWRlcnBhZ2Vjb250YWluZXJcIl0uaW5kZXhPZihhKSlyZXR1cm4hMH1mdW5jdGlvbiBtKCl7bj0hMTtoPTA7Yi5jbGVhclRpbWVvdXQocyl9ZnVuY3Rpb24gRCgpe2IudWUub25TdXNoaVVubG9hZChmdW5jdGlvbigpe3VlLmV2ZW50KHt2aW9sYXRpb25UeXBlOlwidW5yZXNwb25zaXZlLWNsaWNrc1wiLHZpb2xhdGlvbkNvdW50OmcsdG90YWxTY2FubmVkOmt9LFwiY3NtXCIsXCJjc20uQXJtb3JlZENYR3VhcmRyYWlsc1Zpb2xhdGlvbi4zXCIpfSk7Yi51ZS5vbnVubG9hZChmdW5jdGlvbigpe3VlLmNvdW50KFwiYXJtb3JlZC1jeGd1YXJkcmFpbHMudW5yZXNwb25zaXZlLWNsaWNrcy52aW9sYXRpb25zXCIsXG5nKTt1ZS5jb3VudChcImFybW9yZWQtY3hndWFyZHJhaWxzLnVucmVzcG9uc2l2ZS1jbGlja3MudmlvbGF0aW9uUmF0ZVwiLGcvayoxMDB8fDApfSl9aWYoYi5NdXRhdGlvbk9ic2VydmVyJiZiLmFkZEV2ZW50TGlzdGVuZXImJk9iamVjdC5rZXlzJiZkJiZkLnVlJiZkLnVlLmxvZyYmZC51ZV91bnJ0JiZkLnVlX3V0aWxzKXt2YXIgej1kLnVlX3VucnQscj1cImNlbFwiLHc9XCJ1bnJfbWNtXCIsQz1cInJlc19tY21cIixwPWIucGVyZm9ybWFuY2UsZj1kLnVlX3V0aWxzLG49ITEsaD0wLHM9MCxxPSExLGw9MCxnPTAsaz0wO2IuYWRkRXZlbnRMaXN0ZW5lciYmKGIuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLHgsITApLGIuYWRkRXZlbnRMaXN0ZW5lcihcImJlZm9yZXVubG9hZFwiLG0sITApLGIuYWRkRXZlbnRMaXN0ZW5lcihcInZpc2liaWxpdHljaGFuZ2VcIixtLCEwKSxiLmFkZEV2ZW50TGlzdGVuZXIoXCJwYWdlaGlkZVwiLG0sITApKTtiLnVlJiZiLnVlLmV2ZW50JiZiLnVlLm9uU3VzaGlVbmxvYWQmJlxuYi51ZS5vbnVubG9hZCYmRCgpOyhuZXcgTXV0YXRpb25PYnNlcnZlcihBKSkub2JzZXJ2ZSh0LHtjaGlsZExpc3Q6ITAsYXR0cmlidXRlczohMCxjaGFyYWN0ZXJEYXRhOiEwLHN1YnRyZWU6ITB9KX19KSh1ZV9jc20sd2luZG93LGRvY3VtZW50KTtcblxuXG51ZV9jc20udWUuZXhlYyhmdW5jdGlvbihnLGUpe2lmKGUudWVfZXJyKXt2YXIgZj1cIlwiO2UudWVfZXJyLmVycm9ySGFuZGxlcnN8fChlLnVlX2Vyci5lcnJvckhhbmRsZXJzPVtdKTtlLnVlX2Vyci5lcnJvckhhbmRsZXJzLnB1c2goe25hbWU6XCJmY3R4XCIsaGFuZGxlcjpmdW5jdGlvbihhKXtpZighYS5sb2dMZXZlbHx8XCJGQVRBTFwiPT09YS5sb2dMZXZlbClpZihmPWcuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJodG1sXCIpWzBdLmlubmVySFRNTCl7dmFyIGI9Zi5pbmRleE9mKFwidmFyIHVlX3QwPXVlX3QwfHwrbmV3IERhdGUoKTtcIik7aWYoLTEhPT1iKXt2YXIgYj1mLnN1YnN0cigwLGIpLnNwbGl0KFN0cmluZy5mcm9tQ2hhckNvZGUoMTApKSxkPU1hdGgubWF4KGIubGVuZ3RoLTEwLTEsMCksYj1iLnNsaWNlKGQsYi5sZW5ndGgtMSk7YS5mY3NtbG49ZCtiLmxlbmd0aCsxO2EuY2luZm89YS5jaW5mb3x8e307Zm9yKHZhciBjPTA7Y1x1MDAzQ2IubGVuZ3RoO2MrKylhLmNpbmZvW2QrYysxK1wiXCJdPVxuYltjXX1iPWYuc3BsaXQoU3RyaW5nLmZyb21DaGFyQ29kZSgxMCkpO2EuY2luZm89YS5jaW5mb3x8e307aWYoIShhLmZ8fHZvaWQgMD09PWEubHx8YS5sIGluIGEuY2luZm8pKWZvcihjPSthLmwtMSxkPU1hdGgubWF4KGMtNSwwKSxjPU1hdGgubWluKGMrNSxiLmxlbmd0aC0xKTtkXHUwMDNDPWM7ZCsrKWEuY2luZm9bZCsxK1wiXCJdPWJbZF19fX0pfX0sXCJmYXRhbHMtY29udGV4dFwiKShkb2N1bWVudCx3aW5kb3cpO1xuXG5cbihmdW5jdGlvbihtLGIpe2Z1bmN0aW9uIGMoayl7ZnVuY3Rpb24gZihhKXthJiZcInN0cmluZ1wiPT09dHlwZW9mIGEmJihhPShhPWEubWF0Y2goL14oPzpodHRwcz86KT9cXC9cXC8oLio/KShcXC98JCkvaSkpJiYxXHUwMDNDYS5sZW5ndGg/YVsxXTpudWxsLGEmJmEmJihcIm51bWJlclwiPT09dHlwZW9mIGVbYV0/ZVthXSsrOmVbYV09MSkpfWZ1bmN0aW9uIGQoYSl7dmFyIGU9MTAsZD0rbmV3IERhdGU7YSYmYS50aW1lUmVtYWluaW5nP2U9YS50aW1lUmVtYWluaW5nKCk6YT17dGltZVJlbWFpbmluZzpmdW5jdGlvbigpe3JldHVybiBNYXRoLm1heCgwLGUtKCtuZXcgRGF0ZS1kKSl9fTtmb3IodmFyIGM9Yi5wZXJmb3JtYW5jZS5nZXRFbnRyaWVzKCksaz1lO2dcdTAwM0NjLmxlbmd0aCYmaz5uOyljW2ddLm5hbWUmJmYoY1tnXS5uYW1lKSxnKyssaz1hLnRpbWVSZW1haW5pbmcoKTtnPj1jLmxlbmd0aD9oKCEwKTpsKCl9ZnVuY3Rpb24gaChhKXtpZighYSl7YT1tLnNjcmlwdHM7dmFyIGM7aWYoYSlmb3IodmFyIGQ9XG4wO2RcdTAwM0NhLmxlbmd0aDtkKyspKGM9YVtkXS5nZXRBdHRyaWJ1dGUoXCJzcmNcIikpJiZcInVuZGVmaW5lZFwiIT09YyYmZihjKX0wXHUwMDNDT2JqZWN0LmtleXMoZSkubGVuZ3RoJiYocCYmdWVfY3NtLnVlJiZ1ZV9jc20udWUuZXZlbnQmJnVlX2NzbS51ZS5ldmVudCh7ZG9tYWluczplfSxcImNzbVwiLFwiY3NtLkNyb3NzT3JpZ2luRG9tYWlucy4xXCIpLGIudWVfZXh0PWUpfWZ1bmN0aW9uIGwoKXshMD09PWs/ZCgpOmIucmVxdWVzdElkbGVDYWxsYmFjaz9iLnJlcXVlc3RJZGxlQ2FsbGJhY2soZCk6Yi5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU/Yi5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZCk6Yi5zZXRUaW1lb3V0KGQsMTAwKX1mdW5jdGlvbiBjKCl7aWYoYi5wZXJmb3JtYW5jZSYmYi5wZXJmb3JtYW5jZS5nZXRFbnRyaWVzKXt2YXIgYT1iLnBlcmZvcm1hbmNlLmdldEVudHJpZXMoKTshYXx8MD49YS5sZW5ndGg/aCghMSk6bCgpfWVsc2UgaCghMSl9dmFyIGU9Yi51ZV9leHR8fHt9O2IudWVfZXh0fHxjKCk7XG5yZXR1cm4gZX1mdW5jdGlvbiBxKCl7c2V0VGltZW91dChjLHIpfXZhciBzPWIudWVfZHNlcnJ8fCExLHA9ITAsbj0xLHI9MkUzLGc9MDtiLnVlX2VyciYmcyYmKGIudWVfZXJyLmVycm9ySGFuZGxlcnN8fChiLnVlX2Vyci5lcnJvckhhbmRsZXJzPVtdKSxiLnVlX2Vyci5lcnJvckhhbmRsZXJzLnB1c2goe25hbWU6XCJleHRcIixoYW5kbGVyOmZ1bmN0aW9uKGIpe2lmKCFiLmxvZ0xldmVsfHxcIkZBVEFMXCI9PT1iLmxvZ0xldmVsKXt2YXIgZj1jKCEwKSxkPVtdLGg7Zm9yKGggaW4gZil7dmFyIGY9aCxnPWYubWF0Y2goL2FtYXpvbihcXC5jb20/KT9cXC5cXHd7MiwzfSQvaSk7ZyYmMVx1MDAzQ2cubGVuZ3RofHwtMSE9PWYuaW5kZXhPZihcImFtYXpvbi1hZHN5c3RlbS5jb21cIil8fC0xIT09Zi5pbmRleE9mKFwiYW1hem9ucGF5LmNvbVwiKXx8LTEhPT1mLmluZGV4T2YoXCJjbG91ZGZyb250LWxhYnMuYW1hem9uYXdzLmNvbVwiKXx8ZC5wdXNoKGgpfWIuZXh0PWR9fX0pKTtiLnVlJiZiLnVlLmlzbD9jKCk6Yi51ZSYmXG51ZS5hdHRhY2gmJnVlLmF0dGFjaChcImxvYWRcIixxKX0pKGRvY3VtZW50LHdpbmRvdyk7XG5cblxuXG5cblxudWVfY3NtLnVlLmV4ZWMoZnVuY3Rpb24oYixlKXtmdW5jdGlvbiBxKCl7Zm9yKHZhciBhPTA7YVx1MDAzQ2YubGVuZ3RoO2ErKylhOmZvcih2YXIgZD1yLnJlcGxhY2UoQSxmW2FdKStnW2ZbYV1dK3MsYz1hcmd1bWVudHMsYj0wO2JcdTAwM0NjLmxlbmd0aDtiKyspdHJ5e2NbYl0uc2VuZChkKTticmVhayBhfWNhdGNoKGUpe31nPXt9O2Y9W107bT0wO2s9bn1mdW5jdGlvbiB0KCl7cShCLHUpfWZ1bmN0aW9uIHYoYSxsLGMpe3ArKztpZihwPncpZC5jb3VudCYmMT09cC13JiYoZC5jb3VudChcIldlYmxhYlRyaWdnZXJUaHJlc2hvbGRSZWFjaGVkXCIsMSksYi51ZV9pbnQmJmNvbnNvbGUuZXJyb3IoXCJOdW1iZXIgb2YgbWF4IGNhbGwgcmVhY2hlZC4gRGF0YSB3aWxsIG5vIGxvbmdlciBiZSBzZW5kXCIpKTtlbHNle3ZhciBoPWN8fHt9O2gmJi0xXHUwMDNDaC5jb25zdHJ1Y3Rvci50b1N0cmluZygpLmluZGV4T2YoQykmJmEmJi0xXHUwMDNDYS5jb25zdHJ1Y3Rvci50b1N0cmluZygpLmluZGV4T2YoeCkmJmwmJi0xXHUwMDNDbC5jb25zdHJ1Y3Rvci50b1N0cmluZygpLmluZGV4T2YoeCk/XG4oaD1iLnVlX2lkLGMmJmMucmlkJiYoaD1jLnJpZCksYz1oLGE9ZW5jb2RlVVJJQ29tcG9uZW50KFwiLHdsPVwiK2ErXCIvXCIrbCksMkUzPmEubGVuZ3RoK24/KDJFM1x1MDAzQ2srYS5sZW5ndGgmJnQoKSx2b2lkIDA9PT1nW2NdJiYoZ1tjXT1cIlwiLGYucHVzaChjKSksZ1tjXSs9YSxrKz1hLmxlbmd0aCxtfHwobT1lLnNldFRpbWVvdXQodCxEKSkpOmIudWVfaW50JiZjb25zb2xlLmVycm9yKFwiSW52YWxpZCBBUEkgY2FsbC4gVGhlIGlucHV0IHByb3ZpZGVkIGlzIG92ZXIgMjAwMCBjaGFycy5cIikpOmQuY291bnQmJihkLmNvdW50KFwiV2VibGFiVHJpZ2dlckltcHJvcGVyQVBJQ2FsbFwiLDEpLGIudWVfaW50JiZjb25zb2xlLmVycm9yKFwiSW52YWxpZCBBUEkgY2FsbC4gVGhlIGlucHV0IHByb3ZpZGVkIGRvZXMgbm90IG1hdGNoIHRoZSBBUEkgcHJvdG9jb2wgaS5lIHVlLnRyaWdnZXIoU3RyaW5nLCBTdHJpbmcsIE9iamVjdCkuXCIpKX19ZnVuY3Rpb24gRSgpe2QudHJpZ2dlciYmZC50cmlnZ2VyLmlzU3R1YiYmXG5kLnRyaWdnZXIucmVwbGF5KGZ1bmN0aW9uKGEpe3YuYXBwbHkodGhpcyxhKX0pfWZ1bmN0aW9uIHkoKXt6fHwoZi5sZW5ndGgmJnEodSksej0hMCl9dmFyIHM9XCI6MTIzNFwiLHI9XCIvL1wiK2IudWVfZnVybCtcIi8xL3JlbW90ZS13ZWJsYWItdHJpZ2dlcnMvMS9PRS9cIitiLnVlX21pZCtcIjpcIitiLnVlX3NpZCtcIjpQTENITERSX1JJRCRzOndsLWNsaWVudC1pZCUzRENTTVRyaWdlclwiLEE9XCJQTENITERSX1JJRFwiLEQ9Yi53dHR8fDFFNCxuPXIubGVuZ3RoK3MubGVuZ3RoLHc9Yi5td3RjfHwyRTMsRj1lLlhNTEh0dHBSZXF1ZXN0JiZcIndpdGhDcmVkZW50aWFsc1wiaW4gbmV3IGUuWE1MSHR0cFJlcXVlc3QseD1cIlN0cmluZ1wiLEM9XCJPYmplY3RcIixkPWIudWUsZz17fSxmPVtdLGs9bixtLHo9ITEscD0wLEI9ZnVuY3Rpb24oKXtyZXR1cm57c2VuZDpmdW5jdGlvbihhKXtpZihGKXt2YXIgYj1uZXcgZS5YTUxIdHRwUmVxdWVzdDtiLm9wZW4oXCJHRVRcIixhLCEwKTtiLnNlbmQoKX1lbHNlIHRocm93XCJcIjtcbn19fSgpLHU9ZnVuY3Rpb24oKXtyZXR1cm57c2VuZDpmdW5jdGlvbihhKXsobmV3IEltYWdlKS5zcmM9YX19fSgpO2UuZW5jb2RlVVJJQ29tcG9uZW50JiYoZC5hdHRhY2gmJihkLmF0dGFjaChcImJlZm9yZXVubG9hZFwiLHkpLGQuYXR0YWNoKFwicGFnZWhpZGVcIix5KSksRSgpLGQudHJpZ2dlcj12KX0sXCJjbGllbnQtd2JsLXRyZ1wiKSh1ZV9jc20sd2luZG93KTtcblxuXG4oZnVuY3Rpb24oayxkLGgpe2Z1bmN0aW9uIGYoYSxjLGIpe2EmJmEuaW5kZXhPZiYmMD09PWEuaW5kZXhPZihcImh0dHBcIikmJjAhPT1hLmluZGV4T2YoXCJodHRwc1wiKSYmbChzLGMsYSxiKX1mdW5jdGlvbiBnKGEsYyxiKXthJiZhLmluZGV4T2YmJihsb2NhdGlvbi5ocmVmLnNwbGl0KFwiI1wiKVswXSE9YSYmbnVsbCE9PWEmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYXx8bCh0LGMsYSxiKSl9ZnVuY3Rpb24gbChhLGMsYixlKXttW2JdfHwoZT11JiZlP24oZSk6XCJOL0FcIixkLnVlTG9nRXJyb3ImJmQudWVMb2dFcnJvcih7bWVzc2FnZTphK2MrXCIgOiBcIitiLGxvZ0xldmVsOnYsc3RhY2s6XCJOL0FcIn0se2F0dHJpYnV0aW9uOmV9KSxtW2JdPTEscCsrKX1mdW5jdGlvbiBlKGEsYyl7aWYoYSYmYylmb3IodmFyIGI9MDtiXHUwMDNDYS5sZW5ndGg7YisrKXRyeXtjKGFbYl0pfWNhdGNoKGQpe319ZnVuY3Rpb24gcSgpe3JldHVybiBkLnBlcmZvcm1hbmNlJiZkLnBlcmZvcm1hbmNlLmdldEVudHJpZXNCeVR5cGU/XG5kLnBlcmZvcm1hbmNlLmdldEVudHJpZXNCeVR5cGUoXCJyZXNvdXJjZVwiKTpbXX1mdW5jdGlvbiBuKGEpe2lmKGEuaWQpcmV0dXJuXCIvLypbQGlkPSdcIithLmlkK1wiJ11cIjt2YXIgYztjPTE7dmFyIGI7Zm9yKGI9YS5wcmV2aW91c1NpYmxpbmc7YjtiPWIucHJldmlvdXNTaWJsaW5nKWIubm9kZU5hbWU9PWEubm9kZU5hbWUmJihjKz0xKTtiPWEubm9kZU5hbWU7MSE9YyYmKGIrPVwiW1wiK2MrXCJdXCIpO2EucGFyZW50Tm9kZSYmKGI9bihhLnBhcmVudE5vZGUpK1wiL1wiK2IpO3JldHVybiBifWZ1bmN0aW9uIHcoKXt2YXIgYT1oLmltYWdlczthJiZhLmxlbmd0aCYmZShhLGZ1bmN0aW9uKGEpe3ZhciBiPWEuZ2V0QXR0cmlidXRlKFwic3JjXCIpO2YoYixcImltZ1wiLGEpO2coYixcImltZ1wiLGEpfSl9ZnVuY3Rpb24geCgpe3ZhciBhPWguc2NyaXB0czthJiZhLmxlbmd0aCYmZShhLGZ1bmN0aW9uKGEpe3ZhciBiPWEuZ2V0QXR0cmlidXRlKFwic3JjXCIpO2YoYixcInNjcmlwdFwiLGEpO2coYixcInNjcmlwdFwiLGEpfSl9XG5mdW5jdGlvbiB5KCl7dmFyIGE9aC5zdHlsZVNoZWV0czthJiZhLmxlbmd0aCYmZShhLGZ1bmN0aW9uKGEpe2lmKGE9YS5vd25lck5vZGUpe3ZhciBiPWEuZ2V0QXR0cmlidXRlKFwiaHJlZlwiKTtmKGIsXCJzdHlsZVwiLGEpO2coYixcInN0eWxlXCIsYSl9fSl9ZnVuY3Rpb24geigpe2lmKEEpe3ZhciBhPXEoKTtlKGEsZnVuY3Rpb24oYSl7ZihhLm5hbWUsYS5pbml0aWF0b3JUeXBlKX0pfX1mdW5jdGlvbiBCKCl7ZShxKCksZnVuY3Rpb24oYSl7ZyhhLm5hbWUsYS5pbml0aWF0b3JUeXBlKX0pfWZ1bmN0aW9uIHIoKXt2YXIgYTthPWQubG9jYXRpb24mJmQubG9jYXRpb24ucHJvdG9jb2w/ZC5sb2NhdGlvbi5wcm90b2NvbDp2b2lkIDA7XCJodHRwczpcIj09YSYmKHooKSx3KCkseCgpLHkoKSxCKCkscFx1MDAzQ0MmJnNldFRpbWVvdXQocixEKSl9dmFyIHM9XCJbQ1NNXSBJbnNlY3VyZSBjb250ZW50IGRldGVjdGVkIFwiLHQ9XCJbQ1NNXSBBamF4IHJlcXVlc3QgdG8gc2FtZSBwYWdlIGRldGVjdGVkIFwiLHY9XCJXQVJOXCIsXG5tPXt9LHA9MCxEPWsudWVfbnNpcHx8MUUzLEM9NSxBPTE9PWsudWVfdXJ0LHU9ITA7dWVfY3NtLnVlX2Rpc2FibGVOb25TZWN1cmV8fChkLnBlcmZvcm1hbmNlJiZkLnBlcmZvcm1hbmNlLnNldFJlc291cmNlVGltaW5nQnVmZmVyU2l6ZSYmZC5wZXJmb3JtYW5jZS5zZXRSZXNvdXJjZVRpbWluZ0J1ZmZlclNpemUoMzAwKSxyKCkpfSkodWVfY3NtLHdpbmRvdyxkb2N1bWVudCk7XG5cblxudmFyIHVlX2FhX2EgPSBcIkNcIjtcbmlmICh1ZS50cmlnZ2VyICYmICh1ZV9hYV9hID09PSBcIkNcIiB8fCB1ZV9hYV9hID09PSBcIlQxXCIpKSB7XG4gICAgdWUudHJpZ2dlcihcIlVFREFUQV9BQV9TRVJWRVJTSURFX0FTU0lHTk1FTlRfQ0xJRU5UU0lERV9UUklHR0VSXzE5MDI0OVwiLCB1ZV9hYV9hKTtcbn1cbihmdW5jdGlvbihmLGIpe2Z1bmN0aW9uIGcoKXt0cnl7Yi5QZXJmb3JtYW5jZU9ic2VydmVyJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5QZXJmb3JtYW5jZU9ic2VydmVyJiYoYT1uZXcgYi5QZXJmb3JtYW5jZU9ic2VydmVyKGZ1bmN0aW9uKGIpe2MoYi5nZXRFbnRyaWVzKCkpfSksYS5vYnNlcnZlKGQpKX1jYXRjaChoKXtrKCl9fWZ1bmN0aW9uIG0oKXtmb3IodmFyIGg9ZC5lbnRyeVR5cGVzLGE9MDthXHUwMDNDaC5sZW5ndGg7YSsrKWMoYi5wZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlUeXBlKGhbYV0pKX1mdW5jdGlvbiBjKGEpe2lmKGEmJkFycmF5LmlzQXJyYXkoYSkpe2Zvcih2YXIgYz0wLGU9MDtlXHUwMDNDYS5sZW5ndGg7ZSsrKXt2YXIgZD1sLmluZGV4T2YoYVtlXS5uYW1lKTtpZigtMSE9PWQpe3ZhciBnPU1hdGgucm91bmQoYi5wZXJmb3JtYW5jZS50aW1pbmcubmF2aWdhdGlvblN0YXJ0K2FbZV0uc3RhcnRUaW1lKTtmLnVldChuW2RdLHZvaWQgMCx2b2lkIDAsZyk7YysrfX1sLmxlbmd0aD09PVxuYyYmaygpfX1mdW5jdGlvbiBrKCl7YSYmYS5kaXNjb25uZWN0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5kaXNjb25uZWN0JiZhLmRpc2Nvbm5lY3QoKX1pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi51ZXQmJmIucGVyZm9ybWFuY2UmJlwib2JqZWN0XCI9PT10eXBlb2YgYi5wZXJmb3JtYW5jZSYmYi5wZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlUeXBlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5wZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlUeXBlJiZiLnBlcmZvcm1hbmNlLnRpbWluZyYmXCJvYmplY3RcIj09PXR5cGVvZiBiLnBlcmZvcm1hbmNlLnRpbWluZyYmXCJudW1iZXJcIj09PXR5cGVvZiBiLnBlcmZvcm1hbmNlLnRpbWluZy5uYXZpZ2F0aW9uU3RhcnQpe3ZhciBkPXtlbnRyeVR5cGVzOltcInBhaW50XCJdfSxsPVtcImZpcnN0LXBhaW50XCIsXCJmaXJzdC1jb250ZW50ZnVsLXBhaW50XCJdLG49W1wiZnBcIixcImZjcFwiXSxhO3RyeXttKCksZygpfWNhdGNoKHApe2YudWVMb2dFcnJvcihwLHtsb2dMZXZlbDpcIkVSUk9SXCIsXG5hdHRyaWJ1dGlvbjpcInBlcmZvcm1hbmNlTWV0cmljc1wifSl9fX0pKHVlX2NzbSx3aW5kb3cpO1xuXG5cbmlmICh3aW5kb3cuY3NhKSB7XG4gICAgY3NhKFwiRXZlbnRzXCIpKFwic2V0RW50aXR5XCIsIHtcbiAgICAgICAgcGFnZTp7cGFnZVR5cGU6IFwiRGV0YWlsXCIsIHN1YlBhZ2VUeXBlOiBcIkdsYW5jZVwiLCBwYWdlVHlwZUlkOiBcIkIwMUdLUUkzOTJcIn1cbiAgICB9KTtcbn1cblxufVxuLyog4pesICovXG5cdTAwM0Mvc2NyaXB0PlxuXG5cdTAwM0MvZGl2PlxuXG5cdTAwM0Nub3NjcmlwdD5cbiAgICBcdTAwM0NpbWcgaGVpZ2h0PVwiMVwiIHdpZHRoPVwiMVwiIHN0eWxlPSdkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW47JyBzcmM9Jy8vZmxzLW5hLmFtYXpvbi5jb20vMS9iYXRjaC8xL09QL0FUVlBES0lLWDBERVI6MTQ1LTg5NzUzOTAtNTA2NDExMzo0NzVFMzRKUVY5Rk5QSEo5U1NURCR1ZWRhdGE9czolMkZncCUyRnVlZGF0YSUzRm5vc2NyaXB0JTI2aWQlM0Q0NzVFMzRKUVY5Rk5QSEo5U1NURDowJyBhbHQ9XCJcIi8+XG5cdTAwM0Mvbm9zY3JpcHQ+XG5cdTAwM0MvZGl2PlxuXHUwMDNDIS0tICAgICAgIF9cbiAgICAgICAuX18oLilcdTAwM0MgKE1FT1cpXG4gICAgICAgIFxcX19fKSAgIFxuIH5+fn5+fn5+fn5+fn5+fn5+fi0tPlxuXHUwMDNDIS0tIHNwOmVoOkpVaU1PVElqNGlXbjgzMlloUGM4eCtPTU5YQTZGNWlYZDJ6aDFoRjZaZVF6S0NQMUU5cjBnRGdOeFZ1UXdNUmJ0b29ZbmQ4ZnhrcEFZY1pVMG9LQkJ4SkYrSGxhY0paRnV5eTZWNnNUakd0d1M0VGxyZmdoNnc9PSAtLT5cblx1MDAzQ2RpdiBpZD1cImEtcG9wb3Zlci1yb290XCIgc3R5bGU9XCJ6LWluZGV4Oi0xO3Bvc2l0aW9uOmFic29sdXRlO1wiPlx1MDAzQy9kaXY+XHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2h0bWxcIiBpZD1cInMtc3VnZ2VzdGlvblwiPlx1MDAzQ2RpdiBpZD1cIlx1MDAzQyM9IHN1Z2dlc3Rpb25JZCAjPlwiY2xhc3M9XCJzLXN1Z2dlc3Rpb25cImRhdGEtYWxpYXM9XCJcdTAwM0MjPSBhbGlhcyAjPlwiZGF0YS1rZXl3b3JkPVwiXHUwMDNDIz0ga2V5d29yZCAjPlwiZGF0YS1zdG9yZT1cIlx1MDAzQyM9IHN0b3JlICM+XCJkYXRhLWlzU2M9XCJcdTAwM0MjPSBpc1NwZWxsQ29ycmVjdGVkICM+XCJkYXRhLWlzRmI9XCJcdTAwM0MjPSBpc0ZhbGxiYWNrICM+XCJkYXRhLXR5cGU9XCJcdTAwM0MjPSB0eXBlICM+XCJkYXRhLW5pZD1cIlx1MDAzQyM9IGJyb3dzZU5vZGVJZCAjPlwiZGF0YS1yZWZ0YWc9XCJcdTAwM0MjPSByZWZUYWcgIz5cImRhdGEtY3JpZD1cIlx1MDAzQyM9IGNvbXBsZXRpb25SZXNwb25zZUlkICM+XCI+XHUwMDNDIyBpZiAoIXNraXBEaXNwbGF5KSB7IGZvciAodmFyIGkgPSAwOyBpIFx1MDAzQyBoaWdobGlnaHRGcmFnbWVudHMubGVuZ3RoOyBpKyspIHtpZiAoIWhpZ2hsaWdodEZyYWdtZW50c1tpXS5pc0hpdCkgeyAjPlx1MDAzQ3NwYW4gY2xhc3M9XCJzLWhlYXZ5XCI+XHUwMDNDIyB9ICM+XHUwMDNDIz0gaGlnaGxpZ2h0RnJhZ21lbnRzW2ldLnRleHQgIz5cdTAwM0MjIGlmICghaGlnaGxpZ2h0RnJhZ21lbnRzW2ldLmlzSGl0KSB7ICM+XHUwMDNDL3NwYW4+XHUwMDNDIyB9ICM+XHUwMDNDIyB9ICM+XHUwMDNDIyB9ICM+XHUwMDNDIyBpZiAodHlwZW9mIHN0b3JlSHRtbCA9PT0gXCJzdHJpbmdcIikgeyAjPiBcdTAwM0MjPSBzdG9yZUh0bWwgIz5cdTAwM0MjIH0gIz5cdTAwM0MvZGl2Plx1MDAzQy9zY3JpcHQ+XHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2h0bWxcIiBpZD1cInN1Z2dlc3Rpb25zLXRlbXBsYXRlXCI+XHUwMDNDZGl2IGlkPVwic3VnZ2VzdGlvbnMtdGVtcGxhdGVcIj5cdTAwM0MjIGlmICh0eXBlb2Ygc3VnZ2VzdGlvblRpdGxlICE9PSBcInVuZGVmaW5lZFwiKSB7ICM+XHUwMDNDZGl2IGlkPVwic3VnZ2VzdGlvbi10aXRsZVwiPlx1MDAzQyM9IHN1Z2dlc3Rpb25UaXRsZSAjPlx1MDAzQy9kaXY+XHUwMDNDIyB9ICM+XHUwMDNDIyBpZiAodHlwZW9mIGJpYVRpdGxlICE9PSBcInVuZGVmaW5lZFwiKSB7ICM+XHUwMDNDYSBocmVmPVwiXHUwMDNDIz0gYmlhV2lkZ2V0VXJsICM+XCIgc3R5bGU9XCJ0ZXh0LWRlY29yYXRpb246IG5vbmUgIWltcG9ydGFudDtcIj5cdTAwM0NwIGNsYXNzPVwicy1iaWEtc3VnZ2VzdGlvblwiPlx1MDAzQ3N0cm9uZz5cdTAwM0MjPSBiaWFUaXRsZSAjPlx1MDAzQy9zdHJvbmc+XHUwMDNDL3A+XHUwMDNDL2E+XHUwMDNDIyB9ICM+XHUwMDNDZGl2IGlkPVwic3VnZ2VzdGlvbnNcIiBkaXI9XCJhdXRvXCI+XHUwMDNDIyBpZiAodHlwZW9mIHN1Z2dlc3Rpb25zICE9PSBcInVuZGVmaW5lZFwiKSB7Zm9yKHZhciBpPTA7IGkgXHUwMDNDIHN1Z2dlc3Rpb25zLmxlbmd0aDsgaSsrKSB7dmFyIGRpc3BsYXlTdHJpbmcgPSBzdWdnZXN0aW9uc1tpXS5kaXNwbGF5OyAjPlx1MDAzQyM9IGRpc3BsYXlTdHJpbmcgIz5cdTAwM0MjIH19ICM+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQy9zY3JpcHQ+XHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2h0bWxcIiBpZD1cInByb21vdGVkLXN1Z2dlc3Rpb25cIj5cdTAwM0NkaXYgY2xhc3M9XCJzLXN1Z2dlc3Rpb24gcy1zdWdnZXN0aW9uLWxpbmstdGVtcGxhdGVcIj5cdTAwM0NhIGhyZWY9XCJcdTAwM0MjPSB3aWRnZXRJdGVtc1swXS5tZXRhZGF0YS5saW5rX3VybCAjPlwiPlx1MDAzQyNmb3IgKHZhciBpID0gMDsgaSBcdTAwM0MgaGlnaGxpZ2h0RnJhZ21lbnRzLmxlbmd0aDsgaSsrKSB7aWYgKGhpZ2hsaWdodEZyYWdtZW50c1tpXS5pc0hpZ2hsaWdodCkgeyAjPlx1MDAzQ3NwYW4gY2xhc3M9XCJzLWhlYXZ5XCI+XHUwMDNDIyB9ICM+XHUwMDNDIz0gaGlnaGxpZ2h0RnJhZ21lbnRzW2ldLnRleHQgIz5cdTAwM0MjIGlmIChoaWdobGlnaHRGcmFnbWVudHNbaV0uaXNIaWdobGlnaHQpIHsgIz5cdTAwM0Mvc3Bhbj5cdTAwM0MjIH0gIz5cdTAwM0MjIH0gIz5cdTAwM0MvYT5cdTAwM0MvZGl2Plx1MDAzQy9zY3JpcHQ+XHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2h0bWxcIiBpZD1cInMtcmVjZW50U2VhcmNoXCI+XHUwMDNDZGl2IGlkPVwiXHUwMDNDIz0gc3VnZ2VzdGlvbklkICM+XCIgY2xhc3M9XCJzLXN1Z2dlc3Rpb24gcy1yZWNlbnRTZWFyY2ggcy1yZWNlbnRTZWFyY2hEaXN0aW5jdFwiIGRhdGEtYWxpYXM9XCJcdTAwM0MjPSBhbGlhcyAjPlwiIGRhdGEta2V5d29yZD1cIlx1MDAzQyM9IGtleXdvcmQgIz5cIiBkYXRhLXN0b3JlPVwiXHUwMDNDIz0gc3RvcmUgIz5cIiBkYXRhLWlzU2M9XCJmYWxzZVwiIGRhdGEtaXNGYj1cImZhbHNlXCIgZGF0YS10eXBlPVwiXHUwMDNDIz0gdHlwZSAjPlwiPlx1MDAzQ3NwYW4gY2xhc3M9XCJzLWhlYXZ5XCI+XHUwMDNDIz0gYnByZWZpeCAjPlx1MDAzQy9zcGFuPlx1MDAzQyM9IHByZWZpeCAjPlx1MDAzQ3NwYW4gY2xhc3M9XCJzLWhlYXZ5XCI+XHUwMDNDIz0gc3VmZml4ICM+XHUwMDNDL3NwYW4+XHUwMDNDIyBpZiAodHlwZW9mIHN0b3JlSHRtbCA9PT0gXCJzdHJpbmdcIikgeyAjPiBcdTAwM0MjPSBzdG9yZUh0bWwgIz5cdTAwM0MjIH0gIz5cdTAwM0NzcGFuIGlkPVwiZGVsZXRlLVx1MDAzQyM9IHN1Z2dlc3Rpb25JZCAjPlwiIGNsYXNzPVwicy1zdWdnZXN0aW9uLWRlbGV0ZURpc3RpbmN0XCI+XHUwMDNDaSBpZD1cImRlbGV0ZS1pY29uLVx1MDAzQyM9IHN1Z2dlc3Rpb25JZCAjPlwiIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1yZW1vdmVcIj5cdTAwM0MvaT5cdTAwM0Mvc3Bhbj4gXHUwMDNDL2Rpdj5cdTAwM0Mvc2NyaXB0Plx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9odG1sXCIgaWQ9XCJzLXNlcGFyYXRvclwiPlx1MDAzQ2RpdiBpZD1cInMtc2VwYXJhdG9yXCI+XHUwMDNDZGl2IGNsYXNzPVwicy1zZXBhcmF0b3JcIj5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL3NjcmlwdD5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvaHRtbFwiIGlkPVwicy1vcHRpb25cIj5cdTAwM0NvcHRpb24gdmFsdWU9XCJcdTAwM0MjPSB2YWx1ZSAjPlwiPlx1MDAzQyM9IHN0b3JlICM+XHUwMDNDL29wdGlvbj5cdTAwM0Mvc2NyaXB0Plx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9odG1sXCIgaWQ9XCJzLW1pbmltYWxcIj5cdTAwM0NkaXYgY2xhc3M9XCJzLXN1Z2dlc3Rpb24gcy1jdXN0b21cIiBkYXRhLXVybD1cIlx1MDAzQyM9IHVybCAjPlwiPlx1MDAzQyM9IGJwcmVmaXggIz5cdTAwM0NzcGFuIGNsYXNzPVwicy1oZWF2eVwiPlx1MDAzQyM9IHByZWZpeCAjPlx1MDAzQy9zcGFuPlx1MDAzQyM9IHN1ZmZpeCAjPlx1MDAzQy9kaXY+XHUwMDNDL3NjcmlwdD5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvaHRtbFwiIGlkPVwicy1zdG9yZVRleHRcIj5cdTAwM0NzcGFuIGNsYXNzPVwiXHUwMDNDIz0gY3NzQ2xhc3NlcyAjPlwiPlx1MDAzQyM9IHN0b3JlICM+XHUwMDNDL3NwYW4+XHUwMDNDL3NjcmlwdD5cdTAwM0NzY3JpcHQgdHlwZT1cInRleHQvaHRtbFwiIGlkPVwicy1uZXh0U2VhcmNoXCI+XHUwMDNDZGl2IGlkPVwiXHUwMDNDIz0gc3VnZ2VzdGlvbklkICM+XCIgXHUwMDNDIyBpZiAobmV4dFNlYXJjaFRlbXBsYXRlVHlwZSA9PT0gXCJUMlwiKSB7ICM+Y2xhc3M9XCJzLXN1Z2dlc3Rpb24gcy1uZXh0U2VhcmNoIHMtbmV4dFNlYXJjaC1ibG9jayBzLW5leHRTZWFyY2gtY2VsbFwiIFx1MDAzQyMgfSBlbHNlIHsgIz5jbGFzcz1cInMtc3VnZ2VzdGlvbiBzLW5leHRTZWFyY2hcIiBcdTAwM0MjIH0gIz5kYXRhLWFsaWFzPVwiXHUwMDNDIz0gYWxpYXMgIz5cIiBkYXRhLWtleXdvcmQ9XCJcdTAwM0MjPSBrZXl3b3JkcyAjPlwiIGRhdGEtaXNTYz1cImZhbHNlXCIgZGF0YS1pc0ZiPVwiZmFsc2VcIiBkYXRhLXR5cGU9XCJcdTAwM0MjPSB0eXBlICM+XCI+XHUwMDNDIz0ga2V5d29yZHMgIz5cdTAwM0MvZGl2Plx1MDAzQy9zY3JpcHQ+XHUwMDNDc2NyaXB0IHR5cGU9XCJ0ZXh0L2h0bWxcIiBpZD1cInMtcXUtc3VnZ2VzdGlvblwiPlx1MDAzQ2RpdiBpZD1cIlx1MDAzQyM9IHN1Z2dlc3Rpb25JZCAjPlwiY2xhc3M9XCJzLXN1Z2dlc3Rpb24gcy1xdS1zdWdnZXN0aW9uXCJkYXRhLWtleXdvcmQ9XCJcdTAwM0MjPSBrZXl3b3JkICM+XCJkYXRhLXN0b3JlPVwiXHUwMDNDIz0gc3RvcmUgIz5cImRhdGEtaXNTYz1cIlx1MDAzQyM9IGlzU3BlbGxDb3JyZWN0ZWQgIz5cImRhdGEtdHlwZT1cIlx1MDAzQyM9IHR5cGUgIz5cImRhdGEtcXUtdHlwZT1cIlx1MDAzQyM9IHF1LnR5cGUgIz5cImRhdGEtcXUtdmFsdWU9XCJcdTAwM0MjPSBxdS52YWx1ZSAjPlwiZGF0YS1jcmlkPVwiXHUwMDNDIz0gY29tcGxldGlvblJlc3BvbnNlSWQgIz5cIj5cdTAwM0NzcGFuIGNsYXNzPVwicy1xdS1kaXNwbGF5LXN0cmluZ1wiPlx1MDAzQyM9IHF1LmRpc3BsYXlTdHJpbmcgICM+XHUwMDNDL3NwYW4+XHUwMDNDL2Rpdj5cdTAwM0Mvc2NyaXB0Plx1MDAzQ3NjcmlwdCB0eXBlPVwidGV4dC9odG1sXCIgaWQ9XCJhc2luXCI+XHUwMDNDZGl2IGNsYXNzPVwicy1hc2luLXN1Z2dlc3Rpb24gcy1zdWdnZXN0aW9uXCI+XHUwMDNDYSBjbGFzcz1cInMtYXNpbi1zdWctbGlua1wiIGhyZWY9XCJcdTAwM0MjPSB3aWRnZXRJdGVtc1swXS5tZXRhZGF0YS5saW5rX3VybCAjPlwiPlx1MDAzQ2RpdiBjbGFzcz1cInMtYXNpbi1zdWctbGVmdFwiPlx1MDAzQ2RpdiBjbGFzcz1cInMtYXNpbi1pbWFnZS1jb250YWluZXJcIiBzdHlsZT1cIm9wYWNpdHk6IDE7XCI+XHUwMDNDaW1nIGNsYXNzPVwicy1hc2luLWltYWdlXCIgc3JjPVwiXHUwMDNDIz0gd2lkZ2V0SXRlbXNbMF0ubWV0YWRhdGEuaW1hZ2VfdXJsICM+XCI+XHUwMDNDL2Rpdj5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cInMtYXNpbi1zdWctcmlnaHRcIj5cdTAwM0NkaXYgY2xhc3M9XCJzLXNpemUtbWluaSBzLXN1Zy1wcC1jYXB0aW9uXCI+XHUwMDNDIz0gd2lkZ2V0SXRlbXNbMF0ubWV0YWRhdGEuYXNpbl9oZWFkZXIgIz5cdTAwM0MvZGl2Plx1MDAzQ2RpdiBjbGFzcz1cInMtYXNpbi10aXRsZVwiPlx1MDAzQyM9IHdpZGdldEl0ZW1zWzBdLm1ldGFkYXRhLmFzaW5fdGl0bGUgIz5cdTAwM0MvZGl2Plx1MDAzQy9kaXY+XHUwMDNDL2E+XHUwMDNDL2Rpdj5cdTAwM0Mvc2NyaXB0PlxuXG4gICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuXG4gICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFx1MDAzQy9ib2R5Plx1MDAzQy9odG1sPiJ9
    http_version: 
  recorded_at: Sun, 29 Sep 2019 22:01:06 GMT
recorded_with: VCR 5.0.0
